void sub_188CD2828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CD2928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODataSetURLOverrideReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 148))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODataSetURLOverrideReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 152));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 144) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 148) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODataSetURLOverrideReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODataSetURLOverrideReadAllFrom_initialTag;
  Specified = GEODataSetURLOverrideReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 152));
  return Specified;
}

void sub_188CD2B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CD2ED0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CD31EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODisplayStringReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODisplayStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CD3D5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODisplayStringIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOMuninBucketReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOMuninBucketReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CD4B80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMuninBucketIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_41;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 5)
        break;
      if ((_DWORD)v16 == 4)
      {
        if (v14 != 2)
          goto LABEL_43;
      }
      else if ((_DWORD)v16 == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_40;
        }
LABEL_37:
        a1[*v4] = 1;
        goto LABEL_40;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_43:
        v28 = 0;
        goto LABEL_42;
      }
LABEL_40:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_41;
    }
    if ((v8 & 7) != 0)
      goto LABEL_43;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      if (v25 == -1 || v25 >= *(_QWORD *)&a1[*v3])
        goto LABEL_37;
      v26 = v25 + 1;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_40;
    }
  }
LABEL_41:
  v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOMuninVersionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  GEOCoverageExtent *v23;
  id v24;
  void *v25;
  _BOOL8 v26;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v23 = objc_alloc_init(GEOCoverageExtent);
          if (!GEOCoverageExtentReadAllFrom((uint64_t)v23, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addCoverage:", v23, 0, 0);

        }
        else if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_36;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v19;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v24 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v25 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v24;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_188CD5D20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMuninVersionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOMuninVersionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CD5D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMuninVersionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOCoverageExtentIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEOOfflineMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOOfflineMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CD6C68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOfflineMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v15++ > 8;
            if (!v20)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v21 = 0;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v24 = v23 + 1;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0)
      {
        v20 = v21++ > 8;
        if (!v20)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

void sub_188CD74BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  _BOOL4 v20;
  int *v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  GEOAttribution *v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  __int16 v64;
  void *v65;
  char v67;
  char v68;
  int v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFCFFFAFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = v7 != 0;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = 1;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_109;
        v67 = v17;
        v69 = v20 | v18 | v17;
        v70 = (v19 == 0) | v18;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v68 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_107;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v21;
      v29 = *(_QWORD *)(v3 + v28);
      if (v29 == -1 || v29 >= *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v31 = v26++ >= 9;
      if (v31)
      {
        v27 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v32 || (v27 & 7) == 4)
    {
LABEL_107:
      v22 = 1;
      goto LABEL_108;
    }
    v34 = v27 >> 3;
    v35 = v18;
    if ((v70 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_90;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (1)
        {
          v43 = *v21;
          v44 = *(_QWORD *)(v3 + v43);
          if (v44 == -1 || v44 >= *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v44);
          *(_QWORD *)(v3 + v43) = v44 + 1;
          v42 |= (unint64_t)(v45 & 0x7F) << v40;
          if ((v45 & 0x80) == 0)
            goto LABEL_93;
          v40 += 7;
          v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_95;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_93:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v42) = 0;
LABEL_95:
        v61 = 84;
        goto LABEL_104;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_90;
        v49 = 0;
        v50 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 96) |= 2u;
        while (2)
        {
          v51 = *v21;
          v52 = *(_QWORD *)(v3 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v52);
            *(_QWORD *)(v3 + v51) = v52 + 1;
            v42 |= (unint64_t)(v53 & 0x7F) << v49;
            if (v53 < 0)
            {
              v49 += 7;
              v31 = v50++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v42) = 0;
LABEL_99:
        v61 = 88;
        goto LABEL_104;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_90;
        v54 = 0;
        v55 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 96) |= 4u;
        while (2)
        {
          v56 = *v21;
          v57 = *(_QWORD *)(v3 + v56);
          if (v57 == -1 || v57 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v57);
            *(_QWORD *)(v3 + v56) = v57 + 1;
            v42 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v42) = 0;
LABEL_103:
        v61 = 92;
LABEL_104:
        *(_DWORD *)(a1 + v61) = v42;
        goto LABEL_105;
      case 4:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x80) != 0)
          goto LABEL_90;
        PBReaderReadString();
        v59 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
        if (v59)
          -[GEORegionalResource _addNoFlagsIcon:](a1, v59);
        goto LABEL_88;
      case 5:
        goto LABEL_53;
      case 6:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x20) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v59 = objc_alloc_init(GEOAttribution);
        if (GEOAttributionReadAllFrom((uint64_t)v59, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEORegionalResource _addNoFlagsAttribution:](a1, v59);
LABEL_88:

LABEL_89:
          LOBYTE(v18) = v68;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_105:
          if ((v69 & 1) == 0)
            goto LABEL_107;
LABEL_106:
          if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_107;
          continue;
        }

LABEL_127:
        v22 = 0;
        LOBYTE(v18) = v68;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
        LOBYTE(v17) = v67;
LABEL_109:
        if ((v17 & 1) != 0)
LABEL_110:
          *(_WORD *)(a1 + 96) |= 8u;
        if (v18 & 1 | ((v22 & 1) == 0))
        {
          *(_WORD *)(a1 + 96) |= 0x80u;
          *(_WORD *)(a1 + 96) |= 0x20u;
          *(_WORD *)(a1 + 96) |= 0x40u;
          *(_WORD *)(a1 + 96) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            v63 = *v19++;
            v62 = v63;
            v64 = 128;
            switch(v63)
            {
              case 0:
                goto LABEL_120;
              case 1:
              case 2:
              case 3:
              case 5:
                continue;
              case 4:
                goto LABEL_119;
              case 6:
                v64 = 32;
                goto LABEL_119;
              case 7:
                v64 = 64;
                goto LABEL_119;
              default:
                if (v62 != 29)
                  continue;
                v64 = 16;
LABEL_119:
                *(_WORD *)(a1 + 96) |= v64;
                break;
            }
          }
        }
LABEL_120:
        if (v22)
        {
          v3 = *(_BYTE *)(v3 + *v23) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_124:
          v65 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_124;
        }
        return v3;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 96) & 0x40) != 0)
          goto LABEL_90;
        PBReaderReadString();
        v59 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
        if (v59)
          -[GEORegionalResource _addNoFlagsIconChecksum:](a1, v59);
        goto LABEL_88;
      default:
        if ((_DWORD)v34 == 29)
        {
          if (v35 && (*(_WORD *)(a1 + 96) & 0x10) == 0)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_127;
            -[GEORegionalResource _reserveTileRanges:](a1, 1uLL);
            if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(_QWORD *)(a1 + 24) + 24 * *(_QWORD *)(a1 + 32)), v3))
              goto LABEL_127;
            PBReaderRecallMark();
            ++*(_QWORD *)(a1 + 32);
            goto LABEL_89;
          }
LABEL_90:
          v60 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          LOBYTE(v18) = v68;
          if ((v60 & v69 & 1) == 0)
          {
            v22 = v60;
            goto LABEL_108;
          }
          goto LABEL_106;
        }
LABEL_53:
        if ((v67 & 1) == 0 || (*(_WORD *)(a1 + 96) & 8) != 0)
          goto LABEL_90;
        if (!*(_QWORD *)(a1 + 16))
        {
          v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v47 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v46;

        }
        v48 = PBUnknownFieldAdd();
        LOBYTE(v18) = v68;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        if (!v48)
        {
          v22 = 0;
          goto LABEL_110;
        }
        goto LABEL_105;
    }
  }
}

void sub_188CD7F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CD8044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CD87F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

uint64_t GEORegionalResourceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORegionalResourceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORegionalResourceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORegionalResourceReadAllFrom_initialTag;
  Specified = GEORegionalResourceReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORegionalResourceCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188CD8B4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CD8F70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CD93BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEORegionalResourceIndexDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEORegionalResourceIndexDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEORegionalResourceIndex<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEORegionalResourceIndexDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  char v3;
  void *v4;
  void *v6;
  void *v7;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *((_BYTE *)a1 + 12);
  if ((v3 & 1) == 0)
  {
    if ((a1[3] & 2) == 0)
      goto LABEL_3;
LABEL_7:
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[1]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v7, CFSTR("iconIndex"));

    if ((a1[3] & 4) == 0)
      return v2;
    goto LABEL_4;
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v6, CFSTR("attributionIndex"));

  v3 = *((_BYTE *)a1 + 12);
  if ((v3 & 2) != 0)
    goto LABEL_7;
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_4:
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[2]);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v4, CFSTR("regionalResourceIndex"));

  }
  return v2;
}

void _GEORegionalResourceIndexFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a1;
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("regionalResourceIndex"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 12) |= 4u;
    *(_DWORD *)(a2 + 8) = objc_msgSend(v3, "unsignedIntValue");
  }

  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("iconIndex"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 12) |= 2u;
    *(_DWORD *)(a2 + 4) = objc_msgSend(v4, "unsignedIntValue");
  }

  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("attributionIndex"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 12) |= 1u;
    *(_DWORD *)a2 = objc_msgSend(v5, "unsignedIntValue");
  }

}

BOOL GEORegionalResourceIndexReadFrom(uint64_t a1, uint64_t a2)
{
  return GEORegionalResourceIndexReadAllFrom(a1, a2);
}

BOOL GEORegionalResourceIndexReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  _DWORD *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  unint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  _DWORD *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (_DWORD *)(a1 + 4);
    v8 = (_DWORD *)(a1 + 8);
    v9 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v3;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        if (v11++ >= 9)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v19 = v12 >> 3;
      if ((v12 >> 3) == 3)
      {
        v28 = 0;
        v29 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v31);
          *(_QWORD *)(a2 + v30) = v31 + 1;
          v22 |= (unint64_t)(v32 & 0x7F) << v28;
          if ((v32 & 0x80) == 0)
          {
            v27 = (_DWORD *)a1;
            goto LABEL_48;
          }
          v28 += 7;
          v26 = v29++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            v27 = (_DWORD *)a1;
            goto LABEL_50;
          }
        }
        v27 = (_DWORD *)a1;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v19 == 2)
        break;
      if ((_DWORD)v19 == 1)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 12) |= 4u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          {
            v27 = v8;
            goto LABEL_47;
          }
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            break;
          v20 += 7;
          v26 = v21++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            v27 = v8;
            goto LABEL_50;
          }
        }
        v27 = v8;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v33 = 0;
    v34 = 0;
    v22 = 0;
    *(_BYTE *)(a1 + 12) |= 2u;
    while (1)
    {
      v35 = *v3;
      v36 = *(_QWORD *)(a2 + v35);
      if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
      {
        v27 = v7;
        goto LABEL_47;
      }
      v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v36);
      *(_QWORD *)(a2 + v35) = v36 + 1;
      v22 |= (unint64_t)(v37 & 0x7F) << v33;
      if ((v37 & 0x80) == 0)
        break;
      v33 += 7;
      v26 = v34++ > 8;
      if (v26)
      {
        LODWORD(v22) = 0;
        v27 = v7;
        goto LABEL_50;
      }
    }
    v27 = v7;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v22) = 0;
LABEL_50:
    *v27 = v22;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t GEORegionalResourceIndexWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 12);
  if ((v2 & 4) != 0)
  {
    result = PBDataWriterWriteUint32Field();
    v2 = *(_BYTE *)(v1 + 12);
    if ((v2 & 2) == 0)
    {
LABEL_3:
      if ((v2 & 1) == 0)
        return result;
      return PBDataWriterWriteUint32Field();
    }
  }
  else if ((*(_BYTE *)(result + 12) & 2) == 0)
  {
    goto LABEL_3;
  }
  result = PBDataWriterWriteUint32Field();
  if ((*(_BYTE *)(v1 + 12) & 1) != 0)
    return PBDataWriterWriteUint32Field();
  return result;
}

BOOL GEORegionalResourceIndexEquals(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GEORegionalResourceIndexHash()
{
  return PBHashBytes();
}

BOOL GEORegionalResourceIndexIsValid(void *a1)
{
  _BOOL8 AllFrom;
  _QWORD v4[4];

  v4[2] = objc_msgSend(a1, "position");
  v4[3] = objc_msgSend(a1, "length");
  v4[0] = 0;
  v4[1] = 0;
  AllFrom = GEORegionalResourceIndexReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_188CDA108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOResourceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 64);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

uint64_t GEOResourceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOResourceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CDBBE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOResourceFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  _BOOL8 v36;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_59;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_59;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_61;
LABEL_38:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v26 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v27 = *v2;
              v28 = *(_QWORD *)&a1[v27];
              if (v28 == -1 || v28 >= *(_QWORD *)&a1[*v3])
                break;
              v29 = v28 + 1;
              v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
              *(_QWORD *)&a1[v27] = v29;
              if (v30 < 0)
              {
                v12 = v26++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0)
          goto LABEL_61;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v14++;
            if (v20 <= 8)
              continue;
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_61;
LABEL_58:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_59;
    }
    if (v14 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v31 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v32 = *v2;
          v33 = *(_QWORD *)&a1[v32];
          if (v33 == -1 || v33 >= *(_QWORD *)&a1[*v3])
            break;
          v34 = v33 + 1;
          v35 = *(char *)(*(_QWORD *)&a1[*v5] + v33);
          *(_QWORD *)&a1[v32] = v34;
          if (v35 < 0)
          {
            v12 = v31++ >= 9;
            if (!v12)
              continue;
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0)
      goto LABEL_61;
    while (1)
    {
      v21 = *v2;
      v22 = *(_QWORD *)&a1[v21];
      if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v23 = v22 + 1;
      v24 = *(char *)(*(_QWORD *)&a1[*v5] + v22);
      *(_QWORD *)&a1[v21] = v23;
      if (v24 < 0)
      {
        v25 = v14++;
        if (v25 <= 8)
          continue;
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

void sub_188CDC308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOResourceIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if ((*(_WORD *)(a1 + 112) & 0x1F00) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 112) & 0x800) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 64);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOResourceFilterIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOResourceIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOResourceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188CDCA80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOResourceFilterReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOResourceFilterReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CDDA98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDDC70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOResourceFilterIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_BYTE *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_188CDDFCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDE394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDE6D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDEA0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDED48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDF084(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDF3C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDF6FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDFA34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDFD70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CDFEB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE0000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE0148(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE0290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE03D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE0520(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE0668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE07B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE0AEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE0E28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE1164(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE14A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE17D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE191C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE1A64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE1BAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE1CF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE1E3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE1F84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE20C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE220C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE2548(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE2690(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE27D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE2918(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE2A60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE2BA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE2CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE30F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE342C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE37CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE3B08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE3C50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE3D98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE3EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE4028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE4170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE42B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE4400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE4544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE468C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE49C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE4D68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE50A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CE53E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CEA47C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CEA544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOResourcesCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _BYTE v119[128];
  _BYTE v120[128];
  _BYTE v121[128];
  _BYTE v122[128];
  _BYTE v123[128];
  _BYTE v124[128];
  _BYTE v125[128];
  _BYTE v126[128];
  _BYTE v127[128];
  _BYTE v128[128];
  _BYTE v129[128];
  _BYTE v130[128];
  _BYTE v131[128];
  uint64_t v132;

  v132 = *MEMORY[0x1E0C80C00];
  v115 = 0u;
  v116 = 0u;
  v117 = 0u;
  v118 = 0u;
  v2 = a1[53];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v115, v131, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v116;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v116 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v115 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v115, v131, 16);
    }
    while (v4);
  }

  v113 = 0u;
  v114 = 0u;
  v111 = 0u;
  v112 = 0u;
  v7 = a1[54];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v111, v130, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v112;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v112 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v111 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v111, v130, 16);
    }
    while (v9);
  }

  v109 = 0u;
  v110 = 0u;
  v107 = 0u;
  v108 = 0u;
  v12 = a1[41];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v107, v129, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v108;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v108 != v15)
          objc_enumerationMutation(v12);
        -[GEORegionalResource readAll:](*(_QWORD *)(*((_QWORD *)&v107 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v107, v129, 16);
    }
    while (v14);
  }

  v105 = 0u;
  v106 = 0u;
  v103 = 0u;
  v104 = 0u;
  v17 = a1[8];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v103, v128, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v104;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v104 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v103 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v103, v128, 16);
    }
    while (v19);
  }

  objc_msgSend(a1[56], "readAll:", 1);
  v101 = 0u;
  v102 = 0u;
  v99 = 0u;
  v100 = 0u;
  v22 = a1[27];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v99, v127, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v100;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v100 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v99 + 1) + 8 * v26++), "readAll:", 1);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v99, v127, 16);
    }
    while (v24);
  }

  v97 = 0u;
  v98 = 0u;
  v95 = 0u;
  v96 = 0u;
  v27 = a1[44];
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v95, v126, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v96;
    do
    {
      v31 = 0;
      do
      {
        if (*(_QWORD *)v96 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v95 + 1) + 8 * v31++), "readAll:", 1);
      }
      while (v29 != v31);
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v95, v126, 16);
    }
    while (v29);
  }

  v93 = 0u;
  v94 = 0u;
  v91 = 0u;
  v92 = 0u;
  v32 = a1[18];
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v91, v125, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v92;
    do
    {
      v36 = 0;
      do
      {
        if (*(_QWORD *)v92 != v35)
          objc_enumerationMutation(v32);
        objc_msgSend(*(id *)(*((_QWORD *)&v91 + 1) + 8 * v36++), "readAll:", 1);
      }
      while (v34 != v36);
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v91, v125, 16);
    }
    while (v34);
  }

  v89 = 0u;
  v90 = 0u;
  v87 = 0u;
  v88 = 0u;
  v37 = a1[17];
  v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v87, v124, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v88;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v88 != v40)
          objc_enumerationMutation(v37);
        -[GEODataSetURLOverride readAll:](*(_QWORD *)(*((_QWORD *)&v87 + 1) + 8 * v41++), 1);
      }
      while (v39 != v41);
      v39 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v87, v124, 16);
    }
    while (v39);
  }

  v85 = 0u;
  v86 = 0u;
  v83 = 0u;
  v84 = 0u;
  v42 = a1[32];
  v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v83, v123, 16);
  if (v43)
  {
    v44 = v43;
    v45 = *(_QWORD *)v84;
    do
    {
      v46 = 0;
      do
      {
        if (*(_QWORD *)v84 != v45)
          objc_enumerationMutation(v42);
        objc_msgSend(*(id *)(*((_QWORD *)&v83 + 1) + 8 * v46++), "readAll:", 1);
      }
      while (v44 != v46);
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v83, v123, 16);
    }
    while (v44);
  }

  v81 = 0u;
  v82 = 0u;
  v79 = 0u;
  v80 = 0u;
  v47 = a1[55];
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v79, v122, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v80;
    do
    {
      v51 = 0;
      do
      {
        if (*(_QWORD *)v80 != v50)
          objc_enumerationMutation(v47);
        objc_msgSend(*(id *)(*((_QWORD *)&v79 + 1) + 8 * v51++), "readAll:", 1);
      }
      while (v49 != v51);
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v79, v122, 16);
    }
    while (v49);
  }

  v77 = 0u;
  v78 = 0u;
  v75 = 0u;
  v76 = 0u;
  v52 = a1[31];
  v53 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v75, v121, 16);
  if (v53)
  {
    v54 = v53;
    v55 = *(_QWORD *)v76;
    do
    {
      v56 = 0;
      do
      {
        if (*(_QWORD *)v76 != v55)
          objc_enumerationMutation(v52);
        objc_msgSend(*(id *)(*((_QWORD *)&v75 + 1) + 8 * v56++), "readAll:", 1);
      }
      while (v54 != v56);
      v54 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v75, v121, 16);
    }
    while (v54);
  }

  v73 = 0u;
  v74 = 0u;
  v71 = 0u;
  v72 = 0u;
  v57 = a1[21];
  v58 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v71, v120, 16);
  if (v58)
  {
    v59 = v58;
    v60 = *(_QWORD *)v72;
    do
    {
      v61 = 0;
      do
      {
        if (*(_QWORD *)v72 != v60)
          objc_enumerationMutation(v57);
        objc_msgSend(*(id *)(*((_QWORD *)&v71 + 1) + 8 * v61++), "readAll:", 1);
      }
      while (v59 != v61);
      v59 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v71, v120, 16);
    }
    while (v59);
  }

  v69 = 0u;
  v70 = 0u;
  v67 = 0u;
  v68 = 0u;
  v62 = a1[33];
  v63 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v67, v119, 16);
  if (v63)
  {
    v64 = v63;
    v65 = *(_QWORD *)v68;
    do
    {
      v66 = 0;
      do
      {
        if (*(_QWORD *)v68 != v65)
          objc_enumerationMutation(v62);
        objc_msgSend(*(id *)(*((_QWORD *)&v67 + 1) + 8 * v66++), "readAll:", 1, (_QWORD)v67);
      }
      while (v64 != v66);
      v64 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v67, v119, 16);
    }
    while (v64);
  }

}

unint64_t GEOResourcesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOResourcesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CEADD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOResourcesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  char v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  int v23;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  BOOL v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  char v46;
  unsigned int v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int v52;
  int v53;
  BOOL v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  int v60;
  int v61;
  _BOOL8 v62;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_291:
    v62 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v62;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_291;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
        break;
      v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v12 = v7++ >= 9;
      if (v12)
      {
        v8 = 0;
        v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v13 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v14 = v8 & 7;
    if (v13 || v14 == 4)
      goto LABEL_291;
    switch((v8 >> 3))
    {
      case 1u:
        if (v14 != 2 || !PBReaderPlaceMark() || (GEOTileGroupIsValid(a1) & 1) == 0)
          goto LABEL_293;
        goto LABEL_283;
      case 2u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOTileSetIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 3u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 4u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 5u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 6u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 8u:
        if (v14 != 2 || !PBReaderPlaceMark())
          goto LABEL_293;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_38:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_286;
        v16 = 0;
        v17 = 0;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          if (v20 == -1 || v20 >= *(_QWORD *)&a1[*v3])
            break;
          v21 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v20 + 1;
          v18 |= (unint64_t)(v21 & 0x7F) << v16;
          if ((v21 & 0x80) == 0)
            goto LABEL_48;
          v16 += 7;
          v12 = v17++ >= 9;
          if (v12)
          {
            v18 = 0;
            v22 = a1[*v4];
            goto LABEL_50;
          }
        }
        a1[*v4] = 1;
LABEL_48:
        v22 = a1[*v4];
        if (a1[*v4])
          v18 = 0;
LABEL_50:
        v23 = v18 & 7;
        if (v22 || v23 == 4)
        {
LABEL_286:
          v60 = a1[*v4];
          PBReaderRecallMark();
          if (v60)
            goto LABEL_293;
LABEL_283:
          PBReaderRecallMark();
LABEL_284:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_291;
          continue;
        }
        switch((v18 >> 3))
        {
          case 1u:
            if ((v18 & 7) != 0)
              goto LABEL_292;
            v25 = 0;
            while (1)
            {
              v26 = *v2;
              v27 = *(_QWORD *)&a1[v26];
              if (v27 == -1 || v27 >= *(_QWORD *)&a1[*v3])
                goto LABEL_85;
              v28 = v27 + 1;
              v29 = *(char *)(*(_QWORD *)&a1[*v5] + v27);
              *(_QWORD *)&a1[v26] = v28;
              if (v29 < 0)
              {
                v30 = v25++ > 8;
                if (!v30)
                  continue;
              }
              goto LABEL_38;
            }
          case 2u:
            if ((v18 & 7) != 0)
              goto LABEL_292;
            v31 = 0;
            while (1)
            {
              v32 = *v2;
              v33 = *(_QWORD *)&a1[v32];
              if (v33 == -1 || v33 >= *(_QWORD *)&a1[*v3])
                goto LABEL_85;
              v34 = v33 + 1;
              v35 = *(char *)(*(_QWORD *)&a1[*v5] + v33);
              *(_QWORD *)&a1[v32] = v34;
              if (v35 < 0)
              {
                v30 = v31++ > 8;
                if (!v30)
                  continue;
              }
              goto LABEL_38;
            }
          case 3u:
            if ((v18 & 7) != 0)
              goto LABEL_292;
            v36 = 0;
            do
            {
              v37 = *v2;
              v38 = *(_QWORD *)&a1[v37];
              if (v38 == -1 || v38 >= *(_QWORD *)&a1[*v3])
              {
LABEL_85:
                a1[*v4] = 1;
                goto LABEL_38;
              }
              v39 = v38 + 1;
              v40 = *(char *)(*(_QWORD *)&a1[*v5] + v38);
              *(_QWORD *)&a1[v37] = v39;
              if ((v40 & 0x80000000) == 0)
                break;
              v30 = v36++ > 8;
            }
            while (!v30);
            goto LABEL_38;
          case 4u:
            if (v23 != 2)
              goto LABEL_292;
            goto LABEL_93;
          case 5u:
            goto LABEL_93;
          case 6u:
            if (v23 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1))
              goto LABEL_292;
            goto LABEL_91;
          case 7u:
            if (v23 != 2)
              goto LABEL_292;
            goto LABEL_93;
          default:
            if ((v18 >> 3) != 29)
            {
LABEL_93:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_292;
              goto LABEL_38;
            }
            if (v23 == 2 && PBReaderPlaceMark() && GEOTileSetRegionIsValid(a1))
            {
LABEL_91:
              PBReaderRecallMark();
              goto LABEL_38;
            }
LABEL_292:
            PBReaderRecallMark();
            break;
        }
LABEL_293:
        PBReaderRecallMark();
        return 0;
      case 9u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0xBu:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x1Eu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x1Fu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x21u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x25u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x26u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x28u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x29u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x2Bu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x2Cu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x2Du:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x2Eu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x2Fu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x30u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x31u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x32u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x33u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x34u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x35u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x36u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x37u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x3Du:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x3Eu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x40u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x41u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x42u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOVersionManifestIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x43u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x44u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x45u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x46u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x47u:
        if ((v8 & 7) != 0)
          goto LABEL_293;
        v41 = 0;
        while (1)
        {
          v42 = *v2;
          v43 = *(_QWORD *)&a1[v42];
          if (v43 == -1 || v43 >= *(_QWORD *)&a1[*v3])
            break;
          v44 = v43 + 1;
          v45 = *(char *)(*(_QWORD *)&a1[*v5] + v43);
          *(_QWORD *)&a1[v42] = v44;
          if (v45 < 0)
          {
            v30 = v41++ > 8;
            if (!v30)
              continue;
          }
          goto LABEL_284;
        }
        a1[*v4] = 1;
        goto LABEL_284;
      case 0x48u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x49u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x4Au:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEODataSetDescriptionIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x4Bu:
        if (v14 != 2 || !PBReaderPlaceMark())
          goto LABEL_293;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_184:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v46 = 0;
          v47 = 0;
          v48 = 0;
          while (2)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            if (v50 == -1 || v50 >= *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v50);
              *(_QWORD *)&a1[v49] = v50 + 1;
              v48 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                v46 += 7;
                v12 = v47++ >= 9;
                if (v12)
                {
                  v48 = 0;
                  v52 = a1[*v4];
                  goto LABEL_196;
                }
                continue;
              }
            }
            break;
          }
          v52 = a1[*v4];
          if (a1[*v4])
            v48 = 0;
LABEL_196:
          v53 = v48 & 7;
          if (v52)
            v54 = 1;
          else
            v54 = v53 == 4;
          if (!v54)
          {
            switch((v48 >> 3))
            {
              case 1u:
                if ((v48 & 7) != 0)
                  goto LABEL_292;
                v55 = 0;
                break;
              case 2u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 3u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 4u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 5u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 6u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 7u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 8u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 9u:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 0xAu:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 0xBu:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 0xCu:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 0xDu:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 0xEu:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 0xFu:
                if (v53 == 2)
                  goto LABEL_240;
                goto LABEL_292;
              case 0x10u:
                if (v53 != 2)
                  goto LABEL_292;
LABEL_240:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_292;
                continue;
              default:
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_292;
                continue;
            }
            do
            {
              v56 = *v2;
              v57 = *(_QWORD *)&a1[v56];
              if (v57 == -1 || v57 >= *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_184;
              }
              v58 = v57 + 1;
              v59 = *(char *)(*(_QWORD *)&a1[*v5] + v57);
              *(_QWORD *)&a1[v56] = v58;
              if ((v59 & 0x80000000) == 0)
                break;
              v30 = v55++ > 8;
            }
            while (!v30);
            continue;
          }
          break;
        }
        v61 = a1[*v4];
        PBReaderRecallMark();
        if (!v61)
          goto LABEL_283;
        goto LABEL_293;
      case 0x4Du:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x4Eu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x4Fu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x50u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x51u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x52u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x53u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x55u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x58u:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x59u:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOMuninVersionIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x5Bu:
        if (v14 == 2)
          goto LABEL_266;
        goto LABEL_293;
      case 0x5Cu:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLInfoSetIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x5Du:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOMuninBucketIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x5Eu:
        if (v14 != 2 || !PBReaderPlaceMark() || !GEODisplayStringIsValid(a1))
          goto LABEL_293;
        goto LABEL_283;
      case 0x5Fu:
        if (v14 == 2 && PBReaderPlaceMark() && GEOOfflineMetadataIsValid(a1))
          goto LABEL_283;
        goto LABEL_293;
      default:
LABEL_266:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_293;
        goto LABEL_284;
    }
  }
}

uint64_t GEOTileGroupIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  BOOL v103;
  uint64_t v104;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_182;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        v13 = v8++ >= 9;
        if (v13)
        {
          v9 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v15 = v9 & 7;
      if (v14 || v15 == 4)
        goto LABEL_182;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0)
            goto LABEL_190;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            {
              v5 = 1;
              a1[*v4] = 1;
              goto LABEL_108;
            }
            v20 = v19 + 1;
            v21 = *(char *)(*(_QWORD *)&a1[*v6] + v19);
            *(_QWORD *)&a1[v18] = v20;
            v5 = 1;
            if ((v21 & 0x80000000) == 0)
              break;
            v22 = v17++ > 8;
          }
          while (!v22);
          goto LABEL_108;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVersionedTileSetIsValid(a1))
            goto LABEL_190;
          goto LABEL_83;
        case 3u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0)
              goto LABEL_190;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
                goto LABEL_107;
              v25 = v24 + 1;
              v26 = *(char *)(*(_QWORD *)&a1[*v6] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_190;
LABEL_112:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v68 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v69 = *v2;
              v70 = *(_QWORD *)&a1[v69];
              if (v70 == -1 || v70 >= *(_QWORD *)&a1[*v3])
                break;
              v71 = v70 + 1;
              v72 = *(char *)(*(_QWORD *)&a1[*v6] + v70);
              *(_QWORD *)&a1[v69] = v71;
              if (v72 < 0)
              {
                v13 = v68++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_112;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 4u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0)
              goto LABEL_190;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
                goto LABEL_107;
              v30 = v29 + 1;
              v31 = *(char *)(*(_QWORD *)&a1[*v6] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_190;
LABEL_122:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v73 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v74 = *v2;
              v75 = *(_QWORD *)&a1[v74];
              if (v75 == -1 || v75 >= *(_QWORD *)&a1[*v3])
                break;
              v76 = v75 + 1;
              v77 = *(char *)(*(_QWORD *)&a1[*v6] + v75);
              *(_QWORD *)&a1[v74] = v76;
              if (v77 < 0)
              {
                v13 = v73++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_122;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 5u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0)
              goto LABEL_190;
            while (1)
            {
              v33 = *v2;
              v34 = *(_QWORD *)&a1[v33];
              if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
                goto LABEL_107;
              v35 = v34 + 1;
              v36 = *(char *)(*(_QWORD *)&a1[*v6] + v34);
              *(_QWORD *)&a1[v33] = v35;
              if (v36 < 0)
              {
                v37 = v15++;
                if (v37 <= 8)
                  continue;
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_190;
LABEL_132:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v78 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v79 = *v2;
              v80 = *(_QWORD *)&a1[v79];
              if (v80 == -1 || v80 >= *(_QWORD *)&a1[*v3])
                break;
              v81 = v80 + 1;
              v82 = *(char *)(*(_QWORD *)&a1[*v6] + v80);
              *(_QWORD *)&a1[v79] = v81;
              if (v82 < 0)
              {
                v13 = v78++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_132;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 6u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0)
              goto LABEL_190;
            while (1)
            {
              v38 = *v2;
              v39 = *(_QWORD *)&a1[v38];
              if (v39 == -1 || v39 >= *(_QWORD *)&a1[*v3])
                goto LABEL_107;
              v40 = v39 + 1;
              v41 = *(char *)(*(_QWORD *)&a1[*v6] + v39);
              *(_QWORD *)&a1[v38] = v40;
              if (v41 < 0)
              {
                v42 = v15++;
                if (v42 <= 8)
                  continue;
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_190;
LABEL_142:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v83 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v84 = *v2;
              v85 = *(_QWORD *)&a1[v84];
              if (v85 == -1 || v85 >= *(_QWORD *)&a1[*v3])
                break;
              v86 = v85 + 1;
              v87 = *(char *)(*(_QWORD *)&a1[*v6] + v85);
              *(_QWORD *)&a1[v84] = v86;
              if (v87 < 0)
              {
                v13 = v83++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_142;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceIndexIsValid(a1))
            goto LABEL_190;
          goto LABEL_83;
        case 8u:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0)
              goto LABEL_190;
            while (1)
            {
              v43 = *v2;
              v44 = *(_QWORD *)&a1[v43];
              if (v44 == -1 || v44 >= *(_QWORD *)&a1[*v3])
                goto LABEL_107;
              v45 = v44 + 1;
              v46 = *(char *)(*(_QWORD *)&a1[*v6] + v44);
              *(_QWORD *)&a1[v43] = v45;
              if (v46 < 0)
              {
                v47 = v15++;
                if (v47 <= 8)
                  continue;
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_190;
LABEL_152:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v88 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v89 = *v2;
              v90 = *(_QWORD *)&a1[v89];
              if (v90 == -1 || v90 >= *(_QWORD *)&a1[*v3])
                break;
              v91 = v90 + 1;
              v92 = *(char *)(*(_QWORD *)&a1[*v6] + v90);
              *(_QWORD *)&a1[v89] = v91;
              if (v92 < 0)
              {
                v13 = v88++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_152;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 0xAu:
          if (v15 != 2)
          {
            if ((v9 & 7) != 0)
              goto LABEL_190;
            while (1)
            {
              v48 = *v2;
              v49 = *(_QWORD *)&a1[v48];
              if (v49 == -1 || v49 >= *(_QWORD *)&a1[*v3])
                goto LABEL_107;
              v50 = v49 + 1;
              v51 = *(char *)(*(_QWORD *)&a1[*v6] + v49);
              *(_QWORD *)&a1[v48] = v50;
              if (v51 < 0)
              {
                v52 = v15++;
                if (v52 <= 8)
                  continue;
              }
              goto LABEL_108;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_190;
LABEL_162:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v93 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v94 = *v2;
              v95 = *(_QWORD *)&a1[v94];
              if (v95 == -1 || v95 >= *(_QWORD *)&a1[*v3])
                break;
              v96 = v95 + 1;
              v97 = *(char *)(*(_QWORD *)&a1[*v6] + v95);
              *(_QWORD *)&a1[v94] = v96;
              if (v97 < 0)
              {
                v13 = v93++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_162;
            }
            a1[*v4] = 1;
          }
          goto LABEL_83;
        case 0xBu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTileSetRegionIsValid(a1))
            goto LABEL_83;
          goto LABEL_190;
        case 0xCu:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_190:
              PBReaderRecallMark();
              return 0;
            }
LABEL_172:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v98 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v99 = *v2;
                v100 = *(_QWORD *)&a1[v99];
                if (v100 == -1 || v100 >= *(_QWORD *)&a1[*v3])
                  break;
                v101 = v100 + 1;
                v102 = *(char *)(*(_QWORD *)&a1[*v6] + v100);
                *(_QWORD *)&a1[v99] = v101;
                if (v102 < 0)
                {
                  v13 = v98++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_172;
              }
              a1[*v4] = 1;
            }
LABEL_83:
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0)
              goto LABEL_190;
            while (1)
            {
              v53 = *v2;
              v54 = *(_QWORD *)&a1[v53];
              if (v54 == -1 || v54 >= *(_QWORD *)&a1[*v3])
                break;
              v55 = v54 + 1;
              v56 = *(char *)(*(_QWORD *)&a1[*v6] + v54);
              *(_QWORD *)&a1[v53] = v55;
              if (v56 < 0)
              {
                v57 = v15++;
                if (v57 <= 8)
                  continue;
              }
              goto LABEL_108;
            }
LABEL_107:
            a1[*v4] = 1;
          }
LABEL_108:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_182;
          break;
        case 0xEu:
          if ((v9 & 7) != 0)
            goto LABEL_190;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            if (v60 == -1 || v60 >= *(_QWORD *)&a1[*v3])
              goto LABEL_107;
            v61 = v60 + 1;
            v62 = *(char *)(*(_QWORD *)&a1[*v6] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_108;
          }
        case 0xFu:
          if ((v9 & 7) != 0)
            goto LABEL_190;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            if (v65 == -1 || v65 >= *(_QWORD *)&a1[*v3])
              goto LABEL_107;
            v66 = v65 + 1;
            v67 = *(char *)(*(_QWORD *)&a1[*v6] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_108;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_190;
          goto LABEL_108;
      }
    }
  }
  v5 = 0;
LABEL_182:
  if (a1[*v4])
    v103 = 1;
  else
    v103 = v5 == 0;
  v104 = !v103;
  PBReaderRecallMark();
  return v104;
}

BOOL GEOVersionManifestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  char v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  int v23;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark())
        {
LABEL_61:
          PBReaderRecallMark();
          return 0;
        }
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_22:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v16 = 0;
          v17 = 0;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            if (v20 == -1 || v20 >= *(_QWORD *)&a1[*v3])
              break;
            v21 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v20 + 1;
            v18 |= (unint64_t)(v21 & 0x7F) << v16;
            if ((v21 & 0x80) == 0)
              goto LABEL_32;
            v16 += 7;
            v12 = v17++ >= 9;
            if (v12)
            {
              v18 = 0;
              v22 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          v22 = a1[*v4];
          if (a1[*v4])
            v18 = 0;
LABEL_34:
          v23 = v18 & 7;
          if (v22 || v23 == 4)
            break;
          if ((v18 >> 3) == 2)
          {
            if ((v18 & 7) != 0)
              goto LABEL_60;
            v25 = 0;
            while (1)
            {
              v26 = *v2;
              v27 = *(_QWORD *)&a1[v26];
              if (v27 == -1 || v27 >= *(_QWORD *)&a1[*v3])
                break;
              v28 = v27 + 1;
              v29 = *(char *)(*(_QWORD *)&a1[*v5] + v27);
              *(_QWORD *)&a1[v26] = v28;
              if (v29 < 0 && v25++ <= 8)
                continue;
              goto LABEL_22;
            }
            a1[*v4] = 1;
          }
          else if ((v18 >> 3) == 1)
          {
            if (v23 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_60:
              PBReaderRecallMark();
              goto LABEL_61;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_60;
          }
        }
        v31 = a1[*v4];
        PBReaderRecallMark();
        if (v31)
          goto LABEL_61;
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_61;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOURLInfoSetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_37;
          v16 = 0;
          do
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_23;
            }
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if ((v20 & 0x80000000) == 0)
              break;
          }
          while (v16++ <= 8);
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x21u:
        case 0x22u:
        case 0x23u:
        case 0x24u:
        case 0x25u:
        case 0x26u:
        case 0x27u:
        case 0x28u:
        case 0x29u:
        case 0x2Au:
        case 0x2Bu:
        case 0x2Cu:
        case 0x2Du:
        case 0x2Eu:
        case 0x2Fu:
        case 0x30u:
        case 0x31u:
        case 0x32u:
        case 0x33u:
        case 0x34u:
        case 0x35u:
        case 0x36u:
        case 0x37u:
        case 0x38u:
        case 0x39u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLInfoIsValid(a1))
            goto LABEL_37;
          PBReaderRecallMark();
          goto LABEL_23;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_37:
            PBReaderRecallMark();
            return 0;
          }
LABEL_23:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_36;
          break;
      }
    }
  }
LABEL_36:
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

uint64_t _GEOResourcesIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[128];
  _BYTE v57[128];
  _BYTE v58[128];
  _BYTE v59[128];
  _BYTE v60[128];
  _BYTE v61[128];
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 488));
  v2 = *(_QWORD *)(a1 + 496);
  if ((v2 & 0xFFFFFFFFFFFFFFCLL) == 0)
  {
    if ((v2 & 0x20000000000000) != 0)
    {
      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      v4 = *(id *)(a1 + 432);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v52, v61, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v53;
LABEL_6:
        v8 = 0;
        while (1)
        {
          if (*(_QWORD *)v53 != v7)
            objc_enumerationMutation(v4);
          if ((GEOTileSetIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v52 + 1) + 8 * v8)) & 1) != 0)
            goto LABEL_66;
          if (v6 == ++v8)
          {
            v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v52, v61, 16);
            if (v6)
              goto LABEL_6;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 496);
    }
    if ((v2 & 0x10000000000) != 0)
    {
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      v4 = *(id *)(a1 + 328);
      v9 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v48, v60, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v49;
LABEL_16:
        v12 = 0;
        while (1)
        {
          if (*(_QWORD *)v49 != v11)
            objc_enumerationMutation(v4);
          v13 = *(_QWORD *)(*((_QWORD *)&v48 + 1) + 8 * v12);
          if (v13)
          {
            os_unfair_lock_lock_with_options();
            os_unfair_lock_assert_owner((const os_unfair_lock *)(v13 + 80));
            v14 = *(_WORD *)(v13 + 96) & 0x1F0;
            os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 80));
            if (v14)
              goto LABEL_66;
          }
          if (v10 == ++v12)
          {
            v10 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v48, v60, 16);
            if (v10)
              goto LABEL_16;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 496);
    }
    if ((v2 & 0x80) != 0)
    {
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      v4 = *(id *)(a1 + 64);
      v15 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v44, v59, 16);
      if (v15)
      {
        v16 = v15;
        v17 = *(_QWORD *)v45;
LABEL_27:
        v18 = 0;
        while (1)
        {
          if (*(_QWORD *)v45 != v17)
            objc_enumerationMutation(v4);
          if (GEOAttributionIsDirty(*(_QWORD *)(*((_QWORD *)&v44 + 1) + 8 * v18)))
            goto LABEL_66;
          if (v16 == ++v18)
          {
            v16 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v44, v59, 16);
            if (v16)
              goto LABEL_27;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 496);
    }
    if ((v2 & 0x80000000000) != 0)
    {
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
      v4 = *(id *)(a1 + 352);
      v19 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v40, v58, 16);
      if (v19)
      {
        v20 = v19;
        v21 = *(_QWORD *)v41;
LABEL_37:
        v22 = 0;
        while (1)
        {
          if (*(_QWORD *)v41 != v21)
            objc_enumerationMutation(v4);
          if ((GEOResourceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v40 + 1) + 8 * v22)) & 1) != 0)
            goto LABEL_66;
          if (v20 == ++v22)
          {
            v20 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v40, v58, 16);
            if (v20)
              goto LABEL_37;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 496);
    }
    if ((v2 & 0x10000) != 0)
    {
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v4 = *(id *)(a1 + 136);
      v23 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v36, v57, 16);
      if (v23)
      {
        v24 = v23;
        v25 = *(_QWORD *)v37;
LABEL_47:
        v26 = 0;
        while (1)
        {
          if (*(_QWORD *)v37 != v25)
            objc_enumerationMutation(v4);
          v27 = *(os_unfair_lock_s **)(*((_QWORD *)&v36 + 1) + 8 * v26);
          if (v27)
          {
            os_unfair_lock_lock_with_options();
            os_unfair_lock_assert_owner(v27 + 38);
            v28 = v27[40]._os_unfair_lock_opaque & 0x3FFFC;
            os_unfair_lock_unlock(v27 + 38);
            if (v28)
              goto LABEL_66;
          }
          if (v24 == ++v26)
          {
            v24 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v36, v57, 16);
            if (v24)
              goto LABEL_47;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 496);
    }
    if ((v2 & 0x40000000000000) == 0)
      return 0;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v4 = *(id *)(a1 + 440);
    v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v32, v56, 16);
    if (!v3)
    {
LABEL_67:

      return v3;
    }
    v29 = *(_QWORD *)v33;
LABEL_59:
    v30 = 0;
    while (1)
    {
      if (*(_QWORD *)v33 != v29)
        objc_enumerationMutation(v4);
      if (GEOURLInfoSetIsDirty(*(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * v30)))
        break;
      if (v3 == ++v30)
      {
        v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v32, v56, 16);
        if (v3)
          goto LABEL_59;
        goto LABEL_67;
      }
    }
LABEL_66:
    v3 = 1;
    goto LABEL_67;
  }
  return 1;
}

void sub_188CEFD08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF105C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileGroupReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint16x4_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  id v77;
  void *v78;
  int v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  int v102;
  uint64_t v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  int v146;
  __int16 v147;
  void *v148;
  int v150;
  char v151;
  int v152;
  char v153;
  int v154;
  char v155;

  v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
    v6 = (int *)MEMORY[0x1E0D82BD8];
    *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 268);
    objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 264));
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = (uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 288));
    v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFCFFF6FFF5FFF7), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 288) >> 6) & 1)+ ((*(_WORD *)(a1 + 288) >> 7) & 1)+ ((*(_WORD *)(a1 + 288) >> 12) & 1))+ (unsigned __int16)vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFEFFF8FFFBFFFDLL), (int8x8_t)0x1000100010001));
    while (2)
    {
      v14 = 1;
      v15 = 1;
      v16 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v13;
          goto LABEL_8;
        case -3:
          v8 = 1;
          goto LABEL_7;
        case -2:
          v15 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          v17 = v13 > 7;
          v18 = v17 & ~(_DWORD)v11 | v9;
          v19 = v17 | v11;
          v20 = (int *)MEMORY[0x1E0D82BF0];
          if ((((v17 | v11) | v8) & 1) != 0)
            v21 = 0;
          else
            v21 = a3;
          v152 = 1;
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_269;
          v151 = v18;
          v154 = (v7 != 0) | v19 | v18;
          v155 = (v21 == 0) | v19;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v153 = v17 | v11;
          break;
        default:
          ++v13;
LABEL_7:
          v14 = v9;
LABEL_8:
          v15 = v10;
          v16 = v11;
LABEL_10:
          ++v7;
          v9 = v14;
          v10 = v15;
          v11 = v16;
          continue;
      }
      break;
    }
    while (!*(_BYTE *)(v3 + *v22))
    {
      v24 = 0;
      v25 = 0;
      v26 = 0;
      while (1)
      {
        v27 = *v20;
        v28 = *(_QWORD *)(v3 + v27);
        if (v28 == -1 || v28 >= *(_QWORD *)(v3 + *v6))
          break;
        v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
        *(_QWORD *)(v3 + v27) = v28 + 1;
        v26 |= (unint64_t)(v29 & 0x7F) << v24;
        if ((v29 & 0x80) == 0)
          goto LABEL_25;
        v24 += 7;
        v30 = v25++ >= 9;
        if (v30)
        {
          v26 = 0;
          v31 = *(unsigned __int8 *)(v3 + *v22);
          goto LABEL_27;
        }
      }
      *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
      v31 = *(unsigned __int8 *)(v3 + *v22);
      if (*(_BYTE *)(v3 + *v22))
        v26 = 0;
LABEL_27:
      v32 = v26 & 7;
      if (v31 || v32 == 4)
        break;
      v34 = v26 >> 3;
      v35 = v19;
      if ((v155 & 1) == 0)
      {
        v36 = v21;
        do
        {
          v38 = *v36++;
          v37 = v38;
          v35 = v38 != 0;
          if (v38)
            v39 = v37 == (_DWORD)v34;
          else
            v39 = 1;
        }
        while (!v39);
      }
      switch((int)v34)
      {
        case 1:
          if ((v8 & 1) == 0)
            goto LABEL_197;
          v40 = 0;
          v41 = 0;
          v42 = 0;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v43 = *v20;
            v44 = *(_QWORD *)(v3 + v43);
            if (v44 == -1 || v44 >= *(_QWORD *)(v3 + *v6))
              break;
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v44);
            *(_QWORD *)(v3 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if ((v45 & 0x80) == 0)
              goto LABEL_200;
            v40 += 7;
            v30 = v41++ >= 9;
            if (v30)
            {
              LODWORD(v42) = 0;
              goto LABEL_202;
            }
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_200:
          if (*(_BYTE *)(v3 + *v22))
            LODWORD(v42) = 0;
LABEL_202:
          v103 = 276;
          goto LABEL_211;
        case 2:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x800) != 0)
            goto LABEL_197;
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          -[GEOTileGroup _reserveTileSets:](a1, 1uLL);
          if (!GEOVersionedTileSetReadAllFrom((_DWORD *)(*(_QWORD *)(a1 + 216) + 8 * *(_QWORD *)(a1 + 224)), v3))
            goto LABEL_291;
          PBReaderRecallMark();
          v46 = 224;
          goto LABEL_164;
        case 3:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x200) != 0)
            goto LABEL_197;
          if (v32 != 2)
          {
            v104 = 0;
            v105 = 0;
            v106 = 0;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v107 = *v20;
              v108 = *(_QWORD *)(v3 + v107);
              if (v108 == -1 || v108 >= *(_QWORD *)(v3 + *v6))
                goto LABEL_261;
              v109 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v108);
              *(_QWORD *)(v3 + v107) = v108 + 1;
              v106 |= (unint64_t)(v109 & 0x7F) << v104;
              if (v109 < 0)
              {
                v104 += 7;
                v30 = v105++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v47 = 0;
            v48 = 0;
            v49 = 0;
            while (1)
            {
              v50 = *v20;
              v51 = *(_QWORD *)(v3 + v50);
              if (v51 == -1 || v51 >= *(_QWORD *)(v3 + *v6))
                break;
              v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v51);
              *(_QWORD *)(v3 + v50) = v51 + 1;
              v49 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v30 = v48++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_66;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_66:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 4:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x400) != 0)
            goto LABEL_197;
          if (v32 != 2)
          {
            v110 = 0;
            v111 = 0;
            v112 = 0;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v113 = *v20;
              v114 = *(_QWORD *)(v3 + v113);
              if (v114 == -1 || v114 >= *(_QWORD *)(v3 + *v6))
                goto LABEL_261;
              v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v114);
              *(_QWORD *)(v3 + v113) = v114 + 1;
              v112 |= (unint64_t)(v115 & 0x7F) << v110;
              if (v115 < 0)
              {
                v110 += 7;
                v30 = v111++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v53 = 0;
            v54 = 0;
            v55 = 0;
            while (1)
            {
              v56 = *v20;
              v57 = *(_QWORD *)(v3 + v56);
              if (v57 == -1 || v57 >= *(_QWORD *)(v3 + *v6))
                break;
              v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v57);
              *(_QWORD *)(v3 + v56) = v57 + 1;
              v55 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                v30 = v54++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_82;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_82:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 5:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x10) != 0)
            goto LABEL_197;
          if (v32 != 2)
          {
            v116 = 0;
            v117 = 0;
            v118 = 0;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v119 = *v20;
              v120 = *(_QWORD *)(v3 + v119);
              if (v120 == -1 || v120 >= *(_QWORD *)(v3 + *v6))
                goto LABEL_261;
              v121 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v120);
              *(_QWORD *)(v3 + v119) = v120 + 1;
              v118 |= (unint64_t)(v121 & 0x7F) << v116;
              if (v121 < 0)
              {
                v116 += 7;
                v30 = v117++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v59 = 0;
            v60 = 0;
            v61 = 0;
            while (1)
            {
              v62 = *v20;
              v63 = *(_QWORD *)(v3 + v62);
              if (v63 == -1 || v63 >= *(_QWORD *)(v3 + *v6))
                break;
              v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v63);
              *(_QWORD *)(v3 + v62) = v63 + 1;
              v61 |= (unint64_t)(v64 & 0x7F) << v59;
              if (v64 < 0)
              {
                v59 += 7;
                v30 = v60++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_98;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_98:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 6:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x40) != 0)
            goto LABEL_197;
          if (v32 != 2)
          {
            v122 = 0;
            v123 = 0;
            v124 = 0;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v125 = *v20;
              v126 = *(_QWORD *)(v3 + v125);
              if (v126 == -1 || v126 >= *(_QWORD *)(v3 + *v6))
                goto LABEL_261;
              v127 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v126);
              *(_QWORD *)(v3 + v125) = v126 + 1;
              v124 |= (unint64_t)(v127 & 0x7F) << v122;
              if (v127 < 0)
              {
                v122 += 7;
                v30 = v123++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v65 = 0;
            v66 = 0;
            v67 = 0;
            while (1)
            {
              v68 = *v20;
              v69 = *(_QWORD *)(v3 + v68);
              if (v69 == -1 || v69 >= *(_QWORD *)(v3 + *v6))
                break;
              v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v69);
              *(_QWORD *)(v3 + v68) = v69 + 1;
              v67 |= (unint64_t)(v70 & 0x7F) << v65;
              if (v70 < 0)
              {
                v65 += 7;
                v30 = v66++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_114;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_114:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 7:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x80) != 0)
            goto LABEL_197;
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          -[GEOTileGroup _reserveRegionalResourceIndexs:](a1, 1uLL);
          if (!GEORegionalResourceIndexReadAllFrom(*(_QWORD *)(a1 + 120) + 16 * *(_QWORD *)(a1 + 128), v3))
            goto LABEL_291;
          PBReaderRecallMark();
          v46 = 128;
          goto LABEL_164;
        case 8:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x1000) != 0)
            goto LABEL_197;
          if (v32 != 2)
          {
            v128 = 0;
            v129 = 0;
            v130 = 0;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v131 = *v20;
              v132 = *(_QWORD *)(v3 + v131);
              if (v132 == -1 || v132 >= *(_QWORD *)(v3 + *v6))
                goto LABEL_261;
              v133 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v132);
              *(_QWORD *)(v3 + v131) = v132 + 1;
              v130 |= (unint64_t)(v133 & 0x7F) << v128;
              if (v133 < 0)
              {
                v128 += 7;
                v30 = v129++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v71 = 0;
            v72 = 0;
            v73 = 0;
            while (1)
            {
              v74 = *v20;
              v75 = *(_QWORD *)(v3 + v74);
              if (v75 == -1 || v75 >= *(_QWORD *)(v3 + *v6))
                break;
              v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v75);
              *(_QWORD *)(v3 + v74) = v75 + 1;
              v73 |= (unint64_t)(v76 & 0x7F) << v71;
              if (v76 < 0)
              {
                v71 += 7;
                v30 = v72++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_135;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_135:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 10:
          if (!v35 || (*(_WORD *)(a1 + 288) & 8) != 0)
            goto LABEL_197;
          if (v32 != 2)
          {
            v134 = 0;
            v135 = 0;
            v136 = 0;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v137 = *v20;
              v138 = *(_QWORD *)(v3 + v137);
              if (v138 == -1 || v138 >= *(_QWORD *)(v3 + *v6))
                goto LABEL_261;
              v139 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v138);
              *(_QWORD *)(v3 + v137) = v138 + 1;
              v136 |= (unint64_t)(v139 & 0x7F) << v134;
              if (v139 < 0)
              {
                v134 += 7;
                v30 = v135++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_262;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v80 = 0;
            v81 = 0;
            v82 = 0;
            while (1)
            {
              v83 = *v20;
              v84 = *(_QWORD *)(v3 + v83);
              if (v84 == -1 || v84 >= *(_QWORD *)(v3 + *v6))
                break;
              v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v84);
              *(_QWORD *)(v3 + v83) = v84 + 1;
              v82 |= (unint64_t)(v85 & 0x7F) << v80;
              if (v85 < 0)
              {
                v80 += 7;
                v30 = v81++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_157;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_157:
            PBRepeatedUInt32Add();
          }
          goto LABEL_180;
        case 11:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x20) != 0)
            goto LABEL_197;
          if (!PBReaderPlaceMark())
            goto LABEL_291;
          -[GEOTileGroup _reserveHybridUnavailableRegions:](a1, 1uLL);
          if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(_QWORD *)(a1 + 72) + 24 * *(_QWORD *)(a1 + 80)), v3))
            goto LABEL_291;
          PBReaderRecallMark();
          v46 = 80;
LABEL_164:
          ++*(_QWORD *)(a1 + v46);
          LOBYTE(v19) = v153;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_264;
        case 12:
          if (!v35 || (*(_WORD *)(a1 + 288) & 0x100) != 0)
            goto LABEL_197;
          if (v32 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_291:
              v152 = 0;
              LOBYTE(v19) = v153;
              goto LABEL_268;
            }
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
            {
              if (*(_BYTE *)(v3 + *v22))
                break;
              v86 = 0;
              v87 = 0;
              v88 = 0;
              while (1)
              {
                v89 = *v20;
                v90 = *(_QWORD *)(v3 + v89);
                if (v90 == -1 || v90 >= *(_QWORD *)(v3 + *v6))
                  break;
                v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v90);
                *(_QWORD *)(v3 + v89) = v90 + 1;
                v88 |= (unint64_t)(v91 & 0x7F) << v86;
                if (v91 < 0)
                {
                  v86 += 7;
                  v30 = v87++ >= 9;
                  if (!v30)
                    continue;
                }
                goto LABEL_179;
              }
              *(_BYTE *)(v3 + *v22) = 1;
LABEL_179:
              PBRepeatedUInt32Add();
            }
LABEL_180:
            PBReaderRecallMark();
          }
          else
          {
            v140 = 0;
            v141 = 0;
            v142 = 0;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v143 = *v20;
              v144 = *(_QWORD *)(v3 + v143);
              if (v144 == -1 || v144 >= *(_QWORD *)(v3 + *v6))
                break;
              v145 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v144);
              *(_QWORD *)(v3 + v143) = v144 + 1;
              v142 |= (unint64_t)(v145 & 0x7F) << v140;
              if (v145 < 0)
              {
                v140 += 7;
                v30 = v141++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_262;
            }
LABEL_261:
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_262:
            PBRepeatedUInt32Add();
          }
          LOBYTE(v19) = v153;
LABEL_264:
          if ((v154 & 1) == 0)
            goto LABEL_266;
LABEL_265:
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_266;
          break;
        case 14:
          if ((v8 & 1) == 0)
            goto LABEL_197;
          v92 = 0;
          v93 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 288) |= 1u;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (2)
          {
            v94 = *v20;
            v95 = *(_QWORD *)(v3 + v94);
            if (v95 == -1 || v95 >= *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v22) = 1;
            }
            else
            {
              v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v95);
              *(_QWORD *)(v3 + v94) = v95 + 1;
              v42 |= (unint64_t)(v96 & 0x7F) << v92;
              if (v96 < 0)
              {
                v92 += 7;
                v30 = v93++ >= 9;
                if (v30)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v22))
            LODWORD(v42) = 0;
LABEL_206:
          v103 = 280;
          goto LABEL_211;
        case 15:
          if ((v8 & 1) == 0)
            goto LABEL_197;
          v97 = 0;
          v98 = 0;
          v42 = 0;
          *(_WORD *)(a1 + 288) |= 2u;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (2)
          {
            v99 = *v20;
            v100 = *(_QWORD *)(v3 + v99);
            if (v100 == -1 || v100 >= *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v22) = 1;
            }
            else
            {
              v101 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v100);
              *(_QWORD *)(v3 + v99) = v100 + 1;
              v42 |= (unint64_t)(v101 & 0x7F) << v97;
              if (v101 < 0)
              {
                v97 += 7;
                v30 = v98++ >= 9;
                if (v30)
                {
                  LODWORD(v42) = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v22))
            LODWORD(v42) = 0;
LABEL_210:
          v103 = 284;
LABEL_211:
          *(_DWORD *)(a1 + v103) = v42;
          goto LABEL_264;
        default:
          if ((v151 & 1) != 0 && (*(_WORD *)(a1 + 288) & 4) == 0)
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v77 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v78 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v77;

            }
            v79 = PBUnknownFieldAdd();
            LOBYTE(v19) = v153;
            v23 = (int *)MEMORY[0x1E0D82BB8];
            if (!v79)
            {
              v152 = 0;
              goto LABEL_270;
            }
            goto LABEL_264;
          }
LABEL_197:
          v102 = PBReaderSkipValueWithTag();
          LOBYTE(v19) = v153;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if ((v102 & v154 & 1) == 0)
          {
            v150 = v102;
            goto LABEL_267;
          }
          goto LABEL_265;
      }
    }
LABEL_266:
    v150 = 1;
LABEL_267:
    v152 = v150;
LABEL_268:
    LOBYTE(v18) = v151;
LABEL_269:
    if ((v18 & 1) != 0)
LABEL_270:
      *(_WORD *)(a1 + 288) |= 4u;
    if (v19 & 1 | ((v152 & 1) == 0))
    {
      *(_WORD *)(a1 + 288) |= 0x800u;
      *(_WORD *)(a1 + 288) |= 0x200u;
      *(_WORD *)(a1 + 288) |= 0x400u;
      *(_WORD *)(a1 + 288) |= 0x10u;
      *(_WORD *)(a1 + 288) |= 0x40u;
      *(_WORD *)(a1 + 288) |= 0x80u;
      *(_WORD *)(a1 + 288) |= 0x1000u;
      *(_WORD *)(a1 + 288) |= 8u;
      *(_WORD *)(a1 + 288) |= 0x20u;
      *(_WORD *)(a1 + 288) |= 0x100u;
    }
    else if (v21)
    {
      while (1)
      {
        v146 = *v21++;
        v147 = 2048;
        switch(v146)
        {
          case 0:
            goto LABEL_285;
          case 2:
            goto LABEL_284;
          case 3:
            v147 = 512;
            goto LABEL_284;
          case 4:
            v147 = 1024;
            goto LABEL_284;
          case 5:
            v147 = 16;
            goto LABEL_284;
          case 6:
            v147 = 64;
            goto LABEL_284;
          case 7:
            v147 = 128;
            goto LABEL_284;
          case 8:
            v147 = 4096;
            goto LABEL_284;
          case 10:
            v147 = 8;
            goto LABEL_284;
          case 11:
            v147 = 32;
            goto LABEL_284;
          case 12:
            v147 = 256;
LABEL_284:
            *(_WORD *)(a1 + 288) |= v147;
            break;
          default:
            continue;
        }
      }
    }
LABEL_285:
    if (v152)
    {
      v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
      if ((v19 & 1) == 0)
        return v3;
      goto LABEL_289;
    }
    v3 = 0;
    if ((v19 & 1) != 0)
    {
LABEL_289:
      v148 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188CF2980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF2CC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF3000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF3340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF3680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF3B1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF3E5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF419C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF4680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF5C0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 268))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTileGroupReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 272));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 264) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 268) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTileGroupReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTileGroupReadAllFrom_initialTag;
  Specified = GEOTileGroupReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 272));
  return Specified;
}

void sub_188CF5D98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileGroupReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTileGroupReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CF5DF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVersionedTileSetIsValid(void *a1)
{
  _BOOL8 v2;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v5 = objc_msgSend(a1, "position");
  v6 = objc_msgSend(a1, "length");
  v2 = GEOVersionedTileSetReadAllFrom(&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return v2;
}

void sub_188CF62F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOVersionedTileSetWriteTo()
{
  PBDataWriterWriteUint32Field();
  return PBDataWriterWriteUint32Field();
}

BOOL GEOTileGroupIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
  v2 = (*(_WORD *)(a1 + 288) & 0x3FF8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 272));
  return v2;
}

void sub_188CF6A68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF71D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CF7978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_50;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v27 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          v32 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
          break;
        v30 = v29 + 1;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v21 = v27++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v32;
}

void sub_188CF8328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF85B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8700(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8984(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8B30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8C78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF8F04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF904C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF91F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF933C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF9484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF95CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF9714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF9858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF99A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF9AE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF9C30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF9D78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CF9EC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA008(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA150(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA578(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA6C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFA944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFAA8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFABD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFAD1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFAE64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFAFA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFB29C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFB3E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFB524(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFB66C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFB7B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFB8FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFBA40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFBB88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFBCD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFBE18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFBF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFC0A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFC1F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFC338(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188CFC480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOURLInfoSetCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[48], "readAll:", 1);
  objc_msgSend(a1[50], "readAll:", 1);
  objc_msgSend(a1[23], "readAll:", 1);
  objc_msgSend(a1[26], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[51], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[38], "readAll:", 1);
  objc_msgSend(a1[45], "readAll:", 1);
  objc_msgSend(a1[44], "readAll:", 1);
  objc_msgSend(a1[49], "readAll:", 1);
  objc_msgSend(a1[42], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[24], "readAll:", 1);
  objc_msgSend(a1[43], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[22], "readAll:", 1);
  objc_msgSend(a1[30], "readAll:", 1);
  objc_msgSend(a1[52], "readAll:", 1);
  objc_msgSend(a1[47], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[41], "readAll:", 1);
  objc_msgSend(a1[31], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[56], "readAll:", 1);
  objc_msgSend(a1[32], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[58], "readAll:", 1);
  objc_msgSend(a1[28], "readAll:", 1);
  objc_msgSend(a1[27], "readAll:", 1);
  objc_msgSend(a1[29], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[55], "readAll:", 1);
  objc_msgSend(a1[57], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[53], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[40], "readAll:", 1);
  objc_msgSend(a1[25], "readAll:", 1);
  objc_msgSend(a1[54], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[39], "readAll:", 1);
  objc_msgSend(a1[37], "readAll:", 1);
  objc_msgSend(a1[46], "readAll:", 1);
  objc_msgSend(a1[33], "readAll:", 1);
  objc_msgSend(a1[34], "readAll:", 1);
  objc_msgSend(a1[36], "readAll:", 1);
  objc_msgSend(a1[35], "readAll:", 1);
  return objc_msgSend(a1[20], "readAll:", 1);
}

unint64_t GEOURLInfoSetReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLInfoSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188CFF974(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D001C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLInfoSetIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 480));
  v2 = (*(_QWORD *)(a1 + 488) & 0x7FFFFFFFFFFFFFCLL) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 480));
  return v2;
}

void sub_188D01164(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D020D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVersionManifestReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVersionManifestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D03184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOVersionedTileSetDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOVersionedTileSetDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOVersionedTileSet<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOVersionedTileSetDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v3, CFSTR("identifier"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[1]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v4, CFSTR("tileSetIndex"));

  return v2;
}

void _GEOVersionedTileSetFromDictionaryRepresentation(void *a1, _DWORD *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a1;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("tileSetIndex"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2[1] = objc_msgSend(v4, "unsignedIntValue");

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("identifier"));
  v5 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    *a2 = objc_msgSend(v5, "unsignedIntValue");

}

BOOL GEOVersionedTileSetReadFrom(_DWORD *a1, uint64_t a2)
{
  return GEOVersionedTileSetReadAllFrom(a1, a2);
}

BOOL GEOVersionedTileSetReadAllFrom(_DWORD *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  _DWORD *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = a1 + 1;
    v8 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v3;
        v13 = *(_QWORD *)(a2 + v12);
        if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        if (v10++ >= 9)
        {
          v11 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v11 = 0;
LABEL_14:
      if (v16 || (v11 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v11 >> 3) == 1)
        break;
      if ((v11 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = a1;
            goto LABEL_38;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = a1;
            goto LABEL_41;
          }
        }
        v25 = a1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_41:
        *v25 = v20;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v26 = 0;
    v27 = 0;
    v20 = 0;
    while (1)
    {
      v28 = *v3;
      v29 = *(_QWORD *)(a2 + v28);
      if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v29);
      *(_QWORD *)(a2 + v28) = v29 + 1;
      v20 |= (unint64_t)(v30 & 0x7F) << v26;
      if ((v30 & 0x80) == 0)
      {
        v25 = v7;
        goto LABEL_39;
      }
      v26 += 7;
      v24 = v27++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = v7;
        goto LABEL_41;
      }
    }
    v25 = v7;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL GEOVersionedTileSetEquals(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t GEOVersionedTileSetHash()
{
  return PBHashBytes();
}

void GEOMigrateCountryConfig(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _GEOCountryConfigurationInfo *v6;
  _QWORD v7[3];
  _QWORD v8[4];

  v8[3] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "getConfigValueForKey:countryCode:options:source:", CFSTR("DeviceCountryCodeSourced"), 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0 || !objc_msgSend(v2, "count"))
  {
    objc_msgSend(v1, "getConfigValueForKey:countryCode:options:source:", CFSTR("DeviceCountryCode"), 0, 0, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v3, "length"))
    {
      v7[0] = CFSTR("cc");
      v7[1] = CFSTR("source");
      v8[0] = v3;
      v8[1] = &unk_1E1E80DB8;
      v7[2] = CFSTR("date");
      objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v8[2] = v4;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, v7, 3);
      v5 = objc_claimAutoreleasedReturnValue();

      v6 = -[_GEOCountryConfigurationInfo initWithDictionary:]([_GEOCountryConfigurationInfo alloc], "initWithDictionary:", v5);
      if (v6)
      {
        objc_msgSend(v1, "setConfigValue:forKey:options:synchronous:", v5, CFSTR("DeviceCountryCodeSourced"), 0, 1);
        objc_msgSend(v1, "setConfigValue:forKey:options:synchronous:", 0, CFSTR("DeviceCountryCode"), 0, 1);
      }

    }
    else
    {
      v5 = (uint64_t)v2;
    }

    v2 = (void *)v5;
  }

}

void sub_188D04350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188D04648(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

id geoLPRRegionsContainingPoint(void *a1, double a2, double a3)
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v5, "count"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v7 = v5;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v8)
  {
    v9 = v8;
    v10 = 0;
    v11 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v24 != v11)
          objc_enumerationMutation(v7);
        v13 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        objc_msgSend(v13, "regionBoundingBox", (_QWORD)v23);
        v14 = objc_claimAutoreleasedReturnValue();
        if (v14)
        {
          v15 = (void *)v14;
          objc_msgSend(v13, "regionBoundingBox");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = objc_msgSend(v16, "isValid");

          if (v17)
          {
            objc_msgSend(v13, "regionBoundingBox");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "mapRegion");
            v19 = (void *)objc_claimAutoreleasedReturnValue();

            if (objc_msgSend(v19, "containsCoordinate:", a2, a3))
              objc_msgSend(v6, "addObject:", v13);

            v10 = 1;
          }
        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v9);
  }
  else
  {
    v10 = 0;
  }

  if ((objc_msgSend(v6, "count") != 0) | v10 & 1)
    v20 = v6;
  else
    v20 = v7;
  v21 = v20;

  return v21;
}

id geoLPRRegionsSortedByDistanceFromPoint(void *a1, double a2, double a3)
{
  _QWORD v4[6];

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __geoLPRRegionsSortedByDistanceFromPoint_block_invoke;
  v4[3] = &__block_descriptor_48_e39_q24__0__GEOLPRRegion_8__GEOLPRRegion_16l;
  *(double *)&v4[4] = a2;
  *(double *)&v4[5] = a3;
  objc_msgSend(a1, "sortedArrayUsingComparator:", v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t __geoLPRRegionsSortedByDistanceFromPoint_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  double v21;
  double v22;
  double v23;

  v5 = a2;
  v6 = a3;
  objc_msgSend(v5, "regionBoundingBox");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(v5, "regionBoundingBox");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "isValid");

  }
  else
  {
    v9 = 0;
  }

  objc_msgSend(v6, "regionBoundingBox");
  v10 = objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v11 = (void *)v10;
    objc_msgSend(v6, "regionBoundingBox");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "isValid");

    v14 = v9 & v13;
    if ((_DWORD)v9)
      v15 = -1;
    else
      v15 = v13;
    if (v14 == 1)
    {
      objc_msgSend(v5, "regionBoundingBox");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "center");
      v19 = GEOCalculateDistanceRadius(v17, v18, *(double *)(a1 + 32), *(double *)(a1 + 40), 6367000.0);

      objc_msgSend(v6, "regionBoundingBox");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "center");
      v23 = GEOCalculateDistanceRadius(v21, v22, *(double *)(a1 + 32), *(double *)(a1 + 40), 6367000.0);

      if (v19 < v23)
        v15 = -1;
      else
        v15 = v19 > v23;
    }
  }
  else
  {
    v15 = v9 << 63 >> 63;
  }

  return v15;
}

void sub_188D06498(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D06578(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D065EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188D066E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D06820(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D06954(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D069E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188D06AD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D06C1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id descriptionForLaneInfos(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t j;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  const __CFString *v16;
  int v17;
  void *v18;
  BOOL v19;
  void *v20;
  BOOL v21;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id obj;
  uint64_t i;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD v34[4];
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  _BYTE v41[128];
  _QWORD v42[10];
  _QWORD v43[10];
  _QWORD v44[10];
  _QWORD v45[12];

  v45[10] = *MEMORY[0x1E0C80C00];
  v23 = a1;
  v1 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  v44[0] = &unk_1E1E80DD0;
  v44[1] = &unk_1E1E80E00;
  v45[0] = &unk_1E1E80DE8;
  v45[1] = &unk_1E1E80E18;
  v44[2] = &unk_1E1E80E30;
  v44[3] = &unk_1E1E80E60;
  v45[2] = &unk_1E1E80E48;
  v45[3] = &unk_1E1E80E78;
  v44[4] = &unk_1E1E80E18;
  v44[5] = &unk_1E1E80E48;
  v45[4] = &unk_1E1E80E90;
  v45[5] = &unk_1E1E80EA8;
  v44[6] = &unk_1E1E80E90;
  v44[7] = &unk_1E1E80ED8;
  v45[6] = &unk_1E1E80EC0;
  v45[7] = &unk_1E1E80EF0;
  v44[8] = &unk_1E1E80F08;
  v44[9] = &unk_1E1E80DE8;
  v45[8] = &unk_1E1E80ED8;
  v45[9] = &unk_1E1E80F20;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v45, v44, 10);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v42[0] = &unk_1E1E80DD0;
  v42[1] = &unk_1E1E80E00;
  v43[0] = CFSTR("UL");
  v43[1] = CFSTR("SL");
  v42[2] = &unk_1E1E80E30;
  v42[3] = &unk_1E1E80E60;
  v43[2] = CFSTR("L");
  v43[3] = CFSTR("sL");
  v42[4] = &unk_1E1E80E18;
  v42[5] = &unk_1E1E80E48;
  v43[4] = CFSTR("S");
  v43[5] = CFSTR("sR");
  v42[6] = &unk_1E1E80E90;
  v42[7] = &unk_1E1E80ED8;
  v43[6] = CFSTR("R");
  v43[7] = CFSTR("SR");
  v42[8] = &unk_1E1E80F08;
  v42[9] = &unk_1E1E80DE8;
  v43[8] = CFSTR("UR");
  v43[9] = CFSTR("??");
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v43, v42, 10);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = 0u;
  v39 = 0u;
  v36 = 0u;
  v37 = 0u;
  obj = v23;
  v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
  if (v26)
  {
    v24 = *(_QWORD *)v37;
    do
    {
      for (i = 0; i != v26; ++i)
      {
        if (*(_QWORD *)v37 != v24)
          objc_enumerationMutation(obj);
        v2 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * i);
        objc_msgSend(v2, "directions");
        v3 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "firstObject");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        v5 = objc_msgSend(v4, "direction");

        objc_msgSend(v2, "directions");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v34[0] = MEMORY[0x1E0C809B0];
        v34[1] = 3221225472;
        v34[2] = __descriptionForLaneInfos_block_invoke;
        v34[3] = &unk_1E1C06258;
        v35 = v25;
        objc_msgSend(v6, "sortedArrayUsingComparator:", v34);
        v7 = (void *)objc_claimAutoreleasedReturnValue();

        v32 = 0u;
        v33 = 0u;
        v30 = 0u;
        v31 = 0u;
        v8 = v7;
        v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
        if (v9)
        {
          v10 = *(_QWORD *)v31;
          do
          {
            for (j = 0; j != v9; ++j)
            {
              if (*(_QWORD *)v31 != v10)
                objc_enumerationMutation(v8);
              v12 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * j);
              objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(v12, "direction"));
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v29, "objectForKeyedSubscript:", v13);
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v1, "appendString:", v14);

              if (objc_msgSend(v2, "isPreferredLaneForManeuver")
                && (v15 = objc_msgSend(v12, "direction"), v16 = CFSTR("*"), v15 == v5)
                || objc_msgSend(v2, "isLaneForManeuver")
                && (v17 = objc_msgSend(v12, "direction"), v16 = CFSTR("'"), v17 == v5))
              {
                objc_msgSend(v1, "appendString:", v16);
              }
              objc_msgSend(v8, "lastObject", v16);
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              v19 = v18 == v12;

              if (!v19)
                objc_msgSend(v1, "appendString:", CFSTR("/"));
            }
            v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
          }
          while (v9);
        }

        objc_msgSend(obj, "lastObject");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = v2 == v20;

        if (!v21)
          objc_msgSend(v1, "appendString:", CFSTR(" | "));

      }
      v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v41, 16);
    }
    while (v26);
  }

  return v1;
}

void sub_188D07168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

uint64_t __descriptionForLaneInfos_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v5 = a2;
  v6 = a3;
  v7 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(v5, "direction"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "objectForKeyedSubscript:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(v6, "direction"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "objectForKeyedSubscript:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = objc_msgSend(v9, "compare:", v12);
  return v13;
}

void sub_188D07314(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

uint64_t GEOResetGeoCodecsAllocator(geo::codec::Allocator *a1)
{
  uint64_t v1;

  v1 = geo::codec::Allocator::instance(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1);
}

void sub_188D0B634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D0C340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D0C528(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D0C6FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D0CB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188D0CD28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_188D0CF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188D0D054(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D0D150(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D0D208(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D0D634(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D0D758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188D0DA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_188D0DEC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D0E05C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D0E0D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D0E2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_188D0E530(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_188D0EB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188D0F4BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *__p,uint64_t a39,uint64_t a40,void *a41,uint64_t a42)
{
  void *v42;
  void *v43;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_188D0F750(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D0F820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188D0FEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, void *a19, void *a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a72;
  void *v72;
  void *v73;

  _Block_object_dispose(&a72, 8);
  _Block_object_dispose(&STACK[0x218], 8);

  _Unwind_Resume(a1);
}

void sub_188D100D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188D10504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_188D10644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188D107CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D10A80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_188D10CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v21 = v18;

  _Unwind_Resume(a1);
}

void sub_188D11104(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t ___ZL38_GEOTransitPreloadBatchPriorityHighestv_block_invoke()
{
  uint64_t result;
  int v1;

  result = GEOConfigGetBOOL(GeoServicesConfig_TilePreloaderUseLowPriorityDefaults, (uint64_t)off_1EDF4D608);
  if ((_DWORD)result)
    v1 = 0x40000000;
  else
    v1 = -4;
  _MergedGlobals_169 = v1;
  return result;
}

uint64_t ___ZL38_GEOTransitPreloadBatchPriorityDefaultv_block_invoke()
{
  uint64_t result;
  int v1;

  result = GEOConfigGetBOOL(GeoServicesConfig_TilePreloaderUseLowPriorityDefaults, (uint64_t)off_1EDF4D608);
  if ((_DWORD)result)
    v1 = 0x3FFFFFFF;
  else
    v1 = 2147483646;
  dword_1ECDBAB44 = v1;
  return result;
}

void sub_188D12284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCellConnectionQualityReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  uint64_t v112;
  unint64_t v113;
  int v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  char v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  char v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  unsigned int v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  char v203;
  char v204;
  unsigned int v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  char v221;
  char v222;
  unsigned int v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  char v228;
  unsigned int v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  char v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  char v239;
  char v240;
  unsigned int v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  char v246;
  char v247;
  unsigned int v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  char v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  char v258;
  char v259;
  unsigned int v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  char v264;
  char v265;
  unsigned int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  char v271;
  char v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  char v278;
  char v279;
  unsigned int v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  char v285;
  char v286;
  unsigned int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  char v292;
  char v293;
  unsigned int v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  char v299;
  char v300;
  unsigned int v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  char v306;
  char v307;
  unsigned int v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  char v312;
  char v313;
  unsigned int v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  char v318;
  char v319;
  unsigned int v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  char v324;
  char v325;
  unsigned int v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  char v330;
  char v331;
  unsigned int v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  char v336;
  char v337;
  unsigned int v338;
  uint64_t v339;
  uint64_t v340;
  unint64_t v341;
  char v342;
  char v343;
  unsigned int v344;
  uint64_t v345;
  uint64_t v346;
  unint64_t v347;
  char v348;
  char v349;
  unsigned int v350;
  uint64_t v351;
  uint64_t v352;
  unint64_t v353;
  char v354;
  char v355;
  unsigned int v356;
  uint64_t v357;
  uint64_t v358;
  unint64_t v359;
  char v360;
  char v361;
  unsigned int v362;
  uint64_t v363;
  uint64_t v364;
  unint64_t v365;
  char v366;
  char v367;
  unsigned int v368;
  uint64_t v369;
  uint64_t v370;
  unint64_t v371;
  char v372;
  char v373;
  unsigned int v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  unint64_t v378;
  char v379;
  char v380;
  unsigned int v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  unint64_t v385;
  char v386;
  char v387;
  unsigned int v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  unint64_t v392;
  char v393;
  void *v394;
  char v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t v398;
  unint64_t v399;
  char v400;
  char v401;
  unsigned int v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  char v406;
  char v407;
  unsigned int v408;
  uint64_t v409;
  unint64_t v410;
  char v411;
  char v412;
  unsigned int v413;
  uint64_t v414;
  unint64_t v415;
  char v416;
  char v417;
  unsigned int v418;
  uint64_t v419;
  uint64_t v420;
  unint64_t v421;
  char v422;
  char v423;
  unsigned int v424;
  uint64_t v425;
  uint64_t v426;
  unint64_t v427;
  char v428;
  char v429;
  unsigned int v430;
  uint64_t v431;
  uint64_t v432;
  unint64_t v433;
  char v434;
  char v435;
  unsigned int v436;
  uint64_t v437;
  unint64_t v438;
  char v439;
  char v440;
  unsigned int v441;
  uint64_t v442;
  unint64_t v443;
  char v444;
  char v445;
  uint64_t v446;
  uint64_t v447;
  BOOL v448;
  uint64_t v449;
  int v450;
  uint64_t v451;
  char v452;
  __int16 v453;
  char v454;
  char v455;
  char v456;
  char v457;
  char v458;
  char v459;
  char v460;
  char v461;
  char v462;
  uint64_t v463;
  int v464;
  int v465;
  __int16 v466;
  __int16 v467;
  void *v468;
  GEOLocation *v470;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 140);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 136));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(unsigned __int16 *)(a1 + 368);
  *(int32x2_t *)v12.i8 = vzip1_s32((int32x2_t)(v11 >> 4), (int32x2_t)(v11 >> 3));
  v12.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v11 >> 6), (int32x2_t)(v11 >> 5));
  *(int32x2_t *)v13.i8 = vzip1_s32((int32x2_t)(v11 >> 9), (int32x2_t)(v11 >> 8));
  v13.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v11 >> 7), (int32x2_t)(v11 >> 11));
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8(v12, v14), (int32x4_t)vandq_s8(v13, v14)))
      + ((v11 >> 10) & 1)
      + ((v11 >> 12) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v16 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v18 = v10 | (v15 > 7);
        if (v10 & 1 | (v15 > 7) | v8 & 1)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_6:
        v16 = v9;
        v17 = v10;
LABEL_8:
        ++v7;
        v9 = v16;
        v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_883;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v24 += 7;
      v30 = v25++ >= 9;
      if (v30)
      {
        v26 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_25:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_883:
      if ((v18 & 1) != 0)
      {
        *(_WORD *)(a1 + 368) |= 0x1FF8u;
        goto LABEL_904;
      }
      if (!v19)
      {
LABEL_904:
        v3 = *(_BYTE *)(v3 + *v21) == 0;
        if ((v18 & 1) == 0)
          return v3;
        goto LABEL_905;
      }
      while (1)
      {
        while (1)
        {
          v465 = *v19++;
          v464 = v465;
          if (v465 > 65)
            break;
          switch(v464)
          {
            case '#':
              v466 = 16;
              goto LABEL_902;
            case '$':
              v466 = 64;
              goto LABEL_902;
            case '%':
              v466 = 32;
              goto LABEL_902;
            case '&':
              v466 = 512;
              goto LABEL_902;
            case '\'':
              v466 = 256;
              goto LABEL_902;
            case '(':
            case ')':
            case '*':
            case '+':
            case ',':
              continue;
            case '-':
              v466 = 128;
              goto LABEL_902;
            default:
              if (v464 == 11)
              {
                v466 = 8;
                goto LABEL_902;
              }
              if (!v464)
                goto LABEL_904;
              break;
          }
        }
        if (v464 == 66)
          break;
        if (v464 == 67)
        {
          v466 = 1024;
LABEL_902:
          v467 = *(_WORD *)(a1 + 368) | v466;
          *(_QWORD *)(a1 + 360) = *(_QWORD *)(a1 + 360);
          *(_WORD *)(a1 + 368) = v467;
        }
        else if (v464 == 77)
        {
          v466 = 4096;
          goto LABEL_902;
        }
      }
      v466 = 2048;
      goto LABEL_902;
    }
    v33 = v26 >> 3;
    v34 = v18;
    if ((v22 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x4000000000uLL;
        while (2)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v30 = v40++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_598;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_598:
        v446 = 280;
        goto LABEL_850;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v47 = 0;
        v48 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x2000000000uLL;
        while (2)
        {
          v49 = *v20;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v41 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v30 = v48++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_602;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_602:
        v446 = 276;
        goto LABEL_850;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v53 = 0;
        v54 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x8000000uLL;
        while (2)
        {
          v55 = *v20;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v41 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_606;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_606:
        v446 = 236;
        goto LABEL_850;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v59 = 0;
        v60 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x1000000000uLL;
        while (2)
        {
          v61 = *v20;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v41 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_610;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_610:
        v446 = 272;
        goto LABEL_850;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v65 = 0;
        v66 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x40000000uLL;
        while (2)
        {
          v67 = *v20;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v41 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              v30 = v66++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_614;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_614:
        v446 = 248;
        goto LABEL_850;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v71 = 0;
        v72 = 0;
        v73 = 0;
        *(_QWORD *)(a1 + 360) |= 4uLL;
        while (2)
        {
          v74 = *v20;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              v30 = v72++ >= 9;
              if (v30)
              {
                v73 = 0;
                goto LABEL_618;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v73 = 0;
LABEL_618:
        v447 = 112;
        goto LABEL_663;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v78 = 0;
        v79 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x4000000uLL;
        while (2)
        {
          v80 = *v20;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v41 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              v30 = v79++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_622;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_622:
        v446 = 232;
        goto LABEL_850;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v84 = 0;
        v85 = 0;
        v86 = 0;
        *(_QWORD *)(a1 + 360) |= 0x1000000000000000uLL;
        while (2)
        {
          v87 = *v20;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              v30 = v85++ >= 9;
              if (v30)
              {
                v86 = 0;
                goto LABEL_626;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v86 = 0;
LABEL_626:
        v448 = v86 != 0;
        v449 = 353;
        goto LABEL_841;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v91 = 0;
        v92 = 0;
        v73 = 0;
        *(_QWORD *)(a1 + 360) |= 1uLL;
        while (2)
        {
          v93 = *v20;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v73 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              v30 = v92++ >= 9;
              if (v30)
              {
                v73 = 0;
                goto LABEL_630;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v73 = 0;
LABEL_630:
        v447 = 16;
        goto LABEL_663;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v97 = 0;
        v98 = 0;
        v73 = 0;
        *(_QWORD *)(a1 + 360) |= 2uLL;
        while (2)
        {
          v99 = *v20;
          v100 = *(_QWORD *)(v3 + v99);
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v100);
            *(_QWORD *)(v3 + v99) = v101;
            v73 |= (unint64_t)(v102 & 0x7F) << v97;
            if (v102 < 0)
            {
              v97 += 7;
              v30 = v98++ >= 9;
              if (v30)
              {
                v73 = 0;
                goto LABEL_634;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v73 = 0;
LABEL_634:
        v447 = 24;
        goto LABEL_663;
      case 11:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 8) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 32;
          goto LABEL_514;
        }
        v452 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v452 & 1) == 0)
          goto LABEL_908;
        v453 = *(_WORD *)(a1 + 368) << 12;
        goto LABEL_873;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v105 = 0;
        v106 = 0;
        v107 = 0;
        *(_QWORD *)(a1 + 360) |= 0x800000000000000uLL;
        while (2)
        {
          v108 = *v20;
          v109 = *(_QWORD *)(v3 + v108);
          v110 = v109 + 1;
          if (v109 == -1 || v110 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v111 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v109);
            *(_QWORD *)(v3 + v108) = v110;
            v107 |= (unint64_t)(v111 & 0x7F) << v105;
            if (v111 < 0)
            {
              v105 += 7;
              v30 = v106++ >= 9;
              if (v30)
              {
                v107 = 0;
                goto LABEL_638;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v107 = 0;
LABEL_638:
        v448 = v107 != 0;
        v449 = 352;
        goto LABEL_841;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        *(_QWORD *)(a1 + 360) |= 0x20000000uLL;
        v112 = *v20;
        v113 = *(_QWORD *)(v3 + v112);
        if (v113 <= 0xFFFFFFFFFFFFFFFBLL && v113 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v114 = *(_DWORD *)(*(_QWORD *)(v3 + *v23) + v113);
          *(_QWORD *)(v3 + v112) = v113 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v114 = 0;
        }
        v463 = 244;
        goto LABEL_882;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        *(_QWORD *)(a1 + 360) |= 0x10000000000uLL;
        v115 = *v20;
        v116 = *(_QWORD *)(v3 + v115);
        if (v116 <= 0xFFFFFFFFFFFFFFFBLL && v116 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v114 = *(_DWORD *)(*(_QWORD *)(v3 + *v23) + v116);
          *(_QWORD *)(v3 + v115) = v116 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v114 = 0;
        }
        v463 = 288;
        goto LABEL_882;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        *(_QWORD *)(a1 + 360) |= 0x10000000uLL;
        v117 = *v20;
        v118 = *(_QWORD *)(v3 + v117);
        if (v118 <= 0xFFFFFFFFFFFFFFFBLL && v118 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v114 = *(_DWORD *)(*(_QWORD *)(v3 + *v23) + v118);
          *(_QWORD *)(v3 + v117) = v118 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v114 = 0;
        }
        v463 = 240;
        goto LABEL_882;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        *(_QWORD *)(a1 + 360) |= 0x8000000000uLL;
        v119 = *v20;
        v120 = *(_QWORD *)(v3 + v119);
        if (v120 <= 0xFFFFFFFFFFFFFFFBLL && v120 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v114 = *(_DWORD *)(*(_QWORD *)(v3 + *v23) + v120);
          *(_QWORD *)(v3 + v119) = v120 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v114 = 0;
        }
        v463 = 284;
LABEL_882:
        *(_DWORD *)(a1 + v463) = v114;
        goto LABEL_851;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v121 = 0;
        v122 = 0;
        v123 = 0;
        *(_QWORD *)(a1 + 360) |= 0x4000000000000000uLL;
        while (2)
        {
          v124 = *v20;
          v125 = *(_QWORD *)(v3 + v124);
          v126 = v125 + 1;
          if (v125 == -1 || v126 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v125);
            *(_QWORD *)(v3 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              v30 = v122++ >= 9;
              if (v30)
              {
                v123 = 0;
                goto LABEL_642;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v123 = 0;
LABEL_642:
        v448 = v123 != 0;
        v449 = 355;
        goto LABEL_841;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v128 = 0;
        v129 = 0;
        v130 = 0;
        *(_QWORD *)(a1 + 360) |= 0x2000000000000000uLL;
        while (2)
        {
          v131 = *v20;
          v132 = *(_QWORD *)(v3 + v131);
          v133 = v132 + 1;
          if (v132 == -1 || v133 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v134 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v132);
            *(_QWORD *)(v3 + v131) = v133;
            v130 |= (unint64_t)(v134 & 0x7F) << v128;
            if (v134 < 0)
            {
              v128 += 7;
              v30 = v129++ >= 9;
              if (v30)
              {
                v130 = 0;
                goto LABEL_646;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v130 = 0;
LABEL_646:
        v448 = v130 != 0;
        v449 = 354;
        goto LABEL_841;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v135 = 0;
        v136 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x800000000uLL;
        while (2)
        {
          v137 = *v20;
          v138 = *(_QWORD *)(v3 + v137);
          v139 = v138 + 1;
          if (v138 == -1 || v139 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v140 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v138);
            *(_QWORD *)(v3 + v137) = v139;
            v41 |= (unint64_t)(v140 & 0x7F) << v135;
            if (v140 < 0)
            {
              v135 += 7;
              v30 = v136++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_650;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_650:
        v446 = 268;
        goto LABEL_850;
      case 20:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v141 = 0;
        v142 = 0;
        v143 = 0;
        *(_QWORD *)(a1 + 360) |= 8uLL;
        while (2)
        {
          v144 = *v20;
          v145 = *(_QWORD *)(v3 + v144);
          v146 = v145 + 1;
          if (v145 == -1 || v146 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v147 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v145);
            *(_QWORD *)(v3 + v144) = v146;
            v143 |= (unint64_t)(v147 & 0x7F) << v141;
            if (v147 < 0)
            {
              v141 += 7;
              v30 = v142++ >= 9;
              if (v30)
              {
                v143 = 0;
                goto LABEL_654;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v143 = 0;
LABEL_654:
        v73 = -(v143 & 1) ^ (v143 >> 1);
        v447 = 120;
        goto LABEL_663;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v148 = 0;
        v149 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x8000000000000uLL;
        while (2)
        {
          v150 = *v20;
          v151 = *(_QWORD *)(v3 + v150);
          v152 = v151 + 1;
          if (v151 == -1 || v152 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v153 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v151);
            *(_QWORD *)(v3 + v150) = v152;
            v41 |= (unint64_t)(v153 & 0x7F) << v148;
            if (v153 < 0)
            {
              v148 += 7;
              v30 = v149++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_658;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_658:
        v446 = 332;
        goto LABEL_850;
      case 22:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v154 = 0;
        v155 = 0;
        v156 = 0;
        *(_QWORD *)(a1 + 360) |= 0x10uLL;
        while (2)
        {
          v157 = *v20;
          v158 = *(_QWORD *)(v3 + v157);
          v159 = v158 + 1;
          if (v158 == -1 || v159 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v160 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v158);
            *(_QWORD *)(v3 + v157) = v159;
            v156 |= (unint64_t)(v160 & 0x7F) << v154;
            if (v160 < 0)
            {
              v154 += 7;
              v30 = v155++ >= 9;
              if (v30)
              {
                v156 = 0;
                goto LABEL_662;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v156 = 0;
LABEL_662:
        v73 = -(v156 & 1) ^ (v156 >> 1);
        v447 = 128;
LABEL_663:
        *(_QWORD *)(a1 + v447) = v73;
        goto LABEL_851;
      case 23:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v161 = 0;
        v162 = 0;
        v163 = 0;
        *(_QWORD *)(a1 + 360) |= 0x8000000000000000;
        while (2)
        {
          v164 = *v20;
          v165 = *(_QWORD *)(v3 + v164);
          v166 = v165 + 1;
          if (v165 == -1 || v166 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v167 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v165);
            *(_QWORD *)(v3 + v164) = v166;
            v163 |= (unint64_t)(v167 & 0x7F) << v161;
            if (v167 < 0)
            {
              v161 += 7;
              v30 = v162++ >= 9;
              if (v30)
              {
                v163 = 0;
                goto LABEL_667;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v163 = 0;
LABEL_667:
        v448 = v163 != 0;
        v449 = 356;
        goto LABEL_841;
      case 24:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v168 = 0;
        v169 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x2000000000000uLL;
        while (2)
        {
          v170 = *v20;
          v171 = *(_QWORD *)(v3 + v170);
          v172 = v171 + 1;
          if (v171 == -1 || v172 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v173 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v171);
            *(_QWORD *)(v3 + v170) = v172;
            v41 |= (unint64_t)(v173 & 0x7F) << v168;
            if (v173 < 0)
            {
              v168 += 7;
              v30 = v169++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_671;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_671:
        v446 = 324;
        goto LABEL_850;
      case 25:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v174 = 0;
        v175 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x200000000000uLL;
        while (2)
        {
          v176 = *v20;
          v177 = *(_QWORD *)(v3 + v176);
          v178 = v177 + 1;
          if (v177 == -1 || v178 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v179 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v177);
            *(_QWORD *)(v3 + v176) = v178;
            v41 |= (unint64_t)(v179 & 0x7F) << v174;
            if (v179 < 0)
            {
              v174 += 7;
              v30 = v175++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_675;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_675:
        v446 = 308;
        goto LABEL_850;
      case 26:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v180 = 0;
        v181 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x10000000000000uLL;
        while (2)
        {
          v182 = *v20;
          v183 = *(_QWORD *)(v3 + v182);
          v184 = v183 + 1;
          if (v183 == -1 || v184 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v185 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v183);
            *(_QWORD *)(v3 + v182) = v184;
            v41 |= (unint64_t)(v185 & 0x7F) << v180;
            if (v185 < 0)
            {
              v180 += 7;
              v30 = v181++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_679;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_679:
        v446 = 336;
        goto LABEL_850;
      case 27:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v186 = 0;
        v187 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x1000000000000uLL;
        while (2)
        {
          v188 = *v20;
          v189 = *(_QWORD *)(v3 + v188);
          v190 = v189 + 1;
          if (v189 == -1 || v190 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v191 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v189);
            *(_QWORD *)(v3 + v188) = v190;
            v41 |= (unint64_t)(v191 & 0x7F) << v186;
            if (v191 < 0)
            {
              v186 += 7;
              v30 = v187++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_683;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_683:
        v446 = 320;
        goto LABEL_850;
      case 28:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v192 = 0;
        v193 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x800000000000uLL;
        while (2)
        {
          v194 = *v20;
          v195 = *(_QWORD *)(v3 + v194);
          v196 = v195 + 1;
          if (v195 == -1 || v196 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v197 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v195);
            *(_QWORD *)(v3 + v194) = v196;
            v41 |= (unint64_t)(v197 & 0x7F) << v192;
            if (v197 < 0)
            {
              v192 += 7;
              v30 = v193++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_687;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_687:
        v446 = 316;
        goto LABEL_850;
      case 29:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v198 = 0;
        v199 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x40000000000uLL;
        while (2)
        {
          v200 = *v20;
          v201 = *(_QWORD *)(v3 + v200);
          v202 = v201 + 1;
          if (v201 == -1 || v202 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v203 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v201);
            *(_QWORD *)(v3 + v200) = v202;
            v41 |= (unint64_t)(v203 & 0x7F) << v198;
            if (v203 < 0)
            {
              v198 += 7;
              v30 = v199++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_691;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_691:
        v446 = 296;
        goto LABEL_850;
      case 30:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v204 = 0;
        v205 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x4000000000000uLL;
        while (2)
        {
          v206 = *v20;
          v207 = *(_QWORD *)(v3 + v206);
          v208 = v207 + 1;
          if (v207 == -1 || v208 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v209 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v207);
            *(_QWORD *)(v3 + v206) = v208;
            v41 |= (unint64_t)(v209 & 0x7F) << v204;
            if (v209 < 0)
            {
              v204 += 7;
              v30 = v205++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_695;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_695:
        v446 = 328;
        goto LABEL_850;
      case 31:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v210 = 0;
        v211 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x20000000000uLL;
        while (2)
        {
          v212 = *v20;
          v213 = *(_QWORD *)(v3 + v212);
          v214 = v213 + 1;
          if (v213 == -1 || v214 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v215 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v213);
            *(_QWORD *)(v3 + v212) = v214;
            v41 |= (unint64_t)(v215 & 0x7F) << v210;
            if (v215 < 0)
            {
              v210 += 7;
              v30 = v211++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_699;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_699:
        v446 = 292;
        goto LABEL_850;
      case 32:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v216 = 0;
        v217 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x100000000000uLL;
        while (2)
        {
          v218 = *v20;
          v219 = *(_QWORD *)(v3 + v218);
          v220 = v219 + 1;
          if (v219 == -1 || v220 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v221 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v219);
            *(_QWORD *)(v3 + v218) = v220;
            v41 |= (unint64_t)(v221 & 0x7F) << v216;
            if (v221 < 0)
            {
              v216 += 7;
              v30 = v217++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_703;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_703:
        v446 = 304;
        goto LABEL_850;
      case 33:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v222 = 0;
        v223 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x80000000000uLL;
        while (2)
        {
          v224 = *v20;
          v225 = *(_QWORD *)(v3 + v224);
          v226 = v225 + 1;
          if (v225 == -1 || v226 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v227 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v225);
            *(_QWORD *)(v3 + v224) = v226;
            v41 |= (unint64_t)(v227 & 0x7F) << v222;
            if (v227 < 0)
            {
              v222 += 7;
              v30 = v223++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_707;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_707:
        v446 = 300;
        goto LABEL_850;
      case 34:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v228 = 0;
        v229 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x400000000000uLL;
        while (2)
        {
          v230 = *v20;
          v231 = *(_QWORD *)(v3 + v230);
          v232 = v231 + 1;
          if (v231 == -1 || v232 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v233 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v231);
            *(_QWORD *)(v3 + v230) = v232;
            v41 |= (unint64_t)(v233 & 0x7F) << v228;
            if (v233 < 0)
            {
              v228 += 7;
              v30 = v229++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_711;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_711:
        v446 = 312;
        goto LABEL_850;
      case 35:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x10) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 40;
          goto LABEL_514;
        }
        v454 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v454 & 1) == 0)
          goto LABEL_908;
        v453 = *(_WORD *)(a1 + 368) << 11;
        goto LABEL_873;
      case 36:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x40) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 56;
          goto LABEL_514;
        }
        v455 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v455 & 1) == 0)
          goto LABEL_908;
        v453 = *(_WORD *)(a1 + 368) << 9;
        goto LABEL_873;
      case 37:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x20) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 48;
          goto LABEL_514;
        }
        v456 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v456 & 1) == 0)
          goto LABEL_908;
        v453 = *(_WORD *)(a1 + 368) << 10;
        goto LABEL_873;
      case 38:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x200) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 80;
          goto LABEL_514;
        }
        v457 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v457 & 1) == 0)
          goto LABEL_908;
        v453 = *(_WORD *)(a1 + 368) << 6;
        goto LABEL_873;
      case 39:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x100) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 72;
          goto LABEL_514;
        }
        v458 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v458 & 1) == 0)
          goto LABEL_908;
        v453 = *(_WORD *)(a1 + 368) << 7;
        goto LABEL_873;
      case 40:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v234 = 0;
        v235 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x2000000uLL;
        while (2)
        {
          v236 = *v20;
          v237 = *(_QWORD *)(v3 + v236);
          v238 = v237 + 1;
          if (v237 == -1 || v238 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v239 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v237);
            *(_QWORD *)(v3 + v236) = v238;
            v41 |= (unint64_t)(v239 & 0x7F) << v234;
            if (v239 < 0)
            {
              v234 += 7;
              v30 = v235++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_715;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_715:
        v446 = 228;
        goto LABEL_850;
      case 41:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v240 = 0;
        v241 = 0;
        v242 = 0;
        *(_QWORD *)(a1 + 360) |= 0x400000000000000uLL;
        while (2)
        {
          v243 = *v20;
          v244 = *(_QWORD *)(v3 + v243);
          v245 = v244 + 1;
          if (v244 == -1 || v245 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v246 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v244);
            *(_QWORD *)(v3 + v243) = v245;
            v242 |= (unint64_t)(v246 & 0x7F) << v240;
            if (v246 < 0)
            {
              v240 += 7;
              v30 = v241++ >= 9;
              if (v30)
              {
                v242 = 0;
                goto LABEL_719;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v242 = 0;
LABEL_719:
        v448 = v242 != 0;
        v449 = 351;
        goto LABEL_841;
      case 42:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v247 = 0;
        v248 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x8000uLL;
        while (2)
        {
          v249 = *v20;
          v250 = *(_QWORD *)(v3 + v249);
          v251 = v250 + 1;
          if (v250 == -1 || v251 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v252 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v250);
            *(_QWORD *)(v3 + v249) = v251;
            v41 |= (unint64_t)(v252 & 0x7F) << v247;
            if (v252 < 0)
            {
              v247 += 7;
              v30 = v248++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_723;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_723:
        v446 = 188;
        goto LABEL_850;
      case 43:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v253 = 0;
        v254 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x20uLL;
        while (2)
        {
          v255 = *v20;
          v256 = *(_QWORD *)(v3 + v255);
          v257 = v256 + 1;
          if (v256 == -1 || v257 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v258 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v256);
            *(_QWORD *)(v3 + v255) = v257;
            v41 |= (unint64_t)(v258 & 0x7F) << v253;
            if (v258 < 0)
            {
              v253 += 7;
              v30 = v254++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_727;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_727:
        v446 = 148;
        goto LABEL_850;
      case 44:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v259 = 0;
        v260 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x40uLL;
        while (2)
        {
          v261 = *v20;
          v262 = *(_QWORD *)(v3 + v261);
          v263 = v262 + 1;
          if (v262 == -1 || v263 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v264 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v262);
            *(_QWORD *)(v3 + v261) = v263;
            v41 |= (unint64_t)(v264 & 0x7F) << v259;
            if (v264 < 0)
            {
              v259 += 7;
              v30 = v260++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_731;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_731:
        v446 = 152;
        goto LABEL_850;
      case 45:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x80) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 64;
          goto LABEL_514;
        }
        v459 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v459 & 1) == 0)
          goto LABEL_908;
        v453 = *(_WORD *)(a1 + 368) << 8;
        goto LABEL_873;
      case 46:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v265 = 0;
        v266 = 0;
        v267 = 0;
        *(_QWORD *)(a1 + 360) |= 0x400uLL;
        while (2)
        {
          v268 = *v20;
          v269 = *(_QWORD *)(v3 + v268);
          v270 = v269 + 1;
          if (v269 == -1 || v270 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v271 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v269);
            *(_QWORD *)(v3 + v268) = v270;
            v267 |= (unint64_t)(v271 & 0x7F) << v265;
            if (v271 < 0)
            {
              v265 += 7;
              v30 = v266++ >= 9;
              if (v30)
              {
                LODWORD(v267) = 0;
                goto LABEL_735;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v267) = 0;
LABEL_735:
        v450 = -(v267 & 1) ^ ((int)v267 >> 1);
        v451 = 168;
        goto LABEL_756;
      case 47:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v272 = 0;
        v273 = 0;
        v274 = 0;
        *(_QWORD *)(a1 + 360) |= 0x1000uLL;
        while (2)
        {
          v275 = *v20;
          v276 = *(_QWORD *)(v3 + v275);
          v277 = v276 + 1;
          if (v276 == -1 || v277 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v278 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v276);
            *(_QWORD *)(v3 + v275) = v277;
            v274 |= (unint64_t)(v278 & 0x7F) << v272;
            if (v278 < 0)
            {
              v272 += 7;
              v30 = v273++ >= 9;
              if (v30)
              {
                LODWORD(v274) = 0;
                goto LABEL_739;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v274) = 0;
LABEL_739:
        v450 = -(v274 & 1) ^ ((int)v274 >> 1);
        v451 = 176;
        goto LABEL_756;
      case 48:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v279 = 0;
        v280 = 0;
        v281 = 0;
        *(_QWORD *)(a1 + 360) |= 0x800uLL;
        while (2)
        {
          v282 = *v20;
          v283 = *(_QWORD *)(v3 + v282);
          v284 = v283 + 1;
          if (v283 == -1 || v284 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v285 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v283);
            *(_QWORD *)(v3 + v282) = v284;
            v281 |= (unint64_t)(v285 & 0x7F) << v279;
            if (v285 < 0)
            {
              v279 += 7;
              v30 = v280++ >= 9;
              if (v30)
              {
                LODWORD(v281) = 0;
                goto LABEL_743;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v281) = 0;
LABEL_743:
        v450 = -(v281 & 1) ^ ((int)v281 >> 1);
        v451 = 172;
        goto LABEL_756;
      case 49:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v286 = 0;
        v287 = 0;
        v288 = 0;
        *(_QWORD *)(a1 + 360) |= 0x10000uLL;
        while (2)
        {
          v289 = *v20;
          v290 = *(_QWORD *)(v3 + v289);
          v291 = v290 + 1;
          if (v290 == -1 || v291 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v292 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v290);
            *(_QWORD *)(v3 + v289) = v291;
            v288 |= (unint64_t)(v292 & 0x7F) << v286;
            if (v292 < 0)
            {
              v286 += 7;
              v30 = v287++ >= 9;
              if (v30)
              {
                LODWORD(v288) = 0;
                goto LABEL_747;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v288) = 0;
LABEL_747:
        v450 = -(v288 & 1) ^ ((int)v288 >> 1);
        v451 = 192;
        goto LABEL_756;
      case 50:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v293 = 0;
        v294 = 0;
        v295 = 0;
        *(_QWORD *)(a1 + 360) |= 0x20000uLL;
        while (2)
        {
          v296 = *v20;
          v297 = *(_QWORD *)(v3 + v296);
          v298 = v297 + 1;
          if (v297 == -1 || v298 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v299 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v297);
            *(_QWORD *)(v3 + v296) = v298;
            v295 |= (unint64_t)(v299 & 0x7F) << v293;
            if (v299 < 0)
            {
              v293 += 7;
              v30 = v294++ >= 9;
              if (v30)
              {
                LODWORD(v295) = 0;
                goto LABEL_751;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v295) = 0;
LABEL_751:
        v450 = -(v295 & 1) ^ ((int)v295 >> 1);
        v451 = 196;
        goto LABEL_756;
      case 51:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v300 = 0;
        v301 = 0;
        v302 = 0;
        *(_QWORD *)(a1 + 360) |= 0x40000uLL;
        while (2)
        {
          v303 = *v20;
          v304 = *(_QWORD *)(v3 + v303);
          v305 = v304 + 1;
          if (v304 == -1 || v305 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v306 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v304);
            *(_QWORD *)(v3 + v303) = v305;
            v302 |= (unint64_t)(v306 & 0x7F) << v300;
            if (v306 < 0)
            {
              v300 += 7;
              v30 = v301++ >= 9;
              if (v30)
              {
                LODWORD(v302) = 0;
                goto LABEL_755;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v302) = 0;
LABEL_755:
        v450 = -(v302 & 1) ^ ((int)v302 >> 1);
        v451 = 200;
LABEL_756:
        *(_DWORD *)(a1 + v451) = v450;
        goto LABEL_851;
      case 52:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v307 = 0;
        v308 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x100uLL;
        while (2)
        {
          v309 = *v20;
          v310 = *(_QWORD *)(v3 + v309);
          v311 = v310 + 1;
          if (v310 == -1 || v311 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v312 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v310);
            *(_QWORD *)(v3 + v309) = v311;
            v41 |= (unint64_t)(v312 & 0x7F) << v307;
            if (v312 < 0)
            {
              v307 += 7;
              v30 = v308++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_760;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_760:
        v446 = 160;
        goto LABEL_850;
      case 53:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v313 = 0;
        v314 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x400000uLL;
        while (2)
        {
          v315 = *v20;
          v316 = *(_QWORD *)(v3 + v315);
          v317 = v316 + 1;
          if (v316 == -1 || v317 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v318 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v316);
            *(_QWORD *)(v3 + v315) = v317;
            v41 |= (unint64_t)(v318 & 0x7F) << v313;
            if (v318 < 0)
            {
              v313 += 7;
              v30 = v314++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_764;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_764:
        v446 = 216;
        goto LABEL_850;
      case 54:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v319 = 0;
        v320 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x80000uLL;
        while (2)
        {
          v321 = *v20;
          v322 = *(_QWORD *)(v3 + v321);
          v323 = v322 + 1;
          if (v322 == -1 || v323 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v324 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v322);
            *(_QWORD *)(v3 + v321) = v323;
            v41 |= (unint64_t)(v324 & 0x7F) << v319;
            if (v324 < 0)
            {
              v319 += 7;
              v30 = v320++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_768;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_768:
        v446 = 204;
        goto LABEL_850;
      case 55:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v325 = 0;
        v326 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x100000uLL;
        while (2)
        {
          v327 = *v20;
          v328 = *(_QWORD *)(v3 + v327);
          v329 = v328 + 1;
          if (v328 == -1 || v329 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v330 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v328);
            *(_QWORD *)(v3 + v327) = v329;
            v41 |= (unint64_t)(v330 & 0x7F) << v325;
            if (v330 < 0)
            {
              v325 += 7;
              v30 = v326++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_772;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_772:
        v446 = 208;
        goto LABEL_850;
      case 56:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v331 = 0;
        v332 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x800000uLL;
        while (2)
        {
          v333 = *v20;
          v334 = *(_QWORD *)(v3 + v333);
          v335 = v334 + 1;
          if (v334 == -1 || v335 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v336 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v334);
            *(_QWORD *)(v3 + v333) = v335;
            v41 |= (unint64_t)(v336 & 0x7F) << v331;
            if (v336 < 0)
            {
              v331 += 7;
              v30 = v332++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_776;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_776:
        v446 = 220;
        goto LABEL_850;
      case 57:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v337 = 0;
        v338 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x1000000uLL;
        while (2)
        {
          v339 = *v20;
          v340 = *(_QWORD *)(v3 + v339);
          v341 = v340 + 1;
          if (v340 == -1 || v341 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v342 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v340);
            *(_QWORD *)(v3 + v339) = v341;
            v41 |= (unint64_t)(v342 & 0x7F) << v337;
            if (v342 < 0)
            {
              v337 += 7;
              v30 = v338++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_780;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_780:
        v446 = 224;
        goto LABEL_850;
      case 58:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v343 = 0;
        v344 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x80uLL;
        while (2)
        {
          v345 = *v20;
          v346 = *(_QWORD *)(v3 + v345);
          v347 = v346 + 1;
          if (v346 == -1 || v347 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v348 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v346);
            *(_QWORD *)(v3 + v345) = v347;
            v41 |= (unint64_t)(v348 & 0x7F) << v343;
            if (v348 < 0)
            {
              v343 += 7;
              v30 = v344++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_784;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_784:
        v446 = 156;
        goto LABEL_850;
      case 59:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v349 = 0;
        v350 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x2000uLL;
        while (2)
        {
          v351 = *v20;
          v352 = *(_QWORD *)(v3 + v351);
          v353 = v352 + 1;
          if (v352 == -1 || v353 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v354 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v352);
            *(_QWORD *)(v3 + v351) = v353;
            v41 |= (unint64_t)(v354 & 0x7F) << v349;
            if (v354 < 0)
            {
              v349 += 7;
              v30 = v350++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_788;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_788:
        v446 = 180;
        goto LABEL_850;
      case 60:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v355 = 0;
        v356 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x4000uLL;
        while (2)
        {
          v357 = *v20;
          v358 = *(_QWORD *)(v3 + v357);
          v359 = v358 + 1;
          if (v358 == -1 || v359 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v360 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v358);
            *(_QWORD *)(v3 + v357) = v359;
            v41 |= (unint64_t)(v360 & 0x7F) << v355;
            if (v360 < 0)
            {
              v355 += 7;
              v30 = v356++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_792;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_792:
        v446 = 184;
        goto LABEL_850;
      case 61:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v361 = 0;
        v362 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x200uLL;
        while (2)
        {
          v363 = *v20;
          v364 = *(_QWORD *)(v3 + v363);
          v365 = v364 + 1;
          if (v364 == -1 || v365 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v366 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v364);
            *(_QWORD *)(v3 + v363) = v365;
            v41 |= (unint64_t)(v366 & 0x7F) << v361;
            if (v366 < 0)
            {
              v361 += 7;
              v30 = v362++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_796;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_796:
        v446 = 164;
        goto LABEL_850;
      case 62:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v367 = 0;
        v368 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x200000uLL;
        while (2)
        {
          v369 = *v20;
          v370 = *(_QWORD *)(v3 + v369);
          v371 = v370 + 1;
          if (v370 == -1 || v371 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v372 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v370);
            *(_QWORD *)(v3 + v369) = v371;
            v41 |= (unint64_t)(v372 & 0x7F) << v367;
            if (v372 < 0)
            {
              v367 += 7;
              v30 = v368++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_800;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_800:
        v446 = 212;
        goto LABEL_850;
      case 63:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v373 = 0;
        v374 = 0;
        v375 = 0;
        *(_QWORD *)(a1 + 360) |= 0x200000000000000uLL;
        while (2)
        {
          v376 = *v20;
          v377 = *(_QWORD *)(v3 + v376);
          v378 = v377 + 1;
          if (v377 == -1 || v378 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v379 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v377);
            *(_QWORD *)(v3 + v376) = v378;
            v375 |= (unint64_t)(v379 & 0x7F) << v373;
            if (v379 < 0)
            {
              v373 += 7;
              v30 = v374++ >= 9;
              if (v30)
              {
                v375 = 0;
                goto LABEL_804;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v375 = 0;
LABEL_804:
        v448 = v375 != 0;
        v449 = 350;
        goto LABEL_841;
      case 64:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v380 = 0;
        v381 = 0;
        v382 = 0;
        *(_QWORD *)(a1 + 360) |= 0x100000000000000uLL;
        while (2)
        {
          v383 = *v20;
          v384 = *(_QWORD *)(v3 + v383);
          v385 = v384 + 1;
          if (v384 == -1 || v385 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v386 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v384);
            *(_QWORD *)(v3 + v383) = v385;
            v382 |= (unint64_t)(v386 & 0x7F) << v380;
            if (v386 < 0)
            {
              v380 += 7;
              v30 = v381++ >= 9;
              if (v30)
              {
                v382 = 0;
                goto LABEL_808;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v382 = 0;
LABEL_808:
        v448 = v382 != 0;
        v449 = 349;
        goto LABEL_841;
      case 65:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v387 = 0;
        v388 = 0;
        v389 = 0;
        *(_QWORD *)(a1 + 360) |= 0x80000000000000uLL;
        while (2)
        {
          v390 = *v20;
          v391 = *(_QWORD *)(v3 + v390);
          v392 = v391 + 1;
          if (v391 == -1 || v392 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v393 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v391);
            *(_QWORD *)(v3 + v390) = v392;
            v389 |= (unint64_t)(v393 & 0x7F) << v387;
            if (v393 < 0)
            {
              v387 += 7;
              v30 = v388++ >= 9;
              if (v30)
              {
                v389 = 0;
                goto LABEL_812;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v389 = 0;
LABEL_812:
        v448 = v389 != 0;
        v449 = 348;
        goto LABEL_841;
      case 66:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x800) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 96;
          goto LABEL_514;
        }
        v460 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v460 & 1) == 0)
          goto LABEL_908;
        v453 = 16 * *(_WORD *)(a1 + 368);
        goto LABEL_873;
      case 67:
        if (!v34)
          goto LABEL_593;
        if ((*(_WORD *)(a1 + 368) & 0x400) == 0)
        {
          PBReaderReadString();
          v103 = objc_claimAutoreleasedReturnValue();
          v104 = 88;
LABEL_514:
          v394 = *(void **)(a1 + v104);
          *(_QWORD *)(a1 + v104) = v103;
          goto LABEL_515;
        }
        v461 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (v19 == 0) | v18;
        if ((v461 & 1) == 0)
          goto LABEL_908;
        v453 = 32 * *(_WORD *)(a1 + 368);
        goto LABEL_873;
      case 68:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v395 = 0;
        v396 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x200000000uLL;
        while (2)
        {
          v397 = *v20;
          v398 = *(_QWORD *)(v3 + v397);
          v399 = v398 + 1;
          if (v398 == -1 || v399 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v400 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v398);
            *(_QWORD *)(v3 + v397) = v399;
            v41 |= (unint64_t)(v400 & 0x7F) << v395;
            if (v400 < 0)
            {
              v395 += 7;
              v30 = v396++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_816;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_816:
        v446 = 260;
        goto LABEL_850;
      case 69:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v401 = 0;
        v402 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x100000000uLL;
        while (2)
        {
          v403 = *v20;
          v404 = *(_QWORD *)(v3 + v403);
          v405 = v404 + 1;
          if (v404 == -1 || v405 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v406 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v404);
            *(_QWORD *)(v3 + v403) = v405;
            v41 |= (unint64_t)(v406 & 0x7F) << v401;
            if (v406 < 0)
            {
              v401 += 7;
              v30 = v402++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_820;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_820:
        v446 = 256;
        goto LABEL_850;
      case 70:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v407 = 0;
        v408 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x400000000uLL;
        while (2)
        {
          v409 = *v20;
          v410 = *(_QWORD *)(v3 + v409);
          if (v410 == -1 || v410 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v411 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v410);
            *(_QWORD *)(v3 + v409) = v410 + 1;
            v41 |= (unint64_t)(v411 & 0x7F) << v407;
            if (v411 < 0)
            {
              v407 += 7;
              v30 = v408++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_824;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_824:
        v446 = 264;
        goto LABEL_850;
      case 71:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v412 = 0;
        v413 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x80000000uLL;
        while (2)
        {
          v414 = *v20;
          v415 = *(_QWORD *)(v3 + v414);
          if (v415 == -1 || v415 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v416 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v415);
            *(_QWORD *)(v3 + v414) = v415 + 1;
            v41 |= (unint64_t)(v416 & 0x7F) << v412;
            if (v416 < 0)
            {
              v412 += 7;
              v30 = v413++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_828;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_828:
        v446 = 252;
        goto LABEL_850;
      case 72:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v417 = 0;
        v418 = 0;
        v419 = 0;
        *(_WORD *)(a1 + 368) |= 1u;
        while (2)
        {
          v420 = *v20;
          v421 = *(_QWORD *)(v3 + v420);
          if (v421 == -1 || v421 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v422 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v421);
            *(_QWORD *)(v3 + v420) = v421 + 1;
            v419 |= (unint64_t)(v422 & 0x7F) << v417;
            if (v422 < 0)
            {
              v417 += 7;
              v30 = v418++ >= 9;
              if (v30)
              {
                v419 = 0;
                goto LABEL_832;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v419 = 0;
LABEL_832:
        v448 = v419 != 0;
        v449 = 357;
        goto LABEL_841;
      case 73:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v423 = 0;
        v424 = 0;
        v425 = 0;
        *(_WORD *)(a1 + 368) |= 4u;
        while (2)
        {
          v426 = *v20;
          v427 = *(_QWORD *)(v3 + v426);
          if (v427 == -1 || v427 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v428 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v427);
            *(_QWORD *)(v3 + v426) = v427 + 1;
            v425 |= (unint64_t)(v428 & 0x7F) << v423;
            if (v428 < 0)
            {
              v423 += 7;
              v30 = v424++ >= 9;
              if (v30)
              {
                v425 = 0;
                goto LABEL_836;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v425 = 0;
LABEL_836:
        v448 = v425 != 0;
        v449 = 359;
        goto LABEL_841;
      case 74:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v429 = 0;
        v430 = 0;
        v431 = 0;
        *(_WORD *)(a1 + 368) |= 2u;
        while (2)
        {
          v432 = *v20;
          v433 = *(_QWORD *)(v3 + v432);
          if (v433 == -1 || v433 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v434 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v433);
            *(_QWORD *)(v3 + v432) = v433 + 1;
            v431 |= (unint64_t)(v434 & 0x7F) << v429;
            if (v434 < 0)
            {
              v429 += 7;
              v30 = v430++ >= 9;
              if (v30)
              {
                v431 = 0;
                goto LABEL_840;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v431 = 0;
LABEL_840:
        v448 = v431 != 0;
        v449 = 358;
LABEL_841:
        *(_BYTE *)(a1 + v449) = v448;
        goto LABEL_851;
      case 75:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v435 = 0;
        v436 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x40000000000000uLL;
        while (2)
        {
          v437 = *v20;
          v438 = *(_QWORD *)(v3 + v437);
          if (v438 == -1 || v438 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v439 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v438);
            *(_QWORD *)(v3 + v437) = v438 + 1;
            v41 |= (unint64_t)(v439 & 0x7F) << v435;
            if (v439 < 0)
            {
              v435 += 7;
              v30 = v436++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_845;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_845:
        v446 = 344;
        goto LABEL_850;
      case 76:
        if ((v8 & 1) == 0)
          goto LABEL_593;
        v440 = 0;
        v441 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 360) |= 0x20000000000000uLL;
        while (2)
        {
          v442 = *v20;
          v443 = *(_QWORD *)(v3 + v442);
          if (v443 == -1 || v443 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v444 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v443);
            *(_QWORD *)(v3 + v442) = v443 + 1;
            v41 |= (unint64_t)(v444 & 0x7F) << v440;
            if (v444 < 0)
            {
              v440 += 7;
              v30 = v441++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_849;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_849:
        v446 = 340;
LABEL_850:
        *(_DWORD *)(a1 + v446) = v41;
        goto LABEL_851;
      case 77:
        if (!v34)
        {
LABEL_593:
          v445 = PBReaderSkipValueWithTag();
          v22 = (v19 == 0) | v18;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v445 & 1) == 0)
            goto LABEL_908;
          goto LABEL_851;
        }
        if ((*(_WORD *)(a1 + 368) & 0x1000) != 0)
        {
          v462 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (v19 == 0) | v18;
          if ((v462 & 1) == 0)
            goto LABEL_908;
          v453 = 8 * *(_WORD *)(a1 + 368);
LABEL_873:
          v7 += (uint64_t)v453 >> 15;
LABEL_851:
          if (!(v18 & 1 | (v7 != 0)))
            goto LABEL_883;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_908;
        v470 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v470, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v394 = *(void **)(a1 + 104);
          *(_QWORD *)(a1 + 104) = v470;
LABEL_515:

          --v7;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (v19 == 0) | v18;
          goto LABEL_851;
        }

LABEL_908:
        v3 = 0;
        *(_WORD *)(a1 + 368) |= 0x1FF8u;
        if ((v18 & 1) != 0)
        {
LABEL_905:
          v468 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        v46 = PBReaderSkipValueWithTag();
        v22 = (v19 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v46)
          goto LABEL_908;
        goto LABEL_851;
    }
  }
}

void sub_188D16924(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D16A70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D16BBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D16D04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D16E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D1726C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D17EF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D18044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D1867C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D1B814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCellConnectionQualityReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 140))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCellConnectionQualityReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 144));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 136) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 140) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCellConnectionQualityReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCellConnectionQualityReadAllFrom_initialTag;
  Specified = GEOCellConnectionQualityReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 104), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 144));
  return Specified;
}

void sub_188D1B9B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCellConnectionQualityReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCellConnectionQualityReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D1BA18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCellConnectionQualityIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  int v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  int v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  int v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  int v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  int v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  int v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  int v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  int v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  int v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  int v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  int v171;
  unsigned int v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  int v176;
  unsigned int v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  int v181;
  unsigned int v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  int v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  int v191;
  unsigned int v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  int v196;
  unsigned int v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  int v201;
  unsigned int v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  int v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  int v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  int v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  int v221;
  unsigned int v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  int v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  int v231;
  unsigned int v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  int v236;
  unsigned int v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  int v241;
  unsigned int v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  int v246;
  unsigned int v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  int v251;
  unsigned int v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  int v256;
  unsigned int v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  int v261;
  unsigned int v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  int v266;
  unsigned int v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  int v271;
  unsigned int v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  int v276;
  unsigned int v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  int v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  int v286;
  unsigned int v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  int v291;
  unsigned int v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  int v296;
  unsigned int v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  int v301;
  unsigned int v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  int v306;
  unsigned int v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  int v311;
  unsigned int v312;
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  int v316;
  unsigned int v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  int v321;
  unsigned int v322;
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  int v326;
  unsigned int v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  int v331;
  unsigned int v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  int v336;
  _BOOL8 v337;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v26 = v67++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0xBu:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v26 = v72++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x10u:
          if (v16 != 5)
            goto LABEL_556;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_547;
          v20 = v19 + 4;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_547;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v26 = v77++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v82 = 0;
          while (1)
          {
            v83 = *v2;
            v84 = *(_QWORD *)&a1[v83];
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
            *(_QWORD *)&a1[v83] = v85;
            if (v86 < 0)
            {
              v26 = v82++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v87 = 0;
          while (1)
          {
            v88 = *v2;
            v89 = *(_QWORD *)&a1[v88];
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
            *(_QWORD *)&a1[v88] = v90;
            if (v91 < 0)
            {
              v26 = v87++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v92 = 0;
          while (1)
          {
            v93 = *v2;
            v94 = *(_QWORD *)&a1[v93];
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v96 = *(char *)(*(_QWORD *)&a1[*v5] + v94);
            *(_QWORD *)&a1[v93] = v95;
            if (v96 < 0)
            {
              v26 = v92++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v97 = 0;
          while (1)
          {
            v98 = *v2;
            v99 = *(_QWORD *)&a1[v98];
            v100 = v99 + 1;
            if (v99 == -1 || v100 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v101 = *(char *)(*(_QWORD *)&a1[*v5] + v99);
            *(_QWORD *)&a1[v98] = v100;
            if (v101 < 0)
            {
              v26 = v97++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v102 = 0;
          while (1)
          {
            v103 = *v2;
            v104 = *(_QWORD *)&a1[v103];
            v105 = v104 + 1;
            if (v104 == -1 || v105 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v106 = *(char *)(*(_QWORD *)&a1[*v5] + v104);
            *(_QWORD *)&a1[v103] = v105;
            if (v106 < 0)
            {
              v26 = v102++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v107 = 0;
          while (1)
          {
            v108 = *v2;
            v109 = *(_QWORD *)&a1[v108];
            v110 = v109 + 1;
            if (v109 == -1 || v110 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v111 = *(char *)(*(_QWORD *)&a1[*v5] + v109);
            *(_QWORD *)&a1[v108] = v110;
            if (v111 < 0)
            {
              v26 = v107++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v112 = 0;
          while (1)
          {
            v113 = *v2;
            v114 = *(_QWORD *)&a1[v113];
            v115 = v114 + 1;
            if (v114 == -1 || v115 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v116 = *(char *)(*(_QWORD *)&a1[*v5] + v114);
            *(_QWORD *)&a1[v113] = v115;
            if (v116 < 0)
            {
              v26 = v112++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x19u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v117 = 0;
          while (1)
          {
            v118 = *v2;
            v119 = *(_QWORD *)&a1[v118];
            v120 = v119 + 1;
            if (v119 == -1 || v120 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v121 = *(char *)(*(_QWORD *)&a1[*v5] + v119);
            *(_QWORD *)&a1[v118] = v120;
            if (v121 < 0)
            {
              v26 = v117++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v122 = 0;
          while (1)
          {
            v123 = *v2;
            v124 = *(_QWORD *)&a1[v123];
            v125 = v124 + 1;
            if (v124 == -1 || v125 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v126 = *(char *)(*(_QWORD *)&a1[*v5] + v124);
            *(_QWORD *)&a1[v123] = v125;
            if (v126 < 0)
            {
              v26 = v122++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v127 = 0;
          while (1)
          {
            v128 = *v2;
            v129 = *(_QWORD *)&a1[v128];
            v130 = v129 + 1;
            if (v129 == -1 || v130 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v131 = *(char *)(*(_QWORD *)&a1[*v5] + v129);
            *(_QWORD *)&a1[v128] = v130;
            if (v131 < 0)
            {
              v26 = v127++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v132 = 0;
          while (1)
          {
            v133 = *v2;
            v134 = *(_QWORD *)&a1[v133];
            v135 = v134 + 1;
            if (v134 == -1 || v135 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v136 = *(char *)(*(_QWORD *)&a1[*v5] + v134);
            *(_QWORD *)&a1[v133] = v135;
            if (v136 < 0)
            {
              v26 = v132++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v137 = 0;
          while (1)
          {
            v138 = *v2;
            v139 = *(_QWORD *)&a1[v138];
            v140 = v139 + 1;
            if (v139 == -1 || v140 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v141 = *(char *)(*(_QWORD *)&a1[*v5] + v139);
            *(_QWORD *)&a1[v138] = v140;
            if (v141 < 0)
            {
              v26 = v137++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v142 = 0;
          while (1)
          {
            v143 = *v2;
            v144 = *(_QWORD *)&a1[v143];
            v145 = v144 + 1;
            if (v144 == -1 || v145 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v146 = *(char *)(*(_QWORD *)&a1[*v5] + v144);
            *(_QWORD *)&a1[v143] = v145;
            if (v146 < 0)
            {
              v26 = v142++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v147 = 0;
          while (1)
          {
            v148 = *v2;
            v149 = *(_QWORD *)&a1[v148];
            v150 = v149 + 1;
            if (v149 == -1 || v150 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v151 = *(char *)(*(_QWORD *)&a1[*v5] + v149);
            *(_QWORD *)&a1[v148] = v150;
            if (v151 < 0)
            {
              v26 = v147++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v152 = 0;
          while (1)
          {
            v153 = *v2;
            v154 = *(_QWORD *)&a1[v153];
            v155 = v154 + 1;
            if (v154 == -1 || v155 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v156 = *(char *)(*(_QWORD *)&a1[*v5] + v154);
            *(_QWORD *)&a1[v153] = v155;
            if (v156 < 0)
            {
              v26 = v152++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x21u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v157 = 0;
          while (1)
          {
            v158 = *v2;
            v159 = *(_QWORD *)&a1[v158];
            v160 = v159 + 1;
            if (v159 == -1 || v160 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v161 = *(char *)(*(_QWORD *)&a1[*v5] + v159);
            *(_QWORD *)&a1[v158] = v160;
            if (v161 < 0)
            {
              v26 = v157++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x22u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v162 = 0;
          while (1)
          {
            v163 = *v2;
            v164 = *(_QWORD *)&a1[v163];
            v165 = v164 + 1;
            if (v164 == -1 || v165 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v166 = *(char *)(*(_QWORD *)&a1[*v5] + v164);
            *(_QWORD *)&a1[v163] = v165;
            if (v166 < 0)
            {
              v26 = v162++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x23u:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x24u:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x25u:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x26u:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x27u:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x28u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v167 = 0;
          while (1)
          {
            v168 = *v2;
            v169 = *(_QWORD *)&a1[v168];
            v170 = v169 + 1;
            if (v169 == -1 || v170 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v171 = *(char *)(*(_QWORD *)&a1[*v5] + v169);
            *(_QWORD *)&a1[v168] = v170;
            if (v171 < 0)
            {
              v26 = v167++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x29u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v172 = 0;
          while (1)
          {
            v173 = *v2;
            v174 = *(_QWORD *)&a1[v173];
            v175 = v174 + 1;
            if (v174 == -1 || v175 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v176 = *(char *)(*(_QWORD *)&a1[*v5] + v174);
            *(_QWORD *)&a1[v173] = v175;
            if (v176 < 0)
            {
              v26 = v172++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x2Au:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v177 = 0;
          while (1)
          {
            v178 = *v2;
            v179 = *(_QWORD *)&a1[v178];
            v180 = v179 + 1;
            if (v179 == -1 || v180 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v181 = *(char *)(*(_QWORD *)&a1[*v5] + v179);
            *(_QWORD *)&a1[v178] = v180;
            if (v181 < 0)
            {
              v26 = v177++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v182 = 0;
          while (1)
          {
            v183 = *v2;
            v184 = *(_QWORD *)&a1[v183];
            v185 = v184 + 1;
            if (v184 == -1 || v185 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v186 = *(char *)(*(_QWORD *)&a1[*v5] + v184);
            *(_QWORD *)&a1[v183] = v185;
            if (v186 < 0)
            {
              v26 = v182++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x2Cu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v187 = 0;
          while (1)
          {
            v188 = *v2;
            v189 = *(_QWORD *)&a1[v188];
            v190 = v189 + 1;
            if (v189 == -1 || v190 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v191 = *(char *)(*(_QWORD *)&a1[*v5] + v189);
            *(_QWORD *)&a1[v188] = v190;
            if (v191 < 0)
            {
              v26 = v187++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x2Du:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x2Eu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v192 = 0;
          while (1)
          {
            v193 = *v2;
            v194 = *(_QWORD *)&a1[v193];
            v195 = v194 + 1;
            if (v194 == -1 || v195 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v196 = *(char *)(*(_QWORD *)&a1[*v5] + v194);
            *(_QWORD *)&a1[v193] = v195;
            if (v196 < 0)
            {
              v26 = v192++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x2Fu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v197 = 0;
          while (1)
          {
            v198 = *v2;
            v199 = *(_QWORD *)&a1[v198];
            v200 = v199 + 1;
            if (v199 == -1 || v200 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v201 = *(char *)(*(_QWORD *)&a1[*v5] + v199);
            *(_QWORD *)&a1[v198] = v200;
            if (v201 < 0)
            {
              v26 = v197++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x30u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v202 = 0;
          while (1)
          {
            v203 = *v2;
            v204 = *(_QWORD *)&a1[v203];
            v205 = v204 + 1;
            if (v204 == -1 || v205 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v206 = *(char *)(*(_QWORD *)&a1[*v5] + v204);
            *(_QWORD *)&a1[v203] = v205;
            if (v206 < 0)
            {
              v26 = v202++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x31u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v207 = 0;
          while (1)
          {
            v208 = *v2;
            v209 = *(_QWORD *)&a1[v208];
            v210 = v209 + 1;
            if (v209 == -1 || v210 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v211 = *(char *)(*(_QWORD *)&a1[*v5] + v209);
            *(_QWORD *)&a1[v208] = v210;
            if (v211 < 0)
            {
              v26 = v207++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x32u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v212 = 0;
          while (1)
          {
            v213 = *v2;
            v214 = *(_QWORD *)&a1[v213];
            v215 = v214 + 1;
            if (v214 == -1 || v215 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v216 = *(char *)(*(_QWORD *)&a1[*v5] + v214);
            *(_QWORD *)&a1[v213] = v215;
            if (v216 < 0)
            {
              v26 = v212++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x33u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v217 = 0;
          while (1)
          {
            v218 = *v2;
            v219 = *(_QWORD *)&a1[v218];
            v220 = v219 + 1;
            if (v219 == -1 || v220 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v221 = *(char *)(*(_QWORD *)&a1[*v5] + v219);
            *(_QWORD *)&a1[v218] = v220;
            if (v221 < 0)
            {
              v26 = v217++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x34u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v222 = 0;
          while (1)
          {
            v223 = *v2;
            v224 = *(_QWORD *)&a1[v223];
            v225 = v224 + 1;
            if (v224 == -1 || v225 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v226 = *(char *)(*(_QWORD *)&a1[*v5] + v224);
            *(_QWORD *)&a1[v223] = v225;
            if (v226 < 0)
            {
              v26 = v222++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x35u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v227 = 0;
          while (1)
          {
            v228 = *v2;
            v229 = *(_QWORD *)&a1[v228];
            v230 = v229 + 1;
            if (v229 == -1 || v230 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v231 = *(char *)(*(_QWORD *)&a1[*v5] + v229);
            *(_QWORD *)&a1[v228] = v230;
            if (v231 < 0)
            {
              v26 = v227++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x36u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v232 = 0;
          while (1)
          {
            v233 = *v2;
            v234 = *(_QWORD *)&a1[v233];
            v235 = v234 + 1;
            if (v234 == -1 || v235 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v236 = *(char *)(*(_QWORD *)&a1[*v5] + v234);
            *(_QWORD *)&a1[v233] = v235;
            if (v236 < 0)
            {
              v26 = v232++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x37u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v237 = 0;
          while (1)
          {
            v238 = *v2;
            v239 = *(_QWORD *)&a1[v238];
            v240 = v239 + 1;
            if (v239 == -1 || v240 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v241 = *(char *)(*(_QWORD *)&a1[*v5] + v239);
            *(_QWORD *)&a1[v238] = v240;
            if (v241 < 0)
            {
              v26 = v237++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x38u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v242 = 0;
          while (1)
          {
            v243 = *v2;
            v244 = *(_QWORD *)&a1[v243];
            v245 = v244 + 1;
            if (v244 == -1 || v245 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v246 = *(char *)(*(_QWORD *)&a1[*v5] + v244);
            *(_QWORD *)&a1[v243] = v245;
            if (v246 < 0)
            {
              v26 = v242++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x39u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v247 = 0;
          while (1)
          {
            v248 = *v2;
            v249 = *(_QWORD *)&a1[v248];
            v250 = v249 + 1;
            if (v249 == -1 || v250 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v251 = *(char *)(*(_QWORD *)&a1[*v5] + v249);
            *(_QWORD *)&a1[v248] = v250;
            if (v251 < 0)
            {
              v26 = v247++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x3Au:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v252 = 0;
          while (1)
          {
            v253 = *v2;
            v254 = *(_QWORD *)&a1[v253];
            v255 = v254 + 1;
            if (v254 == -1 || v255 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v256 = *(char *)(*(_QWORD *)&a1[*v5] + v254);
            *(_QWORD *)&a1[v253] = v255;
            if (v256 < 0)
            {
              v26 = v252++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x3Bu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v257 = 0;
          while (1)
          {
            v258 = *v2;
            v259 = *(_QWORD *)&a1[v258];
            v260 = v259 + 1;
            if (v259 == -1 || v260 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v261 = *(char *)(*(_QWORD *)&a1[*v5] + v259);
            *(_QWORD *)&a1[v258] = v260;
            if (v261 < 0)
            {
              v26 = v257++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x3Cu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v262 = 0;
          while (1)
          {
            v263 = *v2;
            v264 = *(_QWORD *)&a1[v263];
            v265 = v264 + 1;
            if (v264 == -1 || v265 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v266 = *(char *)(*(_QWORD *)&a1[*v5] + v264);
            *(_QWORD *)&a1[v263] = v265;
            if (v266 < 0)
            {
              v26 = v262++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x3Du:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v267 = 0;
          while (1)
          {
            v268 = *v2;
            v269 = *(_QWORD *)&a1[v268];
            v270 = v269 + 1;
            if (v269 == -1 || v270 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v271 = *(char *)(*(_QWORD *)&a1[*v5] + v269);
            *(_QWORD *)&a1[v268] = v270;
            if (v271 < 0)
            {
              v26 = v267++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x3Eu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v272 = 0;
          while (1)
          {
            v273 = *v2;
            v274 = *(_QWORD *)&a1[v273];
            v275 = v274 + 1;
            if (v274 == -1 || v275 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v276 = *(char *)(*(_QWORD *)&a1[*v5] + v274);
            *(_QWORD *)&a1[v273] = v275;
            if (v276 < 0)
            {
              v26 = v272++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x3Fu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v277 = 0;
          while (1)
          {
            v278 = *v2;
            v279 = *(_QWORD *)&a1[v278];
            v280 = v279 + 1;
            if (v279 == -1 || v280 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v281 = *(char *)(*(_QWORD *)&a1[*v5] + v279);
            *(_QWORD *)&a1[v278] = v280;
            if (v281 < 0)
            {
              v26 = v277++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x40u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v282 = 0;
          while (1)
          {
            v283 = *v2;
            v284 = *(_QWORD *)&a1[v283];
            v285 = v284 + 1;
            if (v284 == -1 || v285 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v286 = *(char *)(*(_QWORD *)&a1[*v5] + v284);
            *(_QWORD *)&a1[v283] = v285;
            if (v286 < 0)
            {
              v26 = v282++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x41u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v287 = 0;
          while (1)
          {
            v288 = *v2;
            v289 = *(_QWORD *)&a1[v288];
            v290 = v289 + 1;
            if (v289 == -1 || v290 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v291 = *(char *)(*(_QWORD *)&a1[*v5] + v289);
            *(_QWORD *)&a1[v288] = v290;
            if (v291 < 0)
            {
              v26 = v287++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x42u:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x43u:
          if (v16 == 2)
            goto LABEL_472;
          goto LABEL_556;
        case 0x44u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v292 = 0;
          while (1)
          {
            v293 = *v2;
            v294 = *(_QWORD *)&a1[v293];
            v295 = v294 + 1;
            if (v294 == -1 || v295 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v296 = *(char *)(*(_QWORD *)&a1[*v5] + v294);
            *(_QWORD *)&a1[v293] = v295;
            if (v296 < 0)
            {
              v26 = v292++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x45u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v297 = 0;
          while (1)
          {
            v298 = *v2;
            v299 = *(_QWORD *)&a1[v298];
            v300 = v299 + 1;
            if (v299 == -1 || v300 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v301 = *(char *)(*(_QWORD *)&a1[*v5] + v299);
            *(_QWORD *)&a1[v298] = v300;
            if (v301 < 0)
            {
              v26 = v297++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x46u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v302 = 0;
          while (1)
          {
            v303 = *v2;
            v304 = *(_QWORD *)&a1[v303];
            v305 = v304 + 1;
            if (v304 == -1 || v305 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v306 = *(char *)(*(_QWORD *)&a1[*v5] + v304);
            *(_QWORD *)&a1[v303] = v305;
            if (v306 < 0)
            {
              v26 = v302++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x47u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v307 = 0;
          while (1)
          {
            v308 = *v2;
            v309 = *(_QWORD *)&a1[v308];
            v310 = v309 + 1;
            if (v309 == -1 || v310 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v311 = *(char *)(*(_QWORD *)&a1[*v5] + v309);
            *(_QWORD *)&a1[v308] = v310;
            if (v311 < 0)
            {
              v26 = v307++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x48u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v312 = 0;
          while (1)
          {
            v313 = *v2;
            v314 = *(_QWORD *)&a1[v313];
            v315 = v314 + 1;
            if (v314 == -1 || v315 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v316 = *(char *)(*(_QWORD *)&a1[*v5] + v314);
            *(_QWORD *)&a1[v313] = v315;
            if (v316 < 0)
            {
              v26 = v312++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x49u:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v317 = 0;
          while (1)
          {
            v318 = *v2;
            v319 = *(_QWORD *)&a1[v318];
            v320 = v319 + 1;
            if (v319 == -1 || v320 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v321 = *(char *)(*(_QWORD *)&a1[*v5] + v319);
            *(_QWORD *)&a1[v318] = v320;
            if (v321 < 0)
            {
              v26 = v317++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x4Au:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v322 = 0;
          while (1)
          {
            v323 = *v2;
            v324 = *(_QWORD *)&a1[v323];
            v325 = v324 + 1;
            if (v324 == -1 || v325 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v326 = *(char *)(*(_QWORD *)&a1[*v5] + v324);
            *(_QWORD *)&a1[v323] = v325;
            if (v326 < 0)
            {
              v26 = v322++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x4Bu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v327 = 0;
          while (1)
          {
            v328 = *v2;
            v329 = *(_QWORD *)&a1[v328];
            v330 = v329 + 1;
            if (v329 == -1 || v330 > *(_QWORD *)&a1[*v3])
              goto LABEL_546;
            v331 = *(char *)(*(_QWORD *)&a1[*v5] + v329);
            *(_QWORD *)&a1[v328] = v330;
            if (v331 < 0)
            {
              v26 = v327++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_548;
          }
        case 0x4Cu:
          if ((v8 & 7) != 0)
            goto LABEL_556;
          v332 = 0;
          break;
        case 0x4Du:
          if (v16 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0)
            goto LABEL_556;
          PBReaderRecallMark();
          continue;
        default:
LABEL_472:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_556:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v333 = *v2;
        v334 = *(_QWORD *)&a1[v333];
        v335 = v334 + 1;
        if (v334 == -1 || v335 > *(_QWORD *)&a1[*v3])
          break;
        v336 = *(char *)(*(_QWORD *)&a1[*v5] + v334);
        *(_QWORD *)&a1[v333] = v335;
        if (v336 < 0)
        {
          v26 = v332++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_548;
      }
LABEL_546:
      v14 = *v4;
LABEL_547:
      a1[v14] = 1;
LABEL_548:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v337 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v337;
}

void sub_188D1DD78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOCellConnectionQualityIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 144));
  if ((*(_WORD *)(a1 + 368) & 0x2FF8) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 368) & 0x1000) != 0)
    return GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 104));
  return 0;
}

os_unfair_lock_s *GEOCellConnectionQualityIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCellConnectionQualityIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 36);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOCellConnectionQualityClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLocation")
    && (objc_msgSend(a1, "location"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "location");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "location");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEOCellConnectionQualityHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "location");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188D1FABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOGetGEOBatchSpatialLookupLog()
{
  if (qword_1EDF51108 != -1)
    dispatch_once(&qword_1EDF51108, &__block_literal_global_45);
  return (id)_MergedGlobals_433;
}

id GEOGetGEOPublisherViewLookupLog()
{
  if (qword_1EDF51118 != -1)
    dispatch_once(&qword_1EDF51118, &__block_literal_global_6);
  return (id)qword_1EDF51110;
}

id GEOGetGEOCitySelectorViewLookupLog()
{
  if (qword_1EDF51138 != -1)
    dispatch_once(&qword_1EDF51138, &__block_literal_global_12);
  return (id)qword_1EDF51130;
}

uint64_t GEOTerritoryLookupIsEnabled()
{
  return _dispatcherSupportsService(6);
}

void sub_188D24A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188D2777C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 216), 8);
  _Unwind_Resume(a1);
}

void sub_188D28318(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

_GEOPlaceSearchCompletionItem *GEOCompletionItemFromSerializedAutocompleteEntry(void *a1)
{
  id v1;
  GEOPDAutocompleteEntry *v2;
  _GEOPlaceSearchCompletionItem *v3;
  void *v4;
  void *v5;
  _GEOPlaceSearchCompletionItem *v6;

  v1 = a1;
  v2 = -[GEOPDAutocompleteEntry initWithData:]([GEOPDAutocompleteEntry alloc], "initWithData:", v1);

  if (v2)
  {
    v3 = [_GEOPlaceSearchCompletionItem alloc];
    +[GEOMapService sharedService](GEOMapService, "sharedService");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "defaultTraits");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[_GEOPlaceSearchCompletionItem initWithEntry:traits:entryListIndex:entryIndex:mapItems:collections:publishers:](v3, "initWithEntry:traits:entryListIndex:entryIndex:mapItems:collections:publishers:", v2, v5, 0, 0, MEMORY[0x1E0C9AA60], MEMORY[0x1E0C9AA60], MEMORY[0x1E0C9AA60]);

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void sub_188D2B948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

void sub_188D303E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t GEORouteHypothesizerDelayerCompare(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;

  if (a1 == a2)
    return 0;
  if (!a1)
    return -1;
  if (!a2)
    return 1;
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "plannedDestination");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "arrivalDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "plannedDestination");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "arrivalDate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v6, "compare:", v8);

  if ((unint64_t)(v9 + 1) >= 3)
  {
    v11 = objc_alloc(MEMORY[0x1E0C99DA0]);
    v12 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v3, "plannedDestination");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "arrivalDate");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "plannedDestination");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "arrivalDate");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "stringWithFormat:", CFSTR("Comparing %@ to %@ returned an invalid NSComparisonResult (%ld)"), v14, v16, v9);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = (id)objc_msgSend(v11, "initWithName:reason:userInfo:", CFSTR("Unexpected comparison result"), v17, 0);

    objc_exception_throw(v18);
  }

  return v9;
}

void sub_188D33648(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188D3381C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188D33AE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_188D33BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188D33C9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D33D98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D344AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  _Block_object_dispose((const void *)(v24 - 240), 8);
  _Block_object_dispose((const void *)(v24 - 192), 8);

  _Unwind_Resume(a1);
}

void sub_188D3471C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_188D34854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188D3492C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188D34A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{

  _Unwind_Resume(a1);
}

void sub_188D34BE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D34E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  void *v27;
  void *v28;
  void *v29;

  _Block_object_dispose(&a22, 8);
  _Unwind_Resume(a1);
}

void sub_188D350D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_188D35454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_188D35758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188D36C44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_188D36E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_188D36FE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188D37058(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D37448(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188D3754C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D375CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D3765C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188D37A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

id GEOGetGEORouteBuilderLog(void)
{
  if (qword_1ECDBBC00 != -1)
    dispatch_once(&qword_1ECDBBC00, &__block_literal_global_48);
  return (id)_MergedGlobals_206;
}

void sub_188D37F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;

  _Unwind_Resume(a1);
}

void sub_188D381D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D38394(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D38670(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188D388D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void ___ZL24GEOGetGEORouteBuilderLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEORouteBuilder");
  v1 = (void *)_MergedGlobals_206;
  _MergedGlobals_206 = (uint64_t)v0;

}

void sub_188D3934C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va2;

  va_start(va2, a9);
  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v15 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_188D3A478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188D3AB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOGetProactiveTileDownloadLog()
{
  if (qword_1ECDBBC28 != -1)
    dispatch_once(&qword_1ECDBBC28, &__block_literal_global_49);
  return (id)_MergedGlobals_208;
}

void sub_188D3B040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188D3B958(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_188D3DAB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionCyclingStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  __int16 v75;
  char v76;
  int v77;
  __int16 v78;
  void *v79;
  GEONameInfoList *v81;
  char v82;
  char v83;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFF6FFF8FFF7FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 7) & 1)+ ((*(_WORD *)(a1 + 112) >> 6) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v83 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v82 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_142;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_142:
      if ((v15 & 1) != 0)
      {
        v76 = 1;
        goto LABEL_155;
      }
      if (v16)
      {
        while (1)
        {
          v77 = *v16++;
          v78 = 512;
          switch(v77)
          {
            case 0:
              goto LABEL_156;
            case 6:
              goto LABEL_151;
            case 9:
              v78 = 32;
              goto LABEL_151;
            case 10:
              v78 = 256;
              goto LABEL_151;
            case 11:
              v78 = 1024;
              goto LABEL_151;
            case 13:
              v78 = 128;
              goto LABEL_151;
            case 15:
              v78 = 64;
LABEL_151:
              *(_WORD *)(a1 + 112) |= v78;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_156;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v83 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_113;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_115;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_113:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_115:
        v74 = 100;
        goto LABEL_132;
      case 6:
        if (!v31)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 112) & 0x200) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v44;
          goto LABEL_109;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v75 = *(_WORD *)(a1 + 112) << 6;
        goto LABEL_139;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          v49 = *v17;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v48) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v48) = 0;
LABEL_119:
        *(_DWORD *)(a1 + 104) = -(v48 & 1) ^ ((int)v48 >> 1);
        goto LABEL_141;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v53 = 0;
        v54 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v55 = *v17;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v38 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v27 = v54++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_123:
        v74 = 96;
        goto LABEL_132;
      case 9:
        if (!v31 || (*(_WORD *)(a1 + 112) & 0x20) != 0)
          goto LABEL_110;
        if (!PBReaderPlaceMark())
          goto LABEL_154;
        -[GEOCompanionCyclingStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(_QWORD *)(a1 + 16) + 16 * *(_QWORD *)(a1 + 24), v3) & 1) == 0)
          goto LABEL_154;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 24);
        goto LABEL_140;
      case 10:
        if (!v31 || (*(_WORD *)(a1 + 112) & 0x100) != 0)
          goto LABEL_110;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v81 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v81, (void *)v3, v9 & 1))
          goto LABEL_153;
        PBReaderRecallMark();
        -[GEOCompanionCyclingStep _addNoFlagsManeuverName:](a1, v81);
        goto LABEL_81;
      case 11:
        if (!v31 || (*(_WORD *)(a1 + 112) & 0x400) != 0)
          goto LABEL_110;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1))
          goto LABEL_153;
        PBReaderRecallMark();
        -[GEOCompanionCyclingStep _addNoFlagsSignpost:](a1, v81);
LABEL_81:

        goto LABEL_140;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v59 = 0;
        v60 = 0;
        v61 = 0;
        *(_WORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          v62 = *v17;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v27 = v60++ >= 9;
              if (v27)
              {
                v61 = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v61 = 0;
LABEL_127:
        *(_BYTE *)(a1 + 108) = v61 != 0;
        goto LABEL_141;
      case 13:
        if (!v31)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v75 = *(_WORD *)(a1 + 112) << 8;
          goto LABEL_139;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1))
          goto LABEL_153;
        PBReaderRecallMark();
        v66 = 48;
        goto LABEL_108;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v67 = 0;
        v68 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v69 = *v17;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v38 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v27 = v68++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_131:
        v74 = 92;
LABEL_132:
        *(_DWORD *)(a1 + v74) = v38;
        goto LABEL_141;
      case 15:
        if (!v31)
        {
LABEL_110:
          v73 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v82;
          if ((v73 & 1) == 0)
          {
LABEL_152:
            v76 = 0;
            goto LABEL_155;
          }
LABEL_141:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_142;
          continue;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v75 = *(_WORD *)(a1 + 112) << 9;
LABEL_139:
          v7 += v75 >> 15;
LABEL_140:
          v15 = v82;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v81 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v66 = 40;
LABEL_108:
          v45 = *(void **)(a1 + v66);
          *(_QWORD *)(a1 + v66) = v81;
LABEL_109:

          --v7;
          goto LABEL_140;
        }
LABEL_153:

LABEL_154:
        v76 = 0;
        v15 = v82;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_155:
        *(_WORD *)(a1 + 112) |= 0x200u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        *(_WORD *)(a1 + 112) |= 0x100u;
        *(_WORD *)(a1 + 112) |= 0x400u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x40u;
        if ((v76 & 1) != 0)
        {
LABEL_156:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_157;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_157:
            v79 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v82;
        if (!v43)
          goto LABEL_152;
        goto LABEL_141;
    }
  }
}

void sub_188D3E864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D3ED00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D3F034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D3F3E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D3F694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D40F90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionCyclingStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[9];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[5], "readAll:", 1);
}

uint64_t GEOCompanionCyclingStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionCyclingStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionCyclingStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionCyclingStepReadAllFrom_initialTag;
  Specified = GEOCompanionCyclingStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOCompanionCyclingStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188D412E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionCyclingStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionCyclingStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D41340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionCyclingStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 6u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_81;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1))
            goto LABEL_81;
          goto LABEL_78;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1))
            goto LABEL_81;
          goto LABEL_78;
        case 0xBu:
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_81;
          goto LABEL_78;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v38 = 0;
          break;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_81;
LABEL_78:
          PBReaderRecallMark();
          continue;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_81:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_79;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_79:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_188D41B5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionCyclingStepIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_WORD *)(a1 + 112);
  if ((v2 & 0xF20) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEONameInfoIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_WORD *)(a1 + 112);
  }
  if ((v2 & 0x40) == 0)
    goto LABEL_10;
  if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 112);
LABEL_10:
  if ((v2 & 0x400) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 72);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEONameInfoIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_22;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_22:

  return v3;
}

os_unfair_lock_s *GEOCompanionCyclingStepIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionCyclingStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D42408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D4387C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionDriveStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  __int16 v75;
  char v76;
  int v77;
  __int16 v78;
  void *v79;
  GEONameInfoList *v81;
  char v82;
  char v83;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (HIBYTE(*(unsigned __int16 *)(a1 + 128)) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 128)), (uint16x4_t)0xFFF4FFF6FFF5FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 128) >> 9) & 1)+ ((*(_WORD *)(a1 + 128) >> 6) & 1)+ ((*(_WORD *)(a1 + 128) >> 7) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 5;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v83 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v82 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_156;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_156:
      if ((v15 & 1) != 0)
      {
        v76 = 1;
        goto LABEL_171;
      }
      if (v16)
      {
        while (1)
        {
          v77 = *v16++;
          v78 = 2048;
          switch(v77)
          {
            case 0:
              goto LABEL_172;
            case 6:
              goto LABEL_167;
            case 9:
              v78 = 32;
              goto LABEL_167;
            case 10:
              v78 = 1024;
              goto LABEL_167;
            case 11:
              v78 = 4096;
              goto LABEL_167;
            case 13:
              v78 = 512;
              goto LABEL_167;
            case 15:
              v78 = 64;
              goto LABEL_167;
            case 16:
              v78 = 128;
              goto LABEL_167;
            case 17:
              v78 = 256;
LABEL_167:
              *(_WORD *)(a1 + 128) |= v78;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_172;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v83 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 128) |= 4u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_123;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_125;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_123:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_125:
        v74 = 116;
        goto LABEL_142;
      case 6:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 128) & 0x800) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 80);
          *(_QWORD *)(a1 + 80) = v44;
          goto LABEL_119;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_170;
        v75 = 16 * *(_WORD *)(a1 + 128);
        goto LABEL_153;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 128) |= 8u;
        while (2)
        {
          v49 = *v17;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v48) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v48) = 0;
LABEL_129:
        *(_DWORD *)(a1 + 120) = -(v48 & 1) ^ ((int)v48 >> 1);
        goto LABEL_155;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v53 = 0;
        v54 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 128) |= 2u;
        while (2)
        {
          v55 = *v17;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v38 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v27 = v54++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_133:
        v74 = 112;
        goto LABEL_142;
      case 9:
        if (!v31 || (*(_WORD *)(a1 + 128) & 0x20) != 0)
          goto LABEL_120;
        if (!PBReaderPlaceMark())
          goto LABEL_170;
        -[GEOCompanionDriveStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(_QWORD *)(a1 + 16) + 16 * *(_QWORD *)(a1 + 24), v3) & 1) == 0)
          goto LABEL_170;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 24);
        goto LABEL_154;
      case 10:
        if (!v31 || (*(_WORD *)(a1 + 128) & 0x400) != 0)
          goto LABEL_120;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_170;
        v81 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v81, (void *)v3, v9 & 1))
          goto LABEL_169;
        PBReaderRecallMark();
        -[GEOCompanionDriveStep _addNoFlagsManeuverName:](a1, v81);
        goto LABEL_81;
      case 11:
        if (!v31 || (*(_WORD *)(a1 + 128) & 0x1000) != 0)
          goto LABEL_120;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_170;
        v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1))
          goto LABEL_169;
        PBReaderRecallMark();
        -[GEOCompanionDriveStep _addNoFlagsSignpost:](a1, v81);
LABEL_81:

        goto LABEL_154;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v59 = 0;
        v60 = 0;
        v61 = 0;
        *(_WORD *)(a1 + 128) |= 0x10u;
        while (2)
        {
          v62 = *v17;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v27 = v60++ >= 9;
              if (v27)
              {
                v61 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v61 = 0;
LABEL_137:
        *(_BYTE *)(a1 + 124) = v61 != 0;
        goto LABEL_155;
      case 13:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_170;
          v75 = *(_WORD *)(a1 + 128) << 6;
          goto LABEL_153;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_170;
        v81 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1))
          goto LABEL_169;
        PBReaderRecallMark();
        v66 = 64;
        goto LABEL_118;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v67 = 0;
        v68 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 128) |= 1u;
        while (2)
        {
          v69 = *v17;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v38 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v27 = v68++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_141:
        v74 = 108;
LABEL_142:
        *(_DWORD *)(a1 + v74) = v38;
        goto LABEL_155;
      case 15:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 128) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_170;
          v75 = *(_WORD *)(a1 + 128) << 9;
          goto LABEL_153;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_170;
        v81 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v81, (void *)v3, v9 & 1))
          goto LABEL_169;
        PBReaderRecallMark();
        v66 = 40;
        goto LABEL_118;
      case 16:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 128) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_170;
          v75 = *(_WORD *)(a1 + 128) << 8;
          goto LABEL_153;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_170;
        v81 = objc_alloc_init(GEOEVChargeInfo);
        if (!GEOEVChargeInfoReadAllFrom((uint64_t)v81, (void *)v3))
          goto LABEL_169;
        PBReaderRecallMark();
        v66 = 48;
        goto LABEL_118;
      case 17:
        if (!v31)
        {
LABEL_120:
          v73 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v82;
          if ((v73 & 1) == 0)
          {
LABEL_168:
            v76 = 0;
            goto LABEL_171;
          }
LABEL_155:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_156;
          continue;
        }
        if ((*(_WORD *)(a1 + 128) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_170;
          v75 = *(_WORD *)(a1 + 128) << 7;
LABEL_153:
          v7 += v75 >> 15;
LABEL_154:
          v15 = v82;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_155;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_170;
        v81 = objc_alloc_init(GEOEVStepInfo);
        if (GEOEVStepInfoReadAllFrom((uint64_t)v81, (void *)v3))
        {
          PBReaderRecallMark();
          v66 = 56;
LABEL_118:
          v45 = *(void **)(a1 + v66);
          *(_QWORD *)(a1 + v66) = v81;
LABEL_119:

          --v7;
          goto LABEL_154;
        }
LABEL_169:

LABEL_170:
        v76 = 0;
        v15 = v82;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_171:
        *(_WORD *)(a1 + 128) |= 0x800u;
        *(_WORD *)(a1 + 128) |= 0x20u;
        *(_WORD *)(a1 + 128) |= 0x400u;
        *(_WORD *)(a1 + 128) |= 0x1000u;
        *(_WORD *)(a1 + 128) |= 0x200u;
        *(_WORD *)(a1 + 128) |= 0x40u;
        *(_WORD *)(a1 + 128) |= 0x80u;
        *(_WORD *)(a1 + 128) |= 0x100u;
        if ((v76 & 1) != 0)
        {
LABEL_172:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_173;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_173:
            v79 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v82;
        if (!v43)
          goto LABEL_168;
        goto LABEL_155;
    }
  }
}

void sub_188D4477C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D44C18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D44F4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D452F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D455AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D456F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D45834(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D472A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionDriveStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[9];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[11];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

uint64_t GEOCompanionDriveStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionDriveStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionDriveStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionDriveStepReadAllFrom_initialTag;
  Specified = GEOCompanionDriveStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOCompanionDriveStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188D47610(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionDriveStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionDriveStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D47670(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionDriveStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 6u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_89;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1))
            goto LABEL_89;
          goto LABEL_86;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1))
            goto LABEL_89;
          goto LABEL_86;
        case 0xBu:
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_89;
          goto LABEL_86;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v38 = 0;
          break;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_89;
          goto LABEL_86;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVChargeInfoIsValid(a1))
            goto LABEL_89;
          goto LABEL_86;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVStepInfoIsValid(a1))
            goto LABEL_89;
LABEL_86:
          PBReaderRecallMark();
          continue;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_89:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_87;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_188D47F1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionDriveStepIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_WORD *)(a1 + 128);
  if ((v2 & 0x3C20) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
  {
    if (GEONameInfoIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_WORD *)(a1 + 128);
  }
  if ((v2 & 0x40) == 0)
    goto LABEL_10;
  if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 128);
LABEL_10:
  if ((v2 & 0x180) != 0)
    return 1;
  if ((v2 & 0x1000) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 88);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEONameInfoIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_23;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_23:

  return v3;
}

os_unfair_lock_s *GEOCompanionDriveStepIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionDriveStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D48848(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D49F08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionFerryStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEONameInfo *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  uint64_t v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 2;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v59 = (v15 == 0) | v10 | v14;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_92;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_92:
      if ((v16 & 1) != 0)
      {
        v53 = 1;
        goto LABEL_104;
      }
      if (v15)
      {
        while (1)
        {
          v54 = *v15++;
          v55 = 4;
          switch(v54)
          {
            case 9:
              goto LABEL_99;
            case 10:
              v55 = 16;
              goto LABEL_99;
            case 11:
              v55 = 32;
              goto LABEL_99;
            case 12:
              v55 = 8;
LABEL_99:
              *(_BYTE *)(a1 + 84) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_105;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v59 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 84) |= 2u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_80;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_82;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_80:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_82:
        v52 = 80;
        goto LABEL_87;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v44 = 0;
        v45 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 84) |= 1u;
        while (2)
        {
          v46 = *v17;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v38 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_86:
        v52 = 76;
LABEL_87:
        *(_DWORD *)(a1 + v52) = v38;
        goto LABEL_91;
      case 9:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 4) != 0)
          goto LABEL_77;
        if (!PBReaderPlaceMark())
          goto LABEL_101;
        -[GEOCompanionFerryStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(_QWORD *)(a1 + 16) + 16 * *(_QWORD *)(a1 + 24), v3) & 1) == 0)
          goto LABEL_101;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 24);
        goto LABEL_90;
      case 10:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v58 = (int)v16;
        v16 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v16, (void *)v3, v9 & 1))
          goto LABEL_102;
        PBReaderRecallMark();
        -[GEOCompanionFerryStep _addNoFlagsManeuverName:](a1, v16);
        goto LABEL_70;
      case 11:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 0x20) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v58 = (int)v16;
        v16 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_102;
        PBReaderRecallMark();
        -[GEOCompanionFerryStep _addNoFlagsSignpost:](a1, v16);
LABEL_70:

        goto LABEL_76;
      case 12:
        if (!v31)
        {
LABEL_77:
          v51 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
LABEL_100:
            v53 = 0;
            goto LABEL_104;
          }
LABEL_91:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_92;
          continue;
        }
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_101:
            v53 = 0;
            goto LABEL_103;
          }
          v7 += *(unsigned __int8 *)(a1 + 84) << 28 >> 31;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v58 = (int)v16;
        v16 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v50 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v16;

          --v7;
LABEL_76:
          LODWORD(v16) = v58;
LABEL_90:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_91;
        }
LABEL_102:

        v53 = 0;
        LOBYTE(v16) = v58;
LABEL_103:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        *(_BYTE *)(a1 + 84) |= 4u;
        *(_BYTE *)(a1 + 84) |= 0x10u;
        *(_BYTE *)(a1 + 84) |= 0x20u;
        *(_BYTE *)(a1 + 84) |= 8u;
        if ((v53 & 1) != 0)
        {
LABEL_105:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_106;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_106:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_100;
        goto LABEL_91;
    }
  }
}

void sub_188D4AAFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D4AE30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D4B164(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D4C6EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionFerryStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[5], "readAll:", 1);
}

uint64_t GEOCompanionFerryStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionFerryStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionFerryStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionFerryStepReadAllFrom_initialTag;
  Specified = GEOCompanionFerryStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOCompanionFerryStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188D4CA28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionFerryStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionFerryStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D4CA88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionFerryStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v23 = 0;
          break;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_56;
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_37:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188D4D108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionFerryStepIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 84);
  if ((v2 & 0x74) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 84) & 8) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEONameInfoIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOCompanionFerryStepIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionFerryStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D4D838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D4EA1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionGenericStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char v15;
  int *v16;
  GEONameInfo *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  int v61;
  BOOL v62;
  char v63;
  void *v64;
  int v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        LODWORD(v17) = v10 | v14;
        v67 = (v7 != 0) | v15;
        v68 = (v16 == 0) | v15;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_96;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_96:
      if ((v17 & 1) != 0)
      {
        v59 = 1;
        goto LABEL_114;
      }
      if (!v16)
        goto LABEL_115;
      while (1)
      {
        while (1)
        {
          v61 = *v16++;
          v60 = v61;
          v62 = v61 == 9;
          if (v61 <= 9)
            break;
          if (v60 == 10)
          {
            v63 = 16;
LABEL_107:
            *(_BYTE *)(a1 + 80) |= v63;
          }
          else if (v60 == 11)
          {
            v63 = 32;
            goto LABEL_107;
          }
        }
        if (v62)
        {
          v63 = 8;
          goto LABEL_107;
        }
        if (!v60)
          goto LABEL_115;
      }
    }
    v31 = v23 >> 3;
    v32 = (char)v17;
    if ((v68 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_80;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 80) |= 2u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_83;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_85;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_83:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_85:
        v58 = 72;
        goto LABEL_94;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_80;
        v45 = 0;
        v46 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v39 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v28 = v46++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_89:
        v58 = 68;
        goto LABEL_94;
      case 9:
        if (!v32 || (*(_BYTE *)(a1 + 80) & 8) != 0)
          goto LABEL_80;
        if (!PBReaderPlaceMark())
          goto LABEL_111;
        -[GEOCompanionGenericStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(_QWORD *)(a1 + 16) + 16 * *(_QWORD *)(a1 + 24), v3) & 1) == 0)
          goto LABEL_111;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 24);
        goto LABEL_71;
      case 10:
        if (!v32 || (*(_BYTE *)(a1 + 80) & 0x10) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v66 = (int)v17;
        v17 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v17, (void *)v3, v9 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        -[GEOCompanionGenericStep _addNoFlagsManeuverName:](a1, v17);
        goto LABEL_70;
      case 11:
        if (!v32 || (*(_BYTE *)(a1 + 80) & 0x20) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_111:
          v59 = 0;
          goto LABEL_113;
        }
        v66 = (int)v17;
        v17 = objc_alloc_init(GEONameInfo);
        if (GEONameInfoReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOCompanionGenericStep _addNoFlagsSignpost:](a1, v17);
LABEL_70:

          LODWORD(v17) = v66;
LABEL_71:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
          if ((v67 & 1) == 0)
            goto LABEL_96;
          continue;
        }
LABEL_112:

        v59 = 0;
        LOBYTE(v17) = v66;
LABEL_113:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_114:
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        *(_BYTE *)(a1 + 80) |= 8u;
        if ((v59 & 1) != 0)
        {
LABEL_115:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v17 & 1) != 0)
            goto LABEL_116;
        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
          {
LABEL_116:
            v64 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 12:
        if ((v8 & 1) != 0)
        {
          v51 = 0;
          v52 = 0;
          v39 = 0;
          *(_BYTE *)(a1 + 80) |= 4u;
          while (1)
          {
            v53 = *v18;
            v54 = *(_QWORD *)(v3 + v53);
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
              break;
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v39 |= (unint64_t)(v56 & 0x7F) << v51;
            if ((v56 & 0x80) == 0)
              goto LABEL_91;
            v51 += 7;
            v28 = v52++ >= 9;
            if (v28)
            {
              LODWORD(v39) = 0;
              goto LABEL_93;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_91:
          if (*(_BYTE *)(v3 + *v19))
            LODWORD(v39) = 0;
LABEL_93:
          v58 = 76;
LABEL_94:
          *(_DWORD *)(a1 + v58) = v39;
        }
        else
        {
LABEL_80:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
LABEL_110:
            v59 = 0;
            goto LABEL_114;
          }
        }
        goto LABEL_95;
      default:
        v44 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_110;
        goto LABEL_95;
    }
  }
}

void sub_188D4F46C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D4F910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D51500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOCompanionGenericStepCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 48);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

uint64_t GEOCompanionGenericStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionGenericStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionGenericStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionGenericStepReadAllFrom_initialTag;
  Specified = GEOCompanionGenericStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOCompanionGenericStepCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188D51828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionGenericStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionGenericStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D51888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionGenericStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1))
            goto LABEL_60;
          goto LABEL_48;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1))
            goto LABEL_60;
          goto LABEL_48;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_60;
LABEL_48:
          PBReaderRecallMark();
          continue;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v28 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_188D51F3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionGenericStepIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 80) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188D52534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteContextReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 11)
        {
          *(_BYTE *)(a1 + 24) |= 1u;
          v26 = *v4;
          v27 = *(_QWORD *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v28 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v27);
            *(_QWORD *)&v3[v26] = v27 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v28 = 0;
          }
          *(_QWORD *)(a1 + 8) = v28;
        }
        else
        {
          if ((_DWORD)v18 == 10)
          {
            v29 = 0;
            v30 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 24) |= 4u;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v21 |= (unint64_t)(v34 & 0x7F) << v29;
              if ((v34 & 0x80) == 0)
                goto LABEL_46;
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_48:
            v35 = 20;
          }
          else
          {
            if ((_DWORD)v18 != 4)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_54;
              continue;
            }
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 24) |= 2u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_42;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_44;
              }
            }
            v3[*v6] = 1;
LABEL_42:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_44:
            v35 = 16;
          }
          *(_DWORD *)(a1 + v35) = v21;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_188D53398(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionRouteContextReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D533F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 11)
      {
        if (v16 != 1)
          goto LABEL_48;
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && (v27 = v26 + 8, v27 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v25] = v27;
        else
          a1[v14] = 1;
      }
      else
      {
        if ((_DWORD)v18 == 10)
        {
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v24 = v28++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v18 == 4)
        {
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            if (v23 < 0)
            {
              v24 = v19++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_48:
          v33 = 0;
          goto LABEL_47;
        }
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v33;
}

void sub_188D53D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int *v18;
  _BOOL4 v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  uint64_t v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  GEOCompanionStep *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  int *v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  int *v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  int v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  void *v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  void *v143;
  char v144;
  char v145;
  uint64_t v146;
  BOOL v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  int *v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  char v174;
  unsigned int v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  char v182;
  unsigned int v183;
  uint64_t v184;
  int *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  uint64_t v190;
  unint64_t v191;
  int v192;
  uint64_t v193;
  void *v194;
  _BOOL4 v196;
  char v197;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 268);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 264));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)(a1 + 304);
  v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE310), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE320), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE2F0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE300), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE330), v13)))+ (*(_DWORD *)(a1 + 308) & 1)+ ((v11 >> 14) & 1)+ (v11 >> 31);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v10 | (v14 > 0x11);
        if (((v17 | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v17;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_371;
        v197 = (v18 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_371;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *v21;
        v32 = *(unsigned __int8 *)(v3 + v31);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *v21;
    v32 = *(unsigned __int8 *)(v3 + v31);
    if (*(_BYTE *)(v3 + v31))
      v25 = 0;
LABEL_25:
    v33 = v25 & 7;
    if (v32 || v33 == 4)
    {
LABEL_371:
      if (v19)
      {
        *(_QWORD *)(a1 + 304) |= 0x1FFFFFC00uLL;
      }
      else if (v18)
      {
        while (1)
        {
          v192 = *v18++;
          v193 = 0x10000;
          switch(v192)
          {
            case 0:
              goto LABEL_398;
            case 1:
              goto LABEL_397;
            case 2:
              v193 = 0x10000000;
              goto LABEL_397;
            case 3:
              v193 = 1024;
              goto LABEL_397;
            case 5:
              v193 = 0x8000000;
              goto LABEL_397;
            case 6:
              v193 = 0x20000;
              goto LABEL_397;
            case 7:
              v193 = 0x2000;
              goto LABEL_397;
            case 8:
              v193 = 4096;
              goto LABEL_397;
            case 11:
              v193 = 0x400000;
              goto LABEL_397;
            case 13:
              v193 = 0x80000;
              goto LABEL_397;
            case 15:
              v193 = 0x200000;
              goto LABEL_397;
            case 16:
              v193 = 0x8000;
              goto LABEL_397;
            case 19:
              v193 = 0x800000;
              goto LABEL_397;
            case 20:
              v193 = 0x1000000;
              goto LABEL_397;
            case 21:
              v193 = 0x80000000;
              goto LABEL_397;
            case 22:
              v193 = 0x100000;
              goto LABEL_397;
            case 23:
              v193 = 0x4000000;
              goto LABEL_397;
            case 25:
              v193 = 0x2000000;
              goto LABEL_397;
            case 26:
              v193 = 0x100000000;
              goto LABEL_397;
            case 28:
              v193 = 0x40000;
              goto LABEL_397;
            case 30:
              v193 = 0x40000000;
              goto LABEL_397;
            case 31:
              v193 = 2048;
              goto LABEL_397;
            case 33:
              v193 = 0x20000000;
              goto LABEL_397;
            case 34:
              v193 = 0x4000;
LABEL_397:
              *(_QWORD *)(a1 + 304) |= v193;
              break;
            default:
              continue;
          }
        }
      }
LABEL_398:
      v3 = *(_BYTE *)(v3 + *v21) == 0;
      if (!v19)
        return v3;
LABEL_399:
      v194 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

      return v3;
    }
    v35 = v25 >> 3;
    v36 = v19;
    if ((v197 & 1) == 0)
    {
      v37 = v18;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 1) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 128;
          goto LABEL_257;
        }
        v149 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v149 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 47;
        goto LABEL_339;
      case 2:
        if (!v36 || (*(_BYTE *)(a1 + 307) & 0x10) != 0)
          goto LABEL_260;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOCompanionStep);
        if (!GEOCompanionStepReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        -[GEOCompanionRouteDetails _addNoFlagsStep:](a1, v43);
        goto LABEL_144;
      case 3:
        if (!v36 || (*(_BYTE *)(a1 + 305) & 4) != 0)
          goto LABEL_262;
        v196 = v19;
        if (v33 != 2)
        {
          v190 = *v20;
          v191 = *(_QWORD *)(v3 + v190);
          if (v191 <= 0xFFFFFFFFFFFFFFF7 && v191 + 8 <= *(_QWORD *)(v3 + *v6))
            *(_QWORD *)(v3 + v190) = v191 + 8;
          else
            *(_BYTE *)(v3 + v31) = 1;
          PBRepeatedDoubleAdd();
          goto LABEL_258;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_402;
        while (1)
        {
          v104 = (unint64_t *)(v3 + *v20);
          v105 = *v104;
          v106 = *(_QWORD *)(v3 + *v6);
          if (*v104 >= v106)
            break;
          v107 = (int)*MEMORY[0x1E0D82BC8];
          if (*(_BYTE *)(v3 + v107))
            break;
          if (v105 > 0xFFFFFFFFFFFFFFF7 || v105 + 8 > v106)
            *(_BYTE *)(v3 + v107) = 1;
          else
            *v104 = v105 + 8;
          PBRepeatedDoubleAdd();
        }
        goto LABEL_264;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_QWORD *)(a1 + 304) |= 4uLL;
        while (2)
        {
          v47 = *v20;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_268:
        v146 = 284;
        goto LABEL_306;
      case 5:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 307) & 8) == 0)
        {
          PBReaderReadData();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 216;
          goto LABEL_257;
        }
        v151 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v151 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 36;
        goto LABEL_339;
      case 6:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 2) != 0)
        {
          v160 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v160 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 46;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOMapItemStorage);
        if (!GEOMapItemStorageReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        v75 = 136;
        goto LABEL_236;
      case 7:
        if (!v36 || (*(_BYTE *)(a1 + 305) & 0x20) != 0)
          goto LABEL_260;
        v196 = v19;
        if (v33 != 2)
        {
          v166 = 0;
          v167 = 0;
          v168 = 0;
          v169 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v170 = *v20;
            v171 = *(_QWORD *)(v3 + v170);
            v172 = v171 + 1;
            if (v171 == -1 || v172 > *(_QWORD *)(v3 + *v6))
              goto LABEL_364;
            v173 = *(_BYTE *)(*(_QWORD *)(v3 + *v169) + v171);
            *(_QWORD *)(v3 + v170) = v172;
            v168 |= (unint64_t)(v173 & 0x7F) << v166;
            if (v173 < 0)
            {
              v166 += 7;
              v30 = v167++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_365;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_402;
        while (1)
        {
          v51 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_264;
          v52 = 0;
          v53 = 0;
          v54 = 0;
          v55 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v56 = *v20;
            v57 = *(_QWORD *)(v3 + v56);
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v55) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v54 |= (unint64_t)(v59 & 0x7F) << v52;
            if (v59 < 0)
            {
              v52 += 7;
              v30 = v53++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_70;
          }
          *(_BYTE *)(v3 + *v51) = 1;
LABEL_70:
          PBRepeatedUInt32Add();
        }
      case 8:
        if (!v36 || (*(_BYTE *)(a1 + 305) & 0x10) != 0)
          goto LABEL_260;
        v196 = v19;
        if (v33 != 2)
        {
          v174 = 0;
          v175 = 0;
          v176 = 0;
          v177 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v178 = *v20;
            v179 = *(_QWORD *)(v3 + v178);
            v180 = v179 + 1;
            if (v179 == -1 || v180 > *(_QWORD *)(v3 + *v6))
              goto LABEL_364;
            v181 = *(_BYTE *)(*(_QWORD *)(v3 + *v177) + v179);
            *(_QWORD *)(v3 + v178) = v180;
            v176 |= (unint64_t)(v181 & 0x7F) << v174;
            if (v181 < 0)
            {
              v174 += 7;
              v30 = v175++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_365;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_402;
        while (1)
        {
          v60 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_264;
          v61 = 0;
          v62 = 0;
          v63 = 0;
          v64 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v65 = *v20;
            v66 = *(_QWORD *)(v3 + v65);
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
              break;
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v64) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v63 |= (unint64_t)(v68 & 0x7F) << v61;
            if (v68 < 0)
            {
              v61 += 7;
              v30 = v62++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_85;
          }
          *(_BYTE *)(v3 + *v60) = 1;
LABEL_85:
          PBRepeatedUInt32Add();
        }
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v69 = 0;
        v70 = 0;
        v46 = 0;
        *(_QWORD *)(a1 + 304) |= 2uLL;
        while (2)
        {
          v71 = *v20;
          v72 = *(_QWORD *)(v3 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v46 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v30 = v70++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_272:
        v146 = 280;
        goto LABEL_306;
      case 11:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 0x40) != 0)
        {
          v152 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v152 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 41;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOMapItemStorage);
        if (!GEOMapItemStorageReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        v75 = 176;
        goto LABEL_236;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v109 = 0;
        v110 = 0;
        v111 = 0;
        *(_QWORD *)(a1 + 304) |= 0x40uLL;
        while (2)
        {
          v112 = *v20;
          v113 = *(_QWORD *)(v3 + v112);
          v114 = v113 + 1;
          if (v113 == -1 || v114 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v113);
            *(_QWORD *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              v30 = v110++ >= 9;
              if (v30)
              {
                v111 = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v111 = 0;
LABEL_288:
        v147 = v111 != 0;
        v148 = 300;
        goto LABEL_301;
      case 13:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 8) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 152;
          goto LABEL_257;
        }
        v153 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v153 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 44;
        goto LABEL_339;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v76 = 0;
        v77 = 0;
        v46 = 0;
        *(_QWORD *)(a1 + 304) |= 1uLL;
        while (2)
        {
          v78 = *v20;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v46 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              v30 = v77++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_276:
        v146 = 276;
        goto LABEL_306;
      case 15:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 0x20) != 0)
        {
          v161 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v161 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 42;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOTransitSuggestedRoute);
        if (!GEOTransitSuggestedRouteReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        v75 = 168;
        goto LABEL_236;
      case 16:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 305) & 0x80) != 0)
        {
          v154 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v154 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 48;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOTransitDecoderData);
        if (!GEOTransitDecoderDataReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        v75 = 120;
        goto LABEL_236;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v116 = 0;
        v117 = 0;
        v118 = 0;
        *(_QWORD *)(a1 + 304) |= 0x200uLL;
        while (2)
        {
          v119 = *v20;
          v120 = *(_QWORD *)(v3 + v119);
          v121 = v120 + 1;
          if (v120 == -1 || v121 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v122 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v120);
            *(_QWORD *)(v3 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              v30 = v117++ >= 9;
              if (v30)
              {
                v118 = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v118 = 0;
LABEL_292:
        v147 = v118 != 0;
        v148 = 303;
        goto LABEL_301;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v123 = 0;
        v124 = 0;
        v46 = 0;
        *(_QWORD *)(a1 + 304) |= 0x20uLL;
        while (2)
        {
          v125 = *v20;
          v126 = *(_QWORD *)(v3 + v125);
          v127 = v126 + 1;
          if (v126 == -1 || v127 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v128 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v126);
            *(_QWORD *)(v3 + v125) = v127;
            v46 |= (unint64_t)(v128 & 0x7F) << v123;
            if (v128 < 0)
            {
              v123 += 7;
              v30 = v124++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_296:
        v146 = 296;
        goto LABEL_306;
      case 19:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 0x80) != 0)
        {
          v162 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v162 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 40;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEODirectionsRequest);
        if (!GEODirectionsRequestReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        v75 = 184;
        goto LABEL_236;
      case 20:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 307) & 1) != 0)
        {
          v155 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v155 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 39;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        v75 = 192;
        goto LABEL_236;
      case 21:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 307) & 0x80) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 248;
          goto LABEL_257;
        }
        v156 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v156 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 32;
        goto LABEL_339;
      case 22:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 0x10) == 0)
        {
          PBReaderReadData();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 160;
          goto LABEL_257;
        }
        v163 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v163 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 43;
        goto LABEL_339;
      case 23:
        if (!v36 || (*(_BYTE *)(a1 + 307) & 4) != 0)
          goto LABEL_260;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        -[GEOCompanionRouteDetails _addNoFlagsRouteDescriptions:](a1, v43);
        goto LABEL_144;
      case 24:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v82 = 0;
        v83 = 0;
        v84 = 0;
        *(_QWORD *)(a1 + 304) |= 0x100uLL;
        while (2)
        {
          v85 = *v20;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              v30 = v83++ >= 9;
              if (v30)
              {
                v84 = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v84 = 0;
LABEL_280:
        v147 = v84 != 0;
        v148 = 302;
        goto LABEL_301;
      case 25:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 307) & 2) == 0)
        {
          PBReaderReadData();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 200;
          goto LABEL_257;
        }
        v157 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v157 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 38;
        goto LABEL_339;
      case 26:
        if (!v36 || (*(_BYTE *)(a1 + 308) & 1) != 0)
          goto LABEL_260;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOCompanionWaypoint);
        if (!GEOCompanionWaypointReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
          goto LABEL_401;
        PBReaderRecallMark();
        -[GEOCompanionRouteDetails _addNoFlagsWaypoints:](a1, v43);
LABEL_144:

        goto LABEL_237;
      case 27:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v89 = 0;
        v90 = 0;
        v46 = 0;
        *(_QWORD *)(a1 + 304) |= 8uLL;
        while (2)
        {
          v91 = *v20;
          v92 = *(_QWORD *)(v3 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v46 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              v30 = v90++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_284:
        v146 = 288;
        goto LABEL_306;
      case 28:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 306) & 4) != 0)
        {
          v164 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v164 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 45;
LABEL_339:
          v7 += v150 >> 63;
          goto LABEL_340;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOETATrafficUpdateResponse);
        if (GEOETATrafficUpdateResponseReadAllFrom((uint64_t)v43, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v75 = 144;
LABEL_236:
          v129 = *(void **)(a1 + v75);
          *(_QWORD *)(a1 + v75) = v43;

          --v7;
LABEL_237:
          v19 = v196;
LABEL_258:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_259:
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_340:
          if (!v19 && v7 == 0 || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_371;
          continue;
        }
LABEL_401:

LABEL_402:
        LOBYTE(v19) = v196;
LABEL_403:
        v3 = 0;
        *(_QWORD *)(a1 + 304) |= 0x1FFFFFC00uLL;
        if (v19)
          goto LABEL_399;
        return v3;
      case 29:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v130 = 0;
        v131 = 0;
        v132 = 0;
        *(_QWORD *)(a1 + 304) |= 0x80uLL;
        while (2)
        {
          v133 = *v20;
          v134 = *(_QWORD *)(v3 + v133);
          v135 = v134 + 1;
          if (v134 == -1 || v135 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v134);
            *(_QWORD *)(v3 + v133) = v135;
            v132 |= (unint64_t)(v136 & 0x7F) << v130;
            if (v136 < 0)
            {
              v130 += 7;
              v30 = v131++ >= 9;
              if (v30)
              {
                v132 = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v132 = 0;
LABEL_300:
        v147 = v132 != 0;
        v148 = 301;
LABEL_301:
        *(_BYTE *)(a1 + v148) = v147;
        goto LABEL_340;
      case 30:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 307) & 0x40) != 0)
        {
          v158 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v158 & 1) == 0)
            goto LABEL_403;
          v150 = *(_QWORD *)(a1 + 304) << 33;
          goto LABEL_339;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_403;
        v196 = v19;
        v43 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_401;
        PBReaderRecallMark();
        v75 = 240;
        goto LABEL_236;
      case 31:
        if (!v36 || (*(_BYTE *)(a1 + 305) & 8) != 0)
        {
LABEL_260:
          v144 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v144 & 1) == 0)
            goto LABEL_403;
          goto LABEL_340;
        }
        v196 = v19;
        if (v33 != 2)
        {
          v182 = 0;
          v183 = 0;
          v184 = 0;
          v185 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v186 = *v20;
            v187 = *(_QWORD *)(v3 + v186);
            v188 = v187 + 1;
            if (v187 == -1 || v188 > *(_QWORD *)(v3 + *v6))
              break;
            v189 = *(_BYTE *)(*(_QWORD *)(v3 + *v185) + v187);
            *(_QWORD *)(v3 + v186) = v188;
            v184 |= (unint64_t)(v189 & 0x7F) << v182;
            if (v189 < 0)
            {
              v182 += 7;
              v30 = v183++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_365;
          }
LABEL_364:
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_365:
          PBRepeatedUInt32Add();
          goto LABEL_258;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_402;
        while (1)
        {
          v95 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v96 = 0;
          v97 = 0;
          v98 = 0;
          v99 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v100 = *v20;
            v101 = *(_QWORD *)(v3 + v100);
            v102 = v101 + 1;
            if (v101 == -1 || v102 > *(_QWORD *)(v3 + *v6))
              break;
            v103 = *(_BYTE *)(*(_QWORD *)(v3 + *v99) + v101);
            *(_QWORD *)(v3 + v100) = v102;
            v98 |= (unint64_t)(v103 & 0x7F) << v96;
            if (v103 < 0)
            {
              v96 += 7;
              v30 = v97++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_172;
          }
          *(_BYTE *)(v3 + *v95) = 1;
LABEL_172:
          PBRepeatedUInt32Add();
        }
LABEL_264:
        PBReaderRecallMark();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v19 = v196;
        goto LABEL_259;
      case 32:
        if ((v8 & 1) == 0)
          goto LABEL_262;
        v137 = 0;
        v138 = 0;
        v46 = 0;
        *(_QWORD *)(a1 + 304) |= 0x10uLL;
        while (2)
        {
          v139 = *v20;
          v140 = *(_QWORD *)(v3 + v139);
          v141 = v140 + 1;
          if (v140 == -1 || v141 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v142 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v140);
            *(_QWORD *)(v3 + v139) = v141;
            v46 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              v30 = v138++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_305:
        v146 = 292;
LABEL_306:
        *(_DWORD *)(a1 + v146) = v46;
        goto LABEL_340;
      case 33:
        if (!v36)
          goto LABEL_262;
        if ((*(_BYTE *)(a1 + 307) & 0x20) == 0)
        {
          PBReaderReadData();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 232;
          goto LABEL_257;
        }
        v159 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v159 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 34;
        goto LABEL_339;
      case 34:
        if (!v36)
        {
LABEL_262:
          v145 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v145 & 1) == 0)
            goto LABEL_403;
          goto LABEL_340;
        }
        if ((*(_BYTE *)(a1 + 305) & 0x40) == 0)
        {
          PBReaderReadData();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 112;
LABEL_257:
          v143 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v7;
          goto LABEL_258;
        }
        v165 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v165 & 1) == 0)
          goto LABEL_403;
        v150 = *(_QWORD *)(a1 + 304) << 49;
        goto LABEL_339;
      default:
        v108 = PBReaderSkipValueWithTag();
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v108)
          goto LABEL_403;
        goto LABEL_340;
    }
  }
}

void sub_188D55A78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D55DB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D560FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D56248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D56394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D564E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D56824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D56C5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D56E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D56F68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D573AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D574F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D57644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D57790(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D578DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D57C98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D57DE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D5819C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D58368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D584B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D58878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D589C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D5AA28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionRouteDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v2 = a1[28];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v27;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v27 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[22], "readAll:", 1);
  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[23], "readAll:", 1);
  objc_msgSend(a1[24], "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v7 = a1[26];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
    }
    while (v9);
  }

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v12 = a1[32];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v19;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v19 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v18);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[18], "readAll:", 1);
  return objc_msgSend(a1[30], "readAll:", 1);
}

unint64_t GEOCompanionRouteDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 268))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionRouteDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 272));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 264) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 268) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionRouteDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionRouteDetailsReadAllFrom_initialTag;
  Specified = GEOCompanionRouteDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOCompanionRouteDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 272));
  return Specified;
}

void sub_188D5AE74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionRouteDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D5AED4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  int v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  _BOOL8 v107;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_224;
          goto LABEL_186;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionStepIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 3u:
          if (v16 == 1)
          {
            v104 = *v2;
            v105 = *(_QWORD *)&a1[v104];
            if (v105 > 0xFFFFFFFFFFFFFFF7 || (v106 = v105 + 8, v106 > *(_QWORD *)&a1[*v3]))
LABEL_182:
              a1[v14] = 1;
            else
              *(_QWORD *)&a1[v104] = v106;
          }
          else
          {
            if (v16 != 2 || !PBReaderPlaceMark())
            {
LABEL_224:
              PBReaderRecallMark();
              return 0;
            }
            while (1)
            {
              v18 = (unint64_t *)&a1[*v2];
              v19 = *v18;
              v20 = *(_QWORD *)&a1[*v3];
              if (*v18 >= v20)
                break;
              v21 = *v4;
              if (a1[v21])
                break;
              if (v19 > 0xFFFFFFFFFFFFFFF7 || (v22 = v19 + 8, v22 > v20))
                a1[v21] = 1;
              else
                *v18 = v22;
            }
LABEL_165:
            PBReaderRecallMark();
          }
LABEL_187:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_222;
          break;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v28 = v23++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 5u:
          if (v16 == 2)
            goto LABEL_186;
          goto LABEL_224;
        case 6u:
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapItemStorageIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 7u:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_224;
            while (1)
            {
              v29 = *v2;
              v30 = *(_QWORD *)&a1[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
                goto LABEL_181;
              v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
              *(_QWORD *)&a1[v29] = v31;
              if (v32 < 0)
              {
                v33 = v16++;
                if (v33 <= 8)
                  continue;
              }
              goto LABEL_187;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_224;
LABEL_190:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v89 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v90 = *v2;
              v91 = *(_QWORD *)&a1[v90];
              v92 = v91 + 1;
              if (v91 == -1 || v92 > *(_QWORD *)&a1[*v3])
                break;
              v93 = *(char *)(*(_QWORD *)&a1[*v5] + v91);
              *(_QWORD *)&a1[v90] = v92;
              if (v93 < 0)
              {
                v13 = v89++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_190;
            }
            a1[*v4] = 1;
          }
          goto LABEL_165;
        case 8u:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_224;
            while (1)
            {
              v34 = *v2;
              v35 = *(_QWORD *)&a1[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                goto LABEL_181;
              v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
              *(_QWORD *)&a1[v34] = v36;
              if (v37 < 0)
              {
                v38 = v16++;
                if (v38 <= 8)
                  continue;
              }
              goto LABEL_187;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_224;
LABEL_200:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v94 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v95 = *v2;
              v96 = *(_QWORD *)&a1[v95];
              v97 = v96 + 1;
              if (v96 == -1 || v97 > *(_QWORD *)&a1[*v3])
                break;
              v98 = *(char *)(*(_QWORD *)&a1[*v5] + v96);
              *(_QWORD *)&a1[v95] = v97;
              if (v98 < 0)
              {
                v13 = v94++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_200;
            }
            a1[*v4] = 1;
          }
          goto LABEL_165;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v28 = v39++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v44 = 0;
          while (1)
          {
            v45 = *v2;
            v46 = *(_QWORD *)&a1[v45];
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
            *(_QWORD *)&a1[v45] = v47;
            if (v48 < 0)
            {
              v28 = v44++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0xDu:
          if (v16 == 2)
            goto LABEL_186;
          goto LABEL_224;
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v49 = 0;
          while (1)
          {
            v50 = *v2;
            v51 = *(_QWORD *)&a1[v50];
            v52 = v51 + 1;
            if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
            *(_QWORD *)&a1[v50] = v52;
            if (v53 < 0)
            {
              v28 = v49++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0xFu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitSuggestedRouteIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitDecoderDataIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v54 = 0;
          while (1)
          {
            v55 = *v2;
            v56 = *(_QWORD *)&a1[v55];
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v58 = *(char *)(*(_QWORD *)&a1[*v5] + v56);
            *(_QWORD *)&a1[v55] = v57;
            if (v58 < 0)
            {
              v28 = v54++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v59 = 0;
          while (1)
          {
            v60 = *v2;
            v61 = *(_QWORD *)&a1[v60];
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v63 = *(char *)(*(_QWORD *)&a1[*v5] + v61);
            *(_QWORD *)&a1[v60] = v62;
            if (v63 < 0)
            {
              v28 = v59++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0x13u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsRequestIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 0x15u:
          if (v16 == 2)
            goto LABEL_186;
          goto LABEL_224;
        case 0x16u:
          if (v16 == 2)
            goto LABEL_186;
          goto LABEL_224;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v64 = 0;
          while (1)
          {
            v65 = *v2;
            v66 = *(_QWORD *)&a1[v65];
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v68 = *(char *)(*(_QWORD *)&a1[*v5] + v66);
            *(_QWORD *)&a1[v65] = v67;
            if (v68 < 0)
            {
              v28 = v64++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0x19u:
          if (v16 == 2)
            goto LABEL_186;
          goto LABEL_224;
        case 0x1Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionWaypointIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 0x1Bu:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v69 = 0;
          while (1)
          {
            v70 = *v2;
            v71 = *(_QWORD *)&a1[v70];
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v73 = *(char *)(*(_QWORD *)&a1[*v5] + v71);
            *(_QWORD *)&a1[v70] = v72;
            if (v73 < 0)
            {
              v28 = v69++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0x1Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETATrafficUpdateResponseIsValid(a1))
            goto LABEL_224;
          goto LABEL_165;
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v74 = 0;
          while (1)
          {
            v75 = *v2;
            v76 = *(_QWORD *)&a1[v75];
            v77 = v76 + 1;
            if (v76 == -1 || v77 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v78 = *(char *)(*(_QWORD *)&a1[*v5] + v76);
            *(_QWORD *)&a1[v75] = v77;
            if (v78 < 0)
            {
              v28 = v74++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0x1Eu:
          if (v16 == 2 && PBReaderPlaceMark() && GEOStyleAttributesIsValid(a1))
            goto LABEL_165;
          goto LABEL_224;
        case 0x1Fu:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_224;
            while (1)
            {
              v79 = *v2;
              v80 = *(_QWORD *)&a1[v79];
              v81 = v80 + 1;
              if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
                break;
              v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
              *(_QWORD *)&a1[v79] = v81;
              if (v82 < 0)
              {
                v83 = v16++;
                if (v83 <= 8)
                  continue;
              }
              goto LABEL_187;
            }
LABEL_181:
            v14 = *v4;
            goto LABEL_182;
          }
          if (!PBReaderPlaceMark())
            goto LABEL_224;
LABEL_210:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v99 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v100 = *v2;
              v101 = *(_QWORD *)&a1[v100];
              v102 = v101 + 1;
              if (v101 == -1 || v102 > *(_QWORD *)&a1[*v3])
                break;
              v103 = *(char *)(*(_QWORD *)&a1[*v5] + v101);
              *(_QWORD *)&a1[v100] = v102;
              if (v103 < 0)
              {
                v13 = v99++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_210;
            }
            a1[*v4] = 1;
          }
          goto LABEL_165;
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_224;
          v84 = 0;
          while (1)
          {
            v85 = *v2;
            v86 = *(_QWORD *)&a1[v85];
            v87 = v86 + 1;
            if (v86 == -1 || v87 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v88 = *(char *)(*(_QWORD *)&a1[*v5] + v86);
            *(_QWORD *)&a1[v85] = v87;
            if (v88 < 0)
            {
              v28 = v84++ > 8;
              if (!v28)
                continue;
            }
            goto LABEL_187;
          }
        case 0x21u:
          if (v16 == 2)
            goto LABEL_186;
          goto LABEL_224;
        case 0x22u:
          if (v16 == 2)
            goto LABEL_186;
          goto LABEL_224;
        default:
LABEL_186:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_187;
          goto LABEL_224;
      }
    }
  }
LABEL_222:
  v107 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v107;
}

BOOL GEOCompanionStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  _BOOL8 v57;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_125;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_120;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_122;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_125;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_120;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_122;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_125;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_120;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_122;
          }
        case 4u:
          if (v16 == 2)
            goto LABEL_90;
          goto LABEL_125;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionDriveStepIsValid(a1))
            goto LABEL_125;
          goto LABEL_107;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionWalkStepIsValid(a1))
            goto LABEL_125;
          goto LABEL_107;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionFerryStepIsValid(a1))
            goto LABEL_125;
          goto LABEL_107;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_125;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_120;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_122;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_125;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_120;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_122;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_125;
          v44 = 0;
          while (1)
          {
            v45 = *v2;
            v46 = *(_QWORD *)&a1[v45];
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
              goto LABEL_120;
            v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
            *(_QWORD *)&a1[v45] = v47;
            if (v48 < 0)
            {
              v23 = v44++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_122;
          }
        case 0xBu:
          if (v16 == 2)
            goto LABEL_90;
          goto LABEL_125;
        case 0xCu:
          if (v16 == 2)
            goto LABEL_90;
          goto LABEL_125;
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1))
            goto LABEL_125;
          goto LABEL_107;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_90;
          goto LABEL_125;
        case 0xFu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionGenericStepIsValid(a1))
            goto LABEL_125;
          goto LABEL_107;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCompanionCyclingStepIsValid(a1))
            goto LABEL_125;
          goto LABEL_107;
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORoadDescriptionIsValid(a1))
            goto LABEL_125;
          goto LABEL_107;
        case 0x12u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStopWaypointIsValid(a1))
            goto LABEL_125;
LABEL_107:
          PBReaderRecallMark();
          continue;
        case 0x13u:
          if (v16 != 5)
            goto LABEL_125;
          v49 = *v2;
          v50 = *(_QWORD *)&a1[v49];
          if (v50 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_121;
          v51 = v50 + 4;
          if (v51 > *(_QWORD *)&a1[*v3])
            goto LABEL_121;
          *(_QWORD *)&a1[v49] = v51;
          continue;
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_125;
          v52 = 0;
          break;
        default:
LABEL_90:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_125:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v53 = *v2;
        v54 = *(_QWORD *)&a1[v53];
        v55 = v54 + 1;
        if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
          break;
        v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
        *(_QWORD *)&a1[v53] = v55;
        if (v56 < 0)
        {
          v23 = v52++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_122;
      }
LABEL_120:
      v14 = *v4;
LABEL_121:
      a1[v14] = 1;
LABEL_122:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

BOOL GEOCompanionWaypointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOMapItemStorageIsValid(a1))
            goto LABEL_26;
          goto LABEL_45;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1))
            goto LABEL_45;
LABEL_26:
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_45;
          v17 = 0;
          break;
        case 4u:
          if (v15 == 2)
            goto LABEL_40;
          goto LABEL_45;
        case 5u:
          if (v15 == 2)
            goto LABEL_40;
          goto LABEL_45;
        case 6u:
          if (v15 == 2)
            goto LABEL_40;
          goto LABEL_45;
        default:
LABEL_40:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_45:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_41;
      }
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188D5C954(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionRouteDetailsIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 272));
  v2 = *(_QWORD *)(a1 + 304);
  if ((v2 & 0x218010400) != 0)
    return 1;
  if ((v2 & 0x20000) != 0)
  {
    if ((GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 136)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 304);
  }
  if ((v2 & 0x400000) != 0)
  {
    if ((GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 176)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 304);
  }
  if ((v2 & 0x83000) == 0)
  {
    if ((v2 & 0x200000) != 0)
    {
      if ((GEOTransitSuggestedRouteIsDirty(*(os_unfair_lock_s **)(a1 + 168)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 304);
    }
    if ((v2 & 0x8000) != 0)
    {
      if ((GEOTransitDecoderDataIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 304);
    }
    if ((v2 & 0x800000) != 0)
    {
      if ((GEODirectionsRequestIsDirty(*(os_unfair_lock_s **)(a1 + 184)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 304);
    }
    if ((v2 & 0x1000000) != 0)
    {
      if ((GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(a1 + 192)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 304);
    }
    if ((v2 & 0x186100000) == 0)
    {
      if ((v2 & 0x40000) != 0)
      {
        if ((GEOETATrafficUpdateResponseIsDirty(*(os_unfair_lock_s **)(a1 + 144)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 304);
      }
      if ((v2 & 0x60004800) == 0)
      {
        if ((v2 & 0x10000000) != 0)
        {
          v26 = 0u;
          v27 = 0u;
          v24 = 0u;
          v25 = 0u;
          v5 = *(id *)(a1 + 224);
          v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
          if (v6)
          {
            v7 = v6;
            v8 = *(_QWORD *)v25;
LABEL_31:
            v9 = 0;
            while (1)
            {
              if (*(_QWORD *)v25 != v8)
                objc_enumerationMutation(v5);
              if ((GEOCompanionStepIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v9)) & 1) != 0)
                goto LABEL_59;
              if (v7 == ++v9)
              {
                v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
                if (v7)
                  goto LABEL_31;
                break;
              }
            }
          }

          v2 = *(_QWORD *)(a1 + 304);
        }
        if ((v2 & 0x4000000) != 0)
        {
          v22 = 0u;
          v23 = 0u;
          v20 = 0u;
          v21 = 0u;
          v5 = *(id *)(a1 + 208);
          v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
          if (v10)
          {
            v11 = v10;
            v12 = *(_QWORD *)v21;
LABEL_41:
            v13 = 0;
            while (1)
            {
              if (*(_QWORD *)v21 != v12)
                objc_enumerationMutation(v5);
              if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v13)) & 1) != 0)
                goto LABEL_59;
              if (v11 == ++v13)
              {
                v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
                if (v11)
                  goto LABEL_41;
                break;
              }
            }
          }

          v2 = *(_QWORD *)(a1 + 304);
        }
        if ((v2 & 0x100000000) == 0)
          return 0;
        v18 = 0u;
        v19 = 0u;
        v16 = 0u;
        v17 = 0u;
        v5 = *(id *)(a1 + 256);
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
        if (!v3)
        {
LABEL_60:

          return v3;
        }
        v14 = *(_QWORD *)v17;
LABEL_52:
        v15 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v14)
            objc_enumerationMutation(v5);
          if ((GEOCompanionWaypointIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v15)) & 1) != 0)
            break;
          if (v3 == ++v15)
          {
            v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
            if (v3)
              goto LABEL_52;
            goto LABEL_60;
          }
        }
LABEL_59:
        v3 = 1;
        goto LABEL_60;
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEOCompanionRouteDetailsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionRouteDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 68);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOCompanionRouteDetailsClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  void *v6;
  int HasSensitiveFields;
  void *v8;
  id *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  id *v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  id *v19;
  void *v20;
  void *v21;
  int v22;
  void *v23;
  void *v24;
  unint64_t result;
  unint64_t i;
  void *v27;
  void *v28;
  void *v29;

  if (a3)
  {
    if (objc_msgSend(a1, "hasDestination")
      && (objc_msgSend(a1, "destination"),
          v6 = (void *)objc_claimAutoreleasedReturnValue(),
          HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v6, a2),
          v6,
          HasSensitiveFields))
    {
      objc_msgSend(a1, "destination");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (id *)objc_msgSend(v8, "copy");

      GEOMapItemStorageClearSensitiveFields(v9, a2, 0);
      objc_msgSend(a1, "setDestination:", v9);
    }
    else
    {
      objc_msgSend(a1, "destination");
      v9 = (id *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasOrigin"))
    {
      objc_msgSend(a1, "origin");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = GEOMapItemStorageHasSensitiveFields((uint64_t)v11, a2);

      if (v12)
      {
        objc_msgSend(a1, "origin");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = (id *)objc_msgSend(v13, "copy");

        GEOMapItemStorageClearSensitiveFields(v14, a2, 0);
        objc_msgSend(a1, "setOrigin:", v14);

        goto LABEL_11;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "destination");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "origin");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "clearSensitiveFields:", a2);

  if (!a3)
  {
    objc_msgSend(a1, "request");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "clearSensitiveFields:", a2);

    goto LABEL_19;
  }
LABEL_11:
  if (objc_msgSend(a1, "hasRequest")
    && (objc_msgSend(a1, "request"),
        v16 = (void *)objc_claimAutoreleasedReturnValue(),
        v17 = GEODirectionsRequestHasSensitiveFields((uint64_t)v16),
        v16,
        v17))
  {
    objc_msgSend(a1, "request");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = (id *)objc_msgSend(v18, "copy");

    GEODirectionsRequestClearSensitiveFields(v19, a2, 0);
    objc_msgSend(a1, "setRequest:", v19);
  }
  else
  {
    objc_msgSend(a1, "request");
    v19 = (id *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "clearSensitiveFields:", a2);
  }

  if (objc_msgSend(a1, "hasResponse"))
  {
    objc_msgSend(a1, "response");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = GEODirectionsResponseHasSensitiveFields(v21);

    if (v22)
    {
      objc_msgSend(a1, "response");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = (void *)objc_msgSend(v23, "copy");

      GEODirectionsResponseClearSensitiveFields((uint64_t)v24, a2, 0);
      objc_msgSend(a1, "setResponse:", v24);
      goto LABEL_20;
    }
  }
LABEL_19:
  objc_msgSend(a1, "response");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "clearSensitiveFields:", a2);
LABEL_20:

  -[GEOCompanionRouteDetails _readWaypoints]((uint64_t)a1);
  result = objc_msgSend(a1[32], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[32], "objectAtIndexedSubscript:", i);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      v28 = v27;
      if (a3 && GEOCompanionWaypointHasSensitiveFields(v27, a2))
      {
        v29 = (void *)objc_msgSend(v28, "copy");
        GEOCompanionWaypointClearSensitiveFields(v29, a2, 0);
        objc_msgSend(a1[32], "replaceObjectAtIndex:withObject:", i, v29);

      }
      else
      {
        objc_msgSend(v28, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(a1[32], "count");
    }
  }
  return result;
}

uint64_t GEOCompanionRouteDetailsHasSensitiveFields(uint64_t result, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char HasSensitiveFields;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v3 = (void *)result;
    objc_msgSend((id)result, "destination");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (!GEOMapItemStorageHasSensitiveFields((uint64_t)v4, a2))
    {
      objc_msgSend(v3, "origin");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      if (GEOMapItemStorageHasSensitiveFields((uint64_t)v5, a2))
      {
LABEL_6:

        goto LABEL_7;
      }
      objc_msgSend(v3, "request");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (GEODirectionsRequestHasSensitiveFields((uint64_t)v6))
      {

        goto LABEL_6;
      }
      objc_msgSend(v3, "response");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEODirectionsResponseHasSensitiveFields(v7);

      if ((HasSensitiveFields & 1) != 0)
        return 1;
      v15 = 0u;
      v16 = 0u;
      v13 = 0u;
      v14 = 0u;
      objc_msgSend(v3, "waypoints", 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (!v9)
      {
LABEL_19:

        return 0;
      }
      v10 = v9;
      v11 = *(_QWORD *)v14;
LABEL_13:
      v12 = 0;
      while (1)
      {
        if (*(_QWORD *)v14 != v11)
          objc_enumerationMutation(v4);
        if ((GEOCompanionWaypointHasSensitiveFields(*(void **)(*((_QWORD *)&v13 + 1) + 8 * v12), a2) & 1) != 0)
          break;
        if (v10 == ++v12)
        {
          v10 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
          if (v10)
            goto LABEL_13;
          goto LABEL_19;
        }
      }
    }
LABEL_7:

    return 1;
  }
  return result;
}

uint64_t GEOCompanionWaypointHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  if (!a1)
    return 0;
  objc_msgSend(a1, "mapItem");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOMapItemStorageHasSensitiveFields((uint64_t)v4, a2) & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    objc_msgSend(a1, "waypointTyped");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (uint64_t)GEOWaypointTypedHasSensitiveFields(v6);

  }
  return v5;
}

void GEOCompanionWaypointClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  void *v13;
  id v14;

  if (!a3)
  {
    objc_msgSend(a1, "mapItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

LABEL_10:
    objc_msgSend(a1, "waypointTyped");
    v14 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);
    goto LABEL_11;
  }
  if (objc_msgSend(a1, "hasMapItem")
    && (objc_msgSend(a1, "mapItem"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "mapItem");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id *)objc_msgSend(v7, "copy");

    GEOMapItemStorageClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setMapItem:", v8);
  }
  else
  {
    objc_msgSend(a1, "mapItem");
    v8 = (id *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasWaypointTyped"))
    goto LABEL_10;
  objc_msgSend(a1, "waypointTyped");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = GEOWaypointTypedHasSensitiveFields(v10);

  if (!v11)
    goto LABEL_10;
  objc_msgSend(a1, "waypointTyped");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (id)objc_msgSend(v12, "copy");

  objc_msgSend(v14, "waypointLocation");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "clearSensitiveFields:", a2);

  objc_msgSend(a1, "setWaypointTyped:", v14);
LABEL_11:

}

void sub_188D5E418(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D5FC58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteStatusReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  int *v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  int v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  int v152;
  int v153;
  void *v154;
  GEOLocation *v156;
  char v157;
  char v158;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11.i64[0] = 0x100000001;
  v11.i64[1] = 0x100000001;
  v12 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 136)), (uint32x4_t)xmmword_189CCE340), v11))+ (HIWORD(*(_DWORD *)(a1 + 136)) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v15 = v12 > 3;
        v16 = v10 | v15;
        if ((((v10 | v15) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_269;
        v158 = (v17 == 0) | v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v157 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        v13 = v9;
        v14 = v10;
LABEL_8:
        ++v7;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_269;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_269:
      if ((v16 & 1) != 0)
      {
        v151 = 1;
        goto LABEL_271;
      }
      if (v17)
      {
        while (1)
        {
          v152 = *v17++;
          v153 = 0x20000;
          switch(v152)
          {
            case 8:
              goto LABEL_280;
            case 12:
              v153 = 0x80000;
              goto LABEL_280;
            case 13:
              v153 = 0x40000;
              goto LABEL_280;
            case 15:
              v153 = 0x8000;
              goto LABEL_280;
            case 19:
              v153 = 0x10000;
LABEL_280:
              *(_DWORD *)(a1 + 136) |= v153;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_281;
    }
    v32 = v23 >> 3;
    v33 = v16;
    if ((v158 & 1) == 0)
    {
      v34 = v17;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x20u;
        while (1)
        {
          v41 = *v18;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_189;
          v38 += 7;
          v28 = v39++ >= 9;
          if (v28)
          {
            LODWORD(v40) = 0;
            goto LABEL_191;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_189:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_191:
        v140 = 108;
        goto LABEL_241;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v46 = 0;
        v47 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x400u;
        while (2)
        {
          v48 = *v18;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v40 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v28 = v47++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_195;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_195:
        v140 = 128;
        goto LABEL_241;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v52 = 0;
        v53 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 8u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v40 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v28 = v53++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_199;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_199:
        v140 = 100;
        goto LABEL_241;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v58 = 0;
        v59 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x10u;
        while (2)
        {
          v60 = *v18;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v40 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              v28 = v59++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_203;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_203:
        v140 = 104;
        goto LABEL_241;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v64 = 0;
        v65 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 4u;
        while (2)
        {
          v66 = *v18;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v40 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v28 = v65++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_207;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_207:
        v140 = 96;
        goto LABEL_241;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v70 = 0;
        v71 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x80u;
        while (2)
        {
          v72 = *v18;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v40 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v28 = v71++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_211;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_211:
        v140 = 116;
        goto LABEL_241;
      case 8:
        if (!v33)
          goto LABEL_186;
        if ((*(_BYTE *)(a1 + 138) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_286;
          v143 = (int)(*(_DWORD *)(a1 + 136) << 14) >> 31;
          goto LABEL_250;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_286;
        v156 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v156, (void *)v3, v9 & 1))
          goto LABEL_285;
        PBReaderRecallMark();
        v76 = 48;
        goto LABEL_168;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v77 = 0;
        v78 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x100u;
        while (2)
        {
          v79 = *v18;
          v80 = *(_QWORD *)(v3 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v40 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v28 = v78++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_215:
        v140 = 120;
        goto LABEL_241;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        *(_DWORD *)(a1 + 136) |= 0x200u;
        v83 = *v18;
        v84 = *(_QWORD *)(v3 + v83);
        if (v84 <= 0xFFFFFFFFFFFFFFFBLL && v84 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v85 = *(_DWORD *)(*(_QWORD *)(v3 + *v20) + v84);
          *(_QWORD *)(v3 + v83) = v84 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v85 = 0;
        }
        *(_DWORD *)(a1 + 124) = v85;
        goto LABEL_252;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        *(_DWORD *)(a1 + 136) |= 1u;
        v86 = *v18;
        v87 = *(_QWORD *)(v3 + v86);
        if (v87 <= 0xFFFFFFFFFFFFFFF7 && v87 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v88 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v87);
          *(_QWORD *)(v3 + v86) = v87 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v88 = 0;
        }
        *(_QWORD *)(a1 + 72) = v88;
        goto LABEL_252;
      case 12:
        if (!v33)
          goto LABEL_186;
        if ((*(_BYTE *)(a1 + 138) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_286;
          v143 = (int)(*(_DWORD *)(a1 + 136) << 12) >> 31;
          goto LABEL_250;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_286;
        v156 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v156, (void *)v3))
          goto LABEL_285;
        PBReaderRecallMark();
        v76 = 64;
        goto LABEL_168;
      case 13:
        if (!v33)
          goto LABEL_186;
        if ((*(_BYTE *)(a1 + 138) & 4) == 0)
        {
          PBReaderReadData();
          v89 = objc_claimAutoreleasedReturnValue();
          v90 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v89;
          goto LABEL_169;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_286;
        v143 = (int)(*(_DWORD *)(a1 + 136) << 13) >> 31;
        goto LABEL_250;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v91 = 0;
        v92 = 0;
        v93 = 0;
        *(_DWORD *)(a1 + 136) |= 0x800u;
        while (2)
        {
          v94 = *v18;
          v95 = *(_QWORD *)(v3 + v94);
          v96 = v95 + 1;
          if (v95 == -1 || v96 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v95);
            *(_QWORD *)(v3 + v94) = v96;
            v93 |= (unint64_t)(v97 & 0x7F) << v91;
            if (v97 < 0)
            {
              v91 += 7;
              v28 = v92++ >= 9;
              if (v28)
              {
                v93 = 0;
                goto LABEL_219;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v93 = 0;
LABEL_219:
        v141 = v93 != 0;
        v142 = 132;
        goto LABEL_236;
      case 15:
        if (!v33 || (*(_BYTE *)(a1 + 137) & 0x80) != 0)
          goto LABEL_186;
        if (v30 != 2)
        {
          v144 = 0;
          v145 = 0;
          v146 = 0;
          while (1)
          {
            v147 = *v18;
            v148 = *(_QWORD *)(v3 + v147);
            v149 = v148 + 1;
            if (v148 == -1 || v149 > *(_QWORD *)(v3 + *v6))
              break;
            v150 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v148);
            *(_QWORD *)(v3 + v147) = v149;
            v146 |= (unint64_t)(v150 & 0x7F) << v144;
            if (v150 < 0)
            {
              v144 += 7;
              v28 = v145++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_268;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_268:
          PBRepeatedUInt32Add();
          goto LABEL_251;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_286;
        while (1)
        {
          v98 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v99 = 0;
          v100 = 0;
          v101 = 0;
          while (1)
          {
            v102 = *v18;
            v103 = *(_QWORD *)(v3 + v102);
            v104 = v103 + 1;
            if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v6))
              break;
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              v28 = v100++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_138;
          }
          *(_BYTE *)(v3 + *v98) = 1;
LABEL_138:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v16 = v157;
        goto LABEL_252;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v106 = 0;
        v107 = 0;
        v108 = 0;
        *(_DWORD *)(a1 + 136) |= 0x4000u;
        while (2)
        {
          v109 = *v18;
          v110 = *(_QWORD *)(v3 + v109);
          v111 = v110 + 1;
          if (v110 == -1 || v111 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v112 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v110);
            *(_QWORD *)(v3 + v109) = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if (v112 < 0)
            {
              v106 += 7;
              v28 = v107++ >= 9;
              if (v28)
              {
                v108 = 0;
                goto LABEL_223;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v108 = 0;
LABEL_223:
        v141 = v108 != 0;
        v142 = 135;
        goto LABEL_236;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v113 = 0;
        v114 = 0;
        v40 = 0;
        *(_DWORD *)(a1 + 136) |= 0x40u;
        while (2)
        {
          v115 = *v18;
          v116 = *(_QWORD *)(v3 + v115);
          v117 = v116 + 1;
          if (v116 == -1 || v117 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v118 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v116);
            *(_QWORD *)(v3 + v115) = v117;
            v40 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              v28 = v114++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_227;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_227:
        v140 = 112;
        goto LABEL_241;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v119 = 0;
        v120 = 0;
        v121 = 0;
        *(_DWORD *)(a1 + 136) |= 0x1000u;
        while (2)
        {
          v122 = *v18;
          v123 = *(_QWORD *)(v3 + v122);
          v124 = v123 + 1;
          if (v123 == -1 || v124 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v125 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v123);
            *(_QWORD *)(v3 + v122) = v124;
            v121 |= (unint64_t)(v125 & 0x7F) << v119;
            if (v125 < 0)
            {
              v119 += 7;
              v28 = v120++ >= 9;
              if (v28)
              {
                v121 = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v121 = 0;
LABEL_231:
        v141 = v121 != 0;
        v142 = 133;
        goto LABEL_236;
      case 19:
        if (!v33)
          goto LABEL_186;
        if ((*(_BYTE *)(a1 + 138) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_286;
          v143 = (int)(*(_DWORD *)(a1 + 136) << 15) >> 31;
LABEL_250:
          v7 += v143;
LABEL_251:
          v16 = v157;
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_252:
          if (!(v16 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_269;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_286;
        v156 = objc_alloc_init(GEOCompanionTransitAlightMessage);
        if (GEOCompanionTransitAlightMessageReadAllFrom((uint64_t)v156, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v76 = 40;
LABEL_168:
          v90 = *(void **)(a1 + v76);
          *(_QWORD *)(a1 + v76) = v156;
LABEL_169:

          --v7;
          goto LABEL_251;
        }
LABEL_285:

LABEL_286:
        v151 = 0;
        v16 = v157;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_271:
        *(_DWORD *)(a1 + 136) |= 0x20000u;
        *(_DWORD *)(a1 + 136) |= 0x80000u;
        *(_DWORD *)(a1 + 136) |= 0x40000u;
        *(_DWORD *)(a1 + 136) |= 0x8000u;
        *(_DWORD *)(a1 + 136) |= 0x10000u;
        if ((v151 & 1) != 0)
        {
LABEL_281:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_282;
          return v3;
        }
        v3 = 0;
        if ((v16 & 1) == 0)
          return v3;
LABEL_282:
        v154 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 20:
        if ((v8 & 1) == 0)
          goto LABEL_186;
        v126 = 0;
        v127 = 0;
        v128 = 0;
        *(_DWORD *)(a1 + 136) |= 0x2000u;
        while (2)
        {
          v129 = *v18;
          v130 = *(_QWORD *)(v3 + v129);
          v131 = v130 + 1;
          if (v130 == -1 || v131 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v132 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v130);
            *(_QWORD *)(v3 + v129) = v131;
            v128 |= (unint64_t)(v132 & 0x7F) << v126;
            if (v132 < 0)
            {
              v126 += 7;
              v28 = v127++ >= 9;
              if (v28)
              {
                v128 = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v128 = 0;
LABEL_235:
        v141 = v128 != 0;
        v142 = 134;
LABEL_236:
        *(_BYTE *)(a1 + v142) = v141;
        goto LABEL_252;
      case 21:
        if ((v8 & 1) != 0)
        {
          v133 = 0;
          v134 = 0;
          v40 = 0;
          *(_DWORD *)(a1 + 136) |= 2u;
          while (1)
          {
            v135 = *v18;
            v136 = *(_QWORD *)(v3 + v135);
            v137 = v136 + 1;
            if (v136 == -1 || v137 > *(_QWORD *)(v3 + *v6))
              break;
            v138 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v136);
            *(_QWORD *)(v3 + v135) = v137;
            v40 |= (unint64_t)(v138 & 0x7F) << v133;
            if ((v138 & 0x80) == 0)
              goto LABEL_238;
            v133 += 7;
            v28 = v134++ >= 9;
            if (v28)
            {
              LODWORD(v40) = 0;
              goto LABEL_240;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_238:
          if (*(_BYTE *)(v3 + *v19))
            LODWORD(v40) = 0;
LABEL_240:
          v140 = 92;
LABEL_241:
          *(_DWORD *)(a1 + v140) = v40;
        }
        else
        {
LABEL_186:
          v139 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v16 = v157;
          if ((v139 & 1) == 0)
          {
LABEL_284:
            v151 = 0;
            goto LABEL_271;
          }
        }
        goto LABEL_252;
      default:
        v45 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v16 = v157;
        if (!v45)
          goto LABEL_284;
        goto LABEL_252;
    }
  }
}

void sub_188D610EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D61230(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D613FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D62378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D63F84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteStatusReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionRouteStatusReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionRouteStatusReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionRouteStatusReadAllFrom_initialTag;
  Specified = GEOCompanionRouteStatusReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188D6414C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteStatusReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionRouteStatusReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D641AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteStatusIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  _BOOL8 v98;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v44 = 0;
          while (1)
          {
            v45 = *v2;
            v46 = *(_QWORD *)&a1[v45];
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
            *(_QWORD *)&a1[v45] = v47;
            if (v48 < 0)
            {
              v23 = v44++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_169;
          goto LABEL_136;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v49 = 0;
          while (1)
          {
            v50 = *v2;
            v51 = *(_QWORD *)&a1[v50];
            v52 = v51 + 1;
            if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
            *(_QWORD *)&a1[v50] = v52;
            if (v53 < 0)
            {
              v23 = v49++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 0xAu:
          if (v16 != 5)
            goto LABEL_169;
          v54 = *v2;
          v55 = *(_QWORD *)&a1[v54];
          if (v55 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_154;
          v56 = v55 + 4;
          goto LABEL_85;
        case 0xBu:
          if (v16 != 1)
            goto LABEL_169;
          v54 = *v2;
          v57 = *(_QWORD *)&a1[v54];
          if (v57 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_154;
          v56 = v57 + 8;
LABEL_85:
          if (v56 > *(_QWORD *)&a1[*v3])
            goto LABEL_154;
          *(_QWORD *)&a1[v54] = v56;
          goto LABEL_155;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_169;
          goto LABEL_136;
        case 0xDu:
          if (v16 == 2)
            goto LABEL_92;
          goto LABEL_169;
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v23 = v58++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 0xFu:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_169:
              PBReaderRecallMark();
              return 0;
            }
LABEL_158:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v93 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v94 = *v2;
                v95 = *(_QWORD *)&a1[v94];
                v96 = v95 + 1;
                if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
                  break;
                v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
                *(_QWORD *)&a1[v94] = v96;
                if (v97 < 0)
                {
                  v13 = v93++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_158;
              }
              a1[*v4] = 1;
            }
LABEL_136:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_169;
            while (1)
            {
              v63 = *v2;
              v64 = *(_QWORD *)&a1[v63];
              v65 = v64 + 1;
              if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
                break;
              v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
              *(_QWORD *)&a1[v63] = v65;
              if (v66 < 0)
              {
                v67 = v16++;
                if (v67 <= 8)
                  continue;
              }
              goto LABEL_155;
            }
LABEL_153:
            v14 = *v4;
LABEL_154:
            a1[v14] = 1;
          }
LABEL_155:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_167;
          break;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v23 = v68++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v23 = v73++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v78 = 0;
          while (1)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
            *(_QWORD *)&a1[v79] = v81;
            if (v82 < 0)
            {
              v23 = v78++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 0x13u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOCompanionTransitAlightMessageIsValid(a1))
            goto LABEL_136;
          goto LABEL_169;
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v83 = 0;
          while (1)
          {
            v84 = *v2;
            v85 = *(_QWORD *)&a1[v84];
            v86 = v85 + 1;
            if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
            *(_QWORD *)&a1[v84] = v86;
            if (v87 < 0)
            {
              v23 = v83++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v88 = 0;
          while (1)
          {
            v89 = *v2;
            v90 = *(_QWORD *)&a1[v89];
            v91 = v90 + 1;
            if (v90 == -1 || v91 > *(_QWORD *)&a1[*v3])
              goto LABEL_153;
            v92 = *(char *)(*(_QWORD *)&a1[*v5] + v90);
            *(_QWORD *)&a1[v89] = v91;
            if (v92 < 0)
            {
              v23 = v88++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_155;
          }
        default:
LABEL_92:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_169;
          goto LABEL_155;
      }
    }
  }
LABEL_167:
  v98 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v98;
}

BOOL GEOCompanionTransitAlightMessageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_51;
          goto LABEL_42;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_48;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v23 = 0;
          break;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1))
            goto LABEL_47;
          goto LABEL_51;
        case 7u:
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_51;
LABEL_47:
          PBReaderRecallMark();
          continue;
        default:
LABEL_42:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_51:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_48;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188D6506C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionRouteStatusIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_DWORD *)(a1 + 136);
  if ((v2 & 0x100000) != 0)
    return 1;
  if ((v2 & 0x20000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 48)))
      return 1;
    v2 = *(_DWORD *)(a1 + 136);
  }
  if ((v2 & 0xC8000) != 0)
    return 1;
  if ((v2 & 0x10000) != 0)
    return (uint64_t)GEOCompanionTransitAlightMessageIsDirty(*(os_unfair_lock_s **)(a1 + 40));
  else
    return 0;
}

os_unfair_lock_s *GEOCompanionRouteStatusIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionRouteStatusIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOCompanionRouteStatusClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLocation")
    && (objc_msgSend(a1, "location"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "location");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "location");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEOCompanionRouteStatusHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "location");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188D65A90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D66780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  int *v17;
  int *v18;
  BOOL v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  int v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  GEOTransitRouteUpdate *v50;
  void *v51;
  char v52;
  char v53;
  char v54;
  char v55;
  int v56;
  int v57;
  char v58;
  void *v59;
  _BOOL4 v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (v14)
          v19 = 1;
        else
          v19 = v15 == 0;
        v62 = v19;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_80;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_80:
      if (v16)
      {
        v55 = 1;
        goto LABEL_94;
      }
      if (!v15)
        goto LABEL_95;
      while (1)
      {
        v57 = *v15++;
        v56 = v57;
        if (v57 == 1)
          break;
        if (v56 == 4)
        {
          v58 = 8;
LABEL_89:
          *(_BYTE *)(a1 + 56) |= v58;
        }
        else if (!v56)
        {
          goto LABEL_95;
        }
      }
      v58 = 4;
      goto LABEL_89;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v62)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_62;
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;

          --v9;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_91;
        v53 = 32 * *(_BYTE *)(a1 + 56);
        goto LABEL_72;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_62;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 2u;
        while (2)
        {
          v43 = *v17;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v28 = v41++ >= 9;
              if (v28)
              {
                LODWORD(v42) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v42) = 0;
LABEL_67:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_76;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_62;
        *(_BYTE *)(a1 + 56) |= 1u;
        v47 = *v17;
        v48 = *(_QWORD *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v49 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v48);
          *(_QWORD *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v49 = 0;
        }
        *(_QWORD *)(a1 + 16) = v49;
        goto LABEL_76;
      case 4:
        if (!v32)
        {
LABEL_62:
          v52 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
LABEL_90:
            v55 = 0;
            goto LABEL_94;
          }
LABEL_76:
          if (v9)
            v54 = 1;
          else
            v54 = v16;
          if ((v54 & 1) == 0)
            goto LABEL_80;
          continue;
        }
        if ((*(_BYTE *)(a1 + 56) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_91:
            v55 = 0;
            goto LABEL_93;
          }
          v53 = 16 * *(_BYTE *)(a1 + 56);
LABEL_72:
          v9 += v53 >> 7;
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_91;
        v61 = v16;
        v50 = objc_alloc_init(GEOTransitRouteUpdate);
        if (GEOTransitRouteUpdateReadAllFrom((uint64_t)v50, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          v51 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v50;

          --v9;
          v16 = v61;
LABEL_73:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_76;
        }

        v55 = 0;
        v16 = v61;
LABEL_93:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
        *(_BYTE *)(a1 + 56) |= 4u;
        *(_BYTE *)(a1 + 56) |= 8u;
        if ((v55 & 1) != 0)
        {
LABEL_95:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v16)
            goto LABEL_96;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_96:
            v59 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v39)
          goto LABEL_90;
        goto LABEL_76;
    }
  }
}

void sub_188D67068(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6764C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionRouteUpdateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionRouteUpdateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionRouteUpdateReadAllFrom_initialTag;
  Specified = GEOCompanionRouteUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188D677F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionRouteUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionRouteUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D67850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionRouteUpdateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_43;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v18 = 0;
          break;
        case 3u:
          if (v16 != 1)
            goto LABEL_43;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_39;
          v26 = v25 + 8;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_39;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitRouteUpdateIsValid(a1))
            goto LABEL_43;
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_43:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        v21 = v20 + 1;
        if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
          break;
        v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
        *(_QWORD *)&a1[v19] = v21;
        if (v22 < 0 && v18++ <= 8)
          continue;
        goto LABEL_40;
      }
      v14 = *v4;
LABEL_39:
      a1[v14] = 1;
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_188D67C90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOCompanionRouteUpdateIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x14) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
    return GEOTransitRouteUpdateIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEOCompanionRouteUpdateIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *updated;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    updated = _GEOCompanionRouteUpdateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return updated;
  }
  return result;
}

void sub_188D68020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D68650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionStepReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const float *v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  GEOCompanionDriveStep *v80;
  void *v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  int v93;
  char v94;
  int v95;
  int v96;
  void *v97;
  GEOCompanionDriveStep *v99;
  char v100;
  char v101;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const float *)(a1 + 156);
  v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE350), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE360), v13)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CCE370), v13)));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 8;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v101 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v100 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_212;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_212:
      if ((v18 & 1) != 0)
      {
        v94 = 1;
        goto LABEL_231;
      }
      if (v19)
      {
        while (1)
        {
          v95 = *v19++;
          v96 = 0x10000;
          switch(v95)
          {
            case 0:
              goto LABEL_232;
            case 4:
              goto LABEL_227;
            case 5:
              v96 = 512;
              goto LABEL_227;
            case 6:
              v96 = 0x80000;
              goto LABEL_227;
            case 7:
              v96 = 1024;
              goto LABEL_227;
            case 11:
              v96 = 0x2000;
              goto LABEL_227;
            case 12:
              v96 = 0x4000;
              goto LABEL_227;
            case 13:
              v96 = 4096;
              goto LABEL_227;
            case 14:
              v96 = 0x40000;
              goto LABEL_227;
            case 15:
              v96 = 2048;
              goto LABEL_227;
            case 16:
              v96 = 256;
              goto LABEL_227;
            case 17:
              v96 = 0x8000;
              goto LABEL_227;
            case 18:
              v96 = 0x20000;
LABEL_227:
              *(_DWORD *)(a1 + 156) |= v96;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_232;
    }
    v33 = v25 >> 3;
    v34 = v18;
    if ((v101 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_157;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_160;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_162;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_160:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_162:
        v92 = 148;
        goto LABEL_187;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_157;
        v47 = 0;
        v48 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 156) |= 2u;
        while (2)
        {
          v49 = *v20;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v41 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v30 = v48++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_166;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_166:
        v92 = 128;
        goto LABEL_187;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_157;
        v53 = 0;
        v54 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x80u;
        while (2)
        {
          v55 = *v20;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v41 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_170:
        v92 = 152;
        goto LABEL_187;
      case 4:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 158) & 1) == 0)
        {
          PBReaderReadString();
          v59 = objc_claimAutoreleasedReturnValue();
          v60 = 80;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_230;
        v93 = (int)(*(_DWORD *)(a1 + 156) << 15) >> 31;
        goto LABEL_206;
      case 5:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 157) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v93 = (int)(*(_DWORD *)(a1 + 156) << 22) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEOCompanionDriveStep);
        if (!GEOCompanionDriveStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        v61 = 24;
        goto LABEL_143;
      case 6:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 158) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v93 = (int)(*(_DWORD *)(a1 + 156) << 12) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEOCompanionWalkStep);
        if (!GEOCompanionWalkStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        v61 = 104;
        goto LABEL_143;
      case 7:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 157) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v93 = (int)(*(_DWORD *)(a1 + 156) << 21) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEOCompanionFerryStep);
        if (!GEOCompanionFerryStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        v61 = 32;
        goto LABEL_143;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_157;
        v62 = 0;
        v63 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 156) |= 4u;
        while (2)
        {
          v64 = *v20;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v41 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v30 = v63++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_174:
        v92 = 132;
        goto LABEL_187;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_157;
        v68 = 0;
        v69 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          v70 = *v20;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v41 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v30 = v69++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_178:
        v92 = 144;
        goto LABEL_187;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_157;
        v74 = 0;
        v75 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          v76 = *v20;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v41 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              v30 = v75++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_182:
        v92 = 140;
        goto LABEL_187;
      case 11:
        if (!v34 || (*(_BYTE *)(a1 + 157) & 0x20) != 0)
          goto LABEL_157;
        PBReaderReadString();
        v80 = (GEOCompanionDriveStep *)objc_claimAutoreleasedReturnValue();
        if (!v80)
          goto LABEL_137;
        v99 = v80;
        -[GEOCompanionStep _addNoFlagsInstructionWithAlternatives:](a1, v80);
        goto LABEL_136;
      case 12:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 157) & 0x40) == 0)
        {
          PBReaderReadString();
          v59 = objc_claimAutoreleasedReturnValue();
          v60 = 64;
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_230;
        v93 = (int)(*(_DWORD *)(a1 + 156) << 17) >> 31;
        goto LABEL_206;
      case 13:
        if (!v34 || (*(_BYTE *)(a1 + 157) & 0x10) != 0)
          goto LABEL_157;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        -[GEOCompanionStep _addNoFlagsGuidanceEvent:](a1, v99);
        goto LABEL_136;
      case 14:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 158) & 4) == 0)
        {
          PBReaderReadData();
          v59 = objc_claimAutoreleasedReturnValue();
          v60 = 96;
LABEL_120:
          v81 = *(void **)(a1 + v60);
          *(_QWORD *)(a1 + v60) = v59;
          goto LABEL_144;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_230;
        v93 = (int)(*(_DWORD *)(a1 + 156) << 13) >> 31;
        goto LABEL_206;
      case 15:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 157) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v93 = (int)(*(_DWORD *)(a1 + 156) << 20) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEOCompanionGenericStep);
        if (!GEOCompanionGenericStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        v61 = 40;
        goto LABEL_143;
      case 16:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 157) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v93 = (int)(*(_DWORD *)(a1 + 156) << 23) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEOCompanionCyclingStep);
        if (!GEOCompanionCyclingStepReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        v61 = 16;
        goto LABEL_143;
      case 17:
        if (!v34 || (*(_BYTE *)(a1 + 157) & 0x80) != 0)
          goto LABEL_157;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEORoadDescription);
        if (!GEORoadDescriptionReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
          goto LABEL_229;
        PBReaderRecallMark();
        -[GEOCompanionStep _addNoFlagsRoadDescriptions:](a1, v99);
LABEL_136:
        v80 = v99;
LABEL_137:

        goto LABEL_207;
      case 18:
        if (!v34)
          goto LABEL_157;
        if ((*(_BYTE *)(a1 + 158) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_230;
          v93 = (int)(*(_DWORD *)(a1 + 156) << 14) >> 31;
LABEL_206:
          v7 += v93;
LABEL_207:
          v18 = v100;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_208:
          if (!(v18 & 1 | (v7 != 0)))
            goto LABEL_212;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_230;
        v99 = objc_alloc_init(GEOStopWaypoint);
        if (GEOStopWaypointReadAllFrom((uint64_t)v99, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v61 = 88;
LABEL_143:
          v81 = *(void **)(a1 + v61);
          *(_QWORD *)(a1 + v61) = v99;
LABEL_144:

          --v7;
          goto LABEL_207;
        }
LABEL_229:

LABEL_230:
        v94 = 0;
        v18 = v100;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_231:
        *(_DWORD *)(a1 + 156) |= 0x10000u;
        *(_DWORD *)(a1 + 156) |= 0x200u;
        *(_DWORD *)(a1 + 156) |= 0x80000u;
        *(_DWORD *)(a1 + 156) |= 0x400u;
        *(_DWORD *)(a1 + 156) |= 0x2000u;
        *(_DWORD *)(a1 + 156) |= 0x4000u;
        *(_DWORD *)(a1 + 156) |= 0x1000u;
        *(_DWORD *)(a1 + 156) |= 0x40000u;
        *(_DWORD *)(a1 + 156) |= 0x800u;
        *(_DWORD *)(a1 + 156) |= 0x100u;
        *(_DWORD *)(a1 + 156) |= 0x8000u;
        *(_DWORD *)(a1 + 156) |= 0x20000u;
        if ((v94 & 1) != 0)
        {
LABEL_232:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_233;
        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
          {
LABEL_233:
            v97 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_157;
        *(_DWORD *)(a1 + 156) |= 1u;
        v82 = *v20;
        v83 = *(_QWORD *)(v3 + v82);
        if (v83 <= 0xFFFFFFFFFFFFFFFBLL && v83 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v84 = *(_DWORD *)(*(_QWORD *)(v3 + *v22) + v83);
          *(_QWORD *)(v3 + v82) = v83 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v84 = 0;
        }
        *(_DWORD *)(a1 + 124) = v84;
        goto LABEL_208;
      case 20:
        if ((v8 & 1) != 0)
        {
          v85 = 0;
          v86 = 0;
          v41 = 0;
          *(_DWORD *)(a1 + 156) |= 8u;
          while (1)
          {
            v87 = *v20;
            v88 = *(_QWORD *)(v3 + v87);
            v89 = v88 + 1;
            if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
              break;
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v41 |= (unint64_t)(v90 & 0x7F) << v85;
            if ((v90 & 0x80) == 0)
              goto LABEL_184;
            v85 += 7;
            v30 = v86++ >= 9;
            if (v30)
            {
              LODWORD(v41) = 0;
              goto LABEL_186;
            }
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_184:
          if (*(_BYTE *)(v3 + *v21))
            LODWORD(v41) = 0;
LABEL_186:
          v92 = 136;
LABEL_187:
          *(_DWORD *)(a1 + v92) = v41;
        }
        else
        {
LABEL_157:
          v91 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v100;
          if ((v91 & 1) == 0)
          {
LABEL_228:
            v94 = 0;
            goto LABEL_231;
          }
        }
        goto LABEL_208;
      default:
        v46 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v100;
        if (!v46)
          goto LABEL_228;
        goto LABEL_208;
    }
  }
}

void sub_188D69728(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D69874(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D699B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D69C78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D69FB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6A0FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6A434(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6A57C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6A6C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6A814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6AB4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6BF84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[9];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[11], "readAll:", 1);
}

unint64_t GEOCompanionStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionStepReadAllFrom_initialTag;
  Specified = GEOCompanionStepReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOCompanionStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_188D6C318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D6C378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCompanionWalkStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v23 = 0;
          break;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_56;
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_37:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188D6CBE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionStepIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0x110000) != 0)
    return 1;
  if ((v2 & 0x200) != 0)
  {
    if ((GEOCompanionDriveStepIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x80000) != 0)
  {
    if ((GEOCompanionWalkStepIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x400) != 0)
  {
    if ((GEOCompanionFerryStepIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x47000) != 0)
    return 1;
  if ((v2 & 0x800) != 0)
  {
    if (GEOCompanionGenericStepIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x100) != 0)
  {
    if ((GEOCompanionCyclingStepIsDirty(*(os_unfair_lock_s **)(a1 + 16)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x8000) != 0)
    return 1;
  if ((v2 & 0x20000) == 0)
    goto LABEL_24;
  if (GEOStopWaypointIsDirty(*(_QWORD *)(a1 + 88)))
    return 1;
  v2 = *(_DWORD *)(a1 + 156);
LABEL_24:
  if ((v2 & 0x1000) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_36;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_36:

  return v3;
}

os_unfair_lock_s *GEOCompanionStepIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D6D840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6E5E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionTransitAlightMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  int v57;
  char v58;
  void *v59;
  GEOPBTransitArtwork *v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 2;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v63 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v62 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_97;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_97:
      if ((v15 & 1) != 0)
      {
        v56 = 1;
        goto LABEL_108;
      }
      if (v16)
      {
        while (1)
        {
          v57 = *v16++;
          v58 = 16;
          switch(v57)
          {
            case 0:
              goto LABEL_109;
            case 1:
              goto LABEL_104;
            case 6:
              v58 = 4;
              goto LABEL_104;
            case 7:
              v58 = 32;
              goto LABEL_104;
            case 8:
              v58 = 8;
LABEL_104:
              *(_BYTE *)(a1 + 68) |= v58;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_109;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v63 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v36;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v55 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_94;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_75;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v41 = *v17;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v27 = v39++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_80:
        v54 = 60;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_75;
        v45 = 0;
        v46 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_84:
        v54 = 64;
LABEL_85:
        *(_DWORD *)(a1 + v54) = v40;
        goto LABEL_96;
      case 6:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v55 = 32 * *(_BYTE *)(a1 + 68);
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v61 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
          goto LABEL_106;
        PBReaderRecallMark();
        v52 = 16;
        goto LABEL_73;
      case 7:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 68) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v55 = 4 * *(_BYTE *)(a1 + 68);
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v61 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
          goto LABEL_106;
        PBReaderRecallMark();
        v52 = 40;
        goto LABEL_73;
      case 8:
        if (!v31)
        {
LABEL_75:
          v53 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v62;
          if ((v53 & 1) == 0)
          {
LABEL_105:
            v56 = 0;
            goto LABEL_108;
          }
LABEL_96:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_97;
          continue;
        }
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v55 = 16 * *(_BYTE *)(a1 + 68);
LABEL_94:
          v7 += v55 >> 7;
LABEL_95:
          v15 = v62;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v61 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v61, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v52 = 24;
LABEL_73:
          v37 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v61;
LABEL_74:

          --v7;
          goto LABEL_95;
        }
LABEL_106:

LABEL_107:
        v56 = 0;
        v15 = v62;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 4u;
        *(_BYTE *)(a1 + 68) |= 0x20u;
        *(_BYTE *)(a1 + 68) |= 8u;
        if ((v56 & 1) != 0)
        {
LABEL_109:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_110;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_110:
            v59 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v51 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v62;
        if (!v51)
          goto LABEL_105;
        goto LABEL_96;
    }
  }
}

void sub_188D6EF3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6F07C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6F1BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6F868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionTransitAlightMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionTransitAlightMessageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionTransitAlightMessageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionTransitAlightMessageReadAllFrom_initialTag;
  Specified = GEOCompanionTransitAlightMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188D6FA30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionTransitAlightMessageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionTransitAlightMessageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D6FA90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D6FC7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionTransitAlightMessageIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0x50) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 4) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 16)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 68);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_9;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  v2 = *(_BYTE *)(a1 + 68);
LABEL_9:
  if ((v2 & 8) != 0)
    return (uint64_t)GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEOCompanionTransitAlightMessageIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionTransitAlightMessageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D700C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D712D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionWalkStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEONameInfo *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  uint64_t v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 2;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v59 = (v15 == 0) | v10 | v14;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_92;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_92:
      if ((v16 & 1) != 0)
      {
        v53 = 1;
        goto LABEL_104;
      }
      if (v15)
      {
        while (1)
        {
          v54 = *v15++;
          v55 = 4;
          switch(v54)
          {
            case 9:
              goto LABEL_99;
            case 10:
              v55 = 16;
              goto LABEL_99;
            case 11:
              v55 = 32;
              goto LABEL_99;
            case 12:
              v55 = 8;
LABEL_99:
              *(_BYTE *)(a1 + 84) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_105;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v59 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 84) |= 2u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_80;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_82;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_80:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_82:
        v52 = 80;
        goto LABEL_87;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v44 = 0;
        v45 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 84) |= 1u;
        while (2)
        {
          v46 = *v17;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v38 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_86:
        v52 = 76;
LABEL_87:
        *(_DWORD *)(a1 + v52) = v38;
        goto LABEL_91;
      case 9:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 4) != 0)
          goto LABEL_77;
        if (!PBReaderPlaceMark())
          goto LABEL_101;
        -[GEOCompanionWalkStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(_QWORD *)(a1 + 16) + 16 * *(_QWORD *)(a1 + 24), v3) & 1) == 0)
          goto LABEL_101;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 24);
        goto LABEL_90;
      case 10:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v58 = (int)v16;
        v16 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v16, (void *)v3, v9 & 1))
          goto LABEL_102;
        PBReaderRecallMark();
        -[GEOCompanionWalkStep _addNoFlagsManeuverName:](a1, v16);
        goto LABEL_70;
      case 11:
        if (!v31 || (*(_BYTE *)(a1 + 84) & 0x20) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v58 = (int)v16;
        v16 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_102;
        PBReaderRecallMark();
        -[GEOCompanionWalkStep _addNoFlagsSignpost:](a1, v16);
LABEL_70:

        goto LABEL_76;
      case 12:
        if (!v31)
        {
LABEL_77:
          v51 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
LABEL_100:
            v53 = 0;
            goto LABEL_104;
          }
LABEL_91:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_92;
          continue;
        }
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_101:
            v53 = 0;
            goto LABEL_103;
          }
          v7 += *(unsigned __int8 *)(a1 + 84) << 28 >> 31;
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v58 = (int)v16;
        v16 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v50 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v16;

          --v7;
LABEL_76:
          LODWORD(v16) = v58;
LABEL_90:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_91;
        }
LABEL_102:

        v53 = 0;
        LOBYTE(v16) = v58;
LABEL_103:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        *(_BYTE *)(a1 + 84) |= 4u;
        *(_BYTE *)(a1 + 84) |= 0x10u;
        *(_BYTE *)(a1 + 84) |= 0x20u;
        *(_BYTE *)(a1 + 84) |= 8u;
        if ((v53 & 1) != 0)
        {
LABEL_105:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_106;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_106:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_100;
        goto LABEL_91;
    }
  }
}

void sub_188D71ECC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D72200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D72534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D72EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionWalkStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[5], "readAll:", 1);
}

uint64_t GEOCompanionWalkStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionWalkStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionWalkStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionWalkStepReadAllFrom_initialTag;
  Specified = GEOCompanionWalkStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOCompanionWalkStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188D731E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOCompanionWalkStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionWalkStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D73248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D735B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionWalkStepIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 84);
  if ((v2 & 0x74) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 84) & 8) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x20) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEONameInfoIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOCompanionWalkStepIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionWalkStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D73CE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D74358(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionWaypointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  int v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  GEOMapItemStorage *v55;
  char v56;
  char v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v57 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v56 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_88;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_88:
      if ((v15 & 1) != 0)
      {
        v50 = 1;
        goto LABEL_100;
      }
      if (v16)
      {
        while (1)
        {
          v51 = *v16++;
          v52 = 4;
          switch(v51)
          {
            case 0:
              goto LABEL_101;
            case 1:
              goto LABEL_96;
            case 2:
              v52 = 32;
              goto LABEL_96;
            case 4:
              v52 = 16;
              goto LABEL_96;
            case 5:
              v52 = 2;
              goto LABEL_96;
            case 6:
              v52 = 8;
LABEL_96:
              *(_BYTE *)(a1 + 72) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v57 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_99;
          v55 = objc_alloc_init(GEOMapItemStorage);
          if (GEOMapItemStorageReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v36 = 24;
            goto LABEL_49;
          }
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v49 = 32 * *(_BYTE *)(a1 + 72);
        goto LABEL_85;
      case 2:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_99;
          v49 = 4 * *(_BYTE *)(a1 + 72);
LABEL_85:
          v7 += v49 >> 7;
LABEL_86:
          v15 = v56;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_88;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v55 = objc_alloc_init(GEOWaypointTyped);
        if (GEOWaypointTypedReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v36 = 48;
LABEL_49:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v55;
LABEL_68:

          --v7;
          goto LABEL_86;
        }
LABEL_98:

LABEL_99:
        v50 = 0;
        v15 = v56;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_100:
        *(_BYTE *)(a1 + 72) |= 4u;
        *(_BYTE *)(a1 + 72) |= 0x20u;
        *(_BYTE *)(a1 + 72) |= 0x10u;
        *(_BYTE *)(a1 + 72) |= 2u;
        *(_BYTE *)(a1 + 72) |= 8u;
        if ((v50 & 1) != 0)
        {
LABEL_101:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_102;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_102:
            v53 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v42 = *v17;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v27 = v40++ >= 9;
              if (v27)
              {
                v41 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v41 = 0;
LABEL_74:
        *(_BYTE *)(a1 + 68) = v41 != 0;
        goto LABEL_87;
      case 4:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v49 = 8 * *(_BYTE *)(a1 + 72);
        goto LABEL_85;
      case 5:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 2) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 16;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v49 = *(_BYTE *)(a1 + 72) << 6;
        goto LABEL_85;
      case 6:
        if (!v31)
        {
LABEL_69:
          v48 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v56;
          if ((v48 & 1) == 0)
          {
LABEL_97:
            v50 = 0;
            goto LABEL_100;
          }
          goto LABEL_87;
        }
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          PBReaderReadData();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 32;
LABEL_67:
          v38 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v49 = 16 * *(_BYTE *)(a1 + 72);
        goto LABEL_85;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v56;
        if (!v37)
          goto LABEL_97;
        goto LABEL_87;
    }
  }
}

void sub_188D74B60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D74D0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D74E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D74F94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D75620(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionWaypointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCompanionWaypointReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCompanionWaypointReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCompanionWaypointReadAllFrom_initialTag;
  Specified = GEOCompanionWaypointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188D757D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCompanionWaypointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCompanionWaypointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D75838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D75A20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOCompanionWaypointIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 72);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 72);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_8;
  if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 72);
LABEL_8:
  if ((v2 & 0x12) != 0)
    return 1;
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOCompanionWaypointIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOCompanionWaypointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D75EB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D79254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOLocation *v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  int v50;
  int v51;
  void *v52;
  _BOOL4 v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v55 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_70;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_70:
      if (v16)
      {
        v48 = 1;
        goto LABEL_85;
      }
      if (!v15)
        goto LABEL_86;
      while (1)
      {
        v51 = *v15++;
        v50 = v51;
        if (v51 == 1)
          break;
        if (v50 == 3)
        {
          v49 = 2;
LABEL_76:
          *(_BYTE *)(a1 + 52) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_86;
        }
      }
      v49 = 4;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v55)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 4)
    {
      if ((v8 & 1) != 0)
      {
        *(_BYTE *)(a1 + 52) |= 1u;
        v39 = *v18;
        v40 = *(_QWORD *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v41 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v41 = 0;
        }
        *(_QWORD *)(a1 + 32) = v41;
        goto LABEL_66;
      }
      goto LABEL_56;
    }
    if ((_DWORD)v31 != 3)
      break;
    if (v32)
    {
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        PBReaderReadString();
        v42 = objc_claimAutoreleasedReturnValue();
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

        --v9;
        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_82:
        v48 = 0;
        goto LABEL_84;
      }
      v46 = *(_BYTE *)(a1 + 52) << 6;
LABEL_62:
      v9 += v46 >> 7;
      goto LABEL_63;
    }
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
LABEL_81:
      v48 = 0;
      goto LABEL_85;
    }
LABEL_66:
    if (v9)
      v47 = 1;
    else
      v47 = v16;
    if ((v47 & 1) == 0)
      goto LABEL_70;
  }
  if ((_DWORD)v31 != 1)
  {
    v44 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
      goto LABEL_81;
    goto LABEL_66;
  }
  if (!v32)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_82;
    v46 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_82;
  v54 = v16;
  v37 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v38 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v37;

    --v9;
    v16 = v54;
LABEL_63:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_66;
  }

  v48 = 0;
  v16 = v54;
LABEL_84:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v48 & 1) != 0)
  {
LABEL_86:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_87;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_87:
      v52 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188D79890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D79D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAddressCorrectionAddressReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAddressCorrectionAddressReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAddressCorrectionAddressReadAllFrom_initialTag;
  Specified = GEOAddressCorrectionAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188D79F10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionAddressReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAddressCorrectionAddressReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D79F70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionAddressIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_34;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_34;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 4)
      {
        if (v16 != 1)
          goto LABEL_36;
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (v21 = v20 + 8, v21 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v19] = v21;
        else
          a1[v14] = 1;
        goto LABEL_31;
      }
      if ((_DWORD)v18 == 3)
        break;
      if ((_DWORD)v18 != 1)
        goto LABEL_30;
      if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
      {
LABEL_36:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_31:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_34;
    }
    if (v16 != 2)
      goto LABEL_36;
LABEL_30:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_36;
    goto LABEL_31;
  }
LABEL_34:
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188D7A32C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionAddressIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOAddressCorrectionAddressIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAddressCorrectionAddressIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOAddressCorrectionAddressClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasAddressLocation")
    && (objc_msgSend(a1, "addressLocation"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "addressLocation");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setAddressLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "addressLocation");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEOAddressCorrectionAddressHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "addressLocation");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188D7A7AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D7ABF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  BOOL v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v64 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_86;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        v58 = 1;
        goto LABEL_97;
      }
      if (!v14)
        goto LABEL_98;
      while (1)
      {
        v60 = *v14++;
        v59 = v60;
        if (v60 == 1)
          break;
        if (v59 == 2)
        {
          v61 = 4;
LABEL_95:
          *(_BYTE *)(a1 + 48) |= v61;
        }
        else if (!v59)
        {
          goto LABEL_98;
        }
      }
      v61 = 8;
      goto LABEL_95;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v64)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 48) & 8) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v56 = 16 * *(_BYTE *)(a1 + 48);
        goto LABEL_81;
      case 2:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 48) & 4) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
LABEL_49:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          v17 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v56 = 32 * *(_BYTE *)(a1 + 48);
LABEL_81:
          v9 += v56 >> 7;
          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
          if (v9)
            v57 = 1;
          else
            v57 = v13;
          if ((v57 & 1) == 0)
            goto LABEL_86;
          continue;
        }
LABEL_103:
        v58 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        *(_BYTE *)(a1 + 48) |= 8u;
        *(_BYTE *)(a1 + 48) |= 4u;
        if ((v58 & 1) != 0)
        {
LABEL_98:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_99;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_99:
            v62 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 48) |= 2u;
        while (2)
        {
          v42 = *v16;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                v41 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          v41 = 0;
LABEL_71:
        v54 = v41 != 0;
        v55 = 45;
        goto LABEL_76;
      case 4:
        if ((v8 & 1) != 0)
        {
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (1)
          {
            v49 = *v16;
            v50 = *(_QWORD *)(v3 + v49);
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
              break;
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0)
              goto LABEL_73;
            v46 += 7;
            v26 = v47++ >= 9;
            if (v26)
            {
              v48 = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v17))
            v48 = 0;
LABEL_75:
          v54 = v48 != 0;
          v55 = 44;
LABEL_76:
          *(_BYTE *)(a1 + v55) = v54;
        }
        else
        {
LABEL_66:
          v53 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
LABEL_96:
            v58 = 0;
            goto LABEL_97;
          }
        }
        goto LABEL_82;
      default:
        v37 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_96;
        goto LABEL_82;
    }
  }
}

void sub_188D7B29C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D7B81C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAddressCorrectionInitRequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAddressCorrectionInitRequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAddressCorrectionInitRequestReadAllFrom_initialTag;
  Specified = GEOAddressCorrectionInitRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188D7B9A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAddressCorrectionInitRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D7BA08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionInitRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_44;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_40;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v23 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_44:
          v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_188D7BE40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionInitRequestIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 48) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188D7C184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D7C8BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOAddressCorrectionAddress *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  void *v44;
  uint64_t v45;
  void *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  int v57;
  char v58;
  void *v59;
  int v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v62 = (v15 == 0) | v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_87;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_87:
      if ((v16 & 1) != 0)
      {
        v56 = 1;
        goto LABEL_98;
      }
      if (v15)
      {
        while (1)
        {
          v57 = *v15++;
          v58 = 8;
          switch(v57)
          {
            case 0:
              goto LABEL_99;
            case 2:
              goto LABEL_93;
            case 3:
              v58 = 4;
              goto LABEL_93;
            case 5:
              v58 = 16;
LABEL_93:
              *(_BYTE *)(a1 + 60) |= v58;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_99;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v62 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_72;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_74;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_72:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_74:
        v54 = 56;
        goto LABEL_79;
      case 2:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v55 = 16 * *(_BYTE *)(a1 + 60);
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v61 = (int)v16;
        v16 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        v44 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v16;

        --v7;
        goto LABEL_68;
      case 3:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_95:
            v56 = 0;
            goto LABEL_97;
          }
          v55 = 32 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v7 += v55 >> 7;
        }
        else
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v45;

          --v7;
        }
        goto LABEL_85;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v47 = 0;
        v48 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v49 = *v17;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v38 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v27 = v48++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_78:
        v54 = 52;
LABEL_79:
        *(_DWORD *)(a1 + v54) = v38;
        goto LABEL_86;
      case 5:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
LABEL_69:
          v53 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
LABEL_94:
            v56 = 0;
            goto LABEL_98;
          }
LABEL_86:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_87;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v61 = (int)v16;
        v16 = objc_alloc_init(GEOAddressCorrectionAddress);
        if (GEOAddressCorrectionAddressReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOAddressCorrectionInitResponse _addNoFlagsAddress:](a1, v16);

LABEL_68:
          LODWORD(v16) = v61;
LABEL_85:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_86;
        }
LABEL_96:

        v56 = 0;
        LOBYTE(v16) = v61;
LABEL_97:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_98:
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 0x10u;
        if ((v56 & 1) != 0)
        {
LABEL_99:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_100;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_100:
            v59 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_94;
        goto LABEL_86;
    }
  }
}

void sub_188D7D090(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D7D298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D7DE24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAddressCorrectionInitResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOAddressCorrectionInitResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAddressCorrectionInitResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAddressCorrectionInitResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAddressCorrectionInitResponseReadAllFrom_initialTag;
  Specified = GEOAddressCorrectionInitResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAddressCorrectionInitResponseCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188D7E0C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionInitResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAddressCorrectionInitResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D7E128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionInitResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_47;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_50;
          goto LABEL_46;
        case 3u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_50;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v23 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressCorrectionAddressIsValid(a1))
            goto LABEL_50;
LABEL_46:
          PBReaderRecallMark();
          continue;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_47;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188D7E680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionInitResponseIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24)))
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  if ((v2 & 0x14) != 0)
    return 1;
  if ((v2 & 0x10) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOAddressCorrectionAddressIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOAddressCorrectionInitResponseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAddressCorrectionInitResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOAddressCorrectionInitResponseClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  void *v6;
  int HasSensitiveFields;
  void *v8;
  _DWORD *v9;
  unint64_t result;
  unint64_t i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  if (a3
    && objc_msgSend(a1, "hasAddressLocation")
    && (objc_msgSend(a1, "addressLocation"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6),
        v6,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "addressLocation");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (_DWORD *)objc_msgSend(v8, "copy");

    GEOLocationClearSensitiveFields(v9);
    objc_msgSend(a1, "setAddressLocation:", v9);
  }
  else
  {
    objc_msgSend(a1, "addressLocation");
    v9 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

  -[GEOAddressCorrectionInitResponse _readAddress]((uint64_t)a1);
  result = objc_msgSend(a1[4], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[4], "objectAtIndexedSubscript:", i);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = v12;
      if (a3 && GEOAddressCorrectionAddressHasSensitiveFields(v12))
      {
        v14 = (void *)objc_msgSend(v13, "copy");
        objc_msgSend(v14, "addressLocation");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "clearSensitiveFields:", a2);

        objc_msgSend(a1[4], "replaceObjectAtIndex:withObject:", i, v14);
      }
      else
      {
        objc_msgSend(v13, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(a1[4], "count");
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionInitResponseHasSensitiveFields(void *a1)
{
  void *v2;
  char HasSensitiveFields;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  objc_msgSend(a1, "addressLocation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v2);

  if ((HasSensitiveFields & 1) != 0)
    return 1;
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  objc_msgSend(a1, "address", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v12;
    while (2)
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v12 != v8)
          objc_enumerationMutation(v5);
        if ((GEOAddressCorrectionAddressHasSensitiveFields(*(void **)(*((_QWORD *)&v11 + 1) + 8 * v9)) & 1) != 0)
        {
          v4 = 1;
          goto LABEL_15;
        }
        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v7)
        continue;
      break;
    }
  }
  v4 = 0;
LABEL_15:

  return v4;
}

void sub_188D7F050(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D7F5DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  GEOSignificantLocation *v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  BOOL v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v46 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_58;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        v41 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v43 = *v16++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_69;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v46)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (!v32)
        goto LABEL_50;
      if ((*(_BYTE *)(a1 + 44) & 1) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_67:
          v41 = 0;
          goto LABEL_68;
        }
        v9 -= *(_BYTE *)(a1 + 44) & 1;
      }
      else
      {
        PBReaderReadString();
        v37 = objc_claimAutoreleasedReturnValue();
        v38 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v37;

        --v9;
      }
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_67;
    }
LABEL_51:
    if (v9)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_58;
  }
  if (!v32 || (*(_BYTE *)(a1 + 44) & 2) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_67;
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_67;
  v39 = objc_alloc_init(GEOSignificantLocation);
  if (GEOSignificantLocationReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOAddressCorrectionResult _addNoFlagsSignificantLocation:](a1, v39);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_51;
  }

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_69:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_70;
  }
  v3 = 0;
  if (v15)
  {
LABEL_70:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188D7FB38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D802FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAddressCorrectionResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOAddressCorrectionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAddressCorrectionResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAddressCorrectionResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAddressCorrectionResultReadAllFrom_initialTag;
  Specified = GEOAddressCorrectionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAddressCorrectionResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188D80588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAddressCorrectionResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D805E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOSignificantLocationIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOSignificantLocationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1))
            goto LABEL_50;
          goto LABEL_56;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_39;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_51;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v24 = 0;
          break;
        case 4u:
          if (v16 == 2)
            goto LABEL_41;
          goto LABEL_56;
        case 5u:
          if (v16 != 1)
            goto LABEL_56;
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_46;
          v31 = v30 + 8;
          if (v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_46;
          *(_QWORD *)&a1[v29] = v31;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1))
            goto LABEL_56;
LABEL_50:
          PBReaderRecallMark();
          continue;
        default:
LABEL_41:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        v27 = v26 + 1;
        if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
          break;
        v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
        *(_QWORD *)&a1[v25] = v27;
        if (v28 < 0)
        {
          v23 = v24++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_51;
      }
LABEL_39:
      v14 = *v4;
LABEL_46:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_188D80CF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionResultIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOSignificantLocationIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOAddressCorrectionResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAddressCorrectionResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOAddressCorrectionResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  -[GEOAddressCorrectionResult _readSignificantLocations](a1);
  result = objc_msgSend(*(id *)(a1 + 24), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 24), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOSignificantLocationHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "location");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 24), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 24), "count");
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionResultHasSensitiveFields(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(a1, "significantLocations", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEOSignificantLocationHasSensitiveFields(*(void **)(*((_QWORD *)&v8 + 1) + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

void *GEOSignificantLocationHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "location");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEOSignificantLocationClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLocation")
    && (objc_msgSend(a1, "location"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "location");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "location");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_188D815D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationRequestReadAllFrom(void *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOSignificantLocation *v20;
  _BOOL8 v21;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOSignificantLocation);
          if (!GEOSignificantLocationReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addSignificantLocation:", v20, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_188D81F40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationRequestReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAddressCorrectionTaggedLocationRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D81FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOSignificantLocationIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

unint64_t GEOAddressCorrectionTaggedLocationRequestClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  result = objc_msgSend(*(id *)(a1 + 8), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 8), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOSignificantLocationHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "location");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 8), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 8), "count");
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionTaggedLocationRequestHasSensitiveFields(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(a1, "significantLocations", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEOSignificantLocationHasSensitiveFields(*(void **)(*((_QWORD *)&v8 + 1) + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

BOOL GEOAddressCorrectionTaggedLocationResponseReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v16;
  _BOOL8 v17;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)&v2[*v4])
          break;
        v14 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v16 = 1;
      else
        v16 = (v10 & 7) == 4;
      if (v16)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v17 = v7 == 0;
  }
  else
  {
LABEL_20:
    v17 = 0;
  }
  objc_sync_exit(v2);

  return v17;
}

void sub_188D82B6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationResponseReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOAddressCorrectionTaggedLocationResponseReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_188D82BC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionTaggedLocationResponseIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_188D830F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionUpdateRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOAddressCorrectionResult *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  char v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v53 = (v15 == 0) | v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_71;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_71:
      if ((v16 & 1) != 0)
      {
        v47 = 1;
        goto LABEL_82;
      }
      if (v15)
      {
        while (1)
        {
          v48 = *v15++;
          v49 = 8;
          switch(v48)
          {
            case 0:
              goto LABEL_83;
            case 2:
              goto LABEL_77;
            case 3:
              v49 = 2;
              goto LABEL_77;
            case 4:
              v49 = 4;
LABEL_77:
              *(_BYTE *)(a1 + 56) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_83;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v53 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_61;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_64;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_66;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_64:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_66:
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_70;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 56) & 8) != 0)
          goto LABEL_61;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_79;
        v52 = (int)v16;
        v16 = objc_alloc_init(GEOSignificantLocation);
        if (!GEOSignificantLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_80;
        PBReaderRecallMark();
        -[GEOAddressCorrectionUpdateRequest _addNoFlagsSignificantLocation:](a1, v16);
        goto LABEL_60;
      case 3:
        if (!v31)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 56) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_79:
            v47 = 0;
            goto LABEL_81;
          }
          v7 += *(unsigned __int8 *)(a1 + 56) << 30 >> 31;
        }
        else
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v44;

          --v7;
        }
        goto LABEL_69;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 56) & 4) != 0)
        {
LABEL_61:
          v46 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
LABEL_78:
            v47 = 0;
            goto LABEL_82;
          }
LABEL_70:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_71;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_79;
        v52 = (int)v16;
        v16 = objc_alloc_init(GEOAddressCorrectionResult);
        if (GEOAddressCorrectionResultReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOAddressCorrectionUpdateRequest _addNoFlagsAddressResult:](a1, v16);
LABEL_60:

          LODWORD(v16) = v52;
LABEL_69:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_70;
        }
LABEL_80:

        v47 = 0;
        LOBYTE(v16) = v52;
LABEL_81:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
        *(_BYTE *)(a1 + 56) |= 8u;
        *(_BYTE *)(a1 + 56) |= 2u;
        *(_BYTE *)(a1 + 56) |= 4u;
        if ((v47 & 1) != 0)
        {
LABEL_83:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_84;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_84:
            v50 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_78;
        goto LABEL_70;
    }
  }
}

void sub_188D839D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D83B18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D84630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAddressCorrectionUpdateRequestCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOAddressCorrectionUpdateRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAddressCorrectionUpdateRequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAddressCorrectionUpdateRequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAddressCorrectionUpdateRequestReadAllFrom_initialTag;
  Specified = GEOAddressCorrectionUpdateRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAddressCorrectionUpdateRequestCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188D84958(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAddressCorrectionUpdateRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAddressCorrectionUpdateRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D849B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_41;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_39;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_39;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOSignificantLocationIsValid(a1))
            goto LABEL_41;
          goto LABEL_37;
        case 3u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_41;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressCorrectionResultIsValid(a1))
            goto LABEL_41;
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_39;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          break;
      }
    }
  }
LABEL_40:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188D84F20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAddressCorrectionUpdateRequestIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x1E) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 4) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOAddressCorrectionResultIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOAddressCorrectionUpdateRequestIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAddressCorrectionUpdateRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOAddressCorrectionUpdateRequestClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t result;
  unint64_t i;
  void *v13;
  void *v14;
  void *v15;

  -[GEOAddressCorrectionUpdateRequest _readSignificantLocations](a1);
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (a3 && GEOSignificantLocationHasSensitiveFields(v7))
      {
        v9 = (void *)objc_msgSend(v8, "copy");
        objc_msgSend(v9, "location");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", v6, v9);
      }
      else
      {
        objc_msgSend(v8, "clearSensitiveFields:", a2);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(*(id *)(a1 + 32), "count"));
  }
  -[GEOAddressCorrectionUpdateRequest _readAddressResults](a1);
  result = objc_msgSend(*(id *)(a1 + 24), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 24), "objectAtIndexedSubscript:", i);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = v13;
      if (a3 && GEOAddressCorrectionResultHasSensitiveFields(v13))
      {
        v15 = (void *)objc_msgSend(v14, "copy");
        GEOAddressCorrectionResultClearSensitiveFields((uint64_t)v15, a2, 0);
        objc_msgSend(*(id *)(a1 + 24), "replaceObjectAtIndex:withObject:", i, v15);

      }
      else
      {
        objc_msgSend(v14, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 24), "count");
    }
  }
  return result;
}

uint64_t GEOAddressCorrectionUpdateRequestHasSensitiveFields(void *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend(a1, "significantLocations");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
LABEL_4:
    v6 = 0;
    while (1)
    {
      if (*(_QWORD *)v18 != v5)
        objc_enumerationMutation(v2);
      if ((GEOSignificantLocationHasSensitiveFields(*(void **)(*((_QWORD *)&v17 + 1) + 8 * v6)) & 1) != 0)
        goto LABEL_19;
      if (v4 == ++v6)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
        if (v4)
          goto LABEL_4;
        break;
      }
    }
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  objc_msgSend(a1, "addressResults", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v14;
LABEL_12:
    v10 = 0;
    while (1)
    {
      if (*(_QWORD *)v14 != v9)
        objc_enumerationMutation(v2);
      if ((GEOAddressCorrectionResultHasSensitiveFields(*(void **)(*((_QWORD *)&v13 + 1) + 8 * v10)) & 1) != 0)
        break;
      if (v8 == ++v10)
      {
        v8 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
        if (v8)
          goto LABEL_12;
        goto LABEL_18;
      }
    }
LABEL_19:
    v11 = 1;
    goto LABEL_20;
  }
LABEL_18:
  v11 = 0;
LABEL_20:

  return v11;
}

void sub_188D85A78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateResponseReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_30;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_188D862E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAddressCorrectionUpdateResponseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D86344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAddressCorrectionUpdateResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_188D868FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignificantLocationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOStructuredAddress *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  int v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  char v57;
  uint64_t v58;
  char v59;
  char v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  char v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v66 = (v15 == 0) | v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_95;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_95:
      if ((v16 & 1) != 0)
      {
        v60 = 1;
        goto LABEL_106;
      }
      if (v15)
      {
        while (1)
        {
          v61 = *v15++;
          v62 = 32;
          switch(v61)
          {
            case 0:
              goto LABEL_107;
            case 1:
              goto LABEL_101;
            case 4:
              v62 = 16;
              goto LABEL_101;
            case 6:
              v62 = 8;
LABEL_101:
              *(_BYTE *)(a1 + 68) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_107;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v66 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 68) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_103;
          v65 = (int)v16;
          v16 = objc_alloc_init(GEOLocation);
          if (GEOLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v36 = 40;
            goto LABEL_72;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v59 = 4 * *(_BYTE *)(a1 + 68);
        goto LABEL_90;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_73;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v41 = *v17;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v27 = v39++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_78:
        v58 = 60;
        goto LABEL_83;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_73;
        v45 = 0;
        v46 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 68) |= 4u;
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v40) = 0;
LABEL_82:
        v58 = 64;
LABEL_83:
        *(_DWORD *)(a1 + v58) = v40;
        goto LABEL_94;
      case 4:
        if (!v31)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v51;

          --v7;
          goto LABEL_91;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v59 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_90;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_73;
        *(_BYTE *)(a1 + 68) |= 1u;
        v53 = *v17;
        v54 = *(_QWORD *)(v3 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFF7 && v54 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v55 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v54);
          *(_QWORD *)(v3 + v53) = v54 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v55 = 0;
        }
        *(_QWORD *)(a1 + 24) = v55;
        goto LABEL_94;
      case 6:
        if (!v31)
        {
LABEL_73:
          v57 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
LABEL_102:
            v60 = 0;
            goto LABEL_106;
          }
LABEL_94:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_95;
          continue;
        }
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_103:
            v60 = 0;
            goto LABEL_105;
          }
          v59 = 16 * *(_BYTE *)(a1 + 68);
LABEL_90:
          v7 += v59 >> 7;
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v65 = (int)v16;
        v16 = objc_alloc_init(GEOStructuredAddress);
        if (GEOStructuredAddressReadAllFrom(v16, (void *)v3))
        {
          PBReaderRecallMark();
          v36 = 16;
LABEL_72:
          v56 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v16;

          --v7;
          LODWORD(v16) = v65;
LABEL_91:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_94;
        }
LABEL_104:

        v60 = 0;
        LOBYTE(v16) = v65;
LABEL_105:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        *(_BYTE *)(a1 + 68) |= 0x20u;
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 8u;
        if ((v60 & 1) != 0)
        {
LABEL_107:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_108;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_108:
            v63 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_102;
        goto LABEL_94;
    }
  }
}

void sub_188D87250(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D87400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D87A5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignificantLocationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSignificantLocationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSignificantLocationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSignificantLocationReadAllFrom_initialTag;
  Specified = GEOSignificantLocationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188D87C00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignificantLocationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSignificantLocationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D87C60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D87E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSignificantLocationIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 0x10) == 0)
    return (v2 >> 3) & 1;
  return 1;
}

os_unfair_lock_s *GEOSignificantLocationIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOSignificantLocationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D882A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8885C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryRatingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEORPRatingValue *v38;
  void *v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  BOOL v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v46 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_60;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        v41 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v43 = *v16++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_71;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v46)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_69;
          v9 -= *(_BYTE *)(a1 + 44) & 1;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v36;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_69;
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag())
      goto LABEL_69;
LABEL_56:
    if (v9)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_60;
  }
  if (!v31)
    goto LABEL_50;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      v41 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v38 = objc_alloc_init(GEORPRatingValue);
  if (GEORPRatingValueReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v39 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v38;

    --v9;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_71:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_72;
  }
  v3 = 0;
  if (v15)
  {
LABEL_72:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188D88DEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D891D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryRatingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPCategoryRatingReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPCategoryRatingReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPCategoryRatingReadAllFrom_initialTag;
  Specified = GEORPCategoryRatingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188D89374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPCategoryRatingReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPCategoryRatingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D893D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryRatingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRatingValueIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPRatingValueIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188D89964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPCategoryRatingIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188D89BE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D89F34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEnrichmentImageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  _BOOL4 v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int v37;
  char v38;
  char v39;
  char v40;
  int v41;
  int v42;
  void *v43;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        v40 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v42 = *v14++;
            v41 = v42;
            if (v42 != 1 && v41 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_73;
    }
    v28 = v21 >> 3;
    v29 = v13;
    if (!v15)
    {
      v30 = v14;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 != 2)
    {
      if ((_DWORD)v28 != 1)
      {
        v37 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_70;
        goto LABEL_58;
      }
      if (v29)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v9 -= *(_BYTE *)(a1 + 44) & 1;
LABEL_57:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_58:
        if (v9)
          v39 = 1;
        else
          v39 = v13;
        if ((v39 & 1) == 0)
          goto LABEL_62;
        continue;
      }
LABEL_51:
      v38 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v38 & 1) == 0)
      {
LABEL_70:
        v40 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v29)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
  {
    PBReaderReadString();
    v34 = objc_claimAutoreleasedReturnValue();
    v35 = 24;
LABEL_48:
    v36 = *(void **)(a1 + v35);
    *(_QWORD *)(a1 + v35) = v34;

    v17 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  v40 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v40 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (!v13)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if (v13)
  {
LABEL_74:
    v43 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188D8A448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8A7F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEnrichmentImageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPEnrichmentImageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPEnrichmentImageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPEnrichmentImageReadAllFrom_initialTag;
  Specified = GEORPEnrichmentImageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188D8A980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPEnrichmentImageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPEnrichmentImageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D8A9E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPEnrichmentImageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v14 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_188D8AD18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPEnrichmentImageIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188D8AF9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8B2D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPImageUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEORPPhotoMetadata *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void *v45;
  char v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  char v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v7) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v54 = (v15 == 0) | v10 | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_74;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_74:
      if ((v16 & 1) != 0)
      {
        v48 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          v49 = *v15++;
          v50 = 2;
          switch(v49)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              v50 = 8;
              goto LABEL_80;
            case 4:
              v50 = 4;
LABEL_80:
              *(_BYTE *)(a1 + 56) |= v50;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    v29 = v22 >> 3;
    v30 = (char)v16;
    if ((v54 & 1) == 0)
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + 56) & 2) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v47 = *(_BYTE *)(a1 + 56) << 6;
        goto LABEL_71;
      case 2:
        if (!v30)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          PBReaderReadData();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 32;
LABEL_45:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          --v8;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v47 = 16 * *(_BYTE *)(a1 + 56);
        goto LABEL_71;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_59;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (2)
        {
          v42 = *v17;
          v43 = *(_QWORD *)(v3 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                LODWORD(v41) = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v41) = 0;
LABEL_64:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_73;
      case 4:
        if (!v30)
        {
LABEL_59:
          v46 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
LABEL_81:
            v48 = 0;
            goto LABEL_85;
          }
LABEL_73:
          if (!(v16 & 1 | (v8 != 0)))
            goto LABEL_74;
          continue;
        }
        if ((*(_BYTE *)(a1 + 56) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_82:
            v48 = 0;
            goto LABEL_84;
          }
          v47 = 32 * *(_BYTE *)(a1 + 56);
LABEL_71:
          v8 += v47 >> 7;
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v53 = (int)v16;
        v16 = objc_alloc_init(GEORPPhotoMetadata);
        if (GEORPPhotoMetadataReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v45 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v16;

          --v8;
          LODWORD(v16) = v53;
LABEL_72:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_73;
        }

        v48 = 0;
        LOBYTE(v16) = v53;
LABEL_84:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        *(_BYTE *)(a1 + 56) |= 2u;
        *(_BYTE *)(a1 + 56) |= 8u;
        *(_BYTE *)(a1 + 56) |= 4u;
        if ((v48 & 1) != 0)
        {
LABEL_86:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_87;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_87:
            v51 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_81;
        goto LABEL_73;
    }
  }
}

void sub_188D8B9E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8BCC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8C31C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPImageUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPImageUpdateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPImageUpdateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPImageUpdateReadAllFrom_initialTag;
  Specified = GEORPImageUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188D8C4C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPImageUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPImageUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D8C520(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPImageUpdateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_40;
          goto LABEL_22;
        case 2u:
          if (v14 == 2)
            goto LABEL_22;
          goto LABEL_40;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_40;
          v16 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPhotoMetadataIsValid(a1))
            goto LABEL_40;
          PBReaderRecallMark();
          continue;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_40:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v17 = *v2;
        v18 = *(_QWORD *)&a1[v17];
        if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
          break;
        v19 = v18 + 1;
        v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
        *(_QWORD *)&a1[v17] = v19;
        if (v20 < 0 && v16++ <= 8)
          continue;
        goto LABEL_37;
      }
      a1[*v4] = 1;
LABEL_37:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188D8C944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEORPImageUpdateIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x1A) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
    return GEORPPhotoMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEORPImageUpdateIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *updated;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    updated = _GEORPImageUpdateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return updated;
  }
  return result;
}

void GEORPImageUpdateClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  id v9;

  if (a3
    && objc_msgSend(a1, "hasPhotoMetadata")
    && (objc_msgSend(a1, "photoMetadata"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEORPPhotoMetadataHasSensitiveFields(v5),
        v5,
        v6))
  {
    objc_msgSend(a1, "photoMetadata");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v7, "copy");

    objc_msgSend(v9, "geotag");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setPhotoMetadata:", v9);
  }
  else
  {
    objc_msgSend(a1, "photoMetadata");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

}

void *GEORPImageUpdateHasSensitiveFields(void *result)
{
  void *v1;
  void *v2;

  if (result)
  {
    objc_msgSend(result, "photoMetadata");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = GEORPPhotoMetadataHasSensitiveFields(v1);

    return v2;
  }
  return result;
}

void sub_188D8CE08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8D244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEORPScorecard *v37;
  void *v38;
  int v39;
  char v40;
  char v41;
  char v42;
  int v43;
  int v44;
  char v45;
  void *v46;
  BOOL v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v48 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_62;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      if (v26 == -1 || v26 >= *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_27:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_62:
      if (v15)
      {
        v42 = 1;
        goto LABEL_76;
      }
      if (!v16)
        goto LABEL_77;
      while (1)
      {
        v44 = *v16++;
        v43 = v44;
        if (v44 == 1)
          break;
        if (v43 == 2)
        {
          v45 = 1;
LABEL_71:
          *(_BYTE *)(a1 + v21[407]) |= v45;
        }
        else if (!v43)
        {
          goto LABEL_77;
        }
      }
      v45 = 2;
      goto LABEL_71;
    }
    v31 = v24 >> 3;
    v32 = v15;
    if (!v48)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 != 1)
    {
      v39 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v39)
        goto LABEL_72;
      goto LABEL_58;
    }
    if (v32)
    {
      if ((*(_BYTE *)(a1 + v21[407]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_73:
          v42 = 0;
          goto LABEL_75;
        }
        v7 += *(unsigned __int8 *)(a1 + v21[407]) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_73;
        v37 = objc_alloc_init(GEORPScorecard);
        if (!GEORPScorecardReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
          goto LABEL_74;
        PBReaderRecallMark();
        v38 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v37;

        --v7;
LABEL_50:
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
      }
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_58;
    }
LABEL_53:
    v40 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v40 & 1) == 0)
    {
LABEL_72:
      v42 = 0;
      goto LABEL_76;
    }
LABEL_58:
    if (v7)
      v41 = 1;
    else
      v41 = v15;
    if ((v41 & 1) == 0)
      goto LABEL_62;
  }
  if (!v32 || (*(_BYTE *)(a1 + v21[407]) & 1) != 0)
    goto LABEL_53;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_73;
  v37 = objc_alloc_init(GEORPEnrichmentImage);
  if (GEORPEnrichmentImageReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEORPPoiEnrichment _addNoFlagsImage:](a1, v37);

    goto LABEL_50;
  }
LABEL_74:

  v42 = 0;
  v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_75:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
  *(_BYTE *)(a1 + v21[407]) |= 2u;
  *(_BYTE *)(a1 + v21[407]) |= 1u;
  if ((v42 & 1) != 0)
  {
LABEL_77:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_78;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_78:
      v46 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188D8D7F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8DFF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPPoiEnrichmentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEORPPoiEnrichmentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiEnrichmentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiEnrichmentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiEnrichmentReadAllFrom_initialTag;
  Specified = GEORPPoiEnrichmentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPPoiEnrichmentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188D8E290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiEnrichmentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D8E2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEORPEnrichmentImageIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPScorecardIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPCategoryRatingIsValid(a1))
          goto LABEL_41;
        PBReaderRecallMark();
      }
      else if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_38;
        }
        a1[*v4] = 1;
      }
      else if ((_DWORD)v16 == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
LABEL_38:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188D8E958(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(_BYTE *)(a1 + 44);
  if ((v2 & 4) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
  {
    if ((GEORPScorecardIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 44);
  }
  return v2 & 1;
}

os_unfair_lock_s *GEORPPoiEnrichmentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPoiEnrichmentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D8ED50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8F15C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentPlaceContextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOLocalizedString *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  char v41;
  char v42;
  char v43;
  int v44;
  char v45;
  void *v46;
  int v48;
  char v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFFFFFBFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 76) & 1)+ ((*(_BYTE *)(a1 + 76) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 3);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v49 = (v15 == 0) | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_82;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_82:
      if ((v16 & 1) != 0)
      {
        v43 = 1;
        goto LABEL_96;
      }
      if (v15)
      {
        while (1)
        {
          v44 = *v15++;
          v45 = 16;
          switch(v44)
          {
            case 0:
              goto LABEL_97;
            case 1:
              goto LABEL_91;
            case 2:
              v45 = 1;
              goto LABEL_91;
            case 3:
              v45 = 4;
              goto LABEL_91;
            case 4:
              v45 = 32;
              goto LABEL_91;
            case 5:
              v45 = 2;
              goto LABEL_91;
            case 6:
              v45 = 8;
LABEL_91:
              *(_BYTE *)(a1 + 76) |= v45;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_97;
    }
    v29 = v22 >> 3;
    v30 = (char)v16;
    if ((v49 & 1) == 0)
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_93;
          v48 = (int)v16;
          v16 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v16, (void *)v3))
          {
            PBReaderRecallMark();
            v35 = 48;
            goto LABEL_67;
          }
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v42 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_79;
      case 2:
        if (!v30 || (*(_BYTE *)(a1 + 76) & 1) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_93;
        v48 = (int)v16;
        v16 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        -[GEORPPoiEnrichmentPlaceContext _addNoFlagsEntityName:](a1, v16);
        goto LABEL_61;
      case 3:
        if (!v30)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v42 = 32 * *(_BYTE *)(a1 + 76);
        goto LABEL_79;
      case 4:
        if (!v30)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
LABEL_55:
          v39 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v7;
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v42 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_79;
      case 5:
        if (!v30 || (*(_BYTE *)(a1 + 76) & 2) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_93;
        v48 = (int)v16;
        v16 = objc_alloc_init(GEOPDLocalizedAddress);
        if (!GEOPDLocalizedAddressReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        -[GEORPPoiEnrichmentPlaceContext _addNoFlagsLocalizedAddress:](a1, v16);
LABEL_61:

        goto LABEL_68;
      case 6:
        if (!v30)
        {
LABEL_69:
          v41 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v41 & 1) == 0)
          {
LABEL_92:
            v43 = 0;
            goto LABEL_96;
          }
LABEL_81:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_82;
          continue;
        }
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_93:
            v43 = 0;
            goto LABEL_95;
          }
          v42 = 16 * *(_BYTE *)(a1 + 76);
LABEL_79:
          v7 += v42 >> 7;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_93;
        v48 = (int)v16;
        v16 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          v35 = 40;
LABEL_67:
          v40 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v16;

          --v7;
LABEL_68:
          LODWORD(v16) = v48;
LABEL_80:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_81;
        }
LABEL_94:

        v43 = 0;
        LOBYTE(v16) = v48;
LABEL_95:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        *(_BYTE *)(a1 + 76) |= 0x10u;
        *(_BYTE *)(a1 + 76) |= 1u;
        *(_BYTE *)(a1 + 76) |= 4u;
        *(_BYTE *)(a1 + 76) |= 0x20u;
        *(_BYTE *)(a1 + 76) |= 2u;
        *(_BYTE *)(a1 + 76) |= 8u;
        if ((v43 & 1) != 0)
        {
LABEL_97:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_98;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_98:
            v46 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v36 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_92;
        goto LABEL_81;
    }
  }
}

void sub_188D8F964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8FC98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8FDD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D8FF18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D9024C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D90CE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentPlaceContextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[6], "readAll:", 1);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = a1[2];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDLocalizedAddress readAll:](*(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[5], "readAll:", 1, (_QWORD)v13);
}

unint64_t GEORPPoiEnrichmentPlaceContextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiEnrichmentPlaceContextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiEnrichmentPlaceContextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiEnrichmentPlaceContextReadAllFrom_initialTag;
  Specified = GEORPPoiEnrichmentPlaceContextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPPoiEnrichmentPlaceContextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188D91034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentPlaceContextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiEnrichmentPlaceContextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D91094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentPlaceContextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_39;
          goto LABEL_42;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_42;
          goto LABEL_39;
        case 3u:
          if (v14 == 2)
            goto LABEL_30;
          goto LABEL_42;
        case 4u:
          if (v14 == 2)
            goto LABEL_30;
          goto LABEL_42;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDLocalizedAddressIsValid(a1))
            goto LABEL_42;
          goto LABEL_39;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_42;
LABEL_39:
          PBReaderRecallMark();
          goto LABEL_40;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_40:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          break;
      }
    }
  }
LABEL_41:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188D9163C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentPlaceContextIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if ((*(_BYTE *)(a1 + 76) & 0x7F) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 76) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOPDLocalizedAddressIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPPoiEnrichmentPlaceContextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPoiEnrichmentPlaceContextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D91D18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D924C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  GEOPDPlace *v43;
  void *v44;
  char v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  GEOPDPlace *v52;
  char v53;
  char v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFAFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 0x20) != 0)+ ((*(_BYTE *)(a1 + 80) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v54 = (v16 == 0) | v15;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v53 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_96;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_96:
      if ((v15 & 1) != 0)
      {
        v47 = 1;
        goto LABEL_109;
      }
      if (v16)
      {
        while (1)
        {
          v48 = *v16++;
          v49 = 16;
          switch(v48)
          {
            case 0:
              goto LABEL_110;
            case 2:
              goto LABEL_105;
            case 3:
              v49 = 2;
              goto LABEL_105;
            case 4:
              v49 = 64;
              goto LABEL_105;
            case 5:
              v49 = 4;
              goto LABEL_105;
            case 6:
              v49 = 32;
              goto LABEL_105;
            case 7:
              v49 = 8;
LABEL_105:
              *(_BYTE *)(a1 + 80) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_110;
    }
    v29 = v22 >> 3;
    v30 = v15;
    if ((v54 & 1) == 0)
    {
      v31 = v16;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (1)
        {
          v38 = *v17;
          v39 = *(_QWORD *)(v3 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(v3 + *v6))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v39);
          *(_QWORD *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0)
            goto LABEL_82;
          v35 += 7;
          v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_84;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_82:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v37) = 0;
LABEL_84:
        *(_DWORD *)(a1 + 76) = v37;
        goto LABEL_95;
      case 2:
        if (!v30)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v46 = 8 * *(_BYTE *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v52 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v42 = 40;
        goto LABEL_78;
      case 3:
        if (!v30 || (*(_BYTE *)(a1 + 80) & 2) != 0)
          goto LABEL_79;
        PBReaderReadString();
        v43 = (GEOPDPlace *)objc_claimAutoreleasedReturnValue();
        if (!v43)
          goto LABEL_67;
        v52 = v43;
        -[GEORPPoiEnrichmentUpdate _addNoFlagsImageId:](a1, v43);
        goto LABEL_66;
      case 4:
        if (!v30)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v46 = 2 * *(_BYTE *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v52 = objc_alloc_init(GEORPScorecard);
        if (!GEORPScorecardReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v42 = 56;
        goto LABEL_78;
      case 5:
        if (!v30 || (*(_BYTE *)(a1 + 80) & 4) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v52 = objc_alloc_init(GEORPImageUpdate);
        if (!GEORPImageUpdateReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        -[GEORPPoiEnrichmentUpdate _addNoFlagsImageUpdate:](a1, v52);
LABEL_66:
        v43 = v52;
LABEL_67:

        goto LABEL_94;
      case 6:
        if (!v30)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v46 = 4 * *(_BYTE *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v52 = objc_alloc_init(GEORPScorecardUpdate);
        if (!GEORPScorecardUpdateReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v42 = 48;
        goto LABEL_78;
      case 7:
        if (!v30)
        {
LABEL_79:
          v45 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v53;
          if ((v45 & 1) == 0)
          {
LABEL_106:
            v47 = 0;
            goto LABEL_109;
          }
LABEL_95:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_96;
          continue;
        }
        if ((*(_BYTE *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v46 = 16 * *(_BYTE *)(a1 + 80);
LABEL_93:
          v7 += v46 >> 7;
LABEL_94:
          v15 = v53;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v52 = objc_alloc_init(GEORPPoiEnrichmentPlaceContext);
        if (GEORPPoiEnrichmentPlaceContextReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v42 = 32;
LABEL_78:
          v44 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v52;

          --v7;
          goto LABEL_94;
        }
LABEL_107:

LABEL_108:
        v47 = 0;
        v15 = v53;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_109:
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 2u;
        *(_BYTE *)(a1 + 80) |= 0x40u;
        *(_BYTE *)(a1 + 80) |= 4u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        *(_BYTE *)(a1 + 80) |= 8u;
        if ((v47 & 1) != 0)
        {
LABEL_110:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_111;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_111:
            v50 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v41 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v53;
        if (!v41)
          goto LABEL_106;
        goto LABEL_95;
    }
  }
}

void sub_188D92DB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D930E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D93224(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D93554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D93694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D941BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentUpdateCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[4], "readAll:", 1);
}

unint64_t GEORPPoiEnrichmentUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPoiEnrichmentUpdateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPoiEnrichmentUpdateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPoiEnrichmentUpdateReadAllFrom_initialTag;
  Specified = GEORPPoiEnrichmentUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPPoiEnrichmentUpdateCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188D94498(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPoiEnrichmentUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiEnrichmentUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D944F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentUpdateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v16 = 0;
          do
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_50;
            }
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if ((v20 & 0x80000000) == 0)
              break;
          }
          while (v16++ <= 8);
          goto LABEL_50;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 3u:
          if (v14 == 2)
            goto LABEL_32;
          goto LABEL_54;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPImageUpdateIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardUpdateIsValid(a1))
            goto LABEL_54;
          goto LABEL_49;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentPlaceContextIsValid(a1))
            goto LABEL_54;
LABEL_49:
          PBReaderRecallMark();
          goto LABEL_50;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_54:
            PBReaderRecallMark();
            return 0;
          }
LABEL_50:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_53;
          break;
      }
    }
  }
LABEL_53:
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEORPScorecardUpdateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPScorecardIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188D94D74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPoiEnrichmentUpdateIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(char *)(a1 + 80);
  if (v2 < 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 2) != 0)
    return 1;
  if ((v2 & 0x40) == 0)
    goto LABEL_9;
  if ((GEORPScorecardIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
    return 1;
  LOBYTE(v2) = *(_BYTE *)(a1 + 80);
LABEL_9:
  if ((v2 & 0x24) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEORPPoiEnrichmentPlaceContextIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 4) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEORPImageUpdateIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_27;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_27:

  return v3;
}

os_unfair_lock_s *GEORPPoiEnrichmentUpdateIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPoiEnrichmentUpdateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEORPPoiEnrichmentUpdateClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  -[GEORPPoiEnrichmentUpdate _readImageUpdates](a1);
  result = objc_msgSend(*(id *)(a1 + 24), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 24), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEORPImageUpdateHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "photoMetadata");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 24), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 24), "count");
    }
  }
  return result;
}

uint64_t GEORPPoiEnrichmentUpdateHasSensitiveFields(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(a1, "imageUpdates", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEORPImageUpdateHasSensitiveFields(*(void **)(*((_QWORD *)&v8 + 1) + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

void sub_188D95828(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRatingValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  GEOLocalizedString *v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _BOOL8 v27;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v24 = *v6;
            v25 = *(_QWORD *)&v5[v24];
            if (v25 == -1 || v25 >= *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
            *(_QWORD *)&v5[v24] = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0)
              goto LABEL_34;
            v21 += 7;
            v16 = v22++ >= 9;
            if (v16)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8])
            LODWORD(v23) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = -(v23 & 1) ^ ((int)v23 >> 1);
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v19 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          v20 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v19;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_188D963B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRatingValueReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRatingValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D96414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D96900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPScorecardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEORPCategoryRating *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  char v46;
  char v47;
  char v48;
  char v49;
  int v50;
  int v51;
  void *v52;
  _BOOL4 v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v55 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        v48 = 1;
        goto LABEL_88;
      }
      if (!v15)
        goto LABEL_89;
      while (1)
      {
        v51 = *v15++;
        v50 = v51;
        if (v51 == 1)
          break;
        if (v50 == 3)
        {
          v49 = 2;
LABEL_79:
          *(_BYTE *)(a1 + 48) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_89;
        }
      }
      v49 = 4;
      goto LABEL_79;
    }
    v30 = v23 >> 3;
    v31 = v16;
    if (!v55)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
      break;
    if ((_DWORD)v30 == 2)
    {
      if ((v8 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v43 + 1;
          v41 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
            goto LABEL_63;
          v39 += 7;
          v27 = v40++ >= 9;
          if (v27)
          {
            v41 = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          v41 = 0;
LABEL_65:
        *(_BYTE *)(a1 + 44) = v41 != 0;
        goto LABEL_69;
      }
    }
    else
    {
      if ((_DWORD)v30 != 1)
      {
        v45 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v45)
          goto LABEL_84;
        goto LABEL_69;
      }
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 48) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_85:
            v48 = 0;
            goto LABEL_87;
          }
          v9 += *(unsigned __int8 *)(a1 + 48) << 29 >> 31;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_68;
      }
    }
LABEL_60:
    v46 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
LABEL_84:
      v48 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v9)
      v47 = 1;
    else
      v47 = v16;
    if ((v47 & 1) == 0)
      goto LABEL_73;
  }
  if (!v31 || (*(_BYTE *)(a1 + 48) & 2) != 0)
    goto LABEL_60;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v54 = v16;
  v38 = objc_alloc_init(GEORPCategoryRating);
  if (GEORPCategoryRatingReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEORPScorecard _addNoFlagsCategoryRatings:](a1, v38);

    v16 = v54;
LABEL_68:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_69;
  }

  v48 = 0;
  v16 = v54;
LABEL_87:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
  *(_BYTE *)(a1 + 48) |= 4u;
  *(_BYTE *)(a1 + 48) |= 2u;
  if ((v48 & 1) != 0)
  {
LABEL_89:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_90;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_90:
      v52 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188D96FC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D97848(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPScorecardCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEORPScorecardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPScorecardReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPScorecardReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPScorecardReadAllFrom_initialTag;
  Specified = GEORPScorecardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPScorecardCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188D97AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPScorecardReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPScorecardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D97B30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D97D78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPScorecardIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 48) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 48) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEORPCategoryRatingIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORPScorecardIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPScorecardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188D982A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPScorecardUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  GEORPScorecard *v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _BOOL8 v27;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v24 = *v6;
            v25 = *(_QWORD *)&v5[v24];
            if (v25 == -1 || v25 >= *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
            *(_QWORD *)&v5[v24] = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0)
              goto LABEL_34;
            v21 += 7;
            v16 = v22++ >= 9;
            if (v16)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8])
            LODWORD(v23) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v19 = objc_alloc_init(GEORPScorecard);
          if (!GEORPScorecardReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          v20 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v19;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_188D98DA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPScorecardUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPScorecardUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D98E00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D993EC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

_QWORD *GEOBitstreamInitializeReader(_QWORD *result, uint64_t a2, uint64_t a3)
{
  result[1] = a3;
  result[2] = 0;
  *result = a2;
  return result;
}

void GEOBitstreamFree(uint64_t a1)
{
  free(*(void **)a1);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t GEOBitstreamReset(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  return result;
}

void sub_188D9B620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t GEOAllPossibleFilterScales()
{
  return objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", &unk_1E1E85588);
}

id GEOActiveResourceFiltersPath(void *a1)
{
  void *v1;
  void *v2;

  GEOResourceCachesDirectory(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("ResourceFilters.pbd"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_188D9D408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188D9D4BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_188D9D7A0(_Unwind_Exception *a1, void *a2, uint64_t a3, ...)
{
  void *v3;
  void *v4;
  va_list va;

  va_start(va, a3);

  maps::path_codec::geo3::RoutingPathLeg::~RoutingPathLeg((maps::path_codec::geo3::RoutingPathLeg *)va);
  _Unwind_Resume(a1);
}

id _GEOGetSharedTileDB()
{
  if (qword_1ECDBBC48 != -1)
    dispatch_once(&qword_1ECDBBC48, &__block_literal_global_52);
  return (id)_MergedGlobals_210;
}

void sub_188D9E110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAPPlaceCardModuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  int *v13;
  int *v14;
  int *v15;
  BOOL v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  int *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  char v62;
  int v63;
  int v64;
  void *v65;
  BOOL v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 64) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_95:
    if (v12)
    {
      v62 = 1;
      goto LABEL_97;
    }
    if (!v13)
      goto LABEL_107;
    while (1)
    {
      v64 = *v13++;
      v63 = v64;
      if (v64 == 2)
        goto LABEL_106;
      if (v63 == 3)
      {
        LOBYTE(v63) = 4;
LABEL_106:
        *(_BYTE *)(a1 + 64) |= v63;
      }
      else if (!v63)
      {
        goto LABEL_107;
      }
    }
  }
  if (v13)
    v16 = (v7 & 1 | v10) != 0;
  else
    v16 = 1;
  v67 = v16;
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_95;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v14;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v20 = 0;
LABEL_29:
    v27 = v20 & 7;
    if (v26 || v27 == 4)
      goto LABEL_95;
    v29 = v20 >> 3;
    v30 = v12;
    if (!v67)
    {
      v31 = v13;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 != 3)
    {
      if ((_DWORD)v29 == 2)
      {
        if (v30 && (*(_BYTE *)(a1 + 64) & 2) == 0)
        {
          if (v27 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_111;
            while (1)
            {
              v44 = (int *)MEMORY[0x1E0D82BC8];
              if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
                break;
              v45 = 0;
              v46 = 0;
              v47 = 0;
              while (1)
              {
                v48 = *v14;
                v49 = *(_QWORD *)(v3 + v48);
                v50 = v49 + 1;
                if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
                  break;
                v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v49);
                *(_QWORD *)(v3 + v48) = v50;
                v47 |= (unint64_t)(v51 & 0x7F) << v45;
                if (v51 < 0)
                {
                  v45 += 7;
                  v25 = v46++ >= 9;
                  if (!v25)
                    continue;
                }
                goto LABEL_68;
              }
              *(_BYTE *)(v3 + *v44) = 1;
LABEL_68:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v54 = 0;
            v55 = 0;
            v56 = 0;
            while (1)
            {
              v57 = *v14;
              v58 = *(_QWORD *)(v3 + v57);
              v59 = v58 + 1;
              if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
                break;
              v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v58);
              *(_QWORD *)(v3 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                v25 = v55++ >= 9;
                if (!v25)
                  continue;
              }
              goto LABEL_88;
            }
            *(_BYTE *)(v3 + *v15) = 1;
LABEL_88:
            PBRepeatedInt32Add();
          }
          goto LABEL_89;
        }
      }
      else
      {
        if ((_DWORD)v29 != 1)
        {
          v52 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if (!v52)
            goto LABEL_110;
          goto LABEL_90;
        }
        if ((v8 & 1) != 0)
        {
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (1)
          {
            v38 = *v14;
            v39 = *(_QWORD *)(v3 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
              break;
            v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v39);
            *(_QWORD *)(v3 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if ((v41 & 0x80) == 0)
              goto LABEL_74;
            v35 += 7;
            v25 = v36++ >= 9;
            if (v25)
            {
              LODWORD(v37) = 0;
              goto LABEL_76;
            }
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_74:
          if (*(_BYTE *)(v3 + *v15))
            LODWORD(v37) = 0;
LABEL_76:
          *(_DWORD *)(a1 + 60) = v37;
          goto LABEL_90;
        }
      }
      goto LABEL_71;
    }
    if (v30)
      break;
LABEL_71:
    v53 = PBReaderSkipValueWithTag();
    v15 = (int *)MEMORY[0x1E0D82BC8];
    if ((v53 & 1) == 0)
    {
LABEL_110:
      v62 = 0;
      goto LABEL_97;
    }
LABEL_90:
    if (v9)
      v61 = 1;
    else
      v61 = v12;
    if (v61 != 1 || *(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_95;
  }
  if ((*(_BYTE *)(a1 + 64) & 4) == 0)
  {
    PBReaderReadString();
    v42 = objc_claimAutoreleasedReturnValue();
    v43 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v42;

    v15 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
    goto LABEL_90;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 64) << 29 >> 31;
LABEL_89:
    v15 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_90;
  }
LABEL_111:
  v62 = 0;
  v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
  *(_BYTE *)(a1 + 64) |= 2u;
  *(_BYTE *)(a1 + 64) |= 4u;
  if ((v62 & 1) != 0)
  {
LABEL_107:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if (v12)
      goto LABEL_108;
    return v3;
  }
  v3 = 0;
  if (!v12)
    return v3;
LABEL_108:
  v65 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_188D9EC84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188D9F980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAPPlaceCardModuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAPPlaceCardModuleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAPPlaceCardModuleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAPPlaceCardModuleReadAllFrom_initialTag;
  Specified = GEOAPPlaceCardModuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188D9FB0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAPPlaceCardModuleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAPPlaceCardModuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188D9FB6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPPlaceCardModuleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  _BOOL8 v34;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_53;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_53;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 != 2)
      {
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8)
              continue;
            goto LABEL_52;
          }
LABEL_40:
          a1[*v4] = 1;
          goto LABEL_52;
        }
        goto LABEL_38;
      }
      if (v15 != 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_55;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v28 = v15++;
            if (v28 <= 8)
              continue;
          }
          goto LABEL_52;
        }
      }
      if (!PBReaderPlaceMark())
      {
LABEL_55:
        PBReaderRecallMark();
        return 0;
      }
LABEL_42:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v29 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v30 = *v2;
          v31 = *(_QWORD *)&a1[v30];
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
            break;
          v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
          *(_QWORD *)&a1[v30] = v32;
          if (v33 < 0)
          {
            v13 = v29++ >= 9;
            if (!v13)
              continue;
          }
          goto LABEL_42;
        }
        a1[*v4] = 1;
      }
      PBReaderRecallMark();
LABEL_52:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_53;
    }
    if (v15 != 2)
      goto LABEL_55;
LABEL_38:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_55;
    goto LABEL_52;
  }
LABEL_53:
  v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

void sub_188DA0030(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPPlaceCardModuleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188DA0354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPSessionDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  _BOOL8 v49;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            if (!PBReaderPlaceMark()
              || (GEOSessionIDReadAllFrom((_QWORD *)(a1 + 8), (uint64_t)v3) & 1) == 0)
            {
              goto LABEL_77;
            }
            PBReaderRecallMark();
            *(_BYTE *)(a1 + 72) |= 1u;
            continue;
          case 2u:
            *(_BYTE *)(a1 + 72) |= 4u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v48 = 32;
            goto LABEL_74;
          case 3u:
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 72) |= 0x10u;
            while (2)
            {
              v24 = *v4;
              v25 = *(_QWORD *)&v3[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
                *(_QWORD *)&v3[v24] = v26;
                v23 |= (unint64_t)(v27 & 0x7F) << v21;
                if (v27 < 0)
                {
                  v21 += 7;
                  v15 = v22++ >= 9;
                  if (v15)
                  {
                    v23 = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v23 = 0;
LABEL_59:
            *(_QWORD *)(a1 + 56) = v23;
            continue;
          case 4u:
            *(_BYTE *)(a1 + 72) |= 8u;
            v28 = *v4;
            v29 = *(_QWORD *)&v3[v28];
            if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v29);
              *(_QWORD *)&v3[v28] = v29 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v48 = 40;
            goto LABEL_74;
          case 5u:
            v30 = 0;
            v31 = 0;
            v32 = 0;
            *(_BYTE *)(a1 + 72) |= 0x20u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v32 |= (unint64_t)(v36 & 0x7F) << v30;
                if (v36 < 0)
                {
                  v30 += 7;
                  v15 = v31++ >= 9;
                  if (v15)
                  {
                    LODWORD(v32) = 0;
                    goto LABEL_63;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v32) = 0;
LABEL_63:
            *(_DWORD *)(a1 + 64) = v32;
            continue;
          case 6u:
            PBReaderReadString();
            v37 = objc_claimAutoreleasedReturnValue();
            v38 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v37;

            continue;
          case 7u:
            *(_BYTE *)(a1 + 72) |= 2u;
            v39 = *v4;
            v40 = *(_QWORD *)&v3[v39];
            if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v40);
              *(_QWORD *)&v3[v39] = v40 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v48 = 24;
LABEL_74:
            *(_QWORD *)(a1 + v48) = v20;
            continue;
          case 8u:
            v41 = 0;
            v42 = 0;
            v43 = 0;
            *(_BYTE *)(a1 + 72) |= 0x40u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_77;
            continue;
        }
        while (1)
        {
          v44 = *v4;
          v45 = *(_QWORD *)&v3[v44];
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)&v3[*v5])
            break;
          v47 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v45);
          *(_QWORD *)&v3[v44] = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0)
            goto LABEL_65;
          v41 += 7;
          v15 = v42++ >= 9;
          if (v15)
          {
            v43 = 0;
            goto LABEL_67;
          }
        }
        v3[*v6] = 1;
LABEL_65:
        if (v3[*v6])
          v43 = 0;
LABEL_67:
        *(_BYTE *)(a1 + 68) = v43 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v49 = v3[*v6] == 0;
  }
  else
  {
LABEL_77:
    v49 = 0;
  }
  objc_sync_exit(v3);

  return v49;
}

void sub_188DA1510(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPSessionDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAPSessionDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DA1570(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAPSessionDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
            goto LABEL_59;
          PBReaderRecallMark();
          continue;
        case 2u:
        case 4u:
        case 7u:
          if (v16 != 1)
            goto LABEL_59;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_55;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_55;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_56;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_56;
          }
        case 6u:
          if (v16 == 2)
            goto LABEL_44;
          goto LABEL_59;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v32 = 0;
          break;
        default:
LABEL_44:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_59:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v26 = v32++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_56;
      }
LABEL_54:
      v14 = *v4;
LABEL_55:
      a1[v14] = 1;
LABEL_56:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_188DA2450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188DA336C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA3498(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA3888(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA39AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA4F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA50E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_188DA5190(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA5458(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188DA550C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA5918(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_188DA5A38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188DA5DBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

double geo::Geocentric<double>::toCoordinate3D<geo::Degrees,double>(double *a1, float64x2_t *a2)
{
  long double v3;
  long double v4;
  long double v5;
  double v6;
  double v7;
  __double2 v8;
  __double2 v9;
  double result;
  float64x2_t v11;
  double v12;
  long double v13;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = sqrt(v4 * v4 + v3 * v3);
  v7 = atan2(v5, v6 * 0.996647189);
  v13 = atan2(v4, v3);
  v8 = __sincos_stret(v7);
  v12 = atan2(v5 + v8.__sinval * (v8.__sinval * v8.__sinval) * 6378137.0 * 0.00669437999 / 0.996647189, v6 + v8.__cosval * (v8.__cosval * -42697.6727) * v8.__cosval);
  v9 = __sincos_stret(v12);
  result = v6 / v9.__cosval - 6378137.0 / sqrt(v9.__sinval * -0.00669437999 * v9.__sinval + 1.0);
  v11.f64[0] = v12;
  v11.f64[1] = v13;
  *a2 = vmulq_f64(vmulq_f64(v11, (float64x2_t)vdupq_n_s64(0x3FD45F306DC9C883uLL)), (float64x2_t)vdupq_n_s64(0x4066800000000000uLL));
  a2[1].f64[0] = result;
  return result;
}

void *_getConfigStoreStringKeysForStateCapture()
{
  return &unk_1E1E855B8;
}

id GEOGetRequestCountPowerLoggerLog()
{
  if (qword_1ECDBBC68 != -1)
    dispatch_once(&qword_1ECDBBC68, &__block_literal_global_74);
  return (id)qword_1ECDBBC60;
}

void sub_188DA6D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188DA6EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188DA72B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_188DA76EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_188DA7BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188DA82E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188DA84A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188DA8748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188DA8D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188DA900C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_188DA91A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188DA93B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOGetSubscriptionsDownloadManagerLog_0()
{
  if (qword_1ECDBBC78 != -1)
    dispatch_once(&qword_1ECDBBC78, &__block_literal_global_55);
  return (id)_MergedGlobals_212;
}

void sub_188DA99D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188DAA1C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_188DAA600(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAnnouncementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  __int16 v63;
  char v64;
  int v65;
  __int16 v66;
  void *v67;
  GEOMapRegion *v69;
  char v70;
  char v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int16 *)(a1 + 108) >> 10) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFFCFFFBFFF7FFF5), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 108) >> 7) & 1)+ ((*(_WORD *)(a1 + 108) >> 6) & 1)+ (HIBYTE(*(_WORD *)(a1 + 108)) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 5;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v71 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v70 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_140;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_140:
      if ((v15 & 1) != 0)
      {
        v64 = 1;
        goto LABEL_155;
      }
      if (v16)
      {
        while (1)
        {
          v65 = *v16++;
          v66 = 512;
          switch(v65)
          {
            case 0:
              goto LABEL_156;
            case 2:
              goto LABEL_151;
            case 3:
              v66 = 2048;
              goto LABEL_151;
            case 4:
              v66 = 32;
              goto LABEL_151;
            case 5:
              v66 = 16;
              goto LABEL_151;
            case 6:
              v66 = 128;
              goto LABEL_151;
            case 7:
              v66 = 64;
              goto LABEL_151;
            case 10:
              v66 = 256;
              goto LABEL_151;
            case 11:
              v66 = 1024;
LABEL_151:
              *(_WORD *)(a1 + 108) |= v66;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_156;
    }
    v29 = v22 >> 3;
    v30 = v15;
    if ((v71 & 1) == 0)
    {
      v31 = v16;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_102;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_WORD *)(a1 + 108) |= 1u;
        while (1)
        {
          v38 = *v17;
          v39 = *(_QWORD *)(v3 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(v3 + *v6))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v39);
          *(_QWORD *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0)
            goto LABEL_105;
          v35 += 7;
          v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_107;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_105:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v37) = 0;
LABEL_107:
        v62 = 92;
        goto LABEL_120;
      case 2:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v63 = *(_WORD *)(a1 + 108) << 6;
          goto LABEL_137;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v69 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v69, (void *)v3))
          goto LABEL_153;
        PBReaderRecallMark();
        v42 = 56;
        goto LABEL_88;
      case 3:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x800) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 72;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v63 = 16 * *(_WORD *)(a1 + 108);
        goto LABEL_137;
      case 4:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 24;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v63 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_137;
      case 5:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x10) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 16;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v63 = *(_WORD *)(a1 + 108) << 11;
        goto LABEL_137;
      case 6:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x80) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 40;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v63 = *(_WORD *)(a1 + 108) << 8;
        goto LABEL_137;
      case 7:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x40) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 32;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v63 = *(_WORD *)(a1 + 108) << 9;
        goto LABEL_137;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_102;
        v45 = 0;
        v46 = 0;
        v37 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          if (v48 == -1 || v48 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v48 + 1;
            v37 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v37) = 0;
LABEL_111:
        v62 = 100;
        goto LABEL_120;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_102;
        v50 = 0;
        v51 = 0;
        v37 = 0;
        *(_WORD *)(a1 + 108) |= 8u;
        while (2)
        {
          v52 = *v17;
          v53 = *(_QWORD *)(v3 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v53);
            *(_QWORD *)(v3 + v52) = v53 + 1;
            v37 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v26 = v51++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v37) = 0;
LABEL_115:
        v62 = 104;
        goto LABEL_120;
      case 10:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_154;
          v63 = *(_WORD *)(a1 + 108) << 7;
LABEL_137:
          v7 += v63 >> 15;
LABEL_138:
          v15 = v70;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_139:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_140;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_154;
        v69 = objc_alloc_init(GEOPDFlyover);
        if (GEOPDFlyoverReadAllFrom((uint64_t)v69, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v42 = 48;
LABEL_88:
          v55 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v69;
LABEL_93:

          --v7;
          goto LABEL_138;
        }
LABEL_153:

LABEL_154:
        v64 = 0;
        v15 = v70;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_155:
        *(_WORD *)(a1 + 108) |= 0x200u;
        *(_WORD *)(a1 + 108) |= 0x800u;
        *(_WORD *)(a1 + 108) |= 0x20u;
        *(_WORD *)(a1 + 108) |= 0x10u;
        *(_WORD *)(a1 + 108) |= 0x80u;
        *(_WORD *)(a1 + 108) |= 0x40u;
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 0x400u;
        if ((v64 & 1) != 0)
        {
LABEL_156:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_157;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_157:
            v67 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 11:
        if (!v30)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x400) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 64;
LABEL_92:
          v55 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v63 = 32 * *(_WORD *)(a1 + 108);
        goto LABEL_137;
      case 12:
        if ((v8 & 1) != 0)
        {
          v56 = 0;
          v57 = 0;
          v37 = 0;
          *(_WORD *)(a1 + 108) |= 2u;
          while (1)
          {
            v58 = *v17;
            v59 = *(_QWORD *)(v3 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(v3 + *v6))
              break;
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v59);
            *(_QWORD *)(v3 + v58) = v59 + 1;
            v37 |= (unint64_t)(v60 & 0x7F) << v56;
            if ((v60 & 0x80) == 0)
              goto LABEL_117;
            v56 += 7;
            v26 = v57++ >= 9;
            if (v26)
            {
              LODWORD(v37) = 0;
              goto LABEL_119;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_117:
          if (*(_BYTE *)(v3 + *v18))
            LODWORD(v37) = 0;
LABEL_119:
          v62 = 96;
LABEL_120:
          *(_DWORD *)(a1 + v62) = v37;
        }
        else
        {
LABEL_102:
          v61 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v70;
          if ((v61 & 1) == 0)
          {
LABEL_152:
            v64 = 0;
            goto LABEL_155;
          }
        }
        goto LABEL_139;
      default:
        v41 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v70;
        if (!v41)
          goto LABEL_152;
        goto LABEL_139;
    }
  }
}

void sub_188DAB180(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DAB2C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DAB404(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DAB544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DAB688(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DAB9E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DABB28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DAC8A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAnnouncementReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAnnouncementReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAnnouncementReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAnnouncementReadAllFrom_initialTag;
  Specified = GEOAnnouncementReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188DACA58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAnnouncementReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAnnouncementReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DACAB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAnnouncementIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_73;
          }
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_76;
          goto LABEL_60;
        case 3u:
          if (v14 == 2)
            goto LABEL_62;
          goto LABEL_76;
        case 4u:
          if (v14 == 2)
            goto LABEL_62;
          goto LABEL_76;
        case 5u:
          if (v14 == 2)
            goto LABEL_62;
          goto LABEL_76;
        case 6u:
          if (v14 == 2)
            goto LABEL_62;
          goto LABEL_76;
        case 7u:
          if (v14 == 2)
            goto LABEL_62;
          goto LABEL_76;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_73;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v30 = v29 + 1;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_73;
          }
        case 0xAu:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDFlyoverIsValid(a1))
            goto LABEL_76;
LABEL_60:
          PBReaderRecallMark();
          continue;
        case 0xBu:
          if (v14 == 2)
            goto LABEL_62;
          goto LABEL_76;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v32 = 0;
          break;
        default:
LABEL_62:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_76:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
          break;
        v35 = v34 + 1;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_73;
      }
LABEL_72:
      a1[*v4] = 1;
LABEL_73:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_188DAD140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAnnouncementIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(unsigned __int16 *)(a1 + 108);
  if ((v2 & 0x1AF0) != 0)
    return 1;
  if ((v2 & 0x100) != 0)
  {
    if ((GEOPDFlyoverIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 108);
  }
  return (v2 >> 10) & 1;
}

os_unfair_lock_s *GEOAnnouncementIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAnnouncementIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DAD6F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DADECC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAvailableAnnouncementsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOAnnouncement *v36;
  uint64_t v37;
  void *v38;
  char v39;
  char v40;
  int v41;
  int v42;
  void *v43;
  BOOL v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v45 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_58;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        v40 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v42 = *v16++;
            v41 = v42;
            if (v42 != 1 && v41 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_69;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v45)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 != 2)
      break;
    if (!v31)
      goto LABEL_50;
    if ((*(_BYTE *)(a1 + 44) & 2) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_67:
        v40 = 0;
        goto LABEL_68;
      }
      v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    }
    else
    {
      PBReaderReadString();
      v37 = objc_claimAutoreleasedReturnValue();
      v38 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v37;

      --v9;
    }
LABEL_51:
    if (v9)
      v39 = 1;
    else
      v39 = v15;
    if ((v39 & 1) == 0)
      goto LABEL_58;
  }
  if ((_DWORD)v30 != 1)
  {
    if (!PBReaderSkipValueWithTag())
      goto LABEL_67;
    goto LABEL_51;
  }
  if (!v31 || (*(_BYTE *)(a1 + 44) & 1) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_67;
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_67;
  v36 = objc_alloc_init(GEOAnnouncement);
  if (GEOAnnouncementReadAllFrom((uint64_t)v36, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOAvailableAnnouncements _addNoFlagsAnnouncement:](a1, v36);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_51;
  }

  v40 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v40 & 1) != 0)
  {
LABEL_69:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_70;
  }
  v3 = 0;
  if (v15)
  {
LABEL_70:
    v43 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188DAE620(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DAEBF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAvailableAnnouncementsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOAvailableAnnouncementsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAvailableAnnouncementsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAvailableAnnouncementsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAvailableAnnouncementsReadAllFrom_initialTag;
  Specified = GEOAvailableAnnouncementsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAvailableAnnouncementsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188DAEE7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAvailableAnnouncementsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAvailableAnnouncementsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DAEEDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAvailableAnnouncementsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) != 1)
        goto LABEL_25;
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOAnnouncementIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v14 != 2)
      goto LABEL_28;
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_28;
    goto LABEL_26;
  }
LABEL_27:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188DAF2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAvailableAnnouncementsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188DAF7A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOStringForTimestamp(void *a1, void *a2, void *a3, double a4)
{
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;

  v7 = qword_1ECDBAC40;
  v8 = a3;
  v9 = a2;
  v10 = a1;
  if (v7 != -1)
    dispatch_once(&qword_1ECDBAC40, &__block_literal_global_88);
  objc_msgSend((id)_MergedGlobals_3, "setLocale:", v9);

  objc_msgSend((id)_MergedGlobals_3, "setTimeZone:", v8);
  objc_msgSend((id)_MergedGlobals_3, "setLocalizedDateFormatFromTemplate:", v10);

  v11 = (void *)_MergedGlobals_3;
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeIntervalSinceReferenceDate:", a4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "stringFromDate:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

void sub_188DB1B54(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

BOOL GEOSetSHA1OnExtendedAttribute(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  id v7;
  const char *v8;
  id v9;
  int v10;
  _BOOL8 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v5 = a1;
  v6 = a2;
  if (!objc_msgSend(v5, "length") || !objc_msgSend(v6, "length"))
    goto LABEL_6;
  v7 = objc_retainAutorelease(v5);
  v8 = (const char *)objc_msgSend(v7, "fileSystemRepresentation");
  v9 = objc_retainAutorelease(v6);
  v10 = setxattr(v8, "com.apple.GeoServices.SHA1", (const void *)objc_msgSend(v9, "bytes"), objc_msgSend(v9, "length"), 0, 0);
  v11 = v10 == 0;
  if (a3 && v10)
  {
    v12 = (void *)MEMORY[0x1E0CB35C8];
    v13 = *MEMORY[0x1E0CB2FE0];
    v14 = *__error();
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObject:forKey:", v7, *MEMORY[0x1E0CB2AA0]);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "errorWithDomain:code:userInfo:", v13, v14, v15);
    *a3 = (id)objc_claimAutoreleasedReturnValue();

LABEL_6:
    v11 = 0;
  }

  return v11;
}

id GEOGetETagFromExtendedAttributes(void *a1)
{
  const char *v1;
  ssize_t v2;
  size_t v3;
  id v4;
  void *v5;

  v1 = (const char *)objc_msgSend(objc_retainAutorelease(a1), "fileSystemRepresentation");
  v2 = getxattr(v1, "com.apple.GeoServices.ETAG", 0, 0, 0, 0);
  if (v2 < 0)
  {
    v5 = 0;
  }
  else
  {
    v3 = v2;
    objc_msgSend(MEMORY[0x1E0C99DF0], "dataWithLength:", v2);
    v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    if (getxattr(v1, "com.apple.GeoServices.ETAG", (void *)objc_msgSend(v4, "mutableBytes"), v3, 0, 0) < 1)
      v5 = 0;
    else
      v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithData:encoding:", v4, 4);

  }
  return v5;
}

BOOL GEOSetETagOnExtendedAttribute(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  const char *v9;
  id v10;
  int v11;
  _BOOL8 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v5 = a1;
  v6 = a2;
  if (objc_msgSend(v5, "length") && objc_msgSend(v6, "length"))
  {
    objc_msgSend(v6, "dataUsingEncoding:", 4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_retainAutorelease(v5);
    v9 = (const char *)objc_msgSend(v8, "fileSystemRepresentation");
    v10 = objc_retainAutorelease(v7);
    v11 = setxattr(v9, "com.apple.GeoServices.ETAG", (const void *)objc_msgSend(v10, "bytes"), objc_msgSend(v10, "length"), 0, 0);
    v12 = v11 == 0;
    if (a3 && v11)
    {
      v13 = (void *)MEMORY[0x1E0CB35C8];
      v14 = *MEMORY[0x1E0CB2FE0];
      v15 = *__error();
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObject:forKey:", v8, *MEMORY[0x1E0CB2AA0]);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "errorWithDomain:code:userInfo:", v14, v15, v16);
      *a3 = (id)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

id GEOCalculateSHA1ForFile(void *a1)
{
  objc_class *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (objc_class *)MEMORY[0x1E0C99D50];
  v2 = a1;
  v3 = (void *)objc_msgSend([v1 alloc], "initWithContentsOfFile:options:error:", v2, 1, 0);

  objc_msgSend(v3, "_geo_SHA1Hash");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

uint64_t geo::ZilchMapModel::ZilchMapModel(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(id, _QWORD, void *);
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v5 = a2;
  v6 = a3;
  *(_QWORD *)a1 = off_1E1BF6580;
  +[GEOMapAccess map](GEOMapAccess, "map");
  v7 = objc_claimAutoreleasedReturnValue();
  *(_QWORD *)(a1 + 24) = 850045863;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  if (v7)
  {
    objc_msgSend(v5, "requestQueue");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 8), "setCallbackQueue:", v8);

    objc_msgSend(v5, "mapAccessRestrictions");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 8), "setRestrictions:", v9);

    objc_msgSend(*(id *)(a1 + 8), "setTileErrorHandler:", v6);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "GEOErrorWithCode:", -213);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v6[2](v6, 0, v10);

  }
  return a1;
}

void sub_188DB2958(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  std::mutex *v4;
  void *v5;
  void *v6;

  v6 = v5;

  std::mutex::~mutex(v4);
  _Unwind_Resume(a1);
}

void geo::ZilchMapModel::~ZilchMapModel(geo::ZilchMapModel *this)
{
  void *v2;

  v2 = (void *)*((_QWORD *)this + 1);
  *(_QWORD *)this = off_1E1BF6580;
  *((_QWORD *)this + 1) = 0;

  std::mutex::~mutex((std::mutex *)((char *)this + 24));
}

{
  geo::ZilchMapModel::~ZilchMapModel(this);
  JUMPOUT(0x18D76437CLL);
}

void geo::ZilchMapModel::finishCurrentSearch(geo::ZilchMapModel *this)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *((_QWORD *)this + 2);
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(v2 + 24), 0xFFFFFFFFFFFFFFFFLL);
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(v2 + 32), 0xFFFFFFFFFFFFFFFFLL);
  std::mutex::lock((std::mutex *)((char *)this + 24));
  v3 = *((_QWORD *)this + 2);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  *((_QWORD *)this + 2) = 0;
  std::mutex::unlock((std::mutex *)((char *)this + 24));
}

void geo::ZilchMapModel::findRoads(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::mutex *v8;
  geo::ZilchMapModelSearch *v9;
  GEOMapAccess *v10;
  NSObject *v11;
  GEOMapAccess *v12;
  _QWORD block[4];
  GEOMapAccess *v14;
  geo::ZilchMapModelSearch *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  v8 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if (*(_QWORD *)(a1 + 8))
  {
    v9 = (geo::ZilchMapModelSearch *)operator new();
    v10 = (GEOMapAccess *)*(id *)(a1 + 8);
    geo::ZilchMapModelSearch::ZilchMapModelSearch(v9, v10);
    *(_QWORD *)v9 = &off_1E1BF6740;
    v11 = *((_QWORD *)v9 + 2);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke;
    block[3] = &unk_1E1C07B10;
    v14 = v10;
    v15 = v9;
    v18 = a3;
    v16 = a2;
    v17 = a4;
    v12 = v10;
    dispatch_async(v11, block);

    *(_QWORD *)(a1 + 16) = v9;
    std::mutex::unlock(v8);
    geo::ZilchMapModel::finishCurrentSearch((geo::ZilchMapModel *)a1);
  }
  else
  {
    std::mutex::unlock(v8);
  }
}

void sub_188DB2B94(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  MEMORY[0x18D76437C](v1, 0x81C402FCC0CB6);
  _Unwind_Resume(a1);
}

void geo::ZilchMapModel::getRoad(uint64_t a1, _QWORD *a2, _DWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  zilch::Longitude *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  zilch::Longitude *v12;
  uint64_t v13;
  int v14;
  double *v15;
  double *v16;
  zilch::Latitude *v17;
  unsigned int v18;
  unsigned int v19;
  Longitude v20;
  Latitude v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  char *v34;
  uint64_t v35;
  int v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unsigned int v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  int v51;
  void *__p;
  double *v53;

  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v5[2] = 0;
  v6 = (uint64_t)(v5 + 2);
  v7 = (zilch::Longitude *)(*(_QWORD *(**)(void **__return_ptr))(*(_QWORD *)*a2 + 48))(&__p);
  v8 = (char *)v53 - (_BYTE *)__p;
  if (v53 != __p)
  {
    if (v8 < 0)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v7 = (zilch::Longitude *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::GeoCoordinates>>(v6, v8 >> 4);
    v11 = (_DWORD *)*v5;
    v10 = (_DWORD *)v5[1];
    v12 = v7;
    if (v10 != (_DWORD *)*v5)
    {
      do
      {
        v13 = *(_QWORD *)(v10 - 3);
        v10 -= 3;
        v14 = v10[2];
        *(_QWORD *)((char *)v12 - 12) = v13;
        v12 = (zilch::Longitude *)((char *)v12 - 12);
        *((_DWORD *)v12 + 2) = v14;
      }
      while (v10 != v11);
      v10 = (_DWORD *)*v5;
    }
    *v5 = v12;
    v5[1] = v7;
    v5[2] = (char *)v7 + 12 * v9;
    if (v10)
      operator delete(v10);
  }
  v15 = (double *)__p;
  v16 = v53;
  if (__p != v53)
  {
    do
    {
      v17 = (zilch::Latitude *)zilch::Longitude::fromDegrees(v7, v15[1]);
      v18 = v17;
      v19 = zilch::Latitude::fromDegrees(v17, *v15);
      v20.var0 = v18;
      v21.var0 = v19;
      v7 = (zilch::Longitude *)zilch::GeoCoordinates::GeoCoordinates((uint64_t)&v50, v20, v21);
      v23 = v5[1];
      v22 = v5[2];
      if (v23 >= v22)
      {
        v26 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v23 - *v5) >> 2);
        v27 = v26 + 1;
        if (v26 + 1 > 0x1555555555555555)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v22 - *v5) >> 2);
        if (2 * v28 > v27)
          v27 = 2 * v28;
        if (v28 >= 0xAAAAAAAAAAAAAAALL)
          v29 = 0x1555555555555555;
        else
          v29 = v27;
        if (v29)
          v7 = (zilch::Longitude *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::GeoCoordinates>>(v6, v29);
        else
          v7 = 0;
        v30 = (char *)v7 + 12 * v26;
        v31 = v50;
        *((_DWORD *)v30 + 2) = DWORD2(v50);
        *(_QWORD *)v30 = v31;
        v33 = (_DWORD *)*v5;
        v32 = (_DWORD *)v5[1];
        v34 = v30;
        if (v32 != (_DWORD *)*v5)
        {
          do
          {
            v35 = *(_QWORD *)(v32 - 3);
            v32 -= 3;
            v36 = v32[2];
            *(_QWORD *)(v34 - 12) = v35;
            v34 -= 12;
            *((_DWORD *)v34 + 2) = v36;
          }
          while (v32 != v33);
          v32 = (_DWORD *)*v5;
        }
        v25 = v30 + 12;
        *v5 = v34;
        v5[1] = v30 + 12;
        v5[2] = (char *)v7 + 12 * v29;
        if (v32)
          operator delete(v32);
      }
      else
      {
        v24 = v50;
        *(_DWORD *)(v23 + 8) = DWORD2(v50);
        *(_QWORD *)v23 = v24;
        v25 = (char *)(v23 + 12);
      }
      v5[1] = v25;
      v15 += 2;
    }
    while (v15 != v16);
  }
  std::shared_ptr<std::vector<zilch::GeoCoordinates>>::shared_ptr[abi:ne180100]<std::vector<zilch::GeoCoordinates>,void>(&v48, (uint64_t)v5);
  v49 = v48;
  v48 = 0uLL;
  zilch::GeoPolyline::GeoPolyline((uint64_t)&v50, &v49, 0);
  std::shared_ptr<zilch::TrafficDynamicTile::Incident>::operator=[abi:ne180100]((uint64_t)a3, &v50);
  a3[4] = v51;
  v37 = (std::__shared_weak_count *)*((_QWORD *)&v50 + 1);
  if (*((_QWORD *)&v50 + 1))
  {
    v38 = (unint64_t *)(*((_QWORD *)&v50 + 1) + 8);
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  v40 = (std::__shared_weak_count *)*((_QWORD *)&v49 + 1);
  if (*((_QWORD *)&v49 + 1))
  {
    v41 = (unint64_t *)(*((_QWORD *)&v49 + 1) + 8);
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  v43 = (std::__shared_weak_count *)*((_QWORD *)&v48 + 1);
  if (*((_QWORD *)&v48 + 1))
  {
    v44 = (unint64_t *)(*((_QWORD *)&v48 + 1) + 8);
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  a3[9] = (*(double (**)(_QWORD))(*(_QWORD *)*a2 + 56))(*a2);
  v46 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 72))(*a2);
  zilch::FunctionalClass::FunctionalClass((int *)&v50, v46);
  a3[7] = v50;
  v47 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 80))(*a2);
  zilch::FormOfWay::FormOfWay(&v50, v47);
  a3[6] = v50;
  if (__p)
  {
    v53 = (double *)__p;
    operator delete(__p);
  }
}

void sub_188DB2F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a13);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a11);
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void geo::ZilchMapModel::getJunction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  std::mutex *v6;
  geo::ZilchMapModelSearch *v7;
  void *v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  GEOMapAccess *v13;
  NSObject *v14;
  unint64_t *v15;
  unint64_t v16;
  GEOMapAccess *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  _QWORD block[4];
  GEOMapAccess *v24;
  geo::ZilchMapModelSearch *v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;

  v6 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if (*(_QWORD *)(a1 + 8))
  {
    v7 = (geo::ZilchMapModelSearch *)operator new();
    v8 = *(void **)(a1 + 8);
    v10 = *a2;
    v9 = (std::__shared_weak_count *)a2[1];
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v12 = __ldxr(p_shared_owners);
      while (__stxr(v12 + 1, p_shared_owners));
    }
    v13 = v8;
    geo::ZilchMapModelSearch::ZilchMapModelSearch(v7, v13);
    *(_QWORD *)v7 = &off_1E1BF67C0;
    v14 = *((_QWORD *)v7 + 2);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3321888768;
    block[2] = ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke;
    block[3] = &unk_1E1BFB8D0;
    v25 = v7;
    v26 = v10;
    v27 = v9;
    if (v9)
    {
      v15 = (unint64_t *)&v9->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v28 = a3;
    v17 = v13;
    v24 = v17;
    dispatch_async(v14, block);

    v18 = v27;
    if (v27)
    {
      v19 = (unint64_t *)&v27->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }

    *(_QWORD *)(a1 + 16) = v7;
    if (v9)
    {
      v21 = (unint64_t *)&v9->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    std::mutex::unlock(v6);
    geo::ZilchMapModel::finishCurrentSearch((geo::ZilchMapModel *)a1);
  }
  else
  {
    std::mutex::unlock(v6);
  }
}

void sub_188DB3160(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void *v3;
  va_list va;

  va_start(va, a2);

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);
  MEMORY[0x18D76437C](v2, 0x81C402FCC0CB6);
  _Unwind_Resume(a1);
}

uint64_t geo::ZilchMapModel::flipRoadOrientation(uint64_t a1, _QWORD *a2)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 32))(*a2);
}

void geo::ZilchMapModel::cancel(geo::ZilchMapModel *this)
{
  std::mutex *v2;
  dispatch_semaphore_t *v3;
  void *v4;

  v2 = (std::mutex *)((char *)this + 24);
  std::mutex::lock((std::mutex *)((char *)this + 24));
  v3 = (dispatch_semaphore_t *)*((_QWORD *)this + 2);
  if (v3)
    geo::ZilchMapModelSearch::cancel(v3);
  v4 = (void *)*((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;

  std::mutex::unlock(v2);
}

void geo::ZilchMapModelSearch::cancel(dispatch_semaphore_t *this)
{
  NSObject *v2;
  _QWORD block[5];

  dispatch_semaphore_wait(this[3], 0xFFFFFFFFFFFFFFFFLL);
  v2 = this[2];
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___ZN3geo19ZilchMapModelSearch6cancelEv_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = this;
  dispatch_async(v2, block);
}

void geo::ZilchMapModel::finish(id *this)
{
  std::mutex *v2;
  id v3;

  v2 = (std::mutex *)(this + 3);
  std::mutex::lock((std::mutex *)(this + 3));
  objc_msgSend(this[1], "setTileErrorHandler:", 0);
  v3 = this[1];
  this[1] = 0;

  std::mutex::unlock(v2);
}

geo::ZilchMapModelSearch *geo::ZilchMapModelSearch::ZilchMapModelSearch(geo::ZilchMapModelSearch *this, GEOMapAccess *a2)
{
  GEOMapAccess *v3;

  v3 = a2;
  *(_QWORD *)this = &off_1E1BF66E8;
  *((_QWORD *)this + 1) = 0;
  -[GEOMapAccess callbackQueue](v3, "callbackQueue");
  *((_QWORD *)this + 2) = objc_claimAutoreleasedReturnValue();
  *((_QWORD *)this + 3) = dispatch_semaphore_create(0);
  *((_QWORD *)this + 4) = dispatch_semaphore_create(0);

  return this;
}

void sub_188DB32F8(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  _Unwind_Resume(a1);
}

intptr_t ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke(uint64_t a1, double a2)
{
  void *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[5];
  _QWORD v14[5];
  int v15;
  int v16;

  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  LODWORD(a2) = *(_DWORD *)(a1 + 64);
  v5 = (double)*(unint64_t *)&a2;
  v16 = zilch::GeoCoordinates::y(*(zilch::GeoCoordinates **)(a1 + 48));
  v7 = zilch::Latitude::toDegrees((zilch::Latitude *)&v16, v6);
  v15 = zilch::GeoCoordinates::x(*(zilch::GeoCoordinates **)(a1 + 48));
  v9 = zilch::Longitude::toDegrees((zilch::Longitude *)&v15, v8);
  v13[4] = v4;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_2;
  v14[3] = &__block_descriptor_40_e66_v24__0_shared_ptr_geo::MapEdge____MapEdge_____shared_weak_count__8l;
  v14[4] = *(_QWORD *)(a1 + 56);
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_3;
  v13[3] = &__block_descriptor_40_e23_v16__0__GEOMapRequest_8l;
  objc_msgSend(v3, "findRoadEdgesWithin:of:edgeHandler:completionHandler:", v14, v13, v5, v7, v9);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = *(void **)(v4 + 8);
  *(_QWORD *)(v4 + 8) = v10;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v4 + 24));
}

uint64_t ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_2(uint64_t a1, __int128 *a2)
{
  return std::vector<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>::push_back[abi:ne180100](*(char ***)(a1 + 32), a2);
}

intptr_t ___ZN3geo20ZilchFindRoadsSearchC2EP12GEOMapAccessjRKN5zilch14GeoCoordinatesEPNSt3__16vectorINS7_10shared_ptrINS_7MapEdgeEEENS7_9allocatorISB_EEEE_block_invoke_3(uint64_t a1, GEOMapRequest *a2)
{
  return geo::ZilchMapModelSearch::completed(*(geo::ZilchMapModelSearch **)(a1 + 32), a2);
}

intptr_t geo::ZilchMapModelSearch::completed(geo::ZilchMapModelSearch *this, GEOMapRequest *a2)
{
  void *v3;

  v3 = (void *)*((_QWORD *)this + 1);
  if (v3)
  {
    *((_QWORD *)this + 1) = 0;

  }
  return dispatch_semaphore_signal(*((dispatch_semaphore_t *)this + 4));
}

void geo::ZilchFindRoadsSearch::~ZilchFindRoadsSearch(id *this)
{
  geo::ZilchMapModelSearch::~ZilchMapModelSearch(this);
  JUMPOUT(0x18D76437CLL);
}

void geo::ZilchMapModelSearch::~ZilchMapModelSearch(id *this)
{
  geo::ZilchMapModelSearch::~ZilchMapModelSearch(this);
  JUMPOUT(0x18D76437CLL);
}

{
  *this = &off_1E1BF66E8;

}

intptr_t ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke(zilch::Longitude *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double v8;
  double v9;
  unint64_t v10;
  zilch::Latitude *v11;
  unsigned int v12;
  unsigned int v13;
  Longitude v14;
  Latitude v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v23[5];
  _QWORD v24[5];
  uint64_t v25;
  int v26;

  v3 = *((_QWORD *)a1 + 5);
  v2 = *((_QWORD *)a1 + 6);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(std::__shared_weak_count **)(v2 + 32);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(double *)(v4 + 8);
    v9 = *(double *)(v4 + 16);
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v8 = *(double *)(v4 + 8);
    v9 = *(double *)(v4 + 16);
  }
  v11 = (zilch::Latitude *)zilch::Longitude::fromDegrees(a1, v9);
  v12 = v11;
  v13 = zilch::Latitude::fromDegrees(v11, v8);
  v14.var0 = v12;
  v15.var0 = v13;
  zilch::GeoCoordinates::GeoCoordinates((uint64_t)&v25, v14, v15);
  v16 = *((_QWORD *)a1 + 8);
  v17 = v25;
  *(_DWORD *)(v16 + 8) = v26;
  *(_QWORD *)v16 = v17;
  v18 = *((_QWORD *)a1 + 6);
  v19 = *((_QWORD *)a1 + 4);
  v23[4] = v3;
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_2;
  v24[3] = &__block_descriptor_40_e66_v24__0_shared_ptr_geo::MapEdge____MapEdge_____shared_weak_count__8l;
  v24[4] = *((_QWORD *)a1 + 8);
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_3;
  v23[3] = &__block_descriptor_40_e23_v16__0__GEOMapRequest_8l;
  (*(void (**)(uint64_t, uint64_t, _QWORD *, _QWORD *))(*(_QWORD *)v18 + 96))(v18, v19, v24, v23);
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = *(void **)(v3 + 8);
  *(_QWORD *)(v3 + 8) = v20;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v3 + 24));
}

uint64_t ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_2(uint64_t a1, __int128 *a2)
{
  return std::vector<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>::push_back[abi:ne180100]((char **)(*(_QWORD *)(a1 + 32) + 16), a2);
}

intptr_t ___ZN3geo23ZilchFindJunctionSearchC2EP12GEOMapAccessNSt3__110shared_ptrINS_7MapEdgeEEEPN5zilch16AbstractMapModelIS6_E8JunctionE_block_invoke_3(uint64_t a1, GEOMapRequest *a2)
{
  return geo::ZilchMapModelSearch::completed(*(geo::ZilchMapModelSearch **)(a1 + 32), a2);
}

uint64_t __copy_helper_block_ea8_48c40_ZTSNSt3__110shared_ptrIN3geo7MapEdgeEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(result + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(result + 56) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t __destroy_helper_block_ea8_48c40_ZTSNSt3__110shared_ptrIN3geo7MapEdgeEEE(uint64_t a1)
{
  return std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100](a1 + 48);
}

void geo::ZilchFindJunctionSearch::~ZilchFindJunctionSearch(id *this)
{
  geo::ZilchMapModelSearch::~ZilchMapModelSearch(this);
  JUMPOUT(0x18D76437CLL);
}

intptr_t ___ZN3geo19ZilchMapModelSearch6cancelEv_block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  objc_msgSend(*(id *)(v1 + 8), "cancel");
  v2 = *(void **)(v1 + 8);
  *(_QWORD *)(v1 + 8) = 0;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v1 + 32));
}

_QWORD *std::shared_ptr<std::vector<zilch::GeoCoordinates>>::shared_ptr[abi:ne180100]<std::vector<zilch::GeoCoordinates>,void>(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = (_QWORD *)operator new();
  *v4 = &unk_1E1BFB838;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_188DB3720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  a10 = 0;
  if (v10)
    std::default_delete<zilch::MessageData>::operator()[abi:ne180100]((uint64_t)&a10, v10);
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates>>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates>,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates>>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates>,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__on_zero_shared(uint64_t a1)
{
  std::default_delete<zilch::MessageData>::operator()[abi:ne180100](a1 + 24, *(_QWORD *)(a1 + 24));
}

uint64_t std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates>>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates>,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL GEORouteHypothesisRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  GEOMapItemStorage *v23;
  void *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (!v5[*v8])
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 36) |= 1u;
            v20 = *v6;
            v21 = *(_QWORD *)&v5[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(_QWORD *)&v5[*v7])
            {
              v22 = *(_QWORD *)(*(_QWORD *)&v5[*v9] + v21);
              *(_QWORD *)&v5[v20] = v21 + 8;
            }
            else
            {
              v5[*v8] = 1;
              v22 = 0;
            }
            v34 = 8;
            goto LABEL_46;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_50;
            v23 = objc_alloc_init(GEOMapItemStorage);
            if (!GEOMapItemStorageReadAllFrom((uint64_t)v23, v5, a3))
            {

              goto LABEL_50;
            }
            PBReaderRecallMark();
            v24 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v23;

LABEL_47:
            if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
              goto LABEL_48;
            break;
          case 3u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (2)
            {
              v28 = *v6;
              v29 = *(_QWORD *)&v5[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v29);
                *(_QWORD *)&v5[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v17 = v26++ >= 9;
                  if (v17)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_41;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v27) = 0;
LABEL_41:
            *(_DWORD *)(a1 + 32) = v27;
            goto LABEL_47;
          case 4u:
            *(_BYTE *)(a1 + 36) |= 2u;
            v32 = *v6;
            v33 = *(_QWORD *)&v5[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)&v5[*v7])
            {
              v22 = *(_QWORD *)(*(_QWORD *)&v5[*v9] + v33);
              *(_QWORD *)&v5[v32] = v33 + 8;
            }
            else
            {
              v5[*v8] = 1;
              v22 = 0;
            }
            v34 = 24;
LABEL_46:
            *(_QWORD *)(a1 + v34) = v22;
            goto LABEL_47;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_50;
            goto LABEL_47;
        }
      }
    }
LABEL_48:
    v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_188DB42E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteHypothesisRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteHypothesisRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DB4340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteHypothesisRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 4u:
          if (v16 != 1)
            goto LABEL_42;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_38;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_38;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapItemStorageIsValid(a1))
            goto LABEL_42;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_42;
          v21 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_42:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v22 = *v2;
        v23 = *(_QWORD *)&a1[v22];
        v24 = v23 + 1;
        if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
          break;
        v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
        *(_QWORD *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8)
          continue;
        goto LABEL_39;
      }
      v14 = *v4;
LABEL_38:
      a1[v14] = 1;
LABEL_39:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void GEORouteHypothesisRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id *v8;

  if (a3
    && objc_msgSend(a1, "hasDestinationLocation")
    && (objc_msgSend(a1, "destinationLocation"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "destinationLocation");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id *)objc_msgSend(v7, "copy");

    GEOMapItemStorageClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setDestinationLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "destinationLocation");
    v8 = (id *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEORouteHypothesisRequestHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "destinationLocation");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188DB4E38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteHypothesisResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  int *v17;
  BOOL v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEODirectionsResponse *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  _BOOL4 v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        if (v14)
          v18 = 1;
        else
          v18 = v15 == 0;
        v54 = v18;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        v47 = 1;
        goto LABEL_88;
      }
      if (!v15)
        goto LABEL_89;
      while (1)
      {
        v50 = *v15++;
        v49 = v50;
        if (v50 == 1)
          break;
        if (v49 == 2)
        {
          v48 = 4;
LABEL_79:
          *(_BYTE *)(a1 + 52) |= v48;
        }
        else if (!v49)
        {
          goto LABEL_89;
        }
      }
      v48 = 2;
      goto LABEL_79;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v54)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v8 & 1) != 0)
      {
        *(_BYTE *)(a1 + 52) |= 1u;
        v39 = *v17;
        v40 = *(_QWORD *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v41 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v41 = 0;
        }
        *(_QWORD *)(a1 + 32) = v41;
        goto LABEL_69;
      }
      goto LABEL_59;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 != 1)
    {
      v43 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v43)
        goto LABEL_84;
      goto LABEL_69;
    }
    if (v32)
    {
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v53 = v16;
        v37 = objc_alloc_init(GEODirectionsResponse);
        if (!GEODirectionsResponseReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
          goto LABEL_86;
        PBReaderRecallMark();
        v38 = 16;
LABEL_56:
        v42 = *(void **)(a1 + v38);
        *(_QWORD *)(a1 + v38) = v37;

        --v7;
        v16 = v53;
LABEL_66:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_69;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v45 = *(_BYTE *)(a1 + 52) << 6;
LABEL_65:
      v7 += v45 >> 7;
      goto LABEL_66;
    }
LABEL_59:
    v44 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v44 & 1) == 0)
    {
LABEL_84:
      v47 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v7)
      v46 = 1;
    else
      v46 = v16;
    if ((v46 & 1) == 0)
      goto LABEL_73;
  }
  if (!v32)
    goto LABEL_59;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_85:
      v47 = 0;
      goto LABEL_87;
    }
    v45 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v53 = v16;
  v37 = objc_alloc_init(GEOETAResponse);
  if (GEOETAResponseReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v38 = 24;
    goto LABEL_56;
  }
LABEL_86:

  v47 = 0;
  v16 = v53;
LABEL_87:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v47 & 1) != 0)
  {
LABEL_89:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_90;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_90:
      v51 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188DB54A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DB59D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteHypothesisResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteHypothesisResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteHypothesisResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteHypothesisResponseReadAllFrom_initialTag;
  Specified = GEORouteHypothesisResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188DB5B8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteHypothesisResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteHypothesisResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DB5BEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteHypothesisResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1)
          goto LABEL_38;
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (v21 = v20 + 8, v21 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v19] = v21;
        else
          a1[v14] = 1;
      }
      else
      {
        if ((_DWORD)v18 == 2)
        {
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETAResponseIsValid(a1))
          {
LABEL_38:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_32;
        }
        if ((_DWORD)v18 == 1)
        {
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsResponseIsValid(a1))
            goto LABEL_38;
LABEL_32:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_38;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188DB5FBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteHypothesisResponseIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((GEODirectionsResponseIsDirty(*(os_unfair_lock_s **)(a1 + 16)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 4) != 0)
    return (uint64_t)GEOETAResponseIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEORouteHypothesisResponseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteHypothesisResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORouteHypothesisResponseClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  id v13;

  if (!a3)
  {
    objc_msgSend(a1, "directionsResponse");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

LABEL_10:
    objc_msgSend(a1, "etaResponse");
    v13 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "clearSensitiveFields:", a2);
    goto LABEL_11;
  }
  if (objc_msgSend(a1, "hasDirectionsResponse")
    && (objc_msgSend(a1, "directionsResponse"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEODirectionsResponseHasSensitiveFields(v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "directionsResponse");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v7, "copy");

    GEODirectionsResponseClearSensitiveFields((uint64_t)v8, a2, 0);
    objc_msgSend(a1, "setDirectionsResponse:", v8);
  }
  else
  {
    objc_msgSend(a1, "directionsResponse");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasEtaResponse"))
    goto LABEL_10;
  objc_msgSend(a1, "etaResponse");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = GEOETAResponseHasSensitiveFields((uint64_t)v10);

  if (!v11)
    goto LABEL_10;
  objc_msgSend(a1, "etaResponse");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (id)objc_msgSend(v12, "copy");

  GEOETAResponseClearSensitiveFields((id *)v13, a2, 0);
  objc_msgSend(a1, "setEtaResponse:", v13);
LABEL_11:

}

uint64_t GEORouteHypothesisResponseHasSensitiveFields(void *a1)
{
  void *v2;
  uint64_t HasSensitiveFields;
  void *v4;

  if (!a1)
    return 0;
  objc_msgSend(a1, "directionsResponse");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEODirectionsResponseHasSensitiveFields(v2) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "etaResponse");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOETAResponseHasSensitiveFields((uint64_t)v4);

  }
  return HasSensitiveFields;
}

void sub_188DB6564(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DB7268(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_188DB7494(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_188DB8558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOGetKeyBagLog()
{
  if (qword_1ECDBBCD8 != -1)
    dispatch_once(&qword_1ECDBBCD8, &__block_literal_global_37_1);
  return (id)qword_1ECDBBCD0;
}

void sub_188DB9380(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  GEOMapRegion *v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  __int16 v73;
  int v74;
  __int16 v75;
  void *v76;
  int v78;
  int *v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFBFFF9FFFAFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v80 = v16 & ~(_BYTE)v11 | v9;
        v81 = v7;
        v82 = v16 | v11 | v80;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v83 = (v17 == 0) | v16 | v11;
        v84 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_123;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_123:
      v78 = 1;
      goto LABEL_124;
    }
    v31 = v23 >> 3;
    v32 = v84;
    if ((v83 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_141;
        v73 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_120;
      case 2:
        if (!v32)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v73 = *(_WORD *)(a1 + 92) << 7;
LABEL_120:
          v8 += v73 >> 15;
          goto LABEL_121;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v42 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v43 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v42;
LABEL_76:

          --v8;
LABEL_121:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
          if (!(v82 & 1 | (v8 != 0)))
            goto LABEL_123;
          continue;
        }

LABEL_141:
        v78 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_124:
        v79 = &OBJC_IVAR___GEOLPRRestrictionRegion__name;
        if ((v80 & 1) != 0)
LABEL_125:
          *(_WORD *)(a1 + v79[839]) |= 0x10u;
        if (v84 & 1 | ((v78 & 1) == 0))
        {
          *(_WORD *)(a1 + v79[839]) |= 0x40u;
          *(_WORD *)(a1 + v79[839]) |= 0x100u;
          *(_WORD *)(a1 + v79[839]) |= 0x80u;
          *(_WORD *)(a1 + v79[839]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v74 = *v17++;
            v75 = 64;
            switch(v74)
            {
              case 0:
                goto LABEL_134;
              case 1:
                goto LABEL_133;
              case 2:
                v75 = 256;
                goto LABEL_133;
              case 5:
                v75 = 128;
                goto LABEL_133;
              case 6:
                v75 = 32;
LABEL_133:
                *(_WORD *)(a1 + v79[839]) |= v75;
                break;
              default:
                continue;
            }
          }
        }
LABEL_134:
        if (v78)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v84 & 1) != 0)
        {
          v76 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v81 & 1) == 0)
          goto LABEL_93;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                v46 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v46 = 0;
LABEL_98:
        v72 = 24;
        goto LABEL_111;
      case 4:
        if ((v81 & 1) == 0)
          goto LABEL_93;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_WORD *)(a1 + 92) |= 4u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v28 = v52++ >= 9;
              if (v28)
              {
                LODWORD(v53) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v53) = 0;
LABEL_102:
        *(_DWORD *)(a1 + 84) = v53;
        goto LABEL_122;
      case 5:
        if (!v32)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 92) & 0x80) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_141;
        v73 = *(_WORD *)(a1 + 92) << 8;
        goto LABEL_120;
      case 6:
        if (!v32)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
LABEL_75:
          v43 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_141;
        v73 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_120;
      case 7:
        if ((v81 & 1) == 0)
          goto LABEL_93;
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_WORD *)(a1 + 92) |= 8u;
        while (2)
        {
          v61 = *v18;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v28 = v59++ >= 9;
              if (v28)
              {
                v60 = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v60 = 0;
LABEL_106:
        *(_BYTE *)(a1 + 88) = v60 != 0;
        goto LABEL_122;
      case 8:
        if ((v81 & 1) == 0)
          goto LABEL_93;
        v65 = 0;
        v66 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          v67 = *v18;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v46 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              v28 = v66++ >= 9;
              if (v28)
              {
                v46 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v46 = 0;
LABEL_110:
        v72 = 40;
LABEL_111:
        *(_QWORD *)(a1 + v72) = v46;
        goto LABEL_122;
      default:
        if ((v80 & 1) == 0 || (*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
LABEL_93:
          v71 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v71 & 1) == 0)
          {
            v78 = 0;
            goto LABEL_124;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v78 = 0;
            v79 = &OBJC_IVAR___GEOLPRRestrictionRegion__name;
            goto LABEL_125;
          }
        }
        goto LABEL_122;
    }
  }
}

void sub_188DB9E00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBA024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBA168(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBABB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBCompanionSubscriptionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBCompanionSubscriptionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBCompanionSubscriptionReadAllFrom_initialTag;
  Specified = GEOPBCompanionSubscriptionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188DBAD54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBCompanionSubscriptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DBADB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_66;
          goto LABEL_44;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_66;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 5u:
          if (v15 == 2)
            goto LABEL_44;
          goto LABEL_66;
        case 6u:
          if (v15 == 2)
            goto LABEL_44;
          goto LABEL_66;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v33 = 0;
          break;
        default:
LABEL_44:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_66:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_188DBB38C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_WORD *)(a1 + 92) & 0x3E0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_188DBB810(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBBCF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBBF88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionsInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPBOfflineTileMetadata *v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  int v52;
  char v53;
  char v54;
  int v55;
  int v56;
  void *v57;
  int v59;
  int *v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v61 = v17 & ~(_BYTE)v12 | v10;
        v62 = v17 | v12 | v61;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v63 = (v18 == 0) | v17 | v12;
        v64 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_83;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_83:
      v59 = 1;
      goto LABEL_84;
    }
    v32 = v24 >> 3;
    v33 = v64;
    if ((v63 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((int)v32 > 2)
    {
      if ((_DWORD)v32 == 3)
      {
        if ((v8 & 1) != 0)
        {
          *(_BYTE *)(a1 + 64) |= 1u;
          v47 = *v19;
          v48 = *(_QWORD *)(v3 + v47);
          if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(_QWORD *)(v3 + *v7))
          {
            v49 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v48);
            *(_QWORD *)(v3 + v47) = v48 + 8;
          }
          else
          {
            *(_BYTE *)(v3 + *v20) = 1;
            v49 = 0;
          }
          *(_QWORD *)(a1 + 32) = v49;
          goto LABEL_72;
        }
        goto LABEL_71;
      }
      if ((_DWORD)v32 == 100)
      {
        if ((v8 & 1) != 0)
        {
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_BYTE *)(a1 + 64) |= 2u;
          while (1)
          {
            v43 = *v19;
            v44 = *(_QWORD *)(v3 + v43);
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v7))
              break;
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if ((v46 & 0x80) == 0)
              goto LABEL_75;
            v40 += 7;
            v29 = v41++ >= 9;
            if (v29)
            {
              v42 = 0;
              goto LABEL_77;
            }
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_75:
          if (*(_BYTE *)(v3 + *v20))
            v42 = 0;
LABEL_77:
          *(_BYTE *)(a1 + 60) = v42 != 0;
          goto LABEL_72;
        }
        goto LABEL_71;
      }
LABEL_65:
      if ((v61 & 1) != 0 && (*(_BYTE *)(a1 + 64) & 4) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v51 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v50;

        }
        v52 = PBUnknownFieldAdd();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        if (!v52)
        {
          v59 = 0;
          v60 = &OBJC_IVAR___GEOLPRRestrictionRegion__name;
          goto LABEL_85;
        }
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    if ((_DWORD)v32 == 1)
      break;
    if ((_DWORD)v32 != 2)
      goto LABEL_65;
    if (v33)
    {
      if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_104;
        v9 += *(unsigned __int8 *)(a1 + 64) << 27 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_104;
        v38 = objc_alloc_init(GEOPBOfflineTileMetadata);
        if (!GEOPBOfflineTileMetadataReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_103;
        PBReaderRecallMark();
        v39 = *(void **)(a1 + 40);
        *(_QWORD *)(a1 + 40) = v38;

        --v9;
      }
      goto LABEL_80;
    }
LABEL_71:
    v53 = PBReaderSkipValueWithTag();
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if ((v53 & 1) == 0)
    {
      v59 = 0;
      goto LABEL_84;
    }
LABEL_72:
    if (!(v62 & 1 | (v9 != 0)))
      goto LABEL_83;
  }
  if (!v33 || (*(_BYTE *)(a1 + 64) & 8) != 0)
    goto LABEL_71;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_104;
  v38 = objc_alloc_init(GEOPBCompanionSubscription);
  if (GEOPBCompanionSubscriptionReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
  {
    PBReaderRecallMark();
    -[GEOPBCompanionSubscriptionsInfo _addNoFlagsLoadedSubscription:](a1, v38);

LABEL_80:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_72;
  }
LABEL_103:

LABEL_104:
  v59 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
  v60 = &OBJC_IVAR___GEOLPRRestrictionRegion__name;
  if ((v61 & 1) == 0)
    goto LABEL_86;
LABEL_85:
  *(_BYTE *)(a1 + v60[853]) |= 4u;
LABEL_86:
  if (v64 & 1 | ((v59 & 1) == 0))
  {
    *(_BYTE *)(a1 + v60[853]) |= 8u;
    *(_BYTE *)(a1 + v60[853]) |= 0x10u;
    goto LABEL_96;
  }
  if (v18)
  {
    while (1)
    {
      v56 = *v18++;
      v55 = v56;
      if (v56 == 1)
        break;
      if (v55 == 2)
      {
        v54 = 16;
LABEL_92:
        *(_BYTE *)(a1 + v60[853]) |= v54;
      }
      else if (!v55)
      {
        goto LABEL_96;
      }
    }
    v54 = 8;
    goto LABEL_92;
  }
LABEL_96:
  if (v59)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v64 & 1) != 0)
  {
    v57 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188DBC95C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBD33C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBCompanionSubscriptionsInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPBCompanionSubscriptionsInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBCompanionSubscriptionsInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBCompanionSubscriptionsInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBCompanionSubscriptionsInfoReadAllFrom_initialTag;
  Specified = GEOPBCompanionSubscriptionsInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBCompanionSubscriptionsInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188DBD5C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBCompanionSubscriptionsInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBCompanionSubscriptionsInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DBD628(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionsInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_48;
      v18 = v8 >> 3;
      if ((int)(v8 >> 3) <= 2)
        break;
      if ((_DWORD)v18 != 3)
      {
        if ((_DWORD)v18 == 100)
        {
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            if (v23 < 0 && v19++ <= 8)
              continue;
            goto LABEL_47;
          }
          v14 = *v4;
LABEL_46:
          a1[v14] = 1;
          goto LABEL_47;
        }
LABEL_43:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_50;
        goto LABEL_47;
      }
      if (v16 != 1)
        goto LABEL_50;
      v25 = *v2;
      v26 = *(_QWORD *)&a1[v25];
      if (v26 > 0xFFFFFFFFFFFFFFF7)
        goto LABEL_46;
      v27 = v26 + 8;
      if (v27 > *(_QWORD *)&a1[*v3])
        goto LABEL_46;
      *(_QWORD *)&a1[v25] = v27;
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((_DWORD)v18 == 1)
    {
      if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBCompanionSubscriptionIsValid(a1))
      {
LABEL_50:
        PBReaderRecallMark();
        return 0;
      }
      goto LABEL_38;
    }
    if ((_DWORD)v18 == 2)
    {
      if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBOfflineTileMetadataIsValid(a1))
        goto LABEL_50;
LABEL_38:
      PBReaderRecallMark();
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_48:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188DBDB50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBCompanionSubscriptionsInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188DBE0C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBE53C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBE9E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBOfflineDataConfigurationReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  int *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  GEOPBOfflineTileMetadata *v58;
  void *v59;
  char v60;
  uint64_t v61;
  int v62;
  char v63;
  void *v64;
  int v66;
  int *v67;
  char v68;
  char v69;
  char v70;
  char v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 108)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v68 = v17 & ~(_BYTE)v12 | v10;
        v69 = v17 | v12 | v68;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v70 = (v18 == 0) | v17 | v12;
        v71 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v23 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_92;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v7))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_92:
      v66 = 1;
      goto LABEL_93;
    }
    v34 = v26 >> 3;
    v35 = v71;
    if ((v70 & 1) == 0)
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(_BYTE *)(a1 + 108) & 8) != 0)
          goto LABEL_76;
        v40 = v21;
        if (!PBReaderPlaceMark())
          goto LABEL_110;
        -[GEOPBOfflineDataConfiguration _reserveActiveVersions:](a1, 1uLL);
        if ((GEOPBOfflineDataLayerVersionReadAllFrom(*(_QWORD *)(a1 + 24) + 24 * *(_QWORD *)(a1 + v40[585]), v3) & 1) == 0)
          goto LABEL_110;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + v40[585]);
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v21 = v40;
        goto LABEL_90;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_76;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 108) |= 1u;
        while (2)
        {
          v47 = *v19;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v31 = v45++ >= 9;
              if (v31)
              {
                v46 = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v46 = 0;
LABEL_81:
        v61 = 72;
        goto LABEL_86;
      case 3:
        if (!v35 || (*(_BYTE *)(a1 + 108) & 0x10) != 0)
          goto LABEL_76;
        v51 = v23;
        if (!PBReaderPlaceMark())
          goto LABEL_110;
        -[GEOPBOfflineDataConfiguration _reserveLatestAvailableVersions:](a1, 1uLL);
        if ((GEOPBOfflineDataLayerVersionReadAllFrom(*(_QWORD *)(a1 + 48) + 24 * *(_QWORD *)(a1 + v51[589]), v3) & 1) == 0)
          goto LABEL_110;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + v51[589]);
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v23 = v51;
        goto LABEL_91;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_76;
        v52 = 0;
        v53 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 108) |= 2u;
        while (2)
        {
          v54 = *v19;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v46 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v31 = v53++ >= 9;
              if (v31)
              {
                v46 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v46 = 0;
LABEL_85:
        v61 = 80;
LABEL_86:
        *(_QWORD *)(a1 + v61) = v46;
        goto LABEL_91;
      case 5:
        if (!v35)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 108) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v8 += *(unsigned __int8 *)(a1 + 108) << 26 >> 31;
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v58 = objc_alloc_init(GEOPBOfflineTileMetadata);
        if (GEOPBOfflineTileMetadataReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          v59 = *(void **)(a1 + 88);
          *(_QWORD *)(a1 + 88) = v58;

          --v8;
LABEL_89:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_90:
          v23 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          goto LABEL_91;
        }

LABEL_110:
        v66 = 0;
        v67 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
        if ((v68 & 1) != 0)
LABEL_95:
          *(_BYTE *)(a1 + v67[583]) |= 4u;
        if (v71 & 1 | ((v66 & 1) == 0))
        {
          *(_BYTE *)(a1 + v67[583]) |= 8u;
          *(_BYTE *)(a1 + v67[583]) |= 0x10u;
          *(_BYTE *)(a1 + v67[583]) |= 0x20u;
        }
        else if (v18)
        {
          while (1)
          {
            v62 = *v18++;
            v63 = 8;
            switch(v62)
            {
              case 0:
                goto LABEL_103;
              case 1:
                goto LABEL_102;
              case 3:
                v63 = 16;
                goto LABEL_102;
              case 5:
                v63 = 32;
LABEL_102:
                *(_BYTE *)(a1 + v67[583]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_103:
        if (v66)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v71 & 1) != 0)
        {
          v64 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v68 & 1) == 0 || (*(_BYTE *)(a1 + 108) & 4) != 0)
        {
LABEL_76:
          v60 = PBReaderSkipValueWithTag();
          v23 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v60 & 1) == 0)
          {
            v66 = 0;
LABEL_93:
            v67 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          v23 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          if (!v43)
          {
            v66 = 0;
            v67 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_95;
          }
        }
LABEL_91:
        if (!(v69 & 1 | (v8 != 0)))
          goto LABEL_92;
        continue;
    }
  }
}

void sub_188DBF494(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBF74C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DBFCDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBOfflineDataConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflineDataConfigurationReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 96) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 100) = objc_msgSend(v6, "length");
      Specified = GEOPBOfflineDataConfigurationReadSpecified(a1, (uint64_t)v6, GEOPBOfflineDataConfigurationReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_188DBFF18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC0194(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC03C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (2)
      {
        if (!v3[*v6])
        {
          v8 = 0;
          v9 = 0;
          v10 = 0;
          while (1)
          {
            v11 = *v4;
            v12 = *(_QWORD *)&v3[v11];
            v13 = v12 + 1;
            if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
              break;
            v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
            *(_QWORD *)&v3[v11] = v13;
            v10 |= (unint64_t)(v14 & 0x7F) << v8;
            if ((v14 & 0x80) == 0)
              goto LABEL_13;
            v8 += 7;
            v15 = v9++ >= 9;
            if (v15)
            {
              v10 = 0;
              v16 = v3[*v6];
              goto LABEL_15;
            }
          }
          v3[*v6] = 1;
LABEL_13:
          v16 = v3[*v6];
          if (v3[*v6])
            v10 = 0;
LABEL_15:
          if (v16)
            v17 = 1;
          else
            v17 = (v10 & 7) == 4;
          if (!v17)
          {
            switch((v10 >> 3))
            {
              case 1u:
                *(_BYTE *)(a1 + 40) |= 1u;
                v18 = *v4;
                v19 = *(_QWORD *)&v3[v18];
                if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
                {
                  v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
                  *(_QWORD *)&v3[v18] = v19 + 8;
                }
                else
                {
                  v3[*v6] = 1;
                  v20 = 0;
                }
                *(_QWORD *)(a1 + 16) = v20;
                goto LABEL_54;
              case 2u:
                objc_msgSend((id)a1, "resetFilter");
                v23 = 0;
                v24 = 0;
                v25 = 0;
                while (2)
                {
                  v26 = *v4;
                  v27 = *(_QWORD *)&v3[v26];
                  v28 = v27 + 1;
                  if (v27 == -1 || v28 > *(_QWORD *)&v3[*v5])
                  {
                    v3[*v6] = 1;
                  }
                  else
                  {
                    v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v27);
                    *(_QWORD *)&v3[v26] = v28;
                    v25 |= (unint64_t)(v29 & 0x7F) << v23;
                    if (v29 < 0)
                    {
                      v23 += 7;
                      v15 = v24++ >= 9;
                      if (v15)
                      {
                        LODWORD(v25) = 0;
                        goto LABEL_46;
                      }
                      continue;
                    }
                  }
                  break;
                }
                if (v3[*v6])
                  LODWORD(v25) = 0;
LABEL_46:
                *(_DWORD *)(a1 + 32) = v25;
                *(_QWORD *)(a1 + 48) = 1;
LABEL_54:
                if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
                  goto LABEL_55;
                continue;
              case 3u:
                objc_msgSend((id)a1, "resetFilter");
                v30 = 0;
                v31 = 0;
                v32 = 0;
                break;
              case 4u:
                objc_msgSend((id)a1, "resetFilter");
                PBReaderReadString();
                v37 = objc_claimAutoreleasedReturnValue();
                v38 = *(void **)(a1 + 24);
                *(_QWORD *)(a1 + 24) = v37;

                if (*(_QWORD *)(a1 + 24))
                {
                  v39 = 3;
LABEL_51:
                  *(_QWORD *)(a1 + 48) = v39;
                }
                goto LABEL_54;
              default:
                if (!*(_QWORD *)(a1 + 8))
                {
                  v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
                  v22 = *(void **)(a1 + 8);
                  *(_QWORD *)(a1 + 8) = v21;

                }
                if (!PBUnknownFieldAdd())
                  goto LABEL_56;
                goto LABEL_54;
            }
            while (1)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
                break;
              v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
              *(_QWORD *)&v3[v33] = v35;
              v32 |= (unint64_t)(v36 & 0x7F) << v30;
              if ((v36 & 0x80) == 0)
                goto LABEL_48;
              v30 += 7;
              v15 = v31++ >= 9;
              if (v15)
              {
                LODWORD(v32) = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6])
              LODWORD(v32) = 0;
LABEL_50:
            *(_DWORD *)(a1 + 36) = v32;
            v39 = 2;
            goto LABEL_51;
          }
        }
        break;
      }
    }
LABEL_55:
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_56:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_188DC1A28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFilterReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOActiveResourceFilterReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DC1A88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1)
            goto LABEL_48;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_42;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_42;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_45;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v27 = 0;
          break;
        case 4u:
          if (v16 == 2 && (PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          goto LABEL_48;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_48:
          v32 = 0;
          goto LABEL_47;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_45;
      }
LABEL_41:
      v14 = *v4;
LABEL_42:
      a1[v14] = 1;
LABEL_45:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v32;
}

BOOL GEOActiveResourceFiltersReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOActiveResourceFilter *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOActiveResourceFilter);
          if (!GEOActiveResourceFilterReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addFilter:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188DC2C2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFiltersReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOActiveResourceFiltersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DC2C8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveResourceFiltersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOActiveResourceFilterIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188DC37E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC3D0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC404C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC438C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC44DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC462C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC477C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC48CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC4A1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC4B6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC4CBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC4E0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC4F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC50AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC51FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC534C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC549C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC55EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC573C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC588C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC5B58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC5CA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC5E58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC6198(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC64D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC6818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC6B58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC6E98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC71D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC7518(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC785C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC7BA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC7EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC8030(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC8180(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC82D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC8698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC8B00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC8C50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC8DA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC9A80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC9BD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC9D20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC9E70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DC9FC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCA110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCA260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCA3B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCA4FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCA64C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCA9E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCAB38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCAE04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DCB0D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOActiveTileGroupCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _BYTE v102[128];
  _BYTE v103[128];
  _BYTE v104[128];
  _BYTE v105[128];
  _BYTE v106[128];
  _BYTE v107[128];
  _BYTE v108[128];
  _BYTE v109[128];
  _BYTE v110[128];
  _BYTE v111[128];
  _BYTE v112[128];
  uint64_t v113;

  v113 = *MEMORY[0x1E0C80C00];
  v98 = 0u;
  v99 = 0u;
  v100 = 0u;
  v101 = 0u;
  v2 = a1[69];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v98, v112, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v99;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v99 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v98 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v98, v112, 16);
    }
    while (v4);
  }

  v96 = 0u;
  v97 = 0u;
  v94 = 0u;
  v95 = 0u;
  v7 = a1[18];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v94, v111, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v95;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v95 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v94 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v94, v111, 16);
    }
    while (v9);
  }

  v92 = 0u;
  v93 = 0u;
  v90 = 0u;
  v91 = 0u;
  v12 = a1[52];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v90, v110, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v91;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v91 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v90 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v90, v110, 16);
    }
    while (v14);
  }

  v88 = 0u;
  v89 = 0u;
  v86 = 0u;
  v87 = 0u;
  v17 = a1[51];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v86, v109, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v87;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v87 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v86 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v86, v109, 16);
    }
    while (v19);
  }

  objc_msgSend(a1[72], "readAll:", 1);
  v84 = 0u;
  v85 = 0u;
  v82 = 0u;
  v83 = 0u;
  v22 = a1[37];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v82, v108, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v83;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v83 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v82 + 1) + 8 * v26++), "readAll:", 1);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v82, v108, 16);
    }
    while (v24);
  }

  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  v27 = a1[13];
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v78, v107, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v79;
    do
    {
      v31 = 0;
      do
      {
        if (*(_QWORD *)v79 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v78 + 1) + 8 * v31++), "readAll:", 1);
      }
      while (v29 != v31);
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v78, v107, 16);
    }
    while (v29);
  }

  v76 = 0u;
  v77 = 0u;
  v74 = 0u;
  v75 = 0u;
  v32 = a1[54];
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v74, v106, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v75;
    do
    {
      v36 = 0;
      do
      {
        if (*(_QWORD *)v75 != v35)
          objc_enumerationMutation(v32);
        objc_msgSend(*(id *)(*((_QWORD *)&v74 + 1) + 8 * v36++), "readAll:", 1);
      }
      while (v34 != v36);
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v74, v106, 16);
    }
    while (v34);
  }

  v72 = 0u;
  v73 = 0u;
  v70 = 0u;
  v71 = 0u;
  v37 = a1[64];
  v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v70, v105, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v71;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v71 != v40)
          objc_enumerationMutation(v37);
        objc_msgSend(*(id *)(*((_QWORD *)&v70 + 1) + 8 * v41++), "readAll:", 1);
      }
      while (v39 != v41);
      v39 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v70, v105, 16);
    }
    while (v39);
  }

  objc_msgSend(a1[25], "readAll:", 1);
  objc_msgSend(a1[71], "readAll:", 1);
  v68 = 0u;
  v69 = 0u;
  v66 = 0u;
  v67 = 0u;
  v42 = a1[41];
  v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v66, v104, 16);
  if (v43)
  {
    v44 = v43;
    v45 = *(_QWORD *)v67;
    do
    {
      v46 = 0;
      do
      {
        if (*(_QWORD *)v67 != v45)
          objc_enumerationMutation(v42);
        objc_msgSend(*(id *)(*((_QWORD *)&v66 + 1) + 8 * v46++), "readAll:", 1);
      }
      while (v44 != v46);
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v66, v104, 16);
    }
    while (v44);
  }

  v64 = 0u;
  v65 = 0u;
  v62 = 0u;
  v63 = 0u;
  v47 = a1[28];
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v62, v103, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v63;
    do
    {
      v51 = 0;
      do
      {
        if (*(_QWORD *)v63 != v50)
          objc_enumerationMutation(v47);
        objc_msgSend(*(id *)(*((_QWORD *)&v62 + 1) + 8 * v51++), "readAll:", 1);
      }
      while (v49 != v51);
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v62, v103, 16);
    }
    while (v49);
  }

  v60 = 0u;
  v61 = 0u;
  v58 = 0u;
  v59 = 0u;
  v52 = a1[31];
  v53 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v58, v102, 16);
  if (v53)
  {
    v54 = v53;
    v55 = *(_QWORD *)v59;
    do
    {
      v56 = 0;
      do
      {
        if (*(_QWORD *)v59 != v55)
          objc_enumerationMutation(v52);
        objc_msgSend(*(id *)(*((_QWORD *)&v58 + 1) + 8 * v56++), "readAll:", 1, (_QWORD)v58);
      }
      while (v54 != v56);
      v54 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v58, v102, 16);
    }
    while (v54);
  }

  return objc_msgSend(a1[42], "readAll:", 1);
}

uint64_t GEOActiveTileGroupReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOActiveTileGroupReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DD0C28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOActiveTileGroupIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  char v44;
  char v45;
  char v46;
  unsigned int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  int v53;
  int v54;
  char v55;
  unsigned int v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  int v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int v73;
  BOOL v74;
  uint64_t v75;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
LABEL_294:
    if (a1[*v4])
      v74 = 1;
    else
      v74 = v5 == 0;
    v75 = !v74;
    PBReaderRecallMark();
    return v75;
  }
  v5 = 0;
  v6 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_294;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      v14 = v8++ >= 9;
      if (v14)
      {
        v9 = 0;
        v15 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v15 = a1[*v4];
    if (a1[*v4])
      v9 = 0;
LABEL_14:
    v16 = v9 & 7;
    if (v15 || v16 == 4)
      goto LABEL_294;
    switch((v9 >> 3))
    {
      case 1u:
        if (v5 || (v9 & 7) != 0)
          goto LABEL_301;
        v18 = 0;
        do
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
          {
            v5 = 1;
            a1[*v4] = 1;
            goto LABEL_270;
          }
          v22 = *(char *)(*(_QWORD *)&a1[*v6] + v20);
          *(_QWORD *)&a1[v19] = v21;
          v5 = 1;
          if ((v22 & 0x80000000) == 0)
            break;
          v23 = v18++ > 8;
        }
        while (!v23);
        goto LABEL_270;
      case 2u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOActiveTileSetIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 3u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 4u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 6u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 7u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceTileIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 8u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceRegionIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 9u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0xBu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0xFu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x10u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x12u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x13u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x15u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x16u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x17u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x18u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x19u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x1Au:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x1Bu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x1Cu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x1Du:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x23u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x24u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x26u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x27u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x28u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOVersionManifestIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x29u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x2Au:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x2Bu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x2Cu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x2Du:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x2Eu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x2Fu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x30u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x31u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x32u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x33u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x34u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x35u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x36u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x37u:
        if ((v9 & 7) != 0)
          goto LABEL_301;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v28 = *(char *)(*(_QWORD *)&a1[*v6] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_270;
        }
      case 0x38u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x39u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x44u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x45u:
      case 0x62u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x46u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceSetIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x47u:
        if ((v9 & 7) != 0)
          goto LABEL_301;
        v29 = 0;
        while (1)
        {
          v30 = *v2;
          v31 = *(_QWORD *)&a1[v30];
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v33 = *(char *)(*(_QWORD *)&a1[*v6] + v31);
          *(_QWORD *)&a1[v30] = v32;
          if (v33 < 0)
          {
            v23 = v29++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_270;
        }
      case 0x48u:
        if (v16 != 2)
        {
          if ((v9 & 7) != 0)
            goto LABEL_301;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v37 = *(char *)(*(_QWORD *)&a1[*v6] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v38 = v16++;
              if (v38 <= 8)
                continue;
            }
            goto LABEL_270;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_301;
LABEL_274:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v64 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v65 = *v2;
            v66 = *(_QWORD *)&a1[v65];
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
              break;
            v68 = *(char *)(*(_QWORD *)&a1[*v6] + v66);
            *(_QWORD *)&a1[v65] = v67;
            if (v68 < 0)
            {
              v14 = v64++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_274;
          }
          a1[*v4] = 1;
        }
        goto LABEL_269;
      case 0x49u:
        if (v16 != 2)
        {
          if ((v9 & 7) != 0)
            goto LABEL_301;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              break;
            v42 = *(char *)(*(_QWORD *)&a1[*v6] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v43 = v16++;
              if (v43 <= 8)
                continue;
            }
            goto LABEL_270;
          }
LABEL_166:
          a1[*v4] = 1;
          goto LABEL_270;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_301;
LABEL_284:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v69 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v70 = *v2;
            v71 = *(_QWORD *)&a1[v70];
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)&a1[*v3])
              break;
            v73 = *(char *)(*(_QWORD *)&a1[*v6] + v71);
            *(_QWORD *)&a1[v70] = v72;
            if (v73 < 0)
            {
              v14 = v69++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_284;
          }
          a1[*v4] = 1;
        }
        goto LABEL_269;
      case 0x4Au:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOStaleResourceIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x4Bu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEODataSetDescriptionIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x4Eu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x4Fu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x50u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x51u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x53u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x54u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x55u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x57u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x5Bu:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x5Du:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x5Eu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOURLInfoSetIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x5Fu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOMuninBucketIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x60u:
        if (v16 == 2)
          goto LABEL_204;
        goto LABEL_301;
      case 0x61u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEODisplayStringIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x63u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOOfflineMetadataIsValid(a1))
          goto LABEL_301;
        goto LABEL_269;
      case 0x64u:
        if (v16 != 2 || !PBReaderPlaceMark() || *(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_301;
        v44 = 0;
        v45 = 0;
        while (2)
        {
          if (a1[*v4])
            goto LABEL_267;
          v46 = 0;
          v47 = 0;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              break;
            v52 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v50);
            *(_QWORD *)&a1[v49] = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0)
              goto LABEL_227;
            v46 += 7;
            v14 = v47++ >= 9;
            if (v14)
            {
              v48 = 0;
              v53 = a1[*v4];
              goto LABEL_229;
            }
          }
          a1[*v4] = 1;
LABEL_227:
          v53 = a1[*v4];
          if (a1[*v4])
            v48 = 0;
LABEL_229:
          if (v53)
            goto LABEL_267;
          v54 = v48 & 7;
          if ((v48 >> 3) == 2)
          {
            if (v54 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_301;
            v45 = 1;
          }
          else if ((v48 >> 3) == 1)
          {
            if (v54 != 2)
              goto LABEL_301;
            v44 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_301;
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_301;
          }
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_267;
          continue;
        }
      case 0x65u:
        if (v16 != 2 || !PBReaderPlaceMark() || *(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_301;
        v44 = 0;
        v45 = 0;
LABEL_245:
        if (a1[*v4])
          goto LABEL_267;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        while (1)
        {
          v58 = *v2;
          v59 = *(_QWORD *)&a1[v58];
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
            break;
          v61 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v59);
          *(_QWORD *)&a1[v58] = v60;
          v57 |= (unint64_t)(v61 & 0x7F) << v55;
          if ((v61 & 0x80) == 0)
            goto LABEL_254;
          v55 += 7;
          v14 = v56++ >= 9;
          if (v14)
          {
            v57 = 0;
            v62 = a1[*v4];
            goto LABEL_256;
          }
        }
        a1[*v4] = 1;
LABEL_254:
        v62 = a1[*v4];
        if (a1[*v4])
          v57 = 0;
LABEL_256:
        if (v62)
        {
LABEL_267:
          if ((v44 & 1) == 0 || (v45 & 1) == 0)
            goto LABEL_301;
LABEL_269:
          PBReaderRecallMark();
LABEL_270:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_294;
          continue;
        }
        v63 = v57 & 7;
        if ((v57 >> 3) != 2)
        {
          if ((v57 >> 3) == 1)
          {
            if (v63 != 2)
              goto LABEL_301;
            v44 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_301;
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_301;
          }
LABEL_266:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_267;
          goto LABEL_245;
        }
        if (v63 == 2 && (PBReaderSkipValueWithTag() & 1) != 0)
        {
          v45 = 1;
          goto LABEL_266;
        }
LABEL_301:
        PBReaderRecallMark();
        return 0;
      default:
LABEL_204:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_301;
        goto LABEL_270;
    }
  }
}

BOOL GEOActiveTileSetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  BOOL v18;
  int v19;
  unint64_t v20;
  BOOL v21;
  int v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  unint64_t v26;
  BOOL v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  _BOOL4 v75;
  _BOOL8 v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v78 = 0;
  v79 = 0;
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v75 = 0;
  }
  else
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_144;
          goto LABEL_98;
        case 3u:
          v17 = 0;
          v18 = 1;
          while (1)
          {
            v19 = *((_DWORD *)&v78 + v17);
            if (!v19)
              break;
            if (v19 != 3)
            {
              v18 = v17++ < 3;
              if (v17 != 4)
                continue;
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v17) = 3;
          if (!v18 || v15)
            goto LABEL_144;
          v55 = 0;
          while (1)
          {
            v56 = *v2;
            v57 = *(_QWORD *)&a1[v56];
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v59 = *(char *)(*(_QWORD *)&a1[*v5] + v57);
            *(_QWORD *)&a1[v56] = v58;
            if (v59 < 0)
            {
              v34 = v55++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 4u:
          v20 = 0;
          v21 = 1;
          while (1)
          {
            v22 = *((_DWORD *)&v78 + v20);
            if (!v22)
              break;
            if (v22 != 4)
            {
              v21 = v20++ < 3;
              if (v20 != 4)
                continue;
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v20) = 4;
          if (!v21 || v15)
            goto LABEL_144;
          v60 = 0;
          while (1)
          {
            v61 = *v2;
            v62 = *(_QWORD *)&a1[v61];
            v63 = v62 + 1;
            if (v62 == -1 || v63 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v64 = *(char *)(*(_QWORD *)&a1[*v5] + v62);
            *(_QWORD *)&a1[v61] = v63;
            if (v64 < 0)
            {
              v34 = v60++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 5u:
          v23 = 0;
          v24 = 1;
          while (1)
          {
            v25 = *((_DWORD *)&v78 + v23);
            if (!v25)
              break;
            if (v25 != 5)
            {
              v24 = v23++ < 3;
              if (v23 != 4)
                continue;
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v23) = 5;
          if (!v24 || v15)
            goto LABEL_144;
          v65 = 0;
          while (1)
          {
            v66 = *v2;
            v67 = *(_QWORD *)&a1[v66];
            v68 = v67 + 1;
            if (v67 == -1 || v68 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v69 = *(char *)(*(_QWORD *)&a1[*v5] + v67);
            *(_QWORD *)&a1[v66] = v68;
            if (v69 < 0)
            {
              v34 = v65++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 6u:
          v26 = 0;
          v27 = 1;
          while (1)
          {
            v28 = *((_DWORD *)&v78 + v26);
            if (!v28)
              break;
            if (v28 != 6)
            {
              v27 = v26++ < 3;
              if (v26 != 4)
                continue;
            }
            goto LABEL_144;
          }
          *((_DWORD *)&v78 + v26) = 6;
          if (!v27 || v15)
          {
LABEL_144:
            PBReaderRecallMark();
            return 0;
          }
          v70 = 0;
          while (1)
          {
            v71 = *v2;
            v72 = *(_QWORD *)&a1[v71];
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)&a1[*v3])
              break;
            v74 = *(char *)(*(_QWORD *)&a1[*v5] + v72);
            *(_QWORD *)&a1[v71] = v73;
            if (v74 < 0)
            {
              v34 = v70++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
LABEL_136:
          a1[*v4] = 1;
LABEL_137:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_138;
          break;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_144;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v34 = v29++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1))
            goto LABEL_144;
          goto LABEL_72;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOSentinelTileIsValid(a1))
            goto LABEL_144;
          goto LABEL_72;
        case 0xAu:
          if (v15 == 2)
            goto LABEL_98;
          goto LABEL_144;
        case 0xBu:
          if (v15 == 2)
            goto LABEL_98;
          goto LABEL_144;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_144;
          v35 = 0;
          while (1)
          {
            v36 = *v2;
            v37 = *(_QWORD *)&a1[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v39 = *(char *)(*(_QWORD *)&a1[*v5] + v37);
            *(_QWORD *)&a1[v36] = v38;
            if (v39 < 0)
            {
              v34 = v35++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCountryRegionTupleIsValid(a1))
            goto LABEL_144;
LABEL_72:
          PBReaderRecallMark();
          goto LABEL_137;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_144;
          v40 = 0;
          while (1)
          {
            v41 = *v2;
            v42 = *(_QWORD *)&a1[v41];
            v43 = v42 + 1;
            if (v42 == -1 || v43 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v44 = *(char *)(*(_QWORD *)&a1[*v5] + v42);
            *(_QWORD *)&a1[v41] = v43;
            if (v44 < 0)
            {
              v34 = v40++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_144;
          v45 = 0;
          while (1)
          {
            v46 = *v2;
            v47 = *(_QWORD *)&a1[v46];
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v49 = *(char *)(*(_QWORD *)&a1[*v5] + v47);
            *(_QWORD *)&a1[v46] = v48;
            if (v49 < 0)
            {
              v34 = v45++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_144;
          v50 = 0;
          while (1)
          {
            v51 = *v2;
            v52 = *(_QWORD *)&a1[v51];
            v53 = v52 + 1;
            if (v52 == -1 || v53 > *(_QWORD *)&a1[*v3])
              goto LABEL_136;
            v54 = *(char *)(*(_QWORD *)&a1[*v5] + v52);
            *(_QWORD *)&a1[v51] = v53;
            if (v54 < 0)
            {
              v34 = v50++ > 8;
              if (!v34)
                continue;
            }
            goto LABEL_137;
          }
        case 0x12u:
          if (v15 == 2)
            goto LABEL_98;
          goto LABEL_144;
        default:
LABEL_98:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_144;
          goto LABEL_137;
      }
    }
LABEL_138:
    v75 = HIDWORD(v79) != 0;
  }
  if (a1[*v4])
    v76 = 0;
  else
    v76 = v75;
  PBReaderRecallMark();
  return v76;
}

BOOL GEORegionalResourceTileIsValid(char *a1)
{
  _BOOL4 v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = 0;
  v40 = 0;
  v3 = (int *)MEMORY[0x1E0D82BF0];
  v39 = 0;
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v5])
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v3;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v15 = a1[*v5];
          goto LABEL_14;
        }
      }
      a1[*v5] = 1;
LABEL_12:
      v15 = a1[*v5];
      if (a1[*v5])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v9 >> 3))
      {
        case 1u:
          v18 = v39;
          if ((_DWORD)v39)
          {
            if ((_DWORD)v39 == 1)
              goto LABEL_84;
            if (HIDWORD(v39))
            {
              if (HIDWORD(v39) == 1 || v40)
                goto LABEL_84;
              v18 = 2;
            }
            else
            {
              v18 = 1;
            }
          }
          *((_DWORD *)&v39 + v18) = 1;
          if (v16)
            goto LABEL_84;
          v21 = 0;
          while (1)
          {
            v22 = *v3;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v4])
              goto LABEL_77;
            v25 = *(char *)(*(_QWORD *)&a1[*v6] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_78;
          }
        case 2u:
          v19 = v39;
          if (!(_DWORD)v39)
            goto LABEL_60;
          if ((_DWORD)v39 == 2)
            goto LABEL_84;
          if (HIDWORD(v39))
          {
            if (HIDWORD(v39) == 2 || v40)
              goto LABEL_84;
            v19 = 2;
          }
          else
          {
            v19 = 1;
          }
LABEL_60:
          *((_DWORD *)&v39 + v19) = 2;
          if (v16)
            goto LABEL_84;
          v27 = 0;
          while (1)
          {
            v28 = *v3;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v4])
              goto LABEL_77;
            v31 = *(char *)(*(_QWORD *)&a1[*v6] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_78;
          }
        case 3u:
          v20 = v39;
          if (!(_DWORD)v39)
            goto LABEL_69;
          if ((_DWORD)v39 == 3)
            goto LABEL_84;
          if (HIDWORD(v39))
          {
            if (HIDWORD(v39) == 3 || v40)
            {
LABEL_84:
              PBReaderRecallMark();
              return 0;
            }
            v20 = 2;
          }
          else
          {
            v20 = 1;
          }
LABEL_69:
          *((_DWORD *)&v39 + v20) = 3;
          if (v16)
            goto LABEL_84;
          v32 = 0;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v4])
              break;
            v36 = *(char *)(*(_QWORD *)&a1[*v6] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_78;
          }
LABEL_77:
          a1[*v5] = 1;
LABEL_78:
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4])
            goto LABEL_79;
          break;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORegionalResourceTileIsValid(a1))
            goto LABEL_84;
          goto LABEL_46;
        case 5u:
          if (v16 == 2)
            goto LABEL_48;
          goto LABEL_84;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1))
            goto LABEL_84;
LABEL_46:
          PBReaderRecallMark();
          goto LABEL_78;
        case 7u:
          if (v16 == 2)
            goto LABEL_48;
          goto LABEL_84;
        default:
LABEL_48:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_84;
          goto LABEL_78;
      }
    }
LABEL_79:
    v2 = v40 != 0;
  }
  if (a1[*v5])
    v37 = 0;
  else
    v37 = v2;
  PBReaderRecallMark();
  return v37;
}

BOOL GEORegionalResourceRegionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTileSetRegionIsValid(a1))
            goto LABEL_28;
          goto LABEL_33;
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1))
            goto LABEL_33;
LABEL_28:
          PBReaderRecallMark();
          goto LABEL_31;
        case 4u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_32;
          break;
      }
    }
  }
LABEL_32:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORegionalResourceSetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTileSetRegionIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOStaleResourceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1)
          goto LABEL_34;
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (v21 = v20 + 8, v21 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v19] = v21;
        else
          a1[v14] = 1;
      }
      else if ((_DWORD)v18 == 2 || (_DWORD)v18 == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOResourceIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188DD410C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOActiveTileGroupIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _BYTE v68[128];
  _BYTE v69[128];
  _BYTE v70[128];
  _BYTE v71[128];
  _BYTE v72[128];
  _BYTE v73[128];
  _BYTE v74[128];
  _BYTE v75[128];
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 616));
  v2 = *(_QWORD *)(a1 + 632);
  if (v2 & 0xFFF7EFE7FD3FFFF8 | *(_BYTE *)(a1 + 640) & 0x7D)
    return 1;
  if ((*(_BYTE *)(a1 + 640) & 2) == 0)
  {
LABEL_5:
    if ((v2 & 0x8101802C00000) != 0)
      return 1;
    if (v2 < 0)
    {
      v66 = 0u;
      v67 = 0u;
      v64 = 0u;
      v65 = 0u;
      v5 = *(id *)(a1 + 552);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v75, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v65;
LABEL_11:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v65 != v8)
            objc_enumerationMutation(v5);
          if (GEOActiveTileSetIsDirty(*(_QWORD *)(*((_QWORD *)&v64 + 1) + 8 * v9)))
            goto LABEL_89;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v75, 16);
            if (v7)
              goto LABEL_11;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 632);
    }
    if ((v2 & 0x1000) != 0)
    {
      v62 = 0u;
      v63 = 0u;
      v60 = 0u;
      v61 = 0u;
      v5 = *(id *)(a1 + 144);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v74, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v61;
LABEL_21:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v61 != v12)
            objc_enumerationMutation(v5);
          if (GEOAttributionIsDirty(*(_QWORD *)(*((_QWORD *)&v60 + 1) + 8 * v13)))
            goto LABEL_89;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v74, 16);
            if (v11)
              goto LABEL_21;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 632);
    }
    if ((v2 & 0x400000000000) != 0)
    {
      v58 = 0u;
      v59 = 0u;
      v56 = 0u;
      v57 = 0u;
      v5 = *(id *)(a1 + 416);
      v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v73, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v57;
LABEL_31:
        v17 = 0;
        while (1)
        {
          if (*(_QWORD *)v57 != v16)
            objc_enumerationMutation(v5);
          if ((GEORegionalResourceTileIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v56 + 1) + 8 * v17)) & 1) != 0)
            goto LABEL_89;
          if (v15 == ++v17)
          {
            v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v73, 16);
            if (v15)
              goto LABEL_31;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 632);
    }
    if ((v2 & 0x200000000000) != 0)
    {
      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      v5 = *(id *)(a1 + 408);
      v18 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v72, 16);
      if (v18)
      {
        v19 = v18;
        v20 = *(_QWORD *)v53;
LABEL_41:
        v21 = 0;
        while (1)
        {
          if (*(_QWORD *)v53 != v20)
            objc_enumerationMutation(v5);
          if (GEORegionalResourceRegionIsDirty(*(_QWORD *)(*((_QWORD *)&v52 + 1) + 8 * v21)))
            goto LABEL_89;
          if (v19 == ++v21)
          {
            v19 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v72, 16);
            if (v19)
              goto LABEL_41;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 632);
    }
    if ((v2 & 0x80) != 0)
    {
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      v5 = *(id *)(a1 + 104);
      v22 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v71, 16);
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)v49;
LABEL_51:
        v25 = 0;
        while (1)
        {
          if (*(_QWORD *)v49 != v24)
            objc_enumerationMutation(v5);
          if ((GEOResourceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v48 + 1) + 8 * v25)) & 1) != 0)
            goto LABEL_89;
          if (v23 == ++v25)
          {
            v23 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v71, 16);
            if (v23)
              goto LABEL_51;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 632);
    }
    if ((v2 & 0x1000000000000) != 0)
    {
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      v5 = *(id *)(a1 + 432);
      v26 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v70, 16);
      if (v26)
      {
        v27 = v26;
        v28 = *(_QWORD *)v45;
LABEL_61:
        v29 = 0;
        while (1)
        {
          if (*(_QWORD *)v45 != v28)
            objc_enumerationMutation(v5);
          if ((GEORegionalResourceSetIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v44 + 1) + 8 * v29)) & 1) != 0)
            goto LABEL_89;
          if (v27 == ++v29)
          {
            v27 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v70, 16);
            if (v27)
              goto LABEL_61;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 632);
    }
    if ((v2 & 0x400000000000000) != 0)
    {
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
      v5 = *(id *)(a1 + 512);
      v30 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v69, 16);
      if (v30)
      {
        v31 = v30;
        v32 = *(_QWORD *)v41;
LABEL_71:
        v33 = 0;
        while (1)
        {
          if (*(_QWORD *)v41 != v32)
            objc_enumerationMutation(v5);
          if ((GEOStaleResourceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v40 + 1) + 8 * v33)) & 1) != 0)
            goto LABEL_89;
          if (v31 == ++v33)
          {
            v31 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v69, 16);
            if (v31)
              goto LABEL_71;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 632);
    }
    if ((v2 & 0x2000000) == 0)
      return 0;
    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v5 = *(id *)(a1 + 248);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v68, 16);
    if (!v3)
    {
LABEL_90:

      return v3;
    }
    v34 = *(_QWORD *)v37;
LABEL_82:
    v35 = 0;
    while (1)
    {
      if (*(_QWORD *)v37 != v34)
        objc_enumerationMutation(v5);
      if ((GEOResourceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v36 + 1) + 8 * v35)) & 1) != 0)
        break;
      if (v3 == ++v35)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v68, 16);
        if (v3)
          goto LABEL_82;
        goto LABEL_90;
      }
    }
LABEL_89:
    v3 = 1;
    goto LABEL_90;
  }
  if (!GEOURLInfoSetIsDirty(*(_QWORD *)(a1 + 568)))
  {
    v2 = *(_QWORD *)(a1 + 632);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOActiveTileGroupIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOActiveTileGroupIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 154);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DD7118(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DD9644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileGroupReservedReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188DDA370(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileGroupReservedReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOActiveTileGroupReservedReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DDA3D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileGroupReservedIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_188DDC1CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOActiveTileSetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 80);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 56);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

uint64_t GEOActiveTileSetReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOActiveTileSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DDF6F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSentinelTileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  _BOOL4 v31;
  _BOOL8 v32;
  _QWORD v34[2];

  v34[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v34[0] = 0;
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v31 = 0;
  }
  else
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        v21 = 0;
        v22 = 1;
        while (1)
        {
          v23 = v22;
          v24 = *((_DWORD *)v34 + v21);
          if (!v24)
            break;
          if (v24 != 1)
          {
            v22 = 0;
            v21 = 1;
            if ((v23 & 1) != 0)
              continue;
          }
          goto LABEL_49;
        }
        *((_DWORD *)v34 + v21) = 1;
        if (v15)
        {
LABEL_49:
          PBReaderRecallMark();
          return 0;
        }
        v25 = 0;
        while (1)
        {
          v26 = *v2;
          v27 = *(_QWORD *)&a1[v26];
          v28 = v27 + 1;
          if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
            break;
          v29 = *(char *)(*(_QWORD *)&a1[*v5] + v27);
          *(_QWORD *)&a1[v26] = v28;
          if (v29 < 0 && v25++ <= 8)
            continue;
          goto LABEL_33;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((v8 >> 3) == 2)
        {
          v17 = 0;
          v18 = 1;
          while (1)
          {
            v19 = v18;
            v20 = *((_DWORD *)v34 + v17);
            if (!v20)
              break;
            if (v20 != 2)
            {
              v18 = 0;
              v17 = 1;
              if ((v19 & 1) != 0)
                continue;
            }
            goto LABEL_49;
          }
          *((_DWORD *)v34 + v17) = 2;
          if (v15 != 2)
            goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_49;
      }
LABEL_33:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
    v31 = HIDWORD(v34[0]) != 0;
  }
  if (a1[*v4])
    v32 = 0;
  else
    v32 = v31;
  PBReaderRecallMark();
  return v32;
}

void sub_188DDFF40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActiveTileSetIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = (*(_WORD *)(a1 + 144) & 0x3FC0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_188DE08CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE0FB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODownloadMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v55 = v15 | v8;
        v56 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v57 = (v17 == 0) | v16;
        v58 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_69;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *v19;
        v30 = *(unsigned __int8 *)(v3 + v29);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *v19;
    v30 = *(unsigned __int8 *)(v3 + v29);
    if (*(_BYTE *)(v3 + v29))
      v23 = 0;
LABEL_25:
    if (v30 || (v23 & 7) == 4)
    {
LABEL_69:
      v53 = 1;
      goto LABEL_70;
    }
    v32 = v23 >> 3;
    v33 = v58;
    if ((v57 & 1) == 0)
    {
      v34 = v17;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_57;
        v38 = *v18;
        v39 = *(_QWORD *)(v3 + v38);
        if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v40 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v39);
          *(_QWORD *)(v3 + v38) = v39 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + v29) = 1;
          v40 = 0;
        }
        *(_QWORD *)(a1 + 40) = v40;
        goto LABEL_68;
      case 2:
        if (!v33)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_85;
        v48 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_65;
      case 3:
        if (!v33)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_85;
        v48 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_65;
      case 4:
        if (!v33)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 24;
LABEL_56:
          v46 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
LABEL_68:
          if (!(v56 & 1 | (v10 != 0)))
            goto LABEL_69;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v48 = *(_BYTE *)(a1 + 68) << 6;
LABEL_65:
          v10 += v48 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_68;
        }
LABEL_85:
        v53 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
        v54 = &OBJC_IVAR___GEOLPRRestrictionRegion__name;
        if ((v55 & 1) != 0)
LABEL_71:
          *(_BYTE *)(a1 + v54[980]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(_BYTE *)(a1 + v54[980]) |= 4u;
          *(_BYTE *)(a1 + v54[980]) |= 8u;
          *(_BYTE *)(a1 + v54[980]) |= 2u;
        }
        else if (v17)
        {
          while (1)
          {
            v49 = *v17++;
            v50 = 4;
            switch(v49)
            {
              case 0:
                goto LABEL_79;
              case 2:
                goto LABEL_78;
              case 3:
                v50 = 8;
                goto LABEL_78;
              case 4:
                v50 = 2;
LABEL_78:
                *(_BYTE *)(a1 + v54[980]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_79:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v58)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_57:
          v47 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEOLPRRestrictionRegion__name;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

unint64_t GEODownloadMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODownloadMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODownloadMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODownloadMetadataReadAllFrom_initialTag;
  Specified = GEODownloadMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188DE1F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODownloadMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODownloadMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DE1FA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODownloadMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  BOOL v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_36;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v15 = *v4;
          v16 = a1[v15];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v15 = *v4;
      v16 = a1[v15];
      if (a1[v15])
        v9 = 0;
LABEL_14:
      v17 = v9 & 7;
      if (v16 || v17 == 4)
        goto LABEL_36;
      switch((v9 >> 3))
      {
        case 1u:
          v19 = 0;
          if (!v5 && v17 == 1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && (v22 = v21 + 8, v22 <= *(_QWORD *)&a1[*v3]))
            {
              *(_QWORD *)&a1[v20] = v22;
              v5 = 1;
            }
            else
            {
              v5 = 1;
              a1[v15] = 1;
            }
            goto LABEL_32;
          }
          goto LABEL_42;
        case 2u:
          if (v17 != 2)
            goto LABEL_43;
          goto LABEL_31;
        case 3u:
          if (v17 == 2)
            goto LABEL_31;
          goto LABEL_43;
        case 4u:
          if (v17 != 2)
            goto LABEL_43;
LABEL_31:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_43:
            v19 = 0;
            goto LABEL_42;
          }
LABEL_32:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_36;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_43;
          goto LABEL_32;
      }
    }
  }
  v5 = 0;
LABEL_36:
  if (a1[*v4])
    v23 = 1;
  else
    v23 = v5 == 0;
  v19 = !v23;
LABEL_42:
  PBReaderRecallMark();
  return v19;
}

BOOL GEODownloadMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188DE2680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE28BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceRegionReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  int *v20;
  _BOOL4 v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  id v41;
  void *v42;
  GEOAttribution *v43;
  int v44;
  int v45;
  char v46;
  void *v47;
  char v49;
  int v50;

  v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
    v6 = (int *)MEMORY[0x1E0D82BD8];
    *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
    objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFDFFFEFFFFFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1));
    while (2)
    {
      v13 = 1;
      v14 = 1;
      v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          v8 = 1;
          goto LABEL_7;
        case -2:
          v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          v16 = v12 > 2;
          v17 = v16 & ~(_DWORD)v11 | v9;
          v18 = v16 | v11;
          if ((((v16 | v11) | v8) & 1) != 0)
            v19 = 0;
          else
            v19 = a3;
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v21 = v7 != 0;
          v22 = 1;
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_70;
          v49 = v17;
          v50 = v21 | v18 | v17;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          break;
        default:
          ++v12;
LABEL_7:
          v13 = v9;
LABEL_8:
          v14 = v10;
          v15 = v11;
LABEL_10:
          ++v7;
          v9 = v13;
          v10 = v14;
          v11 = v15;
          continue;
      }
      break;
    }
    while (!*(_BYTE *)(v3 + *v23))
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      while (1)
      {
        v28 = *v20;
        v29 = *(_QWORD *)(v3 + v28);
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
        *(_QWORD *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0)
          goto LABEL_25;
        v25 += 7;
        if (v26++ >= 9)
        {
          v27 = 0;
          v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
      v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(_BYTE *)(v3 + *v23))
        v27 = 0;
LABEL_27:
      if (v33 || (v27 & 7) == 4)
        break;
      v35 = v27 >> 3;
      v36 = v18;
      if (!((v19 == 0) | v18 & 1))
      {
        v37 = v19;
        do
        {
          v39 = *v37++;
          v38 = v39;
          v36 = v39 != 0;
          if (v39)
            v40 = v38 == (_DWORD)v35;
          else
            v40 = 1;
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 1:
          if (!v36 || (*(_BYTE *)(a1 + 84) & 2) != 0)
            goto LABEL_66;
          if (!PBReaderPlaceMark())
            goto LABEL_88;
          -[GEORegionalResourceRegion _reserveTileRanges:](a1, 1uLL);
          if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(_QWORD *)(a1 + 24) + 24 * *(_QWORD *)(a1 + 32)), v3))
            goto LABEL_88;
          PBReaderRecallMark();
          ++*(_QWORD *)(a1 + 32);
          goto LABEL_64;
        case 2:
          if (!v36 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
            goto LABEL_66;
          PBReaderReadString();
          v43 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
          if (v43)
            -[GEORegionalResourceRegion _addNoFlagsIcon:](a1, v43);
          goto LABEL_63;
        case 3:
          if (!v36 || (*(_BYTE *)(a1 + 84) & 4) != 0)
            goto LABEL_66;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_88;
          v43 = objc_alloc_init(GEOAttribution);
          if (!GEOAttributionReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          {

LABEL_88:
            v22 = 0;
            goto LABEL_69;
          }
          PBReaderRecallMark();
          -[GEORegionalResourceRegion _addNoFlagsAttribution:](a1, v43);
LABEL_63:

          goto LABEL_64;
        case 4:
          if (!v36 || (*(_BYTE *)(a1 + 84) & 8) != 0)
            goto LABEL_66;
          PBReaderReadString();
          v43 = (GEOAttribution *)objc_claimAutoreleasedReturnValue();
          if (v43)
            -[GEORegionalResourceRegion _addNoFlagsIconChecksum:](a1, v43);
          goto LABEL_63;
        default:
          if ((v49 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
          {
LABEL_66:
            v44 = PBReaderSkipValueWithTag();
            if ((v44 & v50 & 1) == 0)
            {
              v22 = v44;
              goto LABEL_69;
            }
          }
          else
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v42 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v41;

            }
            if (!PBUnknownFieldAdd())
            {
              v22 = 0;
              goto LABEL_71;
            }
LABEL_64:
            if ((v50 & 1) == 0)
              goto LABEL_68;
          }
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_68;
          break;
      }
    }
LABEL_68:
    v22 = 1;
LABEL_69:
    LOBYTE(v17) = v49;
LABEL_70:
    if ((v17 & 1) != 0)
LABEL_71:
      *(_BYTE *)(a1 + 84) |= 1u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(_BYTE *)(a1 + 84) |= 2u;
      *(_BYTE *)(a1 + 84) |= 0x10u;
      *(_BYTE *)(a1 + 84) |= 4u;
      *(_BYTE *)(a1 + 84) |= 8u;
    }
    else if (v19)
    {
      while (1)
      {
        v45 = *v19++;
        v46 = 2;
        switch(v45)
        {
          case 0:
            goto LABEL_80;
          case 1:
            goto LABEL_79;
          case 2:
            v46 = 16;
            goto LABEL_79;
          case 3:
            v46 = 4;
            goto LABEL_79;
          case 4:
            v46 = 8;
LABEL_79:
            *(_BYTE *)(a1 + 84) |= v46;
            break;
          default:
            continue;
        }
      }
    }
LABEL_80:
    if (v22)
    {
      v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
      if ((v18 & 1) == 0)
        return v3;
      goto LABEL_84;
    }
    v3 = 0;
    if ((v18 & 1) != 0)
    {
LABEL_84:
      v47 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188DE33B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE36E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE3A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE46D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceRegionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

uint64_t GEORegionalResourceRegionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORegionalResourceRegionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORegionalResourceRegionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORegionalResourceRegionReadAllFrom_initialTag;
  Specified = GEORegionalResourceRegionReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORegionalResourceRegionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188DE4960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceRegionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORegionalResourceRegionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DE49C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE4D84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORegionalResourceRegionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_BYTE *)(a1 + 84) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_188DE539C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE5870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceSetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

uint64_t GEORegionalResourceSetReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORegionalResourceSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DE676C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE69E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORegionalResourceSetIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(_BYTE *)(a1 + 68) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 4) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOResourceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORegionalResourceSetIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORegionalResourceSetIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DE6F24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE7264(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE7614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORegionalResourceTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  int *v20;
  _BOOL4 v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  GEORegionalResourceTile *v62;
  uint64_t v63;
  int v64;
  char v65;
  void *v66;
  char v68;
  char v69;
  int v70;
  char v71;

  v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
    v6 = (int *)MEMORY[0x1E0D82BD8];
    *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
    objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 80)), (uint16x4_t)0xFFFDFFFFFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 80) & 1));
    while (2)
    {
      v13 = 1;
      v14 = 1;
      v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          v8 = 1;
          goto LABEL_7;
        case -2:
          v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          v16 = v12 > 2;
          v17 = v16 & ~(_DWORD)v11 | v9;
          v18 = v16 | v11;
          if ((((v16 | v11) | v8) & 1) != 0)
            v19 = 0;
          else
            v19 = a3;
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v21 = v7 != 0;
          v22 = 1;
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_107;
          v68 = v17;
          v70 = v21 | v18 | v17;
          v71 = (v19 == 0) | v18;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v69 = v16 | v11;
          break;
        default:
          ++v12;
LABEL_7:
          v13 = v9;
LABEL_8:
          v14 = v10;
          v15 = v11;
LABEL_10:
          ++v7;
          v9 = v13;
          v10 = v14;
          v11 = v15;
          continue;
      }
      break;
    }
    while (!*(_BYTE *)(v3 + *v23))
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      while (1)
      {
        v28 = *v20;
        v29 = *(_QWORD *)(v3 + v28);
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
        *(_QWORD *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0)
          goto LABEL_25;
        v25 += 7;
        v32 = v26++ >= 9;
        if (v32)
        {
          v27 = 0;
          v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
      v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(_BYTE *)(v3 + *v23))
        v27 = 0;
LABEL_27:
      if (v33 || (v27 & 7) == 4)
        break;
      v35 = v27 >> 3;
      v36 = v18;
      if ((v71 & 1) == 0)
      {
        v37 = v19;
        do
        {
          v39 = *v37++;
          v38 = v39;
          v36 = v39 != 0;
          if (v39)
            v40 = v38 == (_DWORD)v35;
          else
            v40 = 1;
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 1:
          if ((v8 & 1) == 0)
            goto LABEL_88;
          v41 = 0;
          v42 = 0;
          v43 = 0;
          while (1)
          {
            v44 = *v20;
            v45 = *(_QWORD *)(v3 + v44);
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
              break;
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if ((v47 & 0x80) == 0)
              goto LABEL_91;
            v41 += 7;
            v32 = v42++ >= 9;
            if (v32)
            {
              LODWORD(v43) = 0;
              goto LABEL_93;
            }
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_91:
          if (*(_BYTE *)(v3 + *v23))
            LODWORD(v43) = 0;
LABEL_93:
          v63 = 68;
          goto LABEL_102;
        case 2:
          if ((v8 & 1) == 0)
            goto LABEL_88;
          v50 = 0;
          v51 = 0;
          v43 = 0;
          while (2)
          {
            v52 = *v20;
            v53 = *(_QWORD *)(v3 + v52);
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v23) = 1;
            }
            else
            {
              v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v53);
              *(_QWORD *)(v3 + v52) = v54;
              v43 |= (unint64_t)(v55 & 0x7F) << v50;
              if (v55 < 0)
              {
                v50 += 7;
                v32 = v51++ >= 9;
                if (v32)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v23))
            LODWORD(v43) = 0;
LABEL_97:
          v63 = 72;
          goto LABEL_102;
        case 3:
          if ((v8 & 1) == 0)
            goto LABEL_88;
          v56 = 0;
          v57 = 0;
          v43 = 0;
          while (2)
          {
            v58 = *v20;
            v59 = *(_QWORD *)(v3 + v58);
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v23) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v59);
              *(_QWORD *)(v3 + v58) = v60;
              v43 |= (unint64_t)(v61 & 0x7F) << v56;
              if (v61 < 0)
              {
                v56 += 7;
                v32 = v57++ >= 9;
                if (v32)
                {
                  LODWORD(v43) = 0;
                  goto LABEL_101;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v23))
            LODWORD(v43) = 0;
LABEL_101:
          v63 = 76;
LABEL_102:
          *(_DWORD *)(a1 + v63) = v43;
          goto LABEL_103;
        case 4:
          if (!v36 || (*(_BYTE *)(a1 + 80) & 4) != 0)
            goto LABEL_88;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_124;
          v62 = objc_alloc_init(GEORegionalResourceTile);
          if (!GEORegionalResourceTileReadAllFrom())
            goto LABEL_123;
          PBReaderRecallMark();
          -[GEORegionalResourceTile _addNoFlagsChildren:](a1, v62);
          goto LABEL_87;
        case 5:
          if (!v36 || (*(_BYTE *)(a1 + 80) & 0x10) != 0)
            goto LABEL_88;
          PBReaderReadString();
          v62 = (GEORegionalResourceTile *)objc_claimAutoreleasedReturnValue();
          if (v62)
            -[GEORegionalResourceTile _addNoFlagsIcon:](a1, v62);
          goto LABEL_87;
        case 6:
          if (!v36 || (*(_BYTE *)(a1 + 80) & 2) != 0)
            goto LABEL_88;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_124;
          v62 = objc_alloc_init(GEOAttribution);
          if (!GEOAttributionReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
          {
LABEL_123:

LABEL_124:
            v22 = 0;
            LOBYTE(v18) = v69;
            goto LABEL_106;
          }
          PBReaderRecallMark();
          -[GEORegionalResourceTile _addNoFlagsAttribution:](a1, v62);
LABEL_87:

          LOBYTE(v18) = v69;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_103:
          if ((v70 & 1) == 0)
            goto LABEL_105;
LABEL_104:
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_105;
          break;
        case 7:
          if (!v36 || (*(_BYTE *)(a1 + 80) & 8) != 0)
            goto LABEL_88;
          PBReaderReadString();
          v62 = (GEORegionalResourceTile *)objc_claimAutoreleasedReturnValue();
          if (v62)
            -[GEORegionalResourceTile _addNoFlagsIconChecksum:](a1, v62);
          goto LABEL_87;
        default:
          if ((v68 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 1) != 0)
          {
LABEL_88:
            v22 = PBReaderSkipValueWithTag();
            v23 = (int *)MEMORY[0x1E0D82BC8];
            LOBYTE(v18) = v69;
            if ((v22 & v70 & 1) == 0)
              goto LABEL_106;
            goto LABEL_104;
          }
          if (!*(_QWORD *)(a1 + 16))
          {
            v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v49 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v48;

          }
          v22 = PBUnknownFieldAdd();
          LOBYTE(v18) = v69;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v22)
            goto LABEL_108;
          goto LABEL_103;
      }
    }
LABEL_105:
    v22 = 1;
LABEL_106:
    LOBYTE(v17) = v68;
LABEL_107:
    if ((v17 & 1) != 0)
LABEL_108:
      *(_BYTE *)(a1 + 80) |= 1u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(_BYTE *)(a1 + 80) |= 4u;
      *(_BYTE *)(a1 + 80) |= 0x10u;
      *(_BYTE *)(a1 + 80) |= 2u;
      *(_BYTE *)(a1 + 80) |= 8u;
    }
    else if (v19)
    {
      while (1)
      {
        v64 = *v19++;
        v65 = 4;
        switch(v64)
        {
          case 0:
            goto LABEL_117;
          case 4:
            goto LABEL_116;
          case 5:
            v65 = 16;
            goto LABEL_116;
          case 6:
            v65 = 2;
            goto LABEL_116;
          case 7:
            v65 = 8;
LABEL_116:
            *(_BYTE *)(a1 + 80) |= v65;
            break;
          default:
            continue;
        }
      }
    }
LABEL_117:
    if (v22)
    {
      v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
      if ((v18 & 1) == 0)
        return v3;
      goto LABEL_121;
    }
    v3 = 0;
    if ((v18 & 1) != 0)
    {
LABEL_121:
      v66 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188DE812C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE8460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE8794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE9648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceTileCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEORegionalResourceTileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORegionalResourceTileReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORegionalResourceTileReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORegionalResourceTileReadAllFrom_initialTag;
  Specified = GEORegionalResourceTileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORegionalResourceTileCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188DE9970(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORegionalResourceTileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORegionalResourceTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DE99D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DE9DFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORegionalResourceTileIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(_BYTE *)(a1 + 80) & 0x3E) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 80) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOAttributionIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORegionalResourceTileIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORegionalResourceTileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DEA604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DEABA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DEAFF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DEB324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORegionalResourceTileDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEORegionalResourceTileDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORegionalResourceTileDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DEBEDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORegionalResourceTileDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_31;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_31;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 != 2)
      {
        if ((_DWORD)v17 == 1 && v15 != 2)
          goto LABEL_32;
        goto LABEL_29;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOAttributionIsValid(a1))
      {
LABEL_32:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_30:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_31;
    }
    if (v15 != 2)
      goto LABEL_32;
LABEL_29:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_32;
    goto LABEL_30;
  }
LABEL_31:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEORegionalResourceTileDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188DEC65C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DECA8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOResourceManifestDownloadReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOResources *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v52 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v40 = objc_alloc_init(GEOResources);
        if (!GEOResourcesReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_84;
        PBReaderRecallMark();
        v41 = 32;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v47 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v52 = 0;
      v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v47 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v40 = objc_alloc_init(GEODownloadMetadata);
  if (GEODownloadMetadataReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v52 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v54 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v53[9]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[9]) |= 4u;
    *(_BYTE *)(a1 + v53[9]) |= 2u;
    goto LABEL_78;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v53[9]) |= v48;
      }
      else if (!v48)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v48) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

unint64_t GEOResourceManifestDownloadReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOResourceManifestDownloadReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOResourceManifestDownloadReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOResourceManifestDownloadReadAllFrom_initialTag;
  Specified = GEOResourceManifestDownloadReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188DED7F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOResourceManifestDownloadReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOResourceManifestDownloadReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DED854(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOResourceManifestDownloadIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int v16;
  BOOL v18;
  uint64_t v19;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v15 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v9 >> 3) == 2)
      {
        if (v5 || v16 != 2 || !PBReaderPlaceMark() || !GEODownloadMetadataIsValid(a1))
        {
LABEL_40:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
        v5 = 2;
      }
      else if ((v9 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOResourcesIsValid(a1))
          goto LABEL_40;
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_40;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  if (a1[*v4])
    v18 = 1;
  else
    v18 = v5 == 0;
  v19 = !v18;
  PBReaderRecallMark();
  return v19;
}

BOOL _GEOResourceManifestDownloadIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((GEOResourcesIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  return (v2 & 2) != 0 && GEODownloadMetadataIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEOResourceManifestDownloadIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOResourceManifestDownloadIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DEDEAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSentinelTileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSentinelTileReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DEE52C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DEEA08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStaleResourceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOResource *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  char v48;
  int v49;
  int v50;
  char v51;
  void *v52;
  int v54;
  int *v55;
  char v56;
  char v57;
  char v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v56 = v17 & ~(_BYTE)v12 | v10;
        v57 = v17 | v12 | v56;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v58 = (v18 == 0) | v17 | v12;
        v59 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_73;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_73:
      v54 = 1;
      goto LABEL_74;
    }
    v32 = v24 >> 3;
    v33 = v59;
    if ((v58 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if ((v8 & 1) == 0)
        goto LABEL_62;
      *(_BYTE *)(a1 + 60) |= 1u;
      v40 = *v19;
      v41 = *(_QWORD *)(v3 + v40);
      if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(_QWORD *)(v3 + *v7))
      {
        v42 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v41);
        *(_QWORD *)(v3 + v40) = v41 + 8;
      }
      else
      {
        *(_BYTE *)(v3 + *v20) = 1;
        v42 = 0;
      }
      *(_QWORD *)(a1 + 40) = v42;
      goto LABEL_72;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_62;
      if ((*(_BYTE *)(a1 + 60) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_93;
        v38 = objc_alloc_init(GEOResource);
        if (!GEOResourceReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_92;
        PBReaderRecallMark();
        v39 = 24;
LABEL_55:
        v43 = *(void **)(a1 + v39);
        *(_QWORD *)(a1 + v39) = v38;

        --v9;
LABEL_69:
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_72;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_93;
      v48 = 32 * *(_BYTE *)(a1 + 60);
LABEL_68:
      v9 += v48 >> 7;
      goto LABEL_69;
    }
    if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 2) != 0)
    {
LABEL_62:
      v47 = PBReaderSkipValueWithTag();
      v7 = (int *)MEMORY[0x1E0D82BD8];
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v47 & 1) == 0)
      {
        v54 = 0;
        goto LABEL_74;
      }
      goto LABEL_72;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v45 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v44;

    }
    v46 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    if (!v46)
    {
      v54 = 0;
      v55 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v57 & 1 | (v9 != 0)))
      goto LABEL_73;
  }
  if (!v33)
    goto LABEL_62;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_93;
    v48 = 16 * *(_BYTE *)(a1 + 60);
    goto LABEL_68;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_93;
  v38 = objc_alloc_init(GEOResource);
  if (GEOResourceReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
  {
    PBReaderRecallMark();
    v39 = 32;
    goto LABEL_55;
  }
LABEL_92:

LABEL_93:
  v54 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  v55 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v56 & 1) == 0)
    goto LABEL_76;
LABEL_75:
  *(_BYTE *)(a1 + v55[20]) |= 2u;
LABEL_76:
  if (v59 & 1 | ((v54 & 1) == 0))
  {
    *(_BYTE *)(a1 + v55[20]) |= 4u;
    *(_BYTE *)(a1 + v55[20]) |= 8u;
    goto LABEL_86;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v50 = *v18++;
        v49 = v50;
        if (v50 == 1)
          break;
        if (v49 == 2)
        {
          v51 = 8;
          goto LABEL_85;
        }
        if (!v49)
          goto LABEL_86;
      }
      v51 = 4;
LABEL_85:
      *(_BYTE *)(a1 + v55[20]) |= v51;
      continue;
    }
  }
LABEL_86:
  if (v54)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v59 & 1) != 0)
  {
    v52 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188DEF13C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DEF7F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStaleResourceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOStaleResourceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOStaleResourceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOStaleResourceReadAllFrom_initialTag;
  Specified = GEOStaleResourceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188DEF9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStaleResourceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStaleResourceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DEFA0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DEFBBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStaleResourceIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 4) != 0)
  {
    if ((GEOResourceIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  if ((v2 & 8) != 0)
    return (uint64_t)GEOResourceIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

os_unfair_lock_s *GEOStaleResourceIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOStaleResourceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DEFF34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF0278(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF1CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  _Block_object_dispose(&a47, 8);
  _Unwind_Resume(a1);
}

uint64_t AppleMediaServicesLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = AppleMediaServicesLibraryCore_frameworkLibrary;
  v6 = AppleMediaServicesLibraryCore_frameworkLibrary;
  if (!AppleMediaServicesLibraryCore_frameworkLibrary)
  {
    v7 = __const__block__paths;
    v8 = *(_OWORD *)&off_1E1C07ED8;
    v1 = _sl_dlopen();
    v4[3] = v1;
    AppleMediaServicesLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_188DF289C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t AppleMediaServicesLibrary()
{
  uint64_t v0;
  void *v2;

  v0 = AppleMediaServicesLibraryCore();
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getAMSMediaArtworkClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAMSMediaArtworkClass_softClass;
  v7 = getAMSMediaArtworkClass_softClass;
  if (!getAMSMediaArtworkClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAMSMediaArtworkClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getAMSMediaArtworkClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_188DF29AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAMSMediaArtworkClass_block_invoke(uint64_t a1)
{
  Class result;

  AppleMediaServicesLibrary();
  result = objc_getClass("AMSMediaArtwork");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAMSMediaArtworkClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)BackgroundSystemTasksLibraryCore();
  }
  return result;
}

uint64_t BackgroundSystemTasksLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = BackgroundSystemTasksLibraryCore_frameworkLibrary;
  v6 = BackgroundSystemTasksLibraryCore_frameworkLibrary;
  if (!BackgroundSystemTasksLibraryCore_frameworkLibrary)
  {
    v7 = __const__block__paths_0;
    v8 = *(_OWORD *)&off_1E1C07EF8;
    v1 = _sl_dlopen();
    v4[3] = v1;
    BackgroundSystemTasksLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_188DF2AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t BackgroundSystemTasksLibrary()
{
  uint64_t v0;
  void *v2;

  v0 = BackgroundSystemTasksLibraryCore();
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getBGSystemTaskSchedulerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getBGSystemTaskSchedulerClass_softClass;
  v7 = getBGSystemTaskSchedulerClass_softClass;
  if (!getBGSystemTaskSchedulerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getBGSystemTaskSchedulerClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getBGSystemTaskSchedulerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_188DF2BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getBGSystemTaskSchedulerClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  BackgroundSystemTasksLibrary();
  result = objc_getClass("BGSystemTaskScheduler");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBGSystemTaskSchedulerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)getBGNonRepeatingSystemTaskRequestClass(v3);
  }
  return result;
}

id getBGNonRepeatingSystemTaskRequestClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getBGNonRepeatingSystemTaskRequestClass_softClass;
  v7 = getBGNonRepeatingSystemTaskRequestClass_softClass;
  if (!getBGNonRepeatingSystemTaskRequestClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getBGNonRepeatingSystemTaskRequestClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getBGNonRepeatingSystemTaskRequestClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_188DF2D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getBGNonRepeatingSystemTaskRequestClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  BackgroundSystemTasksLibrary();
  result = objc_getClass("BGNonRepeatingSystemTaskRequest");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBGNonRepeatingSystemTaskRequestClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)getBGRepeatingSystemTaskRequestClass(v3);
  }
  return result;
}

id getBGRepeatingSystemTaskRequestClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getBGRepeatingSystemTaskRequestClass_softClass;
  v7 = getBGRepeatingSystemTaskRequestClass_softClass;
  if (!getBGRepeatingSystemTaskRequestClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getBGRepeatingSystemTaskRequestClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getBGRepeatingSystemTaskRequestClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_188DF2E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

GEOARGuidance *__getBGRepeatingSystemTaskRequestClass_block_invoke(uint64_t a1)
{
  GEOARGuidance *result;
  GEOARGuidance *v3;
  SEL v4;

  BackgroundSystemTasksLibrary();
  result = (GEOARGuidance *)objc_getClass("BGRepeatingSystemTaskRequest");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBGRepeatingSystemTaskRequestClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (GEOARGuidance *)abort_report_np();
    return -[GEOARGuidance init](v3, v4);
  }
  return result;
}

void sub_188DF31A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOARGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEOFormattedString *v48;
  void *v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_80;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_80:
      v57 = 1;
      goto LABEL_81;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_67;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_70;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_72;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_70:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_72:
        *(_DWORD *)(a1 + 60) = v40;
        goto LABEL_79;
      case 2:
        if (!v33)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v52 = 8 * *(_BYTE *)(a1 + 64);
LABEL_77:
          v8 += v52 >> 7;
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v48 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v49 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v48;
LABEL_61:

          --v8;
LABEL_78:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_79:
          if (!(v60 & 1 | (v8 != 0)))
            goto LABEL_80;
          continue;
        }
LABEL_96:

LABEL_97:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
        v58 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v59 & 1) != 0)
LABEL_82:
          *(_BYTE *)(a1 + v58[35]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[35]) |= 0x10u;
          *(_BYTE *)(a1 + v58[35]) |= 4u;
          *(_BYTE *)(a1 + v58[35]) |= 8u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 16;
            switch(v53)
            {
              case 0:
                goto LABEL_90;
              case 2:
                goto LABEL_89;
              case 3:
                v54 = 4;
                goto LABEL_89;
              case 4:
                v54 = 8;
LABEL_89:
                *(_BYTE *)(a1 + v58[35]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if (!v33)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          PBReaderReadString();
          v50 = objc_claimAutoreleasedReturnValue();
          v49 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v50;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v52 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_77;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 64) & 8) != 0)
          goto LABEL_67;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v48 = objc_alloc_init(GEORouteLegRange);
        if (!GEORouteLegRangeReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_96;
        PBReaderRecallMark();
        -[GEOARGuidance _addNoFlagsGapRange:](a1, v48);

        goto LABEL_78;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_67:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_81;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_82;
          }
        }
        goto LABEL_79;
    }
  }
}

void sub_188DF3994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF3AD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF4644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOARGuidanceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOARGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOARGuidanceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOARGuidanceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOARGuidanceReadAllFrom_initialTag;
  Specified = GEOARGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOARGuidanceCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188DF48E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOARGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOARGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DF4948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARGuidanceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_41;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_39;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_39;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_41;
          goto LABEL_37;
        case 3u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_41;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLegRangeIsValid(a1))
            goto LABEL_41;
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_39;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          break;
      }
    }
  }
LABEL_40:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORouteLegRangeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 18)
        break;
      if ((v8 >> 3) == 17)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188DF5078(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOARGuidanceIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 64);
  }
  if ((v2 & 4) == 0)
    return (v2 >> 3) & 1;
  return 1;
}

os_unfair_lock_s *GEOARGuidanceIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOARGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DF5528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF5904(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARInfoReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDOrientedBoundingBox *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDOrientedBoundingBox);
          if (!GEOPDOrientedBoundingBoxReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addStorefrontFaceGeometry:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188DF6390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARInfoReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOARInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DF63F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDOrientedBoundingBoxIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188DF6CB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoriesInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOAdvisoryNotice *v40;
  id v41;
  void *v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFAFFFBFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 0x10) != 0)+ ((*(_BYTE *)(a1 + 84) & 8) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_88;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_88:
      v52 = 1;
      goto LABEL_89;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 0x20) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v40 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        -[GEOAdvisoriesInfo _addNoFlagsNoticeAdvisory:](a1, v40);
        goto LABEL_76;
      case 2:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v47 = *(_BYTE *)(a1 + 84) << 6;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v40 = objc_alloc_init(GEOClickableAdvisory);
        if (!GEOClickableAdvisoryReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v44 = 24;
        goto LABEL_65;
      case 3:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v47 = 2 * *(_BYTE *)(a1 + 84);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v40 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v44 = 64;
        goto LABEL_65;
      case 4:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v47 = 32 * *(_BYTE *)(a1 + 84);
LABEL_85:
          v7 += v47 >> 7;
LABEL_86:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_88;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v40 = objc_alloc_init(GEOAdvisoryNotice);
        if (GEOAdvisoryNoticeReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v44 = 32;
LABEL_65:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v40;

          --v7;
          goto LABEL_86;
        }
LABEL_107:

LABEL_108:
        v52 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_89:
        v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v54 & 1) != 0)
LABEL_90:
          *(_BYTE *)(a1 + v53[46]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[46]) |= 0x20u;
          *(_BYTE *)(a1 + v53[46]) |= 2u;
          *(_BYTE *)(a1 + v53[46]) |= 0x40u;
          *(_BYTE *)(a1 + v53[46]) |= 4u;
          *(_BYTE *)(a1 + v53[46]) |= 0x10u;
          *(_BYTE *)(a1 + v53[46]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            v48 = *v20++;
            v49 = 32;
            switch(v48)
            {
              case 0:
                goto LABEL_101;
              case 1:
                goto LABEL_100;
              case 2:
                v49 = 2;
                goto LABEL_100;
              case 3:
                v49 = 64;
                goto LABEL_100;
              case 4:
                v49 = 4;
                goto LABEL_100;
              case 5:
                v49 = 16;
                goto LABEL_100;
              case 6:
                v49 = 8;
LABEL_100:
                *(_BYTE *)(a1 + v53[46]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_101:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v40 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        -[GEOAdvisoriesInfo _addNoFlagsIncidentAdvisory:](a1, v40);
        goto LABEL_76;
      case 6:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 8) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v40 = objc_alloc_init(GEOAdvisoryNotice);
        if (!GEOAdvisoryNoticeReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        -[GEOAdvisoriesInfo _addNoFlagsGenericAdvisory:](a1, v40);
LABEL_76:

        goto LABEL_86;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_77:
          v46 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_89;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_90;
          }
        }
        goto LABEL_87;
    }
  }
}

void sub_188DF77CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF790C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF7A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF7B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF7EC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DF8EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOAdvisoriesInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[6];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOAdvisoriesInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAdvisoriesInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAdvisoriesInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAdvisoriesInfoReadAllFrom_initialTag;
  Specified = GEOAdvisoriesInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAdvisoriesInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188DF929C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoriesInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAdvisoriesInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DF92FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoriesInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_31:
    v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_31;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      if (v7++ >= 9)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_31;
    switch((v8 >> 3))
    {
      case 1u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryNoticeIsValid(a1))
          goto LABEL_30;
        goto LABEL_22;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOClickableAdvisoryIsValid(a1))
          goto LABEL_30;
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
LABEL_23:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_31;
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

BOOL GEOAdvisoryNoticeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
            goto LABEL_49;
          goto LABEL_76;
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_76:
              PBReaderRecallMark();
              return 0;
            }
LABEL_65:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v33 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  break;
                v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v13 = v33++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_65;
              }
              a1[*v4] = 1;
            }
LABEL_49:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_76;
            while (1)
            {
              v17 = *v2;
              v18 = *(_QWORD *)&a1[v17];
              v19 = v18 + 1;
              if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
                break;
              v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
              *(_QWORD *)&a1[v17] = v19;
              if (v20 < 0)
              {
                v21 = v15++;
                if (v21 <= 8)
                  continue;
              }
              goto LABEL_62;
            }
LABEL_61:
            a1[*v4] = 1;
          }
LABEL_62:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_74;
          break;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryCardIsValid(a1))
            goto LABEL_76;
          goto LABEL_49;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_62;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryItemIsValid(a1))
            goto LABEL_76;
          goto LABEL_49;
        case 7u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1))
            goto LABEL_49;
          goto LABEL_76;
        case 8u:
          if (v15 == 2)
            goto LABEL_51;
          goto LABEL_76;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v27 = v28++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_62;
          }
        default:
LABEL_51:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_76;
          goto LABEL_62;
      }
    }
  }
LABEL_74:
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOClickableAdvisoryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_47;
LABEL_34:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v13 = v22++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
          goto LABEL_23;
        }
        if ((v8 & 7) != 0)
          goto LABEL_47;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v15++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_23:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_47;
      }
LABEL_44:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_188DF9F7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoriesInfoIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_BYTE *)(a1 + 84);
  if ((v2 & 0xA0) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 84) & 2) != 0)
  {
    if ((GEOClickableAdvisoryIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x18) == 0)
  {
    if ((v2 & 0x20) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 56);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v25;
LABEL_17:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v8)
            objc_enumerationMutation(v5);
          if ((GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_45;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
            if (v7)
              goto LABEL_17;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 0x10) != 0)
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v5 = *(id *)(a1 + 48);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v21;
LABEL_27:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v21 != v12)
            objc_enumerationMutation(v5);
          if ((GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v13)) & 1) != 0)
            goto LABEL_45;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
            if (v11)
              goto LABEL_27;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 8) == 0)
      return 0;
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v5 = *(id *)(a1 + 40);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
    if (!v3)
    {
LABEL_46:

      return v3;
    }
    v14 = *(_QWORD *)v17;
LABEL_38:
    v15 = 0;
    while (1)
    {
      if (*(_QWORD *)v17 != v14)
        objc_enumerationMutation(v5);
      if ((GEOAdvisoryNoticeIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v15)) & 1) != 0)
        break;
      if (v3 == ++v15)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
        if (v3)
          goto LABEL_38;
        goto LABEL_46;
      }
    }
LABEL_45:
    v3 = 1;
    goto LABEL_46;
  }
  return 1;
}

os_unfair_lock_s *GEOAdvisoriesInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAdvisoriesInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DFAB34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFB080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFB548(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryCardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOFormattedString *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  void *v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFEFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 0x20) != 0)+ ((*(_BYTE *)(a1 + 84) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_93;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_93:
      v51 = 1;
      goto LABEL_94;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_113;
          v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v40 = 64;
            goto LABEL_75;
          }
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v46 = 2 * *(_BYTE *)(a1 + 84);
        goto LABEL_90;
      case 2:
        if (!v34)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v46 = 16 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_75;
      case 3:
        if (!v34)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v46 = 32 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v40 = 32;
        goto LABEL_75;
      case 4:
        if (!v34)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v46 = 8 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v40 = 48;
        goto LABEL_75;
      case 5:
        if (!v34)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v46 = 4 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v40 = 56;
        goto LABEL_75;
      case 6:
        if (!v34)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v46 = *(_BYTE *)(a1 + 84) << 6;
LABEL_90:
          v7 += v46 >> 7;
LABEL_91:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_92:
          if (!(v54 & 1 | (v7 != 0)))
            goto LABEL_93;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v39 = objc_alloc_init(GEOAdvisoryCardAction);
        if (GEOAdvisoryCardActionReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = 24;
LABEL_75:
          v44 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
          goto LABEL_91;
        }
LABEL_112:

LABEL_113:
        v51 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
        v52 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v53 & 1) != 0)
LABEL_95:
          *(_BYTE *)(a1 + v52[58]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(_BYTE *)(a1 + v52[58]) |= 0x40u;
          *(_BYTE *)(a1 + v52[58]) |= 8u;
          *(_BYTE *)(a1 + v52[58]) |= 4u;
          *(_BYTE *)(a1 + v52[58]) |= 0x10u;
          *(_BYTE *)(a1 + v52[58]) |= 0x20u;
          *(_BYTE *)(a1 + v52[58]) |= 2u;
        }
        else if (v19)
        {
          while (1)
          {
            v47 = *v19++;
            v48 = 64;
            switch(v47)
            {
              case 0:
                goto LABEL_106;
              case 1:
                goto LABEL_105;
              case 2:
                v48 = 8;
                goto LABEL_105;
              case 3:
                v48 = 4;
                goto LABEL_105;
              case 4:
                v48 = 16;
                goto LABEL_105;
              case 5:
                v48 = 32;
                goto LABEL_105;
              case 6:
                v48 = 2;
LABEL_105:
                *(_BYTE *)(a1 + v52[58]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_106:
        if (v51)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v56)
        {
          v49 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_76:
          v45 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
            v51 = 0;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v51 = 0;
            v52 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_95;
          }
        }
        goto LABEL_92;
    }
  }
}

void sub_188DFBEC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFC008(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFC14C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFC290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFC3D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFCC88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryCardCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEOAdvisoryCardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAdvisoryCardReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAdvisoryCardReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAdvisoryCardReadAllFrom_initialTag;
  Specified = GEOAdvisoryCardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAdvisoryCardCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188DFCEA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryCardReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAdvisoryCardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DFCF00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryCardIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_35:
    v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_35;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      if (v7++ >= 9)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_35;
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 4u:
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          goto LABEL_34;
        goto LABEL_22;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
          goto LABEL_34;
        goto LABEL_22;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryCardActionIsValid(a1))
          goto LABEL_34;
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
LABEL_23:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_35;
          continue;
        }
LABEL_34:
        PBReaderRecallMark();
        return 0;
    }
  }
}

BOOL GEOPBTransitArtworkIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_51;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_51;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 0xAu:
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitShieldIsValid(a1))
            goto LABEL_57;
          goto LABEL_42;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitIconIsValid(a1))
            goto LABEL_57;
LABEL_42:
          PBReaderRecallMark();
          continue;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v28 = 0;
          break;
        case 0xEu:
          if (v15 == 2)
            goto LABEL_53;
          goto LABEL_57;
        default:
LABEL_53:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_51:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOAdvisoryCardActionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188DFD890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryCardIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  if (*(char *)(a1 + 84) < 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 84);
  if ((v2 & 0x40) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 84);
  }
  if ((v2 & 8) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 84);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 84);
  }
  if ((v2 & 0x10) == 0)
    goto LABEL_14;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 84);
LABEL_14:
  if ((v2 & 0x20) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 84);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOAdvisoryCardIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAdvisoryCardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188DFDD2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFE100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryCardActionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOLatLng *v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v25 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_36;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188DFEBB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryCardActionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAdvisoryCardActionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188DFEC10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188DFF1D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOAdvisoryCard *v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  uint64_t v57;
  int v58;
  int v59;
  char v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v65 = v16 & ~(_BYTE)v11 | v8;
        v66 = v9;
        v67 = v16 | v11 | v65;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v68 = (v17 == 0) | v16 | v11;
        v69 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v69;
    if ((v68 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) != 0)
          {
            v10 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
            goto LABEL_84;
          }
        }
        else if ((PBReaderPlaceMark() & 1) != 0)
        {
          v37 = objc_alloc_init(GEOAdvisoryCard);
          if (GEOAdvisoryCardReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
          {
            PBReaderRecallMark();
            v38 = *(void **)(a1 + 24);
            *(_QWORD *)(a1 + 24) = v37;

            --v10;
            goto LABEL_84;
          }

        }
        v63 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_87;
      case 2:
        if ((v66 & 1) == 0)
          goto LABEL_71;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_76:
        v57 = 52;
        goto LABEL_81;
      case 3:
        if ((v66 & 1) == 0)
          goto LABEL_71;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_80:
        v57 = 56;
LABEL_81:
        *(_DWORD *)(a1 + v57) = v44;
        goto LABEL_85;
      case 4:
        if (!v32 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_71;
        PBReaderReadString();
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        if (v55)
          -[GEOAdvisoryItem _addNoFlagsAnalyticsMessageValue:](a1, v55);

LABEL_84:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_85;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_71:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_88;
          }
        }
LABEL_85:
        if (!(v67 & 1 | (v10 != 0)))
          goto LABEL_86;
        break;
    }
  }
LABEL_86:
  v63 = 1;
LABEL_87:
  v64 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v65 & 1) != 0)
LABEL_88:
    *(_BYTE *)(a1 + v64[74]) |= 4u;
  if (!(v69 & 1 | ((v63 & 1) == 0)))
  {
    if (!v17)
      goto LABEL_99;
    while (1)
    {
      v59 = *v17++;
      v58 = v59;
      if (v59 == 1)
        break;
      if (v58 == 4)
      {
        v60 = 16;
LABEL_98:
        *(_BYTE *)(a1 + v64[74]) |= v60;
      }
      else if (!v58)
      {
        goto LABEL_99;
      }
    }
    v60 = 8;
    goto LABEL_98;
  }
  *(_BYTE *)(a1 + v64[74]) |= 8u;
  *(_BYTE *)(a1 + v64[74]) |= 0x10u;
LABEL_99:
  if (v63)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v69 & 1) != 0)
  {
    v61 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188DFFA90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E00484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAdvisoryItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAdvisoryItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAdvisoryItemReadAllFrom_initialTag;
  Specified = GEOAdvisoryItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E00628(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryItemReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAdvisoryItemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E00688(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAdvisoryItemIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoryCardIsValid(a1))
            goto LABEL_45;
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_45;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_39;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_42;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_45;
          v23 = 0;
          break;
        case 4u:
          if (v15 == 2)
            goto LABEL_41;
          goto LABEL_45;
        default:
LABEL_41:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_45:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_42;
      }
LABEL_39:
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188E00BAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryItemIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOAdvisoryCardIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOAdvisoryItemIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAdvisoryItemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E010A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E014A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E01760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryNoticeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOFormattedString *v41;
  int AllFrom;
  uint64_t v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  int v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  int v63;
  int v64;
  int v65;
  void *v66;
  void *v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  __int16 v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  int v84;
  __int16 v85;
  void *v86;
  char v88;
  char v89;
  int v90;
  char v91;
  char v92;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 116) >> 2) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFFBFFFCFFF7FFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 7) & 1)+ (HIBYTE(*(_WORD *)(a1 + 116)) & 1)+ ((*(_WORD *)(a1 + 116) >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v90 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = v16 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_143;
        v88 = v17;
        v91 = v18 | v17;
        v92 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v89 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_141;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_141:
      v90 = 1;
      goto LABEL_142;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v92 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 116) & 0x200) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_162;
          v41 = objc_alloc_init(GEOFormattedString);
          AllFrom = GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (AllFrom)
          {
            PBReaderRecallMark();
            v43 = 88;
            goto LABEL_95;
          }
          goto LABEL_163;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_162;
        v76 = *(_WORD *)(a1 + 116) << 6;
        goto LABEL_126;
      case 2:
        if (!v36 || (*(_WORD *)(a1 + 116) & 8) != 0)
          goto LABEL_110;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_162;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v21))
              break;
            v47 = 0;
            v48 = 0;
            v49 = 0;
            v50 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v51 = *v20;
              v52 = *(_QWORD *)(v3 + v51);
              v53 = v52 + 1;
              if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
                break;
              v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v50) + v52);
              *(_QWORD *)(v3 + v51) = v53;
              v49 |= (unint64_t)(v54 & 0x7F) << v47;
              if (v54 < 0)
              {
                v47 += 7;
                v31 = v48++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_64;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_64:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v77 = 0;
          v78 = 0;
          v79 = 0;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v80 = *v20;
            v81 = *(_QWORD *)(v3 + v80);
            v82 = v81 + 1;
            if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
              break;
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v31 = v78++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_140;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_140:
          PBRepeatedUInt32Add();
        }
        goto LABEL_96;
      case 3:
        if (!v36 || (*(_WORD *)(a1 + 116) & 0x10) != 0)
          goto LABEL_110;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_162;
        v41 = objc_alloc_init(GEOAdvisoryCard);
        v55 = GEOAdvisoryCardReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v55)
          goto LABEL_163;
        PBReaderRecallMark();
        -[GEOAdvisoryNotice _addNoFlagsAdvisoryCard:](a1, v41);
        goto LABEL_84;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_WORD *)(a1 + 116) |= 2u;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v59 = *v20;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v31 = v57++ >= 9;
              if (v31)
              {
                v58 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v58 = 0;
LABEL_115:
        *(_BYTE *)(a1 + 112) = v58 != 0;
        goto LABEL_129;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 116) & 0x20) != 0)
          goto LABEL_110;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_162;
        v41 = objc_alloc_init(GEOAdvisoryItem);
        v63 = GEOAdvisoryItemReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v63)
          goto LABEL_163;
        PBReaderRecallMark();
        -[GEOAdvisoryNotice _addNoFlagsAdvisoryItem:](a1, v41);
LABEL_84:

        goto LABEL_96;
      case 6:
        if (!v36)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 116) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_162;
          v76 = *(_WORD *)(a1 + 116) << 8;
          goto LABEL_126;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_162;
        v41 = objc_alloc_init(GEOFormattedString);
        v64 = GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v64)
          goto LABEL_163;
        PBReaderRecallMark();
        v43 = 72;
        goto LABEL_95;
      case 7:
        if (!v36)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_162:
            v90 = 0;
            v18 = v89;
            v21 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_142;
          }
          v76 = *(_WORD *)(a1 + 116) << 7;
LABEL_126:
          v7 += v76 >> 15;
LABEL_127:
          v18 = v89;
          v21 = (int *)MEMORY[0x1E0D82BC8];
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_162;
          v41 = objc_alloc_init(GEOPBTransitArtwork);
          v65 = GEOPBTransitArtworkReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1);
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v65)
          {
LABEL_163:

            v90 = 0;
            v18 = v89;
            goto LABEL_142;
          }
          PBReaderRecallMark();
          v43 = 80;
LABEL_95:
          v66 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v41;

          --v7;
LABEL_96:
          v18 = v89;
        }
        v23 = (int *)MEMORY[0x1E0D82BB8];
        goto LABEL_129;
      case 8:
        if (!v36 || (*(_WORD *)(a1 + 116) & 0x40) != 0)
          goto LABEL_110;
        PBReaderReadString();
        v67 = (void *)objc_claimAutoreleasedReturnValue();
        if (v67)
          -[GEOAdvisoryNotice _addNoFlagsAnalyticsMessageValue:](a1, v67);

        goto LABEL_127;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v68 = 0;
        v69 = 0;
        v70 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v71 = *v20;
          v72 = *(_QWORD *)(v3 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v31 = v69++ >= 9;
              if (v31)
              {
                LODWORD(v70) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v70) = 0;
LABEL_119:
        *(_DWORD *)(a1 + 108) = v70;
        goto LABEL_129;
      default:
        if ((v88 & 1) != 0 && (*(_WORD *)(a1 + 116) & 4) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v18 = v89;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v90 = 0;
            goto LABEL_144;
          }
LABEL_129:
          if (!(v91 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_141;
          continue;
        }
LABEL_110:
        v75 = PBReaderSkipValueWithTag();
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v18 = v89;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if ((v75 & 1) != 0)
          goto LABEL_129;
        v90 = 0;
LABEL_142:
        v22 = v88;
LABEL_143:
        if ((v22 & 1) != 0)
LABEL_144:
          *(_WORD *)(a1 + 116) |= 4u;
        if (v18 & 1 | ((v90 & 1) == 0))
        {
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x10u;
          *(_WORD *)(a1 + 116) |= 0x20u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            v84 = *v19++;
            v85 = 512;
            switch(v84)
            {
              case 0:
                goto LABEL_156;
              case 1:
                goto LABEL_155;
              case 2:
                v85 = 8;
                goto LABEL_155;
              case 3:
                v85 = 16;
                goto LABEL_155;
              case 5:
                v85 = 32;
                goto LABEL_155;
              case 6:
                v85 = 128;
                goto LABEL_155;
              case 7:
                v85 = 256;
                goto LABEL_155;
              case 8:
                v85 = 64;
LABEL_155:
                *(_WORD *)(a1 + 116) |= v85;
                break;
              default:
                continue;
            }
          }
        }
LABEL_156:
        if (v90)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_160:
          v86 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_160;
        }
        return v3;
    }
  }
}

void sub_188E02460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E027A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E02AD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E02E80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E02FC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E03108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E04498(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryNoticeCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[11], "readAll:", 1);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[9], "readAll:", 1);
  return objc_msgSend(a1[10], "readAll:", 1);
}

unint64_t GEOAdvisoryNoticeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAdvisoryNoticeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAdvisoryNoticeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAdvisoryNoticeReadAllFrom_initialTag;
  Specified = GEOAdvisoryNoticeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAdvisoryNoticeCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188E047FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAdvisoryNoticeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAdvisoryNoticeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E0485C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E04C84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAdvisoryNoticeIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_WORD *)(a1 + 116);
  if ((v2 & 0x400) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 116) & 0x200) == 0)
  {
LABEL_5:
    if ((v2 & 0x38) != 0)
      return 1;
    if ((v2 & 0x80) != 0)
    {
      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
        return 1;
      v2 = *(_WORD *)(a1 + 116);
    }
    if ((v2 & 0x100) != 0)
    {
      if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
        return 1;
      v2 = *(_WORD *)(a1 + 116);
    }
    if ((v2 & 0x40) != 0)
      return 1;
    if ((v2 & 0x10) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 48);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v17;
LABEL_18:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          if ((GEOAdvisoryCardIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_36;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v7)
              goto LABEL_18;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 116);
    }
    if ((v2 & 0x20) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 56);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_37:

      return v3;
    }
    v10 = *(_QWORD *)v13;
LABEL_29:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v10)
        objc_enumerationMutation(v5);
      if ((GEOAdvisoryItemIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)) & 1) != 0)
        break;
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_29;
        goto LABEL_37;
      }
    }
LABEL_36:
    v3 = 1;
    goto LABEL_37;
  }
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 88)) & 1) == 0)
  {
    v2 = *(_WORD *)(a1 + 116);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOAdvisoryNoticeIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAdvisoryNoticeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E057CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E05ED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E06308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  GEOFormattedString *v46;
  uint64_t v47;
  char v48;
  char v49;
  int v50;
  char v51;
  void *v52;
  int v54;
  int *v55;
  char v56;
  char v57;
  char v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFDFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v56 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v59 = v18;
        v57 = v19;
        v58 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_77;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_77:
      v54 = 1;
      goto LABEL_78;
    }
    v34 = v26 >> 3;
    v35 = v59;
    if ((v58 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 48;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v49 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 24;
LABEL_51:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v49 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_74;
      case 3:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v49 = 16 * *(_BYTE *)(a1 + 68);
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v46 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
          goto LABEL_95;
        PBReaderRecallMark();
        v47 = 40;
        goto LABEL_62;
      case 4:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v49 = 32 * *(_BYTE *)(a1 + 68);
LABEL_74:
          v7 += v49 >> 7;
LABEL_75:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v46 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v47 = 32;
LABEL_62:
          v45 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;
LABEL_63:

          --v7;
          goto LABEL_75;
        }
LABEL_95:

LABEL_96:
        v54 = 0;
        v55 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        if ((v56 & 1) != 0)
LABEL_80:
          *(_BYTE *)(a1 + v55[602]) |= 1u;
        if (v59 || (v54 & 1) == 0)
        {
          *(_BYTE *)(a1 + v55[602]) |= 0x10u;
          *(_BYTE *)(a1 + v55[602]) |= 2u;
          *(_BYTE *)(a1 + v55[602]) |= 8u;
          *(_BYTE *)(a1 + v55[602]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            v50 = *v20++;
            v51 = 16;
            switch(v50)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 2:
                v51 = 2;
                goto LABEL_88;
              case 3:
                v51 = 8;
                goto LABEL_88;
              case 4:
                v51 = 4;
LABEL_88:
                *(_BYTE *)(a1 + v55[602]) |= v51;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v54)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v59)
        {
          v52 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_64:
          v48 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v48 & 1) == 0)
          {
            v54 = 0;
LABEL_78:
            v55 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v54 = 0;
            v55 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v57 & 1 | (v7 != 0)))
          goto LABEL_77;
        continue;
    }
  }
}

void sub_188E06AE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E06C3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E06D94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E071F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAlertReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAlertReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAlertReadAllFrom_initialTag;
  Specified = GEOAlertReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E0765C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlertIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_29;
          goto LABEL_26;
        case 2u:
          if (v15 == 2)
            goto LABEL_26;
          goto LABEL_29;
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_29;
          PBReaderRecallMark();
          goto LABEL_27;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_29:
            PBReaderRecallMark();
            return 0;
          }
LABEL_27:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_28;
          break;
      }
    }
  }
LABEL_28:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E07A28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAlertIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0x32) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 8) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 68);
  }
  if ((v2 & 4) != 0)
    return (uint64_t)GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

os_unfair_lock_s *GEOAlertIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAlertIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E07CBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E081D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertNonRecommendedRouteTextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_79;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_79:
      v52 = 1;
      goto LABEL_80;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_97;
          v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = 32;
            goto LABEL_65;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v47 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_76;
      case 2:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v47 = 16 * *(_BYTE *)(a1 + 68);
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        v41 = 40;
        goto LABEL_65;
      case 3:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v47 = 8 * *(_BYTE *)(a1 + 68);
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v40 = objc_alloc_init(GEOPlaceFormattedString);
        if (!GEOPlaceFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        v41 = 48;
        goto LABEL_65;
      case 4:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v47 = *(_BYTE *)(a1 + 68) << 6;
LABEL_76:
          v7 += v47 >> 7;
LABEL_77:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_79;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v40 = objc_alloc_init(GEOPlaceFormattedString);
        if (GEOPlaceFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 24;
LABEL_65:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
          goto LABEL_77;
        }
LABEL_96:

LABEL_97:
        v52 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
        v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v54 & 1) != 0)
LABEL_81:
          *(_BYTE *)(a1 + v53[101]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[101]) |= 4u;
          *(_BYTE *)(a1 + v53[101]) |= 8u;
          *(_BYTE *)(a1 + v53[101]) |= 0x10u;
          *(_BYTE *)(a1 + v53[101]) |= 2u;
        }
        else if (v20)
        {
          while (1)
          {
            v48 = *v20++;
            v49 = 4;
            switch(v48)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_89;
              case 2:
                v49 = 8;
                goto LABEL_89;
              case 3:
                v49 = 16;
                goto LABEL_89;
              case 4:
                v49 = 2;
LABEL_89:
                *(_BYTE *)(a1 + v53[101]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_66:
          v46 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_188E089F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E08B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E08C78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E093BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAlertNonRecommendedRouteTextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEOAlertNonRecommendedRouteTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAlertNonRecommendedRouteTextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAlertNonRecommendedRouteTextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAlertNonRecommendedRouteTextReadAllFrom_initialTag;
  Specified = GEOAlertNonRecommendedRouteTextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAlertNonRecommendedRouteTextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E095B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAlertNonRecommendedRouteTextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAlertNonRecommendedRouteTextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E09614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlertNonRecommendedRouteTextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  BOOL v16;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (2)
    {
      if (!a1[*v4])
      {
        v6 = 0;
        v7 = 0;
        v8 = 0;
        while (1)
        {
          v9 = *v2;
          v10 = *(_QWORD *)&a1[v9];
          v11 = v10 + 1;
          if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
            break;
          v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
          *(_QWORD *)&a1[v9] = v11;
          v8 |= (unint64_t)(v12 & 0x7F) << v6;
          if ((v12 & 0x80) == 0)
            goto LABEL_12;
          v6 += 7;
          if (v7++ >= 9)
          {
            v8 = 0;
            v14 = a1[*v4];
            goto LABEL_14;
          }
        }
        a1[*v4] = 1;
LABEL_12:
        v14 = a1[*v4];
        if (a1[*v4])
          v8 = 0;
LABEL_14:
        v15 = v8 & 7;
        if (v14)
          v16 = 1;
        else
          v16 = v15 == 4;
        if (!v16)
        {
          switch((v8 >> 3))
          {
            case 1u:
            case 2u:
              if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
                goto LABEL_26;
              goto LABEL_30;
            case 3u:
            case 4u:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceFormattedStringIsValid(a1))
                goto LABEL_30;
LABEL_26:
              PBReaderRecallMark();
LABEL_28:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                break;
              continue;
            default:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                goto LABEL_28;
LABEL_30:
              PBReaderRecallMark();
              return 0;
          }
        }
      }
      break;
    }
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPlaceFormattedStringIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_27:
    v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_27;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      if (v7++ >= 9)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_27;
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          goto LABEL_26;
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
LABEL_23:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_27;
          continue;
        }
LABEL_26:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_188E09BD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAlertNonRecommendedRouteTextIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 68);
  }
  if ((v2 & 8) == 0)
    goto LABEL_8;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  v2 = *(_BYTE *)(a1 + 68);
LABEL_8:
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 68);
  }
  if ((v2 & 2) != 0)
    return (uint64_t)GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEOAlertNonRecommendedRouteTextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAlertNonRecommendedRouteTextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E09F9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E0A2AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E0A5E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOArrivalParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  _BOOL4 v22;
  int v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  GEOArrivalPoint *v49;
  id v50;
  void *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  char v64;
  char v65;
  int v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = v8 != 0;
        v23 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_88;
        v64 = v18;
        v66 = v22 | v19 | v18;
        v67 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v65 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v24))
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v21;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
      break;
    v36 = v28 >> 3;
    v37 = v19;
    if ((v67 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (1)
        {
          v45 = *v21;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_75;
          v42 += 7;
          v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_77;
          }
        }
        *(_BYTE *)(v3 + *v24) = 1;
LABEL_75:
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_77:
        v58 = 56;
        goto LABEL_82;
      case 2:
        if (!v37 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v49 = objc_alloc_init(GEOArrivalPoint);
        if (!GEOArrivalPointReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_106;
        PBReaderRecallMark();
        -[GEOArrivalParameters _addNoFlagsArrivalPoints:](a1, v49);
        goto LABEL_63;
      case 4:
        if (!v37 || (*(_BYTE *)(a1 + 60) & 8) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v49 = objc_alloc_init(GEOArrivalRegion);
        if (!GEOArrivalRegionReadAllFrom((uint64_t)v49, (void *)v3))
        {
LABEL_106:

LABEL_107:
          v23 = 0;
          v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          LOBYTE(v19) = v65;
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOArrivalParameters _addNoFlagsArrivalMapRegions:](a1, v49);
LABEL_63:

        LOBYTE(v19) = v65;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_83;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v52 = 0;
        v53 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v54 = *v21;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v44 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_81:
        v58 = 52;
LABEL_82:
        *(_DWORD *)(a1 + v58) = v44;
        goto LABEL_83;
      default:
        if ((v64 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_72:
          v23 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          LOBYTE(v19) = v65;
          if ((v23 & v66 & 1) == 0)
            goto LABEL_86;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v51 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v50;

          }
          v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v65;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (!v23)
          {
            v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_89;
          }
LABEL_83:
          if ((v66 & 1) == 0)
            goto LABEL_85;
        }
        if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_85;
        break;
    }
  }
LABEL_85:
  v23 = 1;
LABEL_86:
  v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_87:
  LOBYTE(v18) = v64;
LABEL_88:
  if ((v18 & 1) != 0)
LABEL_89:
    *(_BYTE *)(a1 + v12[610]) |= 4u;
  if (!(v19 & 1 | ((v23 & 1) == 0)))
  {
    if (!v20)
      goto LABEL_100;
    while (1)
    {
      v61 = *v20++;
      v60 = v61;
      if (v61 == 2)
        break;
      if (v60 == 4)
      {
        v59 = 8;
LABEL_96:
        *(_BYTE *)(a1 + v12[610]) |= v59;
      }
      else if (!v60)
      {
        goto LABEL_100;
      }
    }
    v59 = 16;
    goto LABEL_96;
  }
  *(_BYTE *)(a1 + v12[610]) |= 0x10u;
  *(_BYTE *)(a1 + v12[610]) |= 8u;
LABEL_100:
  if (v23)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
    goto LABEL_104;
  }
  v3 = 0;
  if ((v19 & 1) != 0)
  {
LABEL_104:
    v62 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188E0AFB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E0BCB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOArrivalParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOArrivalParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOArrivalParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOArrivalParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOArrivalParametersReadAllFrom_initialTag;
  Specified = GEOArrivalParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOArrivalParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E0BFD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOArrivalParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOArrivalParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E0C034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_46;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalPointIsValid(a1))
            goto LABEL_49;
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalRegionIsValid(a1))
            goto LABEL_49;
LABEL_36:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v23 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_46;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOArrivalPointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOArrivalRegionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_188E0CB08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188E0D214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E0D698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalPointReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOLatLng *v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188E0E0B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalPointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOArrivalPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E0E110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalRegionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOMapRegion *v18;
  void *v19;
  id v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v18 = objc_alloc_init(GEOMapRegion);
            if (GEOMapRegionReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              v19 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v18;

              continue;
            }

            goto LABEL_64;
          case 2u:
            v22 = 0;
            v23 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (2)
            {
              v25 = *v4;
              v26 = *(_QWORD *)&v3[v25];
              v27 = v26 + 1;
              if (v26 == -1 || v27 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v28 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v26);
                *(_QWORD *)&v3[v25] = v27;
                v24 |= (unint64_t)(v28 & 0x7F) << v22;
                if (v28 < 0)
                {
                  v22 += 7;
                  v15 = v23++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v24) = 0;
LABEL_51:
            v41 = 24;
            goto LABEL_60;
          case 3u:
            v29 = 0;
            v30 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
                *(_QWORD *)&v3[v31] = v33;
                v24 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v15 = v30++ >= 9;
                  if (v15)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v24) = 0;
LABEL_55:
            v41 = 28;
            goto LABEL_60;
          case 4u:
            v35 = 0;
            v36 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v21 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v20;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            continue;
        }
        while (1)
        {
          v37 = *v4;
          v38 = *(_QWORD *)&v3[v37];
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
            break;
          v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
          *(_QWORD *)&v3[v37] = v39;
          v24 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0)
            goto LABEL_57;
          v35 += 7;
          v15 = v36++ >= 9;
          if (v15)
          {
            LODWORD(v24) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v24) = 0;
LABEL_59:
        v41 = 32;
LABEL_60:
        *(_DWORD *)(a1 + v41) = v24;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188E0F3B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOArrivalRegionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOArrivalRegionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E0F418(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOAttribute__key;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOAttribute__key;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOAttribute__key;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOAttribute__value;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOAttribute__value;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOAttribute__value;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E103F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAttributeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E10454(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAttributeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188E10EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAutomobileOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  id v58;
  void *v59;
  int v60;
  GEOUserPreferences *v61;
  uint64_t v62;
  void *v63;
  char v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char v68;
  int v69;
  int v70;
  void *v71;
  int v73;
  int *v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v75 = v16 & ~(_BYTE)v11 | v9;
        v76 = v7;
        v77 = v16 | v11 | v75;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v78 = (v17 == 0) | v16 | v11;
        v79 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_102;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_102:
      v73 = 1;
      goto LABEL_103;
    }
    v31 = v23 >> 3;
    v32 = v79;
    if ((v78 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v76 & 1) == 0)
          goto LABEL_80;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_83;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_85;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_83:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_85:
        v65 = v39 != 0;
        v66 = 56;
        goto LABEL_94;
      case 2:
        if ((v76 & 1) == 0)
          goto LABEL_80;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_89:
        *(_DWORD *)(a1 + 52) = v46;
        goto LABEL_101;
      case 3:
        if ((v76 & 1) == 0)
          goto LABEL_80;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_BYTE *)(a1 + 60) |= 4u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v28 = v52++ >= 9;
              if (v28)
              {
                v53 = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v53 = 0;
LABEL_93:
        v65 = v53 != 0;
        v66 = 57;
LABEL_94:
        *(_BYTE *)(a1 + v66) = v65;
        goto LABEL_101;
      case 6:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v67 = 8 * *(_BYTE *)(a1 + 60);
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v61 = objc_alloc_init(GEOUserPreferences);
        if (!GEOUserPreferencesReadAllFrom((uint64_t)v61, (void *)v3))
          goto LABEL_122;
        PBReaderRecallMark();
        v62 = 24;
        goto LABEL_79;
      case 9:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 60) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v67 = 4 * *(_BYTE *)(a1 + 60);
LABEL_99:
          v8 += v67 >> 7;
LABEL_100:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v61 = objc_alloc_init(GEOVehicleSpecifications);
        if (GEOVehicleSpecificationsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v62 = 32;
LABEL_79:
          v63 = *(void **)(a1 + v62);
          *(_QWORD *)(a1 + v62) = v61;

          --v8;
          goto LABEL_100;
        }
LABEL_122:

LABEL_123:
        v73 = 0;
        v74 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        if ((v75 & 1) != 0)
LABEL_105:
          *(_BYTE *)(a1 + v74[612]) |= 8u;
        if (v79 & 1 | ((v73 & 1) == 0))
        {
          *(_BYTE *)(a1 + v74[612]) |= 0x10u;
          *(_BYTE *)(a1 + v74[612]) |= 0x20u;
          goto LABEL_116;
        }
        if (v17)
        {
          while (1)
          {
            v70 = *v17++;
            v69 = v70;
            if (v70 == 6)
              break;
            if (v69 == 9)
            {
              v68 = 32;
LABEL_112:
              *(_BYTE *)(a1 + v74[612]) |= v68;
            }
            else if (!v69)
            {
              goto LABEL_116;
            }
          }
          v68 = 16;
          goto LABEL_112;
        }
LABEL_116:
        if (v73)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v79 & 1) != 0)
        {
          v71 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v75 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 8) != 0)
        {
LABEL_80:
          v64 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v64 & 1) == 0)
          {
            v73 = 0;
LABEL_103:
            v74 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v58 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v59 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v58;

          }
          v60 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v60)
          {
            v73 = 0;
            v74 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_105;
          }
        }
LABEL_101:
        if (!(v77 & 1 | (v8 != 0)))
          goto LABEL_102;
        continue;
    }
  }
}

void sub_188E117D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E12050(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAutomobileOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAutomobileOptionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAutomobileOptionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAutomobileOptionsReadAllFrom_initialTag;
  Specified = GEOAutomobileOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E12204(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOAutomobileOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAutomobileOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E12264(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutomobileOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v28 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOUserPreferencesIsValid(a1))
            goto LABEL_57;
          goto LABEL_53;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVehicleSpecificationsIsValid(a1))
            goto LABEL_57;
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOUserPreferencesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVChargingPreferenceIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOVehicleSpecificationsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLPRInfoIsValid(a1))
            goto LABEL_30;
          goto LABEL_45;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVInfoIsValid(a1))
            goto LABEL_45;
          goto LABEL_30;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVehicleInfoIsValid(a1))
            goto LABEL_45;
LABEL_30:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_45;
          v17 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_45:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_42;
      }
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188E12C88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOAutomobileOptionsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 60) & 0x50) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 60) & 0x20) != 0)
    return GEOVehicleSpecificationsIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEOAutomobileOptionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOAutomobileOptionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_188E130A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E13470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCameraInputReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOLatLng *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addEventPosition:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188E13E44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCameraInputReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCameraInputReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E13EA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCameraInputIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOChargerPlugReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOChargerPlug__type;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOChargerPlug__type;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOChargerPlug__type;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOChargerPlug__maximumPower;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOChargerPlug__maximumPower;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOChargerPlug__maximumPower;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E15370(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOChargerPlugReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E153D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188E15B80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOChargerPlugsInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int *v17;
  _BOOL4 v18;
  int *v19;
  int v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOChargerPlug *v39;
  id v40;
  void *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  char v46;
  void *v47;
  char v49;
  int v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_DWORD)v10 | v9;
        v16 = v14 | v10;
        if ((((v14 | v10) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = v8 != 0;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_61;
        v49 = v15;
        v50 = v18 | v16 | v15;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_59;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_24;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_24:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_26:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_59:
      v20 = 1;
      goto LABEL_60;
    }
    v33 = v25 >> 3;
    v34 = v16;
    if (!((v17 == 0) | v16 & 1))
    {
      v35 = v17;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (v34 && (*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_81;
        v39 = objc_alloc_init(GEOChargerPlug);
        if (!GEOChargerPlugReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_80;
        PBReaderRecallMark();
        -[GEOChargerPlugsInfo _addNoFlagsSuggestedChargerPlug:](a1, v39);
LABEL_49:

        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_55:
        if ((v50 & 1) == 0)
          goto LABEL_59;
        goto LABEL_58;
      }
    }
    else if ((v49 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v41 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v40;

      }
      v42 = PBUnknownFieldAdd();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if (!v42)
      {
        v20 = 0;
        goto LABEL_62;
      }
      goto LABEL_55;
    }
LABEL_57:
    v43 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v43 & v50 & 1) == 0)
    {
      v20 = v43;
      goto LABEL_60;
    }
LABEL_58:
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_59;
  }
  if (!v34 || (*(_BYTE *)(a1 + 52) & 4) != 0)
    goto LABEL_57;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v39 = objc_alloc_init(GEOChargerPlug);
  if (GEOChargerPlugReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOChargerPlugsInfo _addNoFlagsSupportedChargerPlug:](a1, v39);
    goto LABEL_49;
  }
LABEL_80:

LABEL_81:
  v20 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  LOBYTE(v15) = v49;
LABEL_61:
  if ((v15 & 1) != 0)
LABEL_62:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v16 & 1 | ((v20 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_73;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v45 = *v17++;
        v44 = v45;
        if (v45 == 1)
          break;
        if (v44 == 2)
        {
          v46 = 4;
          goto LABEL_72;
        }
        if (!v44)
          goto LABEL_73;
      }
      v46 = 2;
LABEL_72:
      *(_BYTE *)(a1 + 52) |= v46;
      continue;
    }
  }
LABEL_73:
  if (v20)
  {
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if ((v16 & 1) == 0)
      return v3;
LABEL_77:
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v16 & 1) != 0)
      goto LABEL_77;
  }
  return v3;
}

void sub_188E163B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E16ED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOChargerPlugsInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOChargerPlugsInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOChargerPlugsInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOChargerPlugsInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOChargerPlugsInfoReadAllFrom_initialTag;
  Specified = GEOChargerPlugsInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOChargerPlugsInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E17200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOChargerPlugsInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOChargerPlugsInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E17260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugsInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargerPlugIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E176F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargerPlugsInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188E17B74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E17EDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E182E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClickableAdvisoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOFormattedString *v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  int v62;
  void *v63;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v7;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_86;
        v65 = v17;
        v66 = v18 | v17;
        v68 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v67 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_84;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_84:
      v21 = 1;
      goto LABEL_85;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v68 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 2)
    {
      if (v36 && (*(_BYTE *)(a1 + 68) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_105;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v43 = 0;
            v44 = 0;
            v45 = 0;
            while (1)
            {
              v46 = *v20;
              v47 = *(_QWORD *)(v3 + v46);
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
                break;
              v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v47);
              *(_QWORD *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v31 = v44++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_59;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_59:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v54 = 0;
          v55 = 0;
          v56 = 0;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v57 = *v20;
            v58 = *(_QWORD *)(v3 + v57);
            v59 = v58 + 1;
            if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
              break;
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_82;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
        v18 = v67;
        goto LABEL_68;
      }
      goto LABEL_67;
    }
    if ((_DWORD)v35 == 1)
      break;
    if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
      goto LABEL_67;
    if (!*(_QWORD *)(a1 + 16))
    {
      v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v51 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v50;

    }
    v52 = PBUnknownFieldAdd();
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v52)
    {
      v21 = 0;
      goto LABEL_87;
    }
LABEL_68:
    if (!(v66 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_84;
  }
  if (!v36)
  {
LABEL_67:
    v53 = PBReaderSkipValueWithTag();
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v53 & 1) == 0)
    {
      v21 = 0;
      goto LABEL_85;
    }
    goto LABEL_68;
  }
  if ((*(_BYTE *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_105;
    v9 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_105;
  v41 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v42 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v41;

    --v9;
LABEL_73:
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_68;
  }

LABEL_105:
  v21 = 0;
  v18 = v67;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
  v17 = v65;
LABEL_86:
  if ((v17 & 1) != 0)
LABEL_87:
    *(_BYTE *)(a1 + 68) |= 1u;
  if (v18 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 68) |= 4u;
    *(_BYTE *)(a1 + 68) |= 2u;
    goto LABEL_97;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v62 = *v19++;
        v61 = v62;
        if (v62 == 1)
          break;
        if (v61 == 2)
          goto LABEL_96;
        if (!v61)
          goto LABEL_97;
      }
      LOBYTE(v61) = 4;
LABEL_96:
      *(_BYTE *)(a1 + 68) |= v61;
      continue;
    }
  }
LABEL_97:
  if (v21)
  {
    v3 = *(_BYTE *)(v3 + *v22) == 0;
    if ((v18 & 1) == 0)
      return v3;
LABEL_101:
    v63 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v18 & 1) != 0)
      goto LABEL_101;
  }
  return v3;
}

void sub_188E18ADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E19370(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClickableAdvisoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOClickableAdvisoryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOClickableAdvisoryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOClickableAdvisoryReadAllFrom_initialTag;
  Specified = GEOClickableAdvisoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E19514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClickableAdvisoryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOClickableAdvisoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E19574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E19718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOClickableAdvisoryIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOClickableAdvisoryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOClickableAdvisoryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E19A34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E19C84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientFeedbackInfoReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  void *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (v18)
            objc_msgSend(a1, "addDisplayedBannerEventInfo:", v18);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188E1A5E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientFeedbackInfoReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOClientFeedbackInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E1A648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientFeedbackInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOCommonOptionsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  _BOOL8 v65;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 8u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeAggressive;
                goto LABEL_80;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                v20 = 0;
                v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeAggressive;
                goto LABEL_83;
              }
            }
            v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeAggressive;
            goto LABEL_81;
          case 2u:
            v29 = 0;
            v30 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 0x20u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeEstimate;
                goto LABEL_80;
              }
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v25 = v30++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeEstimate;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeEstimate;
            goto LABEL_81;
          case 3u:
            v35 = 0;
            v36 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 0x10u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeConservative;
                goto LABEL_80;
              }
              v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
              *(_QWORD *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v25 = v36++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeConservative;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOCommonOptions__includeTravelTimeConservative;
            goto LABEL_81;
          case 4u:
            v41 = 0;
            v42 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (2)
            {
              v43 = *v4;
              v44 = *(_QWORD *)&v3[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCommonOptions__excludeGuidance;
                goto LABEL_80;
              }
              v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
              *(_QWORD *)&v3[v43] = v45;
              v20 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v25 = v42++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOCommonOptions__excludeGuidance;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOCommonOptions__excludeGuidance;
            goto LABEL_81;
          case 5u:
            v47 = 0;
            v48 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 4u;
            while (2)
            {
              v49 = *v4;
              v50 = *(_QWORD *)&v3[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCommonOptions__includeSummaryForPredictedDestination;
                goto LABEL_80;
              }
              v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
              *(_QWORD *)&v3[v49] = v51;
              v20 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v25 = v48++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOCommonOptions__includeSummaryForPredictedDestination;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOCommonOptions__includeSummaryForPredictedDestination;
            goto LABEL_81;
          case 6u:
            v53 = 0;
            v54 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 2u;
            while (2)
            {
              v55 = *v4;
              v56 = *(_QWORD *)&v3[v55];
              v57 = v56 + 1;
              if (v56 == -1 || v57 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCommonOptions__includeSnapScoreMetadataDebug;
                goto LABEL_80;
              }
              v58 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v56);
              *(_QWORD *)&v3[v55] = v57;
              v20 |= (unint64_t)(v58 & 0x7F) << v53;
              if (v58 < 0)
              {
                v53 += 7;
                v25 = v54++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOCommonOptions__includeSnapScoreMetadataDebug;
                  goto LABEL_83;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOCommonOptions__includeSnapScoreMetadataDebug;
            goto LABEL_81;
          case 7u:
            v59 = 0;
            v60 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 0x40u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if ((PBUnknownFieldAdd() & 1) == 0)
              goto LABEL_94;
            continue;
        }
        while (1)
        {
          v61 = *v4;
          v62 = *(_QWORD *)&v3[v61];
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)&v3[*v5])
            break;
          v64 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v62);
          *(_QWORD *)&v3[v61] = v63;
          v20 |= (unint64_t)(v64 & 0x7F) << v59;
          if ((v64 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOCommonOptions__supportsArMode;
            goto LABEL_81;
          }
          v59 += 7;
          v25 = v60++ > 8;
          if (v25)
          {
            v20 = 0;
            v26 = &OBJC_IVAR___GEOCommonOptions__supportsArMode;
            goto LABEL_83;
          }
        }
        v26 = &OBJC_IVAR___GEOCommonOptions__supportsArMode;
LABEL_80:
        v3[*v6] = 1;
LABEL_81:
        if (v3[*v6])
          v20 = 0;
LABEL_83:
        *(_BYTE *)(a1 + *v26) = v20 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v65 = v3[*v6] == 0;
  }
  else
  {
LABEL_94:
    v65 = 0;
  }
  objc_sync_exit(v3);

  return v65;
}

void sub_188E1BF28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCommonOptionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E1BF88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_78;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_78;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_78;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_78;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_78;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_77;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v21 = v42++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_78;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_81;
          v47 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_81:
          v52 = 0;
          goto LABEL_80;
      }
      while (1)
      {
        v48 = *v2;
        v49 = *(_QWORD *)&a1[v48];
        v50 = v49 + 1;
        if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
          break;
        v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
        *(_QWORD *)&a1[v48] = v50;
        if (v51 < 0)
        {
          v21 = v47++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_78;
      }
LABEL_77:
      a1[*v4] = 1;
LABEL_78:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v52 = a1[*v4] == 0;
LABEL_80:
  PBReaderRecallMark();
  return v52;
}

BOOL GEOCommonResponseAttributesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188E1D410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonResponseAttributesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCommonResponseAttributesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E1D470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCommonResponseAttributesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOConditionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOCondition *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  uint64_t v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v26 = objc_alloc_init(GEOCondition);
          if (!GEOConditionReadAllFrom(v26, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addCondition:", v26, 0, 0);

        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            v27 = 0;
            v28 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
                break;
              v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
              *(_QWORD *)&v3[v29] = v31;
              v21 |= (unint64_t)(v32 & 0x7F) << v27;
              if ((v32 & 0x80) == 0)
                goto LABEL_48;
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_50:
            v35 = 24;
            goto LABEL_51;
          }
          if ((_DWORD)v18 == 1)
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_44;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_46:
            v35 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v35) = v21;
            continue;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v34 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v33;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_188E1E7C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOConditionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOConditionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E1E820(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOConditionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOConditionIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_188E1F470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOConditionalFormattedStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v52 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom())
          goto LABEL_84;
        PBReaderRecallMark();
        v41 = 32;
LABEL_50:
        v42 = *(void **)(a1 + v41);
        *(_QWORD *)(a1 + v41) = v40;

        --v8;
LABEL_64:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v47 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v47 >> 7;
      goto LABEL_64;
    }
    if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v46 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v46 & 1) == 0)
      {
        v52 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v52 = 0;
      v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v47 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v40 = objc_alloc_init(GEOCondition);
  if (GEOConditionReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v52 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v54 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v53[182]) |= 1u;
LABEL_69:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[182]) |= 4u;
    *(_BYTE *)(a1 + v53[182]) |= 2u;
    goto LABEL_78;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v53[182]) |= v48;
      }
      else if (!v48)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v48) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188E1FAF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E200D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOConditionalFormattedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOConditionalFormattedStringReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOConditionalFormattedStringReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOConditionalFormattedStringReadAllFrom_initialTag;
  Specified = GEOConditionalFormattedStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E2028C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOConditionalFormattedStringReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOConditionalFormattedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E202EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOConditionalFormattedStringIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOConditionIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E20668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOConditionalFormattedStringIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(_QWORD *)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOConditionalFormattedStringIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOConditionalFormattedStringIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E2095C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E20BA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E20E8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCountdownDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  char v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void *v45;
  id v46;
  void *v47;
  int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  int v75;
  char v76;
  void *v77;
  char v79;
  char v80;
  char v81;
  char v82;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 108)), (uint16x4_t)0xFFFCFFFFFFFEFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 108) & 1)+ ((*(_BYTE *)(a1 + 108) & 0x20) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v14 | v10) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_117;
        v79 = v14 & ~(_BYTE)v10 | v9;
        v80 = v16 | v15;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v82 = (v18 == 0) | v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v81 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_115;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_115:
      LODWORD(v13) = 1;
      goto LABEL_116;
    }
    v32 = v23 >> 3;
    v33 = v16;
    if ((v82 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(_BYTE *)(a1 + 108) & 4) != 0)
          goto LABEL_86;
        if (v30 != 2)
        {
          v61 = 0;
          v62 = 0;
          v63 = 0;
          while (1)
          {
            v64 = *v17;
            v65 = *(_QWORD *)(v3 + v64);
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
              break;
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              v28 = v62++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_109;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_109:
          PBRepeatedUInt32Add();
          goto LABEL_112;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_134;
        while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
        {
          v38 = 0;
          v39 = 0;
          v40 = 0;
          while (1)
          {
            v41 = *v17;
            v42 = *(_QWORD *)(v3 + v41);
            v43 = v42 + 1;
            if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
              break;
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v28 = v39++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_52;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_52:
          PBRepeatedUInt32Add();
        }
        goto LABEL_93;
      case 2:
        if (!v33 || (*(_BYTE *)(a1 + 108) & 8) != 0)
          goto LABEL_86;
        PBReaderReadString();
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        if (v45)
          -[GEOCountdownData _addNoFlagsAlternateFormatString:](a1, v45);

        goto LABEL_112;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 108) & 2) != 0)
          goto LABEL_86;
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_134;
          while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
          {
            v49 = 0;
            v50 = 0;
            v51 = 0;
            while (1)
            {
              v52 = *v17;
              v53 = *(_QWORD *)(v3 + v52);
              v54 = v53 + 1;
              if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
                break;
              v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
              *(_QWORD *)(v3 + v52) = v54;
              v51 |= (unint64_t)(v55 & 0x7F) << v49;
              if (v55 < 0)
              {
                v49 += 7;
                v28 = v50++ >= 9;
                if (!v28)
                  continue;
              }
              goto LABEL_78;
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_78:
            PBRepeatedInt32Add();
          }
LABEL_93:
          PBReaderRecallMark();
        }
        else
        {
          v68 = 0;
          v69 = 0;
          v70 = 0;
          while (1)
          {
            v71 = *v17;
            v72 = *(_QWORD *)(v3 + v71);
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
              break;
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v28 = v69++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_111;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_111:
          PBRepeatedInt32Add();
        }
        goto LABEL_112;
      case 5:
        if (!v33)
          goto LABEL_86;
        if ((*(_BYTE *)(a1 + 108) & 0x10) == 0)
        {
          PBReaderReadString();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 80;
          goto LABEL_85;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_134;
        v60 = 8 * *(_BYTE *)(a1 + 108);
        goto LABEL_92;
      case 6:
        if (!v33)
          goto LABEL_86;
        if ((*(_BYTE *)(a1 + 108) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_134:
            LODWORD(v13) = 0;
            v16 = v81;
            if ((v79 & 1) == 0)
              goto LABEL_119;
LABEL_118:
            *(_BYTE *)(a1 + 108) |= 1u;
            goto LABEL_119;
          }
          v60 = 4 * *(_BYTE *)(a1 + 108);
LABEL_92:
          v7 += v60 >> 7;
        }
        else
        {
          PBReaderReadString();
          v56 = objc_claimAutoreleasedReturnValue();
          v57 = 88;
LABEL_85:
          v58 = *(void **)(a1 + v57);
          *(_QWORD *)(a1 + v57) = v56;

          --v7;
        }
LABEL_112:
        v16 = v81;
        goto LABEL_113;
      default:
        if ((v79 & 1) != 0 && (*(_BYTE *)(a1 + 108) & 1) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v16 = v81;
          if (!v48)
          {
            LODWORD(v13) = 0;
            goto LABEL_118;
          }
LABEL_113:
          if (!(v80 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_115;
          continue;
        }
LABEL_86:
        v59 = PBReaderSkipValueWithTag();
        v16 = v81;
        if ((v59 & 1) != 0)
          goto LABEL_113;
        LODWORD(v13) = 0;
LABEL_116:
        v15 = v79;
LABEL_117:
        if ((v15 & 1) != 0)
          goto LABEL_118;
LABEL_119:
        if (v16 & 1 | ((v13 & 1) == 0))
        {
          *(_BYTE *)(a1 + 108) |= 4u;
          *(_BYTE *)(a1 + 108) |= 8u;
          *(_BYTE *)(a1 + 108) |= 2u;
          *(_BYTE *)(a1 + 108) |= 0x10u;
          *(_BYTE *)(a1 + 108) |= 0x20u;
        }
        else if (v18)
        {
          while (1)
          {
            v75 = *v18++;
            v76 = 4;
            switch(v75)
            {
              case 0:
                goto LABEL_128;
              case 1:
                goto LABEL_127;
              case 2:
                v76 = 8;
                goto LABEL_127;
              case 4:
                v76 = 2;
                goto LABEL_127;
              case 5:
                v76 = 16;
                goto LABEL_127;
              case 6:
                v76 = 32;
LABEL_127:
                *(_BYTE *)(a1 + 108) |= v76;
                break;
              default:
                continue;
            }
          }
        }
LABEL_128:
        if ((_DWORD)v13)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v16 & 1) == 0)
            return v3;
LABEL_132:
          v77 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
            goto LABEL_132;
        }
        return v3;
    }
  }
}

void sub_188E21AAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E21DE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E22208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2234C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E22DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCountdownDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCountdownDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCountdownDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCountdownDataReadAllFrom_initialTag;
  Specified = GEOCountdownDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188E22F4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCountdownDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCountdownDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E22FAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountdownDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_65;
            while (1)
            {
LABEL_43:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                goto LABEL_62;
              v27 = a1[*v4];
              if (a1[*v4])
                goto LABEL_62;
              while (1)
              {
                v28 = *v2;
                v29 = *(_QWORD *)&a1[v28];
                v30 = v29 + 1;
                if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                  break;
                v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
                *(_QWORD *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  v13 = v27++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_43;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0)
            goto LABEL_65;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_39;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_38;
          goto LABEL_65;
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_65:
              PBReaderRecallMark();
              return 0;
            }
LABEL_53:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v32 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v33 = *v2;
                v34 = *(_QWORD *)&a1[v33];
                v35 = v34 + 1;
                if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                  break;
                v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
                *(_QWORD *)&a1[v33] = v35;
                if (v36 < 0)
                {
                  v13 = v32++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_53;
              }
              a1[*v4] = 1;
            }
LABEL_62:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_65;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
                break;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0)
              {
                v26 = v15++;
                if (v26 <= 8)
                  continue;
              }
              goto LABEL_39;
            }
LABEL_41:
            a1[*v4] = 1;
          }
LABEL_39:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_63;
          break;
        case 5u:
          if (v15 == 2)
            goto LABEL_38;
          goto LABEL_65;
        case 6u:
          if (v15 == 2)
            goto LABEL_38;
          goto LABEL_65;
        default:
LABEL_38:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_39;
          goto LABEL_65;
      }
    }
  }
LABEL_63:
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_188E23650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountdownDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = (*(_BYTE *)(a1 + 108) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_188E23B10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E23F08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E24170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCyclingOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOCyclingUserPreferences *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  int v49;
  int *v50;
  char v51;
  char v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v10;
        v51 = v14 & ~(_BYTE)v10 | v9;
        v52 = v14 | v10 | v51;
        if ((((v14 | v10) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_65;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_65:
      v49 = 1;
      goto LABEL_66;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_86;
          v36 = objc_alloc_init(GEOCyclingUserPreferences);
          if (!GEOCyclingUserPreferencesReadAllFrom((uint64_t)v36, (void *)v3))
            goto LABEL_85;
          PBReaderRecallMark();
          v37 = 24;
LABEL_49:
          v38 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;

          --v8;
LABEL_63:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v43 = *(_BYTE *)(a1 + 52) << 6;
LABEL_62:
        v8 += v43 >> 7;
        goto LABEL_63;
      }
    }
    else if ((v51 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v40 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v39;

      }
      v41 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
      {
        v49 = 0;
        v50 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        goto LABEL_68;
      }
      goto LABEL_64;
    }
LABEL_56:
    v42 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
      v49 = 0;
LABEL_66:
      v50 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
      goto LABEL_67;
    }
LABEL_64:
    if (!(v52 & 1 | (v8 != 0)))
      goto LABEL_65;
  }
  if (!v31)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v43 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v36 = objc_alloc_init(GEOCyclingVehicleSpecifications);
  if (GEOCyclingVehicleSpecificationsReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    v37 = 32;
    goto LABEL_49;
  }
LABEL_85:

LABEL_86:
  v49 = 0;
  v50 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  if ((v51 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v50[615]) |= 1u;
LABEL_69:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(_BYTE *)(a1 + v50[615]) |= 2u;
    *(_BYTE *)(a1 + v50[615]) |= 4u;
    goto LABEL_79;
  }
  if (v16)
  {
    while (1)
    {
      v46 = *v16++;
      v45 = v46;
      if (v46 == 1)
        break;
      if (v45 == 2)
      {
        v44 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v50[615]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_79;
      }
    }
    v44 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v49)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_83:
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_83;
  }
  return v3;
}

void sub_188E247F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E24DE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCyclingOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCyclingOptionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCyclingOptionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCyclingOptionsReadAllFrom_initialTag;
  Specified = GEOCyclingOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E24F98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCyclingOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCyclingOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E24FF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCyclingUserPreferencesIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOCyclingVehicleSpecificationsIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOCyclingUserPreferencesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOCyclingVehicleSpecificationsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_188E257EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingOptionsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188E25A94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E25CE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingUserPreferencesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidBusyRoads;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidBusyRoads;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidBusyRoads;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidStairs;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidStairs;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidStairs;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 20) |= 2u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidHills;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          v21 = 0;
          v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidHills;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOCyclingUserPreferences__avoidHills;
LABEL_51:
      if (v3[*v6])
        v21 = 0;
LABEL_53:
      *(_BYTE *)(a1 + *v27) = v21 != 0;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188E26830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingUserPreferencesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCyclingUserPreferencesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E26890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingVehicleSpecificationsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188E27438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCyclingVehicleSpecificationsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCyclingVehicleSpecificationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E27498(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E27E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsRequestFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  BOOL v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v66 = v15 | v8;
        v67 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v68 = (v17 == 0) | v16;
        v69 = v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v64 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v69;
    if ((v68 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        v57 = 52;
        goto LABEL_76;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v47 = 0;
        v48 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v49 = *v18;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v39 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v28 = v48++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_75:
        v57 = 56;
LABEL_76:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_82;
      case 3:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 24;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_81;
      case 4:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = 32;
LABEL_65:
          v55 = *(void **)(a1 + v54);
          *(_QWORD *)(a1 + v54) = v53;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_82;
        }
LABEL_103:
        v64 = 0;
        v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        if ((v66 & 1) != 0)
LABEL_86:
          *(_BYTE *)(a1 + v65[617]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(_BYTE *)(a1 + v65[617]) |= 8u;
          *(_BYTE *)(a1 + v65[617]) |= 0x10u;
          goto LABEL_97;
        }
        if (v17)
        {
          while (1)
          {
            v61 = *v17++;
            v60 = v61;
            if (v61 == 3)
              break;
            if (v60 == 4)
            {
              v59 = 16;
LABEL_93:
              *(_BYTE *)(a1 + v65[617]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_97;
            }
          }
          v59 = 8;
          goto LABEL_93;
        }
LABEL_97:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v69)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v64 = 0;
LABEL_84:
            v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v67 & 1 | (v10 != 0)))
          goto LABEL_83;
        continue;
    }
  }
}

void sub_188E285B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E28F00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsRequestFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODirectionsRequestFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODirectionsRequestFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODirectionsRequestFeedbackReadAllFrom_initialTag;
  Specified = GEODirectionsRequestFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E29088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsRequestFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODirectionsRequestFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E290E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_35;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_40;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v23 = 0;
          break;
        case 3u:
          if (v15 == 2)
            goto LABEL_39;
          goto LABEL_43;
        case 4u:
          if (v15 == 2)
            goto LABEL_39;
          goto LABEL_43;
        default:
LABEL_39:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_43:
          v28 = 0;
          goto LABEL_42;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_40;
      }
LABEL_35:
      a1[*v4] = 1;
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

void sub_188E29540(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestFeedbackIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188E298A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E29BCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E29E28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODrivingWalkingInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOFormattedString *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  void *v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFDFFFEFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 2) != 0)+ ((*(_BYTE *)(a1 + 84) & 0x40) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_88;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_88:
      v51 = 1;
      goto LABEL_89;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_109;
          v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v40 = 56;
            goto LABEL_76;
          }
          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v46 = 4 * *(_BYTE *)(a1 + 84);
        goto LABEL_85;
      case 2:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_108;
        PBReaderRecallMark();
        -[GEODrivingWalkingInstruction _addNoFlagsNormalCommand:](a1, v39);
        goto LABEL_59;
      case 3:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 4) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_108;
        PBReaderRecallMark();
        -[GEODrivingWalkingInstruction _addNoFlagsContinueCommand:](a1, v39);
        goto LABEL_59;
      case 4:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 8) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_108;
        PBReaderRecallMark();
        -[GEODrivingWalkingInstruction _addNoFlagsMergeCommand:](a1, v39);
LABEL_59:

        goto LABEL_86;
      case 6:
        if (!v34)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v46 = *(_BYTE *)(a1 + 84) << 6;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_108;
        PBReaderRecallMark();
        v40 = 24;
        goto LABEL_76;
      case 7:
        if (!v34)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v46 = 2 * *(_BYTE *)(a1 + 84);
LABEL_85:
          v7 += v46 >> 7;
LABEL_86:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v39 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v40 = 64;
LABEL_76:
          v44 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
          goto LABEL_86;
        }
LABEL_108:

LABEL_109:
        v51 = 0;
        v52 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_90:
        if ((v53 & 1) != 0)
LABEL_91:
          *(_BYTE *)(a1 + v52[619]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(_BYTE *)(a1 + v52[619]) |= 0x20u;
          *(_BYTE *)(a1 + v52[619]) |= 0x10u;
          *(_BYTE *)(a1 + v52[619]) |= 4u;
          *(_BYTE *)(a1 + v52[619]) |= 8u;
          *(_BYTE *)(a1 + v52[619]) |= 2u;
          *(_BYTE *)(a1 + v52[619]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            v47 = *v19++;
            v48 = 32;
            switch(v47)
            {
              case 0:
                goto LABEL_102;
              case 1:
                goto LABEL_101;
              case 2:
                v48 = 16;
                goto LABEL_101;
              case 3:
                v48 = 4;
                goto LABEL_101;
              case 4:
                v48 = 8;
                goto LABEL_101;
              case 6:
                v48 = 2;
                goto LABEL_101;
              case 7:
                v48 = 64;
LABEL_101:
                *(_BYTE *)(a1 + v52[619]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_102:
        if (v51)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v56)
        {
          v49 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_77:
          v45 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
            v51 = 0;
LABEL_89:
            v52 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v51 = 0;
            v52 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_91;
          }
        }
LABEL_87:
        if (!(v54 & 1 | (v7 != 0)))
          goto LABEL_88;
        continue;
    }
  }
}

void sub_188E2A75C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2A944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2AB2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2B48C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2B570(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODrivingWalkingInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v27;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v27 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v4);
  }

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
    }
    while (v9);
  }

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v19;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v19 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v18);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[3], "readAll:", 1);
  return objc_msgSend(a1[8], "readAll:", 1);
}

unint64_t GEODrivingWalkingInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODrivingWalkingInstructionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODrivingWalkingInstructionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODrivingWalkingInstructionReadAllFrom_initialTag;
  Specified = GEODrivingWalkingInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEODrivingWalkingInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188E2BF58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODrivingWalkingInstructionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_31:
    v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_31;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      if (v7++ >= 9)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_31;
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          goto LABEL_30;
        goto LABEL_22;
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
          goto LABEL_30;
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
LABEL_23:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_31;
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_188E2C508(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODrivingWalkingInstructionIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(char *)(a1 + 84);
  if (v2 < 0)
    return 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_5:
    if ((v2 & 0x1C) != 0)
      return 1;
    if ((v2 & 2) != 0)
    {
      if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
        return 1;
      LOBYTE(v2) = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 0x40) != 0)
    {
      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
        return 1;
      LOBYTE(v2) = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 0x10) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 48);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v25;
LABEL_17:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v8)
            objc_enumerationMutation(v5);
          if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_45;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
            if (v7)
              goto LABEL_17;
            break;
          }
        }
      }

      LOBYTE(v2) = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 4) != 0)
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v5 = *(id *)(a1 + 32);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v21;
LABEL_27:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v21 != v12)
            objc_enumerationMutation(v5);
          if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v13)) & 1) != 0)
            goto LABEL_45;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
            if (v11)
              goto LABEL_27;
            break;
          }
        }
      }

      LOBYTE(v2) = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 8) == 0)
      return 0;
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v5 = *(id *)(a1 + 40);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
    if (!v3)
    {
LABEL_46:

      return v3;
    }
    v14 = *(_QWORD *)v17;
LABEL_38:
    v15 = 0;
    while (1)
    {
      if (*(_QWORD *)v17 != v14)
        objc_enumerationMutation(v5);
      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v15)) & 1) != 0)
        break;
      if (v3 == ++v15)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
        if (v3)
          goto LABEL_38;
        goto LABEL_46;
      }
    }
LABEL_45:
    v3 = 1;
    goto LABEL_46;
  }
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) == 0)
  {
    LOBYTE(v2) = *(_BYTE *)(a1 + 84);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEODrivingWalkingInstructionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEODrivingWalkingInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E2CC34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2D5E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODrivingWalkingSpokenInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOFormattedString *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFELL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 8) != 0)+ ((*(_BYTE *)(a1 + 80) & 2) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_96;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_96:
      v57 = 1;
      goto LABEL_97;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_115;
          v38 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            v39 = 56;
            goto LABEL_65;
          }
          goto LABEL_114;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v52 = 2 * *(_BYTE *)(a1 + 80);
        goto LABEL_93;
      case 2:
        if (!v33)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v52 = 32 * *(_BYTE *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v38 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        v39 = 24;
        goto LABEL_65;
      case 3:
        if (!v33)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v52 = 8 * *(_BYTE *)(a1 + 80);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v38 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        v39 = 40;
        goto LABEL_65;
      case 4:
        if (!v33)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v52 = 4 * *(_BYTE *)(a1 + 80);
LABEL_93:
          v8 += v52 >> 7;
LABEL_94:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_95:
          if (!(v60 & 1 | (v8 != 0)))
            goto LABEL_96;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v38 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v39 = 48;
LABEL_65:
          v43 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v8;
          goto LABEL_94;
        }
LABEL_114:

LABEL_115:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        v58 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v59 & 1) != 0)
LABEL_98:
          *(_BYTE *)(a1 + v58[228]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[228]) |= 0x40u;
          *(_BYTE *)(a1 + v58[228]) |= 4u;
          *(_BYTE *)(a1 + v58[228]) |= 0x10u;
          *(_BYTE *)(a1 + v58[228]) |= 0x20u;
          *(_BYTE *)(a1 + v58[228]) |= 8u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 64;
            switch(v53)
            {
              case 0:
                goto LABEL_108;
              case 1:
                goto LABEL_107;
              case 2:
                v54 = 4;
                goto LABEL_107;
              case 3:
                v54 = 16;
                goto LABEL_107;
              case 4:
                v54 = 32;
                goto LABEL_107;
              case 5:
                v54 = 8;
LABEL_107:
                *(_BYTE *)(a1 + v58[228]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_108:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if (!v33 || (*(_BYTE *)(a1 + 80) & 8) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v38 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        -[GEODrivingWalkingSpokenInstruction _addNoFlagsExecutionStage:](a1, v38);

        goto LABEL_94;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_79;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v47 = *v19;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v29 = v45++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_84:
        *(_DWORD *)(a1 + 76) = v46;
        goto LABEL_95;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 2) != 0)
        {
LABEL_79:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_98;
          }
        }
        goto LABEL_95;
    }
  }
}

void sub_188E2DF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2E0A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2E1E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2E32C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E2F078(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEODrivingWalkingSpokenInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEODrivingWalkingSpokenInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODrivingWalkingSpokenInstructionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODrivingWalkingSpokenInstructionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODrivingWalkingSpokenInstructionReadAllFrom_initialTag;
  Specified = GEODrivingWalkingSpokenInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEODrivingWalkingSpokenInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188E2F34C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODrivingWalkingSpokenInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODrivingWalkingSpokenInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E2F3AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODrivingWalkingSpokenInstructionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_37;
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_37;
          v17 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_37:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_23;
      }
      a1[*v4] = 1;
LABEL_23:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188E2F8A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODrivingWalkingSpokenInstructionIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if (*(char *)(a1 + 80) < 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 80);
  if ((v2 & 0x40) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 80);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 80);
  }
  if ((v2 & 0x10) == 0)
    goto LABEL_11;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 80);
LABEL_11:
  if ((v2 & 0x20) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 80);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEODrivingWalkingSpokenInstructionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEODrivingWalkingSpokenInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E2FE24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E302E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIncidentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEORouteIncident *v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v25 = *v6;
            v26 = *(_QWORD *)&v5[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
            *(_QWORD *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0)
              goto LABEL_36;
            v22 += 7;
            v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v24) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEORouteIncident);
          if (!GEORouteIncidentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188E30D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIncidentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETARouteIncidentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E30D74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIncidentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORouteIncidentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  _BOOL8 v62;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
            goto LABEL_111;
          goto LABEL_115;
        case 2u:
          if (v16 == 2)
            goto LABEL_96;
          goto LABEL_115;
        case 3u:
          if (v16 == 2)
            goto LABEL_96;
          goto LABEL_115;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 5u:
          if (v16 == 2)
            goto LABEL_96;
          goto LABEL_115;
        case 6u:
          if (v16 == 2)
            goto LABEL_96;
          goto LABEL_115;
        case 7u:
        case 8u:
        case 9u:
          if (v16 != 1)
            goto LABEL_115;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_107;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_107;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORestrictionInfoIsValid(a1))
            goto LABEL_115;
          goto LABEL_111;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_106;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_112;
          }
        case 0x11u:
          if (v16 == 2)
            goto LABEL_96;
          goto LABEL_115;
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_115;
          v57 = 0;
          break;
        case 0x13u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_115;
LABEL_111:
          PBReaderRecallMark();
          continue;
        default:
LABEL_96:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_115:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v58 = *v2;
        v59 = *(_QWORD *)&a1[v58];
        v60 = v59 + 1;
        if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
          break;
        v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
        *(_QWORD *)&a1[v58] = v60;
        if (v61 < 0)
        {
          v26 = v57++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_112;
      }
LABEL_106:
      v14 = *v4;
LABEL_107:
      a1[v14] = 1;
LABEL_112:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v62 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v62;
}

BOOL GEOEVChargeInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  _BOOL8 v43;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_49;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_51:
            v42 = 24;
            goto LABEL_60;
          case 2u:
            *(_BYTE *)(a1 + 36) |= 1u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            *(_QWORD *)(a1 + 16) = v29;
            continue;
          case 3u:
            v30 = 0;
            v31 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            while (2)
            {
              v32 = *v4;
              v33 = *(_QWORD *)&v3[v32];
              v34 = v33 + 1;
              if (v33 == -1 || v34 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v35 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v33);
                *(_QWORD *)&v3[v32] = v34;
                v20 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  v15 = v31++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_55:
            v42 = 32;
            goto LABEL_60;
          case 4u:
            v36 = 0;
            v37 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_65;
            continue;
        }
        while (1)
        {
          v38 = *v4;
          v39 = *(_QWORD *)&v3[v38];
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)&v3[*v5])
            break;
          v41 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v39);
          *(_QWORD *)&v3[v38] = v40;
          v20 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0)
            goto LABEL_57;
          v36 += 7;
          v15 = v37++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_59:
        v42 = 28;
LABEL_60:
        *(_DWORD *)(a1 + v42) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_188E32510(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargeInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEVChargeInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E32570(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargeInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_51;
          }
        case 2u:
          if (v16 != 1)
            goto LABEL_54;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_50;
          v26 = v25 + 8;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_50;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v23 = v27++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_54:
          v37 = 0;
          goto LABEL_53;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v23 = v32++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_51;
      }
LABEL_49:
      v14 = *v4;
LABEL_50:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_53:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOEVChargingInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  GEOChargerPlugsInfo *v41;
  void *v42;
  uint64_t v43;
  _BOOL8 v44;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (!v5[*v8])
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (1)
            {
              v23 = *v6;
              v24 = *(_QWORD *)&v5[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
              *(_QWORD *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_49;
              v20 += 7;
              v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_51;
              }
            }
            v5[*v8] = 1;
LABEL_49:
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_51:
            v43 = 32;
            goto LABEL_60;
          case 2u:
            v29 = 0;
            v30 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v31 = *v6;
              v32 = *(_QWORD *)&v5[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v32);
                *(_QWORD *)&v5[v31] = v33;
                v22 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v17 = v30++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_55:
            v43 = 28;
            goto LABEL_60;
          case 3u:
            v35 = 0;
            v36 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (2)
            {
              v37 = *v6;
              v38 = *(_QWORD *)&v5[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v38);
                *(_QWORD *)&v5[v37] = v39;
                v22 |= (unint64_t)(v40 & 0x7F) << v35;
                if (v40 < 0)
                {
                  v35 += 7;
                  v17 = v36++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_59:
            v43 = 24;
LABEL_60:
            *(_DWORD *)(a1 + v43) = v22;
            goto LABEL_61;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v41 = objc_alloc_init(GEOChargerPlugsInfo);
            if (!GEOChargerPlugsInfoReadAllFrom((uint64_t)v41, v5, a3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

LABEL_61:
            if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
              goto LABEL_62;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    v44 = v5[*v8] == 0;
  }
  else
  {
LABEL_64:
    v44 = 0;
  }
  objc_sync_exit(v5);

  return v44;
}

void sub_188E33A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEVChargingInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E33AA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargerPlugsInfoIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOEVChargingPreferenceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOPreferenceEntity *v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v18 = objc_alloc_init(GEOPreferenceEntity);
          if (!GEOPreferenceEntityReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188E34D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingPreferenceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEVChargingPreferenceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E34D9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVChargingPreferenceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPreferenceEntityIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPreferenceEntityIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188E358A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEVInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  GEOChargerPlugsInfo *v81;
  void *v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  __int16 v103;
  int v104;
  __int16 v105;
  void *v106;
  int v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFF6FFF2FFF4FFF5) & 0xFFC1FFC1FFC1FFC1))+ ((*(_WORD *)(a1 + 112) >> 13) & 1)+ ((*(_WORD *)(a1 + 112) >> 9) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 | v11;
        v109 = v16 & ~(_BYTE)v11 | v9;
        v110 = v8;
        v112 = v16 | v11 | v109;
        if ((((v16 | v11) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v113 = (v18 == 0) | v17;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        v111 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_188;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_188:
      v108 = 1;
      goto LABEL_189;
    }
    v32 = v24 >> 3;
    v33 = v17;
    if ((v113 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_139;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_141;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_139:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_141:
        v102 = 84;
        goto LABEL_174;
      case 3:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v48 = 0;
        v49 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x40u;
        while (2)
        {
          v50 = *v19;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v40 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_145:
        v102 = 100;
        goto LABEL_174;
      case 4:
        if (!v33)
          goto LABEL_136;
        if ((*(_WORD *)(a1 + 112) & 0x1000) == 0)
        {
          PBReaderReadString();
          v54 = objc_claimAutoreleasedReturnValue();
          v55 = 40;
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_207;
        v103 = 8 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      case 5:
        if (!v33)
          goto LABEL_136;
        if ((*(_WORD *)(a1 + 112) & 0x800) == 0)
        {
          PBReaderReadString();
          v54 = objc_claimAutoreleasedReturnValue();
          v55 = 32;
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_207;
        v103 = 16 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      case 6:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v56 = 0;
        v57 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v58 = *v19;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v40 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v29 = v57++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_149:
        v102 = 80;
        goto LABEL_174;
      case 7:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v62 = 0;
        v63 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x20u;
        while (2)
        {
          v64 = *v19;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v40 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v29 = v63++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_153:
        v102 = 96;
        goto LABEL_174;
      case 8:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v68 = 0;
        v69 = 0;
        v70 = 0;
        *(_WORD *)(a1 + 112) |= 0x100u;
        while (2)
        {
          v71 = *v19;
          v72 = *(_QWORD *)(v3 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v29 = v69++ >= 9;
              if (v29)
              {
                v70 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v70 = 0;
LABEL_157:
        *(_BYTE *)(a1 + 108) = v70 != 0;
        goto LABEL_187;
      case 9:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v75 = 0;
        v76 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x80u;
        while (2)
        {
          v77 = *v19;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v40 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              v29 = v76++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_161:
        v102 = 104;
        goto LABEL_174;
      case 10:
        if (!v33)
          goto LABEL_136;
        if ((*(_WORD *)(a1 + 112) & 0x4000) == 0)
        {
          PBReaderReadString();
          v54 = objc_claimAutoreleasedReturnValue();
          v55 = 56;
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_207;
        v103 = 2 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      case 11:
        if (!v33)
          goto LABEL_136;
        if ((*(_WORD *)(a1 + 112) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_207;
          v103 = 32 * *(_WORD *)(a1 + 112);
LABEL_185:
          v7 += v103 >> 15;
          goto LABEL_186;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_207;
        v81 = objc_alloc_init(GEOChargerPlugsInfo);
        if (GEOChargerPlugsInfoReadAllFrom((uint64_t)v81, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v82 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v81;
LABEL_135:

          --v7;
LABEL_186:
          v17 = v111;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
LABEL_187:
          if (!(v112 & 1 | (v7 != 0)))
            goto LABEL_188;
          continue;
        }

LABEL_207:
        v108 = 0;
        v17 = v111;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_189:
        if ((v109 & 1) != 0)
LABEL_190:
          *(_WORD *)(a1 + 112) |= 0x200u;
        if (v17 & 1 | ((v108 & 1) == 0))
        {
          *(_WORD *)(a1 + 112) |= 0x1000u;
          *(_WORD *)(a1 + 112) |= 0x800u;
          *(_WORD *)(a1 + 112) |= 0x4000u;
          *(_WORD *)(a1 + 112) |= 0x400u;
          *(_WORD *)(a1 + 112) |= 0x2000u;
        }
        else if (v18)
        {
          while (1)
          {
            v104 = *v18++;
            v105 = 4096;
            switch(v104)
            {
              case 4:
                goto LABEL_199;
              case 5:
                v105 = 2048;
                goto LABEL_199;
              case 10:
                v105 = 0x4000;
                goto LABEL_199;
              case 11:
                v105 = 1024;
                goto LABEL_199;
              case 15:
                v105 = 0x2000;
LABEL_199:
                *(_WORD *)(a1 + 112) |= v105;
                break;
              default:
                continue;
            }
          }
        }
        if (v108)
        {
          v3 = *(_BYTE *)(v3 + *v20) == 0;
          if ((v17 & 1) == 0)
            return v3;
LABEL_204:
          v106 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
            goto LABEL_204;
        }
        return v3;
      case 12:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v83 = 0;
        v84 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          v85 = *v19;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v40 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v29 = v84++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_165:
        v102 = 88;
        goto LABEL_174;
      case 13:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v89 = 0;
        v90 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          v91 = *v19;
          v92 = *(_QWORD *)(v3 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v40 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              v29 = v90++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_169:
        v102 = 92;
        goto LABEL_174;
      case 14:
        if ((v110 & 1) == 0)
          goto LABEL_136;
        v95 = 0;
        v96 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v97 = *v19;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v40 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              v29 = v96++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_173:
        v102 = 76;
LABEL_174:
        *(_DWORD *)(a1 + v102) = v40;
        goto LABEL_187;
      case 15:
        if (!v33)
          goto LABEL_136;
        if ((*(_WORD *)(a1 + 112) & 0x2000) == 0)
        {
          PBReaderReadString();
          v54 = objc_claimAutoreleasedReturnValue();
          v55 = 48;
LABEL_134:
          v82 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;
          goto LABEL_135;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_207;
        v103 = 4 * *(_WORD *)(a1 + 112);
        goto LABEL_185;
      default:
        if ((v109 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
LABEL_136:
          v101 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BB8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v17 = v111;
          if ((v101 & 1) == 0)
          {
            v108 = 0;
            goto LABEL_189;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v17 = v111;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          if (!v47)
          {
            v108 = 0;
            goto LABEL_190;
          }
        }
        goto LABEL_187;
    }
  }
}

void sub_188E36710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E36A30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E36B70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E36E0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E37BE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEVInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOEVInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOEVInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOEVInfoReadAllFrom_initialTag;
  Specified = GEOEVInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188E37D8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEVInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEVInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E37DEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  _BOOL8 v63;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 4u:
          if (v15 == 2)
            goto LABEL_103;
          goto LABEL_107;
        case 5u:
          if (v15 == 2)
            goto LABEL_103;
          goto LABEL_107;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 0xAu:
          if (v15 == 2)
            goto LABEL_103;
          goto LABEL_107;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargerPlugsInfoIsValid(a1))
            goto LABEL_107;
          PBReaderRecallMark();
          continue;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v58 = 0;
          break;
        case 0xFu:
          if (v15 == 2)
            goto LABEL_103;
          goto LABEL_107;
        default:
LABEL_103:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_107:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v59 = *v2;
        v60 = *(_QWORD *)&a1[v59];
        v61 = v60 + 1;
        if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
          break;
        v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
        *(_QWORD *)&a1[v59] = v61;
        if (v62 < 0)
        {
          v22 = v58++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_104;
      }
LABEL_101:
      a1[*v4] = 1;
LABEL_104:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

void sub_188E3864C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOEVInfoIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0xD800) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if (GEOChargerPlugsInfoIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 112);
  }
  return (v2 >> 13) & 1;
}

os_unfair_lock_s *GEOEVInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOEVInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E38CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E39488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStateInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryPercentage;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryPercentage;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryPercentage;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryCharge;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryCharge;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOEVStateInfo__remainingBatteryCharge;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E39E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStateInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEVStateInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E39E7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStateInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOEVStepInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 39)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v24 = *v4;
            v25 = *(_QWORD *)&v3[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
            *(_QWORD *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_36;
            v21 += 7;
            v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v10 >> 3) == 38)
        {
          *(_BYTE *)(a1 + 28) |= 1u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_43;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_43:
    v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_188E3ACCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEVStepInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E3AD2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_37;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_37;
      if ((v8 >> 3) == 39)
        break;
      if ((v8 >> 3) == 38)
      {
        if (v16 != 1)
          goto LABEL_39;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 > 0xFFFFFFFFFFFFFFF7)
          goto LABEL_35;
        v20 = v19 + 8;
        if (v20 > *(_QWORD *)&a1[*v3])
          goto LABEL_35;
        *(_QWORD *)&a1[v18] = v20;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_37;
    }
    if ((v8 & 7) != 0)
      goto LABEL_39;
    v21 = 0;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
        break;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0 && v21++ <= 8)
        continue;
      goto LABEL_36;
    }
    v14 = *v4;
LABEL_35:
    a1[v14] = 1;
    goto LABEL_36;
  }
LABEL_37:
  v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

void sub_188E3B524(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOElevationProfileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPoint *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  void *v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFAFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v66 = v17 & ~(_BYTE)v12 | v10;
        v67 = v17 | v12 | v66;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v68 = (v18 == 0) | v17 | v12;
        v69 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_101;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_101:
      v64 = 1;
      goto LABEL_102;
    }
    v32 = v24 >> 3;
    v33 = v69;
    if ((v68 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(_BYTE *)(a1 + 76) & 0x20) != 0)
          goto LABEL_83;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v38 = objc_alloc_init(GEOPoint);
        if (!GEOPointReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_118;
        PBReaderRecallMark();
        -[GEOElevationProfile _addNoFlagsPoint:](a1, v38);
        goto LABEL_76;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_83;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v45 = *v19;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v29 = v43++ >= 9;
              if (v29)
              {
                LODWORD(v44) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v44) = 0;
LABEL_88:
        v58 = 68;
        goto LABEL_93;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_83;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v51 = *v19;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v29 = v50++ >= 9;
              if (v29)
              {
                LODWORD(v44) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v44) = 0;
LABEL_92:
        v58 = 72;
LABEL_93:
        *(_DWORD *)(a1 + v58) = v44;
        goto LABEL_100;
      case 4:
        if (!v33)
          goto LABEL_83;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_119;
          v59 = 8 * *(_BYTE *)(a1 + 76);
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v38 = objc_alloc_init(GEOMinimumVisibleElevationRange);
        if (!GEOMinimumVisibleElevationRangeReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_118;
        PBReaderRecallMark();
        v55 = 32;
        goto LABEL_82;
      case 5:
        if (!v33 || (*(_BYTE *)(a1 + 76) & 0x40) != 0)
          goto LABEL_83;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v38 = objc_alloc_init(GEOElevationSegmentDescription);
        if (!GEOElevationSegmentDescriptionReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_118;
        PBReaderRecallMark();
        -[GEOElevationProfile _addNoFlagsSegmentDescription:](a1, v38);
LABEL_76:

        goto LABEL_99;
      case 6:
        if (!v33)
          goto LABEL_83;
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_119;
          v59 = 16 * *(_BYTE *)(a1 + 76);
LABEL_98:
          v8 += v59 >> 7;
LABEL_99:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_100:
          if (!(v67 & 1 | (v8 != 0)))
            goto LABEL_101;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v38 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v55 = 24;
LABEL_82:
          v56 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v38;

          --v8;
          goto LABEL_99;
        }
LABEL_118:

LABEL_119:
        v64 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_102:
        v65 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v66 & 1) != 0)
LABEL_103:
          *(_BYTE *)(a1 + v65[288]) |= 4u;
        if (v69 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[288]) |= 0x20u;
          *(_BYTE *)(a1 + v65[288]) |= 0x10u;
          *(_BYTE *)(a1 + v65[288]) |= 0x40u;
          *(_BYTE *)(a1 + v65[288]) |= 8u;
        }
        else if (v18)
        {
          while (1)
          {
            v60 = *v18++;
            v61 = 32;
            switch(v60)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 4:
                v61 = 16;
                goto LABEL_111;
              case 5:
                v61 = 64;
                goto LABEL_111;
              case 6:
                v61 = 8;
LABEL_111:
                *(_BYTE *)(a1 + v65[288]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v69 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_83:
          v57 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_102;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_103;
          }
        }
        goto LABEL_100;
    }
  }
}

void sub_188E3C154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E3C298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E3C5CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E3D1E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOElevationProfileCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[4], "readAll:", 1);
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[6];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEOElevationProfileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOElevationProfileReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOElevationProfileReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOElevationProfileReadAllFrom_initialTag;
  Specified = GEOElevationProfileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOElevationProfileCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E3D538(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOElevationProfileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOElevationProfileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E3D598(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElevationProfileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPointIsValid(a1))
            goto LABEL_53;
          goto LABEL_56;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v23 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMinimumVisibleElevationRangeIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOElevationSegmentDescriptionIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_56;
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOMinimumVisibleElevationRangeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOElevationSegmentDescriptionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_188E3E2CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOElevationProfileIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 76);
  if (v2 > 0xF)
    return (os_unfair_lock_s *)1;
  if ((v2 & 8) != 0)
    return GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOElevationProfileIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOElevationProfileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return v2;
  }
  return result;
}

void sub_188E3E8C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E3EDF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElevationSegmentDescriptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  unint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  GEOFormattedString *v28;
  void *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  id v36;
  void *v37;
  uint64_t v38;
  _BOOL8 v39;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v28 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v28, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          v29 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v28;

        }
        else
        {
          if ((_DWORD)v20 == 2)
          {
            v30 = 0;
            v31 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v32 = *v6;
              v33 = *(_QWORD *)&v5[v32];
              v34 = v33 + 1;
              if (v33 == -1 || v34 > *(_QWORD *)&v5[*v7])
                break;
              v35 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v33);
              *(_QWORD *)&v5[v32] = v34;
              v23 |= (unint64_t)(v35 & 0x7F) << v30;
              if ((v35 & 0x80) == 0)
                goto LABEL_48;
              v30 += 7;
              v17 = v31++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8])
              LODWORD(v23) = 0;
LABEL_50:
            v38 = 24;
            goto LABEL_51;
          }
          if ((_DWORD)v20 == 1)
          {
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (1)
            {
              v24 = *v6;
              v25 = *(_QWORD *)&v5[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v5[*v7])
                break;
              v27 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
              *(_QWORD *)&v5[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0)
                goto LABEL_44;
              v21 += 7;
              v17 = v22++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8])
              LODWORD(v23) = 0;
LABEL_46:
            v38 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v38) = v23;
            continue;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v36 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v37 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v36;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v39 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    v39 = 0;
  }
  objc_sync_exit(v5);

  return v39;
}

void sub_188E3FA58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElevationSegmentDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOElevationSegmentDescriptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E3FAB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E402FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEnrouteNoticeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  const __int16 *v13;
  uint16x4_t v14;
  int16x4_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  uint64_t v52;
  void *v53;
  GEOGuidanceEvent *v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  __int16 v93;
  int v94;
  __int16 v95;
  void *v96;
  int v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v13 = (const __int16 *)(a1 + 88);
  v14 = (uint16x4_t)vld1_dup_s16(v13);
  v15 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v14, (uint16x4_t)0xFFF9FFF6FFF7FFF8), (int8x8_t)0x1000100010001);
  v15.i16[0] = vaddv_s16(v15);
  v16 = v15.i32[0];
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v18 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 1;
        v21 = v20 | v11;
        v99 = v20 & ~(_BYTE)v11 | v9;
        v102 = v20 | v11 | v99;
        if ((((v20 | v11) | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v103 = (v22 == 0) | v21;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v100 = v8;
        v101 = v20 | v11;
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v9;
LABEL_8:
        v18 = v10;
        v19 = v11;
LABEL_10:
        ++v7;
        v9 = v17;
        v10 = v18;
        v11 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_154;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_154:
      v98 = 1;
      goto LABEL_155;
    }
    v36 = v28 >> 3;
    v37 = v21;
    if ((v103 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[626]) |= 0x20u;
        while (1)
        {
          v45 = *v23;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_119;
          v42 += 7;
          v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_121;
          }
        }
        *(_BYTE *)(v3 + *v24) = 1;
LABEL_119:
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_121:
        v92 = 80;
        goto LABEL_146;
      case 2:
        if (!v37)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + v12[626]) & 0x200) == 0)
        {
          PBReaderReadString();
          v52 = objc_claimAutoreleasedReturnValue();
          v53 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v52;
          goto LABEL_90;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_171;
        v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v93 = *(_WORD *)(a1 + 88) << 6;
        goto LABEL_151;
      case 3:
        if (!v37 || (*(_WORD *)(a1 + v12[626]) & 0x100) != 0)
          goto LABEL_116;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v54 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_170;
        PBReaderRecallMark();
        -[GEOEnrouteNotice _addNoFlagsGuidance:](a1, v54);

        goto LABEL_91;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v55 = 0;
        v56 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[626]) |= 4u;
        while (2)
        {
          v57 = *v23;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v44 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v33 = v56++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_125:
        v92 = 68;
        goto LABEL_146;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v61 = 0;
        v62 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[626]) |= 8u;
        while (2)
        {
          v63 = *v23;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v44 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v33 = v62++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_129:
        v92 = 72;
        goto LABEL_146;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v67 = 0;
        v68 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[626]) |= 0x10u;
        while (2)
        {
          v69 = *v23;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v44 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v33 = v68++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_133:
        v92 = 76;
        goto LABEL_146;
      case 7:
        if (!v37)
          goto LABEL_116;
        if ((*(_WORD *)(a1 + v12[626]) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          v93 = 32 * *(_WORD *)(a1 + 88);
LABEL_151:
          v7 += v93 >> 15;
          goto LABEL_152;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v54 = objc_alloc_init(GEORouteAnnotation);
        if (GEORouteAnnotationReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v53 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v54;
LABEL_90:

          --v7;
LABEL_91:
          v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_152:
          v8 = v100;
          v21 = v101;
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_153:
          if (!(v102 & 1 | (v7 != 0)))
            goto LABEL_154;
          continue;
        }
LABEL_170:

LABEL_171:
        v98 = 0;
        v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v21 = v101;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_155:
        if ((v99 & 1) != 0)
LABEL_156:
          *(_WORD *)(a1 + v12[626]) |= 0x80u;
        if (v21 & 1 | ((v98 & 1) == 0))
        {
          *(_WORD *)(a1 + v12[626]) |= 0x200u;
          *(_WORD *)(a1 + v12[626]) |= 0x100u;
          *(_WORD *)(a1 + v12[626]) |= 0x400u;
        }
        else if (v22)
        {
          while (1)
          {
            v94 = *v22++;
            v95 = 512;
            switch(v94)
            {
              case 0:
                goto LABEL_164;
              case 2:
                goto LABEL_163;
              case 3:
                v95 = 256;
                goto LABEL_163;
              case 7:
                v95 = 1024;
LABEL_163:
                *(_WORD *)(a1 + v12[626]) |= v95;
                break;
              default:
                continue;
            }
          }
        }
LABEL_164:
        if (v98)
        {
          v3 = *(_BYTE *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_168:
          v96 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_168;
        }
        return v3;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v73 = 0;
        v74 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[626]) |= 0x40u;
        while (2)
        {
          v75 = *v23;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v44 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v33 = v74++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_137:
        v92 = 84;
        goto LABEL_146;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v79 = 0;
        v80 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[626]) |= 1u;
        while (2)
        {
          v81 = *v23;
          v82 = *(_QWORD *)(v3 + v81);
          v83 = v82 + 1;
          if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v44 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              v33 = v80++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_141:
        v92 = 60;
        goto LABEL_146;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_116;
        v85 = 0;
        v86 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v12[626]) |= 2u;
        while (2)
        {
          v87 = *v23;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v44 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              v33 = v86++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v44) = 0;
LABEL_145:
        v92 = 64;
LABEL_146:
        *(_DWORD *)(a1 + v92) = v44;
        goto LABEL_153;
      default:
        if ((v99 & 1) == 0 || (*(_WORD *)(a1 + v12[626]) & 0x80) != 0)
        {
LABEL_116:
          v91 = PBReaderSkipValueWithTag();
          v8 = v100;
          v21 = v101;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          if ((v91 & 1) == 0)
          {
            v98 = 0;
            goto LABEL_155;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v50 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v49;

          }
          v51 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          v8 = v100;
          v21 = v101;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (!v51)
          {
            v98 = 0;
            goto LABEL_156;
          }
        }
        goto LABEL_153;
    }
  }
}

void sub_188E40EFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E41390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E42270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOEnrouteNoticeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
}

unint64_t GEOEnrouteNoticeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOEnrouteNoticeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOEnrouteNoticeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOEnrouteNoticeReadAllFrom_initialTag;
  Specified = GEOEnrouteNoticeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOEnrouteNoticeCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188E42510(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOEnrouteNoticeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEnrouteNoticeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E42570(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEnrouteNoticeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  _BOOL8 v53;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_90;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1))
            goto LABEL_90;
          goto LABEL_61;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteAnnotationIsValid(a1))
            goto LABEL_90;
LABEL_61:
          PBReaderRecallMark();
          continue;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v48 = 0;
          break;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_90:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v49 = *v2;
        v50 = *(_QWORD *)&a1[v49];
        v51 = v50 + 1;
        if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
          break;
        v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
        *(_QWORD *)&a1[v49] = v51;
        if (v52 < 0)
        {
          v22 = v48++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_87;
      }
LABEL_86:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOGuidanceEventIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  _BOOL8 v87;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSignGuidanceIsValid(a1))
            goto LABEL_162;
          goto LABEL_158;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSpokenGuidanceIsValid(a1))
            goto LABEL_162;
          goto LABEL_158;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVisualLaneGuidanceIsValid(a1))
            goto LABEL_162;
          goto LABEL_158;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 8u:
        case 9u:
          if (v16 != 1)
            goto LABEL_162;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_150;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_150;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOJunctionViewIsValid(a1))
            goto LABEL_162;
          goto LABEL_158;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v26 = v67++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v26 = v72++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_149;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v26 = v77++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_159;
          }
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOARGuidanceIsValid(a1))
            goto LABEL_162;
          goto LABEL_158;
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_162;
          v82 = 0;
          break;
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGuidanceImportanceModeIsValid(a1))
            goto LABEL_162;
          goto LABEL_158;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavTrayGuidanceIsValid(a1))
            goto LABEL_162;
LABEL_158:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_162:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v83 = *v2;
        v84 = *(_QWORD *)&a1[v83];
        v85 = v84 + 1;
        if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
          break;
        v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
        *(_QWORD *)&a1[v83] = v85;
        if (v86 < 0)
        {
          v26 = v82++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_159;
      }
LABEL_149:
      v14 = *v4;
LABEL_150:
      a1[v14] = 1;
LABEL_159:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v87 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v87;
}

BOOL GEORouteAnnotationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          do
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            {
              v14 = *v4;
              goto LABEL_42;
            }
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if ((v22 & 0x80000000) == 0)
              break;
          }
          while (v18++ <= 8);
          goto LABEL_43;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_46;
          goto LABEL_36;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMiniCardIsValid(a1))
            goto LABEL_46;
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_43;
        case 4u:
          if (v16 != 5)
            goto LABEL_46;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || (v26 = v25 + 4, v26 > *(_QWORD *)&a1[*v3]))
LABEL_42:
            a1[v14] = 1;
          else
            *(_QWORD *)&a1[v24] = v26;
          goto LABEL_43;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_43:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          break;
      }
    }
  }
LABEL_44:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_188E436F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOEnrouteNoticeIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0xB00) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 88) & 0x400) != 0)
  {
    if ((GEORouteAnnotationIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x100) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOEnrouteNoticeIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOEnrouteNoticeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E43E88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E44540(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFareOptionsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOFareOptions__preferredSurchargeType;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOFareOptions__preferredSurchargeType;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOFareOptions__preferredSurchargeType;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOFareOptions__paymentType;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOFareOptions__paymentType;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOFareOptions__paymentType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E450D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFareOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOFareOptionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E45138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFareOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188E4593C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOFormatArgumentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  int *v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  void *v74;
  id v75;
  void *v76;
  int v77;
  GEOPrice *v78;
  uint64_t v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  char v87;
  uint64_t v88;
  int v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  int v97;
  int v98;
  void *v99;
  char v101;
  char v102;
  int v103;
  char v104;
  char v105;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 148);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 144));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 172);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1CC0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1CD0), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1CE0), v14)))+ ((v12 >> 8) & 1)+ ((v12 >> 4) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 9;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v19 | v11) | v8) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v103 = 1;
        v24 = v19 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_214;
        v101 = v20;
        v104 = v21 | v20;
        v105 = (v23 == 0) | v21;
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v102 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v25))
      goto LABEL_212;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v22;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v6))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_212:
      v103 = 1;
      goto LABEL_213;
    }
    v38 = v29 >> 3;
    v39 = v21;
    if ((v105 & 1) == 0)
    {
      v40 = v23;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 173) & 0x80) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 120;
          goto LABEL_84;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_241;
        v89 = (int)(*(_DWORD *)(a1 + 172) << 16) >> 31;
        goto LABEL_196;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_155;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_DWORD *)(a1 + 172) |= 1u;
        while (2)
        {
          v49 = *v22;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v34 = v47++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v48) = 0;
LABEL_160:
        v88 = 156;
        goto LABEL_173;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_155;
        v53 = 0;
        v54 = 0;
        v48 = 0;
        *(_DWORD *)(a1 + 172) |= 2u;
        while (2)
        {
          v55 = *v22;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v48 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v34 = v54++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v48) = 0;
LABEL_164:
        v88 = 160;
        goto LABEL_173;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_155;
        v59 = 0;
        v60 = 0;
        v48 = 0;
        *(_DWORD *)(a1 + 172) |= 4u;
        while (2)
        {
          v61 = *v22;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v48 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v34 = v60++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v48) = 0;
LABEL_168:
        v88 = 164;
        goto LABEL_173;
      case 5:
        if (!v39 || (*(_BYTE *)(a1 + 172) & 0x20) != 0)
          goto LABEL_155;
        if (v36 != 2)
        {
          v90 = 0;
          v91 = 0;
          v92 = 0;
          while (1)
          {
            v93 = *v22;
            v94 = *(_QWORD *)(v3 + v93);
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
              break;
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              v34 = v91++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_211;
          }
          *(_BYTE *)(v3 + *v25) = 1;
LABEL_211:
          PBRepeatedUInt32Add();
          goto LABEL_197;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_241;
        while (1)
        {
          v65 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v66 = 0;
          v67 = 0;
          v68 = 0;
          v69 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v70 = *v22;
            v71 = *(_QWORD *)(v3 + v70);
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
              break;
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v69) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v68 |= (unint64_t)(v73 & 0x7F) << v66;
            if (v73 < 0)
            {
              v66 += 7;
              v34 = v67++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_80;
          }
          *(_BYTE *)(v3 + *v65) = 1;
LABEL_80:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v102;
        goto LABEL_198;
      case 6:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 174) & 2) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 136;
LABEL_84:
          v74 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;
          goto LABEL_142;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_241;
        v89 = (int)(*(_DWORD *)(a1 + 172) << 14) >> 31;
        goto LABEL_196;
      case 8:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 173) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 19) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOPrice);
        if (!GEOPriceReadAllFrom((uint64_t)v78, (void *)v3))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 96;
        goto LABEL_141;
      case 9:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 172) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 25) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 48;
        goto LABEL_141;
      case 10:
        if (!v39 || (*(_BYTE *)(a1 + 173) & 0x40) != 0)
        {
          v86 = PBReaderSkipValueWithTag();
          v21 = v102;
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v86 & 1) == 0)
            goto LABEL_239;
          goto LABEL_199;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOTimestampData);
        if (!GEOTimestampDataReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1))
          goto LABEL_240;
        PBReaderRecallMark();
        -[GEOFormatArgument _addNoFlagsTimestampData:](a1, v78);

        goto LABEL_197;
      case 11:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 172) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 24) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOCountdownData);
        if (!GEOCountdownDataReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 56;
        goto LABEL_141;
      case 12:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 173) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 20) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEONumberData);
        if (!GEONumberDataReadAllFrom((uint64_t)v78, (void *)v3))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 88;
        goto LABEL_141;
      case 13:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 173) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 21) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOMeasurementData);
        if (!GEOMeasurementDataReadAllFrom((uint64_t)v78, (void *)v3))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 80;
        goto LABEL_141;
      case 14:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 174) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 15) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOURLData);
        if (!GEOURLDataReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 128;
        goto LABEL_141;
      case 15:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 173) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 22) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOManeuverData);
        if (!GEOManeuverDataReadAllFrom((uint64_t)v78, (void *)v3))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 72;
        goto LABEL_141;
      case 16:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 173) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 18) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOGenericStringData);
        if (!GEOGenericStringDataReadAllFrom((uint64_t)v78, (void *)v3))
          goto LABEL_240;
        PBReaderRecallMark();
        v79 = 104;
        goto LABEL_141;
      case 17:
        if (!v39)
          goto LABEL_155;
        if ((*(_BYTE *)(a1 + 173) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_241;
          v89 = (int)(*(_DWORD *)(a1 + 172) << 23) >> 31;
LABEL_196:
          v7 += v89;
LABEL_197:
          v21 = v102;
          v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_198:
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_199:
          if (!(v104 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_212;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_241;
        v78 = objc_alloc_init(GEOGenericCombinations);
        if (GEOGenericCombinationsReadAllFrom(v78, (void *)v3))
        {
          PBReaderRecallMark();
          v79 = 64;
LABEL_141:
          v74 = *(void **)(a1 + v79);
          *(_QWORD *)(a1 + v79) = v78;
LABEL_142:

          --v7;
          goto LABEL_197;
        }
LABEL_240:

LABEL_241:
        v103 = 0;
        v21 = v102;
LABEL_213:
        v24 = v101;
LABEL_214:
        if ((v24 & 1) != 0)
LABEL_215:
          *(_DWORD *)(a1 + 172) |= 0x10u;
        if (v21 & 1 | ((v103 & 1) == 0))
        {
          *(_DWORD *)(a1 + 172) |= 0x8000u;
          *(_DWORD *)(a1 + 172) |= 0x20u;
          *(_DWORD *)(a1 + 172) |= 0x20000u;
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 172) |= 0x40u;
          *(_DWORD *)(a1 + 172) |= 0x4000u;
          *(_DWORD *)(a1 + 172) |= 0x80u;
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 172) |= 0x100u;
        }
        else if (v23)
        {
          while (1)
          {
            v97 = *v23++;
            v98 = 0x8000;
            switch(v97)
            {
              case 0:
                goto LABEL_233;
              case 1:
                goto LABEL_232;
              case 5:
                v98 = 32;
                goto LABEL_232;
              case 6:
                v98 = 0x20000;
                goto LABEL_232;
              case 8:
                v98 = 4096;
                goto LABEL_232;
              case 9:
                v98 = 64;
                goto LABEL_232;
              case 10:
                v98 = 0x4000;
                goto LABEL_232;
              case 11:
                v98 = 128;
                goto LABEL_232;
              case 12:
                v98 = 2048;
                goto LABEL_232;
              case 13:
                v98 = 1024;
                goto LABEL_232;
              case 14:
                v98 = 0x10000;
                goto LABEL_232;
              case 15:
                v98 = 512;
                goto LABEL_232;
              case 16:
                v98 = 0x2000;
                goto LABEL_232;
              case 17:
                v98 = 256;
LABEL_232:
                *(_DWORD *)(a1 + 172) |= v98;
                break;
              default:
                continue;
            }
          }
        }
LABEL_233:
        if (v103)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_237:
          v99 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_237;
        }
        return v3;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_155;
        v80 = 0;
        v81 = 0;
        v48 = 0;
        *(_DWORD *)(a1 + 172) |= 8u;
        while (2)
        {
          v82 = *v22;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v48 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              v34 = v81++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v48) = 0;
LABEL_172:
        v88 = 168;
LABEL_173:
        *(_DWORD *)(a1 + v88) = v48;
        goto LABEL_199;
      default:
        if ((v101 & 1) == 0 || (*(_BYTE *)(a1 + 172) & 0x10) != 0)
        {
LABEL_155:
          v87 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v21 = v102;
          if ((v87 & 1) == 0)
          {
LABEL_239:
            v103 = 0;
            goto LABEL_213;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v75 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v76 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v75;

          }
          v77 = PBUnknownFieldAdd();
          v21 = v102;
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v77)
          {
            v103 = 0;
            goto LABEL_215;
          }
        }
        goto LABEL_199;
    }
  }
}

void sub_188E46CB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E46FF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E473CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47700(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E4784C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47998(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47AE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47C2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47D78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E47EC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E49868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormatArgumentCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[14];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  return objc_msgSend(a1[8], "readAll:", 1);
}

unint64_t GEOFormatArgumentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 148))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOFormatArgumentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 152));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 144) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 148) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOFormatArgumentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOFormatArgumentReadAllFrom_initialTag;
  Specified = GEOFormatArgumentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOFormatArgumentCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 152));
  return Specified;
}

void sub_188E49B94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOFormatArgumentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOFormatArgumentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E49BF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormatArgumentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_117;
          goto LABEL_53;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_117;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_103;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_117;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_103;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_117;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_103;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        case 5u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_117:
              PBReaderRecallMark();
              return 0;
            }
LABEL_107:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v43 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v44 = *v2;
                v45 = *(_QWORD *)&a1[v44];
                v46 = v45 + 1;
                if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
                  break;
                v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
                *(_QWORD *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  v13 = v43++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_107;
              }
              a1[*v4] = 1;
            }
LABEL_94:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_117;
            while (1)
            {
              v33 = *v2;
              v34 = *(_QWORD *)&a1[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                break;
              v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
              *(_QWORD *)&a1[v33] = v35;
              if (v36 < 0)
              {
                v37 = v15++;
                if (v37 <= 8)
                  continue;
              }
              goto LABEL_104;
            }
LABEL_103:
            a1[*v4] = 1;
          }
LABEL_104:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_116;
          break;
        case 6u:
          if (v15 == 2)
            goto LABEL_53;
          goto LABEL_117;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPriceIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimestampDataIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCountdownDataIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONumberDataIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMeasurementDataIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLDataIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOManeuverDataIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGenericStringDataIsValid(a1))
            goto LABEL_117;
          goto LABEL_94;
        case 0x11u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOGenericCombinationsIsValid(a1))
            goto LABEL_94;
          goto LABEL_117;
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_117;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_103;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_104;
          }
        default:
LABEL_53:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_117;
          goto LABEL_104;
      }
    }
  }
LABEL_116:
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPriceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_33:
          v21 = 0;
          goto LABEL_32;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 5)
          goto LABEL_33;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (v20 = v19 + 4, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_33;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOTimestampDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_40;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_39;
          goto LABEL_43;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v23 = 0;
          break;
        case 4u:
          if (v15 == 2)
            goto LABEL_39;
          goto LABEL_43;
        default:
LABEL_39:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_43:
          v28 = 0;
          goto LABEL_42;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_40;
      }
LABEL_37:
      a1[*v4] = 1;
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEONumberDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v16 != 5)
          goto LABEL_29;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (v20 = v19 + 4, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v21 = 0;
        goto LABEL_28;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOMeasurementDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOURLDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOManeuverDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionInfoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOGenericStringDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_42;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_42;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 4)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_44;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_39;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_41;
        }
      }
      if ((_DWORD)v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_42;
    }
    if ((v8 & 7) != 0)
      goto LABEL_44;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOGenericCombinationsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOGenericSubstitutesIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E4B5BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormatArgumentIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  v2 = *(_DWORD *)(a1 + 172);
  if ((v2 & 0x69020) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x4000) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEOCountdownDataIsDirty(*(_QWORD *)(a1 + 56)))
      return 1;
    v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0xC00) != 0)
    return 1;
  if ((v2 & 0x10000) == 0)
    goto LABEL_15;
  if (GEOURLDataIsDirty(*(_QWORD *)(a1 + 128)))
    return 1;
  v2 = *(_DWORD *)(a1 + 172);
LABEL_15:
  if ((v2 & 0x2300) != 0)
    return 1;
  if ((v2 & 0x4000) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 112);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEOTimestampDataIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_28;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_28:

  return v3;
}

os_unfair_lock_s *GEOFormatArgumentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOFormatArgumentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 38);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E4BF14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E4C844(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormatStyleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOFormatStyleReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E4D020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E4D734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E4DA6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E4DDA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormattedStringCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[6];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[3], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEOFormattedStringReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOFormattedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E4E9C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormattedStringMetaDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188E4F020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormattedStringIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_BYTE *)(a1 + 84);
  if ((v2 & 0xDC) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 84) & 2) != 0)
  {
    if ((GEOConditionalFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 4) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOFormatArgumentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOFormattedStringIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOFormattedStringIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E4F878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E4FE30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormattedStringMetaDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOFormattedStringMetaData__realtimeStatus;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOFormattedStringMetaData__realtimeStatus;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOFormattedStringMetaData__realtimeStatus;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOFormattedStringMetaData__spokenPrivacyFilterType;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOFormattedStringMetaData__spokenPrivacyFilterType;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOFormattedStringMetaData__spokenPrivacyFilterType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E50D74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormattedStringMetaDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOFormattedStringMetaDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E50DD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericCombinationsReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOGenericSubstitutes *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOGenericSubstitutes);
          if (!GEOGenericSubstitutesReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addSubstitutes:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188E51A78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericCombinationsReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOGenericCombinationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E51AD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericSubstitutesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOGenericInstructionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188E528FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOGenericInstructionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E5295C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericInstructionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOGenericStringDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  void *v35;
  uint64_t v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_51;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_51;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
          break;
        if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
              goto LABEL_46;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_48:
          v36 = 28;
LABEL_49:
          *(_DWORD *)(a1 + v36) = v23;
          goto LABEL_50;
        }
        if ((_DWORD)v18 == 1)
        {
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_52;
        }
LABEL_50:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_51;
      }
      v21 = 0;
      v22 = 0;
      v23 = 0;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        v24 = *v4;
        v25 = *(_QWORD *)&v3[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
          break;
        v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
        *(_QWORD *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0)
          goto LABEL_42;
        v21 += 7;
        v15 = v22++ >= 9;
        if (v15)
        {
          LODWORD(v23) = 0;
          goto LABEL_44;
        }
      }
      v3[*v6] = 1;
LABEL_42:
      if (v3[*v6])
        LODWORD(v23) = 0;
LABEL_44:
      v36 = 24;
      goto LABEL_49;
    }
LABEL_51:
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_188E53B48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericStringDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOGenericStringDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E53BA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericSubstitutesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOFormattedString *v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v18 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom(v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188E54C88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericSubstitutesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOGenericSubstitutesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E54CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E553A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOGuidanceEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const float *v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  GEOSignGuidance *v55;
  uint64_t v56;
  id v57;
  void *v58;
  int v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  void *v133;
  char v134;
  uint64_t v135;
  BOOL v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  int v140;
  int v141;
  int v142;
  void *v143;
  int v145;
  char v146;
  char v147;
  char v148;
  char v149;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const float *)(a1 + 156);
  v13 = (uint32x4_t)vld1q_dup_f32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1CF0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D00), v14)));
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 4;
        v20 = v19 | v11;
        v146 = v19 & ~(_BYTE)v11 | v9;
        v148 = v19 | v11 | v146;
        if ((((v19 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v149 = (v21 == 0) | v20;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v147 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v23))
      goto LABEL_271;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v22;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_271:
      v145 = 1;
      goto LABEL_272;
    }
    v36 = v28 >> 3;
    v37 = v20;
    if ((v149 & 1) == 0)
    {
      v38 = v21;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x800u;
        while (1)
        {
          v45 = *v22;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_196;
          v42 += 7;
          v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_198;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_196:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_198:
        v135 = 144;
        goto LABEL_243;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x20u;
        while (2)
        {
          v51 = *v22;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v33 = v50++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_202:
        v135 = 120;
        goto LABEL_243;
      case 3:
        if (!v37)
          goto LABEL_193;
        if ((*(_BYTE *)(a1 + v24[376] + 2) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_293;
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v138 = (int)(*(_DWORD *)(a1 + 156) << 10) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_293;
        v55 = objc_alloc_init(GEOSignGuidance);
        if (!GEOSignGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1))
          goto LABEL_292;
        PBReaderRecallMark();
        v56 = 80;
        goto LABEL_192;
      case 4:
        if (!v37)
          goto LABEL_193;
        if ((*(_BYTE *)(a1 + v24[376] + 2) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_293;
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v138 = (int)(*(_DWORD *)(a1 + 156) << 9) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_293;
        v55 = objc_alloc_init(GEOSpokenGuidance);
        if (!GEOSpokenGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1))
          goto LABEL_292;
        PBReaderRecallMark();
        v56 = 88;
        goto LABEL_192;
      case 5:
        if (!v37)
          goto LABEL_193;
        if ((*(_BYTE *)(a1 + v24[376] + 2) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_293;
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v138 = (int)(*(_DWORD *)(a1 + 156) << 12) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_293;
        v55 = objc_alloc_init(GEOVisualLaneGuidance);
        if (!GEOVisualLaneGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1))
          goto LABEL_292;
        PBReaderRecallMark();
        v56 = 48;
        goto LABEL_192;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v60 = 0;
        v61 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 8u;
        while (2)
        {
          v62 = *v22;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v44 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v33 = v61++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_206:
        v135 = 112;
        goto LABEL_243;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        *(_DWORD *)(a1 + v24[376]) |= 2u;
        v66 = *v22;
        v67 = *(_QWORD *)(v3 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v68 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v67);
          *(_QWORD *)(v3 + v66) = v67 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v23) = 1;
          v68 = 0;
        }
        v139 = 64;
        goto LABEL_269;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        *(_DWORD *)(a1 + v24[376]) |= 1u;
        v69 = *v22;
        v70 = *(_QWORD *)(v3 + v69);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v68 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v70);
          *(_QWORD *)(v3 + v69) = v70 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v23) = 1;
          v68 = 0;
        }
        v139 = 56;
LABEL_269:
        *(_QWORD *)(a1 + v139) = v68;
        goto LABEL_270;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v71 = 0;
        v72 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x80u;
        while (2)
        {
          v73 = *v22;
          v74 = *(_QWORD *)(v3 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v44 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              v33 = v72++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_210:
        v135 = 128;
        goto LABEL_243;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v77 = 0;
        v78 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x100u;
        while (2)
        {
          v79 = *v22;
          v80 = *(_QWORD *)(v3 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v44 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v33 = v78++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_214;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_214:
        v135 = 132;
        goto LABEL_243;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v83 = 0;
        v84 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x200u;
        while (2)
        {
          v85 = *v22;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v44 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v33 = v84++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_218;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_218:
        v135 = 136;
        goto LABEL_243;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v89 = 0;
        v90 = 0;
        v91 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x4000u;
        while (2)
        {
          v92 = *v22;
          v93 = *(_QWORD *)(v3 + v92);
          v94 = v93 + 1;
          if (v93 == -1 || v94 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v95 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v93);
            *(_QWORD *)(v3 + v92) = v94;
            v91 |= (unint64_t)(v95 & 0x7F) << v89;
            if (v95 < 0)
            {
              v89 += 7;
              v33 = v90++ >= 9;
              if (v33)
              {
                v91 = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v91 = 0;
LABEL_222:
        v136 = v91 != 0;
        v137 = 153;
        goto LABEL_248;
      case 14:
        if (!v37)
          goto LABEL_193;
        if ((*(_BYTE *)(a1 + v24[376] + 2) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_293;
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v138 = (int)(*(_DWORD *)(a1 + 156) << 13) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_293;
        v55 = objc_alloc_init(GEOJunctionView);
        if (!GEOJunctionViewReadAllFrom(v55, (void *)v3))
          goto LABEL_292;
        PBReaderRecallMark();
        v56 = 40;
        goto LABEL_192;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v96 = 0;
        v97 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x1000u;
        while (2)
        {
          v98 = *v22;
          v99 = *(_QWORD *)(v3 + v98);
          v100 = v99 + 1;
          if (v99 == -1 || v100 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v99);
            *(_QWORD *)(v3 + v98) = v100;
            v44 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              v33 = v97++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_226;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_226:
        v135 = 148;
        goto LABEL_243;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v102 = 0;
        v103 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x40u;
        while (2)
        {
          v104 = *v22;
          v105 = *(_QWORD *)(v3 + v104);
          v106 = v105 + 1;
          if (v105 == -1 || v106 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v105);
            *(_QWORD *)(v3 + v104) = v106;
            v44 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              v33 = v103++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_230;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_230:
        v135 = 124;
        goto LABEL_243;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v108 = 0;
        v109 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x400u;
        while (2)
        {
          v110 = *v22;
          v111 = *(_QWORD *)(v3 + v110);
          v112 = v111 + 1;
          if (v111 == -1 || v112 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v111);
            *(_QWORD *)(v3 + v110) = v112;
            v44 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              v33 = v109++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_234;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_234:
        v135 = 140;
        goto LABEL_243;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v114 = 0;
        v115 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x10u;
        while (2)
        {
          v116 = *v22;
          v117 = *(_QWORD *)(v3 + v116);
          v118 = v117 + 1;
          if (v117 == -1 || v118 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v119 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v117);
            *(_QWORD *)(v3 + v116) = v118;
            v44 |= (unint64_t)(v119 & 0x7F) << v114;
            if (v119 < 0)
            {
              v114 += 7;
              v33 = v115++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_238:
        v135 = 116;
        goto LABEL_243;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v120 = 0;
        v121 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 4u;
        while (2)
        {
          v122 = *v22;
          v123 = *(_QWORD *)(v3 + v122);
          v124 = v123 + 1;
          if (v123 == -1 || v124 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v125 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v123);
            *(_QWORD *)(v3 + v122) = v124;
            v44 |= (unint64_t)(v125 & 0x7F) << v120;
            if (v125 < 0)
            {
              v120 += 7;
              v33 = v121++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_242;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_242:
        v135 = 108;
LABEL_243:
        *(_DWORD *)(a1 + v135) = v44;
        goto LABEL_270;
      case 20:
        if (!v37)
          goto LABEL_193;
        if ((*(_BYTE *)(a1 + v24[376] + 2) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_293;
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v138 = (int)(*(_DWORD *)(a1 + 156) << 15) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_293;
        v55 = objc_alloc_init(GEOARGuidance);
        if (!GEOARGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1))
          goto LABEL_292;
        PBReaderRecallMark();
        v56 = 24;
        goto LABEL_192;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_193;
        v126 = 0;
        v127 = 0;
        v128 = 0;
        *(_DWORD *)(a1 + v24[376]) |= 0x2000u;
        while (2)
        {
          v129 = *v22;
          v130 = *(_QWORD *)(v3 + v129);
          v131 = v130 + 1;
          if (v130 == -1 || v131 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v132 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v130);
            *(_QWORD *)(v3 + v129) = v131;
            v128 |= (unint64_t)(v132 & 0x7F) << v126;
            if (v132 < 0)
            {
              v126 += 7;
              v33 = v127++ >= 9;
              if (v33)
              {
                v128 = 0;
                goto LABEL_247;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v128 = 0;
LABEL_247:
        v136 = v128 != 0;
        v137 = 152;
LABEL_248:
        *(_BYTE *)(a1 + v137) = v136;
        goto LABEL_270;
      case 22:
        if (!v37)
          goto LABEL_193;
        if ((*(_BYTE *)(a1 + v24[376] + 2) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_293;
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v138 = (int)(*(_DWORD *)(a1 + 156) << 14) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_293;
        v55 = objc_alloc_init(GEOGuidanceImportanceMode);
        if (!GEOGuidanceImportanceModeReadAllFrom((uint64_t)v55, (void *)v3))
          goto LABEL_292;
        PBReaderRecallMark();
        v56 = 32;
        goto LABEL_192;
      case 23:
        if (!v37)
          goto LABEL_193;
        if ((*(_BYTE *)(a1 + v24[376] + 2) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_293;
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v138 = (int)(*(_DWORD *)(a1 + 156) << 11) >> 31;
LABEL_263:
          v7 += v138;
          v20 = v147;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_264:
          v25 = (int *)MEMORY[0x1E0D82BB8];
LABEL_270:
          if (!(v148 & 1 | (v7 != 0)))
            goto LABEL_271;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_293;
        v55 = objc_alloc_init(GEONavTrayGuidance);
        if (GEONavTrayGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v56 = 72;
LABEL_192:
          v133 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;

          --v7;
          v20 = v147;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          goto LABEL_264;
        }
LABEL_292:

LABEL_293:
        v145 = 0;
        v20 = v147;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
LABEL_272:
        if ((v146 & 1) != 0)
LABEL_273:
          *(_DWORD *)(a1 + v24[376]) |= 0x8000u;
        if (v20 & 1 | ((v145 & 1) == 0))
        {
          *(_DWORD *)(a1 + v24[376]) |= 0x200000u;
          *(_DWORD *)(a1 + v24[376]) |= 0x400000u;
          *(_DWORD *)(a1 + v24[376]) |= 0x80000u;
          *(_DWORD *)(a1 + v24[376]) |= 0x10000u;
          *(_DWORD *)(a1 + v24[376]) |= 0x100000u;
          *(_DWORD *)(a1 + v24[376]) |= 0x40000u;
          *(_DWORD *)(a1 + v24[376]) |= 0x20000u;
        }
        else if (v21)
        {
          while (2)
          {
            v141 = *v21++;
            v140 = v141;
            switch(v141)
            {
              case 14:
                v142 = 0x40000;
                goto LABEL_285;
              case 15:
              case 16:
              case 17:
              case 18:
              case 19:
              case 21:
                continue;
              case 20:
                v142 = 0x10000;
                goto LABEL_285;
              case 22:
                v142 = 0x20000;
                goto LABEL_285;
              case 23:
                v142 = 0x100000;
LABEL_285:
                *(_DWORD *)(a1 + v24[376]) |= v142;
                continue;
              default:
                v142 = 0x200000;
                switch(v140)
                {
                  case 0:
                    goto LABEL_286;
                  case 3:
                    goto LABEL_285;
                  case 4:
                    v142 = 0x400000;
                    goto LABEL_285;
                  case 5:
                    v142 = 0x80000;
                    goto LABEL_285;
                  default:
                    continue;
                }
                goto LABEL_286;
            }
          }
        }
LABEL_286:
        if (v145)
        {
          v3 = *(_BYTE *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_290:
          v143 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_290;
        }
        return v3;
      default:
        if ((v146 & 1) == 0 || (*(_BYTE *)(a1 + v24[376] + 1) & 0x80) != 0)
        {
LABEL_193:
          v134 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v20 = v147;
          if ((v134 & 1) == 0)
          {
            v145 = 0;
            goto LABEL_272;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v57 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v58 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v57;

          }
          v59 = PBUnknownFieldAdd();
          v20 = v147;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
          v25 = (int *)MEMORY[0x1E0D82BB8];
          if (!v59)
          {
            v145 = 0;
            goto LABEL_273;
          }
        }
        goto LABEL_270;
    }
  }
}

void sub_188E5682C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5696C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E56AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E56BF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E56D38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E577CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E58D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOGuidanceEventCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[4], "readAll:", 1);
}

unint64_t GEOGuidanceEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOGuidanceEventReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOGuidanceEventReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOGuidanceEventReadAllFrom_initialTag;
  Specified = GEOGuidanceEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOGuidanceEventCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188E58FA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOGuidanceEventReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOGuidanceEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E59004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSignGuidanceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
            goto LABEL_53;
          goto LABEL_56;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v23 = 0;
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionInfoIsValid(a1))
            goto LABEL_56;
          goto LABEL_53;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_56;
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOSpokenGuidanceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  _BOOL8 v58;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
            goto LABEL_84;
          goto LABEL_97;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_93;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_94;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_93;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_94;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_93;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_94;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_93;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_94;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_93;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_94;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_93;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_94;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_93;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_94;
          }
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimeGapIsValid(a1))
            goto LABEL_97;
LABEL_84:
          PBReaderRecallMark();
          continue;
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_97;
          v53 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_97:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v54 = *v2;
        v55 = *(_QWORD *)&a1[v54];
        v56 = v55 + 1;
        if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
          break;
        v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
        *(_QWORD *)&a1[v54] = v56;
        if (v57 < 0)
        {
          v22 = v53++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_94;
      }
LABEL_93:
      a1[*v4] = 1;
LABEL_94:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v58 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v58;
}

BOOL GEOVisualLaneGuidanceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_31;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_31;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3 || (_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneInfoIsValid(a1))
          goto LABEL_32;
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_32;
LABEL_30:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_31;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
    {
LABEL_32:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_31:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEONavTrayGuidanceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOJunctionViewIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOGuidanceImportanceModeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v13 = v22++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0)
            goto LABEL_43;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              break;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_188E5A428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOGuidanceEventIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0x800000) != 0)
    return 1;
  if ((v2 & 0x200000) != 0)
  {
    if ((GEOSignGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x400000) != 0)
  {
    if (GEOSpokenGuidanceIsDirty(*(_QWORD *)(a1 + 88)))
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x80000) != 0)
  {
    if ((GEOVisualLaneGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x10000) != 0)
  {
    if ((GEOARGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x100000) != 0)
  {
    if ((GEONavTrayGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x40000) == 0)
    return (v2 >> 17) & 1;
  return 1;
}

os_unfair_lock_s *GEOGuidanceEventIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOGuidanceEventIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E5AD90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5B990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGuidanceImportanceModeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedInt32Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E5C648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGuidanceImportanceModeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOGuidanceImportanceModeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E5C6AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIncidentOnRouteInfoReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOIndexAndOffset *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOIndexAndOffset);
          if (!GEOIndexAndOffsetReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addIndexAndOffset:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188E5D28C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIncidentOnRouteInfoReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOIncidentOnRouteInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E5D2EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIncidentOnRouteInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOIndexAndOffsetIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOIndexAndOffsetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOIndexAndOffsetReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOIndexAndOffset__index;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOIndexAndOffset__index;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOIndexAndOffset__index;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOIndexAndOffset__offset;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOIndexAndOffset__offset;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOIndexAndOffset__offset;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E5E560(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIndexAndOffsetReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOIndexAndOffsetReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E5E5C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5EB38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOInstructionSetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unsigned __int8 v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOTransitSignInstruction *v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  __int16 v55;
  int v56;
  __int16 v57;
  void *v58;
  int v60;
  char v61;
  char v62;
  char v63;
  BOOL v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(unsigned __int16 *)(a1 + 104);
  v14 = ((v13 >> 1) & 1)
      + ((v13 >> 6) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFFDFFF9FFF7FFF8), (int8x8_t)0x1000100010001))+ ((v13 >> 2) & 1)+ ((v13 >> 5) & 1)+ ((v13 >> 4) & 1));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 5;
        v19 = v18 & ~(_BYTE)v12 | v10;
        v20 = v18 | v12;
        v61 = v19;
        v62 = v20 | v19;
        if (((v20 | v9) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v63 = (v21 == 0) | v20;
        v64 = v20;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v10;
LABEL_8:
        v16 = v11;
        v17 = v12;
LABEL_10:
        ++v8;
        v10 = v15;
        v11 = v16;
        v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v23))
      goto LABEL_119;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v7))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_119:
      v60 = 1;
      goto LABEL_120;
    }
    v35 = v27 >> 3;
    v36 = v64;
    if ((v63 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 0x200) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_141;
          v41 = objc_alloc_init(GEOTransitSignInstruction);
          if (GEOTransitSignInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            v42 = 80;
            goto LABEL_79;
          }
          goto LABEL_140;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_141;
        v55 = *(_WORD *)(a1 + 104) << 6;
        goto LABEL_116;
      case 2:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v55 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v41 = objc_alloc_init(GEOTransitListInstruction);
        if (!GEOTransitListInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          goto LABEL_140;
        PBReaderRecallMark();
        v42 = 72;
        goto LABEL_79;
      case 3:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v55 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v41 = objc_alloc_init(GEOGenericInstruction);
        if (!GEOGenericInstructionReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_140;
        PBReaderRecallMark();
        v42 = 64;
        goto LABEL_79;
      case 4:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v55 = *(_WORD *)(a1 + 104) << 12;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v41 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          goto LABEL_140;
        PBReaderRecallMark();
        v42 = 32;
        goto LABEL_79;
      case 5:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v55 = *(_WORD *)(a1 + 104) << 13;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v41 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          goto LABEL_140;
        PBReaderRecallMark();
        v42 = 24;
        goto LABEL_79;
      case 6:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v55 = *(_WORD *)(a1 + 104) << 10;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v41 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          goto LABEL_140;
        PBReaderRecallMark();
        v42 = 48;
        goto LABEL_79;
      case 7:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v55 = *(_WORD *)(a1 + 104) << 11;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v41 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          goto LABEL_140;
        PBReaderRecallMark();
        v42 = 40;
        goto LABEL_79;
      case 8:
        if (!v36)
          goto LABEL_94;
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v55 = *(_WORD *)(a1 + 104) << 9;
LABEL_116:
          v8 += v55 >> 15;
LABEL_117:
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_118:
          if (!(v62 & 1 | (v8 != 0)))
            goto LABEL_119;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v41 = objc_alloc_init(GEODrivingWalkingSpokenInstruction);
        if (GEODrivingWalkingSpokenInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v42 = 56;
LABEL_79:
          v43 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v8;
          goto LABEL_117;
        }
LABEL_140:

LABEL_141:
        v60 = 0;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_120:
        if ((v61 & 1) != 0)
LABEL_121:
          *(_WORD *)(a1 + 104) |= 2u;
        if (v64 || (v60 & 1) == 0)
        {
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 4u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x40u;
        }
        else if (v21)
        {
          while (1)
          {
            v56 = *v21++;
            v57 = 512;
            switch(v56)
            {
              case 0:
                goto LABEL_134;
              case 1:
                goto LABEL_133;
              case 2:
                v57 = 256;
                goto LABEL_133;
              case 3:
                v57 = 128;
                goto LABEL_133;
              case 4:
                v57 = 8;
                goto LABEL_133;
              case 5:
                v57 = 4;
                goto LABEL_133;
              case 6:
                v57 = 32;
                goto LABEL_133;
              case 7:
                v57 = 16;
                goto LABEL_133;
              case 8:
                v57 = 64;
LABEL_133:
                *(_WORD *)(a1 + 104) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_134:
        if (v60)
          v3 = *(_BYTE *)(v3 + *v23) == 0;
        else
          v3 = 0;
        if (v64)
        {
          v58 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 10:
        if ((v9 & 1) == 0)
          goto LABEL_94;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          v50 = *v22;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v32 = v48++ >= 9;
              if (v32)
              {
                LODWORD(v49) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v49) = 0;
LABEL_99:
        *(_DWORD *)(a1 + 100) = v49;
        goto LABEL_118;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 104) & 2) != 0)
        {
LABEL_94:
          v54 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v54 & 1) == 0)
          {
            v60 = 0;
            goto LABEL_120;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v60 = 0;
            goto LABEL_121;
          }
        }
        goto LABEL_118;
    }
  }
}

void sub_188E5F6BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5F7FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5F93C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5FC28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5FD64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5FEA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E5FFE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E60C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOInstructionSetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 80), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  -[GEODrivingWalkingInstruction readAll:](*(_QWORD *)(a1 + 48), 1);
  -[GEODrivingWalkingInstruction readAll:](*(_QWORD *)(a1 + 40), 1);
  return objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
}

unint64_t GEOInstructionSetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOInstructionSetReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOInstructionSetReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOInstructionSetReadAllFrom_initialTag;
  Specified = GEOInstructionSetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOInstructionSetCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188E60E6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

