unint64_t GEOInstructionSetReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOInstructionSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E60ECC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOInstructionSetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTransitSignInstructionIsValid(a1))
            goto LABEL_42;
          goto LABEL_57;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitListInstructionIsValid(a1))
            goto LABEL_57;
          goto LABEL_42;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGenericInstructionIsValid(a1))
            goto LABEL_57;
          goto LABEL_42;
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_57;
          goto LABEL_42;
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODrivingWalkingInstructionIsValid(a1))
            goto LABEL_57;
          goto LABEL_42;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODrivingWalkingSpokenInstructionIsValid(a1))
            goto LABEL_57;
LABEL_42:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_43;
      }
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOTransitSignInstructionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_26;
          PBReaderRecallMark();
          goto LABEL_24;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_26:
            PBReaderRecallMark();
            return 0;
          }
LABEL_24:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_25;
          break;
      }
    }
  }
LABEL_25:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTransitListInstructionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_31:
    v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_31;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      if (v7++ >= 9)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_31;
    switch((v8 >> 3))
    {
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          goto LABEL_30;
        goto LABEL_22;
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitListTimeInstructionIsValid(a1))
          goto LABEL_30;
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
LABEL_23:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_31;
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_188E6185C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOInstructionSetIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x400) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 104) & 0x200) != 0)
  {
    if ((GEOTransitSignInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if ((GEOTransitListInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x80) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_18;
  if ((GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 104);
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
    if ((GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x40) != 0)
    return (uint64_t)GEODrivingWalkingSpokenInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 56));
  else
    return 0;
}

os_unfair_lock_s *GEOInstructionSetIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOInstructionSetIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E61DCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E62310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOJunctionElementDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOJunctionElementDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOJunctionElement<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOJunctionElementDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  char v3;
  void *v4;
  uint64_t v5;
  __CFString *v6;
  uint64_t v7;
  __CFString *v8;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *((_BYTE *)a1 + 12);
  if ((v3 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", *a1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v4, CFSTR("angle"));

    v3 = *((_BYTE *)a1 + 12);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0)
        return v2;
      goto LABEL_10;
    }
  }
  else if ((a1[3] & 2) == 0)
  {
    goto LABEL_3;
  }
  v5 = (int)a1[1];
  if (v5 >= 3)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), (int)a1[1]);
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = off_1E1C082B8[v5];
  }
  objc_msgSend(v2, "setObject:forKey:", v6, CFSTR("type"));

  if ((a1[3] & 4) != 0)
  {
LABEL_10:
    v7 = (int)a1[2];
    if (v7 >= 3)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), (int)a1[2]);
      v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v8 = off_1E1C082D0[v7];
    }
    objc_msgSend(v2, "setObject:forKey:", v8, CFSTR("usage"));

  }
  return v2;
}

void _GEOJunctionElementFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  int v6;
  void *v7;
  id v8;
  int v9;
  id v10;

  v10 = a1;
  objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("angle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 12) |= 1u;
    *(_DWORD *)a2 = objc_msgSend(v3, "intValue");
  }

  objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("type"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 12) |= 2u;
    v5 = v4;
    if ((objc_msgSend(v5, "isEqualToString:", CFSTR("NORMAL")) & 1) != 0)
    {
      v6 = 0;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("RAMP")) & 1) != 0)
    {
      v6 = 1;
    }
    else if (objc_msgSend(v5, "isEqualToString:", CFSTR("HIGHWAY")))
    {
      v6 = 2;
    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_15;
    v6 = objc_msgSend(v4, "intValue");
  }
  *(_DWORD *)(a2 + 4) = v6;
LABEL_15:

  objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("usage"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 12) |= 4u;
    v8 = v7;
    if ((objc_msgSend(v8, "isEqualToString:", CFSTR("NA")) & 1) != 0)
    {
      v9 = 0;
    }
    else if ((objc_msgSend(v8, "isEqualToString:", CFSTR("ENTRY")) & 1) != 0)
    {
      v9 = 1;
    }
    else if (objc_msgSend(v8, "isEqualToString:", CFSTR("EXIT")))
    {
      v9 = 2;
    }
    else
    {
      v9 = 0;
    }

    goto LABEL_26;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v9 = objc_msgSend(v7, "intValue");
LABEL_26:
    *(_DWORD *)(a2 + 8) = v9;
  }

}

uint64_t GEOJunctionElementReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOJunctionElementReadAllFrom(a1, a2);
}

uint64_t GEOJunctionElementReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 12) |= 4u;
        while (1)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0)
            goto LABEL_49;
          v26 += 7;
          v15 = v27++ >= 9;
          if (v15)
          {
            LODWORD(v28) = 0;
            goto LABEL_51;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_51:
        *(_DWORD *)(a1 + 8) = v28;
      }
      else if ((_DWORD)v18 == 2)
      {
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 12) |= 2u;
        while (1)
        {
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(a2 + *v4))
            break;
          v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
          *(_QWORD *)(a2 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0)
            goto LABEL_53;
          v33 += 7;
          v15 = v34++ >= 9;
          if (v15)
          {
            LODWORD(v35) = 0;
            goto LABEL_55;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v35) = 0;
LABEL_55:
        *(_DWORD *)(a1 + 4) = v35;
      }
      else if ((_DWORD)v18 == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_45;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            LODWORD(v21) = 0;
            goto LABEL_47;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_47:
        *(_DWORD *)a1 = -(v21 & 1) ^ ((int)v21 >> 1);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t GEOJunctionElementWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 12);
  if ((v2 & 1) != 0)
  {
    result = PBDataWriterWriteSint32Field();
    v2 = *(_BYTE *)(v1 + 12);
    if ((v2 & 2) == 0)
    {
LABEL_3:
      if ((v2 & 4) == 0)
        return result;
      return PBDataWriterWriteInt32Field();
    }
  }
  else if ((*(_BYTE *)(result + 12) & 2) == 0)
  {
    goto LABEL_3;
  }
  result = PBDataWriterWriteInt32Field();
  if ((*(_BYTE *)(v1 + 12) & 4) != 0)
    return PBDataWriterWriteInt32Field();
  return result;
}

BOOL GEOJunctionElementEquals(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GEOJunctionElementHash()
{
  return PBHashBytes();
}

uint64_t GEOJunctionElementIsValid(void *a1)
{
  uint64_t AllFrom;
  _QWORD v4[4];

  v4[2] = objc_msgSend(a1, "position");
  v4[3] = objc_msgSend(a1, "length");
  v4[0] = 0;
  v4[1] = 0;
  AllFrom = GEOJunctionElementReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOJunctionInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  id v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            if (!PBReaderPlaceMark())
              goto LABEL_63;
            -[GEOJunctionInfo _reserveJunctionElements:](a1, 1uLL);
            if ((GEOJunctionElementReadAllFrom(*(_QWORD *)(a1 + 16) + 16 * *(_QWORD *)(a1 + 24), (uint64_t)v3) & 1) == 0)
              goto LABEL_63;
            PBReaderRecallMark();
            ++*(_QWORD *)(a1 + 24);
            continue;
          case 2u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 52) |= 2u;
            while (1)
            {
              v23 = *v4;
              v24 = *(_QWORD *)&v3[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_49;
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6])
              LODWORD(v22) = 0;
LABEL_51:
            v39 = 44;
            goto LABEL_60;
          case 3u:
            v27 = 0;
            v28 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 52) |= 4u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v22 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v22) = 0;
LABEL_55:
            v39 = 48;
            goto LABEL_60;
          case 4u:
            v33 = 0;
            v34 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 52) |= 1u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v18 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v19 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v18;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_63;
            continue;
        }
        while (1)
        {
          v35 = *v4;
          v36 = *(_QWORD *)&v3[v35];
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
            break;
          v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
          *(_QWORD *)&v3[v35] = v37;
          v22 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0)
            goto LABEL_57;
          v33 += 7;
          v15 = v34++ >= 9;
          if (v15)
          {
            LODWORD(v22) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v22) = 0;
LABEL_59:
        v39 = 40;
LABEL_60:
        *(_DWORD *)(a1 + v39) = v22;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_188E653D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOJunctionInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E65438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOJunctionViewReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  void *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (v18)
            objc_msgSend(a1, "addImageId:", v18);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188E6664C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionViewReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOJunctionViewReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E666AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E66DB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  char v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  BOOL v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 4) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 2;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v65 = v15;
        v66 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v67 = (v17 == 0) | v16;
        v68 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_94;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_94:
      v63 = 1;
      goto LABEL_95;
    }
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 80) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v58 = 16 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 2:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 80) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v58 = 4 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 3:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v58 = 8 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 4:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 80) & 0x40) == 0)
        {
          PBReaderReadData();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
LABEL_56:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v9;
LABEL_92:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
          if (!(v66 & 1 | (v9 != 0)))
            goto LABEL_94;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v58 = 2 * *(_BYTE *)(a1 + 80);
LABEL_91:
          v9 += v58 >> 7;
          goto LABEL_92;
        }
LABEL_111:
        v63 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        v64 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v65 & 1) != 0)
LABEL_96:
          *(_BYTE *)(a1 + v64[435]) |= 4u;
        if (v68 || (v63 & 1) == 0)
        {
          *(_BYTE *)(a1 + v64[435]) |= 8u;
          *(_BYTE *)(a1 + v64[435]) |= 0x20u;
          *(_BYTE *)(a1 + v64[435]) |= 0x10u;
          *(_BYTE *)(a1 + v64[435]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v59 = *v17++;
            v60 = 8;
            switch(v59)
            {
              case 0:
                goto LABEL_105;
              case 1:
                goto LABEL_104;
              case 2:
                v60 = 32;
                goto LABEL_104;
              case 3:
                v60 = 16;
                goto LABEL_104;
              case 4:
                v60 = 64;
LABEL_104:
                *(_BYTE *)(a1 + v64[435]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v68)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_73;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                v45 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v45 = 0;
LABEL_78:
        *(_QWORD *)(a1 + 40) = v45;
        goto LABEL_93;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_73;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + 80) |= 2u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v52) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v52) = 0;
LABEL_82:
        *(_DWORD *)(a1 + 76) = v52;
        goto LABEL_93;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 4) != 0)
        {
LABEL_73:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v63 = 0;
            goto LABEL_95;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_96;
          }
        }
        goto LABEL_93;
    }
  }
}

void sub_188E67650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E67794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E678D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E681C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRInfoReadAllFrom_initialTag;
  Specified = GEOLPRInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188E6834C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E683AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_48;
          goto LABEL_26;
        case 2u:
          if (v15 == 2)
            goto LABEL_26;
          goto LABEL_48;
        case 3u:
          if (v15 == 2)
            goto LABEL_26;
          goto LABEL_48;
        case 4u:
          if (v15 == 2)
            goto LABEL_26;
          goto LABEL_48;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_44;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_45;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v23 = 0;
          break;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_48:
          v28 = 0;
          goto LABEL_47;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_45;
      }
LABEL_44:
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v28;
}

void sub_188E6886C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int8 *)(a1 + 80) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188E68C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E68FF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelActionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOLabelAction__detailTextAction;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOLabelAction__detailTextAction;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOLabelAction__detailTextAction;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOLabelAction__artworkAction;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOLabelAction__artworkAction;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOLabelAction__artworkAction;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E69CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelActionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLabelActionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E69D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelActionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188E6A4F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLabelInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOFormattedString *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  void *v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFEFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_79;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      v51 = 1;
      goto LABEL_80;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_97;
          v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v40 = 48;
            goto LABEL_65;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v46 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_76;
      case 2:
        if (!v34)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v46 = *(_BYTE *)(a1 + 68) << 6;
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        v40 = 24;
        goto LABEL_65;
      case 3:
        if (!v34)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v46 = 32 * *(_BYTE *)(a1 + 68);
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        v40 = 32;
        goto LABEL_65;
      case 4:
        if (!v34)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v46 = 16 * *(_BYTE *)(a1 + 68);
LABEL_76:
          v7 += v46 >> 7;
LABEL_77:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
          if (!(v54 & 1 | (v7 != 0)))
            goto LABEL_79;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v39 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = 40;
LABEL_65:
          v44 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
          goto LABEL_77;
        }
LABEL_96:

LABEL_97:
        v51 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
        v52 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v53 & 1) != 0)
LABEL_81:
          *(_BYTE *)(a1 + v52[450]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(_BYTE *)(a1 + v52[450]) |= 0x10u;
          *(_BYTE *)(a1 + v52[450]) |= 2u;
          *(_BYTE *)(a1 + v52[450]) |= 4u;
          *(_BYTE *)(a1 + v52[450]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            v47 = *v19++;
            v48 = 16;
            switch(v47)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_89;
              case 2:
                v48 = 2;
                goto LABEL_89;
              case 3:
                v48 = 4;
                goto LABEL_89;
              case 4:
                v48 = 8;
LABEL_89:
                *(_BYTE *)(a1 + v52[450]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v51)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v56)
        {
          v49 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_66:
          v45 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
            v51 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v51 = 0;
            v52 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_188E6AD0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E6AE48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E6AF88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E6B6D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLabelInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[5], "readAll:", 1);
}

unint64_t GEOLabelInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLabelInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLabelInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLabelInfoReadAllFrom_initialTag;
  Specified = GEOLabelInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLabelInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E6B8C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLabelInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLabelInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E6B928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
            goto LABEL_32;
          goto LABEL_35;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_35;
          goto LABEL_32;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_35;
LABEL_32:
          PBReaderRecallMark();
          goto LABEL_33;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_35:
            PBReaderRecallMark();
            return 0;
          }
LABEL_33:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_34;
          break;
      }
    }
  }
LABEL_34:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E6BD2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLabelInfoIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 2) == 0)
    goto LABEL_8;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 68);
LABEL_8:
  if ((v2 & 4) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOLabelInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLabelInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E6C0D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E6C3E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneArrowheadReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  id v31;
  void *v32;
  int *v33;
  _BOOL8 v34;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_40;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_42:
          LODWORD(v20) = -(v20 & 1) ^ ((int)v20 >> 1);
          v33 = &OBJC_IVAR___GEOLaneArrowhead__angle;
LABEL_47:
          *(_DWORD *)(a1 + *v33) = v20;
          goto LABEL_48;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v31 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v32 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v31;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_48:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v25 = 0;
      v26 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v27 = *v4;
        v28 = *(_QWORD *)&v3[v27];
        v29 = v28 + 1;
        if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
          break;
        v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
        *(_QWORD *)&v3[v27] = v29;
        v20 |= (unint64_t)(v30 & 0x7F) << v25;
        if ((v30 & 0x80) == 0)
          goto LABEL_44;
        v25 += 7;
        v15 = v26++ >= 9;
        if (v15)
        {
          LODWORD(v20) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6])
        LODWORD(v20) = 0;
LABEL_46:
      v33 = &OBJC_IVAR___GEOLaneArrowhead__category;
      goto LABEL_47;
    }
LABEL_49:
    v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_188E6D1C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneArrowheadReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLaneArrowheadReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E6D224(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneArrowheadIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLaneChangeInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOLaneChangeInfo__numValidLanes;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOLaneChangeInfo__numValidLanes;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOLaneChangeInfo__numValidLanes;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOLaneChangeInfo__startOffsetCm;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOLaneChangeInfo__startOffsetCm;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOLaneChangeInfo__startOffsetCm;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 1u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOLaneChangeInfo__endOffsetCm;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEOLaneChangeInfo__endOffsetCm;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOLaneChangeInfo__endOffsetCm;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188E6E294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneChangeInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  objc_sync_enter(v3);
  v4 = GEOLaneChangeInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return v4;
}

void sub_188E6E2F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneChangeInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLaneInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  GEOLaneArrowhead *v41;
  BOOL v42;
  uint64_t v43;
  _BOOL8 v44;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 2u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_49;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6])
              v20 = 0;
LABEL_51:
            v42 = v20 != 0;
            v43 = 26;
            goto LABEL_60;
          case 3u:
            v27 = 0;
            v28 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    v29 = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v29 = 0;
LABEL_55:
            v42 = v29 != 0;
            v43 = 25;
            goto LABEL_60;
          case 4u:
            v34 = 0;
            v35 = 0;
            v36 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
                *(_QWORD *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  v15 = v35++ >= 9;
                  if (v15)
                  {
                    v36 = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v36 = 0;
LABEL_59:
            v42 = v36 != 0;
            v43 = 24;
LABEL_60:
            *(_BYTE *)(a1 + v43) = v42;
            goto LABEL_61;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v41 = objc_alloc_init(GEOLaneArrowhead);
            if (!GEOLaneArrowheadReadAllFrom((uint64_t)v41, v3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            objc_msgSend((id)a1, "addArrow:", v41, 0, 0);

LABEL_61:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_62;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    v44 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    v44 = 0;
  }
  objc_sync_exit(v3);

  return v44;
}

void sub_188E6F880(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLaneInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E6F8E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneArrowheadIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLaneWidthReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOLaneWidth__zilchPathIndex;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOLaneWidth__zilchPathIndex;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOLaneWidth__zilchPathIndex;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOLaneWidth__width;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOLaneWidth__width;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOLaneWidth__width;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 1u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOLaneWidth__offset;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEOLaneWidth__offset;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOLaneWidth__offset;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188E70F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneWidthReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLaneWidthReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E70F8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneWidthIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_188E71898(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLaunchAndGoCardTextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFCFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 8) != 0)+ ((*(_BYTE *)(a1 + 84) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_93;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_93:
      v52 = 1;
      goto LABEL_94;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_113;
          v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = 32;
            goto LABEL_75;
          }
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v47 = 32 * *(_BYTE *)(a1 + 84);
        goto LABEL_90;
      case 2:
        if (!v35)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v47 = 4 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v41 = 56;
        goto LABEL_75;
      case 3:
        if (!v35)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v47 = 8 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v41 = 48;
        goto LABEL_75;
      case 4:
        if (!v35)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v47 = 2 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v40 = objc_alloc_init(GEOPlaceFormattedString);
        if (!GEOPlaceFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v41 = 64;
        goto LABEL_75;
      case 5:
        if (!v35)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v47 = 16 * *(_BYTE *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v40 = objc_alloc_init(GEOPlaceFormattedString);
        if (!GEOPlaceFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v41 = 40;
        goto LABEL_75;
      case 6:
        if (!v35)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v47 = *(_BYTE *)(a1 + 84) << 6;
LABEL_90:
          v7 += v47 >> 7;
LABEL_91:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_92:
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_93;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v40 = objc_alloc_init(GEOPlaceFormattedString);
        if (GEOPlaceFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 24;
LABEL_75:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
          goto LABEL_91;
        }
LABEL_112:

LABEL_113:
        v52 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
        v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v54 & 1) != 0)
LABEL_95:
          *(_BYTE *)(a1 + v53[480]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[480]) |= 4u;
          *(_BYTE *)(a1 + v53[480]) |= 0x20u;
          *(_BYTE *)(a1 + v53[480]) |= 0x10u;
          *(_BYTE *)(a1 + v53[480]) |= 0x40u;
          *(_BYTE *)(a1 + v53[480]) |= 8u;
          *(_BYTE *)(a1 + v53[480]) |= 2u;
        }
        else if (v20)
        {
          while (1)
          {
            v48 = *v20++;
            v49 = 4;
            switch(v48)
            {
              case 0:
                goto LABEL_106;
              case 1:
                goto LABEL_105;
              case 2:
                v49 = 32;
                goto LABEL_105;
              case 3:
                v49 = 16;
                goto LABEL_105;
              case 4:
                v49 = 64;
                goto LABEL_105;
              case 5:
                v49 = 8;
                goto LABEL_105;
              case 6:
                v49 = 2;
LABEL_105:
                *(_BYTE *)(a1 + v53[480]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_106:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_76:
          v46 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_95;
          }
        }
        goto LABEL_92;
    }
  }
}

void sub_188E7221C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E72360(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E724A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E725E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E72724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7300C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLaunchAndGoCardTextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEOLaunchAndGoCardTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLaunchAndGoCardTextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLaunchAndGoCardTextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLaunchAndGoCardTextReadAllFrom_initialTag;
  Specified = GEOLaunchAndGoCardTextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLaunchAndGoCardTextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188E73224(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLaunchAndGoCardTextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLaunchAndGoCardTextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E73284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaunchAndGoCardTextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_31:
    v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_31;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      if (v7++ >= 9)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_31;
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 3u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
          goto LABEL_26;
        goto LABEL_30;
      case 4u:
      case 5u:
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceFormattedStringIsValid(a1))
          goto LABEL_30;
LABEL_26:
        PBReaderRecallMark();
        goto LABEL_27;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
LABEL_27:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_31;
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_188E7369C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLaunchAndGoCardTextIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(char *)(a1 + 84);
  if (v2 < 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x20) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x10) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x40) == 0)
    goto LABEL_14;
  if ((GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
    return 1;
  LOBYTE(v2) = *(_BYTE *)(a1 + 84);
LABEL_14:
  if ((v2 & 8) != 0)
  {
    if ((GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 2) != 0)
    return (uint64_t)GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEOLaunchAndGoCardTextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLaunchAndGoCardTextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E73B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E73EF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOManeuverDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOJunctionInfo *v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v25 = objc_alloc_init(GEOJunctionInfo);
          if (!GEOJunctionInfoReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_36;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188E75D20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOManeuverDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOManeuverDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E75D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMeasurementDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188E76868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMeasurementDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOMeasurementDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E768C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E76D78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMiniCardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOFormattedString *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_90;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_90:
      v58 = 1;
      goto LABEL_91;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_108;
          v38 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            v39 = 48;
            goto LABEL_71;
          }
          goto LABEL_107;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v53 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_87;
      case 2:
        if (!v33)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v53 = 16 * *(_BYTE *)(a1 + 72);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v38 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v39 = 32;
        goto LABEL_71;
      case 3:
        if (!v33)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 4) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v43;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v53 = 32 * *(_BYTE *)(a1 + 72);
        goto LABEL_87;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_73;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v48 = *v19;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v29 = v46++ >= 9;
              if (v29)
              {
                v47 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v47 = 0;
LABEL_78:
        *(_BYTE *)(a1 + 68) = v47 != 0;
        goto LABEL_89;
      case 5:
        if (!v33)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v53 = 8 * *(_BYTE *)(a1 + 72);
LABEL_87:
          v8 += v53 >> 7;
LABEL_88:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_89:
          if (!(v61 & 1 | (v8 != 0)))
            goto LABEL_90;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v38 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v39 = 40;
LABEL_71:
          v44 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;
LABEL_72:

          --v8;
          goto LABEL_88;
        }
LABEL_107:

LABEL_108:
        v58 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
        v59 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v60 & 1) != 0)
LABEL_92:
          *(_BYTE *)(a1 + v59[498]) |= 2u;
        if (v63 & 1 | ((v58 & 1) == 0))
        {
          *(_BYTE *)(a1 + v59[498]) |= 0x20u;
          *(_BYTE *)(a1 + v59[498]) |= 8u;
          *(_BYTE *)(a1 + v59[498]) |= 4u;
          *(_BYTE *)(a1 + v59[498]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v54 = *v18++;
            v55 = 32;
            switch(v54)
            {
              case 0:
                goto LABEL_101;
              case 1:
                goto LABEL_100;
              case 2:
                v55 = 8;
                goto LABEL_100;
              case 3:
                v55 = 4;
                goto LABEL_100;
              case 5:
                v55 = 16;
LABEL_100:
                *(_BYTE *)(a1 + v59[498]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_101:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_73:
          v52 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_188E77640(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E77780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E77928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E78104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMiniCardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOMiniCardReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOMiniCardReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOMiniCardReadAllFrom_initialTag;
  Specified = GEOMiniCardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E782C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMiniCardReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOMiniCardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E78328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMiniCardIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_37;
          PBReaderRecallMark();
          continue;
        case 3u:
          if (v15 == 2)
            goto LABEL_24;
          goto LABEL_37;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_37;
          v17 = 0;
          break;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_37:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_35;
      }
      a1[*v4] = 1;
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188E78770(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOMiniCardIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 72);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 72);
  }
  if ((v2 & 8) == 0)
    goto LABEL_8;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
    return 1;
  v2 = *(_BYTE *)(a1 + 72);
LABEL_8:
  if ((v2 & 4) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
    return (uint64_t)GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40));
  else
    return 0;
}

os_unfair_lock_s *GEOMiniCardIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOMiniCardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E78B80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E78F1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMinimumVisibleElevationRangeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__lowerBoundCm;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__lowerBoundCm;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__lowerBoundCm;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = -(v20 & 1) ^ ((int)v20 >> 1);
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__upperBoundCm;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__upperBoundCm;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__upperBoundCm;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E798D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMinimumVisibleElevationRangeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOMinimumVisibleElevationRangeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E79934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E79EB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavTrayGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOFormattedString *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_66;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      v51 = 1;
      goto LABEL_67;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_84;
        PBReaderRecallMark();
        v40 = 32;
LABEL_50:
        v41 = *(void **)(a1 + v40);
        *(_QWORD *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        v21 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v46 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if ((v53 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v45 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v45 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v51 = 0;
      v52 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v34)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v46 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v39 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v51 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v52 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v53 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v52[513]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[513]) |= 4u;
    *(_BYTE *)(a1 + v52[513]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      v48 = *v19++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v52[513]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188E7A538(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7AAFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavTrayGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEONavTrayGuidanceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEONavTrayGuidanceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEONavTrayGuidanceReadAllFrom_initialTag;
  Specified = GEONavTrayGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E7ACB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavTrayGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONavTrayGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E7AD14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7AE98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEONavTrayGuidanceIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 2) != 0)
    return (uint64_t)GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEONavTrayGuidanceIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEONavTrayGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E7B1A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7B3F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigabilityInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEONavigabilityInfo__isEvFeasible;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEONavigabilityInfo__isEvFeasible;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEONavigabilityInfo__isEvFeasible;
LABEL_42:
          if (v3[*v6])
            v20 = 0;
LABEL_44:
          *(_BYTE *)(a1 + *v26) = v20 != 0;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 20) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEONavigabilityInfo__isBlocked;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          v20 = 0;
          v26 = &OBJC_IVAR___GEONavigabilityInfo__isBlocked;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEONavigabilityInfo__isBlocked;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E7BD74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigabilityInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONavigabilityInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E7BDD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigabilityInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEONoMatchReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPathStretch *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPathStretch);
          if (!GEOPathStretchReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_188E7CA3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONoMatchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONoMatchReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E7CA9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONoMatchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPathStretchIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPathStretchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEONumberDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          *(_BYTE *)(a1 + 20) |= 1u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_31;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_188E7D7E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONumberDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONumberDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E7D844(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7DEC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  BOOL v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v66 = v15 | v8;
        v67 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v68 = (v17 == 0) | v16;
        v69 = v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v64 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v69;
    if ((v68 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        v57 = 52;
        goto LABEL_76;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
        {
          PBReaderReadData();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 32;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v58 = 8 * *(_BYTE *)(a1 + 60);
        goto LABEL_81;
      case 3:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadData();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 24;
LABEL_57:
          v49 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v58 = 16 * *(_BYTE *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_82;
        }
LABEL_103:
        v64 = 0;
        v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        if ((v66 & 1) != 0)
LABEL_86:
          *(_BYTE *)(a1 + v65[635]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(_BYTE *)(a1 + v65[635]) |= 0x10u;
          *(_BYTE *)(a1 + v65[635]) |= 8u;
          goto LABEL_97;
        }
        if (v17)
        {
          while (1)
          {
            v61 = *v17++;
            v60 = v61;
            if (v61 == 2)
              break;
            if (v60 == 3)
            {
              v59 = 8;
LABEL_93:
              *(_BYTE *)(a1 + v65[635]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_97;
            }
          }
          v59 = 16;
          goto LABEL_93;
        }
LABEL_97:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v69)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v50 = 0;
        v51 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v39 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_75:
        v57 = 56;
LABEL_76:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_82;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v64 = 0;
LABEL_84:
            v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v67 & 1 | (v10 != 0)))
          goto LABEL_83;
        continue;
    }
  }
}

void sub_188E7E668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7EE60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOOriginalRouteReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOOriginalRouteReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOOriginalRouteReadAllFrom_initialTag;
  Specified = GEOOriginalRouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E7EFE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOOriginalRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E7F048(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalRouteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_40;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_41;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_44;
        case 3u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_44;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v23 = 0;
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_44:
          v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_188E7F4A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalRouteIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188E7F80C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7FB4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E7FDAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteLegReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  GEOEVStateInfo *v43;
  uint64_t v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  char v54;
  int v55;
  char v56;
  void *v57;
  int v59;
  int *v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFAFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 84) & 4) != 0)+ ((*(_BYTE *)(a1 + 84) & 2) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v61 = v17 & ~(_BYTE)v12 | v10;
        v62 = v17 | v12 | v61;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v63 = (v18 == 0) | v17 | v12;
        v64 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_96;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_96:
      v59 = 1;
      goto LABEL_97;
    }
    v32 = v24 >> 3;
    v33 = v64;
    if ((v63 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x40) == 0)
        {
          PBReaderReadData();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 64;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v54 = 2 * *(_BYTE *)(a1 + 84);
        goto LABEL_93;
      case 2:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v54 = 16 * *(_BYTE *)(a1 + 84);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v43 = objc_alloc_init(GEOEVStateInfo);
        if (!GEOEVStateInfoReadAllFrom((uint64_t)v43, (void *)v3))
          goto LABEL_114;
        PBReaderRecallMark();
        v44 = 40;
        goto LABEL_63;
      case 3:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v54 = 8 * *(_BYTE *)(a1 + 84);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v43 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
          goto LABEL_114;
        PBReaderRecallMark();
        v44 = 48;
        goto LABEL_63;
      case 4:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_115;
          v54 = 32 * *(_BYTE *)(a1 + 84);
LABEL_93:
          v8 += v54 >> 7;
LABEL_94:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_95:
          if (!(v62 & 1 | (v8 != 0)))
            goto LABEL_96;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_115;
        v43 = objc_alloc_init(GEOWaypointInfo);
        if (GEOWaypointInfoReadAllFrom((uint64_t)v43, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v44 = 24;
LABEL_63:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
LABEL_68:

          --v8;
          goto LABEL_94;
        }
LABEL_114:

LABEL_115:
        v59 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        v60 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v61 & 1) != 0)
LABEL_98:
          *(_BYTE *)(a1 + v60[538]) |= 2u;
        if (v64 & 1 | ((v59 & 1) == 0))
        {
          *(_BYTE *)(a1 + v60[538]) |= 0x40u;
          *(_BYTE *)(a1 + v60[538]) |= 0x20u;
          *(_BYTE *)(a1 + v60[538]) |= 8u;
          *(_BYTE *)(a1 + v60[538]) |= 0x10u;
          *(_BYTE *)(a1 + v60[538]) |= 4u;
        }
        else if (v18)
        {
          while (1)
          {
            v55 = *v18++;
            v56 = 64;
            switch(v55)
            {
              case 0:
                goto LABEL_108;
              case 1:
                goto LABEL_107;
              case 2:
                v56 = 8;
                goto LABEL_107;
              case 3:
                v56 = 16;
                goto LABEL_107;
              case 4:
                v56 = 4;
                goto LABEL_107;
              case 5:
                v56 = 32;
LABEL_107:
                *(_BYTE *)(a1 + v60[538]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_108:
        if (v59)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v64 & 1) != 0)
        {
          v57 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if (!v33)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x20) == 0)
        {
          PBReaderReadData();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 56;
LABEL_67:
          v45 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_115;
        v54 = 4 * *(_BYTE *)(a1 + 84);
        goto LABEL_93;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_77;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_BYTE *)(a1 + 84) |= 1u;
        while (2)
        {
          v49 = *v19;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v29 = v47++ >= 9;
              if (v29)
              {
                v48 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v48 = 0;
LABEL_82:
        *(_QWORD *)(a1 + 32) = v48;
        goto LABEL_95;
      default:
        if ((v61 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 2) != 0)
        {
LABEL_77:
          v53 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            v59 = 0;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v59 = 0;
            v60 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_98;
          }
        }
        goto LABEL_95;
    }
  }
}

void sub_188E806EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E80830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E80970(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E80AB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E81450(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteLegReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOOriginalRouteLegReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOOriginalRouteLegReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOOriginalRouteLegReadAllFrom_initialTag;
  Specified = GEOOriginalRouteLegReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188E81618(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteLegReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOOriginalRouteLegReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E81678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalRouteLegIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_43;
          goto LABEL_30;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOEVStateInfoIsValid(a1))
            goto LABEL_28;
          goto LABEL_43;
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1))
            goto LABEL_43;
LABEL_28:
          PBReaderRecallMark();
          continue;
        case 5u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_43;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v17 = 0;
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_43:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_31;
      }
      a1[*v4] = 1;
LABEL_31:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOWaypointInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_58;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_71;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_73;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_73;
          goto LABEL_70;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_73;
          goto LABEL_70;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_73;
          goto LABEL_70;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVChargingInfoIsValid(a1))
            goto LABEL_73;
          goto LABEL_70;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARInfoIsValid(a1))
            goto LABEL_73;
          goto LABEL_70;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v23 = 0;
          break;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1))
            goto LABEL_73;
          goto LABEL_70;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
            goto LABEL_73;
          goto LABEL_70;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_73;
LABEL_70:
          PBReaderRecallMark();
          continue;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_73:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_71;
      }
LABEL_58:
      a1[*v4] = 1;
LABEL_71:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188E81F00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOOriginalRouteLegIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_BYTE *)(a1 + 84);
  if ((v2 & 0xE8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 84) & 0x10) != 0)
  {
    if ((GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 4) != 0)
    return (uint64_t)GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEOOriginalRouteLegIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOOriginalRouteLegIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E8238C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8277C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalWaypointRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v4;
  int *v5;
  int *v6;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  GEOOriginalRouteLeg *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  _BOOL8 v54;

  v4 = a2;
  objc_sync_enter(v4);
  if (v4)
  {
    v5 = (int *)MEMORY[0x1E0D82BF0];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    v7 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v4[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v4[*MEMORY[0x1E0D82BD8]])
    {
      v8 = (int *)MEMORY[0x1E0D82BB8];
      while (!v4[*v7])
      {
        v9 = 0;
        v10 = 0;
        v11 = 0;
        while (1)
        {
          v12 = *v5;
          v13 = *(_QWORD *)&v4[v12];
          v14 = v13 + 1;
          if (v13 == -1 || v14 > *(_QWORD *)&v4[*v6])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v13);
          *(_QWORD *)&v4[v12] = v14;
          v11 |= (unint64_t)(v15 & 0x7F) << v9;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v9 += 7;
          v16 = v10++ >= 9;
          if (v16)
          {
            v11 = 0;
            v17 = v4[*v7];
            goto LABEL_15;
          }
        }
        v4[*v7] = 1;
LABEL_13:
        v17 = v4[*v7];
        if (v4[*v7])
          v11 = 0;
LABEL_15:
        if (v17 || (v11 & 7) == 4)
          break;
        switch((v11 >> 3))
        {
          case 1u:
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 44) |= 2u;
            while (1)
            {
              v22 = *v5;
              v23 = *(_QWORD *)&v4[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v4[*v6])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v23);
              *(_QWORD *)&v4[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_63;
              v19 += 7;
              v16 = v20++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_65;
              }
            }
            v4[*v7] = 1;
LABEL_63:
            if (v4[*v7])
              LODWORD(v21) = 0;
LABEL_65:
            v53 = 28;
            goto LABEL_82;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_86;
            v28 = objc_alloc_init(GEOOriginalRouteLeg);
            if (!GEOOriginalRouteLegReadAllFrom((uint64_t)v28, v4, a3))
            {

              goto LABEL_86;
            }
            PBReaderRecallMark();
            objc_msgSend((id)a1, "addRouteLeg:", v28);

LABEL_83:
            if (*(_QWORD *)&v4[*v5] >= *(_QWORD *)&v4[*v6])
              goto LABEL_84;
            break;
          case 3u:
            v29 = 0;
            v30 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            while (2)
            {
              v31 = *v5;
              v32 = *(_QWORD *)&v4[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v4[*v6])
              {
                v4[*v7] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v32);
                *(_QWORD *)&v4[v31] = v33;
                v21 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v16 = v30++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v4[*v7])
              LODWORD(v21) = 0;
LABEL_69:
            v53 = 36;
            goto LABEL_82;
          case 4u:
            v35 = 0;
            v36 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 44) |= 0x10u;
            while (2)
            {
              v37 = *v5;
              v38 = *(_QWORD *)&v4[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v4[*v6])
              {
                v4[*v7] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v38);
                *(_QWORD *)&v4[v37] = v39;
                v21 |= (unint64_t)(v40 & 0x7F) << v35;
                if (v40 < 0)
                {
                  v35 += 7;
                  v16 = v36++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v4[*v7])
              LODWORD(v21) = 0;
LABEL_73:
            v53 = 40;
            goto LABEL_82;
          case 5u:
            v41 = 0;
            v42 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 44) |= 4u;
            while (2)
            {
              v43 = *v5;
              v44 = *(_QWORD *)&v4[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&v4[*v6])
              {
                v4[*v7] = 1;
              }
              else
              {
                v46 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v44);
                *(_QWORD *)&v4[v43] = v45;
                v21 |= (unint64_t)(v46 & 0x7F) << v41;
                if (v46 < 0)
                {
                  v41 += 7;
                  v16 = v42++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_77;
                  }
                  continue;
                }
              }
              break;
            }
            if (v4[*v7])
              LODWORD(v21) = 0;
LABEL_77:
            v53 = 32;
            goto LABEL_82;
          case 6u:
            v47 = 0;
            v48 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 44) |= 1u;
            while (2)
            {
              v49 = *v5;
              v50 = *(_QWORD *)&v4[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&v4[*v6])
              {
                v4[*v7] = 1;
              }
              else
              {
                v52 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v50);
                *(_QWORD *)&v4[v49] = v51;
                v21 |= (unint64_t)(v52 & 0x7F) << v47;
                if (v52 < 0)
                {
                  v47 += 7;
                  v16 = v48++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_81;
                  }
                  continue;
                }
              }
              break;
            }
            if (v4[*v7])
              LODWORD(v21) = 0;
LABEL_81:
            v53 = 24;
LABEL_82:
            *(_DWORD *)(a1 + v53) = v21;
            goto LABEL_83;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v27 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v26;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_86;
            goto LABEL_83;
        }
      }
    }
LABEL_84:
    v54 = v4[*v7] == 0;
  }
  else
  {
LABEL_86:
    v54 = 0;
  }
  objc_sync_exit(v4);

  return v54;
}

void sub_188E8410C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalWaypointRouteReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOOriginalWaypointRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E8416C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalWaypointRouteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOOriginalRouteLegIsValid(a1))
            goto LABEL_69;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v38 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOOutOfMapsAlertsInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOAlertNonRecommendedRouteText *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOAlertNonRecommendedRouteText);
          if (!GEOAlertNonRecommendedRouteTextReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_188E8576C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOutOfMapsAlertsInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOOutOfMapsAlertsInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E857CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOutOfMapsAlertsInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAlertNonRecommendedRouteTextIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E86254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitArtworkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  GEOPBTransitShield *v53;
  uint64_t v54;
  void *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  __int16 v65;
  int v66;
  __int16 v67;
  void *v68;
  int v70;
  int *v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 80)), (uint16x4_t)0xFFFCFFFBFFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 80) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v72 = v16 & ~(_BYTE)v11 | v9;
        v73 = v8;
        v74 = v16 | v11 | v72;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v75 = (v17 == 0) | v16 | v11;
        v76 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_115;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_115:
      v70 = 1;
      goto LABEL_116;
    }
    v31 = v23 >> 3;
    v32 = v76;
    if ((v75 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v73 & 1) == 0)
          goto LABEL_89;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 80) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_92;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_94;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_92:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_94:
        v64 = 68;
        goto LABEL_103;
      case 2:
        if ((v73 & 1) == 0)
          goto LABEL_89;
        v44 = 0;
        v45 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 80) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v39 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_98:
        v64 = 72;
        goto LABEL_103;
      case 10:
        if (!v32)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 80) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_134;
          v65 = *(_WORD *)(a1 + 80) << 8;
          goto LABEL_112;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v53 = objc_alloc_init(GEOPBTransitShield);
        if (!GEOPBTransitShieldReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1))
          goto LABEL_133;
        PBReaderRecallMark();
        v54 = 48;
        goto LABEL_76;
      case 11:
        if (!v32)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_134;
          v65 = *(_WORD *)(a1 + 80) << 9;
          goto LABEL_112;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v53 = objc_alloc_init(GEOPBTransitIcon);
        if (!GEOPBTransitIconReadAllFrom((uint64_t)v53, (void *)v3))
          goto LABEL_133;
        PBReaderRecallMark();
        v54 = 40;
        goto LABEL_76;
      case 12:
        if (!v32)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_134;
          v65 = *(_WORD *)(a1 + 80) << 10;
LABEL_112:
          v7 += v65 >> 15;
LABEL_113:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v53 = objc_alloc_init(GEOPBTransitShield);
        if (GEOPBTransitShieldReadAllFrom((uint64_t)v53, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v54 = 32;
LABEL_76:
          v55 = *(void **)(a1 + v54);
          *(_QWORD *)(a1 + v54) = v53;
LABEL_88:

          --v7;
          goto LABEL_113;
        }
LABEL_133:

LABEL_134:
        v70 = 0;
        v71 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_117:
        if ((v72 & 1) != 0)
LABEL_118:
          *(_WORD *)(a1 + v71[637]) |= 8u;
        if (v76 & 1 | ((v70 & 1) == 0))
        {
          *(_WORD *)(a1 + v71[637]) |= 0x80u;
          *(_WORD *)(a1 + v71[637]) |= 0x40u;
          *(_WORD *)(a1 + v71[637]) |= 0x20u;
          *(_WORD *)(a1 + v71[637]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v66 = *v17++;
            v67 = 128;
            switch(v66)
            {
              case 10:
                goto LABEL_126;
              case 11:
                v67 = 64;
                goto LABEL_126;
              case 12:
                v67 = 32;
                goto LABEL_126;
              case 14:
                v67 = 16;
LABEL_126:
                *(_WORD *)(a1 + v71[637]) |= v67;
                break;
              default:
                continue;
            }
          }
        }
        if (v70)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v76 & 1) != 0)
        {
          v68 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 13:
        if ((v73 & 1) == 0)
          goto LABEL_89;
        v56 = 0;
        v57 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 80) |= 4u;
        while (2)
        {
          v58 = *v18;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v39 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_102:
        v64 = 76;
LABEL_103:
        *(_DWORD *)(a1 + v64) = v39;
        goto LABEL_114;
      case 14:
        if (!v32)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v62 = objc_claimAutoreleasedReturnValue();
          v55 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v62;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_134;
        v65 = *(_WORD *)(a1 + 80) << 11;
        goto LABEL_112;
      default:
        if ((v72 & 1) == 0 || (*(_WORD *)(a1 + 80) & 8) != 0)
        {
LABEL_89:
          v63 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v63 & 1) == 0)
          {
            v70 = 0;
LABEL_116:
            v71 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_117;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v51 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v50;

          }
          v52 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v52)
          {
            v70 = 0;
            v71 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_118;
          }
        }
LABEL_114:
        if (!(v74 & 1 | (v7 != 0)))
          goto LABEL_115;
        continue;
    }
  }
}

void sub_188E86C80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E86DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8707C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E87C7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitArtworkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitArtworkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitArtworkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitArtworkReadAllFrom_initialTag;
  Specified = GEOPBTransitArtworkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E87E44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitArtworkReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitArtworkReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E87EA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitShieldIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_38;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 4)
        break;
      if ((_DWORD)v17 == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if (v15 != 2)
            goto LABEL_40;
          goto LABEL_24;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_40:
          v24 = 0;
          goto LABEL_39;
        }
      }
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v15 != 2)
      goto LABEL_40;
LABEL_24:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_38:
  v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

BOOL GEOPBTransitIconIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_188E88578(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitArtworkIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int16 *)(a1 + 80);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEOPBTransitShieldIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 80);
  }
  if ((v2 & 0x40) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if (GEOPBTransitShieldIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 80);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPBTransitArtworkIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPBTransitArtworkIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E88A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E88EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIconReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOStyleAttributes *v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  void *v35;
  uint64_t v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v26 = objc_alloc_init(GEOStyleAttributes);
          if (!GEOStyleAttributesReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          v27 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v26;

        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            v28 = 0;
            v29 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (1)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
                break;
              v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v32;
              v21 |= (unint64_t)(v33 & 0x7F) << v28;
              if ((v33 & 0x80) == 0)
                goto LABEL_48;
              v28 += 7;
              v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_50:
            v36 = 28;
            goto LABEL_51;
          }
          if ((_DWORD)v18 == 1)
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_44;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_46:
            v36 = 24;
LABEL_51:
            *(_DWORD *)(a1 + v36) = v21;
            continue;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_188E899D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIconReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitIconReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E89A34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8A0C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitShieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v58 = v15 | v8;
        v59 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16;
        v61 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      v56 = 1;
      goto LABEL_74;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 4)
      break;
    if ((_DWORD)v31 == 3)
    {
      if ((v9 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_63;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v42) = 0;
LABEL_65:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_72;
      }
    }
    else if ((_DWORD)v31 == 2)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_92;
        v51 = 16 * *(_BYTE *)(a1 + 56);
        goto LABEL_70;
      }
    }
    else if ((v58 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v56 = 0;
        v57 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        goto LABEL_76;
      }
      goto LABEL_72;
    }
LABEL_60:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v56 = 0;
LABEL_74:
      v57 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v59 & 1 | (v10 != 0)))
      goto LABEL_73;
  }
  if (!v32)
    goto LABEL_60;
  if ((*(_BYTE *)(a1 + 56) & 4) == 0)
  {
    PBReaderReadString();
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = 24;
LABEL_45:
    v39 = *(void **)(a1 + v38);
    *(_QWORD *)(a1 + v38) = v37;

    --v10;
LABEL_71:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_72;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v51 = 32 * *(_BYTE *)(a1 + 56);
LABEL_70:
    v10 += v51 >> 7;
    goto LABEL_71;
  }
LABEL_92:
  v56 = 0;
  v57 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_75:
  if ((v58 & 1) == 0)
    goto LABEL_77;
LABEL_76:
  *(_BYTE *)(a1 + v57[641]) |= 2u;
LABEL_77:
  if (v61 || (v56 & 1) == 0)
  {
    *(_BYTE *)(a1 + v57[641]) |= 8u;
    *(_BYTE *)(a1 + v57[641]) |= 4u;
    goto LABEL_86;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 4)
          goto LABEL_85;
        if (!v52)
          goto LABEL_86;
      }
      LOBYTE(v52) = 8;
LABEL_85:
      *(_BYTE *)(a1 + v57[641]) |= v52;
      continue;
    }
  }
LABEL_86:
  if (v56)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v61)
  {
    v54 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188E8A7FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8AE0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitShieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBTransitShieldReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBTransitShieldReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBTransitShieldReadAllFrom_initialTag;
  Specified = GEOPBTransitShieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E8AF94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitShieldReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBTransitShieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E8AFF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8B1B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitShieldIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188E8B4CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8B77C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathMapMatcherInstructionsReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEONoMatch *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEONoMatch);
          if (!GEONoMatchReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addNoMatch:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188E8C120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathMapMatcherInstructionsReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPathMapMatcherInstructionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E8C180(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathMapMatcherInstructionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONoMatchIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPathStretchReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPathStretch__startOffsetCm;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPathStretch__startOffsetCm;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPathStretch__startOffsetCm;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPathStretch__endOffsetCm;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPathStretch__endOffsetCm;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPathStretch__endOffsetCm;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E8D214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathStretchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPathStretchReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E8D274(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8D7F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceFormattedStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  unsigned __int8 v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  char v46;
  __int16 v47;
  int v48;
  __int16 v49;
  void *v50;
  int v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(unsigned __int16 *)(a1 + 108);
  v13 = ((v12 >> 8) & 1)
      + (v12 & 1)
      + ((v12 >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v12), (uint16x4_t)0xFFFFFFFDFFFBFFF7), (int8x8_t)0x1000100010001))+ ((v12 >> 2) & 1)+ ((v12 >> 6) & 1)+ ((v12 >> 7) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 6;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        v53 = v18;
        v54 = v19 | v18;
        if (((v19 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v55 = (v20 == 0) | v19;
        v56 = v19;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_114;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_114:
      v52 = 1;
      goto LABEL_115;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_137;
          v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = 56;
            goto LABEL_90;
          }
          goto LABEL_136;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_137;
        v47 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_111;
      case 2:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 6;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_136;
        PBReaderRecallMark();
        v41 = 88;
        goto LABEL_90;
      case 3:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 12;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_136;
        PBReaderRecallMark();
        v41 = 40;
        goto LABEL_90;
      case 4:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 14;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_136;
        PBReaderRecallMark();
        v41 = 24;
        goto LABEL_90;
      case 5:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 13;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_136;
        PBReaderRecallMark();
        v41 = 32;
        goto LABEL_90;
      case 6:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 9;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_136;
        PBReaderRecallMark();
        v41 = 64;
        goto LABEL_90;
      case 7:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 8;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_136;
        PBReaderRecallMark();
        v41 = 72;
        goto LABEL_90;
      case 8:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 7;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_136;
        PBReaderRecallMark();
        v41 = 80;
        goto LABEL_90;
      case 9:
        if (!v35)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 108) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v47 = *(_WORD *)(a1 + 108) << 11;
LABEL_111:
          v7 += v47 >> 15;
LABEL_112:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_113:
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!(v54 & 1 | (v7 != 0)))
            goto LABEL_114;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v40 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 48;
LABEL_90:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
          goto LABEL_112;
        }
LABEL_136:

LABEL_137:
        v52 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_115:
        if ((v53 & 1) != 0)
LABEL_116:
          *(_WORD *)(a1 + 108) |= 1u;
        if (v56 || (v52 & 1) == 0)
        {
          *(_WORD *)(a1 + 108) |= 0x20u;
          *(_WORD *)(a1 + 108) |= 0x200u;
          *(_WORD *)(a1 + 108) |= 8u;
          *(_WORD *)(a1 + 108) |= 2u;
          *(_WORD *)(a1 + 108) |= 4u;
          *(_WORD *)(a1 + 108) |= 0x40u;
          *(_WORD *)(a1 + 108) |= 0x80u;
          *(_WORD *)(a1 + 108) |= 0x100u;
          *(_WORD *)(a1 + 108) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            v48 = *v20++;
            v49 = 32;
            switch(v48)
            {
              case 0:
                goto LABEL_130;
              case 1:
                goto LABEL_129;
              case 2:
                v49 = 512;
                goto LABEL_129;
              case 3:
                v49 = 8;
                goto LABEL_129;
              case 4:
                v49 = 2;
                goto LABEL_129;
              case 5:
                v49 = 4;
                goto LABEL_129;
              case 6:
                v49 = 64;
                goto LABEL_129;
              case 7:
                v49 = 128;
                goto LABEL_129;
              case 8:
                v49 = 256;
                goto LABEL_129;
              case 9:
                v49 = 16;
LABEL_129:
                *(_WORD *)(a1 + 108) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_130:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v56)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v53 & 1) == 0 || (*(_WORD *)(a1 + 108) & 1) != 0)
        {
LABEL_91:
          v46 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_115;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v52 = 0;
            goto LABEL_116;
          }
        }
        goto LABEL_113;
    }
  }
}

void sub_188E8E344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8E484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8E5C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8E70C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8E84C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8E990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8EAD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8EC18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8F734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPlaceFormattedStringCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOPlaceFormattedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPlaceFormattedStringReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPlaceFormattedStringReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPlaceFormattedStringReadAllFrom_initialTag;
  Specified = GEOPlaceFormattedStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPlaceFormattedStringCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188E8F97C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceFormattedStringReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPlaceFormattedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E8F9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E8FC40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPlaceFormattedStringIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0x400) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x200) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 88)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 8) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 2) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x80) == 0)
    goto LABEL_23;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 108);
LABEL_23:
  if ((v2 & 0x100) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x10) != 0)
    return (uint64_t)GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48));
  else
    return 0;
}

os_unfair_lock_s *GEOPlaceFormattedStringIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPlaceFormattedStringIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E901D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E906CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPointReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  id v31;
  void *v32;
  int *v33;
  _BOOL8 v34;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_40;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_42:
          v33 = &OBJC_IVAR___GEOPoint__offsetM;
LABEL_47:
          *(_DWORD *)(a1 + *v33) = v20;
          goto LABEL_48;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v31 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v32 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v31;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_48:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v25 = 0;
      v26 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v27 = *v4;
        v28 = *(_QWORD *)&v3[v27];
        v29 = v28 + 1;
        if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
          break;
        v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
        *(_QWORD *)&v3[v27] = v29;
        v20 |= (unint64_t)(v30 & 0x7F) << v25;
        if ((v30 & 0x80) == 0)
          goto LABEL_44;
        v25 += 7;
        v15 = v26++ >= 9;
        if (v15)
        {
          LODWORD(v20) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6])
        LODWORD(v20) = 0;
LABEL_46:
      LODWORD(v20) = -(v20 & 1) ^ ((int)v20 >> 1);
      v33 = &OBJC_IVAR___GEOPoint__elevationCm;
      goto LABEL_47;
    }
LABEL_49:
    v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_188E9111C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E9117C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPreferenceEntityReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingNetworkMuid;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingNetworkMuid;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingNetworkMuid;
LABEL_42:
          if (v3[*v6])
            v20 = 0;
LABEL_44:
          *(_QWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 32) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingStationMuid;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          v20 = 0;
          v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingStationMuid;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingStationMuid;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188E91DEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPreferenceEntityReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPreferenceEntityReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E91E4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPriceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v21 = objc_claimAutoreleasedReturnValue();
          v22 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v21;

        }
        else if ((v10 >> 3) == 1)
        {
          *(_BYTE *)(a1 + 28) |= 1u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v24 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v23;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_33;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_33:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_188E92978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPriceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPriceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E929D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOProblemDetailDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOProblemDetailDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOProblemDetail<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOProblemDetailDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  char v3;
  unsigned int v4;
  __CFString *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *((_BYTE *)a1 + 8);
  if ((v3 & 1) != 0)
  {
    v4 = *a1 - 1;
    if (v4 < 0x16 && ((0x3FFF9Fu >> v4) & 1) != 0)
    {
      v5 = off_1E1C08428[v4];
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), *a1);
      v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v2, "setObject:forKey:", v5, CFSTR("problemType"));

    v3 = *((_BYTE *)a1 + 8);
  }
  if ((v3 & 2) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", a1[1]);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v6, CFSTR("waypointIndex"));

  }
  return v2;
}

void _GEOProblemDetailFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  int v6;
  id v7;

  v3 = a1;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("problemType"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 1u;
    v5 = v4;
    if ((objc_msgSend(v5, "isEqualToString:", CFSTR("SEARCH_FAILED")) & 1) != 0)
    {
      v6 = 1;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("FAR_FROM_ROADS")) & 1) != 0)
    {
      v6 = 2;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("OUT_OF_COVERAGE")) & 1) != 0)
    {
      v6 = 3;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("NO_PEDESTRIANS")) & 1) != 0)
    {
      v6 = 4;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("ACROSS_WATER")) & 1) != 0)
    {
      v6 = 5;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("PATH_DECODING_FAILURE")) & 1) != 0)
    {
      v6 = 8;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("WALKING_TOO_FAR")) & 1) != 0)
    {
      v6 = 9;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("BLOCKED_ROADS")) & 1) != 0)
    {
      v6 = 10;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("VEHICLE_TYPE_AVOIDANCE_FAILED")) & 1) != 0)
    {
      v6 = 11;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("BLOCKED_TRANSIT")) & 1) != 0)
    {
      v6 = 12;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("NOT_REACHABLE")) & 1) != 0)
    {
      v6 = 13;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("EV_OUT_OF_COVERAGE")) & 1) != 0)
    {
      v6 = 14;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("EV_OUT_OF_RANGE")) & 1) != 0)
    {
      v6 = 15;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("EV_INVALID_REQUEST")) & 1) != 0)
    {
      v6 = 16;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LPR_DISABLED")) & 1) != 0)
    {
      v6 = 17;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("MAX_DISTANCE_EXCEEDED")) & 1) != 0)
    {
      v6 = 18;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("INSUFFICIENT_OFFLINE_DATA")) & 1) != 0)
    {
      v6 = 19;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("TRANSITION_FROM_DRIVING_DISABLED")) & 1) != 0)
    {
      v6 = 20;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("ANCHOR_LIMIT_EXCEEDED")) & 1) != 0)
    {
      v6 = 21;
    }
    else if (objc_msgSend(v5, "isEqualToString:", CFSTR("UNSUPPORTED_REQUEST")))
    {
      v6 = 22;
    }
    else
    {
      v6 = 1;
    }

  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_47;
    v6 = objc_msgSend(v4, "intValue");
  }
  *(_DWORD *)a2 = v6;
LABEL_47:

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("waypointIndex"));
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = objc_msgSend(v7, "intValue");
  }

}

BOOL GEOProblemDetailReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOProblemDetailReadAllFrom(a1, a2);
}

BOOL GEOProblemDetailReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  _DWORD *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (_DWORD *)(a1 + 4);
    v8 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v3;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v4))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        if (v10++ >= 9)
        {
          v11 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v11 = 0;
LABEL_14:
      if (v17 || (v11 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v11 >> 3) == 2)
        break;
      if ((v11 >> 3) == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 8) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
          {
            v27 = (_DWORD *)a1;
            goto LABEL_38;
          }
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            break;
          v19 += 7;
          v26 = v20++ > 8;
          if (v26)
          {
            LODWORD(v21) = 0;
            v27 = (_DWORD *)a1;
            goto LABEL_41;
          }
        }
        v27 = (_DWORD *)a1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_41:
        *v27 = v21;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v28 = 0;
    v29 = 0;
    v21 = 0;
    *(_BYTE *)(a1 + 8) |= 2u;
    while (1)
    {
      v30 = *v3;
      v31 = *(_QWORD *)(a2 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v31);
      *(_QWORD *)(a2 + v30) = v32;
      v21 |= (unint64_t)(v33 & 0x7F) << v28;
      if ((v33 & 0x80) == 0)
      {
        v27 = v7;
        goto LABEL_39;
      }
      v28 += 7;
      v26 = v29++ > 8;
      if (v26)
      {
        LODWORD(v21) = 0;
        v27 = v7;
        goto LABEL_41;
      }
    }
    v27 = v7;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t GEOProblemDetailWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 8);
  if ((v2 & 1) != 0)
  {
    result = PBDataWriterWriteInt32Field();
    v2 = *(_BYTE *)(v1 + 8);
  }
  if ((v2 & 2) != 0)
    return PBDataWriterWriteInt32Field();
  return result;
}

BOOL GEOProblemDetailEquals(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOProblemDetailHash()
{
  return PBHashBytes();
}

BOOL GEOProblemDetailIsValid(void *a1)
{
  _BOOL8 AllFrom;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = objc_msgSend(a1, "position");
  v7 = objc_msgSend(a1, "length");
  v5 = 0;
  v4 = 0;
  AllFrom = GEOProblemDetailReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_188E93830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORecentLocationHistoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOLatLngE7 *v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  int *v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char v85;
  uint64_t v86;
  __int16 v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  int v95;
  __int16 v96;
  void *v97;
  char v99;
  char v100;
  int v101;
  char v102;
  char v103;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 120)), (uint16x4_t)0xFFF8FFFBFFFAFFF6), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 120) >> 9) & 1)+ ((*(_WORD *)(a1 + 120) >> 7) & 1)+ ((*(_WORD *)(a1 + 120) >> 4) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v16 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v101 = 1;
        v21 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_159;
        v99 = v17;
        v102 = v18 | v17;
        v103 = (v20 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v100 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_157;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_157:
      v101 = 1;
      goto LABEL_158;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v103 & 1) == 0)
    {
      v37 = v20;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 120) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_178;
          v41 = objc_alloc_init(GEOLatLngE7);
          if (GEOLatLngE7ReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            v42 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v41;

            --v7;
            goto LABEL_141;
          }
          goto LABEL_177;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_178;
        v87 = *(_WORD *)(a1 + 120) << 9;
        goto LABEL_140;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 120) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v49 = *v19;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v31 = v47++ >= 9;
              if (v31)
              {
                v48 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v48 = 0;
LABEL_118:
        *(_QWORD *)(a1 + 56) = v48;
        goto LABEL_144;
      case 3:
        if (!v36 || (*(_WORD *)(a1 + 120) & 0x400) != 0)
          goto LABEL_113;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_178;
        v41 = objc_alloc_init(GEOLatLngE7);
        if (GEOLatLngE7ReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEORecentLocationHistory _addNoFlagsRelativeLocations:](a1, v41);

LABEL_141:
          v18 = v100;
          v6 = (int *)MEMORY[0x1E0D82BD8];
LABEL_142:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_143:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_144:
          if (!(v102 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_157;
          continue;
        }
LABEL_177:

LABEL_178:
        v101 = 0;
        v18 = v100;
LABEL_158:
        v21 = v99;
LABEL_159:
        if ((v21 & 1) != 0)
LABEL_160:
          *(_WORD *)(a1 + 120) |= 0x10u;
        if (v18 & 1 | ((v101 & 1) == 0))
        {
          *(_WORD *)(a1 + 120) |= 0x40u;
          *(_WORD *)(a1 + 120) |= 0x400u;
          *(_WORD *)(a1 + 120) |= 0x20u;
          *(_WORD *)(a1 + 120) |= 0x100u;
          *(_WORD *)(a1 + 120) |= 0x200u;
          *(_WORD *)(a1 + 120) |= 0x80u;
        }
        else if (v20)
        {
          while (1)
          {
            v95 = *v20++;
            v96 = 64;
            switch(v95)
            {
              case 0:
                goto LABEL_171;
              case 1:
                goto LABEL_170;
              case 3:
                v96 = 1024;
                goto LABEL_170;
              case 6:
                v96 = 32;
                goto LABEL_170;
              case 8:
                v96 = 256;
                goto LABEL_170;
              case 9:
                v96 = 512;
                goto LABEL_170;
              case 10:
                v96 = 128;
LABEL_170:
                *(_WORD *)(a1 + 120) |= v96;
                break;
              default:
                continue;
            }
          }
        }
LABEL_171:
        if (v101)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_175:
          v97 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_175;
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_WORD *)(a1 + 120) |= 8u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v56 = *v19;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v31 = v54++ >= 9;
              if (v31)
              {
                LODWORD(v55) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v55) = 0;
LABEL_122:
        v86 = 116;
        goto LABEL_131;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v60 = 0;
        v61 = 0;
        v55 = 0;
        *(_WORD *)(a1 + 120) |= 2u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v62 = *v19;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v55 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v31 = v61++ >= 9;
              if (v31)
              {
                LODWORD(v55) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v55) = 0;
LABEL_126:
        v86 = 108;
        goto LABEL_131;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 120) & 0x20) != 0)
          goto LABEL_113;
        if (v33 != 2)
        {
          v88 = 0;
          v89 = 0;
          v90 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v91 = *v19;
            v92 = *(_QWORD *)(v3 + v91);
            v93 = v92 + 1;
            if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v6))
              break;
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              v31 = v89++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_156;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_156:
          PBRepeatedInt32Add();
          v18 = v100;
          goto LABEL_142;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_178;
        v66 = *(_QWORD *)(v3 + *v19);
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v67 = (int *)MEMORY[0x1E0D82BC8];
          if (v66 >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v68 = 0;
          v69 = 0;
          v70 = 0;
          v71 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v72 = *v19;
            v73 = *(_QWORD *)(v3 + v72);
            v74 = v73 + 1;
            if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
              break;
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v71) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v70 |= (unint64_t)(v75 & 0x7F) << v68;
            if (v75 < 0)
            {
              v68 += 7;
              v31 = v69++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_94;
          }
          *(_BYTE *)(v3 + *v67) = 1;
LABEL_94:
          PBRepeatedInt32Add();
          v66 = *(_QWORD *)(v3 + *v19);
        }
        PBReaderRecallMark();
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v100;
        goto LABEL_143;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v76 = 0;
        v77 = 0;
        v55 = 0;
        *(_WORD *)(a1 + 120) |= 4u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v78 = *v19;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v55 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              v31 = v77++ >= 9;
              if (v31)
              {
                LODWORD(v55) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v55) = 0;
LABEL_130:
        v86 = 112;
LABEL_131:
        *(_DWORD *)(a1 + v86) = v55;
        goto LABEL_144;
      case 8:
        if (!v36)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 120) & 0x100) == 0)
        {
          PBReaderReadData();
          v82 = objc_claimAutoreleasedReturnValue();
          v83 = 72;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_178;
        v87 = *(_WORD *)(a1 + 120) << 7;
        goto LABEL_140;
      case 9:
        if (!v36)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 120) & 0x200) == 0)
        {
          PBReaderReadData();
          v82 = objc_claimAutoreleasedReturnValue();
          v83 = 80;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_178;
        v87 = *(_WORD *)(a1 + 120) << 6;
        goto LABEL_140;
      case 10:
        if (!v36)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 120) & 0x80) == 0)
        {
          PBReaderReadData();
          v82 = objc_claimAutoreleasedReturnValue();
          v83 = 64;
LABEL_112:
          v84 = *(void **)(a1 + v83);
          *(_QWORD *)(a1 + v83) = v82;

          v23 = (int *)MEMORY[0x1E0D82BB8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v100;
          --v7;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_144;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_178;
        v87 = *(_WORD *)(a1 + 120) << 8;
LABEL_140:
        v7 += v87 >> 15;
        goto LABEL_141;
      default:
        if ((v99 & 1) == 0 || (*(_WORD *)(a1 + 120) & 0x10) != 0)
        {
LABEL_113:
          v85 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v100;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v85 & 1) == 0)
          {
            v101 = 0;
            goto LABEL_158;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v18 = v100;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v101 = 0;
            goto LABEL_160;
          }
        }
        goto LABEL_144;
    }
  }
}

void sub_188E94608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E94A7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E94E38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E94F78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E950B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E95EE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORecentLocationHistoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 88);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEORecentLocationHistoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORecentLocationHistoryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORecentLocationHistoryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORecentLocationHistoryReadAllFrom_initialTag;
  Specified = GEORecentLocationHistoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORecentLocationHistoryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_188E96184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORecentLocationHistoryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORecentLocationHistoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E961E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORecentLocationHistoryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngE7IsValid(a1))
            goto LABEL_83;
          goto LABEL_22;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_83;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_69;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_83;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_69;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_83;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_69;
          }
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_83:
              PBReaderRecallMark();
              return 0;
            }
LABEL_72:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v43 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v44 = *v2;
                v45 = *(_QWORD *)&a1[v44];
                v46 = v45 + 1;
                if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
                  break;
                v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
                *(_QWORD *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  v13 = v43++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_72;
              }
              a1[*v4] = 1;
            }
LABEL_22:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_83;
            while (1)
            {
              v33 = *v2;
              v34 = *(_QWORD *)&a1[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                break;
              v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
              *(_QWORD *)&a1[v33] = v35;
              if (v36 < 0)
              {
                v37 = v15++;
                if (v37 <= 8)
                  continue;
              }
              goto LABEL_69;
            }
LABEL_62:
            a1[*v4] = 1;
          }
LABEL_69:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_81;
          break;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_83;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_69;
          }
        case 8u:
          if (v15 == 2)
            goto LABEL_68;
          goto LABEL_83;
        case 9u:
          if (v15 == 2)
            goto LABEL_68;
          goto LABEL_83;
        case 0xAu:
          if (v15 == 2)
            goto LABEL_68;
          goto LABEL_83;
        default:
LABEL_68:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_69;
          goto LABEL_83;
      }
    }
  }
LABEL_81:
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

void sub_188E96990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORecentLocationHistoryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = (*(_WORD *)(a1 + 120) & 0xFE0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_188E96FB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E97608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOFormattedString *v27;
  void *v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v28 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v27;

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188E97FEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORequestOptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E9804C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORequestOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEORequestOption *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v24 = *v6;
            v25 = *(_QWORD *)&v5[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v5[*v7])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
            *(_QWORD *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_36;
            v21 += 7;
            v17 = v22++ >= 9;
            if (v17)
            {
              LODWORD(v23) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v23) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEORequestOption);
          if (!GEORequestOptionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEORequestOptions addRequestOption:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_188E99098(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORequestOptionIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORestrictedZoneIdReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  GEOMapRegion *v40;
  void *v41;
  uint64_t v42;
  _BOOL8 v43;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 1u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_49;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6])
              v20 = 0;
LABEL_51:
            *(_QWORD *)(a1 + 24) = v20;
            goto LABEL_61;
          case 2u:
            v27 = 0;
            v28 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 40) |= 4u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v29) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v29) = 0;
LABEL_55:
            v42 = 36;
            goto LABEL_60;
          case 3u:
            v34 = 0;
            v35 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 40) |= 2u;
            while (2)
            {
              v36 = *v4;
              v37 = *(_QWORD *)&v3[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
                *(_QWORD *)&v3[v36] = v38;
                v29 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  v15 = v35++ >= 9;
                  if (v15)
                  {
                    LODWORD(v29) = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v29) = 0;
LABEL_59:
            v42 = 32;
LABEL_60:
            *(_DWORD *)(a1 + v42) = v29;
            goto LABEL_61;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v40 = objc_alloc_init(GEOMapRegion);
            if (!GEOMapRegionReadAllFrom((uint64_t)v40, v3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

LABEL_61:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_62;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_188E9A61C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictedZoneIdReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORestrictedZoneIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E9A67C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictedZoneIdIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_188E9B108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v55 = v18;
        v53 = v19;
        v54 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v50 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v55;
    if ((v54 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35)
        goto LABEL_56;
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_81;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_80;
        PBReaderRecallMark();
        v41 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v40;

        --v8;
      }
      goto LABEL_60;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_56;
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v50 = 0;
      v51 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
  {
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v50 = 0;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEORestrictionDetails _addNoFlagsMessageString:](a1, v40);

LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_80:

LABEL_81:
  v50 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_63:
  v51 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v52 & 1) == 0)
    goto LABEL_65;
LABEL_64:
  *(_BYTE *)(a1 + v51[638]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[638]) |= 4u;
    *(_BYTE *)(a1 + v51[638]) |= 2u;
    goto LABEL_74;
  }
  if (v20)
  {
    while (1)
    {
      v47 = *v20++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
LABEL_70:
        *(_BYTE *)(a1 + v51[638]) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188E9B770(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E9C108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORestrictionDetailsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEORestrictionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORestrictionDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORestrictionDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORestrictionDetailsReadAllFrom_initialTag;
  Specified = GEORestrictionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORestrictionDetailsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188E9C3AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORestrictionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E9C40C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E9C80C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORestrictionDetailsIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEORestrictionDetailsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORestrictionDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E9CC1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E9CF18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E9D24C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_77;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_77:
      v52 = 1;
      goto LABEL_78;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 3:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_95;
          v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = 48;
            goto LABEL_60;
          }
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v47 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 4:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v47 = 16 * *(_BYTE *)(a1 + 68);
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        v41 = 40;
        goto LABEL_60;
      case 5:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v47 = *(_BYTE *)(a1 + 68) << 6;
LABEL_74:
          v7 += v47 >> 7;
LABEL_75:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_77;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v40 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 24;
LABEL_60:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
          goto LABEL_75;
        }
LABEL_94:

LABEL_95:
        v52 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
        v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v54 & 1) != 0)
LABEL_79:
          *(_BYTE *)(a1 + v53[645]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[645]) |= 0x10u;
          *(_BYTE *)(a1 + v53[645]) |= 8u;
          *(_BYTE *)(a1 + v53[645]) |= 2u;
          *(_BYTE *)(a1 + v53[645]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            v48 = *v20++;
            v49 = 16;
            switch(v48)
            {
              case 0:
                goto LABEL_88;
              case 3:
                goto LABEL_87;
              case 4:
                v49 = 8;
                goto LABEL_87;
              case 5:
                v49 = 2;
                goto LABEL_87;
              case 6:
                v49 = 4;
LABEL_87:
                *(_BYTE *)(a1 + v53[645]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if (!v35 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_66;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v40 = objc_alloc_init(GEORestrictionDetails);
        if (!GEORestrictionDetailsReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        -[GEORestrictionInfo _addNoFlagsRestrictionDetails:](a1, v40);

        goto LABEL_75;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_66:
          v46 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_78;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_79;
          }
        }
        goto LABEL_76;
    }
  }
}

void sub_188E9DA44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E9DB84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E9DCC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E9E824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORestrictionInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEORestrictionInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORestrictionInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORestrictionInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORestrictionInfoReadAllFrom_initialTag;
  Specified = GEORestrictionInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORestrictionInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188E9EAE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORestrictionInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188E9EB44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 3u:
        case 4u:
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
            goto LABEL_28;
          goto LABEL_31;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictionDetailsIsValid(a1))
            goto LABEL_31;
LABEL_28:
          PBReaderRecallMark();
          goto LABEL_29;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_31:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_30;
          break;
      }
    }
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188E9EFC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORestrictionInfoIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 8) == 0)
    goto LABEL_8;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 68);
LABEL_8:
  if ((v2 & 2) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORestrictionInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORestrictionInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188E9F47C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188E9F834(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionZoneInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEORestrictedZoneId *v18;
  id v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _BOOL8 v41;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v18 = objc_alloc_init(GEORestrictedZoneId);
            if (GEORestrictedZoneIdReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              objc_msgSend((id)a1, "addRestrictedZoneIds:", v18, 0, 0);

              continue;
            }

            goto LABEL_64;
          case 2u:
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v24 = *v4;
              v25 = *(_QWORD *)&v3[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
                *(_QWORD *)&v3[v24] = v26;
                v23 |= (unint64_t)(v27 & 0x7F) << v21;
                if (v27 < 0)
                {
                  v21 += 7;
                  v15 = v22++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_51:
            v40 = 28;
            goto LABEL_60;
          case 3u:
            v28 = 0;
            v29 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v23 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_55:
            v40 = 24;
            goto LABEL_60;
          case 4u:
            v34 = 0;
            v35 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v20 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v19;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            continue;
        }
        while (1)
        {
          v36 = *v4;
          v37 = *(_QWORD *)&v3[v36];
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
            break;
          v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
          *(_QWORD *)&v3[v36] = v38;
          v23 |= (unint64_t)(v39 & 0x7F) << v34;
          if ((v39 & 0x80) == 0)
            goto LABEL_57;
          v34 += 7;
          v15 = v35++ >= 9;
          if (v15)
          {
            LODWORD(v23) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          LODWORD(v23) = 0;
LABEL_59:
        v40 = 32;
LABEL_60:
        *(_DWORD *)(a1 + v40) = v23;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v41 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    v41 = 0;
  }
  objc_sync_exit(v3);

  return v41;
}

void sub_188EA103C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionZoneInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORestrictionZoneInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EA109C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionZoneInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictedZoneIdIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORoadComplexityReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  GEOAttribute *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  uint64_t v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_53;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_53;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 == 2)
        {
          v27 = 0;
          v28 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v22 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
              goto LABEL_48;
            v27 += 7;
            v15 = v28++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_50:
          v35 = 24;
LABEL_51:
          *(_DWORD *)(a1 + v35) = v22;
          goto LABEL_52;
        }
        if ((_DWORD)v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v19 = objc_alloc_init(GEOAttribute);
          if (!GEOAttributeReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addAttribute:", v19, 0, 0);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v34 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v33;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
LABEL_52:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_53;
      }
      v20 = 0;
      v21 = 0;
      v22 = 0;
      *(_BYTE *)(a1 + 32) |= 2u;
      while (1)
      {
        v23 = *v4;
        v24 = *(_QWORD *)&v3[v23];
        v25 = v24 + 1;
        if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
          break;
        v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
        *(_QWORD *)&v3[v23] = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0)
          goto LABEL_44;
        v20 += 7;
        v15 = v21++ >= 9;
        if (v15)
        {
          LODWORD(v22) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6])
        LODWORD(v22) = 0;
LABEL_46:
      v35 = 28;
      goto LABEL_51;
    }
LABEL_53:
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_188EA29F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadComplexityReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORoadComplexityReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EA2A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadComplexityIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_44;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_46;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_43;
        }
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAttributeIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEORoadDescriptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOFormattedString *v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v25 = *v6;
            v26 = *(_QWORD *)&v5[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
            *(_QWORD *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0)
              goto LABEL_36;
            v22 += 7;
            v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v24) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_188EA3F04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORoadDescriptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EA3F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadDescriptionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188EA49F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteReadSpecified(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int32x2_t v10;
  unint64_t v11;
  int32x2_t v12;
  __int128 v13;
  int32x2_t v14;
  int32x2_t v15;
  int32x2_t v16;
  int32x2_t v17;
  int32x2_t v18;
  int32x2_t v19;
  int32x2_t v20;
  int32x2_t v21;
  int32x2_t v22;
  int32x2_t v23;
  int32x2_t v24;
  int32x2_t v25;
  int32x2_t v26;
  int32x2_t v27;
  int32x2_t v28;
  int32x2_t v29;
  int32x2_t v30;
  int32x2_t v31;
  int32x2_t v32;
  int32x2_t v33;
  _BYTE *v34;
  uint64_t v35;
  int32x2_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  uint32x4_t v41;
  int8x16_t v42;
  int8x16_t v43;
  char v44;
  _BYTE *v45;
  int *v46;
  int8x8_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  char v53;
  char v54;
  int *v55;
  int *v56;
  int *v57;
  int *v58;
  char v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  BOOL v66;
  int v67;
  int v68;
  unint64_t v70;
  BOOL v71;
  int *v72;
  int v73;
  int v74;
  BOOL v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  GEOStep *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  id v110;
  void *v111;
  int v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  int *v125;
  int *v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  int *v135;
  int *v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  int *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  char v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  char v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  char v169;
  unsigned int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  char v183;
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  int *v190;
  int *v191;
  char v192;
  unsigned int v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  int *v200;
  int *v201;
  char v202;
  unsigned int v203;
  uint64_t v204;
  int *v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  uint64_t v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  char v216;
  char v217;
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  char v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  char v234;
  void *v235;
  int *v236;
  int *v237;
  char v238;
  unsigned int v239;
  uint64_t v240;
  int *v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  char v245;
  int *v246;
  int *v247;
  char v248;
  unsigned int v249;
  uint64_t v250;
  int *v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  char v255;
  char v256;
  char v257;
  uint64_t v258;
  BOOL v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  unsigned int v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  char v268;
  char v269;
  unsigned int v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  char v275;
  char v276;
  unsigned int v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  char v282;
  char v283;
  unsigned int v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  char v289;
  char v290;
  unsigned int v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  char v296;
  char v297;
  unsigned int v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  char v303;
  _BOOL8 v304;
  char v305;
  int v306;
  char v307;
  unint64_t v308;
  char v309;
  void *v310;
  int32x2_t v312;
  int32x2_t v313;
  int v314;
  int32x2_t v315;
  char v316;
  int32x2_t v317;
  char v318;
  char v319;

  if (!a2)
    return 0;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 496));
  *(_QWORD *)&a2[*MEMORY[0x1E0D82BD8]] = *(unsigned int *)(a1 + 492);
  objc_msgSend(a2, "seekToOffset:", *(unsigned int *)(a1 + 488));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (int32x2_t)*(unsigned __int8 *)(a1 + 572);
  v11 = *(_QWORD *)(a1 + 564);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v12 = (int32x2_t)(v13 >> 49);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v14 = (int32x2_t)(v13 >> 58);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v15 = (int32x2_t)(v13 >> 46);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v315 = (int32x2_t)(v13 >> 59);
  v317 = v15;
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v16 = (int32x2_t)(v13 >> 50);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v312 = (int32x2_t)(v13 >> 54);
  v313 = v16;
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v17 = (int32x2_t)(v13 >> 51);
  v18 = v12;
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v19 = (int32x2_t)(v13 >> 61);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v20 = (int32x2_t)(v13 >> 60);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v21 = (int32x2_t)(v13 >> 56);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v22 = (int32x2_t)(v13 >> 34);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v23 = (int32x2_t)(v13 >> 47);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v24 = (int32x2_t)(v13 >> 33);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v25 = (int32x2_t)(v13 >> 63);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v26 = (int32x2_t)(v13 >> 57);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v27 = (int32x2_t)(v13 >> 40);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v28 = (int32x2_t)(v13 >> 36);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v29 = (int32x2_t)(v13 >> 39);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v30 = (int32x2_t)(v13 >> 48);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v31 = (int32x2_t)(v13 >> 35);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v32 = (int32x2_t)(v13 >> 43);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v33 = (int32x2_t)(v13 >> 62);
  v34 = a2;
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v35 = v13 >> 32;
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  v36 = (int32x2_t)(v13 >> 52);
  *((int32x2_t *)&v13 + 1) = v10;
  *(_QWORD *)&v13 = v11;
  *(int32x2_t *)v37.i8 = vzip1_s32(v28, v27);
  v37.u64[1] = (unint64_t)vzip1_s32(v30, v29);
  v38.i64[0] = 0x100000001;
  v38.i64[1] = 0x100000001;
  *(int32x2_t *)v39.i8 = vzip1_s32(v24, v23);
  v39.u64[1] = (unint64_t)vzip1_s32(v26, v25);
  v30.i32[0] = ((v11 >> 44) & 1)
             + ((v11 >> 28) & 1)
             + ((v11 >> 41) & 1)
             + vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8(v37, v38), (int32x4_t)vandq_s8(v39, v38)));
  *(int32x2_t *)v40.i8 = vzip1_s32(v10, v18);
  v40.u64[1] = (unint64_t)vzip1_s32(v317, v14);
  v41 = (uint32x4_t)vdupq_n_s32(v11);
  *(int32x2_t *)v42.i8 = vzip1_s32(v313, v315);
  v42.u64[1] = (unint64_t)vzip1_s32(v17, v312);
  *(int32x2_t *)v43.i8 = vzip1_s32(v20, v19);
  v43.u64[1] = (unint64_t)vzip1_s32(v22, v21);
  v44 = 0;
  v39.i64[0] = v35;
  v45 = v34;
  v46 = (int *)MEMORY[0x1E0D82BD8];
  v40.i32[0] = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v43, v38), (int32x4_t)vandq_s8(v42, v38)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v41, (uint32x4_t)xmmword_189CD1D10), v38), (int32x4_t)vandq_s8(v40, v38))));
  v47.i32[0] = v11 >> 19;
  v47.i32[1] = (v11 >> 55) | (v10.i32[0] << 9);
  v43.i32[0] = v11 >> 18;
  v43.i32[1] = (v11 >> 37) | (v10.i32[0] << 27);
  v40.i32[1] = (v11 >> 21) & 1;
  *(int32x2_t *)v40.i8 = vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vzip1_s32((int32x2_t)(v13 >> 42), v36), (int8x8_t)0x100000001), (int32x2_t)vand_s8(v47, (int8x8_t)0x100000001)), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v41.i8, (uint32x2_t)0xFFFFFFEAFFFFFFECLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vzip1_s32(*(int32x2_t *)v39.i8, v33), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vzip1_s32(v32, v31), (int8x8_t)0x100000001), (int32x2_t)(*(_QWORD *)&vshl_u32(
                                                           *(uint32x2_t *)v41.i8,
                                                           (uint32x2_t)0xFFFFFFE3FFFFFFE6) & 0xFFFFFFC1FFFFFFC1)))),
                           vadd_s32(*(int32x2_t *)v40.i8, (int32x2_t)vand_s8(*(int8x8_t *)v43.i8, (int8x8_t)0x100000001)));
  v48 = vadd_s32(*(int32x2_t *)v40.i8, vdup_lane_s32(*(int32x2_t *)v40.i8, 1)).u32[0]
      + ((v11 >> 38) & 1)
      + ((v11 >> 53) & 1)
      + ((v11 >> 25) & 1)
      + ((v11 >> 45) & 1)
      + v30.i32[0]
      + (v11 >> 31);
  while (2)
  {
    v49 = 1;
    v50 = 1;
    v51 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v48;
        goto LABEL_8;
      case -3:
        v44 = 1;
        goto LABEL_7;
      case -2:
        v50 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v52 = v48 > 0x23;
        v53 = v52 & ~(_BYTE)v9 | v7;
        v54 = v52 | v9;
        v319 = v44;
        v55 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v52 | v9) | v44) & 1) != 0)
          v56 = 0;
        else
          v56 = a3;
        v314 = 1;
        v57 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)&v34[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&v34[*MEMORY[0x1E0D82BD8]])
          goto LABEL_668;
        v316 = v54 | v53;
        v58 = (int *)MEMORY[0x1E0D82BB8];
        v318 = v52 & ~(_BYTE)v9 | v7;
        break;
      default:
        ++v48;
LABEL_7:
        v49 = v7;
LABEL_8:
        v50 = v8;
        v51 = v9;
LABEL_10:
        ++v6;
        v7 = v49;
        v8 = v50;
        v9 = v51;
        continue;
    }
    break;
  }
  while (2)
  {
    if (v45[*v57])
      goto LABEL_660;
    v59 = 0;
    v60 = 0;
    v61 = 0;
    while (1)
    {
      v62 = *v55;
      v63 = *(_QWORD *)&v45[v62];
      v64 = v63 + 1;
      if (v63 == -1 || v64 > *(_QWORD *)&v45[*v46])
        break;
      v65 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v63);
      *(_QWORD *)&v45[v62] = v64;
      v61 |= (unint64_t)(v65 & 0x7F) << v59;
      if ((v65 & 0x80) == 0)
        goto LABEL_25;
      v59 += 7;
      v66 = v60++ >= 9;
      if (v66)
      {
        v61 = 0;
        v67 = v45[*v57];
        goto LABEL_27;
      }
    }
    v45[*v57] = 1;
LABEL_25:
    v67 = v45[*v57];
    if (v45[*v57])
      v61 = 0;
LABEL_27:
    v68 = v61 & 7;
    if (v67 || v68 == 4)
    {
LABEL_660:
      v314 = 1;
      if ((v53 & 1) != 0)
        goto LABEL_669;
      goto LABEL_670;
    }
    v70 = v61 >> 3;
    v71 = v54;
    if (!((v56 == 0) | v54 & 1))
    {
      v72 = v56;
      do
      {
        v74 = *v72++;
        v73 = v74;
        v71 = v74 != 0;
        if (v74)
          v75 = v73 == (_DWORD)v70;
        else
          v75 = 1;
      }
      while (!v75);
    }
    switch((int)v70)
    {
      case 1:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v76 = 0;
        v77 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x1000uLL;
        while (1)
        {
          v79 = *v55;
          v80 = *(_QWORD *)&v45[v79];
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)&v45[*v46])
            break;
          v82 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v80);
          *(_QWORD *)&v45[v79] = v81;
          v78 |= (unint64_t)(v82 & 0x7F) << v76;
          if ((v82 & 0x80) == 0)
            goto LABEL_492;
          v76 += 7;
          v66 = v77++ >= 9;
          if (v66)
          {
            LODWORD(v78) = 0;
            goto LABEL_494;
          }
        }
        v45[*v57] = 1;
LABEL_492:
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_494:
        v258 = 548;
        goto LABEL_564;
      case 2:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x400000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOStep);
        if (!GEOStepReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsStep:](a1, v83);
        goto LABEL_444;
      case 3:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x20000000000) == 0)
        {
          PBReaderReadString();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 296;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 22) >> 56;
        goto LABEL_607;
      case 4:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x400000000000) == 0)
        {
          PBReaderReadString();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 336;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 17) >> 56;
        goto LABEL_607;
      case 5:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v86 = 0;
        v87 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 8uLL;
        while (2)
        {
          v88 = *v55;
          v89 = *(_QWORD *)&v45[v88];
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v89);
            *(_QWORD *)&v45[v88] = v90;
            v78 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v66 = v87++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_498;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_498:
        v258 = 512;
        goto LABEL_564;
      case 6:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v92 = 0;
        v93 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x40uLL;
        while (2)
        {
          v94 = *v55;
          v95 = *(_QWORD *)&v45[v94];
          v96 = v95 + 1;
          if (v95 == -1 || v96 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v95);
            *(_QWORD *)&v45[v94] = v96;
            v78 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              v66 = v93++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_502;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_502:
        v258 = 524;
        goto LABEL_564;
      case 7:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x2000000000000) == 0)
        {
          PBReaderReadData();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 360;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 14) >> 56;
        goto LABEL_607;
      case 8:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v98 = 0;
        v99 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x200uLL;
        while (2)
        {
          v100 = *v55;
          v101 = *(_QWORD *)&v45[v100];
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v101);
            *(_QWORD *)&v45[v100] = v102;
            v78 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              v66 = v99++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_506;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_506:
        v258 = 536;
        goto LABEL_564;
      case 9:
        if (!v71 || (*(_BYTE *)(a1 + 572) & 1) != 0)
          goto LABEL_486;
        PBReaderReadData();
        v83 = (GEOStep *)objc_claimAutoreleasedReturnValue();
        if (v83)
          -[GEORoute _addNoFlagsZilchPoints:](a1, v83);
        goto LABEL_444;
      case 10:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v104 = 0;
        v105 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x10uLL;
        while (2)
        {
          v106 = *v55;
          v107 = *(_QWORD *)&v45[v106];
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v107);
            *(_QWORD *)&v45[v106] = v108;
            v78 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              v66 = v105++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_510;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_510:
        v258 = 516;
        goto LABEL_564;
      case 16:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x40000000) == 0)
        {
          PBReaderReadData();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 208;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 33) >> 56;
        goto LABEL_607;
      case 17:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v113 = 0;
        v114 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 4uLL;
        while (2)
        {
          v115 = *v55;
          v116 = *(_QWORD *)&v45[v115];
          v117 = v116 + 1;
          if (v116 == -1 || v117 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v118 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v116);
            *(_QWORD *)&v45[v115] = v117;
            v78 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              v66 = v114++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_514;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_514:
        v258 = 508;
        goto LABEL_564;
      case 18:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x8000000) == 0)
        {
          PBReaderReadData();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 184;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 36) >> 56;
        goto LABEL_607;
      case 19:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v119 = 0;
        v120 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 1uLL;
        while (2)
        {
          v121 = *v55;
          v122 = *(_QWORD *)&v45[v121];
          v123 = v122 + 1;
          if (v122 == -1 || v123 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v124 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v122);
            *(_QWORD *)&v45[v121] = v123;
            v78 |= (unint64_t)(v124 & 0x7F) << v119;
            if (v124 < 0)
            {
              v119 += 7;
              v66 = v120++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_518;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_518:
        v258 = 500;
        goto LABEL_564;
      case 20:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x10000000) != 0)
          goto LABEL_486;
        PBReaderReadData();
        v83 = (GEOStep *)objc_claimAutoreleasedReturnValue();
        if (v83)
          -[GEORoute _addNoFlagsBasicPoints:](a1, v83);
        goto LABEL_444;
      case 21:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x2000000) != 0)
          goto LABEL_486;
        PBReaderReadString();
        v83 = (GEOStep *)objc_claimAutoreleasedReturnValue();
        if (v83)
          -[GEORoute _addNoFlagsAdvisoryNotice:](a1, v83);
        goto LABEL_444;
      case 22:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x1000000) != 0)
          goto LABEL_489;
        if (v68 != 2)
        {
          v262 = 0;
          v263 = 0;
          v264 = 0;
          while (1)
          {
            v265 = *v55;
            v266 = *(_QWORD *)&v45[v265];
            v267 = v266 + 1;
            if (v266 == -1 || v267 > *(_QWORD *)&v45[*v46])
              goto LABEL_655;
            v268 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v266);
            *(_QWORD *)&v45[v265] = v267;
            v264 |= (unint64_t)(v268 & 0x7F) << v262;
            if (v268 < 0)
            {
              v262 += 7;
              v66 = v263++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_667;
        while (1)
        {
          v125 = (int *)MEMORY[0x1E0D82BD8];
          v126 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)&v45[*v55] >= *(_QWORD *)&v45[*MEMORY[0x1E0D82BD8]] || v45[*MEMORY[0x1E0D82BC8]])
            goto LABEL_488;
          v127 = 0;
          v128 = 0;
          v129 = 0;
          v130 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v131 = *v55;
            v132 = *(_QWORD *)&v45[v131];
            v133 = v132 + 1;
            if (v132 == -1 || v133 > *(_QWORD *)&v45[*v125])
              break;
            v134 = *(_BYTE *)(*(_QWORD *)&v45[*v130] + v132);
            *(_QWORD *)&v45[v131] = v133;
            v129 |= (unint64_t)(v134 & 0x7F) << v127;
            if (v134 < 0)
            {
              v127 += 7;
              v66 = v128++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_147;
          }
          v45[*v126] = 1;
LABEL_147:
          PBRepeatedUInt32Add();
        }
      case 23:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x800000) != 0)
          goto LABEL_489;
        if (v68 != 2)
        {
          v269 = 0;
          v270 = 0;
          v271 = 0;
          while (1)
          {
            v272 = *v55;
            v273 = *(_QWORD *)&v45[v272];
            v274 = v273 + 1;
            if (v273 == -1 || v274 > *(_QWORD *)&v45[*v46])
              goto LABEL_655;
            v275 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v273);
            *(_QWORD *)&v45[v272] = v274;
            v271 |= (unint64_t)(v275 & 0x7F) << v269;
            if (v275 < 0)
            {
              v269 += 7;
              v66 = v270++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_667;
        while (1)
        {
          v135 = (int *)MEMORY[0x1E0D82BD8];
          v136 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)&v45[*v55] >= *(_QWORD *)&v45[*MEMORY[0x1E0D82BD8]] || v45[*MEMORY[0x1E0D82BC8]])
            goto LABEL_488;
          v137 = 0;
          v138 = 0;
          v139 = 0;
          v140 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v141 = *v55;
            v142 = *(_QWORD *)&v45[v141];
            v143 = v142 + 1;
            if (v142 == -1 || v143 > *(_QWORD *)&v45[*v135])
              break;
            v144 = *(_BYTE *)(*(_QWORD *)&v45[*v140] + v142);
            *(_QWORD *)&v45[v141] = v143;
            v139 |= (unint64_t)(v144 & 0x7F) << v137;
            if (v144 < 0)
            {
              v137 += 7;
              v66 = v138++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_162;
          }
          v45[*v136] = 1;
LABEL_162:
          PBRepeatedUInt32Add();
        }
      case 25:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x4000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEORouteName);
        if (!GEORouteNameReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteName:](a1, v83);
        goto LABEL_444;
      case 26:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v145 = 0;
        v146 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x80uLL;
        while (2)
        {
          v147 = *v55;
          v148 = *(_QWORD *)&v45[v147];
          v149 = v148 + 1;
          if (v148 == -1 || v149 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v150 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v148);
            *(_QWORD *)&v45[v147] = v149;
            v78 |= (unint64_t)(v150 & 0x7F) << v145;
            if (v150 < 0)
            {
              v145 += 7;
              v66 = v146++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_522;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_522:
        v258 = 528;
        goto LABEL_564;
      case 28:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v151 = 0;
        v152 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x2000uLL;
        while (2)
        {
          v153 = *v55;
          v154 = *(_QWORD *)&v45[v153];
          v155 = v154 + 1;
          if (v154 == -1 || v155 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v156 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v154);
            *(_QWORD *)&v45[v153] = v155;
            v78 |= (unint64_t)(v156 & 0x7F) << v151;
            if (v156 < 0)
            {
              v151 += 7;
              v66 = v152++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_526;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_526:
        v258 = 552;
        goto LABEL_564;
      case 29:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v157 = 0;
        v158 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x4000uLL;
        while (2)
        {
          v159 = *v55;
          v160 = *(_QWORD *)&v45[v159];
          v161 = v160 + 1;
          if (v160 == -1 || v161 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v162 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v160);
            *(_QWORD *)&v45[v159] = v161;
            v78 |= (unint64_t)(v162 & 0x7F) << v157;
            if (v162 < 0)
            {
              v157 += 7;
              v66 = v158++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_530;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_530:
        v258 = 556;
        goto LABEL_564;
      case 30:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v163 = 0;
        v164 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x400uLL;
        while (2)
        {
          v165 = *v55;
          v166 = *(_QWORD *)&v45[v165];
          v167 = v166 + 1;
          if (v166 == -1 || v167 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v168 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v166);
            *(_QWORD *)&v45[v165] = v167;
            v78 |= (unint64_t)(v168 & 0x7F) << v163;
            if (v168 < 0)
            {
              v163 += 7;
              v66 = v164++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_534;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_534:
        v258 = 540;
        goto LABEL_564;
      case 31:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v169 = 0;
        v170 = 0;
        v171 = 0;
        *(_QWORD *)(a1 + 564) |= 0x10000uLL;
        while (2)
        {
          v172 = *v55;
          v173 = *(_QWORD *)&v45[v172];
          v174 = v173 + 1;
          if (v173 == -1 || v174 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v175 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v173);
            *(_QWORD *)&v45[v172] = v174;
            v171 |= (unint64_t)(v175 & 0x7F) << v169;
            if (v175 < 0)
            {
              v169 += 7;
              v66 = v170++ >= 9;
              if (v66)
              {
                v171 = 0;
                goto LABEL_538;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          v171 = 0;
LABEL_538:
        v259 = v171 != 0;
        v260 = 561;
        goto LABEL_547;
      case 32:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v176 = 0;
        v177 = 0;
        v178 = 0;
        *(_QWORD *)(a1 + 564) |= 0x8000uLL;
        while (2)
        {
          v179 = *v55;
          v180 = *(_QWORD *)&v45[v179];
          v181 = v180 + 1;
          if (v180 == -1 || v181 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v182 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v180);
            *(_QWORD *)&v45[v179] = v181;
            v178 |= (unint64_t)(v182 & 0x7F) << v176;
            if (v182 < 0)
            {
              v176 += 7;
              v66 = v177++ >= 9;
              if (v66)
              {
                v178 = 0;
                goto LABEL_542;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          v178 = 0;
LABEL_542:
        v259 = v178 != 0;
        v260 = 560;
        goto LABEL_547;
      case 33:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v183 = 0;
        v184 = 0;
        v185 = 0;
        *(_QWORD *)(a1 + 564) |= 0x20000uLL;
        while (2)
        {
          v186 = *v55;
          v187 = *(_QWORD *)&v45[v186];
          v188 = v187 + 1;
          if (v187 == -1 || v188 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v189 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v187);
            *(_QWORD *)&v45[v186] = v188;
            v185 |= (unint64_t)(v189 & 0x7F) << v183;
            if (v189 < 0)
            {
              v183 += 7;
              v66 = v184++ >= 9;
              if (v66)
              {
                v185 = 0;
                goto LABEL_546;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          v185 = 0;
LABEL_546:
        v259 = v185 != 0;
        v260 = 562;
LABEL_547:
        *(_BYTE *)(a1 + v260) = v259;
        goto LABEL_610;
      case 34:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x800000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOEnrouteNotice);
        if (!GEOEnrouteNoticeReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsEnrouteNotice:](a1, v83);
        goto LABEL_444;
      case 50:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x4000000000000000) == 0)
        {
          PBReaderReadData();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 464;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (2 * *(_QWORD *)(a1 + 564)) >> 56;
        goto LABEL_607;
      case 51:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x400000) != 0)
          goto LABEL_489;
        if (v68 != 2)
        {
          v276 = 0;
          v277 = 0;
          v278 = 0;
          while (1)
          {
            v279 = *v55;
            v280 = *(_QWORD *)&v45[v279];
            v281 = v280 + 1;
            if (v280 == -1 || v281 > *(_QWORD *)&v45[*v46])
              goto LABEL_655;
            v282 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v280);
            *(_QWORD *)&v45[v279] = v281;
            v278 |= (unint64_t)(v282 & 0x7F) << v276;
            if (v282 < 0)
            {
              v276 += 7;
              v66 = v277++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_667;
        while (1)
        {
          v190 = (int *)MEMORY[0x1E0D82BD8];
          v191 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)&v45[*v55] >= *(_QWORD *)&v45[*MEMORY[0x1E0D82BD8]] || v45[*MEMORY[0x1E0D82BC8]])
            goto LABEL_488;
          v192 = 0;
          v193 = 0;
          v194 = 0;
          v195 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v196 = *v55;
            v197 = *(_QWORD *)&v45[v196];
            v198 = v197 + 1;
            if (v197 == -1 || v198 > *(_QWORD *)&v45[*v190])
              break;
            v199 = *(_BYTE *)(*(_QWORD *)&v45[*v195] + v197);
            *(_QWORD *)&v45[v196] = v198;
            v194 |= (unint64_t)(v199 & 0x7F) << v192;
            if (v199 < 0)
            {
              v192 += 7;
              v66 = v193++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_246;
          }
          v45[*v191] = 1;
LABEL_246:
          PBRepeatedUInt32Add();
        }
      case 52:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x200000) != 0)
          goto LABEL_489;
        if (v68 != 2)
        {
          v283 = 0;
          v284 = 0;
          v285 = 0;
          while (1)
          {
            v286 = *v55;
            v287 = *(_QWORD *)&v45[v286];
            v288 = v287 + 1;
            if (v287 == -1 || v288 > *(_QWORD *)&v45[*v46])
              goto LABEL_655;
            v289 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v287);
            *(_QWORD *)&v45[v286] = v288;
            v285 |= (unint64_t)(v289 & 0x7F) << v283;
            if (v289 < 0)
            {
              v283 += 7;
              v66 = v284++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_667;
        while (1)
        {
          v200 = (int *)MEMORY[0x1E0D82BD8];
          v201 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)&v45[*v55] >= *(_QWORD *)&v45[*MEMORY[0x1E0D82BD8]] || v45[*MEMORY[0x1E0D82BC8]])
            goto LABEL_488;
          v202 = 0;
          v203 = 0;
          v204 = 0;
          v205 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v206 = *v55;
            v207 = *(_QWORD *)&v45[v206];
            v208 = v207 + 1;
            if (v207 == -1 || v208 > *(_QWORD *)&v45[*v200])
              break;
            v209 = *(_BYTE *)(*(_QWORD *)&v45[*v205] + v207);
            *(_QWORD *)&v45[v206] = v208;
            v204 |= (unint64_t)(v209 & 0x7F) << v202;
            if (v209 < 0)
            {
              v202 += 7;
              v66 = v203++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_261;
          }
          v45[*v201] = 1;
LABEL_261:
          PBRepeatedUInt32Add();
        }
      case 53:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x80000000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = *(char *)(a1 + 570);
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEORouteInformation);
        if (!GEORouteInformationReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 408;
        goto LABEL_460;
      case 54:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x10000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteDescription:](a1, v83);
        goto LABEL_444;
      case 55:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x100000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsStartingRouteInstruction:](a1, v83);
        goto LABEL_444;
      case 56:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x400000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsEndingRouteInstruction:](a1, v83);
        goto LABEL_444;
      case 57:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x2000000000000000) == 0)
        {
          PBReaderReadString();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 456;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (4 * *(_QWORD *)(a1 + 564)) >> 56;
        goto LABEL_607;
      case 58:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x1000000000000000) == 0)
        {
          PBReaderReadString();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 448;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (8 * *(_QWORD *)(a1 + 564)) >> 56;
        goto LABEL_607;
      case 59:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x4000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 37) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOAlertNonRecommendedRouteText);
        if (!GEOAlertNonRecommendedRouteTextReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 176;
        goto LABEL_460;
      case 60:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x1000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsGuidanceEvent:](a1, v83);
        goto LABEL_444;
      case 61:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x10000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 23) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOLaunchAndGoCardText);
        if (!GEOLaunchAndGoCardTextReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 288;
        goto LABEL_460;
      case 62:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x1000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEORoadComplexity);
        if (!GEORoadComplexityReadAllFrom((uint64_t)v83, v45))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRoadComplexity:](a1, v83);
        goto LABEL_444;
      case 63:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v211 = 0;
        v212 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 2uLL;
        while (2)
        {
          v213 = *v55;
          v214 = *(_QWORD *)&v45[v213];
          v215 = v214 + 1;
          if (v214 == -1 || v215 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v216 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v214);
            *(_QWORD *)&v45[v213] = v215;
            v78 |= (unint64_t)(v216 & 0x7F) << v211;
            if (v216 < 0)
            {
              v211 += 7;
              v66 = v212++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_551;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_551:
        v258 = 504;
        goto LABEL_564;
      case 64:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x8000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOLaneWidth);
        if (!GEOLaneWidthReadAllFrom((uint64_t)v83, v45))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsLaneWidth:](a1, v83);
        goto LABEL_444;
      case 65:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x20000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 34) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOClickableAdvisory);
        if (!GEOClickableAdvisoryReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 200;
        goto LABEL_460;
      case 66:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x800000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEORestrictedZoneId);
        if (!GEORestrictedZoneIdReadAllFrom((uint64_t)v83, v45))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRestrictedZoneIds:](a1, v83);
        goto LABEL_444;
      case 67:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x200000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOStepGroup);
        if (!GEOStepGroupReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsStepGroup:](a1, v83);
        goto LABEL_444;
      case 68:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x20000000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 10) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 392;
        goto LABEL_460;
      case 69:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x200000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 30) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOElevationProfile);
        if (!GEOElevationProfileReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 232;
        goto LABEL_460;
      case 70:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x4000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 25) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 272;
        goto LABEL_460;
      case 71:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x800000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOTrafficColorInfo);
        if (!GEOTrafficColorInfoReadAllFrom(v83, v45))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsTrafficColorInfo:](a1, v83);
        goto LABEL_444;
      case 72:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x2000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOIncidentOnRouteInfo);
        if (!GEOIncidentOnRouteInfoReadAllFrom(v83, v45))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsIncidentOnRouteInfo:](a1, v83);
        goto LABEL_444;
      case 73:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v217 = 0;
        v218 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x100uLL;
        while (2)
        {
          v219 = *v55;
          v220 = *(_QWORD *)&v45[v219];
          v221 = v220 + 1;
          if (v220 == -1 || v221 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v222 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v220);
            *(_QWORD *)&v45[v219] = v221;
            v78 |= (unint64_t)(v222 & 0x7F) << v217;
            if (v222 < 0)
            {
              v217 += 7;
              v66 = v218++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_555;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_555:
        v258 = 532;
        goto LABEL_564;
      case 74:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x8000000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOUpdateLocation);
        if (!GEOUpdateLocationReadAllFrom((uint64_t)v83, v45))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsUpdateLocation:](a1, v83);
        goto LABEL_444;
      case 75:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x80000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 20) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 312;
        goto LABEL_460;
      case 76:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x100000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 31) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 224;
        goto LABEL_460;
      case 77:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v223 = 0;
        v224 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x20uLL;
        while (2)
        {
          v225 = *v55;
          v226 = *(_QWORD *)&v45[v225];
          v227 = v226 + 1;
          if (v226 == -1 || v227 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v228 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v226);
            *(_QWORD *)&v45[v225] = v227;
            v78 |= (unint64_t)(v228 & 0x7F) << v223;
            if (v228 < 0)
            {
              v223 += 7;
              v66 = v224++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_559;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_559:
        v258 = 520;
        goto LABEL_564;
      case 78:
        if ((v319 & 1) == 0)
          goto LABEL_489;
        v229 = 0;
        v230 = 0;
        v78 = 0;
        *(_QWORD *)(a1 + 564) |= 0x800uLL;
        while (2)
        {
          v231 = *v55;
          v232 = *(_QWORD *)&v45[v231];
          v233 = v232 + 1;
          if (v232 == -1 || v233 > *(_QWORD *)&v45[*v46])
          {
            v45[*v57] = 1;
          }
          else
          {
            v234 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v232);
            *(_QWORD *)&v45[v231] = v233;
            v78 |= (unint64_t)(v234 & 0x7F) << v229;
            if (v234 < 0)
            {
              v229 += 7;
              v66 = v230++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_563;
              }
              continue;
            }
          }
          break;
        }
        if (v45[*v57])
          LODWORD(v78) = 0;
LABEL_563:
        v258 = 544;
LABEL_564:
        *(_DWORD *)(a1 + v258) = v78;
        goto LABEL_610;
      case 79:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x100000000000) == 0)
        {
          PBReaderReadData();
          v84 = objc_claimAutoreleasedReturnValue();
          v85 = 320;
LABEL_403:
          v235 = *(void **)(a1 + v85);
          *(_QWORD *)(a1 + v85) = v84;
          goto LABEL_461;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_667;
        v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 19) >> 56;
        goto LABEL_607;
      case 80:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x100000) != 0)
          goto LABEL_489;
        if (v68 != 2)
        {
          v290 = 0;
          v291 = 0;
          v292 = 0;
          while (1)
          {
            v293 = *v55;
            v294 = *(_QWORD *)&v45[v293];
            v295 = v294 + 1;
            if (v294 == -1 || v295 > *(_QWORD *)&v45[*v46])
              break;
            v296 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v294);
            *(_QWORD *)&v45[v293] = v295;
            v292 |= (unint64_t)(v296 & 0x7F) << v290;
            if (v296 < 0)
            {
              v290 += 7;
              v66 = v291++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_658;
          }
          v45[*v57] = 1;
LABEL_658:
          PBRepeatedInt32Add();
          goto LABEL_608;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_667;
        while (1)
        {
          v236 = (int *)MEMORY[0x1E0D82BD8];
          v237 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)&v45[*v55] >= *(_QWORD *)&v45[*MEMORY[0x1E0D82BD8]] || v45[*MEMORY[0x1E0D82BC8]])
            goto LABEL_488;
          v238 = 0;
          v239 = 0;
          v240 = 0;
          v241 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v242 = *v55;
            v243 = *(_QWORD *)&v45[v242];
            v244 = v243 + 1;
            if (v243 == -1 || v244 > *(_QWORD *)&v45[*v236])
              break;
            v245 = *(_BYTE *)(*(_QWORD *)&v45[*v241] + v243);
            *(_QWORD *)&v45[v242] = v244;
            v240 |= (unint64_t)(v245 & 0x7F) << v238;
            if (v245 < 0)
            {
              v238 += 7;
              v66 = v239++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_418;
          }
          v45[*v237] = 1;
LABEL_418:
          PBRepeatedInt32Add();
        }
      case 81:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x80000) != 0)
          goto LABEL_489;
        if (v68 != 2)
        {
          v297 = 0;
          v298 = 0;
          v299 = 0;
          while (1)
          {
            v300 = *v55;
            v301 = *(_QWORD *)&v45[v300];
            v302 = v301 + 1;
            if (v301 == -1 || v302 > *(_QWORD *)&v45[*v46])
              break;
            v303 = *(_BYTE *)(*(_QWORD *)&v45[*v58] + v301);
            *(_QWORD *)&v45[v300] = v302;
            v299 |= (unint64_t)(v303 & 0x7F) << v297;
            if (v303 < 0)
            {
              v297 += 7;
              v66 = v298++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_656;
          }
LABEL_655:
          v45[*v57] = 1;
LABEL_656:
          PBRepeatedUInt32Add();
          goto LABEL_608;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_667;
        while (1)
        {
          v246 = (int *)MEMORY[0x1E0D82BD8];
          v247 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)&v45[*v55] >= *(_QWORD *)&v45[*MEMORY[0x1E0D82BD8]] || v45[*MEMORY[0x1E0D82BC8]])
            break;
          v248 = 0;
          v249 = 0;
          v250 = 0;
          v251 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v252 = *v55;
            v253 = *(_QWORD *)&v45[v252];
            v254 = v253 + 1;
            if (v253 == -1 || v254 > *(_QWORD *)&v45[*v246])
              break;
            v255 = *(_BYTE *)(*(_QWORD *)&v45[*v251] + v253);
            *(_QWORD *)&v45[v252] = v254;
            v250 |= (unint64_t)(v255 & 0x7F) << v248;
            if (v255 < 0)
            {
              v248 += 7;
              v66 = v249++ >= 9;
              if (!v66)
                continue;
            }
            goto LABEL_433;
          }
          v45[*v247] = 1;
LABEL_433:
          PBRepeatedUInt32Add();
        }
LABEL_488:
        PBReaderRecallMark();
        v46 = (int *)MEMORY[0x1E0D82BD8];
        v57 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_609;
      case 82:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x40000000000000) != 0)
          goto LABEL_486;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEORouteLineStyleInfo);
        if (!GEORouteLineStyleInfoReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteLineStyleInfo:](a1, v83);
        goto LABEL_444;
      case 83:
        if (!v71 || (*(_QWORD *)(a1 + 564) & 0x8000000000000) != 0)
        {
LABEL_486:
          v256 = PBReaderSkipValueWithTag();
          v57 = (int *)MEMORY[0x1E0D82BC8];
          v46 = (int *)MEMORY[0x1E0D82BD8];
          v58 = (int *)MEMORY[0x1E0D82BB8];
          if ((v256 & 1) == 0)
            goto LABEL_663;
          goto LABEL_610;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEORouteLineStyleInfo);
        if (!GEORouteLineStyleInfoReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteCameraInputInfo:](a1, v83);
LABEL_444:

        goto LABEL_608;
      case 86:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x40000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 21) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 304;
        goto LABEL_460;
      case 87:
        if (!v71)
          goto LABEL_489;
        if ((*(_DWORD *)(a1 + 564) & 0x80000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = *(char *)(a1 + 567);
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v83, v45, v8 & 1))
          goto LABEL_666;
        PBReaderRecallMark();
        v210 = 216;
        goto LABEL_460;
      case 88:
        if (!v71)
          goto LABEL_489;
        if ((*(_QWORD *)(a1 + 564) & 0x200000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_667;
          v261 = (uint64_t)(*(_QWORD *)(a1 + 564) << 18) >> 56;
LABEL_607:
          v6 += v261 >> 7;
LABEL_608:
          v57 = (int *)MEMORY[0x1E0D82BC8];
          v46 = (int *)MEMORY[0x1E0D82BD8];
LABEL_609:
          v58 = (int *)MEMORY[0x1E0D82BB8];
LABEL_610:
          if (!(v316 & 1 | (v6 != 0)))
          {
            v314 = 1;
            goto LABEL_664;
          }
          v53 = v318;
          if (*(_QWORD *)&v45[*v55] >= *(_QWORD *)&v45[*v46])
            goto LABEL_660;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_667;
        v83 = objc_alloc_init(GEOPathMapMatcherInstructions);
        if (GEOPathMapMatcherInstructionsReadAllFrom(v83, v45))
        {
          PBReaderRecallMark();
          v210 = 328;
LABEL_460:
          v235 = *(void **)(a1 + v210);
          *(_QWORD *)(a1 + v210) = v83;
LABEL_461:

          --v6;
          goto LABEL_608;
        }
LABEL_666:

LABEL_667:
        v314 = 0;
        v57 = (int *)MEMORY[0x1E0D82BC8];
        v53 = v318;
LABEL_668:
        if ((v53 & 1) != 0)
LABEL_669:
          *(_QWORD *)(a1 + 564) |= 0x40000uLL;
LABEL_670:
        if (v54 & 1 | ((v314 & 1) == 0))
        {
          v305 = *(_BYTE *)(a1 + 572) | 1;
          *(_QWORD *)(a1 + 564) |= 0xFFFFFFFFFFF80000;
          *(_BYTE *)(a1 + 572) = v305;
        }
        else if (v56)
        {
          while (1)
          {
            v306 = *v56++;
            v307 = 0;
            v308 = 0x400000000000000;
            switch(v306)
            {
              case 0:
                goto LABEL_720;
              case 2:
                goto LABEL_719;
              case 3:
                v307 = 0;
                v308 = 0x20000000000;
                goto LABEL_719;
              case 4:
                v307 = 0;
                v308 = 0x400000000000;
                goto LABEL_719;
              case 7:
                v307 = 0;
                v308 = 0x2000000000000;
                goto LABEL_719;
              case 9:
                v308 = 0;
                v307 = 1;
                goto LABEL_719;
              case 16:
                v307 = 0;
                v308 = 0x40000000;
                goto LABEL_719;
              case 18:
                v307 = 0;
                v308 = 0x8000000;
                goto LABEL_719;
              case 20:
                v307 = 0;
                v308 = 0x10000000;
                goto LABEL_719;
              case 21:
                v307 = 0;
                v308 = 0x2000000;
                goto LABEL_719;
              case 22:
                v307 = 0;
                v308 = 0x1000000;
                goto LABEL_719;
              case 23:
                v307 = 0;
                v308 = 0x800000;
                goto LABEL_719;
              case 25:
                v307 = 0;
                v308 = 0x4000000000000;
                goto LABEL_719;
              case 34:
                v307 = 0;
                v308 = 0x800000000;
                goto LABEL_719;
              case 50:
                v307 = 0;
                v308 = 0x4000000000000000;
                goto LABEL_719;
              case 51:
                v307 = 0;
                v308 = 0x400000;
                goto LABEL_719;
              case 52:
                v307 = 0;
                v308 = 0x200000;
                goto LABEL_719;
              case 53:
                v307 = 0;
                v308 = 0x80000000000000;
                goto LABEL_719;
              case 54:
                v307 = 0;
                v308 = 0x10000000000000;
                goto LABEL_719;
              case 55:
                v307 = 0;
                v308 = 0x100000000000000;
                goto LABEL_719;
              case 56:
                v307 = 0;
                v308 = 0x400000000;
                goto LABEL_719;
              case 57:
                v307 = 0;
                v308 = 0x2000000000000000;
                goto LABEL_719;
              case 58:
                v307 = 0;
                v308 = 0x1000000000000000;
                goto LABEL_719;
              case 59:
                v307 = 0;
                v308 = 0x4000000;
                goto LABEL_719;
              case 60:
                v307 = 0;
                v308 = 0x1000000000;
                goto LABEL_719;
              case 61:
                v307 = 0;
                v308 = 0x10000000000;
                goto LABEL_719;
              case 62:
                v307 = 0;
                v308 = 0x1000000000000;
                goto LABEL_719;
              case 64:
                v307 = 0;
                v308 = 0x8000000000;
                goto LABEL_719;
              case 65:
                v307 = 0;
                v308 = 0x20000000;
                goto LABEL_719;
              case 66:
                v307 = 0;
                v308 = 0x800000000000;
                goto LABEL_719;
              case 67:
                v307 = 0;
                v308 = 0x200000000000000;
                goto LABEL_719;
              case 68:
                v307 = 0;
                v308 = 0x20000000000000;
                goto LABEL_719;
              case 69:
                v307 = 0;
                v308 = 0x200000000;
                goto LABEL_719;
              case 70:
                v307 = 0;
                v308 = 0x4000000000;
                goto LABEL_719;
              case 71:
                v307 = 0;
                v308 = 0x800000000000000;
                goto LABEL_719;
              case 72:
                v307 = 0;
                v308 = 0x2000000000;
                goto LABEL_719;
              case 74:
                v307 = 0;
                v308 = 0x8000000000000000;
                goto LABEL_719;
              case 75:
                v307 = 0;
                v308 = 0x80000000000;
                goto LABEL_719;
              case 76:
                v307 = 0;
                v308 = 0x100000000;
                goto LABEL_719;
              case 79:
                v307 = 0;
                v308 = 0x100000000000;
                goto LABEL_719;
              case 80:
                v307 = 0;
                v308 = 0x100000;
                goto LABEL_719;
              case 81:
                v307 = 0;
                v308 = 0x80000;
                goto LABEL_719;
              case 82:
                v307 = 0;
                v308 = 0x40000000000000;
                goto LABEL_719;
              case 83:
                v307 = 0;
                v308 = 0x8000000000000;
                goto LABEL_719;
              case 86:
                v307 = 0;
                v308 = 0x40000000000;
                goto LABEL_719;
              case 87:
                v307 = 0;
                v308 = 0x80000000;
                goto LABEL_719;
              case 88:
                v307 = 0;
                v308 = 0x200000000000;
LABEL_719:
                v309 = *(_BYTE *)(a1 + 572) | v307;
                *(_QWORD *)(a1 + 564) |= v308;
                *(_BYTE *)(a1 + 572) = v309;
                break;
              default:
                continue;
            }
          }
        }
LABEL_720:
        if (v314)
        {
          v304 = v45[*v57] == 0;
          if ((v54 & 1) == 0)
            return v304;
LABEL_724:
          v310 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v304 = 0;
          if ((v54 & 1) != 0)
            goto LABEL_724;
        }
        return v304;
      default:
        if ((v53 & 1) == 0 || (*(_QWORD *)(a1 + 564) & 0x40000) != 0)
        {
LABEL_489:
          v257 = PBReaderSkipValueWithTag();
          v58 = (int *)MEMORY[0x1E0D82BB8];
          v46 = (int *)MEMORY[0x1E0D82BD8];
          v57 = (int *)MEMORY[0x1E0D82BC8];
          if ((v257 & 1) == 0)
          {
LABEL_663:
            v314 = 0;
LABEL_664:
            if ((v318 & 1) != 0)
              goto LABEL_669;
            goto LABEL_670;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v110 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v111 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v110;

          }
          v112 = PBUnknownFieldAdd();
          v57 = (int *)MEMORY[0x1E0D82BC8];
          v46 = (int *)MEMORY[0x1E0D82BD8];
          v58 = (int *)MEMORY[0x1E0D82BB8];
          if (!v112)
          {
            v314 = 0;
            goto LABEL_669;
          }
        }
        goto LABEL_610;
    }
  }
}

void sub_188EA7DB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA7F00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA816C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA84C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA8800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA8B3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA8C88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA8F68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA9144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA9318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA9660(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA99A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EA9CE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAA020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAA35C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAA728(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAAA64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAABB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAACFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAB1A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAB4E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAB630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAB978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EABCC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EABFFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAC148(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAC484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAC7C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EACAFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EACC48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EACD94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EACEE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAD21C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAD368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAD6A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAD9E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EADBBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAE5B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAE8F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAEC30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAED7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAEEC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAF2DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAF624(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EAF770(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EB51B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORouteCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  _BYTE v146[128];
  _BYTE v147[128];
  _BYTE v148[128];
  _BYTE v149[128];
  _BYTE v150[128];
  _BYTE v151[128];
  _BYTE v152[128];
  _BYTE v153[128];
  _BYTE v154[128];
  _BYTE v155[128];
  _BYTE v156[128];
  _BYTE v157[128];
  _BYTE v158[128];
  _BYTE v159[128];
  _BYTE v160[128];
  _BYTE v161[128];
  uint64_t v162;

  v162 = *MEMORY[0x1E0C80C00];
  v142 = 0u;
  v143 = 0u;
  v144 = 0u;
  v145 = 0u;
  v2 = *(id *)(a1 + 432);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v142, v161, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v143;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v143 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v142 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v142, v161, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 328), "readAll:", 1);
  v140 = 0u;
  v141 = 0u;
  v138 = 0u;
  v139 = 0u;
  v7 = *(id *)(a1 + 400);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v138, v160, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v139;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v139 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v138 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v138, v160, 16);
    }
    while (v9);
  }

  v136 = 0u;
  v137 = 0u;
  v134 = 0u;
  v135 = 0u;
  v12 = *(id *)(a1 + 376);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v134, v159, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v135;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v135 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v134 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v134, v159, 16);
    }
    while (v14);
  }

  v132 = 0u;
  v133 = 0u;
  v130 = 0u;
  v131 = 0u;
  v17 = *(id *)(a1 + 440);
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v130, v158, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v131;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v131 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v130 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v130, v158, 16);
    }
    while (v19);
  }

  v128 = 0u;
  v129 = 0u;
  v126 = 0u;
  v127 = 0u;
  v22 = *(id *)(a1 + 368);
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v126, v157, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v127;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v127 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v126 + 1) + 8 * v26++), "readAll:", 1);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v126, v157, 16);
    }
    while (v24);
  }

  objc_msgSend(*(id *)(a1 + 392), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 272), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 200), "readAll:", 1);
  v124 = 0u;
  v125 = 0u;
  v122 = 0u;
  v123 = 0u;
  v27 = *(id *)(a1 + 248);
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v122, v156, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v123;
    do
    {
      v31 = 0;
      do
      {
        if (*(_QWORD *)v123 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v122 + 1) + 8 * v31++), "readAll:", 1);
      }
      while (v29 != v31);
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v122, v156, 16);
    }
    while (v29);
  }

  v120 = 0u;
  v121 = 0u;
  v118 = 0u;
  v119 = 0u;
  v32 = *(id *)(a1 + 264);
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v118, v155, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v119;
    do
    {
      v36 = 0;
      do
      {
        if (*(_QWORD *)v119 != v35)
          objc_enumerationMutation(v32);
        objc_msgSend(*(id *)(*((_QWORD *)&v118 + 1) + 8 * v36++), "readAll:", 1);
      }
      while (v34 != v36);
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v118, v155, 16);
    }
    while (v34);
  }

  -[GEORouteInformation readAll:](*(_QWORD *)(a1 + 408), 1);
  v116 = 0u;
  v117 = 0u;
  v114 = 0u;
  v115 = 0u;
  v37 = *(id *)(a1 + 384);
  v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v114, v154, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v115;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v115 != v40)
          objc_enumerationMutation(v37);
        objc_msgSend(*(id *)(*((_QWORD *)&v114 + 1) + 8 * v41++), "readAll:", 1);
      }
      while (v39 != v41);
      v39 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v114, v154, 16);
    }
    while (v39);
  }

  v112 = 0u;
  v113 = 0u;
  v110 = 0u;
  v111 = 0u;
  v42 = *(id *)(a1 + 416);
  v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v110, v153, 16);
  if (v43)
  {
    v44 = v43;
    v45 = *(_QWORD *)v111;
    do
    {
      v46 = 0;
      do
      {
        if (*(_QWORD *)v111 != v45)
          objc_enumerationMutation(v42);
        objc_msgSend(*(id *)(*((_QWORD *)&v110 + 1) + 8 * v46++), "readAll:", 1);
      }
      while (v44 != v46);
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v110, v153, 16);
    }
    while (v44);
  }

  v108 = 0u;
  v109 = 0u;
  v106 = 0u;
  v107 = 0u;
  v47 = *(id *)(a1 + 240);
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v106, v152, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v107;
    do
    {
      v51 = 0;
      do
      {
        if (*(_QWORD *)v107 != v50)
          objc_enumerationMutation(v47);
        objc_msgSend(*(id *)(*((_QWORD *)&v106 + 1) + 8 * v51++), "readAll:", 1);
      }
      while (v49 != v51);
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v106, v152, 16);
    }
    while (v49);
  }

  objc_msgSend(*(id *)(a1 + 176), "readAll:", 1);
  v104 = 0u;
  v105 = 0u;
  v102 = 0u;
  v103 = 0u;
  v52 = *(id *)(a1 + 256);
  v53 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v102, v151, 16);
  if (v53)
  {
    v54 = v53;
    v55 = *(_QWORD *)v103;
    do
    {
      v56 = 0;
      do
      {
        if (*(_QWORD *)v103 != v55)
          objc_enumerationMutation(v52);
        objc_msgSend(*(id *)(*((_QWORD *)&v102 + 1) + 8 * v56++), "readAll:", 1);
      }
      while (v54 != v56);
      v54 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v102, v151, 16);
    }
    while (v54);
  }

  objc_msgSend(*(id *)(a1 + 288), "readAll:", 1);
  v100 = 0u;
  v101 = 0u;
  v98 = 0u;
  v99 = 0u;
  v57 = *(id *)(a1 + 352);
  v58 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v98, v150, 16);
  if (v58)
  {
    v59 = v58;
    v60 = *(_QWORD *)v99;
    do
    {
      v61 = 0;
      do
      {
        if (*(_QWORD *)v99 != v60)
          objc_enumerationMutation(v57);
        objc_msgSend(*(id *)(*((_QWORD *)&v98 + 1) + 8 * v61++), "readAll:", 1);
      }
      while (v59 != v61);
      v59 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v98, v150, 16);
    }
    while (v59);
  }

  v96 = 0u;
  v97 = 0u;
  v94 = 0u;
  v95 = 0u;
  v62 = *(id *)(a1 + 280);
  v63 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v94, v149, 16);
  if (v63)
  {
    v64 = v63;
    v65 = *(_QWORD *)v95;
    do
    {
      v66 = 0;
      do
      {
        if (*(_QWORD *)v95 != v65)
          objc_enumerationMutation(v62);
        objc_msgSend(*(id *)(*((_QWORD *)&v94 + 1) + 8 * v66++), "readAll:", 1);
      }
      while (v64 != v66);
      v64 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v94, v149, 16);
    }
    while (v64);
  }

  objc_msgSend(*(id *)(a1 + 232), "readAll:", 1);
  v92 = 0u;
  v93 = 0u;
  v90 = 0u;
  v91 = 0u;
  v67 = *(id *)(a1 + 344);
  v68 = objc_msgSend(v67, "countByEnumeratingWithState:objects:count:", &v90, v148, 16);
  if (v68)
  {
    v69 = v68;
    v70 = *(_QWORD *)v91;
    do
    {
      v71 = 0;
      do
      {
        if (*(_QWORD *)v91 != v70)
          objc_enumerationMutation(v67);
        objc_msgSend(*(id *)(*((_QWORD *)&v90 + 1) + 8 * v71++), "readAll:", 1);
      }
      while (v69 != v71);
      v69 = objc_msgSend(v67, "countByEnumeratingWithState:objects:count:", &v90, v148, 16);
    }
    while (v69);
  }

  v88 = 0u;
  v89 = 0u;
  v86 = 0u;
  v87 = 0u;
  v72 = *(id *)(a1 + 424);
  v73 = objc_msgSend(v72, "countByEnumeratingWithState:objects:count:", &v86, v147, 16);
  if (v73)
  {
    v74 = v73;
    v75 = *(_QWORD *)v87;
    do
    {
      v76 = 0;
      do
      {
        if (*(_QWORD *)v87 != v75)
          objc_enumerationMutation(v72);
        objc_msgSend(*(id *)(*((_QWORD *)&v86 + 1) + 8 * v76++), "readAll:", 1);
      }
      while (v74 != v76);
      v74 = objc_msgSend(v72, "countByEnumeratingWithState:objects:count:", &v86, v147, 16);
    }
    while (v74);
  }

  v84 = 0u;
  v85 = 0u;
  v82 = 0u;
  v83 = 0u;
  v77 = *(id *)(a1 + 472);
  v78 = objc_msgSend(v77, "countByEnumeratingWithState:objects:count:", &v82, v146, 16);
  if (v78)
  {
    v79 = v78;
    v80 = *(_QWORD *)v83;
    do
    {
      v81 = 0;
      do
      {
        if (*(_QWORD *)v83 != v80)
          objc_enumerationMutation(v77);
        objc_msgSend(*(id *)(*((_QWORD *)&v82 + 1) + 8 * v81++), "readAll:", 1, (_QWORD)v82);
      }
      while (v79 != v81);
      v79 = objc_msgSend(v77, "countByEnumeratingWithState:objects:count:", &v82, v146, 16);
    }
    while (v79);
  }

  objc_msgSend(*(id *)(a1 + 312), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 224), "readAll:", 1);
  -[GEODrivingWalkingInstruction readAll:](*(_QWORD *)(a1 + 304), 1);
  -[GEODrivingWalkingInstruction readAll:](*(_QWORD *)(a1 + 216), 1);
}

BOOL GEORouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  _BOOL8 Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 492))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 496));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 488) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 492) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteReadAllFrom_initialTag;
  Specified = GEORouteReadSpecified(a1, (char *)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORouteCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 496));
  return Specified;
}

void sub_188EB5E04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EB5E64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  int v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  int v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  int v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  int v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  int v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  int v167;
  _BOOL8 v168;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStepIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 3u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 4u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 7u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 9u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x10u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x12u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x14u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x15u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x16u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_379;
            while (1)
            {
              v53 = *v2;
              v54 = *(_QWORD *)&a1[v53];
              v55 = v54 + 1;
              if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
                goto LABEL_310;
              v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
              *(_QWORD *)&a1[v53] = v55;
              if (v56 < 0)
              {
                v57 = v15++;
                if (v57 <= 8)
                  continue;
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_379;
LABEL_318:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v138 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v139 = *v2;
              v140 = *(_QWORD *)&a1[v139];
              v141 = v140 + 1;
              if (v140 == -1 || v141 > *(_QWORD *)&a1[*v3])
                break;
              v142 = *(char *)(*(_QWORD *)&a1[*v5] + v140);
              *(_QWORD *)&a1[v139] = v141;
              if (v142 < 0)
              {
                v13 = v138++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_318;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x17u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_379;
            while (1)
            {
              v58 = *v2;
              v59 = *(_QWORD *)&a1[v58];
              v60 = v59 + 1;
              if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
                goto LABEL_310;
              v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
              *(_QWORD *)&a1[v58] = v60;
              if (v61 < 0)
              {
                v62 = v15++;
                if (v62 <= 8)
                  continue;
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_379;
LABEL_328:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v143 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v144 = *v2;
              v145 = *(_QWORD *)&a1[v144];
              v146 = v145 + 1;
              if (v145 == -1 || v146 > *(_QWORD *)&a1[*v3])
                break;
              v147 = *(char *)(*(_QWORD *)&a1[*v5] + v145);
              *(_QWORD *)&a1[v144] = v146;
              if (v147 < 0)
              {
                v13 = v143++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_328;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x19u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteNameIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v22 = v73++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v78 = 0;
          while (1)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
            *(_QWORD *)&a1[v79] = v81;
            if (v82 < 0)
            {
              v22 = v78++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v83 = 0;
          while (1)
          {
            v84 = *v2;
            v85 = *(_QWORD *)&a1[v84];
            v86 = v85 + 1;
            if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
            *(_QWORD *)&a1[v84] = v86;
            if (v87 < 0)
            {
              v22 = v83++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v88 = 0;
          while (1)
          {
            v89 = *v2;
            v90 = *(_QWORD *)&a1[v89];
            v91 = v90 + 1;
            if (v90 == -1 || v91 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v92 = *(char *)(*(_QWORD *)&a1[*v5] + v90);
            *(_QWORD *)&a1[v89] = v91;
            if (v92 < 0)
            {
              v22 = v88++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x21u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v93 = 0;
          while (1)
          {
            v94 = *v2;
            v95 = *(_QWORD *)&a1[v94];
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
            *(_QWORD *)&a1[v94] = v96;
            if (v97 < 0)
            {
              v22 = v93++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x22u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEnrouteNoticeIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x32u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x33u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_379;
            while (1)
            {
              v98 = *v2;
              v99 = *(_QWORD *)&a1[v98];
              v100 = v99 + 1;
              if (v99 == -1 || v100 > *(_QWORD *)&a1[*v3])
                goto LABEL_310;
              v101 = *(char *)(*(_QWORD *)&a1[*v5] + v99);
              *(_QWORD *)&a1[v98] = v100;
              if (v101 < 0)
              {
                v102 = v15++;
                if (v102 <= 8)
                  continue;
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_379;
LABEL_338:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v148 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v149 = *v2;
              v150 = *(_QWORD *)&a1[v149];
              v151 = v150 + 1;
              if (v150 == -1 || v151 > *(_QWORD *)&a1[*v3])
                break;
              v152 = *(char *)(*(_QWORD *)&a1[*v5] + v150);
              *(_QWORD *)&a1[v149] = v151;
              if (v152 < 0)
              {
                v13 = v148++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_338;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x34u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_379;
            while (1)
            {
              v103 = *v2;
              v104 = *(_QWORD *)&a1[v103];
              v105 = v104 + 1;
              if (v104 == -1 || v105 > *(_QWORD *)&a1[*v3])
                goto LABEL_310;
              v106 = *(char *)(*(_QWORD *)&a1[*v5] + v104);
              *(_QWORD *)&a1[v103] = v105;
              if (v106 < 0)
              {
                v107 = v15++;
                if (v107 <= 8)
                  continue;
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_379;
LABEL_348:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v153 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v154 = *v2;
              v155 = *(_QWORD *)&a1[v154];
              v156 = v155 + 1;
              if (v155 == -1 || v156 > *(_QWORD *)&a1[*v3])
                break;
              v157 = *(char *)(*(_QWORD *)&a1[*v5] + v155);
              *(_QWORD *)&a1[v154] = v156;
              if (v157 < 0)
              {
                v13 = v153++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_348;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x35u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteInformationIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x36u:
        case 0x37u:
        case 0x38u:
        case 0x44u:
        case 0x46u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x39u:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x3Au:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x3Bu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAlertNonRecommendedRouteTextIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x3Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x3Du:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaunchAndGoCardTextIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x3Eu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORoadComplexityIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x3Fu:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v108 = 0;
          while (1)
          {
            v109 = *v2;
            v110 = *(_QWORD *)&a1[v109];
            v111 = v110 + 1;
            if (v110 == -1 || v111 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v112 = *(char *)(*(_QWORD *)&a1[*v5] + v110);
            *(_QWORD *)&a1[v109] = v111;
            if (v112 < 0)
            {
              v22 = v108++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x40u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneWidthIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x41u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOClickableAdvisoryIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x42u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictedZoneIdIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x43u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStepGroupIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x45u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOElevationProfileIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x47u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficColorInfoIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x48u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOIncidentOnRouteInfoIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x49u:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v113 = 0;
          while (1)
          {
            v114 = *v2;
            v115 = *(_QWORD *)&a1[v114];
            v116 = v115 + 1;
            if (v115 == -1 || v116 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v117 = *(char *)(*(_QWORD *)&a1[*v5] + v115);
            *(_QWORD *)&a1[v114] = v116;
            if (v117 < 0)
            {
              v22 = v113++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x4Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOUpdateLocationIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x4Bu:
        case 0x4Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x4Du:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v118 = 0;
          while (1)
          {
            v119 = *v2;
            v120 = *(_QWORD *)&a1[v119];
            v121 = v120 + 1;
            if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v122 = *(char *)(*(_QWORD *)&a1[*v5] + v120);
            *(_QWORD *)&a1[v119] = v121;
            if (v122 < 0)
            {
              v22 = v118++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x4Eu:
          if ((v8 & 7) != 0)
            goto LABEL_379;
          v123 = 0;
          while (1)
          {
            v124 = *v2;
            v125 = *(_QWORD *)&a1[v124];
            v126 = v125 + 1;
            if (v125 == -1 || v126 > *(_QWORD *)&a1[*v3])
              goto LABEL_310;
            v127 = *(char *)(*(_QWORD *)&a1[*v5] + v125);
            *(_QWORD *)&a1[v124] = v126;
            if (v127 < 0)
            {
              v22 = v123++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_315;
          }
        case 0x4Fu:
          if (v15 == 2)
            goto LABEL_294;
          goto LABEL_379;
        case 0x50u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_379;
            while (1)
            {
              v128 = *v2;
              v129 = *(_QWORD *)&a1[v128];
              v130 = v129 + 1;
              if (v129 == -1 || v130 > *(_QWORD *)&a1[*v3])
                goto LABEL_310;
              v131 = *(char *)(*(_QWORD *)&a1[*v5] + v129);
              *(_QWORD *)&a1[v128] = v130;
              if (v131 < 0)
              {
                v132 = v15++;
                if (v132 <= 8)
                  continue;
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_379;
LABEL_358:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v158 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v159 = *v2;
              v160 = *(_QWORD *)&a1[v159];
              v161 = v160 + 1;
              if (v160 == -1 || v161 > *(_QWORD *)&a1[*v3])
                break;
              v162 = *(char *)(*(_QWORD *)&a1[*v5] + v160);
              *(_QWORD *)&a1[v159] = v161;
              if (v162 < 0)
              {
                v13 = v158++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_358;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x51u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_379:
              PBReaderRecallMark();
              return 0;
            }
LABEL_368:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v163 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v164 = *v2;
                v165 = *(_QWORD *)&a1[v164];
                v166 = v165 + 1;
                if (v165 == -1 || v166 > *(_QWORD *)&a1[*v3])
                  break;
                v167 = *(char *)(*(_QWORD *)&a1[*v5] + v165);
                *(_QWORD *)&a1[v164] = v166;
                if (v167 < 0)
                {
                  v13 = v163++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_368;
              }
              a1[*v4] = 1;
            }
LABEL_314:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_379;
            while (1)
            {
              v133 = *v2;
              v134 = *(_QWORD *)&a1[v133];
              v135 = v134 + 1;
              if (v134 == -1 || v135 > *(_QWORD *)&a1[*v3])
                break;
              v136 = *(char *)(*(_QWORD *)&a1[*v5] + v134);
              *(_QWORD *)&a1[v133] = v135;
              if (v136 < 0)
              {
                v137 = v15++;
                if (v137 <= 8)
                  continue;
              }
              goto LABEL_315;
            }
LABEL_310:
            a1[*v4] = 1;
          }
LABEL_315:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_377;
          break;
        case 0x52u:
        case 0x53u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLineStyleInfoIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x56u:
        case 0x57u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODrivingWalkingInstructionIsValid(a1))
            goto LABEL_379;
          goto LABEL_314;
        case 0x58u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPathMapMatcherInstructionsIsValid(a1))
            goto LABEL_314;
          goto LABEL_379;
        default:
LABEL_294:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_379;
          goto LABEL_315;
      }
    }
  }
LABEL_377:
  v168 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v168;
}

BOOL GEOStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  int v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  int v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  int v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  int v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  int v131;
  _BOOL8 v132;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v44 = 0;
          while (1)
          {
            v45 = *v2;
            v46 = *(_QWORD *)&a1[v45];
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
            *(_QWORD *)&a1[v45] = v47;
            if (v48 < 0)
            {
              v23 = v44++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v49 = 0;
          while (1)
          {
            v50 = *v2;
            v51 = *(_QWORD *)&a1[v50];
            v52 = v51 + 1;
            if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
            *(_QWORD *)&a1[v50] = v52;
            if (v53 < 0)
            {
              v23 = v49++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v54 = 0;
          while (1)
          {
            v55 = *v2;
            v56 = *(_QWORD *)&a1[v55];
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v58 = *(char *)(*(_QWORD *)&a1[*v5] + v56);
            *(_QWORD *)&a1[v55] = v57;
            if (v58 < 0)
            {
              v23 = v54++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0xCu:
        case 0x13u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0xDu:
          if (v16 != 5)
            goto LABEL_257;
          v59 = *v2;
          v60 = *(_QWORD *)&a1[v59];
          if (v60 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_253;
          v61 = v60 + 4;
          if (v61 > *(_QWORD *)&a1[*v3])
            goto LABEL_253;
          *(_QWORD *)&a1[v59] = v61;
          continue;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v23 = v62++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v23 = v67++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v23 = v72++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v23 = v77++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v82 = 0;
          while (1)
          {
            v83 = *v2;
            v84 = *(_QWORD *)&a1[v83];
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
            *(_QWORD *)&a1[v83] = v85;
            if (v86 < 0)
            {
              v23 = v82++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v87 = 0;
          while (1)
          {
            v88 = *v2;
            v89 = *(_QWORD *)&a1[v88];
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
            *(_QWORD *)&a1[v88] = v90;
            if (v91 < 0)
            {
              v23 = v87++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v92 = 0;
          while (1)
          {
            v93 = *v2;
            v94 = *(_QWORD *)&a1[v93];
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v96 = *(char *)(*(_QWORD *)&a1[*v5] + v94);
            *(_QWORD *)&a1[v93] = v95;
            if (v96 < 0)
            {
              v23 = v92++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x1Eu:
          if (v16 == 2)
            goto LABEL_158;
          goto LABEL_257;
        case 0x1Fu:
          if (v16 == 2)
            goto LABEL_158;
          goto LABEL_257;
        case 0x20u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTimeCheckpointsIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x21u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOInstructionSetIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x22u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v97 = 0;
          while (1)
          {
            v98 = *v2;
            v99 = *(_QWORD *)&a1[v98];
            v100 = v99 + 1;
            if (v99 == -1 || v100 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v101 = *(char *)(*(_QWORD *)&a1[*v5] + v99);
            *(_QWORD *)&a1[v98] = v100;
            if (v101 < 0)
            {
              v23 = v97++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x23u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x24u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v102 = 0;
          while (1)
          {
            v103 = *v2;
            v104 = *(_QWORD *)&a1[v103];
            v105 = v104 + 1;
            if (v104 == -1 || v105 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v106 = *(char *)(*(_QWORD *)&a1[*v5] + v104);
            *(_QWORD *)&a1[v103] = v105;
            if (v106 < 0)
            {
              v23 = v102++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x25u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v107 = 0;
          while (1)
          {
            v108 = *v2;
            v109 = *(_QWORD *)&a1[v108];
            v110 = v109 + 1;
            if (v109 == -1 || v110 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v111 = *(char *)(*(_QWORD *)&a1[*v5] + v109);
            *(_QWORD *)&a1[v108] = v110;
            if (v111 < 0)
            {
              v23 = v107++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x26u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOEVStateInfoIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x29u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOEVStepInfoIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x2Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOEVChargeInfoIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x2Bu:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v112 = 0;
          while (1)
          {
            v113 = *v2;
            v114 = *(_QWORD *)&a1[v113];
            v115 = v114 + 1;
            if (v114 == -1 || v115 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v116 = *(char *)(*(_QWORD *)&a1[*v5] + v114);
            *(_QWORD *)&a1[v113] = v115;
            if (v116 < 0)
            {
              v23 = v112++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x2Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x2Du:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStopWaypointIsValid(a1))
            goto LABEL_257;
          goto LABEL_235;
        case 0x2Eu:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v117 = 0;
          while (1)
          {
            v118 = *v2;
            v119 = *(_QWORD *)&a1[v118];
            v120 = v119 + 1;
            if (v119 == -1 || v120 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v121 = *(char *)(*(_QWORD *)&a1[*v5] + v119);
            *(_QWORD *)&a1[v118] = v120;
            if (v121 < 0)
            {
              v23 = v117++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x2Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORoadDescriptionIsValid(a1))
            goto LABEL_257;
LABEL_235:
          PBReaderRecallMark();
          continue;
        case 0x30u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v122 = 0;
          while (1)
          {
            v123 = *v2;
            v124 = *(_QWORD *)&a1[v123];
            v125 = v124 + 1;
            if (v124 == -1 || v125 > *(_QWORD *)&a1[*v3])
              goto LABEL_252;
            v126 = *(char *)(*(_QWORD *)&a1[*v5] + v124);
            *(_QWORD *)&a1[v123] = v125;
            if (v126 < 0)
            {
              v23 = v122++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_254;
          }
        case 0x31u:
          if ((v8 & 7) != 0)
            goto LABEL_257;
          v127 = 0;
          break;
        default:
LABEL_158:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_257:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v128 = *v2;
        v129 = *(_QWORD *)&a1[v128];
        v130 = v129 + 1;
        if (v129 == -1 || v130 > *(_QWORD *)&a1[*v3])
          break;
        v131 = *(char *)(*(_QWORD *)&a1[*v5] + v129);
        *(_QWORD *)&a1[v128] = v130;
        if (v131 < 0)
        {
          v23 = v127++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_254;
      }
LABEL_252:
      v14 = *v4;
LABEL_253:
      a1[v14] = 1;
LABEL_254:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v132 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v132;
}

BOOL GEORouteLineStyleInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_69;
          goto LABEL_65;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLabelInfoIsValid(a1))
            goto LABEL_69;
          goto LABEL_65;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v33 = 0;
          break;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneChangeInfoIsValid(a1))
            goto LABEL_69;
LABEL_65:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_66;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOTrafficColorInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficColorAndOffsetIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORouteNameIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_41;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_43;
LABEL_28:
          PBReaderRecallMark();
          goto LABEL_40;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_43;
      }
LABEL_40:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_41;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLegRangeIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_41:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEORouteInformationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_27;
          PBReaderRecallMark();
          goto LABEL_25;
        case 5u:
          if (v15 == 2)
            goto LABEL_24;
          goto LABEL_27;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_27:
            PBReaderRecallMark();
            return 0;
          }
LABEL_25:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_26;
          break;
      }
    }
  }
LABEL_26:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOStepGroupIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_47;
LABEL_34:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v13 = v22++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
          goto LABEL_23;
        }
        if ((v8 & 7) != 0)
          goto LABEL_47;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v15++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_23:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_47;
      }
LABEL_44:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOUpdateLocationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188EB9DA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _BYTE v84[128];
  _BYTE v85[128];
  _BYTE v86[128];
  _BYTE v87[128];
  _BYTE v88[128];
  _BYTE v89[128];
  _BYTE v90[128];
  _BYTE v91[128];
  _BYTE v92[128];
  _BYTE v93[128];
  uint64_t v94;

  v94 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 496));
  v2 = *(_QWORD *)(a1 + 564);
  if (v2 & 0xC4E72005B800000 | *(_BYTE *)(a1 + 572) & 3)
    return 1;
  if ((v2 & 0x20000000000000) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 392)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 564);
  }
  if ((v2 & 0x4000000000) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 272)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 564);
  }
  if ((v2 & 0x20000000) != 0)
  {
    if ((GEOClickableAdvisoryIsDirty(*(os_unfair_lock_s **)(a1 + 200)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 564);
  }
  if ((v2 & 0x4000002800600000) == 0)
  {
    if ((v2 & 0x80000000000000) != 0)
    {
      if ((GEORouteInformationIsDirty(*(os_unfair_lock_s **)(a1 + 408)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 564);
    }
    if ((v2 & 0x3110000400000000) == 0)
    {
      if ((v2 & 0x4000000) != 0)
      {
        if ((GEOAlertNonRecommendedRouteTextIsDirty(*(os_unfair_lock_s **)(a1 + 176)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 564);
      }
      if ((v2 & 0x1000000000) == 0)
      {
        if ((v2 & 0x10000000000) != 0)
        {
          if ((GEOLaunchAndGoCardTextIsDirty(*(os_unfair_lock_s **)(a1 + 288)) & 1) != 0)
            return 1;
          v2 = *(_QWORD *)(a1 + 564);
        }
        if ((v2 & 0x1008000000000) == 0)
        {
          if ((v2 & 0x200000000) != 0)
          {
            if ((GEOElevationProfileIsDirty(*(os_unfair_lock_s **)(a1 + 232)) & 1) != 0)
              return 1;
            v2 = *(_QWORD *)(a1 + 564);
          }
          if ((v2 & 0x8200800000000000) == 0)
          {
            if ((v2 & 0x80000000000) != 0)
            {
              if ((GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 312)) & 1) != 0)
                return 1;
              v2 = *(_QWORD *)(a1 + 564);
            }
            if ((v2 & 0x100000000) != 0)
            {
              if ((GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 224)) & 1) != 0)
                return 1;
              v2 = *(_QWORD *)(a1 + 564);
            }
            if ((v2 & 0x180000) == 0)
            {
              if ((v2 & 0x40000000000) != 0)
              {
                if ((GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 304)) & 1) != 0)
                  return 1;
                v2 = *(_QWORD *)(a1 + 564);
              }
              if ((v2 & 0x80000000) == 0)
                goto LABEL_43;
              if ((GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 216)) & 1) == 0)
              {
                v2 = *(_QWORD *)(a1 + 564);
LABEL_43:
                if ((v2 & 0x400000000000000) != 0)
                {
                  v82 = 0u;
                  v83 = 0u;
                  v80 = 0u;
                  v81 = 0u;
                  v5 = *(id *)(a1 + 432);
                  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v80, v93, 16);
                  if (v6)
                  {
                    v7 = v6;
                    v8 = *(_QWORD *)v81;
LABEL_46:
                    v9 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v81 != v8)
                        objc_enumerationMutation(v5);
                      if ((GEOStepIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v80 + 1) + 8 * v9)) & 1) != 0)
                        goto LABEL_144;
                      if (v7 == ++v9)
                      {
                        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v80, v93, 16);
                        if (v7)
                          goto LABEL_46;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x40000000000000) != 0)
                {
                  v78 = 0u;
                  v79 = 0u;
                  v76 = 0u;
                  v77 = 0u;
                  v5 = *(id *)(a1 + 400);
                  v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v76, v92, 16);
                  if (v10)
                  {
                    v11 = v10;
                    v12 = *(_QWORD *)v77;
LABEL_56:
                    v13 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v77 != v12)
                        objc_enumerationMutation(v5);
                      if ((GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v76 + 1)
                                                                                               + 8 * v13)) & 1) != 0)
                        goto LABEL_144;
                      if (v11 == ++v13)
                      {
                        v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v76, v92, 16);
                        if (v11)
                          goto LABEL_56;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x8000000000000) != 0)
                {
                  v74 = 0u;
                  v75 = 0u;
                  v72 = 0u;
                  v73 = 0u;
                  v5 = *(id *)(a1 + 376);
                  v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v72, v91, 16);
                  if (v14)
                  {
                    v15 = v14;
                    v16 = *(_QWORD *)v73;
LABEL_66:
                    v17 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v73 != v16)
                        objc_enumerationMutation(v5);
                      if ((GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v72 + 1)
                                                                                               + 8 * v17)) & 1) != 0)
                        goto LABEL_144;
                      if (v15 == ++v17)
                      {
                        v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v72, v91, 16);
                        if (v15)
                          goto LABEL_66;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x4000000000000) != 0)
                {
                  v70 = 0u;
                  v71 = 0u;
                  v68 = 0u;
                  v69 = 0u;
                  v5 = *(id *)(a1 + 368);
                  v18 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v68, v90, 16);
                  if (v18)
                  {
                    v19 = v18;
                    v20 = *(_QWORD *)v69;
LABEL_76:
                    v21 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v69 != v20)
                        objc_enumerationMutation(v5);
                      if ((GEORouteNameIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v68 + 1) + 8 * v21)) & 1) != 0)
                        goto LABEL_144;
                      if (v19 == ++v21)
                      {
                        v19 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v68, v90, 16);
                        if (v19)
                          goto LABEL_76;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x800000000) != 0)
                {
                  v66 = 0u;
                  v67 = 0u;
                  v64 = 0u;
                  v65 = 0u;
                  v5 = *(id *)(a1 + 248);
                  v22 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v89, 16);
                  if (v22)
                  {
                    v23 = v22;
                    v24 = *(_QWORD *)v65;
LABEL_86:
                    v25 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v65 != v24)
                        objc_enumerationMutation(v5);
                      if ((GEOEnrouteNoticeIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v64 + 1)
                                                                                          + 8 * v25)) & 1) != 0)
                        goto LABEL_144;
                      if (v23 == ++v25)
                      {
                        v23 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v89, 16);
                        if (v23)
                          goto LABEL_86;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x10000000000000) != 0)
                {
                  v62 = 0u;
                  v63 = 0u;
                  v60 = 0u;
                  v61 = 0u;
                  v5 = *(id *)(a1 + 384);
                  v26 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v88, 16);
                  if (v26)
                  {
                    v27 = v26;
                    v28 = *(_QWORD *)v61;
LABEL_96:
                    v29 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v61 != v28)
                        objc_enumerationMutation(v5);
                      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v60 + 1)
                                                                                            + 8 * v29)) & 1) != 0)
                        goto LABEL_144;
                      if (v27 == ++v29)
                      {
                        v27 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v88, 16);
                        if (v27)
                          goto LABEL_96;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x100000000000000) != 0)
                {
                  v58 = 0u;
                  v59 = 0u;
                  v56 = 0u;
                  v57 = 0u;
                  v5 = *(id *)(a1 + 416);
                  v30 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v87, 16);
                  if (v30)
                  {
                    v31 = v30;
                    v32 = *(_QWORD *)v57;
LABEL_106:
                    v33 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v57 != v32)
                        objc_enumerationMutation(v5);
                      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v56 + 1)
                                                                                            + 8 * v33)) & 1) != 0)
                        goto LABEL_144;
                      if (v31 == ++v33)
                      {
                        v31 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v87, 16);
                        if (v31)
                          goto LABEL_106;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x400000000) != 0)
                {
                  v54 = 0u;
                  v55 = 0u;
                  v52 = 0u;
                  v53 = 0u;
                  v5 = *(id *)(a1 + 240);
                  v34 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v86, 16);
                  if (v34)
                  {
                    v35 = v34;
                    v36 = *(_QWORD *)v53;
LABEL_116:
                    v37 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v53 != v36)
                        objc_enumerationMutation(v5);
                      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v52 + 1)
                                                                                            + 8 * v37)) & 1) != 0)
                        goto LABEL_144;
                      if (v35 == ++v37)
                      {
                        v35 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v86, 16);
                        if (v35)
                          goto LABEL_116;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x1000000000) != 0)
                {
                  v50 = 0u;
                  v51 = 0u;
                  v48 = 0u;
                  v49 = 0u;
                  v5 = *(id *)(a1 + 256);
                  v38 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v85, 16);
                  if (v38)
                  {
                    v39 = v38;
                    v40 = *(_QWORD *)v49;
LABEL_126:
                    v41 = 0;
                    while (1)
                    {
                      if (*(_QWORD *)v49 != v40)
                        objc_enumerationMutation(v5);
                      if ((GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v48 + 1)
                                                                                          + 8 * v41)) & 1) != 0)
                        goto LABEL_144;
                      if (v39 == ++v41)
                      {
                        v39 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v85, 16);
                        if (v39)
                          goto LABEL_126;
                        break;
                      }
                    }
                  }

                  v2 = *(_QWORD *)(a1 + 564);
                }
                if ((v2 & 0x200000000000000) == 0)
                  return 0;
                v46 = 0u;
                v47 = 0u;
                v44 = 0u;
                v45 = 0u;
                v5 = *(id *)(a1 + 424);
                v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v84, 16);
                if (!v3)
                {
LABEL_145:

                  return v3;
                }
                v42 = *(_QWORD *)v45;
LABEL_137:
                v43 = 0;
                while (1)
                {
                  if (*(_QWORD *)v45 != v42)
                    objc_enumerationMutation(v5);
                  if ((GEOStepGroupIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v44 + 1) + 8 * v43)) & 1) != 0)
                    break;
                  if (v3 == ++v43)
                  {
                    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v84, 16);
                    if (v3)
                      goto LABEL_137;
                    goto LABEL_145;
                  }
                }
LABEL_144:
                v3 = 1;
                goto LABEL_145;
              }
            }
          }
        }
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEORouteIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 124);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EBCB8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EBF150(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC01DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteAnnotationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEOPBTransitArtwork *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  char v54;
  char v55;
  int v56;
  int v57;
  char v58;
  void *v59;
  int v61;
  int *v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v63 = v17 & ~(_BYTE)v12 | v10;
        v64 = v17 | v12 | v63;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v65 = (v18 == 0) | v17 | v12;
        v66 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_83;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_83:
      v61 = 1;
      goto LABEL_84;
    }
    v32 = v24 >> 3;
    v33 = v66;
    if ((v65 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_71;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_73;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_71:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_73:
        *(_DWORD *)(a1 + 52) = v40;
        goto LABEL_82;
      case 2:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_103;
          v55 = 16 * *(_BYTE *)(a1 + 60);
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v48 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_102;
        PBReaderRecallMark();
        v49 = 24;
        goto LABEL_63;
      case 3:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_103;
          v55 = 8 * *(_BYTE *)(a1 + 60);
LABEL_78:
          v9 += v55 >> 7;
LABEL_79:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_82:
          if (!(v64 & 1 | (v9 != 0)))
            goto LABEL_83;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v48 = objc_alloc_init(GEOMiniCard);
        if (GEOMiniCardReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v49 = 32;
LABEL_63:
          v50 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          --v9;
          goto LABEL_79;
        }
LABEL_102:

LABEL_103:
        v61 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        v62 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v63 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + v62[739]) |= 4u;
        if (v66 & 1 | ((v61 & 1) == 0))
        {
          *(_BYTE *)(a1 + v62[739]) |= 8u;
          *(_BYTE *)(a1 + v62[739]) |= 0x10u;
          goto LABEL_96;
        }
        if (v18)
        {
          while (2)
          {
            while (1)
            {
              v57 = *v18++;
              v56 = v57;
              if (v57 == 2)
                break;
              if (v56 == 3)
              {
                v58 = 16;
                goto LABEL_95;
              }
              if (!v56)
                goto LABEL_96;
            }
            v58 = 8;
LABEL_95:
            *(_BYTE *)(a1 + v62[739]) |= v58;
            continue;
          }
        }
LABEL_96:
        if (v61)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v66 & 1) != 0)
        {
          v59 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        *(_BYTE *)(a1 + 60) |= 2u;
        v51 = *v19;
        v52 = *(_QWORD *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFFBLL && v52 + 4 <= *(_QWORD *)(v3 + *v7))
        {
          v53 = *(_DWORD *)(*(_QWORD *)(v3 + *v21) + v52);
          *(_QWORD *)(v3 + v51) = v52 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v53 = 0;
        }
        *(_DWORD *)(a1 + 56) = v53;
        goto LABEL_82;
      default:
        if ((v63 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_68:
          v54 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v54 & 1) == 0)
          {
            v61 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v61 = 0;
            v62 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_188EC09D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC118C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteAnnotationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteAnnotationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteAnnotationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteAnnotationReadAllFrom_initialTag;
  Specified = GEORouteAnnotationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188EC1340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteAnnotationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteAnnotationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EC13A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC1574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteAnnotationIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  if ((v2 & 0x10) != 0)
    return (uint64_t)GEOMiniCardIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

os_unfair_lock_s *GEORouteAnnotationIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteAnnotationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EC1944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC1D10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC2ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORouteAttributesReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  char v21;
  int *v22;
  int *v23;
  int v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  void *v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  id v114;
  void *v115;
  int v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char v129;
  int *v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  GEOAutomobileOptions *v139;
  uint64_t v140;
  int *v141;
  char v142;
  unsigned int v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  char v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  char v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  char v169;
  char v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  char v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  char v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  char v191;
  unsigned int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  int *v198;
  char v199;
  unsigned int v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  char v206;
  char v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  char v213;
  char v214;
  char v215;
  uint64_t v216;
  BOOL v217;
  uint64_t v218;
  int v219;
  char v220;
  unsigned int v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  char v226;
  char v227;
  unsigned int v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  char v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  int v241;
  int v242;
  int v243;
  void *v244;
  char v246;
  char v247;
  char v248;
  char v249;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 172);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 168));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 216);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D30), v14), (int32x4_t)(*(_OWORD *)&vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D20) & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01))))+ ((v12 >> 23) & 1)+ ((v12 >> 21) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 6;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v19 | v11) | v8) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v24 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_426;
        v246 = v21 | v20;
        v249 = (v23 == 0) | v21;
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v247 = v19 & ~(_BYTE)v11 | v9;
        v248 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v25))
      goto LABEL_425;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v22;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v6))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_425:
      v24 = 1;
LABEL_426:
      if ((v20 & 1) == 0)
        goto LABEL_428;
      goto LABEL_427;
    }
    v38 = v29 >> 3;
    v39 = v21;
    if ((v249 & 1) == 0)
    {
      v40 = v23;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 216) |= 8u;
        while (1)
        {
          v47 = *v22;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
            break;
          v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v48);
          *(_QWORD *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0)
            goto LABEL_304;
          v44 += 7;
          v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_306;
          }
        }
        *(_BYTE *)(v3 + *v25) = 1;
LABEL_304:
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_306:
        v216 = 188;
        goto LABEL_359;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_DWORD *)(a1 + 216) |= 0x1000u;
        while (2)
        {
          v54 = *v22;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v34 = v52++ >= 9;
              if (v34)
              {
                v53 = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v53 = 0;
LABEL_310:
        v217 = v53 != 0;
        v218 = 206;
        goto LABEL_384;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_DWORD *)(a1 + 216) |= 0x800u;
        while (2)
        {
          v61 = *v22;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v34 = v59++ >= 9;
              if (v34)
              {
                v60 = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v60 = 0;
LABEL_314:
        v217 = v60 != 0;
        v218 = 205;
        goto LABEL_384;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_DWORD *)(a1 + 216) |= 0x8000u;
        while (2)
        {
          v68 = *v22;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v34 = v66++ >= 9;
              if (v34)
              {
                v67 = 0;
                goto LABEL_318;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v67 = 0;
LABEL_318:
        v217 = v67 != 0;
        v218 = 209;
        goto LABEL_384;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v72 = 0;
        v73 = 0;
        v74 = 0;
        *(_DWORD *)(a1 + 216) |= 0x100u;
        while (2)
        {
          v75 = *v22;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v34 = v73++ >= 9;
              if (v34)
              {
                v74 = 0;
                goto LABEL_322;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v74 = 0;
LABEL_322:
        v217 = v74 != 0;
        v218 = 202;
        goto LABEL_384;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + 216) |= 0x400u;
        while (2)
        {
          v82 = *v22;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v34 = v80++ >= 9;
              if (v34)
              {
                v81 = 0;
                goto LABEL_326;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v81 = 0;
LABEL_326:
        v217 = v81 != 0;
        v218 = 204;
        goto LABEL_384;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v86 = 0;
        v87 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 216) |= 2u;
        while (2)
        {
          v88 = *v22;
          v89 = *(_QWORD *)(v3 + v88);
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v89);
            *(_QWORD *)(v3 + v88) = v90;
            v46 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v34 = v87++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_330;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_330:
        v216 = 180;
        goto LABEL_359;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v92 = 0;
        v93 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 216) |= 0x10u;
        while (2)
        {
          v94 = *v22;
          v95 = *(_QWORD *)(v3 + v94);
          v96 = v95 + 1;
          if (v95 == -1 || v96 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v95);
            *(_QWORD *)(v3 + v94) = v96;
            v46 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              v34 = v93++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_334;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_334:
        v216 = 192;
        goto LABEL_359;
      case 9:
        if (!v39)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 219) & 0x10) == 0)
        {
          PBReaderReadString();
          v98 = objc_claimAutoreleasedReturnValue();
          v99 = *(void **)(a1 + 144);
          *(_QWORD *)(a1 + 144) = v98;
          goto LABEL_252;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_455;
        v219 = (8 * *(_DWORD *)(a1 + 216)) >> 31;
        goto LABEL_397;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v100 = 0;
        v101 = 0;
        v102 = 0;
        *(_DWORD *)(a1 + 216) |= 0x2000u;
        while (2)
        {
          v103 = *v22;
          v104 = *(_QWORD *)(v3 + v103);
          v105 = v104 + 1;
          if (v104 == -1 || v105 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v104);
            *(_QWORD *)(v3 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              v34 = v101++ >= 9;
              if (v34)
              {
                v102 = 0;
                goto LABEL_338;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v102 = 0;
LABEL_338:
        v217 = v102 != 0;
        v218 = 207;
        goto LABEL_384;
      case 11:
        if ((v8 & 1) == 0)
        {
          v214 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v214 & 1) == 0)
            goto LABEL_455;
          goto LABEL_423;
        }
        if (!PBReaderPlaceMark() || (GEOTimepointReadAllFrom(a1 + 96, v3) & 1) == 0)
          goto LABEL_455;
        PBReaderRecallMark();
        *(_DWORD *)(a1 + 216) |= 1u;
        goto LABEL_421;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v107 = 0;
        v108 = 0;
        v109 = 0;
        *(_DWORD *)(a1 + 216) |= 0x200u;
        while (2)
        {
          v110 = *v22;
          v111 = *(_QWORD *)(v3 + v110);
          v112 = v111 + 1;
          if (v111 == -1 || v112 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v111);
            *(_QWORD *)(v3 + v110) = v112;
            v109 |= (unint64_t)(v113 & 0x7F) << v107;
            if (v113 < 0)
            {
              v107 += 7;
              v34 = v108++ >= 9;
              if (v34)
              {
                v109 = 0;
                goto LABEL_342;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v109 = 0;
LABEL_342:
        v217 = v109 != 0;
        v218 = 203;
        goto LABEL_384;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v117 = 0;
        v118 = 0;
        v119 = 0;
        *(_DWORD *)(a1 + 216) |= 0x4000u;
        while (2)
        {
          v120 = *v22;
          v121 = *(_QWORD *)(v3 + v120);
          v122 = v121 + 1;
          if (v121 == -1 || v122 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v121);
            *(_QWORD *)(v3 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              v34 = v118++ >= 9;
              if (v34)
              {
                v119 = 0;
                goto LABEL_346;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v119 = 0;
LABEL_346:
        v217 = v119 != 0;
        v218 = 208;
        goto LABEL_384;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v124 = 0;
        v125 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 216) |= 0x20u;
        while (2)
        {
          v126 = *v22;
          v127 = *(_QWORD *)(v3 + v126);
          v128 = v127 + 1;
          if (v127 == -1 || v128 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v129 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v127);
            *(_QWORD *)(v3 + v126) = v128;
            v46 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              v34 = v125++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_350;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_350:
        v216 = 196;
        goto LABEL_359;
      case 16:
        if (!v39 || (*(_BYTE *)(a1 + 218) & 0x40) != 0)
          goto LABEL_300;
        if (v36 != 2)
        {
          v220 = 0;
          v221 = 0;
          v222 = 0;
          while (1)
          {
            v223 = *v22;
            v224 = *(_QWORD *)(v3 + v223);
            v225 = v224 + 1;
            if (v224 == -1 || v225 > *(_QWORD *)(v3 + *v6))
              goto LABEL_419;
            v226 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v224);
            *(_QWORD *)(v3 + v223) = v225;
            v222 |= (unint64_t)(v226 & 0x7F) << v220;
            if (v226 < 0)
            {
              v220 += 7;
              v34 = v221++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_420;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_455;
        while (1)
        {
          v130 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_302;
          v131 = 0;
          v132 = 0;
          v133 = 0;
          v134 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v135 = *v22;
            v136 = *(_QWORD *)(v3 + v135);
            v137 = v136 + 1;
            if (v136 == -1 || v137 > *(_QWORD *)(v3 + *v6))
              break;
            v138 = *(_BYTE *)(*(_QWORD *)(v3 + *v134) + v136);
            *(_QWORD *)(v3 + v135) = v137;
            v133 |= (unint64_t)(v138 & 0x7F) << v131;
            if (v138 < 0)
            {
              v131 += 7;
              v34 = v132++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_162;
          }
          *(_BYTE *)(v3 + *v130) = 1;
LABEL_162:
          PBRepeatedInt32Add();
        }
      case 17:
        if (!v39)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 219) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_455;
          v219 = (int)(*(_DWORD *)(a1 + 216) << 6) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_455;
        v139 = objc_alloc_init(GEOAutomobileOptions);
        if (!GEOAutomobileOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1))
          goto LABEL_454;
        PBReaderRecallMark();
        v140 = 120;
        goto LABEL_251;
      case 18:
        if (!v39)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 219) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_455;
          v219 = (4 * *(_DWORD *)(a1 + 216)) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_455;
        v139 = objc_alloc_init(GEOTransitOptions);
        if (!GEOTransitOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1))
          goto LABEL_454;
        PBReaderRecallMark();
        v140 = 152;
        goto LABEL_251;
      case 19:
        if (!v39)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 219) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_455;
          v219 = (2 * *(_DWORD *)(a1 + 216)) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_455;
        v139 = objc_alloc_init(GEOWalkingOptions);
        if (!GEOWalkingOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1))
          goto LABEL_454;
        PBReaderRecallMark();
        v140 = 160;
        goto LABEL_251;
      case 20:
        if (!v39 || (*(_BYTE *)(a1 + 219) & 1) != 0)
          goto LABEL_300;
        if (v36 != 2)
        {
          v227 = 0;
          v228 = 0;
          v229 = 0;
          while (1)
          {
            v230 = *v22;
            v231 = *(_QWORD *)(v3 + v230);
            v232 = v231 + 1;
            if (v231 == -1 || v232 > *(_QWORD *)(v3 + *v6))
              goto LABEL_419;
            v233 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v231);
            *(_QWORD *)(v3 + v230) = v232;
            v229 |= (unint64_t)(v233 & 0x7F) << v227;
            if (v233 < 0)
            {
              v227 += 7;
              v34 = v228++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_420;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_455;
        while (1)
        {
          v141 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_302;
          v142 = 0;
          v143 = 0;
          v144 = 0;
          v145 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v146 = *v22;
            v147 = *(_QWORD *)(v3 + v146);
            v148 = v147 + 1;
            if (v147 == -1 || v148 > *(_QWORD *)(v3 + *v6))
              break;
            v149 = *(_BYTE *)(*(_QWORD *)(v3 + *v145) + v147);
            *(_QWORD *)(v3 + v146) = v148;
            v144 |= (unint64_t)(v149 & 0x7F) << v142;
            if (v149 < 0)
            {
              v142 += 7;
              v34 = v143++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_192;
          }
          *(_BYTE *)(v3 + *v141) = 1;
LABEL_192:
          PBRepeatedInt32Add();
        }
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v150 = 0;
        v151 = 0;
        v152 = 0;
        *(_DWORD *)(a1 + 216) |= 0x100000u;
        while (2)
        {
          v153 = *v22;
          v154 = *(_QWORD *)(v3 + v153);
          v155 = v154 + 1;
          if (v154 == -1 || v155 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v156 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v154);
            *(_QWORD *)(v3 + v153) = v155;
            v152 |= (unint64_t)(v156 & 0x7F) << v150;
            if (v156 < 0)
            {
              v150 += 7;
              v34 = v151++ >= 9;
              if (v34)
              {
                v152 = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v152 = 0;
LABEL_354:
        v217 = v152 != 0;
        v218 = 214;
        goto LABEL_384;
      case 30:
        if (!v39)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 219) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_455;
          v219 = (16 * *(_DWORD *)(a1 + 216)) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_455;
        v139 = objc_alloc_init(GEOWaypointNameProperties);
        if (!GEOWaypointNamePropertiesReadAllFrom((uint64_t)v139, (void *)v3))
          goto LABEL_454;
        PBReaderRecallMark();
        v140 = 136;
        goto LABEL_251;
      case 31:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v157 = 0;
        v158 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 216) |= 4u;
        while (2)
        {
          v159 = *v22;
          v160 = *(_QWORD *)(v3 + v159);
          v161 = v160 + 1;
          if (v160 == -1 || v161 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v162 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v160);
            *(_QWORD *)(v3 + v159) = v161;
            v46 |= (unint64_t)(v162 & 0x7F) << v157;
            if (v162 < 0)
            {
              v157 += 7;
              v34 = v158++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_358:
        v216 = 184;
LABEL_359:
        *(_DWORD *)(a1 + v216) = v46;
        goto LABEL_423;
      case 32:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v163 = 0;
        v164 = 0;
        v165 = 0;
        *(_DWORD *)(a1 + 216) |= 0x20000u;
        while (2)
        {
          v166 = *v22;
          v167 = *(_QWORD *)(v3 + v166);
          v168 = v167 + 1;
          if (v167 == -1 || v168 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v169 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v167);
            *(_QWORD *)(v3 + v166) = v168;
            v165 |= (unint64_t)(v169 & 0x7F) << v163;
            if (v169 < 0)
            {
              v163 += 7;
              v34 = v164++ >= 9;
              if (v34)
              {
                v165 = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v165 = 0;
LABEL_363:
        v217 = v165 != 0;
        v218 = 211;
        goto LABEL_384;
      case 33:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v170 = 0;
        v171 = 0;
        v172 = 0;
        *(_DWORD *)(a1 + 216) |= 0x80u;
        while (2)
        {
          v173 = *v22;
          v174 = *(_QWORD *)(v3 + v173);
          v175 = v174 + 1;
          if (v174 == -1 || v175 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v176 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v174);
            *(_QWORD *)(v3 + v173) = v175;
            v172 |= (unint64_t)(v176 & 0x7F) << v170;
            if (v176 < 0)
            {
              v170 += 7;
              v34 = v171++ >= 9;
              if (v34)
              {
                v172 = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v172 = 0;
LABEL_367:
        v217 = v172 != 0;
        v218 = 201;
        goto LABEL_384;
      case 34:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v177 = 0;
        v178 = 0;
        v179 = 0;
        *(_DWORD *)(a1 + 216) |= 0x40u;
        while (2)
        {
          v180 = *v22;
          v181 = *(_QWORD *)(v3 + v180);
          v182 = v181 + 1;
          if (v181 == -1 || v182 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v183 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v181);
            *(_QWORD *)(v3 + v180) = v182;
            v179 |= (unint64_t)(v183 & 0x7F) << v177;
            if (v183 < 0)
            {
              v177 += 7;
              v34 = v178++ >= 9;
              if (v34)
              {
                v179 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v179 = 0;
LABEL_371:
        v217 = v179 != 0;
        v218 = 200;
        goto LABEL_384;
      case 35:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v184 = 0;
        v185 = 0;
        v186 = 0;
        *(_DWORD *)(a1 + 216) |= 0x40000u;
        while (2)
        {
          v187 = *v22;
          v188 = *(_QWORD *)(v3 + v187);
          v189 = v188 + 1;
          if (v188 == -1 || v189 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v190 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v188);
            *(_QWORD *)(v3 + v187) = v189;
            v186 |= (unint64_t)(v190 & 0x7F) << v184;
            if (v190 < 0)
            {
              v184 += 7;
              v34 = v185++ >= 9;
              if (v34)
              {
                v186 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v186 = 0;
LABEL_375:
        v217 = v186 != 0;
        v218 = 212;
        goto LABEL_384;
      case 36:
        if (!v39)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 219) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_455;
          v219 = (32 * *(_DWORD *)(a1 + 216)) >> 31;
LABEL_397:
          v7 += v219;
LABEL_421:
          v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_422:
          v26 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_423;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_455;
        v139 = objc_alloc_init(GEOCyclingOptions);
        if (GEOCyclingOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v140 = 128;
LABEL_251:
          v99 = *(void **)(a1 + v140);
          *(_QWORD *)(a1 + v140) = v139;
LABEL_252:

          --v7;
          goto LABEL_421;
        }
LABEL_454:

LABEL_455:
        v24 = 0;
LABEL_456:
        v21 = v248;
        if ((v247 & 1) != 0)
          goto LABEL_427;
LABEL_428:
        if (v21 & 1 | ((v24 & 1) == 0))
        {
          *(_DWORD *)(a1 + 216) |= 0x10000000u;
          *(_DWORD *)(a1 + 216) |= 0x400000u;
          *(_DWORD *)(a1 + 216) |= 0x2000000u;
          *(_DWORD *)(a1 + 216) |= 0x4000000u;
          *(_DWORD *)(a1 + 216) |= 0x20000000u;
          *(_DWORD *)(a1 + 216) |= 0x40000000u;
          *(_DWORD *)(a1 + 216) |= 0x1000000u;
          *(_DWORD *)(a1 + 216) |= 0x8000000u;
          *(_DWORD *)(a1 + 216) |= 0x800000u;
          goto LABEL_447;
        }
        if (v23)
        {
          while (2)
          {
            while (1)
            {
              v242 = *v23++;
              v241 = v242;
              if (v242 > 35)
                break;
              switch(v241)
              {
                case 16:
                  v243 = 0x400000;
                  goto LABEL_445;
                case 17:
                  v243 = 0x2000000;
                  goto LABEL_445;
                case 18:
                  v243 = 0x20000000;
                  goto LABEL_445;
                case 19:
                  v243 = 0x40000000;
                  goto LABEL_445;
                case 20:
                  v243 = 0x1000000;
                  goto LABEL_445;
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                  continue;
                case 30:
                  v243 = 0x8000000;
                  goto LABEL_445;
                default:
                  if (v241 == 9)
                  {
                    v243 = 0x10000000;
LABEL_445:
                    *(_DWORD *)(a1 + 216) |= v243;
                    continue;
                  }
                  if (!v241)
                    goto LABEL_447;
                  break;
              }
            }
            if (v241 == 36)
            {
              v243 = 0x4000000;
            }
            else
            {
              if (v241 != 38)
                continue;
              v243 = 0x800000;
            }
            goto LABEL_445;
          }
        }
LABEL_447:
        if (v24)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_451:
          v244 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_451;
        }
        return v3;
      case 37:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v191 = 0;
        v192 = 0;
        v193 = 0;
        *(_DWORD *)(a1 + 216) |= 0x80000u;
        while (2)
        {
          v194 = *v22;
          v195 = *(_QWORD *)(v3 + v194);
          v196 = v195 + 1;
          if (v195 == -1 || v196 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v197 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v195);
            *(_QWORD *)(v3 + v194) = v196;
            v193 |= (unint64_t)(v197 & 0x7F) << v191;
            if (v197 < 0)
            {
              v191 += 7;
              v34 = v192++ >= 9;
              if (v34)
              {
                v193 = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v193 = 0;
LABEL_379:
        v217 = v193 != 0;
        v218 = 213;
        goto LABEL_384;
      case 38:
        if (!v39 || (*(_BYTE *)(a1 + 218) & 0x80) != 0)
          goto LABEL_300;
        if (v36 != 2)
        {
          v234 = 0;
          v235 = 0;
          v236 = 0;
          while (1)
          {
            v237 = *v22;
            v238 = *(_QWORD *)(v3 + v237);
            v239 = v238 + 1;
            if (v238 == -1 || v239 > *(_QWORD *)(v3 + *v6))
              break;
            v240 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v238);
            *(_QWORD *)(v3 + v237) = v239;
            v236 |= (unint64_t)(v240 & 0x7F) << v234;
            if (v240 < 0)
            {
              v234 += 7;
              v34 = v235++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_420;
          }
LABEL_419:
          *(_BYTE *)(v3 + *v25) = 1;
LABEL_420:
          PBRepeatedInt32Add();
          goto LABEL_421;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_455;
        while (1)
        {
          v198 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v199 = 0;
          v200 = 0;
          v201 = 0;
          v202 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v203 = *v22;
            v204 = *(_QWORD *)(v3 + v203);
            v205 = v204 + 1;
            if (v204 == -1 || v205 > *(_QWORD *)(v3 + *v6))
              break;
            v206 = *(_BYTE *)(*(_QWORD *)(v3 + *v202) + v204);
            *(_QWORD *)(v3 + v203) = v205;
            v201 |= (unint64_t)(v206 & 0x7F) << v199;
            if (v206 < 0)
            {
              v199 += 7;
              v34 = v200++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_275;
          }
          *(_BYTE *)(v3 + *v198) = 1;
LABEL_275:
          PBRepeatedInt32Add();
        }
LABEL_302:
        PBReaderRecallMark();
        v25 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_422;
      case 39:
        if ((v8 & 1) == 0)
          goto LABEL_300;
        v207 = 0;
        v208 = 0;
        v209 = 0;
        *(_DWORD *)(a1 + 216) |= 0x10000u;
        while (2)
        {
          v210 = *v22;
          v211 = *(_QWORD *)(v3 + v210);
          v212 = v211 + 1;
          if (v211 == -1 || v212 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v213 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v211);
            *(_QWORD *)(v3 + v210) = v212;
            v209 |= (unint64_t)(v213 & 0x7F) << v207;
            if (v213 < 0)
            {
              v207 += 7;
              v34 = v208++ >= 9;
              if (v34)
              {
                v209 = 0;
                goto LABEL_383;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v209 = 0;
LABEL_383:
        v217 = v209 != 0;
        v218 = 210;
LABEL_384:
        *(_BYTE *)(a1 + v218) = v217;
        goto LABEL_423;
      default:
        if ((v20 & 1) != 0 && (*(_BYTE *)(a1 + 218) & 0x20) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v114 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v115 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v114;

          }
          v116 = PBUnknownFieldAdd();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (v116)
            goto LABEL_423;
          v24 = 0;
          v21 = v248;
LABEL_427:
          *(_DWORD *)(a1 + 216) |= 0x200000u;
          goto LABEL_428;
        }
LABEL_300:
        v215 = PBReaderSkipValueWithTag();
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v25 = (int *)MEMORY[0x1E0D82BC8];
        if ((v215 & 1) == 0)
          goto LABEL_455;
LABEL_423:
        if (!(v246 & 1 | (v7 != 0)))
        {
          v24 = 1;
          goto LABEL_456;
        }
        v20 = v247;
        v21 = v248;
        if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_425;
        continue;
    }
  }
}

void sub_188EC4CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC5154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC5298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC53DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC5520(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC5660(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC5BF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EC6190(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOTimepointJSONRepresentation(uint64_t a1)
{
  return _GEOTimepointDictionaryRepresentation(a1, 1);
}

id GEOTimepointDictionaryRepresentation(uint64_t a1)
{
  return _GEOTimepointDictionaryRepresentation(a1, 0);
}

void GEOTimepointFromJSONRepresentation(void *a1, uint64_t a2)
{
  _GEOTimepointFromDictionaryRepresentation(a1, a2, 1);
}

void GEOTimepointFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  _GEOTimepointFromDictionaryRepresentation(a1, a2, 0);
}

void sub_188EC866C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteAttributesCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[20], "readAll:", 1);
  return objc_msgSend(a1[17], "readAll:", 1);
}

uint64_t GEORouteAttributesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 172))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteAttributesReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 176));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 168) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 172) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteAttributesReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteAttributesReadAllFrom_initialTag;
  Specified = GEORouteAttributesReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORouteAttributesCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 176));
  return Specified;
}

void sub_188EC8870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORouteAttributesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteAttributesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EC88D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteAttributesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  int v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  int v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  int v147;
  _BOOL8 v148;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 9u:
          if (v15 == 2)
            goto LABEL_105;
          goto LABEL_263;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimepointIsValid(a1))
            goto LABEL_263;
          goto LABEL_204;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v22 = v73++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x10u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_263;
            while (1)
            {
              v78 = *v2;
              v79 = *(_QWORD *)&a1[v78];
              v80 = v79 + 1;
              if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
                goto LABEL_228;
              v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
              *(_QWORD *)&a1[v78] = v80;
              if (v81 < 0)
              {
                v82 = v15++;
                if (v82 <= 8)
                  continue;
              }
              goto LABEL_229;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_263;
LABEL_232:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v133 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v134 = *v2;
              v135 = *(_QWORD *)&a1[v134];
              v136 = v135 + 1;
              if (v135 == -1 || v136 > *(_QWORD *)&a1[*v3])
                break;
              v137 = *(char *)(*(_QWORD *)&a1[*v5] + v135);
              *(_QWORD *)&a1[v134] = v136;
              if (v137 < 0)
              {
                v13 = v133++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_232;
            }
            a1[*v4] = 1;
          }
          goto LABEL_204;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1))
            goto LABEL_263;
          goto LABEL_204;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1))
            goto LABEL_263;
          goto LABEL_204;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1))
            goto LABEL_263;
          goto LABEL_204;
        case 0x14u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_263;
            while (1)
            {
              v83 = *v2;
              v84 = *(_QWORD *)&a1[v83];
              v85 = v84 + 1;
              if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
                goto LABEL_228;
              v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
              *(_QWORD *)&a1[v83] = v85;
              if (v86 < 0)
              {
                v87 = v15++;
                if (v87 <= 8)
                  continue;
              }
              goto LABEL_229;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_263;
LABEL_242:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v138 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v139 = *v2;
              v140 = *(_QWORD *)&a1[v139];
              v141 = v140 + 1;
              if (v140 == -1 || v141 > *(_QWORD *)&a1[*v3])
                break;
              v142 = *(char *)(*(_QWORD *)&a1[*v5] + v140);
              *(_QWORD *)&a1[v139] = v141;
              if (v142 < 0)
              {
                v13 = v138++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_242;
            }
            a1[*v4] = 1;
          }
          goto LABEL_204;
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v88 = 0;
          while (1)
          {
            v89 = *v2;
            v90 = *(_QWORD *)&a1[v89];
            v91 = v90 + 1;
            if (v90 == -1 || v91 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v92 = *(char *)(*(_QWORD *)&a1[*v5] + v90);
            *(_QWORD *)&a1[v89] = v91;
            if (v92 < 0)
            {
              v22 = v88++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x1Eu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointNamePropertiesIsValid(a1))
            goto LABEL_263;
          goto LABEL_204;
        case 0x1Fu:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v93 = 0;
          while (1)
          {
            v94 = *v2;
            v95 = *(_QWORD *)&a1[v94];
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
            *(_QWORD *)&a1[v94] = v96;
            if (v97 < 0)
            {
              v22 = v93++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v98 = 0;
          while (1)
          {
            v99 = *v2;
            v100 = *(_QWORD *)&a1[v99];
            v101 = v100 + 1;
            if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
            *(_QWORD *)&a1[v99] = v101;
            if (v102 < 0)
            {
              v22 = v98++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x21u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v103 = 0;
          while (1)
          {
            v104 = *v2;
            v105 = *(_QWORD *)&a1[v104];
            v106 = v105 + 1;
            if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
            *(_QWORD *)&a1[v104] = v106;
            if (v107 < 0)
            {
              v22 = v103++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x22u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v108 = 0;
          while (1)
          {
            v109 = *v2;
            v110 = *(_QWORD *)&a1[v109];
            v111 = v110 + 1;
            if (v110 == -1 || v111 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v112 = *(char *)(*(_QWORD *)&a1[*v5] + v110);
            *(_QWORD *)&a1[v109] = v111;
            if (v112 < 0)
            {
              v22 = v108++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x23u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v113 = 0;
          while (1)
          {
            v114 = *v2;
            v115 = *(_QWORD *)&a1[v114];
            v116 = v115 + 1;
            if (v115 == -1 || v116 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v117 = *(char *)(*(_QWORD *)&a1[*v5] + v115);
            *(_QWORD *)&a1[v114] = v116;
            if (v117 < 0)
            {
              v22 = v113++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x24u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOCyclingOptionsIsValid(a1))
            goto LABEL_204;
          goto LABEL_263;
        case 0x25u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v118 = 0;
          while (1)
          {
            v119 = *v2;
            v120 = *(_QWORD *)&a1[v119];
            v121 = v120 + 1;
            if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v122 = *(char *)(*(_QWORD *)&a1[*v5] + v120);
            *(_QWORD *)&a1[v119] = v121;
            if (v122 < 0)
            {
              v22 = v118++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        case 0x26u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_263:
              PBReaderRecallMark();
              return 0;
            }
LABEL_252:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v143 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v144 = *v2;
                v145 = *(_QWORD *)&a1[v144];
                v146 = v145 + 1;
                if (v145 == -1 || v146 > *(_QWORD *)&a1[*v3])
                  break;
                v147 = *(char *)(*(_QWORD *)&a1[*v5] + v145);
                *(_QWORD *)&a1[v144] = v146;
                if (v147 < 0)
                {
                  v13 = v143++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_252;
              }
              a1[*v4] = 1;
            }
LABEL_204:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_263;
            while (1)
            {
              v123 = *v2;
              v124 = *(_QWORD *)&a1[v123];
              v125 = v124 + 1;
              if (v124 == -1 || v125 > *(_QWORD *)&a1[*v3])
                break;
              v126 = *(char *)(*(_QWORD *)&a1[*v5] + v124);
              *(_QWORD *)&a1[v123] = v125;
              if (v126 < 0)
              {
                v127 = v15++;
                if (v127 <= 8)
                  continue;
              }
              goto LABEL_229;
            }
LABEL_228:
            a1[*v4] = 1;
          }
LABEL_229:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_261;
          break;
        case 0x27u:
          if ((v8 & 7) != 0)
            goto LABEL_263;
          v128 = 0;
          while (1)
          {
            v129 = *v2;
            v130 = *(_QWORD *)&a1[v129];
            v131 = v130 + 1;
            if (v130 == -1 || v131 > *(_QWORD *)&a1[*v3])
              goto LABEL_228;
            v132 = *(char *)(*(_QWORD *)&a1[*v5] + v130);
            *(_QWORD *)&a1[v129] = v131;
            if (v132 < 0)
            {
              v22 = v128++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_229;
          }
        default:
LABEL_105:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_263;
          goto LABEL_229;
      }
    }
  }
LABEL_261:
  v148 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v148;
}

uint64_t GEOTimepointIsValid(void *a1)
{
  uint64_t AllFrom;
  _QWORD v4[5];

  v4[3] = objc_msgSend(a1, "position");
  v4[4] = objc_msgSend(a1, "length");
  memset(v4, 0, 24);
  AllFrom = GEOTimepointReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOTransitOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_71;
            while (1)
            {
LABEL_60:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                goto LABEL_39;
              v38 = a1[*v4];
              if (a1[*v4])
                goto LABEL_39;
              while (1)
              {
                v39 = *v2;
                v40 = *(_QWORD *)&a1[v39];
                v41 = v40 + 1;
                if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                  break;
                v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                *(_QWORD *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  v13 = v38++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_60;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0)
            goto LABEL_71;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_57;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_57;
          }
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFareOptionsIsValid(a1))
            goto LABEL_71;
LABEL_39:
          PBReaderRecallMark();
          continue;
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v27 = v28++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_57;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v33 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_71:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v27 = v33++ > 8;
          if (!v27)
            continue;
        }
        goto LABEL_57;
      }
LABEL_56:
      a1[*v4] = 1;
LABEL_57:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOWalkingOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_51;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_51;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v18 == 2)
      {
        if (v16 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_53;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              break;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v16++;
              if (v26 <= 8)
                continue;
            }
            goto LABEL_50;
          }
          v14 = *v4;
LABEL_49:
          a1[v14] = 1;
          goto LABEL_50;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_53;
LABEL_39:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v27 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              break;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v13 = v27++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        goto LABEL_28;
      }
      if ((_DWORD)v18 == 1)
      {
        if (v16 != 1)
          goto LABEL_53;
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 > 0xFFFFFFFFFFFFFFF7)
          goto LABEL_49;
        v21 = v20 + 8;
        if (v21 > *(_QWORD *)&a1[*v3])
          goto LABEL_49;
        *(_QWORD *)&a1[v19] = v21;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_53;
      }
LABEL_50:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_51;
    }
    if (v16 != 2 || !PBReaderPlaceMark() || !GEOWalkingUserPreferencesIsValid(a1))
    {
LABEL_53:
      PBReaderRecallMark();
      return 0;
    }
LABEL_28:
    PBReaderRecallMark();
    goto LABEL_50;
  }
LABEL_51:
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_188ECA184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteAttributesIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x90400000) != 0)
    return 1;
  if ((v2 & 0x2000000) != 0)
  {
    if ((GEOAutomobileOptionsIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 216);
  }
  if ((v2 & 0x4000000) != 0)
  {
    if (GEOCyclingOptionsIsDirty(*(_QWORD *)(a1 + 128)))
      return 1;
    v2 = *(_DWORD *)(a1 + 216);
  }
  if ((v2 & 0x20000000) != 0)
  {
    if (GEOTransitOptionsIsDirty(*(_QWORD *)(a1 + 152)))
      return 1;
    v2 = *(_DWORD *)(a1 + 216);
  }
  if ((v2 & 0x40000000) == 0)
    goto LABEL_15;
  if (GEOWalkingOptionsIsDirty(*(_QWORD *)(a1 + 160)))
    return 1;
  v2 = *(_DWORD *)(a1 + 216);
LABEL_15:
  if ((v2 & 0x9000000) != 0)
    return 1;
  return (v2 >> 23) & 1;
}

uint64_t GEOTimepointWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 20);
  if ((v2 & 2) != 0)
  {
    result = PBDataWriterWriteDoubleField();
    v2 = *(_BYTE *)(v1 + 20);
    if ((v2 & 4) == 0)
    {
LABEL_3:
      if ((v2 & 1) == 0)
        return result;
      return PBDataWriterWriteDoubleField();
    }
  }
  else if ((*(_BYTE *)(result + 20) & 4) == 0)
  {
    goto LABEL_3;
  }
  result = PBDataWriterWriteInt32Field();
  if ((*(_BYTE *)(v1 + 20) & 1) != 0)
    return PBDataWriterWriteDoubleField();
  return result;
}

os_unfair_lock_s *GEORouteAttributesIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteAttributesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 44);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188ECAE2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimepointEquals(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_188ECBE4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECC144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteIncidentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOLatLng *v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  void *v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  int v117;
  int v118;
  void *v119;
  int v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 152);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D40), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D50), v14)))+ ((v12 >> 11) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 5;
        v20 = v19 | v11;
        v122 = v19 & ~(_BYTE)v11 | v9;
        v123 = v8;
        v125 = v19 | v11 | v122;
        if ((((v19 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v126 = (v21 == 0) | v20;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v124 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v23))
      goto LABEL_216;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_216:
      v121 = 1;
      goto LABEL_217;
    }
    v35 = v27 >> 3;
    v36 = v20;
    if ((v126 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_156;
        if ((*(_BYTE *)(a1 + 154) & 1) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_238;
          v41 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            v42 = 64;
            goto LABEL_154;
          }
          goto LABEL_237;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_238;
        v115 = (int)(*(_DWORD *)(a1 + 152) << 15) >> 31;
        goto LABEL_206;
      case 2:
        if (!v36)
          goto LABEL_156;
        if ((*(_BYTE *)(a1 + 153) & 0x40) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 48;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_238;
        v115 = (int)(*(_DWORD *)(a1 + 152) << 17) >> 31;
        goto LABEL_206;
      case 3:
        if (!v36)
          goto LABEL_156;
        if ((*(_BYTE *)(a1 + 153) & 0x80) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 56;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_238;
        v115 = (int)(*(_DWORD *)(a1 + 152) << 16) >> 31;
        goto LABEL_206;
      case 4:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x80u;
        while (2)
        {
          v51 = *v22;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v32 = v49++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v50) = 0;
LABEL_161:
        v112 = 140;
        goto LABEL_191;
      case 5:
        if (!v36)
          goto LABEL_156;
        if ((*(_BYTE *)(a1 + 154) & 4) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 88;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_238;
        v115 = (int)(*(_DWORD *)(a1 + 152) << 13) >> 31;
        goto LABEL_206;
      case 6:
        if (!v36)
          goto LABEL_156;
        if ((*(_BYTE *)(a1 + 153) & 0x20) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = 32;
LABEL_70:
          v55 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;
          goto LABEL_155;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_238;
        v115 = (int)(*(_DWORD *)(a1 + 152) << 18) >> 31;
        goto LABEL_206;
      case 7:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        *(_DWORD *)(a1 + 152) |= 2u;
        v56 = *v22;
        v57 = *(_QWORD *)(v3 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && (v58 = v57 + 8, v57 + 8 <= *(_QWORD *)(v3 + *v6)))
        {
          v59 = *(_QWORD *)(*(_QWORD *)(v3 + *v24) + v57);
          *(_QWORD *)(v3 + v56) = v58;
        }
        else
        {
          v59 = 0;
          *(_BYTE *)(v3 + *v23) = 1;
        }
        v116 = 80;
        goto LABEL_214;
      case 8:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        *(_DWORD *)(a1 + 152) |= 1u;
        v60 = *v22;
        v61 = *(_QWORD *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && (v62 = v61 + 8, v61 + 8 <= *(_QWORD *)(v3 + *v6)))
        {
          v59 = *(_QWORD *)(*(_QWORD *)(v3 + *v24) + v61);
          *(_QWORD *)(v3 + v60) = v62;
        }
        else
        {
          v59 = 0;
          *(_BYTE *)(v3 + *v23) = 1;
        }
        v116 = 40;
        goto LABEL_214;
      case 9:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        *(_DWORD *)(a1 + 152) |= 4u;
        v63 = *v22;
        v64 = *(_QWORD *)(v3 + v63);
        if (v64 <= 0xFFFFFFFFFFFFFFF7 && (v65 = v64 + 8, v64 + 8 <= *(_QWORD *)(v3 + *v6)))
        {
          v59 = *(_QWORD *)(*(_QWORD *)(v3 + *v24) + v64);
          *(_QWORD *)(v3 + v63) = v65;
        }
        else
        {
          v59 = 0;
          *(_BYTE *)(v3 + *v23) = 1;
        }
        v116 = 96;
LABEL_214:
        *(_QWORD *)(a1 + v116) = v59;
        goto LABEL_215;
      case 10:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v66 = 0;
        v67 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x20u;
        while (2)
        {
          v68 = *v22;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v50 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v32 = v67++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v50) = 0;
LABEL_165:
        v112 = 132;
        goto LABEL_191;
      case 11:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v72 = 0;
        v73 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x10u;
        while (2)
        {
          v74 = *v22;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v50 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v32 = v73++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v50) = 0;
LABEL_169:
        v112 = 128;
        goto LABEL_191;
      case 12:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v78 = 0;
        v79 = 0;
        v80 = 0;
        *(_DWORD *)(a1 + 152) |= 0x200u;
        while (2)
        {
          v81 = *v22;
          v82 = *(_QWORD *)(v3 + v81);
          v83 = v82 + 1;
          if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              v32 = v79++ >= 9;
              if (v32)
              {
                v80 = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v80 = 0;
LABEL_173:
        v113 = v80 != 0;
        v114 = 148;
        goto LABEL_186;
      case 13:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v85 = 0;
        v86 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x40u;
        while (2)
        {
          v87 = *v22;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v50 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              v32 = v86++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v50) = 0;
LABEL_177:
        v112 = 136;
        goto LABEL_191;
      case 14:
        if (!v36)
          goto LABEL_156;
        if ((*(_BYTE *)(a1 + 154) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_238;
          v115 = (int)(*(_DWORD *)(a1 + 152) << 14) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_238;
        v41 = objc_alloc_init(GEORestrictionInfo);
        if (!GEORestrictionInfoReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_237;
        PBReaderRecallMark();
        v42 = 72;
        goto LABEL_154;
      case 15:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v91 = 0;
        v92 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x100u;
        while (2)
        {
          v93 = *v22;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v50 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              v32 = v92++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v50) = 0;
LABEL_181:
        v112 = 144;
        goto LABEL_191;
      case 16:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v97 = 0;
        v98 = 0;
        v99 = 0;
        *(_DWORD *)(a1 + 152) |= 0x400u;
        while (2)
        {
          v100 = *v22;
          v101 = *(_QWORD *)(v3 + v100);
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v101);
            *(_QWORD *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              v32 = v98++ >= 9;
              if (v32)
              {
                v99 = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v99 = 0;
LABEL_185:
        v113 = v99 != 0;
        v114 = 149;
LABEL_186:
        *(_BYTE *)(a1 + v114) = v113;
        goto LABEL_215;
      case 17:
        if (!v36 || (*(_BYTE *)(a1 + 154) & 8) != 0)
          goto LABEL_156;
        PBReaderReadString();
        v104 = (void *)objc_claimAutoreleasedReturnValue();
        if (v104)
          -[GEORouteIncident _addNoFlagsUserReportId:](a1, v104);

        goto LABEL_207;
      case 18:
        if ((v123 & 1) == 0)
          goto LABEL_156;
        v105 = 0;
        v106 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 152) |= 8u;
        while (2)
        {
          v107 = *v22;
          v108 = *(_QWORD *)(v3 + v107);
          v109 = v108 + 1;
          if (v108 == -1 || v109 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v110 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v108);
            *(_QWORD *)(v3 + v107) = v109;
            v50 |= (unint64_t)(v110 & 0x7F) << v105;
            if (v110 < 0)
            {
              v105 += 7;
              v32 = v106++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v50) = 0;
LABEL_190:
        v112 = 124;
LABEL_191:
        *(_DWORD *)(a1 + v112) = v50;
        goto LABEL_215;
      case 19:
        if (!v36)
          goto LABEL_156;
        if ((*(_BYTE *)(a1 + 153) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_238;
          v115 = (int)(*(_DWORD *)(a1 + 152) << 19) >> 31;
LABEL_206:
          v7 += v115;
LABEL_207:
          v20 = v124;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_215:
          if (!(v125 & 1 | (v7 != 0)))
            goto LABEL_216;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_238;
        v41 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v42 = 24;
LABEL_154:
          v55 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;
LABEL_155:

          --v7;
          goto LABEL_207;
        }
LABEL_237:

LABEL_238:
        v121 = 0;
        v20 = v124;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_217:
        if ((v122 & 1) != 0)
LABEL_218:
          *(_DWORD *)(a1 + 152) |= 0x800u;
        if (v20 & 1 | ((v121 & 1) == 0))
        {
          *(_DWORD *)(a1 + 152) |= 0x10000u;
          *(_DWORD *)(a1 + 152) |= 0x4000u;
          *(_DWORD *)(a1 + 152) |= 0x8000u;
          *(_DWORD *)(a1 + 152) |= 0x40000u;
          *(_DWORD *)(a1 + 152) |= 0x2000u;
          *(_DWORD *)(a1 + 152) |= 0x20000u;
          *(_DWORD *)(a1 + 152) |= 0x80000u;
          *(_DWORD *)(a1 + 152) |= 0x1000u;
        }
        else if (v21)
        {
          while (1)
          {
            v117 = *v21++;
            v118 = 0x10000;
            switch(v117)
            {
              case 0:
                goto LABEL_231;
              case 1:
                goto LABEL_230;
              case 2:
                v118 = 0x4000;
                goto LABEL_230;
              case 3:
                v118 = 0x8000;
                goto LABEL_230;
              case 5:
                v118 = 0x40000;
                goto LABEL_230;
              case 6:
                v118 = 0x2000;
                goto LABEL_230;
              case 14:
                v118 = 0x20000;
                goto LABEL_230;
              case 17:
                v118 = 0x80000;
                goto LABEL_230;
              case 19:
                v118 = 4096;
LABEL_230:
                *(_DWORD *)(a1 + 152) |= v118;
                break;
              default:
                continue;
            }
          }
        }
LABEL_231:
        if (v121)
        {
          v3 = *(_BYTE *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_235:
          v119 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_235;
        }
        return v3;
      default:
        if ((v122 & 1) == 0 || (*(_BYTE *)(a1 + 153) & 8) != 0)
        {
LABEL_156:
          v111 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v20 = v124;
          if ((v111 & 1) == 0)
          {
            v121 = 0;
            goto LABEL_217;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v20 = v124;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v121 = 0;
            goto LABEL_218;
          }
        }
        goto LABEL_215;
    }
  }
}

void sub_188ECD240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECD388(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECD860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECD9A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECE19C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECE448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECE7FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ECFD10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteIncidentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteIncidentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteIncidentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteIncidentReadAllFrom_initialTag;
  Specified = GEORouteIncidentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_188ECFED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteIncidentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteIncidentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188ECFF38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED0398(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteIncidentIsDirty(uint64_t a1)
{
  int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v2 = *(_DWORD *)(a1 + 152);
  if ((v2 & 0x15E000) != 0)
    return 1;
  if ((v2 & 0x20000) != 0)
  {
    if ((GEORestrictionInfoIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 152);
  }
  if ((v2 & 0x80000) != 0)
    return 1;
  if ((v2 & 0x1000) != 0)
    return (uint64_t)GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  else
    return 0;
}

os_unfair_lock_s *GEORouteIncidentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteIncidentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188ED0CE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED1750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED1A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFCFFFEFFFDFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 76) & 1)+ ((*(_BYTE *)(a1 + 76) & 0x20) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_85;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_85:
      v53 = 1;
      goto LABEL_86;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_105;
          v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = 40;
            goto LABEL_65;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v48 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_82;
      case 2:
        if (!v35)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 76) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          v48 = *(_BYTE *)(a1 + 76) << 6;
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_104;
        PBReaderRecallMark();
        v41 = 24;
        goto LABEL_65;
      case 3:
        if (!v35)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          v48 = 32 * *(_BYTE *)(a1 + 76);
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_104;
        PBReaderRecallMark();
        v41 = 32;
        goto LABEL_65;
      case 4:
        if (!v35)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          v48 = 8 * *(_BYTE *)(a1 + 76);
LABEL_82:
          v7 += v48 >> 7;
LABEL_83:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v40 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 48;
LABEL_65:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
LABEL_69:

          --v7;
          goto LABEL_83;
        }
LABEL_104:

LABEL_105:
        v53 = 0;
        v54 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
        if ((v55 & 1) != 0)
LABEL_88:
          *(_BYTE *)(a1 + v54[657]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(_BYTE *)(a1 + v54[657]) |= 8u;
          *(_BYTE *)(a1 + v54[657]) |= 2u;
          *(_BYTE *)(a1 + v54[657]) |= 4u;
          *(_BYTE *)(a1 + v54[657]) |= 0x10u;
          *(_BYTE *)(a1 + v54[657]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            v49 = *v20++;
            v50 = 8;
            switch(v49)
            {
              case 0:
                goto LABEL_98;
              case 1:
                goto LABEL_97;
              case 2:
                v50 = 2;
                goto LABEL_97;
              case 3:
                v50 = 4;
                goto LABEL_97;
              case 4:
                v50 = 16;
                goto LABEL_97;
              case 5:
                v50 = 32;
LABEL_97:
                *(_BYTE *)(a1 + v54[657]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_98:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v58)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if (!v35)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v46;
          goto LABEL_69;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v48 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_82;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
        {
LABEL_70:
          v47 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
LABEL_86:
            v54 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_88;
          }
        }
LABEL_84:
        if (!(v56 & 1 | (v7 != 0)))
          goto LABEL_85;
        continue;
    }
  }
}

void sub_188ED2380(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED24D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED2628(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED2A7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED2B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteInformationCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEORouteInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteInformationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteInformationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteInformationReadAllFrom_initialTag;
  Specified = GEORouteInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORouteInformationCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188ED306C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED3248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteInformationIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int8 *)(a1 + 76);
  if ((v2 & 0x40) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 76);
  }
  if ((v2 & 2) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 76);
  }
  if ((v2 & 4) == 0)
    goto LABEL_11;
  if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 76);
LABEL_11:
  if ((v2 & 0x10) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 76);
  }
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEORouteInformationIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteInformationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188ED3538(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteLegRangeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 18)
          break;
        if ((v10 >> 3) == 17)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORouteLegRange__startValidDistanceOffsetCm;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORouteLegRange__startValidDistanceOffsetCm;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEORouteLegRange__startValidDistanceOffsetCm;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEORouteLegRange__endValidDistanceOffsetCm;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEORouteLegRange__endValidDistanceOffsetCm;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEORouteLegRange__endValidDistanceOffsetCm;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188ED3FE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteLegRangeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteLegRangeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188ED4048(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED47D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteLineStyleInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const __int16 *v12;
  uint16x4_t v13;
  int16x4_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  GEOStyleAttributes *v62;
  uint64_t v63;
  void *v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  __int16 v74;
  int v75;
  __int16 v76;
  void *v77;
  int v79;
  int *v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const __int16 *)(a1 + 76);
  v13 = (uint16x4_t)vld1_dup_s16(v12);
  v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFCFFFAFFF9FFFBLL), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  v15 = v14.i32[0];
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 1;
        v81 = v19 & ~(_BYTE)v11 | v9;
        v82 = v8;
        v83 = v19 | v11 | v81;
        if ((((v19 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v84 = (v20 == 0) | v19 | v11;
        v85 = v19 | v11;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_119;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_119:
      v79 = 1;
      goto LABEL_120;
    }
    v34 = v26 >> 3;
    v35 = v85;
    if ((v84 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v82 & 1) == 0)
          goto LABEL_93;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (1)
        {
          v43 = *v21;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_96;
          v40 += 7;
          v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_98;
          }
        }
        *(_BYTE *)(v3 + *v22) = 1;
LABEL_96:
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v42) = 0;
LABEL_98:
        v73 = 64;
        goto LABEL_107;
      case 2:
        if ((v82 & 1) == 0)
          goto LABEL_93;
        v50 = 0;
        v51 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          v52 = *v21;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v42 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v31 = v51++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v42) = 0;
LABEL_102:
        v73 = 68;
        goto LABEL_107;
      case 3:
        if ((v82 & 1) == 0)
          goto LABEL_93;
        v56 = 0;
        v57 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          v58 = *v21;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v42 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v31 = v57++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v42) = 0;
LABEL_106:
        v73 = 60;
LABEL_107:
        *(_DWORD *)(a1 + v73) = v42;
        goto LABEL_118;
      case 4:
        if (!v35)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v74 = *(_WORD *)(a1 + 76) << 8;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v62 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_136;
        PBReaderRecallMark();
        v63 = 40;
        goto LABEL_79;
      case 5:
        if (!v35)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v74 = *(_WORD *)(a1 + 76) << 10;
LABEL_116:
          v7 += v74 >> 15;
LABEL_117:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v62 = objc_alloc_init(GEOLabelInfo);
        if (GEOLabelInfoReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v63 = 24;
LABEL_79:
          v64 = *(void **)(a1 + v63);
          *(_QWORD *)(a1 + v63) = v62;

          --v7;
          goto LABEL_117;
        }
LABEL_136:

LABEL_137:
        v79 = 0;
        v80 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_121:
        if ((v81 & 1) != 0)
LABEL_122:
          *(_WORD *)(a1 + v80[664]) |= 0x10u;
        if (v85 & 1 | ((v79 & 1) == 0))
        {
          *(_WORD *)(a1 + v80[664]) |= 0x80u;
          *(_WORD *)(a1 + v80[664]) |= 0x20u;
          *(_WORD *)(a1 + v80[664]) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            v75 = *v20++;
            v76 = 128;
            switch(v75)
            {
              case 0:
                goto LABEL_130;
              case 4:
                goto LABEL_129;
              case 5:
                v76 = 32;
                goto LABEL_129;
              case 7:
                v76 = 64;
LABEL_129:
                *(_WORD *)(a1 + v80[664]) |= v76;
                break;
              default:
                continue;
            }
          }
        }
LABEL_130:
        if (v79)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if ((v85 & 1) != 0)
        {
          v77 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v82 & 1) == 0)
          goto LABEL_93;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          v68 = *v21;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v31 = v66++ >= 9;
              if (v31)
              {
                v67 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v67 = 0;
LABEL_111:
        *(_BYTE *)(a1 + 72) = v67 != 0;
        goto LABEL_118;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 76) & 0x40) != 0)
          goto LABEL_93;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v62 = objc_alloc_init(GEOLaneChangeInfo);
        if (!GEOLaneChangeInfoReadAllFrom((uint64_t)v62, (void *)v3))
          goto LABEL_136;
        PBReaderRecallMark();
        -[GEORouteLineStyleInfo _addNoFlagsLaneChangeInfo:](a1, v62);

        goto LABEL_117;
      default:
        if ((v81 & 1) == 0 || (*(_WORD *)(a1 + 76) & 0x10) != 0)
        {
LABEL_93:
          v72 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v72 & 1) == 0)
          {
            v79 = 0;
LABEL_120:
            v80 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_121;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v48 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v47;

          }
          v49 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v49)
          {
            v79 = 0;
            v80 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_122;
          }
        }
LABEL_118:
        if (!(v83 & 1 | (v7 != 0)))
          goto LABEL_119;
        continue;
    }
  }
}

void sub_188ED5214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED542C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED6194(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORouteLineStyleInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEORouteLineStyleInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteLineStyleInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteLineStyleInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteLineStyleInfoReadAllFrom_initialTag;
  Specified = GEORouteLineStyleInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORouteLineStyleInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188ED6448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteLineStyleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteLineStyleInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188ED64A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED678C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteLineStyleInfoIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int16 *)(a1 + 76);
  if ((v2 & 0x180) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOLabelInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 76);
  }
  return (v2 >> 6) & 1;
}

os_unfair_lock_s *GEORouteLineStyleInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteLineStyleInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188ED6D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED72AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED7610(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteNameReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEONameInfo *v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  int v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v58 = v17 & ~(_BYTE)v12 | v10;
        v59 = v17 | v12 | v58;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v60 = (v18 == 0) | v17 | v12;
        v61 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_75;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_75:
      v56 = 1;
      goto LABEL_76;
    }
    v32 = v24 >> 3;
    v33 = v61;
    if ((v60 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
      break;
    if ((_DWORD)v32 == 2)
    {
      if ((v8 & 1) == 0)
        goto LABEL_65;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v43 = *v19;
        v44 = *(_QWORD *)(v3 + v43);
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v7))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v44);
        *(_QWORD *)(v3 + v43) = v45;
        v42 |= (unint64_t)(v46 & 0x7F) << v40;
        if ((v46 & 0x80) == 0)
          goto LABEL_68;
        v40 += 7;
        v29 = v41++ >= 9;
        if (v29)
        {
          LODWORD(v42) = 0;
          goto LABEL_70;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_68:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v42) = 0;
LABEL_70:
      *(_DWORD *)(a1 + 52) = v42;
    }
    else
    {
      if ((_DWORD)v32 == 1)
      {
        if (!v33)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 56) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_95;
          v9 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_95;
          v38 = objc_alloc_init(GEONameInfo);
          if (!GEONameInfoReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
            goto LABEL_94;
          PBReaderRecallMark();
          v39 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v38;

          --v9;
        }
        goto LABEL_73;
      }
      if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
        goto LABEL_65;
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      v7 = (int *)MEMORY[0x1E0D82BD8];
      if (!v49)
      {
        v56 = 0;
        v57 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        goto LABEL_77;
      }
    }
LABEL_74:
    if (!(v59 & 1 | (v9 != 0)))
      goto LABEL_75;
  }
  if (!v33 || (*(_BYTE *)(a1 + 56) & 8) != 0)
  {
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v56 = 0;
      goto LABEL_76;
    }
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_95;
  v38 = objc_alloc_init(GEORouteLegRange);
  if (GEORouteLegRangeReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEORouteName _addNoFlagsNameRange:](a1, v38);

LABEL_73:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_74;
  }
LABEL_94:

LABEL_95:
  v56 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
  v57 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v58 & 1) == 0)
    goto LABEL_78;
LABEL_77:
  *(_BYTE *)(a1 + v57[822]) |= 2u;
LABEL_78:
  if (v61 & 1 | ((v56 & 1) == 0))
  {
    *(_BYTE *)(a1 + v57[822]) |= 4u;
    *(_BYTE *)(a1 + v57[822]) |= 8u;
    goto LABEL_88;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v52 = *v18++;
        v51 = v52;
        if (v52 == 1)
          break;
        if (v51 == 3)
        {
          v53 = 8;
          goto LABEL_87;
        }
        if (!v51)
          goto LABEL_88;
      }
      v53 = 4;
LABEL_87:
      *(_BYTE *)(a1 + v57[822]) |= v53;
      continue;
    }
  }
LABEL_88:
  if (v56)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v61 & 1) != 0)
  {
    v54 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188ED7E20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED884C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORouteNameCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEORouteNameReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteNameReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteNameReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteNameReadAllFrom_initialTag;
  Specified = GEORouteNameReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORouteNameCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188ED8AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteNameReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteNameReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188ED8B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED8DAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteNameIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 56);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if (GEONameInfoIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 56);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEORouteNameIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORouteNameIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188ED9228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED95BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188ED98F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORoutePlanningInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEORouteInformation *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  char v46;
  __int16 v47;
  int v48;
  __int16 v49;
  void *v50;
  int v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(unsigned __int16 *)(a1 + 100);
  v12 = ((v11 >> 7) & 1)
      + (v11 & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFFDFFFCFFFAFFFBLL), (int8x8_t)0x1000100010001))+ ((v11 >> 2) & 1)+ ((v11 >> 1) & 1)+ ((v11 >> 8) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 5;
        v17 = v16 & ~(_BYTE)v10 | v8;
        v18 = v16 | v10;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v8;
LABEL_8:
        v14 = v9;
        v15 = v10;
LABEL_10:
        ++v6;
        v8 = v13;
        v9 = v14;
        v10 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    v23 = (int *)MEMORY[0x1E0D82BD8];
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) || *(_BYTE *)(v3 + *v21))
      goto LABEL_107;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v23))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_107:
      v52 = 1;
      goto LABEL_108;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_129;
          v40 = objc_alloc_init(GEORouteInformation);
          if (GEORouteInformationReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v41 = 64;
            goto LABEL_85;
          }
          goto LABEL_128;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_129;
        v47 = *(_WORD *)(a1 + 100) << 9;
        goto LABEL_104;
      case 2:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v47 = *(_WORD *)(a1 + 100) << 10;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        v41 = 56;
        goto LABEL_85;
      case 3:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v47 = *(_WORD *)(a1 + 100) << 13;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        v41 = 32;
        goto LABEL_85;
      case 4:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v47 = *(_WORD *)(a1 + 100) << 14;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v40 = objc_alloc_init(GEOAdvisoriesInfo);
        if (!GEOAdvisoriesInfoReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        v41 = 24;
        goto LABEL_85;
      case 5:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v47 = *(_WORD *)(a1 + 100) << 7;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        v41 = 80;
        goto LABEL_85;
      case 6:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v47 = *(_WORD *)(a1 + 100) << 11;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v40 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        v41 = 48;
        goto LABEL_85;
      case 7:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v47 = *(_WORD *)(a1 + 100) << 8;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v40 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        v41 = 72;
        goto LABEL_85;
      case 8:
        if (!v35)
          goto LABEL_86;
        if ((*(_WORD *)(a1 + 100) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v47 = *(_WORD *)(a1 + 100) << 12;
LABEL_104:
          v6 += v47 >> 15;
LABEL_105:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
          if (!(v54 & 1 | (v6 != 0)))
            goto LABEL_107;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v40 = objc_alloc_init(GEOLabelAction);
        if (GEOLabelActionReadAllFrom((uint64_t)v40, (void *)v3))
        {
          PBReaderRecallMark();
          v41 = 40;
LABEL_85:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v6;
          goto LABEL_105;
        }
LABEL_128:

LABEL_129:
        v52 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
        if ((v53 & 1) != 0)
LABEL_109:
          *(_WORD *)(a1 + 100) |= 1u;
        if (v56 || (v52 & 1) == 0)
        {
          *(_WORD *)(a1 + 100) |= 0x40u;
          *(_WORD *)(a1 + 100) |= 0x20u;
          *(_WORD *)(a1 + 100) |= 0x10u;
          *(_WORD *)(a1 + 100) |= 8u;
          *(_WORD *)(a1 + 100) |= 4u;
          *(_WORD *)(a1 + 100) |= 2u;
          *(_WORD *)(a1 + 100) |= 0x100u;
          *(_WORD *)(a1 + 100) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            v48 = *v19++;
            v49 = 64;
            switch(v48)
            {
              case 0:
                goto LABEL_122;
              case 1:
                goto LABEL_121;
              case 2:
                v49 = 32;
                goto LABEL_121;
              case 3:
                v49 = 4;
                goto LABEL_121;
              case 4:
                v49 = 2;
                goto LABEL_121;
              case 5:
                v49 = 256;
                goto LABEL_121;
              case 6:
                v49 = 16;
                goto LABEL_121;
              case 7:
                v49 = 128;
                goto LABEL_121;
              case 8:
                v49 = 8;
LABEL_121:
                *(_WORD *)(a1 + 100) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_122:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v56)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v53 & 1) == 0 || (*(_WORD *)(a1 + 100) & 1) != 0)
        {
LABEL_86:
          v46 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_108;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v52 = 0;
            goto LABEL_109;
          }
        }
        goto LABEL_106;
    }
  }
}

void sub_188EDA39C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDA4E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDA624(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDA768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDA8AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDA9EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDAB2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDB5FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORoutePlanningInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  -[GEORouteInformation readAll:](*(_QWORD *)(a1 + 64), 1);
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 80), "readAll:", 1);
  return objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
}

unint64_t GEORoutePlanningInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORoutePlanningInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORoutePlanningInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORoutePlanningInfoReadAllFrom_initialTag;
  Specified = GEORoutePlanningInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORoutePlanningInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188EDB834(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORoutePlanningInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORoutePlanningInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EDB894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutePlanningInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORouteInformationIsValid(a1))
            goto LABEL_40;
          goto LABEL_43;
        case 2u:
        case 3u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_43;
          goto LABEL_40;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoriesInfoIsValid(a1))
            goto LABEL_43;
          goto LABEL_40;
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_43;
          goto LABEL_40;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLabelActionIsValid(a1))
            goto LABEL_43;
LABEL_40:
          PBReaderRecallMark();
          goto LABEL_41;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_41:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_42;
          break;
      }
    }
  }
LABEL_42:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188EDBD70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORoutePlanningInfoIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 100);
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEORouteInformationIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x20) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 2) == 0)
    goto LABEL_18;
  if ((GEOAdvisoriesInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 100);
LABEL_18:
  if ((v2 & 0x100) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x80) != 0)
    return (uint64_t)GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 72));
  else
    return 0;
}

os_unfair_lock_s *GEORoutePlanningInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORoutePlanningInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EDC2BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDC754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDCC74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteTrafficDetailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v58 = v15 | v8;
        v59 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v60 = (v17 == 0) | v16;
        v61 = v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_61;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_64;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_66;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_64:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_66:
        *(_DWORD *)(a1 + 60) = v39;
        goto LABEL_74;
      case 2:
        if (!v32)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 40;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_92;
        v51 = 8 * *(_BYTE *)(a1 + 64);
        goto LABEL_73;
      case 3:
        if (!v32)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_92;
        v51 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_73;
      case 4:
        if (!v32)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 32;
LABEL_60:
          v49 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v51 = 16 * *(_BYTE *)(a1 + 64);
LABEL_73:
          v10 += v51 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_74;
        }
LABEL_92:
        v56 = 0;
        v57 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
        if ((v58 & 1) != 0)
LABEL_78:
          *(_BYTE *)(a1 + v57[667]) |= 2u;
        if (v61 || (v56 & 1) == 0)
        {
          *(_BYTE *)(a1 + v57[667]) |= 0x10u;
          *(_BYTE *)(a1 + v57[667]) |= 4u;
          *(_BYTE *)(a1 + v57[667]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v52 = *v17++;
            v53 = 16;
            switch(v52)
            {
              case 0:
                goto LABEL_86;
              case 2:
                goto LABEL_85;
              case 3:
                v53 = 4;
                goto LABEL_85;
              case 4:
                v53 = 8;
LABEL_85:
                *(_BYTE *)(a1 + v57[667]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_86:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v61)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_61:
          v50 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v56 = 0;
LABEL_76:
            v57 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_77;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_78;
          }
        }
LABEL_74:
        if (!(v59 & 1 | (v10 != 0)))
          goto LABEL_75;
        break;
    }
  }
LABEL_75:
  v56 = 1;
  goto LABEL_76;
}

void sub_188EDD3F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDD530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDDCD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteTrafficDetailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteTrafficDetailReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteTrafficDetailReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteTrafficDetailReadAllFrom_initialTag;
  Specified = GEORouteTrafficDetailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188EDDE60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteTrafficDetailReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteTrafficDetailReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EDDEC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteTrafficDetailIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_40;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_35;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_35;
        case 2u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_40;
        case 3u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_40;
        case 4u:
          if (v15 != 2)
            goto LABEL_40;
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_40:
            v23 = 0;
            goto LABEL_39;
          }
LABEL_35:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_38;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_40;
          goto LABEL_35;
      }
    }
  }
LABEL_38:
  v23 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v23;
}

void sub_188EDE2E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteTrafficDetailIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188EDE63C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EDE944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScoreCategoryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  id v23;
  void *v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 28) |= 1u;
          v20 = *v4;
          v21 = *(_QWORD *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v22 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v22 = 0;
          }
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v24 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v23;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_33;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_33:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_188EDF134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScoreCategoryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOScoreCategoryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EDF194(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScoreCategoryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 5)
          goto LABEL_33;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (v20 = v19 + 4, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_33:
          v21 = 0;
          goto LABEL_32;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_33;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

void sub_188EDF974(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOFormattedString *v37;
  id v38;
  void *v39;
  int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  uint64_t v57;
  __int16 v58;
  int v59;
  __int16 v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFAFFFBFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 4) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1)+ ((*(_WORD *)(a1 + 92) >> 2) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v65 = v16 & ~(_BYTE)v11 | v9;
        v66 = v16 | v11 | v65;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v67 = (v17 == 0) | v16 | v11;
        v68 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_113;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_113:
      v63 = 1;
      goto LABEL_114;
    }
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_WORD *)(a1 + 92) & 0x100) != 0)
          goto LABEL_93;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v37 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        -[GEOSignGuidance _addNoFlagsSignTitle:](a1, v37);
        goto LABEL_54;
      case 2:
        if (!v32 || (*(_WORD *)(a1 + 92) & 0x80) != 0)
          goto LABEL_93;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v37 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        -[GEOSignGuidance _addNoFlagsSignDetail:](a1, v37);
        goto LABEL_54;
      case 3:
        if (!v32 || (*(_WORD *)(a1 + 92) & 0x20) != 0)
          goto LABEL_93;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v37 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        -[GEOSignGuidance _addNoFlagsSecondarySign:](a1, v37);
LABEL_54:

        goto LABEL_111;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_93;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          v44 = *v18;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v28 = v42++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v43) = 0;
LABEL_98:
        v57 = 84;
        goto LABEL_103;
      case 6:
        if (!v32)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v58 = *(_WORD *)(a1 + 92) << 9;
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v37 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        v48 = 48;
        goto LABEL_92;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_93;
        v49 = 0;
        v50 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v43 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v43) = 0;
LABEL_102:
        v57 = 88;
LABEL_103:
        *(_DWORD *)(a1 + v57) = v43;
        goto LABEL_112;
      case 8:
        if (!v32)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v58 = *(_WORD *)(a1 + 92) << 11;
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v37 = objc_alloc_init(GEOJunctionInfo);
        if (!GEOJunctionInfoReadAllFrom((uint64_t)v37, (void *)v3))
          goto LABEL_132;
        PBReaderRecallMark();
        v48 = 32;
        goto LABEL_92;
      case 9:
        if (!v32)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v58 = *(_WORD *)(a1 + 92) << 12;
LABEL_110:
          v7 += v58 >> 15;
LABEL_111:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
LABEL_112:
          if (!(v66 & 1 | (v7 != 0)))
            goto LABEL_113;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v37 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v48 = 24;
LABEL_92:
          v55 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v37;

          --v7;
          goto LABEL_111;
        }
LABEL_132:

LABEL_133:
        v63 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_114:
        v64 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v65 & 1) != 0)
LABEL_115:
          *(_WORD *)(a1 + v64[857]) |= 4u;
        if (v68 & 1 | ((v63 & 1) == 0))
        {
          *(_WORD *)(a1 + v64[857]) |= 0x100u;
          *(_WORD *)(a1 + v64[857]) |= 0x80u;
          *(_WORD *)(a1 + v64[857]) |= 0x20u;
          *(_WORD *)(a1 + v64[857]) |= 0x40u;
          *(_WORD *)(a1 + v64[857]) |= 0x10u;
          *(_WORD *)(a1 + v64[857]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v59 = *v17++;
            v60 = 256;
            switch(v59)
            {
              case 0:
                goto LABEL_126;
              case 1:
                goto LABEL_125;
              case 2:
                v60 = 128;
                goto LABEL_125;
              case 3:
                v60 = 32;
                goto LABEL_125;
              case 6:
                v60 = 64;
                goto LABEL_125;
              case 8:
                v60 = 16;
                goto LABEL_125;
              case 9:
                v60 = 8;
LABEL_125:
                *(_WORD *)(a1 + v64[857]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_126:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v68 & 1) != 0)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v65 & 1) == 0 || (*(_WORD *)(a1 + 92) & 4) != 0)
        {
LABEL_93:
          v56 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
            goto LABEL_114;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v38 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v39 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v38;

          }
          v40 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v40)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_115;
          }
        }
        goto LABEL_112;
    }
  }
}

void sub_188EE0604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE0938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE1788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE1940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE1A84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE3400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSignGuidanceCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v2 = a1[8];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v27;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v27 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v4);
  }

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
    }
    while (v9);
  }

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v19;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v19 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v18);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEOSignGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSignGuidanceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSignGuidanceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSignGuidanceReadAllFrom_initialTag;
  Specified = GEOSignGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOSignGuidanceCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188EE37F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSignGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EE3858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE3C44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSignGuidanceIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x3A0) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if (GEONameInfoIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x10) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_11;
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) == 0)
    {
      v2 = *(_WORD *)(a1 + 92);
LABEL_11:
      if ((v2 & 0x100) != 0)
      {
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        v5 = *(id *)(a1 + 64);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v25;
LABEL_14:
          v9 = 0;
          while (1)
          {
            if (*(_QWORD *)v25 != v8)
              objc_enumerationMutation(v5);
            if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v9)) & 1) != 0)
              goto LABEL_42;
            if (v7 == ++v9)
            {
              v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
              if (v7)
                goto LABEL_14;
              break;
            }
          }
        }

        v2 = *(_WORD *)(a1 + 92);
      }
      if ((v2 & 0x80) != 0)
      {
        v22 = 0u;
        v23 = 0u;
        v20 = 0u;
        v21 = 0u;
        v5 = *(id *)(a1 + 56);
        v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
        if (v10)
        {
          v11 = v10;
          v12 = *(_QWORD *)v21;
LABEL_24:
          v13 = 0;
          while (1)
          {
            if (*(_QWORD *)v21 != v12)
              objc_enumerationMutation(v5);
            if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v13)) & 1) != 0)
              goto LABEL_42;
            if (v11 == ++v13)
            {
              v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
              if (v11)
                goto LABEL_24;
              break;
            }
          }
        }

        v2 = *(_WORD *)(a1 + 92);
      }
      if ((v2 & 0x20) == 0)
        return 0;
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 40);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
      if (!v3)
      {
LABEL_43:

        return v3;
      }
      v14 = *(_QWORD *)v17;
LABEL_35:
      v15 = 0;
      while (1)
      {
        if (*(_QWORD *)v17 != v14)
          objc_enumerationMutation(v5);
        if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v15)) & 1) != 0)
          break;
        if (v3 == ++v15)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
          if (v3)
            goto LABEL_35;
          goto LABEL_43;
        }
      }
LABEL_42:
      v3 = 1;
      goto LABEL_43;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOSignGuidanceIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOSignGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EE45F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE4C74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE5128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScoreMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOSnapScorePoint *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  int v46;
  char v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v55 = v18;
        v53 = v19;
        v54 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_72;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_72:
      v50 = 1;
      goto LABEL_73;
    }
    v34 = v26 >> 3;
    v35 = v55;
    if ((v54 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_90;
          v40 = objc_alloc_init(GEOSnapScorePoint);
          if (GEOSnapScorePointReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v40;

            --v7;
            goto LABEL_70;
          }
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_90;
        v7 += *(unsigned __int8 *)(a1 + 68) << 27 >> 31;
        goto LABEL_70;
      case 2:
        if (!v35 || (*(_BYTE *)(a1 + 68) & 8) != 0)
          goto LABEL_66;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_90;
        v40 = objc_alloc_init(GEOSnapScorePoint);
        if (!GEOSnapScorePointReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_89;
        PBReaderRecallMark();
        -[GEOSnapScoreMetadata _addNoFlagsOriginAccessPoint:](a1, v40);
        goto LABEL_65;
      case 3:
        if (!v35 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_66;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_90;
        v40 = objc_alloc_init(GEOSnapScorePoint);
        if (!GEOSnapScorePointReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_89;
        PBReaderRecallMark();
        -[GEOSnapScoreMetadata _addNoFlagsDestinationPoint:](a1, v40);
        goto LABEL_65;
      case 4:
        if (!v35 || (*(_BYTE *)(a1 + 68) & 2) != 0)
          goto LABEL_66;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_90;
        v40 = objc_alloc_init(GEOSnapScorePoint);
        if (GEOSnapScorePointReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOSnapScoreMetadata _addNoFlagsDestinationAccessPoint:](a1, v40);
LABEL_65:

LABEL_70:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
          if (!(v53 & 1 | (v7 != 0)))
            goto LABEL_72;
          continue;
        }
LABEL_89:

LABEL_90:
        v50 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_73:
        v51 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v52 & 1) != 0)
LABEL_74:
          *(_BYTE *)(a1 + v51[870]) |= 1u;
        if (v55 || (v50 & 1) == 0)
        {
          *(_BYTE *)(a1 + v51[870]) |= 0x10u;
          *(_BYTE *)(a1 + v51[870]) |= 8u;
          *(_BYTE *)(a1 + v51[870]) |= 4u;
          *(_BYTE *)(a1 + v51[870]) |= 2u;
        }
        else if (v20)
        {
          while (1)
          {
            v46 = *v20++;
            v47 = 16;
            switch(v46)
            {
              case 0:
                goto LABEL_83;
              case 1:
                goto LABEL_82;
              case 2:
                v47 = 8;
                goto LABEL_82;
              case 3:
                v47 = 4;
                goto LABEL_82;
              case 4:
                v47 = 2;
LABEL_82:
                *(_BYTE *)(a1 + v51[870]) |= v47;
                break;
              default:
                continue;
            }
          }
        }
LABEL_83:
        if (v50)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v55)
        {
          v48 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_66:
          v45 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
            v50 = 0;
            goto LABEL_73;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v50 = 0;
            v51 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_74;
          }
        }
        goto LABEL_71;
    }
  }
}

void sub_188EE58A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE5A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE5BE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE637C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSnapScoreMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[6], "readAll:", 1);
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[3];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOSnapScoreMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSnapScoreMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSnapScoreMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSnapScoreMetadataReadAllFrom_initialTag;
  Specified = GEOSnapScoreMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOSnapScoreMetadataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188EE6C80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSnapScoreMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOSnapScorePointIsValid(a1))
            goto LABEL_26;
          PBReaderRecallMark();
          goto LABEL_24;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_26:
            PBReaderRecallMark();
            return 0;
          }
LABEL_24:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_25;
          break;
      }
    }
  }
LABEL_25:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOSnapScorePointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOSnapScoreSegmentIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188EE73C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSnapScoreMetadataIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
  {
LABEL_5:
    if ((v2 & 0xE) != 0)
      return 1;
    if ((v2 & 8) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 40);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v25;
LABEL_11:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v8)
            objc_enumerationMutation(v5);
          if ((GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_39;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
            if (v7)
              goto LABEL_11;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 68);
    }
    if ((v2 & 4) != 0)
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v5 = *(id *)(a1 + 32);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v21;
LABEL_21:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v21 != v12)
            objc_enumerationMutation(v5);
          if ((GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v13)) & 1) != 0)
            goto LABEL_39;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
            if (v11)
              goto LABEL_21;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 68);
    }
    if ((v2 & 2) == 0)
      return 0;
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v5 = *(id *)(a1 + 24);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
    if (!v3)
    {
LABEL_40:

      return v3;
    }
    v14 = *(_QWORD *)v17;
LABEL_32:
    v15 = 0;
    while (1)
    {
      if (*(_QWORD *)v17 != v14)
        objc_enumerationMutation(v5);
      if ((GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v15)) & 1) != 0)
        break;
      if (v3 == ++v15)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
        if (v3)
          goto LABEL_32;
        goto LABEL_40;
      }
    }
LABEL_39:
    v3 = 1;
    goto LABEL_40;
  }
  if ((GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) == 0)
  {
    v2 = *(_BYTE *)(a1 + 68);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOSnapScoreMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOSnapScoreMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EE7CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE857C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScorePointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOLatLng *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  int v49;
  int *v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v51 = v17;
        v52 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v53 = (v19 == 0) | v18;
        v54 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_62;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      v49 = 1;
      goto LABEL_63;
    }
    v33 = v25 >> 3;
    v34 = v54;
    if ((v53 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (!v34)
        goto LABEL_56;
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_81;
        v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_80;
        PBReaderRecallMark();
        v40 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v39;

        --v8;
      }
      goto LABEL_60;
    }
    if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_56;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v49 = 0;
      v50 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v34 || (*(_BYTE *)(a1 + 52) & 2) != 0)
  {
LABEL_56:
    v44 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v44 & 1) == 0)
    {
      v49 = 0;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v39 = objc_alloc_init(GEOSnapScoreSegment);
  if (GEOSnapScoreSegmentReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOSnapScorePoint _addNoFlagsCandidate:](a1, v39);

LABEL_60:
    v21 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_80:

LABEL_81:
  v49 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_63:
  v50 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
  if ((v51 & 1) == 0)
    goto LABEL_65;
LABEL_64:
  *(_BYTE *)(a1 + v50[879]) |= 1u;
LABEL_65:
  if (v54 || (v49 & 1) == 0)
  {
    *(_BYTE *)(a1 + v50[879]) |= 4u;
    *(_BYTE *)(a1 + v50[879]) |= 2u;
    goto LABEL_74;
  }
  if (v19)
  {
    while (1)
    {
      v46 = *v19++;
      v45 = v46;
      if (v46 == 1)
        break;
      if (v45 == 2)
      {
LABEL_70:
        *(_BYTE *)(a1 + v50[879]) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v49)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v54)
  {
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188EE8BE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EE955C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSnapScorePointCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOSnapScorePointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSnapScorePointReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSnapScorePointReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSnapScorePointReadAllFrom_initialTag;
  Specified = GEOSnapScorePointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOSnapScorePointCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188EE9800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScorePointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSnapScorePointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EE9860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSnapScoreSegmentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_47;
          v18 = 0;
          do
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            {
              v14 = *v4;
              goto LABEL_43;
            }
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if ((v22 & 0x80000000) == 0)
              break;
          }
          while (v18++ <= 8);
          goto LABEL_44;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_47;
          goto LABEL_38;
        case 3u:
          if (v16 != 5)
            goto LABEL_47;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || (v26 = v25 + 4, v26 > *(_QWORD *)&a1[*v3]))
LABEL_43:
            a1[v14] = 1;
          else
            *(_QWORD *)&a1[v24] = v26;
          goto LABEL_44;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOScoreCategoryIsValid(a1))
            goto LABEL_47;
LABEL_38:
          PBReaderRecallMark();
          goto LABEL_44;
        case 5u:
          if (v16 == 2)
            goto LABEL_40;
          goto LABEL_47;
        default:
LABEL_40:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_44:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          break;
      }
    }
  }
LABEL_45:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_188EE9D4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSnapScorePointIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOSnapScoreSegmentIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOSnapScorePointIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOSnapScorePointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EEA360(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EEA65C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EEAA00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScoreSegmentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  GEOLatLng *v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_84;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_84:
      v58 = 1;
      goto LABEL_85;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_72;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_75;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            v40 = 0;
            goto LABEL_77;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_75:
        if (*(_BYTE *)(v3 + *v20))
          v40 = 0;
LABEL_77:
        *(_QWORD *)(a1 + 40) = v40;
        goto LABEL_83;
      case 2:
        if (!v33)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v8 += *(unsigned __int8 *)(a1 + 72) << 26 >> 31;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v48 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v48, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v48;

          --v8;
LABEL_80:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_83:
          if (!(v61 & 1 | (v8 != 0)))
            goto LABEL_84;
          continue;
        }
LABEL_100:

LABEL_101:
        v58 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        v59 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v60 & 1) != 0)
LABEL_86:
          *(_BYTE *)(a1 + v59[888]) |= 4u;
        if (v63 & 1 | ((v58 & 1) == 0))
        {
          *(_BYTE *)(a1 + v59[888]) |= 0x20u;
          *(_BYTE *)(a1 + v59[888]) |= 0x10u;
          *(_BYTE *)(a1 + v59[888]) |= 8u;
        }
        else if (v18)
        {
          while (1)
          {
            v54 = *v18++;
            v55 = 32;
            switch(v54)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 4:
                v55 = 16;
                goto LABEL_93;
              case 5:
                v55 = 8;
LABEL_93:
                *(_BYTE *)(a1 + v59[888]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_72;
        *(_BYTE *)(a1 + 72) |= 2u;
        v50 = *v19;
        v51 = *(_QWORD *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFFBLL && v51 + 4 <= *(_QWORD *)(v3 + *v7))
        {
          v52 = *(_DWORD *)(*(_QWORD *)(v3 + *v21) + v51);
          *(_QWORD *)(v3 + v50) = v51 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v52 = 0;
        }
        *(_DWORD *)(a1 + 68) = v52;
        goto LABEL_83;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 72) & 0x10) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v48 = objc_alloc_init(GEOScoreCategory);
        if (!GEOScoreCategoryReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_100;
        PBReaderRecallMark();
        -[GEOSnapScoreSegment _addNoFlagsCategoryScore:](a1, v48);
LABEL_71:

        goto LABEL_80;
      case 5:
        if (!v33 || (*(_BYTE *)(a1 + 72) & 8) != 0)
          goto LABEL_72;
        PBReaderReadString();
        v48 = (GEOLatLng *)objc_claimAutoreleasedReturnValue();
        if (v48)
          -[GEOSnapScoreSegment _addNoFlagsAttribute:](a1, v48);
        goto LABEL_71;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 4) != 0)
        {
LABEL_72:
          v53 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            v58 = 0;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_86;
          }
        }
        goto LABEL_83;
    }
  }
}

void sub_188EEB2BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EEB5F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EEC228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSnapScoreSegmentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOSnapScoreSegmentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSnapScoreSegmentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSnapScoreSegmentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSnapScoreSegmentReadAllFrom_initialTag;
  Specified = GEOSnapScoreSegmentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOSnapScoreSegmentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188EEC4CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScoreSegmentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSnapScoreSegmentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EEC52C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EEC850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSnapScoreSegmentIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188EECDFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EED348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EED68C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpokenGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  int *v20;
  _BOOL4 v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOFormattedString *v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  id v79;
  void *v80;
  int v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  int v95;
  uint64_t v96;
  int v97;
  int v98;
  __int16 v99;
  void *v100;
  char v102;
  char v103;
  int v104;
  char v105;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 84) >> 9) & 1)
      + ((*(unsigned __int16 *)(a1 + 84) >> 10) & 1)
      + (HIBYTE(*(unsigned __int16 *)(a1 + 84)) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = v8 != 0;
        v22 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_159;
        v105 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v102 = v17;
        v104 = v21 | v18 | v17;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v103 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_157;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_157:
      v22 = 1;
      goto LABEL_158;
    }
    v35 = v27 >> 3;
    v36 = v18;
    if ((v105 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36 || (*(_WORD *)(a1 + 84) & 0x200) != 0)
          goto LABEL_120;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_178;
        v41 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_177;
        PBReaderRecallMark();
        -[GEOSpokenGuidance _addNoFlagsAnnouncement:](a1, v41);
        goto LABEL_111;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 0x40u;
        while (2)
        {
          v45 = *v20;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v32 = v43++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_125:
        v96 = 76;
        goto LABEL_154;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v51 = *v20;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v32 = v50++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_129:
        v96 = 56;
        goto LABEL_154;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v55 = 0;
        v56 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          v57 = *v20;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v44 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_133:
        v96 = 52;
        goto LABEL_154;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v61 = 0;
        v62 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 0x20u;
        while (2)
        {
          v63 = *v20;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v44 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v32 = v62++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_137:
        v96 = 72;
        goto LABEL_154;
      case 6:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v67 = 0;
        v68 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 0x10u;
        while (2)
        {
          v69 = *v20;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v44 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v32 = v68++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_141:
        v96 = 68;
        goto LABEL_154;
      case 7:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v73 = 0;
        v74 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 8u;
        while (2)
        {
          v75 = *v20;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v44 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v32 = v74++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_145:
        v96 = 64;
        goto LABEL_154;
      case 9:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v82 = 0;
        v83 = 0;
        v84 = 0;
        *(_WORD *)(a1 + 84) |= 0x80u;
        while (2)
        {
          v85 = *v20;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              v32 = v83++ >= 9;
              if (v32)
              {
                v84 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v84 = 0;
LABEL_149:
        *(_BYTE *)(a1 + 80) = v84 != 0;
        goto LABEL_155;
      case 10:
        if (!v36 || (*(_WORD *)(a1 + 84) & 0x400) != 0)
          goto LABEL_120;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_178;
        v41 = objc_alloc_init(GEOTimeGap);
        if (!GEOTimeGapReadAllFrom((uint64_t)v41, (void *)v3))
        {
LABEL_177:

LABEL_178:
          v22 = 0;
          LOBYTE(v18) = v103;
          goto LABEL_158;
        }
        PBReaderRecallMark();
        -[GEOSpokenGuidance _addNoFlagsTimeGap:](a1, v41);
LABEL_111:

        LOBYTE(v18) = v103;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_155;
      case 11:
        if ((v7 & 1) == 0)
          goto LABEL_120;
        v89 = 0;
        v90 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 4u;
        while (2)
        {
          v91 = *v20;
          v92 = *(_QWORD *)(v3 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v44 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              v32 = v90++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_153:
        v96 = 60;
LABEL_154:
        *(_DWORD *)(a1 + v96) = v44;
        goto LABEL_155;
      default:
        if ((v102 & 1) != 0 && (*(_WORD *)(a1 + 84) & 0x100) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v79 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v80 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v79;

          }
          v81 = PBUnknownFieldAdd();
          LOBYTE(v18) = v103;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v81)
          {
            v22 = 0;
            goto LABEL_160;
          }
LABEL_155:
          if ((v104 & 1) == 0)
            goto LABEL_157;
LABEL_156:
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_157;
          continue;
        }
LABEL_120:
        v95 = PBReaderSkipValueWithTag();
        v23 = (int *)MEMORY[0x1E0D82BC8];
        LOBYTE(v18) = v103;
        if ((v95 & v104 & 1) != 0)
          goto LABEL_156;
        v22 = v95;
LABEL_158:
        LOBYTE(v17) = v102;
LABEL_159:
        if ((v17 & 1) != 0)
LABEL_160:
          *(_WORD *)(a1 + 84) |= 0x100u;
        if (v18 & 1 | ((v22 & 1) == 0))
        {
          *(_WORD *)(a1 + 84) |= 0x200u;
          *(_WORD *)(a1 + 84) |= 0x400u;
          goto LABEL_171;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              v98 = *v19++;
              v97 = v98;
              if (v98 == 1)
                break;
              if (v97 == 10)
              {
                v99 = 1024;
                goto LABEL_170;
              }
              if (!v97)
                goto LABEL_171;
            }
            v99 = 512;
LABEL_170:
            *(_WORD *)(a1 + 84) |= v99;
            continue;
          }
        }
LABEL_171:
        if (v22)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_175:
          v100 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_175;
        }
        return v3;
    }
  }
}

void sub_188EEE930(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EEFAB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSpokenGuidanceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOSpokenGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSpokenGuidanceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSpokenGuidanceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSpokenGuidanceReadAllFrom_initialTag;
  Specified = GEOSpokenGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOSpokenGuidanceCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188EEFDD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpokenGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSpokenGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EEFE38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeGapIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_188EF048C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpokenGuidanceIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_WORD *)(a1 + 84) & 0xE00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188EF0BB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF12FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF2694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  GEONameInfoList *v82;
  id v83;
  void *v84;
  int v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  int v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  char v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  char v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  char v178;
  unsigned int v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  char v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  char v190;
  uint64_t v191;
  BOOL v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  int v196;
  uint64_t v197;
  void *v198;
  int v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 164);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 160));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a1 + 244);
  v13 = vaddvq_s32((int32x4_t)(*(_OWORD *)&vshlq_u32((uint32x4_t)vdupq_n_s32(v12), (uint32x4_t)xmmword_189CD1D60) & __PAIR128__(0xFFFFFFC1FFFFFFC1, 0xFFFFFFC1FFFFFFC1)))
      + (BYTE3(v12) & 1)
      + ((v12 >> 33) & 1)
      + ((v12 >> 36) & 1)
      + ((v12 >> 29) & 1)
      + (BYTE4(v12) & 1)
      + ((v12 >> 34) & 1)
      + ((v12 >> 38) & 1)
      + ((v12 >> 25) & 1)
      + ((v12 >> 37) & 1)
      + ((v12 >> 35) & 1)
      + ((v12 >> 23) & 1)
      + (v12 >> 31);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 0xB;
        v18 = v17 | v11;
        v201 = v17 & ~(_BYTE)v11 | v9;
        v202 = v8;
        v204 = v17 | v11 | v201;
        if ((((v17 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v205 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v203 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_418;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_418:
      v200 = 1;
      goto LABEL_419;
    }
    v33 = v25 >> 3;
    v34 = v18;
    if ((v205 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x4000uLL;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_303;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_305;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_303:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_305:
        v191 = 228;
        goto LABEL_391;
      case 2:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v46 = 0;
        v47 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x80uLL;
        while (2)
        {
          v48 = *v20;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v41 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_309:
        v191 = 200;
        goto LABEL_391;
      case 3:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v52 = 0;
        v53 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x200uLL;
        while (2)
        {
          v54 = *v20;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v41 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_313:
        v191 = 208;
        goto LABEL_391;
      case 4:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v58 = 0;
        v59 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x100uLL;
        while (2)
        {
          v60 = *v20;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v41 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              v30 = v59++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_317:
        v191 = 204;
        goto LABEL_391;
      case 5:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v64 = 0;
        v65 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 8uLL;
        while (2)
        {
          v66 = *v20;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v41 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v30 = v65++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_321:
        v191 = 184;
        goto LABEL_391;
      case 6:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v70 = 0;
        v71 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x10uLL;
        while (2)
        {
          v72 = *v20;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v41 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v30 = v71++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_325:
        v191 = 188;
        goto LABEL_391;
      case 7:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v76 = 0;
        v77 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x400uLL;
        while (2)
        {
          v78 = *v20;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v41 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              v30 = v77++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_329:
        v191 = 212;
        goto LABEL_391;
      case 8:
        if (!v34 || (*(_BYTE *)(a1 + 248) & 2) != 0)
          goto LABEL_300;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsManeuverName:](a1, v82);
        goto LABEL_283;
      case 10:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v86 = 0;
        v87 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x40uLL;
        while (2)
        {
          v88 = *v20;
          v89 = *(_QWORD *)(v3 + v88);
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v89);
            *(_QWORD *)(v3 + v88) = v90;
            v41 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v30 = v87++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_333:
        v191 = 196;
        goto LABEL_391;
      case 11:
        if (!v34 || (*(_BYTE *)(a1 + 247) & 1) != 0)
          goto LABEL_300;
        if (!PBReaderPlaceMark())
          goto LABEL_453;
        -[GEOStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(_QWORD *)(a1 + 24) + 16 * *(_QWORD *)(a1 + 32), v3) & 1) == 0)
          goto LABEL_453;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 32);
        goto LABEL_413;
      case 12:
        if (!v34 || (*(_BYTE *)(a1 + 248) & 0x10) != 0)
          goto LABEL_300;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsSignpost:](a1, v82);
        goto LABEL_283;
      case 13:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        *(_QWORD *)(a1 + 244) |= 4uLL;
        v92 = *v20;
        v93 = *(_QWORD *)(v3 + v92);
        if (v93 <= 0xFFFFFFFFFFFFFFFBLL && v93 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v94 = *(_DWORD *)(*(_QWORD *)(v3 + *v22) + v93);
          *(_QWORD *)(v3 + v92) = v93 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v94 = 0;
        }
        *(_DWORD *)(a1 + 180) = v94;
        goto LABEL_414;
      case 16:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v95 = 0;
        v96 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x20uLL;
        while (2)
        {
          v97 = *v20;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v41 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              v30 = v96++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_337:
        v191 = 192;
        goto LABEL_391;
      case 17:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v101 = 0;
        v102 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x2000uLL;
        while (2)
        {
          v103 = *v20;
          v104 = *(_QWORD *)(v3 + v103);
          v105 = v104 + 1;
          if (v104 == -1 || v105 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v104);
            *(_QWORD *)(v3 + v103) = v105;
            v41 |= (unint64_t)(v106 & 0x7F) << v101;
            if (v106 < 0)
            {
              v101 += 7;
              v30 = v102++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_341:
        v191 = 224;
        goto LABEL_391;
      case 18:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v107 = 0;
        v108 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x1000uLL;
        while (2)
        {
          v109 = *v20;
          v110 = *(_QWORD *)(v3 + v109);
          v111 = v110 + 1;
          if (v110 == -1 || v111 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v112 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v110);
            *(_QWORD *)(v3 + v109) = v111;
            v41 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              v30 = v108++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_345:
        v191 = 220;
        goto LABEL_391;
      case 19:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 247) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 34;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        v113 = 80;
        goto LABEL_268;
      case 20:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v114 = 0;
        v115 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 244) |= 0x400000uLL;
        while (2)
        {
          v117 = *v20;
          v118 = *(_QWORD *)(v3 + v117);
          v119 = v118 + 1;
          if (v118 == -1 || v119 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v118);
            *(_QWORD *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              v30 = v115++ >= 9;
              if (v30)
              {
                v116 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v116 = 0;
LABEL_349:
        v192 = v116 != 0;
        v193 = 242;
        goto LABEL_374;
      case 21:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v121 = 0;
        v122 = 0;
        v123 = 0;
        *(_QWORD *)(a1 + 244) |= 0x200000uLL;
        while (2)
        {
          v124 = *v20;
          v125 = *(_QWORD *)(v3 + v124);
          v126 = v125 + 1;
          if (v125 == -1 || v126 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v125);
            *(_QWORD *)(v3 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              v30 = v122++ >= 9;
              if (v30)
              {
                v123 = 0;
                goto LABEL_353;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v123 = 0;
LABEL_353:
        v192 = v123 != 0;
        v193 = 241;
        goto LABEL_374;
      case 22:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v128 = 0;
        v129 = 0;
        v130 = 0;
        *(_QWORD *)(a1 + 244) |= 0x10000uLL;
        while (2)
        {
          v131 = *v20;
          v132 = *(_QWORD *)(v3 + v131);
          v133 = v132 + 1;
          if (v132 == -1 || v133 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v134 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v132);
            *(_QWORD *)(v3 + v131) = v133;
            v130 |= (unint64_t)(v134 & 0x7F) << v128;
            if (v134 < 0)
            {
              v128 += 7;
              v30 = v129++ >= 9;
              if (v30)
              {
                v130 = 0;
                goto LABEL_357;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v130 = 0;
LABEL_357:
        v192 = v130 != 0;
        v193 = 236;
        goto LABEL_374;
      case 24:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v135 = 0;
        v136 = 0;
        v137 = 0;
        *(_QWORD *)(a1 + 244) |= 0x100000uLL;
        while (2)
        {
          v138 = *v20;
          v139 = *(_QWORD *)(v3 + v138);
          v140 = v139 + 1;
          if (v139 == -1 || v140 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v141 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v139);
            *(_QWORD *)(v3 + v138) = v140;
            v137 |= (unint64_t)(v141 & 0x7F) << v135;
            if (v141 < 0)
            {
              v135 += 7;
              v30 = v136++ >= 9;
              if (v30)
              {
                v137 = 0;
                goto LABEL_361;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v137 = 0;
LABEL_361:
        v192 = v137 != 0;
        v193 = 240;
        goto LABEL_374;
      case 30:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 248) & 1) == 0)
        {
          PBReaderReadString();
          v142 = objc_claimAutoreleasedReturnValue();
          v143 = 104;
          goto LABEL_195;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_453;
        v194 = *(_QWORD *)(a1 + 244) << 31;
        goto LABEL_412;
      case 31:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 248) & 4) == 0)
        {
          PBReaderReadString();
          v142 = objc_claimAutoreleasedReturnValue();
          v143 = 120;
LABEL_195:
          v144 = *(void **)(a1 + v143);
          *(_QWORD *)(a1 + v143) = v142;
          goto LABEL_269;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_453;
        v194 = *(_QWORD *)(a1 + 244) << 29;
        goto LABEL_412;
      case 32:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 248) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 25;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOTimeCheckpoints);
        if (!GEOTimeCheckpointsReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        v113 = 152;
        goto LABEL_268;
      case 33:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 247) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 32;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOInstructionSet);
        if (!GEOInstructionSetReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        v113 = 96;
        goto LABEL_268;
      case 34:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v145 = 0;
        v146 = 0;
        v147 = 0;
        *(_QWORD *)(a1 + 244) |= 0x40000uLL;
        while (2)
        {
          v148 = *v20;
          v149 = *(_QWORD *)(v3 + v148);
          v150 = v149 + 1;
          if (v149 == -1 || v150 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v151 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v149);
            *(_QWORD *)(v3 + v148) = v150;
            v147 |= (unint64_t)(v151 & 0x7F) << v145;
            if (v151 < 0)
            {
              v145 += 7;
              v30 = v146++ >= 9;
              if (v30)
              {
                v147 = 0;
                goto LABEL_365;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v147 = 0;
LABEL_365:
        v192 = v147 != 0;
        v193 = 238;
        goto LABEL_374;
      case 35:
        if (!v34 || (*(_BYTE *)(a1 + 247) & 0x40) != 0)
          goto LABEL_300;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsGuidanceEvent:](a1, v82);
        goto LABEL_283;
      case 36:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v152 = 0;
        v153 = 0;
        v154 = 0;
        *(_QWORD *)(a1 + 244) |= 0x80000uLL;
        while (2)
        {
          v155 = *v20;
          v156 = *(_QWORD *)(v3 + v155);
          v157 = v156 + 1;
          if (v156 == -1 || v157 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v158 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v156);
            *(_QWORD *)(v3 + v155) = v157;
            v154 |= (unint64_t)(v158 & 0x7F) << v152;
            if (v158 < 0)
            {
              v152 += 7;
              v30 = v153++ >= 9;
              if (v30)
              {
                v154 = 0;
                goto LABEL_369;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v154 = 0;
LABEL_369:
        v192 = v154 != 0;
        v193 = 239;
        goto LABEL_374;
      case 37:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v159 = 0;
        v160 = 0;
        v161 = 0;
        *(_QWORD *)(a1 + 244) |= 0x20000uLL;
        while (2)
        {
          v162 = *v20;
          v163 = *(_QWORD *)(v3 + v162);
          v164 = v163 + 1;
          if (v163 == -1 || v164 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v165 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v163);
            *(_QWORD *)(v3 + v162) = v164;
            v161 |= (unint64_t)(v165 & 0x7F) << v159;
            if (v165 < 0)
            {
              v159 += 7;
              v30 = v160++ >= 9;
              if (v30)
              {
                v161 = 0;
                goto LABEL_373;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v161 = 0;
LABEL_373:
        v192 = v161 != 0;
        v193 = 237;
LABEL_374:
        *(_BYTE *)(a1 + v193) = v192;
        goto LABEL_414;
      case 38:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 247) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 35;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOEVStateInfo);
        if (!GEOEVStateInfoReadAllFrom((uint64_t)v82, (void *)v3))
          goto LABEL_452;
        PBReaderRecallMark();
        v113 = 72;
        goto LABEL_268;
      case 41:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 247) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 36;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOEVStepInfo);
        if (!GEOEVStepInfoReadAllFrom((uint64_t)v82, (void *)v3))
          goto LABEL_452;
        PBReaderRecallMark();
        v113 = 64;
        goto LABEL_268;
      case 42:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 247) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 37;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOEVChargeInfo);
        if (!GEOEVChargeInfoReadAllFrom((uint64_t)v82, (void *)v3))
          goto LABEL_452;
        PBReaderRecallMark();
        v113 = 56;
        goto LABEL_268;
      case 43:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v166 = 0;
        v167 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 1uLL;
        while (2)
        {
          v168 = *v20;
          v169 = *(_QWORD *)(v3 + v168);
          v170 = v169 + 1;
          if (v169 == -1 || v170 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v171 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v169);
            *(_QWORD *)(v3 + v168) = v170;
            v41 |= (unint64_t)(v171 & 0x7F) << v166;
            if (v171 < 0)
            {
              v166 += 7;
              v30 = v167++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_378;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_378:
        v191 = 172;
        goto LABEL_391;
      case 44:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 247) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 38;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        v113 = 48;
        goto LABEL_268;
      case 45:
        if (!v34)
          goto LABEL_300;
        if ((*(_BYTE *)(a1 + 248) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_453;
          v194 = *(_QWORD *)(a1 + 244) << 26;
LABEL_412:
          v7 += v194 >> 63;
LABEL_413:
          v18 = v203;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_414:
          if (!(v204 & 1 | (v7 != 0)))
            goto LABEL_418;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEOStopWaypoint);
        if (GEOStopWaypointReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v113 = 144;
LABEL_268:
          v144 = *(void **)(a1 + v113);
          *(_QWORD *)(a1 + v113) = v82;
LABEL_269:

          --v7;
          goto LABEL_413;
        }
LABEL_452:

LABEL_453:
        v200 = 0;
        v18 = v203;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_419:
        if ((v201 & 1) != 0)
LABEL_420:
          *(_QWORD *)(a1 + 244) |= 0x800000uLL;
        if (v18 & 1 | ((v200 & 1) == 0))
        {
          *(_QWORD *)(a1 + 244) |= 0x7FFF000000uLL;
          goto LABEL_446;
        }
        if (v19)
        {
          while (1)
          {
            v196 = *v19++;
            v195 = v196;
            if (v196 > 11)
            {
              switch(v195)
              {
                case 19:
                  v197 = 0x20000000;
                  goto LABEL_444;
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 34:
                case 36:
                case 37:
                case 39:
                case 40:
                case 43:
                case 46:
                  continue;
                case 30:
                  v197 = 0x100000000;
                  goto LABEL_444;
                case 31:
                  v197 = 0x400000000;
                  goto LABEL_444;
                case 32:
                  v197 = 0x4000000000;
                  goto LABEL_444;
                case 33:
                  v197 = 0x80000000;
                  goto LABEL_444;
                case 35:
                  v197 = 0x40000000;
                  goto LABEL_444;
                case 38:
                  v197 = 0x10000000;
                  goto LABEL_444;
                case 41:
                  v197 = 0x8000000;
                  goto LABEL_444;
                case 42:
                  v197 = 0x4000000;
                  goto LABEL_444;
                case 44:
                  v197 = 0x2000000;
                  goto LABEL_444;
                case 45:
                  v197 = 0x2000000000;
                  goto LABEL_444;
                case 47:
                  v197 = 0x800000000;
                  goto LABEL_444;
                default:
                  if (v195 != 12)
                    continue;
                  v197 = 0x1000000000;
                  break;
              }
              goto LABEL_444;
            }
            if (v195 == 8)
              break;
            if (v195 == 11)
            {
              v197 = 0x1000000;
LABEL_444:
              *(_QWORD *)(a1 + 244) |= v197;
              continue;
            }
            if (!v195)
              goto LABEL_446;
          }
          v197 = 0x200000000;
          goto LABEL_444;
        }
LABEL_446:
        if (v200)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_450:
          v198 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_450;
        }
        return v3;
      case 46:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v172 = 0;
        v173 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x8000uLL;
        while (2)
        {
          v174 = *v20;
          v175 = *(_QWORD *)(v3 + v174);
          v176 = v175 + 1;
          if (v175 == -1 || v176 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v177 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v175);
            *(_QWORD *)(v3 + v174) = v176;
            v41 |= (unint64_t)(v177 & 0x7F) << v172;
            if (v177 < 0)
            {
              v172 += 7;
              v30 = v173++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_382;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_382:
        v191 = 232;
        goto LABEL_391;
      case 47:
        if (!v34 || (*(_BYTE *)(a1 + 248) & 8) != 0)
          goto LABEL_300;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_453;
        v82 = objc_alloc_init(GEORoadDescription);
        if (!GEORoadDescriptionReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
          goto LABEL_452;
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsRoadDescription:](a1, v82);
LABEL_283:

        goto LABEL_413;
      case 48:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v178 = 0;
        v179 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 2uLL;
        while (2)
        {
          v180 = *v20;
          v181 = *(_QWORD *)(v3 + v180);
          v182 = v181 + 1;
          if (v181 == -1 || v182 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v183 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v181);
            *(_QWORD *)(v3 + v180) = v182;
            v41 |= (unint64_t)(v183 & 0x7F) << v178;
            if (v183 < 0)
            {
              v178 += 7;
              v30 = v179++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_386;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_386:
        v191 = 176;
        goto LABEL_391;
      case 49:
        if ((v202 & 1) == 0)
          goto LABEL_300;
        v184 = 0;
        v185 = 0;
        v41 = 0;
        *(_QWORD *)(a1 + 244) |= 0x800uLL;
        while (2)
        {
          v186 = *v20;
          v187 = *(_QWORD *)(v3 + v186);
          v188 = v187 + 1;
          if (v187 == -1 || v188 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v189 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v187);
            *(_QWORD *)(v3 + v186) = v188;
            v41 |= (unint64_t)(v189 & 0x7F) << v184;
            if (v189 < 0)
            {
              v184 += 7;
              v30 = v185++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_390;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_390:
        v191 = 216;
LABEL_391:
        *(_DWORD *)(a1 + v191) = v41;
        goto LABEL_414;
      default:
        if ((v201 & 1) == 0 || (*(_BYTE *)(a1 + 246) & 0x80) != 0)
        {
LABEL_300:
          v190 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v203;
          if ((v190 & 1) == 0)
          {
            v200 = 0;
            goto LABEL_419;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v83 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v84 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v83;

          }
          v85 = PBUnknownFieldAdd();
          v18 = v203;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v85)
          {
            v200 = 0;
            goto LABEL_420;
          }
        }
        goto LABEL_414;
    }
  }
}

void sub_188EF4868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF4D08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF53E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF58BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF5A04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF5B4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF5C90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF5E60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF6360(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF64AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF65F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF67B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF6904(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF6AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EF9FAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v2 = a1[14];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v35;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v35 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    }
    while (v4);
  }

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v7 = a1[17];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v31;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v31 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v12 = a1[11];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v27;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v27 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v17 = a1[16];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v23;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v23 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v22);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
    }
    while (v19);
  }

}

uint64_t GEOStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 164))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 168));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 160) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 164) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOStepReadAllFrom_initialTag;
  Specified = GEOStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 168));
  return Specified;
}

void sub_188EFA48C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EFA4EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeCheckpointsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_59;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_59;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_61;
LABEL_38:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v27 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                break;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v13 = v27++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0)
          goto LABEL_61;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v15++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_61;
LABEL_58:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_59;
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v32 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v33 = *v2;
          v34 = *(_QWORD *)&a1[v33];
          v35 = v34 + 1;
          if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
            break;
          v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
          *(_QWORD *)&a1[v33] = v35;
          if (v36 < 0)
          {
            v13 = v32++ >= 9;
            if (!v13)
              continue;
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0)
      goto LABEL_61;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0)
      {
        v26 = v15++;
        if (v26 <= 8)
          continue;
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

BOOL GEOStopWaypointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_41;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_39;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_39;
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_41;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_41;
          goto LABEL_37;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_41;
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_39;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          break;
      }
    }
  }
LABEL_40:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188EFB354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStepIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  v2 = *(_QWORD *)(a1 + 244);
  if ((v2 & 0x9201000000) != 0)
    return 1;
  if ((v2 & 0x20000000) == 0)
  {
LABEL_5:
    if ((v2 & 0x500000000) != 0)
      return 1;
    if ((v2 & 0x4000000000) != 0)
    {
      if (GEOTimeCheckpointsIsDirty(*(_QWORD *)(a1 + 152)))
        return 1;
      v2 = *(_QWORD *)(a1 + 244);
    }
    if ((v2 & 0x80000000) != 0)
    {
      if ((GEOInstructionSetIsDirty(*(os_unfair_lock_s **)(a1 + 96)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 244);
    }
    if ((v2 & 0x5C000000) != 0)
      return 1;
    if ((v2 & 0x2000000) != 0)
    {
      if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 244);
    }
    if ((v2 & 0x2000000000) != 0)
    {
      if (GEOStopWaypointIsDirty(*(_QWORD *)(a1 + 144)))
        return 1;
      v2 = *(_QWORD *)(a1 + 244);
    }
    if ((v2 & 0x800000000) != 0)
      return 1;
    if ((v2 & 0x1000000000) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 136);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v17;
LABEL_25:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          if (GEONameInfoIsDirty(*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v9)))
            goto LABEL_43;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v7)
              goto LABEL_25;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 244);
    }
    if ((v2 & 0x40000000) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 88);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_44:

      return v3;
    }
    v10 = *(_QWORD *)v13;
LABEL_36:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v10)
        objc_enumerationMutation(v5);
      if ((GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)) & 1) != 0)
        break;
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_36;
        goto LABEL_44;
      }
    }
LABEL_43:
    v3 = 1;
    goto LABEL_44;
  }
  if (!GEONameInfoIsDirty(*(_QWORD *)(a1 + 80)))
  {
    v2 = *(_QWORD *)(a1 + 244);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOStepIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 42);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EFC6D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EFDC70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EFE2F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOFormattedString *v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  int v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  int v62;
  void *v63;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v7;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_86;
        v65 = v17;
        v66 = v18 | v17;
        v68 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v67 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_84;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_84:
      v21 = 1;
      goto LABEL_85;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v68 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 2)
    {
      if (v36 && (*(_BYTE *)(a1 + 68) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_105;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v43 = 0;
            v44 = 0;
            v45 = 0;
            while (1)
            {
              v46 = *v20;
              v47 = *(_QWORD *)(v3 + v46);
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
                break;
              v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v47);
              *(_QWORD *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v31 = v44++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_59;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_59:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v54 = 0;
          v55 = 0;
          v56 = 0;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v57 = *v20;
            v58 = *(_QWORD *)(v3 + v57);
            v59 = v58 + 1;
            if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
              break;
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_82;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
        v18 = v67;
        goto LABEL_68;
      }
      goto LABEL_67;
    }
    if ((_DWORD)v35 == 1)
      break;
    if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
      goto LABEL_67;
    if (!*(_QWORD *)(a1 + 16))
    {
      v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v51 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v50;

    }
    v52 = PBUnknownFieldAdd();
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v52)
    {
      v21 = 0;
      goto LABEL_87;
    }
LABEL_68:
    if (!(v66 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_84;
  }
  if (!v36)
  {
LABEL_67:
    v53 = PBReaderSkipValueWithTag();
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v53 & 1) == 0)
    {
      v21 = 0;
      goto LABEL_85;
    }
    goto LABEL_68;
  }
  if ((*(_BYTE *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_105;
    v9 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_105;
  v41 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v42 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v41;

    --v9;
LABEL_73:
    v18 = v67;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_68;
  }

LABEL_105:
  v21 = 0;
  v18 = v67;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
  v17 = v65;
LABEL_86:
  if ((v17 & 1) != 0)
LABEL_87:
    *(_BYTE *)(a1 + 68) |= 1u;
  if (v18 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 68) |= 4u;
    *(_BYTE *)(a1 + 68) |= 2u;
    goto LABEL_97;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v62 = *v19++;
        v61 = v62;
        if (v62 == 1)
          break;
        if (v61 == 2)
          goto LABEL_96;
        if (!v61)
          goto LABEL_97;
      }
      LOBYTE(v61) = 4;
LABEL_96:
      *(_BYTE *)(a1 + 68) |= v61;
      continue;
    }
  }
LABEL_97:
  if (v21)
  {
    v3 = *(_BYTE *)(v3 + *v22) == 0;
    if ((v18 & 1) == 0)
      return v3;
LABEL_101:
    v63 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v18 & 1) != 0)
      goto LABEL_101;
  }
  return v3;
}

void sub_188EFEAEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EFF380(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOStepGroupReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOStepGroupReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOStepGroupReadAllFrom_initialTag;
  Specified = GEOStepGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188EFF524(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepGroupReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStepGroupReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188EFF584(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EFF728(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStepGroupIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOStepGroupIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOStepGroupIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188EFFA44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188EFFC94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopStepEVInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BOOL8 v59;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 8u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_66;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_68;
              }
            }
            v3[*v6] = 1;
LABEL_66:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_68:
            v57 = 40;
            goto LABEL_85;
          case 2u:
            *(_BYTE *)(a1 + 56) |= 1u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v58 = 16;
            goto LABEL_90;
          case 3u:
            v30 = 0;
            v31 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 0x20u;
            while (2)
            {
              v32 = *v4;
              v33 = *(_QWORD *)&v3[v32];
              v34 = v33 + 1;
              if (v33 == -1 || v34 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v35 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v33);
                *(_QWORD *)&v3[v32] = v34;
                v20 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  v15 = v31++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_72:
            v57 = 48;
            goto LABEL_85;
          case 4u:
            v36 = 0;
            v37 = 0;
            v38 = 0;
            *(_BYTE *)(a1 + 56) |= 2u;
            while (2)
            {
              v39 = *v4;
              v40 = *(_QWORD *)&v3[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v42 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v40);
                *(_QWORD *)&v3[v39] = v41;
                v38 |= (unint64_t)(v42 & 0x7F) << v36;
                if (v42 < 0)
                {
                  v36 += 7;
                  v15 = v37++ >= 9;
                  if (v15)
                  {
                    v38 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v38 = 0;
LABEL_76:
            *(_QWORD *)(a1 + 24) = v38;
            continue;
          case 5u:
            v43 = 0;
            v44 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 0x10u;
            while (2)
            {
              v45 = *v4;
              v46 = *(_QWORD *)&v3[v45];
              v47 = v46 + 1;
              if (v46 == -1 || v47 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v48 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v46);
                *(_QWORD *)&v3[v45] = v47;
                v20 |= (unint64_t)(v48 & 0x7F) << v43;
                if (v48 < 0)
                {
                  v43 += 7;
                  v15 = v44++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_80;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_80:
            v57 = 44;
            goto LABEL_85;
          case 6u:
            v49 = 0;
            v50 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 0x40u;
            break;
          case 7u:
            *(_BYTE *)(a1 + 56) |= 4u;
            v55 = *v4;
            v56 = *(_QWORD *)&v3[v55];
            if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v56);
              *(_QWORD *)&v3[v55] = v56 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            v58 = 32;
LABEL_90:
            *(_QWORD *)(a1 + v58) = v29;
            continue;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_93;
            continue;
        }
        while (1)
        {
          v51 = *v4;
          v52 = *(_QWORD *)&v3[v51];
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)&v3[*v5])
            break;
          v54 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v52);
          *(_QWORD *)&v3[v51] = v53;
          v20 |= (unint64_t)(v54 & 0x7F) << v49;
          if ((v54 & 0x80) == 0)
            goto LABEL_82;
          v49 += 7;
          v15 = v50++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_84;
          }
        }
        v3[*v6] = 1;
LABEL_82:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_84:
        v57 = 52;
LABEL_85:
        *(_DWORD *)(a1 + v57) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v59 = v3[*v6] == 0;
  }
  else
  {
LABEL_93:
    v59 = 0;
  }
  objc_sync_exit(v3);

  return v59;
}

void sub_188F00E2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopStepEVInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStopStepEVInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F00E8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopStepEVInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  _BOOL8 v47;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_67;
          }
        case 2u:
        case 7u:
          if (v16 != 1)
            goto LABEL_70;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_66;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_66;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_67;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_67;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_67;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_70:
          v47 = 0;
          goto LABEL_69;
      }
      while (1)
      {
        v43 = *v2;
        v44 = *(_QWORD *)&a1[v43];
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
          break;
        v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
        *(_QWORD *)&a1[v43] = v45;
        if (v46 < 0)
        {
          v26 = v42++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_67;
      }
LABEL_65:
      v14 = *v4;
LABEL_66:
      a1[v14] = 1;
LABEL_67:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
LABEL_69:
  PBReaderRecallMark();
  return v47;
}

void sub_188F01D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStopWaypointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  void *v48;
  GEOLatLng *v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v57 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v59 & 1) == 0)
          goto LABEL_68;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_71;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_73;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_71:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_73:
        *(_QWORD *)(a1 + 24) = v39;
        goto LABEL_82;
      case 2:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v47;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_101;
        v52 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_80;
      case 3:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 16 * *(_BYTE *)(a1 + 68);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v49 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_100;
        PBReaderRecallMark();
        v50 = 40;
        goto LABEL_66;
      case 4:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 8 * *(_BYTE *)(a1 + 68);
LABEL_80:
          v7 += v52 >> 7;
LABEL_81:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v49 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          v50 = 48;
LABEL_66:
          v48 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;
LABEL_67:

          --v7;
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        v57 = 0;
        v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        if ((v60 & 1) != 0)
LABEL_86:
          *(_BYTE *)(a1 + v58[671]) |= 2u;
        if (v63 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[671]) |= 4u;
          *(_BYTE *)(a1 + v58[671]) |= 8u;
          *(_BYTE *)(a1 + v58[671]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 3:
                v54 = 8;
                goto LABEL_93;
              case 4:
                v54 = 16;
LABEL_93:
                *(_BYTE *)(a1 + v58[671]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 2) != 0)
        {
LABEL_68:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_84:
            v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_83;
        continue;
    }
  }
}

void sub_188F0254C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0268C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F02D78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStopWaypointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOStopWaypointReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOStopWaypointReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOStopWaypointReadAllFrom_initialTag;
  Specified = GEOStopWaypointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188F02F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStopWaypointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStopWaypointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F02F8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F03168(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopWaypointIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188F034F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F03824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F03B14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimeCheckpointsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  BOOL v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  int v70;
  int v71;
  void *v72;
  char v74;
  int v75;
  int v76;
  int v77;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 84) >> 2) & 1)
      + (*(_BYTE *)(a1 + 84) & 1)
      + ((*(unsigned __int8 *)(a1 + 84) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_DWORD)v10 | v7;
        v77 = v14 | v10;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v14 | v10) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v75 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_98;
        v74 = v14 & ~(_BYTE)v10 | v7;
        v76 = (v9 != 0) | v77 | v15;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_96;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_96:
      v75 = 1;
      goto LABEL_97;
    }
    v31 = v22 >> 3;
    v32 = v77;
    if (!((v17 == 0) | v77 & 1))
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32 && (*(_BYTE *)(a1 + 84) & 2) == 0)
      {
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_116;
          while (*(_QWORD *)(v3 + *v16) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v18))
          {
            v37 = 0;
            v38 = 0;
            v39 = 0;
            while (1)
            {
              v40 = *v16;
              v41 = *(_QWORD *)(v3 + v40);
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
                break;
              v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
              *(_QWORD *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                v27 = v38++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_53;
            }
            *(_BYTE *)(v3 + *v18) = 1;
LABEL_53:
            PBRepeatedUInt32Add();
          }
LABEL_77:
          PBReaderRecallMark();
LABEL_94:
          if ((v76 & 1) == 0)
            goto LABEL_96;
          goto LABEL_95;
        }
        v54 = 0;
        v55 = 0;
        v56 = 0;
        while (1)
        {
          v57 = *v16;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
            break;
          v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v58);
          *(_QWORD *)(v3 + v57) = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if (v60 < 0)
          {
            v54 += 7;
            v61 = v55++ > 8;
            if (!v61)
              continue;
          }
          goto LABEL_93;
        }
LABEL_92:
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_93:
        PBRepeatedUInt32Add();
        goto LABEL_94;
      }
    }
    else if ((v74 & 1) != 0 && (*(_BYTE *)(a1 + 84) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v52 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v51;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
      {
        v75 = 0;
LABEL_99:
        *(_BYTE *)(a1 + 84) |= 1u;
        goto LABEL_100;
      }
      goto LABEL_94;
    }
LABEL_75:
    v53 = PBReaderSkipValueWithTag();
    if ((v53 & v76 & 1) == 0)
    {
      v75 = v53;
      goto LABEL_97;
    }
LABEL_95:
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_96;
  }
  if (!v32 || (*(_BYTE *)(a1 + 84) & 4) != 0)
    goto LABEL_75;
  if (v29 != 2)
  {
    v62 = 0;
    v63 = 0;
    v64 = 0;
    while (1)
    {
      v65 = *v16;
      v66 = *(_QWORD *)(v3 + v65);
      v67 = v66 + 1;
      if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
        goto LABEL_92;
      v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v66);
      *(_QWORD *)(v3 + v65) = v67;
      v64 |= (unint64_t)(v68 & 0x7F) << v62;
      if (v68 < 0)
      {
        v62 += 7;
        v61 = v63++ > 8;
        if (!v61)
          continue;
      }
      goto LABEL_93;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(_QWORD *)(v3 + *v16) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v18))
    {
      v44 = 0;
      v45 = 0;
      v46 = 0;
      while (1)
      {
        v47 = *v16;
        v48 = *(_QWORD *)(v3 + v47);
        v49 = v48 + 1;
        if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          break;
        v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
        *(_QWORD *)(v3 + v47) = v49;
        v46 |= (unint64_t)(v50 & 0x7F) << v44;
        if (v50 < 0)
        {
          v44 += 7;
          v27 = v45++ >= 9;
          if (!v27)
            continue;
        }
        goto LABEL_68;
      }
      *(_BYTE *)(v3 + *v18) = 1;
LABEL_68:
      PBRepeatedUInt32Add();
    }
    goto LABEL_77;
  }
LABEL_116:
  v75 = 0;
LABEL_97:
  LOBYTE(v15) = v74;
LABEL_98:
  if ((v15 & 1) != 0)
    goto LABEL_99;
LABEL_100:
  if (v77 & 1 | ((v75 & 1) == 0))
  {
    *(_BYTE *)(a1 + 84) |= 2u;
    *(_BYTE *)(a1 + 84) |= 4u;
    goto LABEL_110;
  }
  if (v17)
  {
    while (1)
    {
      v71 = *v17++;
      v70 = v71;
      if (v71 == 1)
        break;
      if (v70 == 2)
      {
        v69 = 4;
LABEL_106:
        *(_BYTE *)(a1 + 84) |= v69;
      }
      else if (!v70)
      {
        goto LABEL_110;
      }
    }
    v69 = 2;
    goto LABEL_106;
  }
LABEL_110:
  if (v75)
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
  else
    v3 = 0;
  if ((v77 & 1) != 0)
  {
    v72 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188F04568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F04E08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimeCheckpointsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTimeCheckpointsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTimeCheckpointsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTimeCheckpointsReadAllFrom_initialTag;
  Specified = GEOTimeCheckpointsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188F04F90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimeCheckpointsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTimeCheckpointsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F04FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F05218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeCheckpointsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = (*(_BYTE *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_188F05514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F05760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeGapReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  id v39;
  void *v40;
  uint64_t v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_61;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_61;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0)
              goto LABEL_52;
            v26 += 7;
            v15 = v27++ >= 9;
            if (v15)
            {
              v28 = 0;
              goto LABEL_54;
            }
          }
          v3[*v6] = 1;
LABEL_52:
          if (v3[*v6])
            v28 = 0;
LABEL_54:
          *(_BYTE *)(a1 + 24) = v28 != 0;
          goto LABEL_60;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_48;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_50:
          v41 = 20;
LABEL_59:
          *(_DWORD *)(a1 + v41) = v21;
          goto LABEL_60;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v40 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v39;

        }
        if (!PBUnknownFieldAdd())
          goto LABEL_62;
LABEL_60:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_61;
      }
      v33 = 0;
      v34 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 1u;
      while (1)
      {
        v35 = *v4;
        v36 = *(_QWORD *)&v3[v35];
        v37 = v36 + 1;
        if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
          break;
        v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
        *(_QWORD *)&v3[v35] = v37;
        v21 |= (unint64_t)(v38 & 0x7F) << v33;
        if ((v38 & 0x80) == 0)
          goto LABEL_56;
        v33 += 7;
        v15 = v34++ >= 9;
        if (v15)
        {
          LODWORD(v21) = 0;
          goto LABEL_58;
        }
      }
      v3[*v6] = 1;
LABEL_56:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_58:
      v41 = 16;
      goto LABEL_59;
    }
LABEL_61:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_62:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188F06238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeGapReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTimeGapReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F06298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOTimepointDescription(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOTimepointDictionaryRepresentation(a1, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOTimepoint<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOTimepointDictionaryRepresentation(uint64_t a1, int a2)
{
  void *v4;
  char v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  int v9;
  __CFString *v10;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *(_BYTE *)(a1 + 20);
  if ((v5 & 1) == 0)
  {
    if ((*(_BYTE *)(a1 + 20) & 2) == 0)
      goto LABEL_3;
LABEL_9:
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 8));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKey:", v8, CFSTR("time"));

    if ((*(_BYTE *)(a1 + 20) & 4) == 0)
      return v4;
    goto LABEL_10;
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (a2)
    v7 = CFSTR("currentUserTime");
  else
    v7 = CFSTR("current_user_time");
  objc_msgSend(v4, "setObject:forKey:", v6, v7);

  v5 = *(_BYTE *)(a1 + 20);
  if ((v5 & 2) != 0)
    goto LABEL_9;
LABEL_3:
  if ((v5 & 4) == 0)
    return v4;
LABEL_10:
  v9 = *(_DWORD *)(a1 + 16);
  if (v9)
  {
    if (v9 == 1)
    {
      v10 = CFSTR("ARRIVE");
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), *(unsigned int *)(a1 + 16));
      v10 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    v10 = CFSTR("DEPART");
  }
  objc_msgSend(v4, "setObject:forKey:", v10, CFSTR("type"));

  return v4;
}

void _GEOTimepointFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  int v9;
  const __CFString *v10;
  void *v11;
  uint64_t v12;
  id v13;

  v13 = a1;
  objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("time"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 2u;
    objc_msgSend(v5, "doubleValue");
    *(_QWORD *)(a2 + 8) = v6;
  }

  objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("type"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 4u;
    v8 = v7;
    if ((objc_msgSend(v8, "isEqualToString:", CFSTR("DEPART")) & 1) != 0)
      v9 = 0;
    else
      v9 = objc_msgSend(v8, "isEqualToString:", CFSTR("ARRIVE"));

  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_11;
    v9 = objc_msgSend(v7, "intValue");
  }
  *(_DWORD *)(a2 + 16) = v9;
LABEL_11:

  if (a3)
    v10 = CFSTR("currentUserTime");
  else
    v10 = CFSTR("current_user_time");
  objc_msgSend(v13, "objectForKeyedSubscript:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 20) |= 1u;
    objc_msgSend(v11, "doubleValue");
    *(_QWORD *)a2 = v12;
  }

}

uint64_t GEOTimepointReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOTimepointReadAllFrom(a1, a2);
}

uint64_t GEOTimepointReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      v19 = v10 >> 3;
      if ((v10 >> 3) == 4)
      {
        *(_BYTE *)(a1 + 20) |= 1u;
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v25 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v25 = 0;
        }
        *(_QWORD *)a1 = v25;
      }
      else if ((_DWORD)v19 == 2)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0)
            goto LABEL_37;
          v26 += 7;
          v15 = v27++ >= 9;
          if (v15)
          {
            LODWORD(v28) = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v28) = 0;
LABEL_39:
        *(_DWORD *)(a1 + 16) = v28;
      }
      else if ((_DWORD)v19 == 1)
      {
        *(_BYTE *)(a1 + 20) |= 2u;
        v20 = *v3;
        v21 = *(_QWORD *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v22 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v22 = 0;
        }
        *(_QWORD *)(a1 + 8) = v22;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t GEOTimepointHash()
{
  return PBHashBytes();
}

void sub_188F06F7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimestampDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  void *v56;
  char v57;
  char v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  BOOL v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v66 = v15 | v8;
        v67 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v68 = (v17 == 0) | v16;
        v69 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_82;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_82:
      v64 = 1;
      goto LABEL_83;
    }
    v31 = v23 >> 3;
    v32 = v69;
    if ((v68 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_70;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_72;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_70:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_72:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_67;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 32;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v58 = 8 * *(_BYTE *)(a1 + 60);
        goto LABEL_81;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                v51 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v51 = 0;
LABEL_76:
        *(_BYTE *)(a1 + 56) = v51 != 0;
        goto LABEL_67;
      case 4:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 24;
LABEL_65:
          v56 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v58 = 16 * *(_BYTE *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
          if (!(v67 & 1 | (v10 != 0)))
            goto LABEL_82;
          continue;
        }
LABEL_102:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
        v65 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
        if ((v66 & 1) != 0)
LABEL_84:
          *(_BYTE *)(a1 + v65[997]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(_BYTE *)(a1 + v65[997]) |= 0x10u;
          *(_BYTE *)(a1 + v65[997]) |= 8u;
          goto LABEL_95;
        }
        if (v17)
        {
          while (1)
          {
            v61 = *v17++;
            v60 = v61;
            if (v61 == 2)
              break;
            if (v60 == 4)
            {
              v59 = 8;
LABEL_91:
              *(_BYTE *)(a1 + v65[997]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_95;
            }
          }
          v59 = 16;
          goto LABEL_91;
        }
LABEL_95:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v69)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEORegionalResourceTileData__flags;
            goto LABEL_84;
          }
        }
        goto LABEL_67;
    }
  }
}

void sub_188F07798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F07E4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimestampDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTimestampDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTimestampDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTimestampDataReadAllFrom_initialTag;
  Specified = GEOTimestampDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188F07FD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimestampDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTimestampDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F08038(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F08218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimestampDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188F0857C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F088BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F08B18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficBannerTextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  unsigned __int8 v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOFormattedString *v42;
  id v43;
  void *v44;
  int v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  char v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  void *v156;
  char v157;
  uint64_t v158;
  BOOL v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  void *v164;
  int v166;
  char v167;
  char v168;
  char v169;
  char v170;
  BOOL v171;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 148);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 144));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 212);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D70), v14))
      + (*(_DWORD *)(a1 + 216) & 1)
      + ((v12 >> 27) & 1)
      + ((v12 >> 29) & 1)
      + vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D80), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1D90), v14)))+ (v12 >> 31);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 0xB;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v167 = v20;
        v168 = v8;
        v169 = v21 | v20;
        if (((v21 | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v170 = (v22 == 0) | v21;
        v171 = v21;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_348;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_348:
      v166 = 1;
      goto LABEL_349;
    }
    v36 = v28 >> 3;
    v37 = v171;
    if ((v170 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(_BYTE *)(a1 + 215) & 8) != 0)
          goto LABEL_251;
        PBReaderReadString();
        v42 = (GEOFormattedString *)objc_claimAutoreleasedReturnValue();
        if (v42)
          -[GEOTrafficBannerText _addNoFlagsLocalizedIncidentBanner:](a1, v42);
        goto LABEL_141;
      case 2:
        if (!v37 || (*(_BYTE *)(a1 + 215) & 0x20) != 0)
          goto LABEL_251;
        PBReaderReadString();
        v42 = (GEOFormattedString *)objc_claimAutoreleasedReturnValue();
        if (v42)
          -[GEOTrafficBannerText _addNoFlagsLocalizedIncidentSubBanner:](a1, v42);
        goto LABEL_141;
      case 3:
        if (!v37 || (*(_BYTE *)(a1 + 215) & 0x10) != 0)
          goto LABEL_251;
        PBReaderReadString();
        v42 = (GEOFormattedString *)objc_claimAutoreleasedReturnValue();
        if (v42)
          -[GEOTrafficBannerText _addNoFlagsLocalizedIncidentSpokenText:](a1, v42);
        goto LABEL_141;
      case 4:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 214) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 41;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        v46 = 56;
        goto LABEL_249;
      case 5:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 214) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 40;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        v46 = 64;
        goto LABEL_249;
      case 6:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 215) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 32;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        v46 = 128;
        goto LABEL_249;
      case 7:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x800uLL;
        while (2)
        {
          v50 = *v23;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v33 = v48++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_256:
        v158 = 200;
        goto LABEL_317;
      case 8:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v54 = 0;
        v55 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 8uLL;
        while (2)
        {
          v56 = *v23;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v49 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v33 = v55++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_260:
        v158 = 168;
        goto LABEL_317;
      case 9:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v60 = 0;
        v61 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x10uLL;
        while (2)
        {
          v62 = *v23;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v49 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v33 = v61++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_264:
        v158 = 172;
        goto LABEL_317;
      case 10:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v66 = 0;
        v67 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x20uLL;
        while (2)
        {
          v68 = *v23;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v49 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v33 = v67++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_268:
        v158 = 176;
        goto LABEL_317;
      case 11:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v72 = 0;
        v73 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x100uLL;
        while (2)
        {
          v74 = *v23;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v49 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v33 = v73++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_272:
        v158 = 188;
        goto LABEL_317;
      case 12:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v78 = 0;
        v79 = 0;
        v80 = 0;
        *(_QWORD *)(a1 + 212) |= 0x4000uLL;
        while (2)
        {
          v81 = *v23;
          v82 = *(_QWORD *)(v3 + v81);
          v83 = v82 + 1;
          if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              v33 = v79++ >= 9;
              if (v33)
              {
                v80 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v80 = 0;
LABEL_276:
        v159 = v80 != 0;
        v160 = 209;
        goto LABEL_322;
      case 13:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v85 = 0;
        v86 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 2uLL;
        while (2)
        {
          v87 = *v23;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v49 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              v33 = v86++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_280:
        v158 = 160;
        goto LABEL_317;
      case 14:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v91 = 0;
        v92 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x400uLL;
        while (2)
        {
          v93 = *v23;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v49 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              v33 = v92++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_284:
        v158 = 196;
        goto LABEL_317;
      case 15:
        if (!v37 || (*(_BYTE *)(a1 + 215) & 1) != 0)
          goto LABEL_251;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOTrafficBannerTextButton);
        if (!GEOTrafficBannerTextButtonReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        -[GEOTrafficBannerText _addNoFlagsButton:](a1, v42);
LABEL_141:

        goto LABEL_346;
      case 16:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v97 = 0;
        v98 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 4uLL;
        while (2)
        {
          v99 = *v23;
          v100 = *(_QWORD *)(v3 + v99);
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v100);
            *(_QWORD *)(v3 + v99) = v101;
            v49 |= (unint64_t)(v102 & 0x7F) << v97;
            if (v102 < 0)
            {
              v97 += 7;
              v33 = v98++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_288:
        v158 = 164;
        goto LABEL_317;
      case 17:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v103 = 0;
        v104 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 1uLL;
        while (2)
        {
          v105 = *v23;
          v106 = *(_QWORD *)(v3 + v105);
          v107 = v106 + 1;
          if (v106 == -1 || v107 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v108 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v106);
            *(_QWORD *)(v3 + v105) = v107;
            v49 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              v33 = v104++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_292:
        v158 = 156;
        goto LABEL_317;
      case 18:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v109 = 0;
        v110 = 0;
        v111 = 0;
        *(_QWORD *)(a1 + 212) |= 0x10000uLL;
        while (2)
        {
          v112 = *v23;
          v113 = *(_QWORD *)(v3 + v112);
          v114 = v113 + 1;
          if (v113 == -1 || v114 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v113);
            *(_QWORD *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              v33 = v110++ >= 9;
              if (v33)
              {
                v111 = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v111 = 0;
LABEL_296:
        v159 = v111 != 0;
        v160 = 211;
        goto LABEL_322;
      case 19:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v116 = 0;
        v117 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x1000uLL;
        while (2)
        {
          v118 = *v23;
          v119 = *(_QWORD *)(v3 + v118);
          v120 = v119 + 1;
          if (v119 == -1 || v120 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v121 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v119);
            *(_QWORD *)(v3 + v118) = v120;
            v49 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              v33 = v117++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_300:
        v158 = 204;
        goto LABEL_317;
      case 20:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 214) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 43;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        v46 = 40;
        goto LABEL_249;
      case 21:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 214) & 0x20) == 0)
        {
          PBReaderReadString();
          v122 = objc_claimAutoreleasedReturnValue();
          v123 = 48;
          goto LABEL_243;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_377;
        v161 = *(_QWORD *)(a1 + 212) << 42;
        goto LABEL_345;
      case 22:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v124 = 0;
        v125 = 0;
        v126 = 0;
        *(_QWORD *)(a1 + 212) |= 0x2000uLL;
        while (2)
        {
          v127 = *v23;
          v128 = *(_QWORD *)(v3 + v127);
          v129 = v128 + 1;
          if (v128 == -1 || v129 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v130 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v128);
            *(_QWORD *)(v3 + v127) = v129;
            v126 |= (unint64_t)(v130 & 0x7F) << v124;
            if (v130 < 0)
            {
              v124 += 7;
              v33 = v125++ >= 9;
              if (v33)
              {
                v126 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v126 = 0;
LABEL_304:
        v159 = v126 != 0;
        v160 = 208;
        goto LABEL_322;
      case 23:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 214) & 4) == 0)
        {
          PBReaderReadString();
          v122 = objc_claimAutoreleasedReturnValue();
          v123 = 24;
          goto LABEL_243;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_377;
        v161 = *(_QWORD *)(a1 + 212) << 45;
        goto LABEL_345;
      case 24:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 216) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 31;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOTriggerPointRange);
        if (!GEOTriggerPointRangeReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        v46 = 136;
        goto LABEL_249;
      case 25:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 215) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 33;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOTriggerPointRange);
        if (!GEOTriggerPointRangeReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        v46 = 120;
        goto LABEL_249;
      case 26:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v131 = 0;
        v132 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x200uLL;
        while (2)
        {
          v133 = *v23;
          v134 = *(_QWORD *)(v3 + v133);
          v135 = v134 + 1;
          if (v134 == -1 || v135 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v134);
            *(_QWORD *)(v3 + v133) = v135;
            v49 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              v33 = v132++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_308:
        v158 = 192;
        goto LABEL_317;
      case 27:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v137 = 0;
        v138 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x40uLL;
        while (2)
        {
          v139 = *v23;
          v140 = *(_QWORD *)(v3 + v139);
          v141 = v140 + 1;
          if (v140 == -1 || v141 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v142 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v140);
            *(_QWORD *)(v3 + v139) = v141;
            v49 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              v33 = v138++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_312:
        v158 = 180;
        goto LABEL_317;
      case 28:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v143 = 0;
        v144 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 212) |= 0x80uLL;
        while (2)
        {
          v145 = *v23;
          v146 = *(_QWORD *)(v3 + v145);
          v147 = v146 + 1;
          if (v146 == -1 || v147 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v146);
            *(_QWORD *)(v3 + v145) = v147;
            v49 |= (unint64_t)(v148 & 0x7F) << v143;
            if (v148 < 0)
            {
              v143 += 7;
              v33 = v144++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_316:
        v158 = 184;
LABEL_317:
        *(_DWORD *)(a1 + v158) = v49;
        goto LABEL_347;
      case 29:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 214) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 44;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_376;
        PBReaderRecallMark();
        v46 = 32;
        goto LABEL_249;
      case 30:
        if ((v168 & 1) == 0)
          goto LABEL_251;
        v149 = 0;
        v150 = 0;
        v151 = 0;
        *(_QWORD *)(a1 + 212) |= 0x8000uLL;
        while (2)
        {
          v152 = *v23;
          v153 = *(_QWORD *)(v3 + v152);
          v154 = v153 + 1;
          if (v153 == -1 || v154 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v155 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v153);
            *(_QWORD *)(v3 + v152) = v154;
            v151 |= (unint64_t)(v155 & 0x7F) << v149;
            if (v155 < 0)
            {
              v149 += 7;
              v33 = v150++ >= 9;
              if (v33)
              {
                v151 = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v151 = 0;
LABEL_321:
        v159 = v151 != 0;
        v160 = 210;
LABEL_322:
        *(_BYTE *)(a1 + v160) = v159;
        goto LABEL_347;
      case 31:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 215) & 4) == 0)
        {
          PBReaderReadData();
          v122 = objc_claimAutoreleasedReturnValue();
          v123 = 88;
LABEL_243:
          v156 = *(void **)(a1 + v123);
          *(_QWORD *)(a1 + v123) = v122;
          goto LABEL_250;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_377;
        v161 = *(_QWORD *)(a1 + 212) << 37;
        goto LABEL_345;
      case 32:
        if (!v37)
          goto LABEL_251;
        if ((*(_BYTE *)(a1 + 215) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_377;
          v161 = *(_QWORD *)(a1 + 212) << 38;
LABEL_345:
          v7 += v161 >> 63;
LABEL_346:
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
LABEL_347:
          if (!(v169 & 1 | (v7 != 0)))
            goto LABEL_348;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_377;
        v42 = objc_alloc_init(GEOCameraInput);
        if (GEOCameraInputReadAllFrom(v42, (void *)v3))
        {
          PBReaderRecallMark();
          v46 = 80;
LABEL_249:
          v156 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v42;
LABEL_250:

          --v7;
          goto LABEL_346;
        }
LABEL_376:

LABEL_377:
        v166 = 0;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_349:
        if ((v167 & 1) != 0)
LABEL_350:
          *(_QWORD *)(a1 + 212) |= 0x20000uLL;
        if (v171 || (v166 & 1) == 0)
        {
          *(_QWORD *)(a1 + 212) |= 0x1FFFC0000uLL;
        }
        else if (v22)
        {
          while (1)
          {
            v162 = *v22++;
            v163 = 0x8000000;
            switch(v162)
            {
              case 0:
                goto LABEL_370;
              case 1:
                goto LABEL_369;
              case 2:
                v163 = 0x20000000;
                goto LABEL_369;
              case 3:
                v163 = 0x10000000;
                goto LABEL_369;
              case 4:
                v163 = 0x400000;
                goto LABEL_369;
              case 5:
                v163 = 0x800000;
                goto LABEL_369;
              case 6:
                v163 = 0x80000000;
                goto LABEL_369;
              case 15:
                v163 = 0x1000000;
                goto LABEL_369;
              case 20:
                v163 = 0x100000;
                goto LABEL_369;
              case 21:
                v163 = 0x200000;
                goto LABEL_369;
              case 23:
                v163 = 0x40000;
                goto LABEL_369;
              case 24:
                v163 = 0x100000000;
                goto LABEL_369;
              case 25:
                v163 = 0x40000000;
                goto LABEL_369;
              case 29:
                v163 = 0x80000;
                goto LABEL_369;
              case 31:
                v163 = 0x4000000;
                goto LABEL_369;
              case 32:
                v163 = 0x2000000;
LABEL_369:
                *(_QWORD *)(a1 + 212) |= v163;
                break;
              default:
                continue;
            }
          }
        }
LABEL_370:
        if (v166)
          v3 = *(_BYTE *)(v3 + *v24) == 0;
        else
          v3 = 0;
        if (v171)
        {
          v164 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v167 & 1) == 0 || (*(_BYTE *)(a1 + 214) & 2) != 0)
        {
LABEL_251:
          v157 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if ((v157 & 1) == 0)
          {
            v166 = 0;
            goto LABEL_349;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v166 = 0;
            goto LABEL_350;
          }
        }
        goto LABEL_347;
    }
  }
}

void sub_188F0A658(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0A994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0ACD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0AE18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0AF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0B2AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0B3F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0B534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0BD50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0C340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0C488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0C6B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0C7FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0CA28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F0EB04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTrafficBannerTextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[9];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[4], "readAll:", 1);
}

unint64_t GEOTrafficBannerTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 148))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTrafficBannerTextReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 152));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 144) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 148) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTrafficBannerTextReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTrafficBannerTextReadAllFrom_initialTag;
  Specified = GEOTrafficBannerTextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOTrafficBannerTextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 152));
  return Specified;
}

void sub_188F0EE1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficBannerTextReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficBannerTextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F0EE7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficBannerTextIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  _BOOL8 v103;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_192;
          goto LABEL_183;
        case 2u:
          if (v15 == 2)
            goto LABEL_183;
          goto LABEL_192;
        case 3u:
          if (v15 == 2)
            goto LABEL_183;
          goto LABEL_192;
        case 4u:
        case 5u:
        case 6u:
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_192;
          goto LABEL_188;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficBannerTextButtonIsValid(a1))
            goto LABEL_192;
          goto LABEL_188;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v22 = v73++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x15u:
          if (v15 == 2)
            goto LABEL_183;
          goto LABEL_192;
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v78 = 0;
          while (1)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
            *(_QWORD *)&a1[v79] = v81;
            if (v82 < 0)
            {
              v22 = v78++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x17u:
          if (v15 == 2)
            goto LABEL_183;
          goto LABEL_192;
        case 0x18u:
        case 0x19u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTriggerPointRangeIsValid(a1))
            goto LABEL_192;
          goto LABEL_188;
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v83 = 0;
          while (1)
          {
            v84 = *v2;
            v85 = *(_QWORD *)&a1[v84];
            v86 = v85 + 1;
            if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
            *(_QWORD *)&a1[v84] = v86;
            if (v87 < 0)
            {
              v22 = v83++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v88 = 0;
          while (1)
          {
            v89 = *v2;
            v90 = *(_QWORD *)&a1[v89];
            v91 = v90 + 1;
            if (v90 == -1 || v91 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v92 = *(char *)(*(_QWORD *)&a1[*v5] + v90);
            *(_QWORD *)&a1[v89] = v91;
            if (v92 < 0)
            {
              v22 = v88++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v93 = 0;
          while (1)
          {
            v94 = *v2;
            v95 = *(_QWORD *)&a1[v94];
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
              goto LABEL_181;
            v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
            *(_QWORD *)&a1[v94] = v96;
            if (v97 < 0)
            {
              v22 = v93++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_189;
          }
        case 0x1Du:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_192;
          goto LABEL_188;
        case 0x1Eu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v98 = 0;
          break;
        case 0x1Fu:
          if (v15 == 2)
            goto LABEL_183;
          goto LABEL_192;
        case 0x20u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCameraInputIsValid(a1))
            goto LABEL_192;
LABEL_188:
          PBReaderRecallMark();
          continue;
        default:
LABEL_183:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_192:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v99 = *v2;
        v100 = *(_QWORD *)&a1[v99];
        v101 = v100 + 1;
        if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
          break;
        v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
        *(_QWORD *)&a1[v99] = v101;
        if (v102 < 0)
        {
          v22 = v98++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_189;
      }
LABEL_181:
      a1[*v4] = 1;
LABEL_189:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v103 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v103;
}

BOOL GEOTriggerPointRangeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if ((_DWORD)v17 == 2 || (_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTriggerPointIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOTrafficBannerTextButtonIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_44;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_46;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_43;
        }
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_188F102EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTrafficBannerTextIsDirty(uint64_t a1)
{
  unint64_t v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  v2 = *(_QWORD *)(a1 + 212);
  if ((v2 & 0x238000000) != 0)
    return 1;
  if ((v2 & 0x400000) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 212);
  }
  if ((v2 & 0x800000) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 212);
  }
  if ((v2 & 0x80000000) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 128)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 212);
  }
  if ((v2 & 0x2000000) != 0)
    return 1;
  if ((v2 & 0x100000000) != 0)
  {
    if (GEOTriggerPointRangeIsDirty(*(_QWORD *)(a1 + 136)))
      return 1;
    v2 = *(_QWORD *)(a1 + 212);
  }
  if ((v2 & 0x40000000) != 0)
  {
    if (GEOTriggerPointRangeIsDirty(*(_QWORD *)(a1 + 120)))
      return 1;
    v2 = *(_QWORD *)(a1 + 212);
  }
  if ((v2 & 0x1000000) != 0)
    return 1;
  if ((v2 & 0x100000) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 212);
  }
  if ((v2 & 0x240000) != 0)
    return 1;
  if ((v2 & 0x80000) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) == 0)
    {
      v2 = *(_QWORD *)(a1 + 212);
      return (v2 >> 26) & 1;
    }
    return 1;
  }
  return (v2 >> 26) & 1;
}

os_unfair_lock_s *GEOTrafficBannerTextIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOTrafficBannerTextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 38);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F112F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F124AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficBannerTextButtonReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  unint64_t v20;
  GEOFormattedString *v21;
  void *v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  id v36;
  void *v37;
  uint64_t v38;
  _BOOL8 v39;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v5[*v8])
          goto LABEL_53;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          goto LABEL_53;
        v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
          break;
        if ((_DWORD)v20 == 2)
        {
          v30 = 0;
          v31 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v32 = *v6;
            v33 = *(_QWORD *)&v5[v32];
            v34 = v33 + 1;
            if (v33 == -1 || v34 > *(_QWORD *)&v5[*v7])
              break;
            v35 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v33);
            *(_QWORD *)&v5[v32] = v34;
            v25 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0)
              goto LABEL_48;
            v30 += 7;
            v17 = v31++ >= 9;
            if (v17)
            {
              LODWORD(v25) = 0;
              goto LABEL_50;
            }
          }
          v5[*v8] = 1;
LABEL_48:
          if (v5[*v8])
            LODWORD(v25) = 0;
LABEL_50:
          v38 = 24;
LABEL_51:
          *(_DWORD *)(a1 + v38) = v25;
          goto LABEL_52;
        }
        if ((_DWORD)v20 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v21 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v21, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          v22 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v21;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v36 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v37 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v36;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
LABEL_52:
        if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
          goto LABEL_53;
      }
      v23 = 0;
      v24 = 0;
      v25 = 0;
      *(_BYTE *)(a1 + 32) |= 2u;
      while (1)
      {
        v26 = *v6;
        v27 = *(_QWORD *)&v5[v26];
        v28 = v27 + 1;
        if (v27 == -1 || v28 > *(_QWORD *)&v5[*v7])
          break;
        v29 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v27);
        *(_QWORD *)&v5[v26] = v28;
        v25 |= (unint64_t)(v29 & 0x7F) << v23;
        if ((v29 & 0x80) == 0)
          goto LABEL_44;
        v23 += 7;
        v17 = v24++ >= 9;
        if (v17)
        {
          LODWORD(v25) = 0;
          goto LABEL_46;
        }
      }
      v5[*v8] = 1;
LABEL_44:
      if (v5[*v8])
        LODWORD(v25) = 0;
LABEL_46:
      v38 = 28;
      goto LABEL_51;
    }
LABEL_53:
    v39 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    v39 = 0;
  }
  objc_sync_exit(v5);

  return v39;
}

void sub_188F13470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficBannerTextButtonReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficBannerTextButtonReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F134D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F13B64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficCameraReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  GEOLatLng *v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  __int16 v75;
  int v76;
  __int16 v77;
  void *v78;
  int v80;
  int *v81;
  char v82;
  char v83;
  char v84;
  char v85;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 100)), (uint16x4_t)0xFFF7FFF9FFFAFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 100) >> 10) & 1)+ ((*(_WORD *)(a1 + 100) >> 5) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v82 = v16 & ~(_BYTE)v11 | v9;
        v83 = v16 | v11 | v82;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v84 = (v17 == 0) | v16 | v11;
        v85 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_140;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_140:
      v80 = 1;
      goto LABEL_141;
    }
    v31 = v23 >> 3;
    v32 = v85;
    if ((v84 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_105;
        if ((*(_WORD *)(a1 + 100) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_160;
        v75 = *(_WORD *)(a1 + 100) << 9;
        goto LABEL_134;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_105;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_110:
        v74 = 96;
        goto LABEL_123;
      case 3:
        if (!v32)
          goto LABEL_105;
        if ((*(_WORD *)(a1 + 100) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v75 = *(_WORD *)(a1 + 100) << 7;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v49 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_159;
        PBReaderRecallMark();
        v50 = 40;
        goto LABEL_87;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_105;
        v51 = 0;
        v52 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          v53 = *v18;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v44 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v28 = v52++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_114:
        v74 = 92;
        goto LABEL_123;
      case 5:
        if (!v32)
          goto LABEL_105;
        if ((*(_WORD *)(a1 + 100) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v75 = *(_WORD *)(a1 + 100) << 8;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v49 = objc_alloc_init(GEOMiniCard);
        if (!GEOMiniCardReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_159;
        PBReaderRecallMark();
        v50 = 32;
        goto LABEL_87;
      case 6:
        if (!v32)
          goto LABEL_105;
        if ((*(_WORD *)(a1 + 100) & 0x200) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
LABEL_77:
          v57 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_160;
        v75 = *(_WORD *)(a1 + 100) << 6;
        goto LABEL_134;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_105;
        *(_WORD *)(a1 + 100) |= 1u;
        v58 = *v18;
        v59 = *(_QWORD *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v60 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v59);
          *(_QWORD *)(v3 + v58) = v59 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v60 = 0;
        }
        *(_QWORD *)(a1 + 56) = v60;
        goto LABEL_136;
      case 8:
        if (!v32)
          goto LABEL_105;
        if ((*(_WORD *)(a1 + 100) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v75 = 32 * *(_WORD *)(a1 + 100);
LABEL_134:
          v7 += v75 >> 15;
LABEL_135:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v49 = objc_alloc_init(GEOMiniCard);
        if (GEOMiniCardReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v50 = 64;
LABEL_87:
          v57 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;
LABEL_88:

          --v7;
          goto LABEL_135;
        }
LABEL_159:

LABEL_160:
        v80 = 0;
        v81 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_142:
        if ((v82 & 1) != 0)
LABEL_143:
          *(_WORD *)(a1 + v81[676]) |= 0x20u;
        if (v85 & 1 | ((v80 & 1) == 0))
        {
          *(_WORD *)(a1 + v81[676]) |= 0x40u;
          *(_WORD *)(a1 + v81[676]) |= 0x100u;
          *(_WORD *)(a1 + v81[676]) |= 0x80u;
          *(_WORD *)(a1 + v81[676]) |= 0x200u;
          *(_WORD *)(a1 + v81[676]) |= 0x400u;
        }
        else if (v17)
        {
          while (1)
          {
            v76 = *v17++;
            v77 = 64;
            switch(v76)
            {
              case 0:
                goto LABEL_153;
              case 1:
                goto LABEL_152;
              case 3:
                v77 = 256;
                goto LABEL_152;
              case 5:
                v77 = 128;
                goto LABEL_152;
              case 6:
                v77 = 512;
                goto LABEL_152;
              case 8:
                v77 = 1024;
LABEL_152:
                *(_WORD *)(a1 + v81[676]) |= v77;
                break;
              default:
                continue;
            }
          }
        }
LABEL_153:
        if (v80)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v85 & 1) != 0)
        {
          v78 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_105;
        v61 = 0;
        v62 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        while (2)
        {
          v63 = *v18;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v44 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v28 = v62++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_118:
        v74 = 84;
        goto LABEL_123;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_105;
        v67 = 0;
        v68 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          v69 = *v18;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v44 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v28 = v68++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_122:
        v74 = 88;
LABEL_123:
        *(_DWORD *)(a1 + v74) = v44;
        goto LABEL_136;
      default:
        if ((v82 & 1) == 0 || (*(_WORD *)(a1 + 100) & 0x20) != 0)
        {
LABEL_105:
          v73 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v73 & 1) == 0)
          {
            v80 = 0;
LABEL_141:
            v81 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_142;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v41)
          {
            v80 = 0;
            v81 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_143;
          }
        }
LABEL_136:
        if (!(v83 & 1 | (v7 != 0)))
          goto LABEL_140;
        continue;
    }
  }
}

void sub_188F14954(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F14B08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F14C48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F14DF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F15B14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficCameraReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTrafficCameraReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTrafficCameraReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTrafficCameraReadAllFrom_initialTag;
  Specified = GEOTrafficCameraReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188F15CDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficCameraReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficCameraReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F15D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficCameraIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_73;
          goto LABEL_46;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_68;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_70;
          }
        case 3u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
            goto LABEL_36;
          goto LABEL_73;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_68;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_70;
          }
        case 5u:
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMiniCardIsValid(a1))
            goto LABEL_73;
LABEL_36:
          PBReaderRecallMark();
          continue;
        case 6u:
          if (v16 == 2)
            goto LABEL_46;
          goto LABEL_73;
        case 7u:
          if (v16 != 1)
            goto LABEL_73;
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_69;
          v31 = v30 + 8;
          if (v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_69;
          *(_QWORD *)&a1[v29] = v31;
          continue;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_68;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v23 = v32++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_70;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v37 = 0;
          break;
        default:
LABEL_46:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_73:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v23 = v37++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_70;
      }
LABEL_68:
      v14 = *v4;
LABEL_69:
      a1[v14] = 1;
LABEL_70:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

void sub_188F16398(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTrafficCameraIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 100);
  if ((v2 & 0x940) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if ((GEOMiniCardIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
    return (uint64_t)GEOMiniCardIsDirty(*(os_unfair_lock_s **)(a1 + 64));
  else
    return 0;
}

os_unfair_lock_s *GEOTrafficCameraIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOTrafficCameraIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F16938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F16F78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorAndOffsetReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__color;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__color;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__color;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__offset;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__offset;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__offset;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188F178EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorAndOffsetReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficColorAndOffsetReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F1794C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorAndOffsetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOTrafficColorInfoReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOTrafficColorAndOffset *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOTrafficColorAndOffset);
          if (!GEOTrafficColorAndOffsetReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addTrafficColorAndOffset:", v18, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_188F18840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorInfoReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficColorInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F188A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F19078(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficSignalReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  GEOLatLng *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  int v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v66 = v16 & ~(_BYTE)v11 | v8;
        v67 = v9;
        v68 = v16 | v11 | v66;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_88;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_88:
      v64 = 1;
      goto LABEL_89;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v58 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_85;
      case 2:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_75:
        v57 = 56;
        goto LABEL_80;
      case 3:
        if (!v32)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v58 = 8 * *(_BYTE *)(a1 + 60);
LABEL_85:
          v10 += v58 >> 7;
          goto LABEL_86;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v49 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v49;
LABEL_61:

          --v10;
LABEL_86:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_87;
        }

LABEL_109:
        v64 = 0;
        v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_90:
        if ((v66 & 1) != 0)
LABEL_91:
          *(_BYTE *)(a1 + v65[680]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[680]) |= 8u;
          *(_BYTE *)(a1 + v65[680]) |= 0x10u;
          goto LABEL_102;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v60 = *v17++;
              v59 = v60;
              if (v60 == 1)
                break;
              if (v59 == 3)
              {
                v61 = 16;
                goto LABEL_101;
              }
              if (!v59)
                goto LABEL_102;
            }
            v61 = 8;
LABEL_101:
            *(_BYTE *)(a1 + v65[680]) |= v61;
            continue;
          }
        }
LABEL_102:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_70;
        v50 = 0;
        v51 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v44 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_79:
        v57 = 52;
LABEL_80:
        *(_DWORD *)(a1 + v57) = v44;
        goto LABEL_87;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v64 = 0;
LABEL_89:
            v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_91;
          }
        }
LABEL_87:
        if (!(v68 & 1 | (v10 != 0)))
          goto LABEL_88;
        continue;
    }
  }
}

void sub_188F19A10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1A1DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficSignalReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTrafficSignalReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTrafficSignalReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTrafficSignalReadAllFrom_initialTag;
  Specified = GEOTrafficSignalReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188F1A37C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficSignalReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficSignalReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F1A3DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficSignalIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_188F1A864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficSignalIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188F1ABFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1AF50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1B1C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  id v41;
  void *v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFBFFFEFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 8) != 0)+ ((*(_BYTE *)(a1 + 84) & 0x40) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_86;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_86:
      v52 = 1;
      goto LABEL_87;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 4:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsNoticeFormatted:](a1, v40);
        goto LABEL_59;
      case 5:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 2) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsCommandFormatted:](a1, v40);
        goto LABEL_59;
      case 6:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 4) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsDetailFormatted:](a1, v40);
        goto LABEL_59;
      case 7:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 0x20) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsPriceFormatted:](a1, v40);
LABEL_59:

        goto LABEL_84;
      case 9:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v47 = 16 * *(_BYTE *)(a1 + 84);
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        v44 = 40;
        goto LABEL_76;
      case 10:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v47 = 2 * *(_BYTE *)(a1 + 84);
LABEL_83:
          v7 += v47 >> 7;
LABEL_84:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_86;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v40 = objc_alloc_init(GEOTransitListTimeInstruction);
        if (GEOTransitListTimeInstructionReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v44 = 64;
LABEL_76:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v40;

          --v7;
          goto LABEL_84;
        }
LABEL_105:

LABEL_106:
        v52 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
        v53 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        if ((v54 & 1) != 0)
LABEL_88:
          *(_BYTE *)(a1 + v53[713]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[713]) |= 0x10u;
          *(_BYTE *)(a1 + v53[713]) |= 2u;
          *(_BYTE *)(a1 + v53[713]) |= 4u;
          *(_BYTE *)(a1 + v53[713]) |= 0x20u;
          *(_BYTE *)(a1 + v53[713]) |= 8u;
          *(_BYTE *)(a1 + v53[713]) |= 0x40u;
        }
        else if (v20)
        {
          while (1)
          {
            v48 = *v20++;
            v49 = 16;
            switch(v48)
            {
              case 0:
                goto LABEL_99;
              case 4:
                goto LABEL_98;
              case 5:
                v49 = 2;
                goto LABEL_98;
              case 6:
                v49 = 4;
                goto LABEL_98;
              case 7:
                v49 = 32;
                goto LABEL_98;
              case 9:
                v49 = 8;
                goto LABEL_98;
              case 10:
                v49 = 64;
LABEL_98:
                *(_BYTE *)(a1 + v53[713]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_99:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_77:
          v46 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_88;
          }
        }
        goto LABEL_85;
    }
  }
}

void sub_188F1BCAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1BFE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1C314(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1C648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1C788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1D6D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitListInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v36;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v36 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
    }
    while (v4);
  }

  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v32;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v32 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v31 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
    }
    while (v9);
  }

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v12 = a1[4];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v28;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v28 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
    }
    while (v14);
  }

  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v17 = a1[7];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v24;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v24 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v23);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
    }
    while (v19);
  }

  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[8], "readAll:", 1);
}

unint64_t GEOTransitListInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTransitListInstructionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTransitListInstructionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTransitListInstructionReadAllFrom_initialTag;
  Specified = GEOTransitListInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOTransitListInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_188F1DB58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTransitListInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F1DBB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitListTimeInstructionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if ((_DWORD)v17 == 2 || (_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_188F1E20C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitListInstructionIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_BYTE *)(a1 + 84);
  if ((v2 & 0xB6) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 84) & 8) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 84);
  }
  if ((v2 & 0x40) == 0)
    goto LABEL_10;
  if ((GEOTransitListTimeInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) == 0)
  {
    v2 = *(_BYTE *)(a1 + 84);
LABEL_10:
    if ((v2 & 0x10) != 0)
    {
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v5 = *(id *)(a1 + 48);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v33;
LABEL_13:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v33 != v8)
            objc_enumerationMutation(v5);
          if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v32 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_51;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
            if (v7)
              goto LABEL_13;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 2) != 0)
    {
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v5 = *(id *)(a1 + 24);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v29;
LABEL_23:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v29 != v12)
            objc_enumerationMutation(v5);
          if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v28 + 1) + 8 * v13)) & 1) != 0)
            goto LABEL_51;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
            if (v11)
              goto LABEL_23;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 4) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 32);
      v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v25;
LABEL_33:
        v17 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v16)
            objc_enumerationMutation(v5);
          if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v17)) & 1) != 0)
            goto LABEL_51;
          if (v15 == ++v17)
          {
            v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
            if (v15)
              goto LABEL_33;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 84);
    }
    if ((v2 & 0x20) == 0)
      return 0;
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = *(id *)(a1 + 56);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
    if (!v3)
    {
LABEL_52:

      return v3;
    }
    v18 = *(_QWORD *)v21;
LABEL_44:
    v19 = 0;
    while (1)
    {
      if (*(_QWORD *)v21 != v18)
        objc_enumerationMutation(v5);
      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v19)) & 1) != 0)
        break;
      if (v3 == ++v19)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
        if (v3)
          goto LABEL_44;
        goto LABEL_52;
      }
    }
LABEL_51:
    v3 = 1;
    goto LABEL_52;
  }
  return 1;
}

os_unfair_lock_s *GEOTransitListInstructionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOTransitListInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F1EC7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1F234(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F1F780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListTimeInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOFormattedString *v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_79:
      v57 = 1;
      goto LABEL_80;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v59 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_69;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            v41 = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          v41 = 0;
LABEL_71:
        *(_BYTE *)(a1 + 52) = v41 != 0;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_100;
          v37 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
            goto LABEL_99;
          PBReaderRecallMark();
          v38 = 24;
LABEL_59:
          v46 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v8;
LABEL_77:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_100;
        v51 = 32 * *(_BYTE *)(a1 + 56);
LABEL_76:
        v8 += v51 >> 7;
        goto LABEL_77;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_80:
      v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v61 & 1 | (v8 != 0)))
      goto LABEL_79;
  }
  if (!v32)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_100;
    v51 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_100;
  v37 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v38 = 32;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
  if ((v60 & 1) == 0)
    goto LABEL_83;
LABEL_82:
  *(_BYTE *)(a1 + v58[682]) |= 2u;
LABEL_83:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[682]) |= 4u;
    *(_BYTE *)(a1 + v58[682]) |= 8u;
    goto LABEL_93;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 8;
          goto LABEL_92;
        }
        if (!v52)
          goto LABEL_93;
      }
      v54 = 4;
LABEL_92:
      *(_BYTE *)(a1 + v58[682]) |= v54;
      continue;
    }
  }
LABEL_93:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188F1FEEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F20600(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListTimeInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTransitListTimeInstructionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTransitListTimeInstructionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTransitListTimeInstructionReadAllFrom_initialTag;
  Specified = GEOTransitListTimeInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188F207B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListTimeInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTransitListTimeInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F20814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F209C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitListTimeInstructionIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 56);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 56);
  }
  if ((v2 & 8) != 0)
    return (uint64_t)GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  else
    return 0;
}

os_unfair_lock_s *GEOTransitListTimeInstructionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOTransitListTimeInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F20D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F21030(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2130C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  char v17;
  int *v18;
  int *v19;
  int v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  int *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  GEOFareOptions *v58;
  void *v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  int v82;
  int v83;
  char v84;
  void *v85;
  char v87;
  char v88;
  char v89;
  char v90;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v12 = ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v15 = v12 != 0;
        v16 = v15 & ~(_BYTE)v10 | v7;
        v17 = v15 | v10;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v15 | v10) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_121;
        v87 = v16;
        v89 = v17 | v16;
        v90 = (v19 == 0) | v17;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v88 = v15 | v10;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
LABEL_9:
        ++v9;
        v7 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_118;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v18;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_24;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_24:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_26:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_118:
      v20 = 1;
      goto LABEL_119;
    }
    v34 = v25 >> 3;
    v35 = v17;
    if ((v90 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 6:
        if (!v35 || (*(_BYTE *)(a1 + 80) & 0x10) != 0)
          goto LABEL_88;
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_140;
          while (1)
          {
            v40 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            {
              PBReaderRecallMark();
              v21 = (int *)MEMORY[0x1E0D82BC8];
              v17 = v88;
              goto LABEL_116;
            }
            v41 = 0;
            v42 = 0;
            v43 = 0;
            while (1)
            {
              v44 = *v18;
              v45 = *(_QWORD *)(v3 + v44);
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
                break;
              v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v45);
              *(_QWORD *)(v3 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                v30 = v42++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_52;
            }
            *(_BYTE *)(v3 + *v40) = 1;
LABEL_52:
            PBRepeatedInt32Add();
          }
        }
        v75 = 0;
        v76 = 0;
        v77 = 0;
        while (1)
        {
          v78 = *v18;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v6))
            break;
          v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v79);
          *(_QWORD *)(v3 + v78) = v80;
          v77 |= (unint64_t)(v81 & 0x7F) << v75;
          if (v81 < 0)
          {
            v75 += 7;
            v30 = v76++ >= 9;
            if (!v30)
              continue;
          }
          goto LABEL_114;
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_114:
        PBRepeatedInt32Add();
        goto LABEL_115;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v30 = v52++ >= 9;
              if (v30)
              {
                LODWORD(v53) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v53) = 0;
LABEL_93:
        v74 = 68;
        goto LABEL_98;
      case 10:
        if (!v35)
          goto LABEL_88;
        if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_140;
          v9 += *(unsigned __int8 *)(a1 + 80) << 26 >> 31;
          goto LABEL_115;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_140;
        v58 = objc_alloc_init(GEOFareOptions);
        if (GEOFareOptionsReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          v59 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v58;

          --v9;
LABEL_115:
          v17 = v88;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_116;
        }

LABEL_140:
        v20 = 0;
        v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v17 = v88;
LABEL_120:
        v16 = v87;
LABEL_121:
        if ((v16 & 1) != 0)
LABEL_122:
          *(_BYTE *)(a1 + v11[686]) |= 8u;
        if (v17 & 1 | ((v20 & 1) == 0))
        {
          *(_BYTE *)(a1 + v11[686]) |= 0x10u;
          *(_BYTE *)(a1 + v11[686]) |= 0x20u;
          goto LABEL_133;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              v83 = *v19++;
              v82 = v83;
              if (v83 == 6)
                break;
              if (v82 == 10)
              {
                v84 = 32;
                goto LABEL_132;
              }
              if (!v82)
                goto LABEL_133;
            }
            v84 = 16;
LABEL_132:
            *(_BYTE *)(a1 + v11[686]) |= v84;
            continue;
          }
        }
LABEL_133:
        if (v20)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v17 & 1) == 0)
            return v3;
LABEL_137:
          v85 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
            goto LABEL_137;
        }
        return v3;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v60 = 0;
        v61 = 0;
        v53 = 0;
        *(_BYTE *)(a1 + 80) |= 2u;
        while (2)
        {
          v62 = *v18;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v53 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v30 = v61++ >= 9;
              if (v30)
              {
                LODWORD(v53) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v53) = 0;
LABEL_97:
        v74 = 72;
LABEL_98:
        *(_DWORD *)(a1 + v74) = v53;
        goto LABEL_116;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v66 = 0;
        v67 = 0;
        v68 = 0;
        *(_BYTE *)(a1 + 80) |= 4u;
        while (2)
        {
          v69 = *v18;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v30 = v67++ >= 9;
              if (v30)
              {
                v68 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v68 = 0;
LABEL_102:
        *(_BYTE *)(a1 + 76) = v68 != 0;
        goto LABEL_116;
      default:
        if ((v87 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 8) != 0)
        {
LABEL_88:
          v73 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v17 = v88;
          if ((v73 & 1) != 0)
            goto LABEL_116;
          v20 = 0;
LABEL_119:
          v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          goto LABEL_120;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v49 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v48;

        }
        v50 = PBUnknownFieldAdd();
        v17 = v88;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v50)
        {
          v20 = 0;
          v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
          goto LABEL_122;
        }
LABEL_116:
        if (!(v89 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_118;
        continue;
    }
  }
}

void sub_188F221F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F22FE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTransitOptionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTransitOptionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTransitOptionsReadAllFrom_initialTag;
  Specified = GEOTransitOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188F23180(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTransitOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F231E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F23408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitOptionsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 80) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188F237E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F23BC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F23E2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSignInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  _BOOL4 v20;
  int *v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOFormattedString *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  void *v46;
  char v48;
  int v49;

  v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
    v6 = (int *)MEMORY[0x1E0D82BD8];
    *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
    objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFDFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
    while (2)
    {
      v13 = 1;
      v14 = 1;
      v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          v8 = 1;
          goto LABEL_7;
        case -2:
          v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          v16 = v12 > 2;
          v17 = v16 & ~(_DWORD)v11 | v9;
          v18 = v16 | v11;
          if ((((v16 | v11) | v8) & 1) != 0)
            v19 = 0;
          else
            v19 = a3;
          v20 = v7 != 0;
          v21 = (int *)MEMORY[0x1E0D82BF0];
          v22 = 1;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_72;
          v48 = v17;
          v49 = v20 | v18 | v17;
          v24 = (int *)MEMORY[0x1E0D82BB8];
          break;
        default:
          ++v12;
LABEL_7:
          v13 = v9;
LABEL_8:
          v14 = v10;
          v15 = v11;
LABEL_10:
          ++v7;
          v9 = v13;
          v10 = v14;
          v11 = v15;
          continue;
      }
      break;
    }
    while (!*(_BYTE *)(v3 + *v23))
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      while (1)
      {
        v28 = *v21;
        v29 = *(_QWORD *)(v3 + v28);
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
        *(_QWORD *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0)
          goto LABEL_25;
        v25 += 7;
        if (v26++ >= 9)
        {
          v27 = 0;
          v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
      v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(_BYTE *)(v3 + *v23))
        v27 = 0;
LABEL_27:
      if (v33 || (v27 & 7) == 4)
        break;
      v35 = v27 >> 3;
      v36 = v18;
      if (!((v19 == 0) | v18 & 1))
      {
        v37 = v19;
        do
        {
          v39 = *v37++;
          v38 = v39;
          v36 = v39 != 0;
          if (v39)
            v40 = v38 == (_DWORD)v35;
          else
            v40 = 1;
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 4:
          if (!v36 || (*(_BYTE *)(a1 + 68) & 8) != 0)
            goto LABEL_68;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_89;
          v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
            goto LABEL_88;
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsNoticeFormatted:](a1, v41);
          goto LABEL_65;
        case 5:
          if (!v36 || (*(_BYTE *)(a1 + 68) & 2) != 0)
            goto LABEL_68;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_89;
          v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
            goto LABEL_88;
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsCommandFormatted:](a1, v41);
          goto LABEL_65;
        case 6:
          if (!v36 || (*(_BYTE *)(a1 + 68) & 4) != 0)
            goto LABEL_68;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_89;
          v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
            goto LABEL_88;
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsDetailFormatted:](a1, v41);
          goto LABEL_65;
        case 7:
          if (!v36 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
            goto LABEL_68;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_89;
          v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
LABEL_88:

LABEL_89:
            v22 = 0;
            v23 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_71;
          }
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsPriceFormatted:](a1, v41);
LABEL_65:

          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
          if ((v49 & 1) == 0)
            goto LABEL_70;
LABEL_69:
          if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_70;
          break;
        default:
          if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
          {
LABEL_68:
            v22 = PBReaderSkipValueWithTag();
            v23 = (int *)MEMORY[0x1E0D82BC8];
            if ((v22 & v49 & 1) == 0)
              goto LABEL_71;
            goto LABEL_69;
          }
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v22 = PBUnknownFieldAdd();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v22)
            goto LABEL_73;
          goto LABEL_66;
      }
    }
LABEL_70:
    v22 = 1;
LABEL_71:
    LOBYTE(v17) = v48;
LABEL_72:
    if ((v17 & 1) != 0)
LABEL_73:
      *(_BYTE *)(a1 + 68) |= 1u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(_BYTE *)(a1 + 68) |= 2u;
      *(_BYTE *)(a1 + 68) |= 4u;
      *(_BYTE *)(a1 + 68) |= 8u;
      *(_BYTE *)(a1 + 68) |= 0x10u;
    }
    else if (v19)
    {
      while (1)
      {
        v44 = *v19++;
        v45 = 2;
        switch(v44)
        {
          case 0:
            goto LABEL_82;
          case 4:
            v45 = 8;
            goto LABEL_81;
          case 5:
            goto LABEL_81;
          case 6:
            v45 = 4;
            goto LABEL_81;
          case 7:
            v45 = 16;
LABEL_81:
            *(_BYTE *)(a1 + 68) |= v45;
            break;
          default:
            continue;
        }
      }
    }
LABEL_82:
    if (v22)
    {
      v3 = *(_BYTE *)(v3 + *v23) == 0;
      if ((v18 & 1) == 0)
        return v3;
      goto LABEL_86;
    }
    v3 = 0;
    if ((v18 & 1) != 0)
    {
LABEL_86:
      v46 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188F247A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F24ADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F24E10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F25DB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitSignInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v35;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v35 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    }
    while (v4);
  }

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v31;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v31 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
    }
    while (v9);
  }

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v27;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v27 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
    }
    while (v14);
  }

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v17 = a1[6];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v23;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v23 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v22);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
    }
    while (v19);
  }

}

unint64_t GEOTransitSignInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTransitSignInstructionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTransitSignInstructionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTransitSignInstructionReadAllFrom_initialTag;
  Specified = GEOTransitSignInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOTransitSignInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188F26210(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSignInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTransitSignInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F26270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2665C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitSignInstructionIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 68);
  if ((v2 & 0x3E) == 0)
  {
    if ((*(_BYTE *)(a1 + 68) & 4) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v4 = *(id *)(a1 + 32);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v25;
LABEL_6:
        v8 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v7)
            objc_enumerationMutation(v4);
          if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v8)) & 1) != 0)
            goto LABEL_34;
          if (v6 == ++v8)
          {
            v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
            if (v6)
              goto LABEL_6;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 68);
    }
    if ((v2 & 8) != 0)
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v4 = *(id *)(a1 + 40);
      v9 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v21;
LABEL_16:
        v12 = 0;
        while (1)
        {
          if (*(_QWORD *)v21 != v11)
            objc_enumerationMutation(v4);
          if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v12)) & 1) != 0)
            goto LABEL_34;
          if (v10 == ++v12)
          {
            v10 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
            if (v10)
              goto LABEL_16;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 68);
    }
    if ((v2 & 0x10) == 0)
      return 0;
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v4 = *(id *)(a1 + 48);
    v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
    if (!v3)
    {
LABEL_35:

      return v3;
    }
    v13 = *(_QWORD *)v17;
LABEL_27:
    v14 = 0;
    while (1)
    {
      if (*(_QWORD *)v17 != v13)
        objc_enumerationMutation(v4);
      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v14)) & 1) != 0)
        break;
      if (v3 == ++v14)
      {
        v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
        if (v3)
          goto LABEL_27;
        goto LABEL_35;
      }
    }
LABEL_34:
    v3 = 1;
    goto LABEL_35;
  }
  return 1;
}

os_unfair_lock_s *GEOTransitSignInstructionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOTransitSignInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F26F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F27460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTraversalTimesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  _BOOL8 v53;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOTraversalTimes__estimatedSeconds;
                goto LABEL_64;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                v26 = &OBJC_IVAR___GEOTraversalTimes__estimatedSeconds;
                goto LABEL_67;
              }
            }
            v26 = &OBJC_IVAR___GEOTraversalTimes__estimatedSeconds;
            goto LABEL_65;
          case 2u:
            v29 = 0;
            v30 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 0x10u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOTraversalTimes__historicalEstimatedSeconds;
                goto LABEL_64;
              }
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v25 = v30++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOTraversalTimes__historicalEstimatedSeconds;
                  goto LABEL_67;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOTraversalTimes__historicalEstimatedSeconds;
            goto LABEL_65;
          case 3u:
            v35 = 0;
            v36 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOTraversalTimes__freeflowEstimatedSeconds;
                goto LABEL_64;
              }
              v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
              *(_QWORD *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v25 = v36++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOTraversalTimes__freeflowEstimatedSeconds;
                  goto LABEL_67;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOTraversalTimes__freeflowEstimatedSeconds;
            goto LABEL_65;
          case 4u:
            v41 = 0;
            v42 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (2)
            {
              v43 = *v4;
              v44 = *(_QWORD *)&v3[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOTraversalTimes__aggressiveEstimatedSeconds;
                goto LABEL_64;
              }
              v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
              *(_QWORD *)&v3[v43] = v45;
              v20 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v25 = v42++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOTraversalTimes__aggressiveEstimatedSeconds;
                  goto LABEL_67;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOTraversalTimes__aggressiveEstimatedSeconds;
            goto LABEL_65;
          case 5u:
            v47 = 0;
            v48 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if ((PBUnknownFieldAdd() & 1) == 0)
              goto LABEL_76;
            continue;
        }
        while (1)
        {
          v49 = *v4;
          v50 = *(_QWORD *)&v3[v49];
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
            break;
          v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
          *(_QWORD *)&v3[v49] = v51;
          v20 |= (unint64_t)(v52 & 0x7F) << v47;
          if ((v52 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOTraversalTimes__conservativeEstimatedSeconds;
            goto LABEL_65;
          }
          v47 += 7;
          v25 = v48++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            v26 = &OBJC_IVAR___GEOTraversalTimes__conservativeEstimatedSeconds;
            goto LABEL_67;
          }
        }
        v26 = &OBJC_IVAR___GEOTraversalTimes__conservativeEstimatedSeconds;
LABEL_64:
        v3[*v6] = 1;
LABEL_65:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_67:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v53 = v3[*v6] == 0;
  }
  else
  {
LABEL_76:
    v53 = 0;
  }
  objc_sync_exit(v3);

  return v53;
}

void sub_188F285C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTraversalTimesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTraversalTimesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F28620(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTraversalTimesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v37 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_65:
          v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v21 = v37++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOTriggerPointReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  _BOOL8 v50;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_53;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_55;
              }
            }
            v3[*v6] = 1;
LABEL_53:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_55:
            v47 = 20;
            goto LABEL_60;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_59:
            v47 = 16;
LABEL_60:
            *(_DWORD *)(a1 + v47) = v20;
            continue;
          case 3u:
            v33 = 0;
            v34 = 0;
            v35 = 0;
            *(_BYTE *)(a1 + 28) |= 8u;
            while (2)
            {
              v36 = *v4;
              v37 = *(_QWORD *)&v3[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
                *(_QWORD *)&v3[v36] = v38;
                v35 |= (unint64_t)(v39 & 0x7F) << v33;
                if (v39 < 0)
                {
                  v33 += 7;
                  v15 = v34++ >= 9;
                  if (v15)
                  {
                    v35 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v35 = 0;
LABEL_64:
            v48 = v35 != 0;
            v49 = 25;
            goto LABEL_69;
          case 4u:
            v40 = 0;
            v41 = 0;
            v42 = 0;
            *(_BYTE *)(a1 + 28) |= 4u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_72;
            continue;
        }
        while (1)
        {
          v43 = *v4;
          v44 = *(_QWORD *)&v3[v43];
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
            break;
          v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
          *(_QWORD *)&v3[v43] = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_66;
          v40 += 7;
          v15 = v41++ >= 9;
          if (v15)
          {
            v42 = 0;
            goto LABEL_68;
          }
        }
        v3[*v6] = 1;
LABEL_66:
        if (v3[*v6])
          v42 = 0;
LABEL_68:
        v48 = v42 != 0;
        v49 = 24;
LABEL_69:
        *(_BYTE *)(a1 + v49) = v48;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v50 = v3[*v6] == 0;
  }
  else
  {
LABEL_72:
    v50 = 0;
  }
  objc_sync_exit(v3);

  return v50;
}

void sub_188F29C40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTriggerPointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTriggerPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F29CA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTriggerPointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_188F2A704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTriggerPointRangeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  GEOTriggerPoint *v35;
  uint64_t v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  void *v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  char v49;
  int v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v57 = v14 & ~(_BYTE)v10 | v9;
        v58 = v14 | v10 | v57;
        if ((((v14 | v10) | v7) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        v59 = (v15 == 0) | v14 | v10;
        v60 = v14 | v10;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_78;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_24;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_24:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_26:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_78:
      v55 = 1;
      goto LABEL_79;
    }
    v29 = v21 >> 3;
    v30 = v60;
    if ((v59 & 1) == 0)
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 3)
    {
      if ((v7 & 1) == 0)
        goto LABEL_65;
      v37 = 0;
      v38 = 0;
      v39 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v40 = *v16;
        v41 = *(_QWORD *)(v3 + v40);
        v42 = v41 + 1;
        if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
          break;
        v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v41);
        *(_QWORD *)(v3 + v40) = v42;
        v39 |= (unint64_t)(v43 & 0x7F) << v37;
        if ((v43 & 0x80) == 0)
          goto LABEL_68;
        v37 += 7;
        v26 = v38++ >= 9;
        if (v26)
        {
          LODWORD(v39) = 0;
          goto LABEL_70;
        }
      }
      *(_BYTE *)(v3 + *v17) = 1;
LABEL_68:
      if (*(_BYTE *)(v3 + *v17))
        LODWORD(v39) = 0;
LABEL_70:
      *(_DWORD *)(a1 + 52) = v39;
      goto LABEL_77;
    }
    if ((_DWORD)v29 == 2)
      break;
    if ((_DWORD)v29 == 1)
    {
      if (!v30)
        goto LABEL_65;
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v35 = objc_alloc_init(GEOTriggerPoint);
        if (!GEOTriggerPointReadAllFrom((uint64_t)v35, (void *)v3))
          goto LABEL_97;
        PBReaderRecallMark();
        v36 = 32;
LABEL_58:
        v44 = *(void **)(a1 + v36);
        *(_QWORD *)(a1 + v36) = v35;

        --v8;
LABEL_76:
        v17 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_77;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_98;
      v49 = 16 * *(_BYTE *)(a1 + 56);
LABEL_75:
      v8 += v49 >> 7;
      goto LABEL_76;
    }
    if ((v57 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
    {
LABEL_65:
      v48 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v48 & 1) == 0)
      {
        v55 = 0;
        goto LABEL_79;
      }
      goto LABEL_77;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v46 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v45;

    }
    v47 = PBUnknownFieldAdd();
    v17 = (int *)MEMORY[0x1E0D82BC8];
    if (!v47)
    {
      v55 = 0;
      v56 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v58 & 1 | (v8 != 0)))
      goto LABEL_78;
  }
  if (!v30)
    goto LABEL_65;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_98;
    v49 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_98;
  v35 = objc_alloc_init(GEOTriggerPoint);
  if (GEOTriggerPointReadAllFrom((uint64_t)v35, (void *)v3))
  {
    PBReaderRecallMark();
    v36 = 24;
    goto LABEL_58;
  }
LABEL_97:

LABEL_98:
  v55 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
  v56 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  if ((v57 & 1) == 0)
    goto LABEL_81;
LABEL_80:
  *(_BYTE *)(a1 + v56[762]) |= 2u;
LABEL_81:
  if (v60 & 1 | ((v55 & 1) == 0))
  {
    *(_BYTE *)(a1 + v56[762]) |= 8u;
    *(_BYTE *)(a1 + v56[762]) |= 4u;
    goto LABEL_91;
  }
  if (v15)
  {
    while (2)
    {
      while (1)
      {
        v51 = *v15++;
        v50 = v51;
        if (v51 == 1)
          break;
        if (v50 == 2)
        {
          v52 = 4;
          goto LABEL_90;
        }
        if (!v50)
          goto LABEL_91;
      }
      v52 = 8;
LABEL_90:
      *(_BYTE *)(a1 + v56[762]) |= v52;
      continue;
    }
  }
LABEL_91:
  if (v55)
    v3 = *(_BYTE *)(v3 + *v17) == 0;
  else
    v3 = 0;
  if ((v60 & 1) != 0)
  {
    v53 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188F2AE3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2B554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTriggerPointRangeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTriggerPointRangeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTriggerPointRangeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTriggerPointRangeReadAllFrom_initialTag;
  Specified = GEOTriggerPointRangeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188F2B70C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTriggerPointRangeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTriggerPointRangeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F2B76C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2B928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTriggerPointRangeIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188F2BC28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2BF0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTripInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188F2C6A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTripInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTripInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F2C700(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTripInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_188F2CD90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v52 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v55 = v16;
        v53 = v17;
        v54 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v51 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v55;
    if ((v54 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_78;
        v45 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_44;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v51 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v53 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 32;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_78:
  v51 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v52 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v55 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v18)
  {
    while (1)
    {
      v48 = *v18++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_68:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_72;
      }
    }
    v46 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188F2D394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2D8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOURLDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOURLDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOURLDataReadAllFrom_initialTag;
  Specified = GEOURLDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188F2DA58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F2DAB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2DC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188F2DEE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F2E108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUpdateLocationReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOUpdateLocation__metersFromStartOfRoute;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOUpdateLocation__metersFromStartOfRoute;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOUpdateLocation__metersFromStartOfRoute;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOUpdateLocation__minSecondsSinceLastUpdate;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOUpdateLocation__minSecondsSinceLastUpdate;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOUpdateLocation__minSecondsSinceLastUpdate;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188F2EA58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUpdateLocationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOUpdateLocationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F2EAB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUserPreferencesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOEVChargingPreference *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  void *v35;
  BOOL v36;
  uint64_t v37;
  _BOOL8 v38;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v26 = objc_alloc_init(GEOEVChargingPreference);
          if (!GEOEVChargingPreferenceReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addEvChargingPreferences:", v26, 0, 0);

        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            v27 = 0;
            v28 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            while (1)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
                break;
              v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if ((v33 & 0x80) == 0)
                goto LABEL_48;
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                v29 = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6])
              v29 = 0;
LABEL_50:
            v36 = v29 != 0;
            v37 = 24;
            goto LABEL_51;
          }
          if ((_DWORD)v18 == 1)
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_44;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                v21 = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6])
              v21 = 0;
LABEL_46:
            v36 = v21 != 0;
            v37 = 25;
LABEL_51:
            *(_BYTE *)(a1 + v37) = v36;
            continue;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v38 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    v38 = 0;
  }
  objc_sync_exit(v3);

  return v38;
}

void sub_188F2FB14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUserPreferencesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOUserPreferencesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F2FB74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVehicleInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOVehicleInfo__carPlayConnectionStatus;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOVehicleInfo__carPlayConnectionStatus;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOVehicleInfo__carPlayConnectionStatus;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOVehicleInfo__intentsConnectionStatus;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOVehicleInfo__intentsConnectionStatus;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOVehicleInfo__intentsConnectionStatus;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_188F30EE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVehicleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVehicleInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F30F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVehicleInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_188F316F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVehicleSpecificationsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOLPRInfo *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_84;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_84:
      v57 = 1;
      goto LABEL_85;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_101;
          v38 = objc_alloc_init(GEOLPRInfo);
          if (GEOLPRInfoReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            v39 = 32;
            goto LABEL_54;
          }
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_101;
        v52 = 16 * *(_BYTE *)(a1 + 64);
        goto LABEL_81;
      case 2:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 32 * *(_BYTE *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v38 = objc_alloc_init(GEOEVInfo);
        if (!GEOEVInfoReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        v39 = 24;
        goto LABEL_54;
      case 3:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 8 * *(_BYTE *)(a1 + 64);
LABEL_81:
          v8 += v52 >> 7;
LABEL_82:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_83:
          if (!(v60 & 1 | (v8 != 0)))
            goto LABEL_84;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v38 = objc_alloc_init(GEOVehicleInfo);
        if (GEOVehicleInfoReadAllFrom((uint64_t)v38, (void *)v3))
        {
          PBReaderRecallMark();
          v39 = 40;
LABEL_54:
          v40 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v8;
          goto LABEL_82;
        }
LABEL_100:

LABEL_101:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        if ((v59 & 1) != 0)
LABEL_86:
          *(_BYTE *)(a1 + v58[794]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[794]) |= 8u;
          *(_BYTE *)(a1 + v58[794]) |= 4u;
          *(_BYTE *)(a1 + v58[794]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 8;
            switch(v53)
            {
              case 0:
                goto LABEL_94;
              case 1:
                goto LABEL_93;
              case 2:
                v54 = 4;
                goto LABEL_93;
              case 3:
                v54 = 16;
LABEL_93:
                *(_BYTE *)(a1 + v58[794]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_69;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v47 = *v19;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v29 = v45++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_74:
        *(_DWORD *)(a1 + 60) = v46;
        goto LABEL_83;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v43)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
            goto LABEL_86;
          }
        }
        goto LABEL_83;
    }
  }
}

void sub_188F31F30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F32070(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F32A38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVehicleSpecificationsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOVehicleSpecificationsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOVehicleSpecificationsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOVehicleSpecificationsReadAllFrom_initialTag;
  Specified = GEOVehicleSpecificationsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188F32BFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVehicleSpecificationsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVehicleSpecificationsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F32C5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F32E2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVehicleSpecificationsIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if (GEOLPRInfoIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 64);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOEVInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 64);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOVehicleSpecificationsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOVehicleSpecificationsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F331E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F33528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F337CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVisualLaneGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  int *v20;
  _BOOL4 v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOFormattedString *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  void *v46;
  char v48;
  int v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = v7 != 0;
        v22 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_68;
        v48 = v17;
        v49 = v21 | v18 | v17;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_66;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v20;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      if (v26++ >= 9)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_66:
      v22 = 1;
      goto LABEL_67;
    }
    v35 = v27 >> 3;
    v36 = v18;
    if (!((v19 == 0) | v18 & 1))
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 3)
    {
      if (!v36 || (*(_BYTE *)(a1 + 60) & 8) != 0)
      {
LABEL_64:
        v22 = PBReaderSkipValueWithTag();
        if ((v22 & v49 & 1) == 0)
          goto LABEL_67;
        goto LABEL_65;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_84;
      v41 = objc_alloc_init(GEOFormattedString);
      if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
        goto LABEL_83;
      PBReaderRecallMark();
      -[GEOVisualLaneGuidance _addNoFlagsTitle:](a1, v41);
      goto LABEL_56;
    }
    if ((_DWORD)v35 == 2)
      break;
    if ((_DWORD)v35 == 1)
    {
      if (!v36 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        goto LABEL_64;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_84;
      v41 = objc_alloc_init(GEOLaneInfo);
      if (!GEOLaneInfoReadAllFrom((uint64_t)v41, (void *)v3))
        goto LABEL_83;
      PBReaderRecallMark();
      -[GEOVisualLaneGuidance _addNoFlagsLaneInfo:](a1, v41);
      goto LABEL_56;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_64;
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v22 = PBUnknownFieldAdd();
    if (!v22)
      goto LABEL_69;
LABEL_62:
    if ((v49 & 1) == 0)
      goto LABEL_66;
LABEL_65:
    v23 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_66;
  }
  if (!v36 || (*(_BYTE *)(a1 + 60) & 2) != 0)
    goto LABEL_64;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v41 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOVisualLaneGuidance _addNoFlagsInstruction:](a1, v41);
LABEL_56:

    goto LABEL_62;
  }
LABEL_83:

LABEL_84:
  v22 = 0;
LABEL_67:
  LOBYTE(v17) = v48;
LABEL_68:
  if ((v17 & 1) != 0)
LABEL_69:
    *(_BYTE *)(a1 + 60) |= 1u;
  if (v18 & 1 | ((v22 & 1) == 0))
  {
    *(_BYTE *)(a1 + 60) |= 4u;
    *(_BYTE *)(a1 + 60) |= 2u;
    *(_BYTE *)(a1 + 60) |= 8u;
  }
  else if (v19)
  {
    while (1)
    {
      v44 = *v19++;
      v45 = 4;
      switch(v44)
      {
        case 0:
          goto LABEL_77;
        case 1:
          goto LABEL_76;
        case 2:
          v45 = 2;
          goto LABEL_76;
        case 3:
          v45 = 8;
LABEL_76:
          *(_BYTE *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_77:
  if (v22)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v18 & 1) == 0)
      return v3;
LABEL_81:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v18 & 1) != 0)
      goto LABEL_81;
  }
  return v3;
}

void sub_188F34098(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F343CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F350F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOVisualLaneGuidanceCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOVisualLaneGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOVisualLaneGuidanceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOVisualLaneGuidanceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOVisualLaneGuidanceReadAllFrom_initialTag;
  Specified = GEOVisualLaneGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOVisualLaneGuidanceCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188F354B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVisualLaneGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOVisualLaneGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F35514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F35864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVisualLaneGuidanceIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x1E) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 40);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOVisualLaneGuidanceIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOVisualLaneGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F35F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F36348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3685C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalkingOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  int *v34;
  int *v35;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  GEOWalkingUserPreferences *v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  id v55;
  void *v56;
  int v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  int v66;
  int v67;
  char v68;
  void *v69;
  char v71;
  char v72;
  int v73;
  char v74;
  char v75;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v12 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v15 = v12 != 0;
        v16 = v15 & ~(_BYTE)v10 | v7;
        v17 = v15 | v10;
        if ((((v15 | v10) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v73 = 1;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v16;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_96;
        v71 = v16;
        v74 = v17 | v16;
        v75 = (v18 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v72 = v17;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
LABEL_9:
        ++v9;
        v7 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v20))
      goto LABEL_93;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_24;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_24:
    v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_26:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_93:
      v73 = 1;
      goto LABEL_94;
    }
    v34 = v22;
    v35 = v20;
    v36 = v25 >> 3;
    v37 = v17;
    if ((v75 & 1) == 0)
    {
      v38 = v18;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    if ((_DWORD)v36 == 3)
      break;
    if ((_DWORD)v36 == 2)
    {
      v20 = v35;
      if (v37 && (*(_BYTE *)(a1 + 76) & 4) == 0)
      {
        v22 = v34;
        if (v32 == 2)
        {
          v47 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
            goto LABEL_115;
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v20))
          {
            v48 = 0;
            v49 = 0;
            v50 = 0;
            while (1)
            {
              v51 = *v19;
              v52 = *(_QWORD *)(v3 + v51);
              v53 = v52 + 1;
              if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
                break;
              v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
              *(_QWORD *)(v3 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                v30 = v49++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_63;
            }
            *(_BYTE *)(v3 + *v20) = 1;
LABEL_63:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v59 = 0;
          v60 = 0;
          v61 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v62 = *v19;
            v63 = *(_QWORD *)(v3 + v62);
            v64 = v63 + 1;
            if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
              break;
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v30 = v60++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_89;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_89:
          PBRepeatedInt32Add();
        }
        v17 = v72;
        goto LABEL_91;
      }
      v58 = PBReaderSkipValueWithTag();
      v17 = v72;
LABEL_72:
      v22 = v34;
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v58 & 1) != 0)
        goto LABEL_91;
      v73 = 0;
LABEL_94:
      v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
      goto LABEL_95;
    }
    if ((_DWORD)v36 == 1)
    {
      if ((v8 & 1) == 0)
        goto LABEL_71;
      *(_BYTE *)(a1 + 76) |= 1u;
      v42 = *v19;
      v43 = *(_QWORD *)(v3 + v42);
      v20 = v35;
      if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
      {
        v22 = v34;
        v44 = *(_QWORD *)(*(_QWORD *)(v3 + *v34) + v43);
        *(_QWORD *)(v3 + v42) = v43 + 8;
      }
      else
      {
        *(_BYTE *)(v3 + *v35) = 1;
        v44 = 0;
        v22 = v34;
      }
      *(_QWORD *)(a1 + 48) = v44;
      goto LABEL_79;
    }
    if ((v71 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 2) != 0)
    {
LABEL_71:
      v58 = PBReaderSkipValueWithTag();
      v17 = v72;
      v20 = v35;
      goto LABEL_72;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v55 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v56 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v55;

    }
    v57 = PBUnknownFieldAdd();
    v17 = v72;
    v20 = v35;
    v22 = v34;
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if (!v57)
    {
      v73 = 0;
      v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
      goto LABEL_97;
    }
LABEL_91:
    if (!(v74 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_93;
  }
  if (!v37)
    goto LABEL_71;
  v20 = v35;
  if ((*(_BYTE *)(a1 + 76) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_115;
    v22 = v34;
    v9 += *(unsigned __int8 *)(a1 + 76) << 28 >> 31;
LABEL_76:
    v17 = v72;
LABEL_79:
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_91;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_115;
  v22 = v34;
  v45 = objc_alloc_init(GEOWalkingUserPreferences);
  if (GEOWalkingUserPreferencesReadAllFrom((uint64_t)v45, (void *)v3))
  {
    PBReaderRecallMark();
    v46 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v45;

    --v9;
    goto LABEL_76;
  }

LABEL_115:
  v73 = 0;
  v11 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
  v17 = v72;
LABEL_95:
  v21 = v71;
LABEL_96:
  if ((v21 & 1) != 0)
LABEL_97:
    *(_BYTE *)(a1 + v11[689]) |= 2u;
  if (v17 & 1 | ((v73 & 1) == 0))
  {
    *(_BYTE *)(a1 + v11[689]) |= 4u;
    *(_BYTE *)(a1 + v11[689]) |= 8u;
    goto LABEL_108;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v67 = *v18++;
        v66 = v67;
        if (v67 == 2)
          break;
        if (v66 == 3)
        {
          v68 = 8;
          goto LABEL_107;
        }
        if (!v66)
          goto LABEL_108;
      }
      v68 = 4;
LABEL_107:
      *(_BYTE *)(a1 + v11[689]) |= v68;
      continue;
    }
  }
LABEL_108:
  if (v73)
  {
    v3 = *(_BYTE *)(v3 + *v20) == 0;
    if ((v17 & 1) == 0)
      return v3;
LABEL_112:
    v69 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v17 & 1) != 0)
      goto LABEL_112;
  }
  return v3;
}

void sub_188F3737C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F37B9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalkingOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWalkingOptionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWalkingOptionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWalkingOptionsReadAllFrom_initialTag;
  Specified = GEOWalkingOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188F37D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalkingOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWalkingOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F37D9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalkingUserPreferencesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_188F38204(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalkingOptionsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188F38548(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3888C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalkingUserPreferencesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidBusyRoads;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidBusyRoads;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidBusyRoads;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidStairs;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidStairs;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidStairs;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 20) |= 2u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidHills;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          v21 = 0;
          v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidHills;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidHills;
LABEL_51:
      if (v3[*v6])
        v21 = 0;
LABEL_53:
      *(_BYTE *)(a1 + *v27) = v21 != 0;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188F39258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalkingUserPreferencesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWalkingUserPreferencesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F392B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F399B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  uint64_t v49;
  void *v50;
  GEOLatLng *v51;
  uint64_t v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  __int16 v61;
  int v62;
  __int16 v63;
  void *v64;
  int v66;
  char v67;
  char v68;
  char v69;
  char v70;
  BOOL v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 120) >> 11) & 1)
      + ((*(unsigned __int16 *)(a1 + 120) >> 10) & 1)
      + ((*(unsigned __int16 *)(a1 + 120) >> 2) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 120)), (uint16x4_t)0xFFFCFFF7FFF9FFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 120) >> 5) & 1)+ ((*(_WORD *)(a1 + 120) >> 3) & 1)+ ((*(_WORD *)(a1 + 120) >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 6;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v68 = v17;
        v69 = v18 | v17;
        v67 = v8;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v70 = (v19 == 0) | v18;
        v71 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_137;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_137:
      v66 = 1;
      goto LABEL_138;
    }
    v33 = v25 >> 3;
    v34 = v71;
    if ((v70 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v67 & 1) == 0)
          goto LABEL_106;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 120) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_109;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            v41 = 0;
            goto LABEL_111;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_109:
        if (*(_BYTE *)(v3 + *v21))
          v41 = 0;
LABEL_111:
        *(_QWORD *)(a1 + 56) = v41;
        goto LABEL_136;
      case 2:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x80) == 0)
        {
          PBReaderReadString();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v49;
          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_160;
        v61 = *(_WORD *)(a1 + 120) << 8;
        goto LABEL_134;
      case 3:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = *(_WORD *)(a1 + 120) << 7;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_159;
        PBReaderRecallMark();
        v52 = 72;
        goto LABEL_104;
      case 4:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = *(_WORD *)(a1 + 120) << 6;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_159;
        PBReaderRecallMark();
        v52 = 80;
        goto LABEL_104;
      case 5:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = *(_WORD *)(a1 + 120) << 11;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_159;
        PBReaderRecallMark();
        v52 = 32;
        goto LABEL_104;
      case 6:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = *(_WORD *)(a1 + 120) << 10;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOEVChargingInfo);
        if (!GEOEVChargingInfoReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_159;
        PBReaderRecallMark();
        v52 = 40;
        goto LABEL_104;
      case 7:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = *(_WORD *)(a1 + 120) << 12;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOARInfo);
        if (!GEOARInfoReadAllFrom(v51, (void *)v3))
          goto LABEL_159;
        PBReaderRecallMark();
        v52 = 24;
        goto LABEL_104;
      case 8:
        if ((v67 & 1) == 0)
          goto LABEL_106;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_WORD *)(a1 + 120) |= 2u;
        while (2)
        {
          v56 = *v20;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v55) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v55) = 0;
LABEL_115:
        *(_DWORD *)(a1 + 116) = v55;
        goto LABEL_136;
      case 9:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = *(_WORD *)(a1 + 120) << 9;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOAddress);
        if (!GEOAddressReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_159;
        PBReaderRecallMark();
        v52 = 48;
        goto LABEL_104;
      case 10:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = 32 * *(_WORD *)(a1 + 120);
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOWaypointUUID);
        if (!GEOWaypointUUIDReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_159;
        PBReaderRecallMark();
        v52 = 88;
        goto LABEL_104;
      case 11:
        if (!v34)
          goto LABEL_106;
        if ((*(_WORD *)(a1 + 120) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_160;
          v61 = 16 * *(_WORD *)(a1 + 120);
LABEL_134:
          v7 += v61 >> 15;
LABEL_135:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_136:
          if (!(v69 & 1 | (v7 != 0)))
            goto LABEL_137;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_160;
        v51 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v52 = 96;
LABEL_104:
          v50 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v51;
LABEL_105:

          --v7;
          goto LABEL_135;
        }
LABEL_159:

LABEL_160:
        v66 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_138:
        if ((v68 & 1) != 0)
LABEL_139:
          *(_WORD *)(a1 + 120) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(_WORD *)(a1 + 120) |= 0x80u;
          *(_WORD *)(a1 + 120) |= 0x100u;
          *(_WORD *)(a1 + 120) |= 0x200u;
          *(_WORD *)(a1 + 120) |= 0x10u;
          *(_WORD *)(a1 + 120) |= 0x20u;
          *(_WORD *)(a1 + 120) |= 8u;
          *(_WORD *)(a1 + 120) |= 0x40u;
          *(_WORD *)(a1 + 120) |= 0x400u;
          *(_WORD *)(a1 + 120) |= 0x800u;
        }
        else if (v19)
        {
          while (1)
          {
            v62 = *v19++;
            v63 = 128;
            switch(v62)
            {
              case 0:
                goto LABEL_153;
              case 2:
                goto LABEL_152;
              case 3:
                v63 = 256;
                goto LABEL_152;
              case 4:
                v63 = 512;
                goto LABEL_152;
              case 5:
                v63 = 16;
                goto LABEL_152;
              case 6:
                v63 = 32;
                goto LABEL_152;
              case 7:
                v63 = 8;
                goto LABEL_152;
              case 9:
                v63 = 64;
                goto LABEL_152;
              case 10:
                v63 = 1024;
                goto LABEL_152;
              case 11:
                v63 = 2048;
LABEL_152:
                *(_WORD *)(a1 + 120) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_153:
        if (v66)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v71)
        {
          v64 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v68 & 1) == 0 || (*(_WORD *)(a1 + 120) & 4) != 0)
        {
LABEL_106:
          v60 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v60 & 1) == 0)
          {
            v66 = 0;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v66 = 0;
            goto LABEL_139;
          }
        }
        goto LABEL_136;
    }
  }
}

void sub_188F3A664(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3A940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3AA80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3ABBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3ACFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3AE3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3AF7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3B0BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3BDA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWaypointInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[12], "readAll:", 1);
}

unint64_t GEOWaypointInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWaypointInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWaypointInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWaypointInfoReadAllFrom_initialTag;
  Specified = GEOWaypointInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWaypointInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_188F3BFD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWaypointInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F3C034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3C2E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWaypointInfoIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v2 = *(_WORD *)(a1 + 120);
  if ((v2 & 0x1380) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 0x28) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if (GEOAddressIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 0x400) != 0)
    return 1;
  if ((v2 & 0x800) != 0)
    return (uint64_t)GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 96));
  else
    return 0;
}

os_unfair_lock_s *GEOWaypointInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWaypointInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F3C8C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3CED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3D328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointRouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  GEORoute *v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  int *v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  void *v89;
  char v90;
  char v91;
  uint64_t v92;
  int v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  int v101;
  int v102;
  void *v103;
  char v105;
  char v106;
  int v107;
  char v108;
  char v109;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 156);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 152));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_DWORD *)(a1 + 184);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1DA0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1DB0), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD1DC0), v14)))+ ((v12 >> 15) & 1)+ ((v12 >> 6) & 1)+ ((v12 >> 5) & 1);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 0xA;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v19 | v11) | v8) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v107 = 1;
        v24 = v19 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_223;
        v105 = v20;
        v108 = v21 | v20;
        v109 = (v23 == 0) | v21;
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v106 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v25))
      goto LABEL_221;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v22;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v6))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_221:
      v107 = 1;
      goto LABEL_222;
    }
    v38 = v29 >> 3;
    v39 = v21;
    if ((v109 & 1) == 0)
    {
      v40 = v23;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_170;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 184) |= 4u;
        while (1)
        {
          v47 = *v22;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
            break;
          v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v48);
          *(_QWORD *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0)
            goto LABEL_173;
          v44 += 7;
          v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_175;
          }
        }
        *(_BYTE *)(v3 + *v25) = 1;
LABEL_173:
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_175:
        v92 = 172;
        goto LABEL_192;
      case 2:
        if (!v39 || (*(_BYTE *)(a1 + 185) & 0x20) != 0)
          goto LABEL_168;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEORoute);
        if (!GEORouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsRouteLeg:](a1, v54);
        goto LABEL_145;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_170;
        v55 = 0;
        v56 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 184) |= 8u;
        while (2)
        {
          v57 = *v22;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v46 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v34 = v56++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_179:
        v92 = 176;
        goto LABEL_192;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_170;
        v61 = 0;
        v62 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 184) |= 2u;
        while (2)
        {
          v63 = *v22;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v46 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v34 = v62++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_183:
        v92 = 168;
        goto LABEL_192;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_170;
        v67 = 0;
        v68 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 184) |= 0x10u;
        while (2)
        {
          v69 = *v22;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v46 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v34 = v68++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_187:
        v92 = 180;
        goto LABEL_192;
      case 6:
        if (!v39 || (*(_BYTE *)(a1 + 185) & 4) != 0)
          goto LABEL_168;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsName:](a1, v54);
        goto LABEL_145;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_170;
        v73 = 0;
        v74 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 184) |= 1u;
        while (2)
        {
          v75 = *v22;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v46 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v34 = v74++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v46) = 0;
LABEL_191:
        v92 = 164;
LABEL_192:
        *(_DWORD *)(a1 + v92) = v46;
        goto LABEL_208;
      case 8:
        if (!v39)
          goto LABEL_170;
        if ((*(_BYTE *)(a1 + 186) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_251;
          v93 = (int)(*(_DWORD *)(a1 + 184) << 13) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOTraversalTimes);
        if (!GEOTraversalTimesReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_250;
        PBReaderRecallMark();
        v79 = 136;
        goto LABEL_166;
      case 9:
        if (!v39)
          goto LABEL_170;
        if ((*(_BYTE *)(a1 + 185) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_251;
          v93 = (int)(*(_DWORD *)(a1 + 184) << 23) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOWaypointRouteFeatures);
        if (!GEOWaypointRouteFeaturesReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_250;
        PBReaderRecallMark();
        v79 = 56;
        goto LABEL_166;
      case 10:
        if (!v39)
          goto LABEL_170;
        if ((*(_BYTE *)(a1 + 185) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_251;
          v93 = (int)(*(_DWORD *)(a1 + 184) << 17) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEORoutePlanningInfo);
        if (!GEORoutePlanningInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        v79 = 104;
        goto LABEL_166;
      case 11:
        if (!v39 || (*(_BYTE *)(a1 + 184) & 0x80) != 0)
          goto LABEL_168;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOArrivalParameters);
        if (!GEOArrivalParametersReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsArrivalParameters:](a1, v54);
        goto LABEL_145;
      case 12:
        if (!v39 || (*(_BYTE *)(a1 + 186) & 2) != 0)
          goto LABEL_168;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOTrafficSignal);
        if (!GEOTrafficSignalReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsTrafficSignal:](a1, v54);
        goto LABEL_145;
      case 13:
        if (!v39 || (*(_BYTE *)(a1 + 186) & 1) != 0)
          goto LABEL_168;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOTrafficCamera);
        if (!GEOTrafficCameraReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsTrafficCamera:](a1, v54);
        goto LABEL_145;
      case 14:
        if (!v39 || (*(_BYTE *)(a1 + 185) & 2) != 0)
          goto LABEL_168;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsIncidentsOnRouteLegs:](a1, v54);
        goto LABEL_145;
      case 15:
        if (!v39)
          goto LABEL_170;
        if ((*(_BYTE *)(a1 + 185) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_251;
          v93 = (int)(*(_DWORD *)(a1 + 184) << 19) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEORestrictionZoneInfo);
        if (!GEORestrictionZoneInfoReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_250;
        PBReaderRecallMark();
        v79 = 88;
        goto LABEL_166;
      case 16:
        if (!v39)
          goto LABEL_170;
        if ((*(_BYTE *)(a1 + 185) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_251;
          v93 = (int)(*(_DWORD *)(a1 + 184) << 20) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOOutOfMapsAlertsInfo);
        if (!GEOOutOfMapsAlertsInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        v79 = 80;
        goto LABEL_166;
      case 17:
        if (!v39 || (*(_BYTE *)(a1 + 185) & 0x80) != 0)
        {
LABEL_168:
          v90 = PBReaderSkipValueWithTag();
          v21 = v106;
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v90 & 1) == 0)
            goto LABEL_249;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOTrafficBannerText);
        if (!GEOTrafficBannerTextReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_250;
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsTrafficBannerText:](a1, v54);
LABEL_145:

        goto LABEL_206;
      case 18:
        if (!v39 || (*(_BYTE *)(a1 + 184) & 0x40) != 0)
          goto LABEL_170;
        if (v36 != 2)
        {
          v94 = 0;
          v95 = 0;
          v96 = 0;
          while (1)
          {
            v97 = *v22;
            v98 = *(_QWORD *)(v3 + v97);
            v99 = v98 + 1;
            if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
              break;
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              v34 = v95++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_220;
          }
          *(_BYTE *)(v3 + *v25) = 1;
LABEL_220:
          PBRepeatedInt32Add();
          goto LABEL_206;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_251;
        while (1)
        {
          v80 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v81 = 0;
          v82 = 0;
          v83 = 0;
          v84 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v85 = *v22;
            v86 = *(_QWORD *)(v3 + v85);
            v87 = v86 + 1;
            if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
              break;
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v84) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v83 |= (unint64_t)(v88 & 0x7F) << v81;
            if (v88 < 0)
            {
              v81 += 7;
              v34 = v82++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_160;
          }
          *(_BYTE *)(v3 + *v80) = 1;
LABEL_160:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v106;
        goto LABEL_207;
      case 19:
        if (!v39)
          goto LABEL_170;
        if ((*(_BYTE *)(a1 + 186) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_251;
          v93 = (int)(*(_DWORD *)(a1 + 184) << 12) >> 31;
LABEL_205:
          v7 += v93;
LABEL_206:
          v21 = v106;
          v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_207:
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_208:
          if (!(v108 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_221;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_251;
        v54 = objc_alloc_init(GEOTraversalTimes);
        if (GEOTraversalTimesReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          v79 = 144;
LABEL_166:
          v89 = *(void **)(a1 + v79);
          *(_QWORD *)(a1 + v79) = v54;

          --v7;
          goto LABEL_206;
        }
LABEL_250:

LABEL_251:
        v107 = 0;
        v21 = v106;
LABEL_222:
        v24 = v105;
LABEL_223:
        if ((v24 & 1) != 0)
LABEL_224:
          *(_DWORD *)(a1 + 184) |= 0x20u;
        if (v21 & 1 | ((v107 & 1) == 0))
        {
          *(_DWORD *)(a1 + 184) |= 0x2000u;
          *(_DWORD *)(a1 + 184) |= 0x400u;
          *(_DWORD *)(a1 + 184) |= 0x40000u;
          *(_DWORD *)(a1 + 184) |= 0x80000u;
          *(_DWORD *)(a1 + 184) |= 0x100u;
          *(_DWORD *)(a1 + 184) |= 0x4000u;
          *(_DWORD *)(a1 + 184) |= 0x80u;
          *(_DWORD *)(a1 + 184) |= 0x20000u;
          *(_DWORD *)(a1 + 184) |= 0x10000u;
          *(_DWORD *)(a1 + 184) |= 0x200u;
          *(_DWORD *)(a1 + 184) |= 0x1000u;
          *(_DWORD *)(a1 + 184) |= 0x800u;
          *(_DWORD *)(a1 + 184) |= 0x8000u;
          *(_DWORD *)(a1 + 184) |= 0x40u;
        }
        else if (v23)
        {
          while (1)
          {
            v101 = *v23++;
            v102 = 0x2000;
            switch(v101)
            {
              case 0:
                goto LABEL_243;
              case 2:
                goto LABEL_242;
              case 6:
                v102 = 1024;
                goto LABEL_242;
              case 8:
                v102 = 0x40000;
                goto LABEL_242;
              case 9:
                v102 = 256;
                goto LABEL_242;
              case 10:
                v102 = 0x4000;
                goto LABEL_242;
              case 11:
                v102 = 128;
                goto LABEL_242;
              case 12:
                v102 = 0x20000;
                goto LABEL_242;
              case 13:
                v102 = 0x10000;
                goto LABEL_242;
              case 14:
                v102 = 512;
                goto LABEL_242;
              case 15:
                v102 = 4096;
                goto LABEL_242;
              case 16:
                v102 = 2048;
                goto LABEL_242;
              case 17:
                v102 = 0x8000;
                goto LABEL_242;
              case 18:
                v102 = 64;
                goto LABEL_242;
              case 19:
                v102 = 0x80000;
LABEL_242:
                *(_DWORD *)(a1 + 184) |= v102;
                break;
              default:
                continue;
            }
          }
        }
LABEL_243:
        if (v107)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_247:
          v103 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_247;
        }
        return v3;
      default:
        if ((v105 & 1) == 0 || (*(_BYTE *)(a1 + 184) & 0x20) != 0)
        {
LABEL_170:
          v91 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v21 = v106;
          if ((v91 & 1) == 0)
          {
LABEL_249:
            v107 = 0;
            goto LABEL_222;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v52 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v51;

          }
          v53 = PBUnknownFieldAdd();
          v21 = v106;
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v53)
          {
            v107 = 0;
            goto LABEL_224;
          }
        }
        goto LABEL_208;
    }
  }
}

void sub_188F3EE1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3F1C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3F30C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3F44C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3F594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3F6D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3FA14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F3FD50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F4008C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F403C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F40510(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F40658(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F40990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F42E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWaypointRouteCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[128];
  _BYTE v66[128];
  _BYTE v67[128];
  _BYTE v68[128];
  _BYTE v69[128];
  _BYTE v70[128];
  _BYTE v71[128];
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v61 = 0u;
  v62 = 0u;
  v63 = 0u;
  v64 = 0u;
  v2 = a1[12];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v61, v71, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v62;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v62 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v61 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v61, v71, 16);
    }
    while (v4);
  }

  v59 = 0u;
  v60 = 0u;
  v57 = 0u;
  v58 = 0u;
  v7 = a1[9];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v57, v70, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v58;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v58 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v57 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v57, v70, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  v12 = a1[6];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v53, v69, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v54;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v54 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v53 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v53, v69, 16);
    }
    while (v14);
  }

  v51 = 0u;
  v52 = 0u;
  v49 = 0u;
  v50 = 0u;
  v17 = a1[16];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v49, v68, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v50;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v50 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v49 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v49, v68, 16);
    }
    while (v19);
  }

  v47 = 0u;
  v48 = 0u;
  v45 = 0u;
  v46 = 0u;
  v22 = a1[15];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v45, v67, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v46;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v46 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v45 + 1) + 8 * v26++), "readAll:", 1);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v45, v67, 16);
    }
    while (v24);
  }

  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  v27 = a1[8];
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v41, v66, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v42;
    do
    {
      v31 = 0;
      do
      {
        if (*(_QWORD *)v42 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v41 + 1) + 8 * v31++), "readAll:", 1);
      }
      while (v29 != v31);
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v41, v66, 16);
    }
    while (v29);
  }

  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  v32 = a1[14];
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v37, v65, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v38;
    do
    {
      v36 = 0;
      do
      {
        if (*(_QWORD *)v38 != v35)
          objc_enumerationMutation(v32);
        objc_msgSend(*(id *)(*((_QWORD *)&v37 + 1) + 8 * v36++), "readAll:", 1, (_QWORD)v37);
      }
      while (v34 != v36);
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v37, v65, 16);
    }
    while (v34);
  }

}

unint64_t GEOWaypointRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 156))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWaypointRouteReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 156) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWaypointRouteReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWaypointRouteReadAllFrom_initialTag;
  Specified = GEOWaypointRouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWaypointRouteCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_188F434D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointRouteReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWaypointRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F43534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWaypointRouteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  _BOOL8 v53;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_116;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_117;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_116;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_117;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_116;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_117;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_116;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_117;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_116;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_117;
          }
        case 8u:
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTraversalTimesIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteFeaturesIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutePlanningInfoIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalParametersIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficSignalIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictionZoneInfoIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOOutOfMapsAlertsInfoIsValid(a1))
            goto LABEL_130;
          goto LABEL_108;
        case 0x11u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTrafficBannerTextIsValid(a1))
            goto LABEL_108;
          goto LABEL_130;
        case 0x12u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_130:
              PBReaderRecallMark();
              return 0;
            }
LABEL_120:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v48 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v49 = *v2;
                v50 = *(_QWORD *)&a1[v49];
                v51 = v50 + 1;
                if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
                  break;
                v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
                *(_QWORD *)&a1[v49] = v51;
                if (v52 < 0)
                {
                  v13 = v48++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_120;
              }
              a1[*v4] = 1;
            }
LABEL_108:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_130;
            while (1)
            {
              v43 = *v2;
              v44 = *(_QWORD *)&a1[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
                break;
              v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
              *(_QWORD *)&a1[v43] = v45;
              if (v46 < 0)
              {
                v47 = v15++;
                if (v47 <= 8)
                  continue;
              }
              goto LABEL_117;
            }
LABEL_116:
            a1[*v4] = 1;
          }
LABEL_117:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_129;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_130;
          goto LABEL_117;
      }
    }
  }
LABEL_129:
  v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOWaypointRouteFeaturesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_188F44558(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWaypointRouteIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[128];
  _BYTE v61[128];
  _BYTE v62[128];
  _BYTE v63[128];
  _BYTE v64[128];
  _BYTE v65[128];
  _BYTE v66[128];
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v2 = *(_DWORD *)(a1 + 184);
  if ((v2 & 0x1C2500) != 0)
    return 1;
  if ((v2 & 0x4000) == 0)
  {
LABEL_5:
    if ((v2 & 0x39AC0) != 0)
      return 1;
    if ((v2 & 0x2000) != 0)
    {
      v58 = 0u;
      v59 = 0u;
      v56 = 0u;
      v57 = 0u;
      v5 = *(id *)(a1 + 96);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v66, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v57;
LABEL_11:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v57 != v8)
            objc_enumerationMutation(v5);
          if ((GEORouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v56 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_79;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v66, 16);
            if (v7)
              goto LABEL_11;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x400) != 0)
    {
      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      v5 = *(id *)(a1 + 72);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v65, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v53;
LABEL_21:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v53 != v12)
            objc_enumerationMutation(v5);
          if (GEONameInfoIsDirty(*(_QWORD *)(*((_QWORD *)&v52 + 1) + 8 * v13)))
            goto LABEL_79;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v65, 16);
            if (v11)
              goto LABEL_21;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x80) != 0)
    {
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      v5 = *(id *)(a1 + 48);
      v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v64, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v49;
LABEL_31:
        v17 = 0;
        while (1)
        {
          if (*(_QWORD *)v49 != v16)
            objc_enumerationMutation(v5);
          if (GEOArrivalParametersIsDirty(*(_QWORD *)(*((_QWORD *)&v48 + 1) + 8 * v17)))
            goto LABEL_79;
          if (v15 == ++v17)
          {
            v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v64, 16);
            if (v15)
              goto LABEL_31;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x20000) != 0)
    {
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      v5 = *(id *)(a1 + 128);
      v18 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v63, 16);
      if (v18)
      {
        v19 = v18;
        v20 = *(_QWORD *)v45;
LABEL_41:
        v21 = 0;
        while (1)
        {
          if (*(_QWORD *)v45 != v20)
            objc_enumerationMutation(v5);
          if (GEOTrafficSignalIsDirty(*(_QWORD *)(*((_QWORD *)&v44 + 1) + 8 * v21)))
            goto LABEL_79;
          if (v19 == ++v21)
          {
            v19 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v63, 16);
            if (v19)
              goto LABEL_41;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x10000) != 0)
    {
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
      v5 = *(id *)(a1 + 120);
      v22 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v62, 16);
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)v41;
LABEL_51:
        v25 = 0;
        while (1)
        {
          if (*(_QWORD *)v41 != v24)
            objc_enumerationMutation(v5);
          if ((GEOTrafficCameraIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v40 + 1) + 8 * v25)) & 1) != 0)
            goto LABEL_79;
          if (v23 == ++v25)
          {
            v23 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v62, 16);
            if (v23)
              goto LABEL_51;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x200) != 0)
    {
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v5 = *(id *)(a1 + 64);
      v26 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v61, 16);
      if (v26)
      {
        v27 = v26;
        v28 = *(_QWORD *)v37;
LABEL_61:
        v29 = 0;
        while (1)
        {
          if (*(_QWORD *)v37 != v28)
            objc_enumerationMutation(v5);
          if ((GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v36 + 1) + 8 * v29)) & 1) != 0)
            goto LABEL_79;
          if (v27 == ++v29)
          {
            v27 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v61, 16);
            if (v27)
              goto LABEL_61;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x8000) == 0)
      return 0;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v5 = *(id *)(a1 + 112);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v60, 16);
    if (!v3)
    {
LABEL_80:

      return v3;
    }
    v30 = *(_QWORD *)v33;
LABEL_72:
    v31 = 0;
    while (1)
    {
      if (*(_QWORD *)v33 != v30)
        objc_enumerationMutation(v5);
      if ((GEOTrafficBannerTextIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v32 + 1) + 8 * v31)) & 1) != 0)
        break;
      if (v3 == ++v31)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v60, 16);
        if (v3)
          goto LABEL_72;
        goto LABEL_80;
      }
    }
LABEL_79:
    v3 = 1;
    goto LABEL_80;
  }
  if ((GEORoutePlanningInfoIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) == 0)
  {
    v2 = *(_DWORD *)(a1 + 184);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOWaypointRouteIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWaypointRouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F45C30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F46898(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWaypointRouteFeaturesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 4u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTraffic;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTraffic;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTraffic;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTolls;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTolls;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTolls;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 20) |= 1u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsHighways;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          v21 = 0;
          v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsHighways;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsHighways;
LABEL_51:
      if (v3[*v6])
        v21 = 0;
LABEL_53:
      *(_BYTE *)(a1 + *v27) = v21 != 0;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_188F47934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWaypointRouteFeaturesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWaypointRouteFeaturesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F47994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODataRequestKindFromString(void *a1)
{
  id v1;
  uint64_t v2;
  unsigned int v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqual:", CFSTR("CurrentCountry")) & 1) == 0)
  {
    if ((objc_msgSend(v1, "isEqual:", CFSTR("SearchAttribution")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ResourceManifest")) & 1) != 0)
    {
      v2 = 0;
      v3 = 3;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ResourceData")) & 1) != 0)
    {
      v2 = 0;
      v3 = 4;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("SearchAttributionData")) & 1) != 0)
    {
      v2 = 0;
      v3 = 5;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("NetworkDefaults")) & 1) != 0)
    {
      v2 = 0;
      v3 = 6;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("AnalyticsUpload")) & 1) != 0)
    {
      v2 = 0;
      v3 = 15;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("Directions")) & 1) != 0)
    {
      v2 = 0;
      v3 = 512;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ETA")) & 1) != 0)
    {
      v2 = 0;
      v3 = 672;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ETAU")) & 1) != 0)
    {
      v2 = 0;
      v3 = 673;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("TransitUpdate")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2857;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("LogMessageCollection")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2560;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ProblemSubmission")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2816;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ProblemStatus")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2817;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("AddressCorrectionInit")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2848;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("AddressCorrectUpdate")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2849;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ABAssign")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2850;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("LocationShift")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2851;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("SpatialLookup")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2852;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ReportAProblem")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2853;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ImageService")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2854;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("BatchRevGeo")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2855;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("WiFiQuality")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2856;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("WiFiTile")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2858;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("OfflineDataService")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2859;
      goto LABEL_137;
    }
    if ((objc_msgSend(v1, "isEqual:", CFSTR("ConnectivityCheck")) & 1) != 0)
    {
      v2 = 0;
      v3 = 2860;
      goto LABEL_137;
    }
    if (objc_msgSend(v1, "hasPrefix:", CFSTR("Tile.")))
    {
      if ((unint64_t)objc_msgSend(v1, "length") < 7)
      {
        v2 = 0;
        v3 = 256;
        goto LABEL_137;
      }
      objc_msgSend(v1, "substringFromIndex:", 6);
      v4 = (id)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_STANDARD")) & 1) != 0)
      {
        v2 = 0;
LABEL_57:
        v3 = 256;
LABEL_135:
        v5 = v4;
        goto LABEL_136;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_STANDARD")) & 1) != 0)
      {
        v3 = 256;
LABEL_83:
        v2 = 1;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_SEGMENTS_FOR_RASTER")) & 1) != 0)
      {
        v3 = 256;
LABEL_91:
        v2 = 2;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_INCIDENTS_FOR_RASTER")) & 1) != 0)
      {
        v3 = 256;
LABEL_98:
        v2 = 3;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_SEGMENTS_AND_INCIDENTS_FOR_RASTER")) & 1) != 0)
      {
        v3 = 256;
LABEL_105:
        v2 = 4;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_STANDARD_BACKGROUND")) & 1) != 0)
      {
        v3 = 256;
LABEL_112:
        v2 = 5;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_HYBRID")) & 1) != 0)
      {
        v3 = 256;
LABEL_119:
        v2 = 6;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_SATELLITE")) & 1) != 0)
      {
        v3 = 256;
LABEL_126:
        v2 = 7;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_TERRAIN")) & 1) != 0)
      {
        v3 = 256;
LABEL_134:
        v2 = 8;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_BUILDINGS")) & 1) != 0)
      {
        v3 = 256;
LABEL_131:
        v2 = 11;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC")) & 1) != 0)
      {
        v3 = 256;
LABEL_142:
        v2 = 12;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_POI")) & 1) != 0)
      {
        v3 = 256;
LABEL_150:
        v2 = 13;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SPUTNIK_METADATA")) & 1) != 0)
      {
        v3 = 256;
LABEL_158:
        v2 = 14;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SPUTNIK_C3M")) & 1) != 0)
      {
        v3 = 256;
LABEL_165:
        v2 = 15;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SPUTNIK_DSM")) & 1) != 0)
      {
        v3 = 256;
LABEL_172:
        v2 = 16;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SPUTNIK_DSM_GLOBAL")) & 1) != 0)
      {
        v3 = 256;
LABEL_179:
        v2 = 17;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_REALISTIC")) & 1) != 0)
      {
        v3 = 256;
LABEL_186:
        v2 = 18;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_LEGACY_REALISTIC")) & 1) != 0)
      {
        v3 = 256;
LABEL_193:
        v2 = 19;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_ROADS")) & 1) != 0)
      {
        v3 = 256;
LABEL_200:
        v2 = 20;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_VEGETATION")) & 1) != 0)
      {
        v3 = 256;
LABEL_207:
        v2 = 21;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_SKELETON")) & 1) != 0)
      {
        v3 = 256;
LABEL_214:
        v2 = 22;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_COASTLINE_MASK")) & 1) != 0)
      {
        v3 = 256;
LABEL_221:
        v2 = 23;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_HILLSHADE")) & 1) != 0)
      {
        v3 = 256;
LABEL_228:
        v2 = 24;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_WITH_GREEN")) & 1) != 0)
      {
        v3 = 256;
LABEL_235:
        v2 = 25;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_STATIC")) & 1) != 0)
      {
        v3 = 256;
LABEL_242:
        v2 = 26;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_COASTLINE_DROP_MASK")) & 1) != 0)
      {
        v3 = 256;
LABEL_249:
        v2 = 27;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_SKELETON_WITH_HISTORICAL")) & 1) != 0)
      {
        v3 = 256;
LABEL_256:
        v2 = 28;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPEED_PROFILES")) & 1) != 0)
      {
        v3 = 256;
LABEL_263:
        v2 = 29;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_VENUES")) & 1) != 0)
      {
        v3 = 256;
LABEL_270:
        v2 = 30;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_DOWN_SAMPLED")) & 1) != 0)
      {
        v3 = 256;
LABEL_277:
        v2 = 31;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_COLOR_BALANCED")) & 1) != 0)
      {
        v3 = 256;
        v2 = 32;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_SATELLITE_NIGHT")) & 1) != 0)
      {
        v3 = 256;
        v2 = 33;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SPUTNIK_VECTOR_BORDER")) & 1) != 0)
      {
        v3 = 256;
        v2 = 34;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_SATELLITE_DIGITIZE")) & 1) != 0)
      {
        v3 = 256;
        v2 = 35;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_HILLSHADE_PARKS")) & 1) != 0)
      {
        v3 = 256;
LABEL_332:
        v2 = 36;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRANSIT")) & 1) != 0)
      {
        v3 = 256;
LABEL_339:
        v2 = 37;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_STANDARD_BASE")) & 1) != 0)
      {
        v3 = 256;
LABEL_346:
        v2 = 38;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_STANDARD_LABELS")) & 1) != 0)
      {
        v3 = 256;
LABEL_353:
        v2 = 39;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_HYBRID_ROADS")) & 1) != 0)
      {
        v3 = 256;
LABEL_360:
        v2 = 40;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_HYBRID_LABELS")) & 1) != 0)
      {
        v3 = 256;
LABEL_367:
        v2 = 41;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("FLYOVER_C3M_MESH")) & 1) != 0)
      {
        v3 = 256;
LABEL_374:
        v2 = 42;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("FLYOVER_C3M_JPEG_TEXTURE")) & 1) != 0)
      {
        v3 = 256;
LABEL_381:
        v2 = 43;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("FLYOVER_C3M_ASTC_TEXTURE")) & 1) != 0)
      {
        v3 = 256;
LABEL_388:
        v2 = 44;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_SATELLITE_ASTC")) & 1) != 0)
      {
        v3 = 256;
        goto LABEL_395;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_HYBRID_ROADS_AND_LABELS")) & 1) != 0)
      {
        v3 = 256;
LABEL_398:
        v2 = 46;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRANSIT_SELECTION")) & 1) != 0)
      {
        v3 = 256;
LABEL_405:
        v2 = 47;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_COVERAGE")) & 1) != 0)
      {
        v3 = 256;
LABEL_412:
        v2 = 48;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("FLYOVER_METADATA")) & 1) != 0)
      {
        v3 = 256;
LABEL_437:
        v2 = 52;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_ROAD_NETWORK")) & 1) != 0)
      {
        v3 = 256;
LABEL_444:
        v2 = 53;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_LAND_COVER")) & 1) != 0)
      {
        v3 = 256;
LABEL_451:
        v2 = 54;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_DEBUG")) & 1) != 0)
      {
        v3 = 256;
LABEL_458:
        v2 = 55;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_STREET_POI")) & 1) != 0)
      {
        v3 = 256;
LABEL_465:
        v2 = 56;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("MUNIN_METADATA")) & 1) != 0)
      {
        v3 = 256;
LABEL_472:
        v2 = 57;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_MERCATOR")) & 1) != 0)
      {
        v3 = 256;
LABEL_479:
        v2 = 58;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_MODELS")) & 1) != 0)
      {
        v3 = 256;
LABEL_486:
        v2 = 59;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_MATERIALS")) & 1) != 0)
      {
        v3 = 256;
LABEL_493:
        v2 = 60;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_METADATA")) & 1) == 0)
      {
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRACKS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 62;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_RESERVED_2")) & 1) != 0)
        {
          v3 = 256;
          v2 = 63;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_STREET_LANDMARKS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 64;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("COARSE_LOCATION_POLYGONS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 65;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_ROADS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 66;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_STANDARD")) & 1) != 0)
        {
          v3 = 256;
          v2 = 67;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_POI_V2")) & 1) != 0)
        {
          v3 = 256;
          v2 = 68;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_POLYGON_SELECTION")) & 1) != 0)
        {
          v3 = 256;
          v2 = 69;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VL_METADATA")) & 1) != 0)
        {
          v3 = 256;
          v2 = 70;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VL_DATA")) & 1) != 0)
        {
          v3 = 256;
          v2 = 71;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("PROACTIVE_APP_CLIP")) & 1) != 0)
        {
          v3 = 256;
          v2 = 72;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_BUILDINGS_V2")) & 1) != 0)
        {
          v3 = 256;
          v2 = 73;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("POI_BUSYNESS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 74;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("POI_DP_BUSYNESS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 75;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SMART_INTERFACE_SELECTION")) & 1) != 0)
        {
          v3 = 256;
          v2 = 76;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_ASSETS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 77;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SPR_ASSET_METADATA")) & 1) != 0)
        {
          v3 = 256;
          v2 = 78;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_POLAR")) & 1) != 0)
        {
          v3 = 256;
          v2 = 79;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("SMART_DATA_MODE")) & 1) != 0)
        {
          v3 = 256;
          v2 = 80;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("CELLULAR_PERFORMANCE_SCORE")) & 1) != 0)
        {
          v3 = 256;
          v2 = 81;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_SPR_MODELS_OCCLUSION")) & 1) != 0)
        {
          v3 = 256;
          v2 = 82;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TOPOGRAPHIC")) & 1) != 0)
        {
          v3 = 256;
          v2 = 83;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_POI_V2_UPDATE")) & 1) != 0)
        {
          v3 = 256;
          v2 = 84;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_LIVE_DATA_UPDATES")) & 1) != 0)
        {
          v3 = 256;
          v2 = 85;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_TRAFFIC_V2")) & 1) != 0)
        {
          v3 = 256;
          v2 = 86;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_ROAD_SELECTION")) & 1) != 0)
        {
          v3 = 256;
          v2 = 87;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_REGION_METADATA")) & 1) != 0)
        {
          v3 = 256;
          v2 = 88;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RAY_TRACING")) & 1) != 0)
        {
          v3 = 256;
          v2 = 89;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VECTOR_CONTOURS")) & 1) != 0)
        {
          v3 = 256;
          v2 = 90;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_SATELLITE_POLAR")) & 1) != 0)
        {
          v3 = 256;
          v2 = 91;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VMAP4_ELEVATION")) & 1) != 0)
        {
          v3 = 256;
          v2 = 92;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("VMAP4_ELEVATION_POLAR")) & 1) != 0)
        {
          v3 = 256;
          v2 = 93;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("CELLULAR_COVERAGE_PLMN")) & 1) != 0)
        {
          v3 = 256;
          v2 = 94;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("RASTER_SATELLITE_POLAR_NIGHT")) & 1) != 0)
        {
          v3 = 256;
          v2 = 95;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_96")) & 1) != 0)
        {
          v3 = 256;
          v2 = 96;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_97")) & 1) != 0)
        {
          v3 = 256;
          v2 = 97;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_98")) & 1) != 0)
        {
          v3 = 256;
          v2 = 98;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_99")) & 1) != 0)
        {
          v3 = 256;
          v2 = 99;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_100")) & 1) != 0)
        {
          v3 = 256;
          v2 = 100;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_101")) & 1) != 0)
        {
          v3 = 256;
          v2 = 101;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_102")) & 1) != 0)
        {
          v3 = 256;
          v2 = 102;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_103")) & 1) != 0)
        {
          v3 = 256;
          v2 = 103;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_104")) & 1) != 0)
        {
          v3 = 256;
          v2 = 104;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_105")) & 1) != 0)
        {
          v3 = 256;
          v2 = 105;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_106")) & 1) != 0)
        {
          v3 = 256;
          v2 = 106;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_107")) & 1) != 0)
        {
          v3 = 256;
          v2 = 107;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_108")) & 1) != 0)
        {
          v3 = 256;
          v2 = 108;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_109")) & 1) != 0)
        {
          v3 = 256;
          v2 = 109;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_110")) & 1) != 0)
        {
          v3 = 256;
          v2 = 110;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_111")) & 1) != 0)
        {
          v3 = 256;
          v2 = 111;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_112")) & 1) != 0)
        {
          v3 = 256;
          v2 = 112;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_113")) & 1) != 0)
        {
          v3 = 256;
          v2 = 113;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_114")) & 1) != 0)
        {
          v3 = 256;
          v2 = 114;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_115")) & 1) != 0)
        {
          v3 = 256;
          v2 = 115;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_116")) & 1) != 0)
        {
          v3 = 256;
          v2 = 116;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_117")) & 1) != 0)
        {
          v3 = 256;
          v2 = 117;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_118")) & 1) != 0)
        {
          v3 = 256;
          v2 = 118;
          goto LABEL_135;
        }
        if (objc_msgSend(v4, "isEqualToString:", CFSTR("UNUSED_119")))
          v2 = 119;
        else
          v2 = 0;
        goto LABEL_57;
      }
      v3 = 256;
LABEL_500:
      v2 = 61;
      goto LABEL_135;
    }
    if (objc_msgSend(v1, "hasPrefix:", CFSTR("PlaceRequest.")))
    {
      if ((unint64_t)objc_msgSend(v1, "length") < 0xE)
      {
        v2 = 0;
        v3 = 768;
        goto LABEL_137;
      }
      objc_msgSend(v1, "substringFromIndex:", 13);
      v4 = (id)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_UNKNOWN")) & 1) != 0)
      {
        v2 = 0;
        goto LABEL_62;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SEARCH")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_83;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_GEOCODING")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_91;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_CANONICAL_LOCATION_SEARCH")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_98;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_REVERSE_GEOCODING")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_105;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_112;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MERCHANT_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_119;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_REFINEMENT")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_126;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SIRI_SEARCH")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_134;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_LOCATION_DIRECTED_SEARCH")) & 1) != 0)
      {
        v3 = 768;
LABEL_145:
        v2 = 9;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_AUTOCOMPLETE")) & 1) != 0)
      {
        v3 = 768;
LABEL_153:
        v2 = 10;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BROWSE_CATEGORY_SUGGESTION")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_131;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_CATEGORY_SEARCH")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_142;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_POPULAR_NEARBY_SEARCH")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_150;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTION")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_158;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SEARCH_FIELD_PLACEHOLDER")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_165;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCH")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_172;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENT")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_179;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_NEARBY_SEARCH")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_186;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ADDRESS_OBJECT_GEOCODING")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_193;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_200;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_207;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_FEATURE_ID_GEOCODING")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_214;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_221;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_DATASET_STATUS_CHECK")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_228;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_AREA_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_235;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_REVERSE_GEOCODING")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_242;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_SUGGESTED_REGIONS")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_249;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODES")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_256;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_PROACTIVE_REGIONS")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_263;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BRAND_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_270;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_UPDATE_MANIFEST")) & 1) != 0)
      {
        v3 = 768;
        goto LABEL_277;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_WIFI_FINGERPRINT_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
LABEL_304:
        v2 = 32;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_INITIAL_OFFLINE_SUGGESTION")) & 1) != 0)
      {
        v3 = 768;
LABEL_311:
        v2 = 33;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_IP_GEO_LOOKUP")) & 1) != 0)
      {
        v3 = 768;
LABEL_318:
        v2 = 34;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_GROUND_VIEW_LABEL")) & 1) == 0)
      {
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_SPATIAL_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_332;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_VEHICLE_POSITION")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_339;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_COLLECTION_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_346;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_353;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_CATEGORY_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_360;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRAND")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_367;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORY")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_374;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_COLLECTION_SUGGESTION")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_381;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MAPS_SEARCH_HOME")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_388;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_395;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PUBLISHER_VIEW")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_398;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ALL_COLLECTIONS_VIEW")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_405;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_AIRPORT_ENTITY_PLACE_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_412;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TERRITORY_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          v2 = 49;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          v2 = 50;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MAPS_HOME")) & 1) != 0)
        {
          v3 = 768;
          v2 = 51;
          goto LABEL_135;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ALL_GUIDES_LOCATIONS")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_437;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_GUIDES_HOME")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_444;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_EXTENDED_GEO_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_451;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_QUERY_UNDERSTANDING")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_458;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_POI_AT_ADDRESS_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_465;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_472;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACECARD_ENRICHMENT")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_479;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_REGION_NAME")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_486;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SEARCH_CAPABILITIES")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_493;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_REFRESH_ID_LOOKUP")) & 1) != 0)
        {
          v3 = 768;
          goto LABEL_500;
        }
        if (objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ADDRESS_RECOMMENDATION")))
          v2 = 62;
        else
          v2 = 0;
LABEL_62:
        v3 = 768;
        goto LABEL_135;
      }
      v3 = 768;
    }
    else
    {
      if (!objc_msgSend(v1, "hasPrefix:", CFSTR("BackgroundPlaceRequest.")))
      {
        if (!objc_msgSend(v1, "hasPrefix:", CFSTR("Unknown("))
          || (unint64_t)objc_msgSend(v1, "length") < 0xB)
        {
          v2 = 0;
          v3 = 0;
          goto LABEL_137;
        }
        objc_msgSend(v1, "substringWithRange:", 8, objc_msgSend(v1, "length") - 9);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "componentsSeparatedByString:", CFSTR("."));
        v4 = (id)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v4, "count") == 2)
        {
          objc_msgSend(v4, "objectAtIndexedSubscript:", 0);
          v6 = (void *)objc_claimAutoreleasedReturnValue();
          v3 = objc_msgSend(v6, "intValue");
          objc_msgSend(v4, "objectAtIndexedSubscript:", 1);
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          v2 = objc_msgSend(v7, "intValue");

        }
        else
        {
          v2 = 0;
          v3 = 0;
        }
LABEL_136:

        goto LABEL_137;
      }
      if ((unint64_t)objc_msgSend(v1, "length") < 0x18)
      {
        v2 = 0;
        v3 = 1280;
        goto LABEL_137;
      }
      objc_msgSend(v1, "substringFromIndex:", 23);
      v4 = (id)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_UNKNOWN")) & 1) != 0)
      {
        v2 = 0;
        v3 = 1280;
        goto LABEL_135;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_83;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_GEOCODING")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_91;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_CANONICAL_LOCATION_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_98;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_REVERSE_GEOCODING")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_105;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_112;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MERCHANT_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_119;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_REFINEMENT")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_126;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SIRI_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_134;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_LOCATION_DIRECTED_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_145;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_AUTOCOMPLETE")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_153;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BROWSE_CATEGORY_SUGGESTION")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_131;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_CATEGORY_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_142;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_POPULAR_NEARBY_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_150;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTION")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_158;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SEARCH_FIELD_PLACEHOLDER")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_165;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_172;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENT")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_179;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_NEARBY_SEARCH")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_186;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ADDRESS_OBJECT_GEOCODING")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_193;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_200;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_207;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_FEATURE_ID_GEOCODING")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_214;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_221;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_DATASET_STATUS_CHECK")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_228;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_AREA_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_235;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_REVERSE_GEOCODING")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_242;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_SUGGESTED_REGIONS")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_249;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODES")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_256;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_PROACTIVE_REGIONS")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_263;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BRAND_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_270;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_UPDATE_MANIFEST")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_277;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_WIFI_FINGERPRINT_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_304;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_INITIAL_OFFLINE_SUGGESTION")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_311;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_IP_GEO_LOOKUP")) & 1) != 0)
      {
        v3 = 1280;
        goto LABEL_318;
      }
      if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_GROUND_VIEW_LABEL")) & 1) == 0)
      {
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_SPATIAL_LOOKUP")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_332;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_VEHICLE_POSITION")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_339;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_COLLECTION_LOOKUP")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_346;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUP")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_353;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_CATEGORY_LOOKUP")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_360;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRAND")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_367;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORY")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_374;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_COLLECTION_SUGGESTION")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_381;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MAPS_SEARCH_HOME")) & 1) != 0)
        {
          v3 = 1280;
          goto LABEL_388;
        }
        if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUP")) & 1) == 0)
        {
          if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PUBLISHER_VIEW")) & 1) != 0)
          {
            v2 = 46;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ALL_COLLECTIONS_VIEW")) & 1) != 0)
          {
            v2 = 47;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_AIRPORT_ENTITY_PLACE_LOOKUP")) & 1) != 0)
          {
            v2 = 48;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TERRITORY_LOOKUP")) & 1) != 0)
          {
            v2 = 49;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUP")) & 1) != 0)
          {
            v2 = 50;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_MAPS_HOME")) & 1) != 0)
          {
            v2 = 51;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ALL_GUIDES_LOCATIONS")) & 1) != 0)
          {
            v2 = 52;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_GUIDES_HOME")) & 1) != 0)
          {
            v2 = 53;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_EXTENDED_GEO_LOOKUP")) & 1) != 0)
          {
            v2 = 54;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_QUERY_UNDERSTANDING")) & 1) != 0)
          {
            v2 = 55;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_POI_AT_ADDRESS_LOOKUP")) & 1) != 0)
          {
            v2 = 56;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUP")) & 1) != 0)
          {
            v2 = 57;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_PLACECARD_ENRICHMENT")) & 1) != 0)
          {
            v2 = 58;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_OFFLINE_REGION_NAME")) & 1) != 0)
          {
            v2 = 59;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_SEARCH_CAPABILITIES")) & 1) != 0)
          {
            v2 = 60;
          }
          else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_REFRESH_ID_LOOKUP")) & 1) != 0)
          {
            v2 = 61;
          }
          else if (objc_msgSend(v4, "isEqualToString:", CFSTR("REQUEST_TYPE_ADDRESS_RECOMMENDATION")))
          {
            v2 = 62;
          }
          else
          {
            v2 = 0;
          }
          v5 = v4;
          v3 = 1280;
          goto LABEL_136;
        }
        v3 = 1280;
LABEL_395:
        v2 = 45;
        goto LABEL_135;
      }
      v3 = 1280;
    }
    v2 = 35;
    goto LABEL_135;
  }
  v2 = 0;
  v3 = 1;
LABEL_137:

  return v3 | (unint64_t)(v2 << 32);
}

void sub_188F4BA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _loadTimeouts(int a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  NSObject *v6;
  void *v7;
  _QWORD v9[4];
  id v10;
  uint8_t buf[4];
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  _getValue(a1, a2, 1, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", objc_msgSend(v2, "count"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ___loadTimeouts_block_invoke;
  v9[3] = &unk_1E1C08930;
  v4 = v3;
  v10 = v4;
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v9);
  objc_msgSend(v4, "objectForKeyedSubscript:", &unk_1E1E810A0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
    objc_msgSend(v4, "setObject:forKeyedSubscript:", &unk_1E1E85C20, &unk_1E1E810A0);
  GEOGetDataRequestLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138412290;
    v12 = v4;
    _os_log_impl(&dword_1885A9000, v6, OS_LOG_TYPE_DEBUG, "Loaded new timeouts: %@", buf, 0xCu);
  }

  v7 = (void *)objc_msgSend(v4, "copy");
  return v7;
}

void _updateTimeoutWatcherIsolated(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *global_queue;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  if (_timeoutWatcher)
  {
    GEOConfigRemoveBlockListener((void *)_timeoutWatcher);
    v4 = (void *)_timeoutWatcher;
    _timeoutWatcher = 0;

  }
  global_queue = (void *)geo_get_global_queue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = ___updateTimeoutWatcherIsolated_block_invoke;
  v8[3] = &__block_descriptor_48_e14_v24__0___I_v_8l;
  v8[4] = a1;
  v8[5] = a2;
  _GEOConfigAddBlockListenerForKey(a1, a2, global_queue, v8);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)_timeoutWatcher;
  _timeoutWatcher = v6;

}

void ___loadTimeouts_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  unsigned int v7;
  int v8;
  NSObject *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  void *v17;
  void *v18;
  void *v19;
  int v20;
  id v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if ((objc_msgSend(v5, "isEqual:", CFSTR("default")) & 1) != 0)
    {
      v7 = 0;
      v8 = 0;
LABEL_13:
      objc_msgSend(v6, "doubleValue");
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", fmax(fmin(v16, 600.0), 1.0));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = *(void **)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v8 | v7);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setObject:forKeyedSubscript:", v17, v19);

      goto LABEL_14;
    }
    if (objc_msgSend(v5, "hasSuffix:", CFSTR("*")))
    {
      objc_msgSend(v5, "substringToIndex:", objc_msgSend(v5, "length") - 1);
      v14 = objc_claimAutoreleasedReturnValue();

      v5 = (id)v14;
    }
    v15 = GEODataRequestKindFromString(v5);
    v7 = v15;
    if ((_DWORD)v15)
    {
      v8 = HIDWORD(v15);
      goto LABEL_13;
    }
    GEOGetDataRequestLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      v20 = 138412290;
      v21 = v5;
      v10 = "Unrecognized request type \"%@\"";
      v11 = v9;
      v12 = OS_LOG_TYPE_ERROR;
      v13 = 12;
      goto LABEL_7;
    }
  }
  else
  {
    GEOGetDataRequestLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
    {
      v20 = 138412546;
      v21 = v5;
      v22 = 2112;
      v23 = v6;
      v10 = "RequestTypeTimeouts key (%@) is not of type string or value (%@) is not of type number";
      v11 = v9;
      v12 = OS_LOG_TYPE_FAULT;
      v13 = 22;
LABEL_7:
      _os_log_impl(&dword_1885A9000, v11, v12, v10, (uint8_t *)&v20, v13);
    }
  }

LABEL_14:
}

id GEOGetDataRequestLog()
{
  if (qword_1ECDBBD10 != -1)
    dispatch_once(&qword_1ECDBBD10, &__block_literal_global_569);
  return (id)qword_1ECDBBD08;
}

void ___updateTimeoutWatcherIsolated_block_invoke(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v8;
  void *v9;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if ((_DWORD)v5 == a2 && v6 == a3)
  {
    _loadTimeouts(v5, v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v9;
    geo_isolate_sync_data();

  }
}

void ___updateTimeoutWatcherIsolated_block_invoke_2(uint64_t a1)
{
  objc_storeStrong((id *)&qword_1ECDBBCF8, *(id *)(a1 + 32));
}

void sub_188F4C14C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F4C1B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F4C20C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F4C264(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F4C2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188F4C344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188F4C394(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F4C41C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188F4C8C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F4CA70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188F4CC40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalletCategoryMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOStyleAttributes *v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  int v44;
  void *v45;
  BOOL v47;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v47 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_60;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        v41 = 1;
        goto LABEL_72;
      }
      if (!v16)
        goto LABEL_73;
      while (1)
      {
        v44 = *v16++;
        v43 = v44;
        if (v44 == 1)
          break;
        if (v43 == 2)
        {
          v42 = 1;
LABEL_66:
          *(_BYTE *)(a1 + 44) |= v42;
        }
        else if (!v43)
        {
          goto LABEL_73;
        }
      }
      v42 = 2;
      goto LABEL_66;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v47)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 44) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_71;
          v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_71;
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag())
      goto LABEL_71;
LABEL_56:
    if (v9)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_60;
  }
  if (!v31)
    goto LABEL_50;
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      v41 = 0;
      goto LABEL_72;
    }
    v9 -= *(_BYTE *)(a1 + 44) & 1;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v38 = objc_alloc_init(GEOStyleAttributes);
  if (GEOStyleAttributesReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    v39 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v38;

    --v9;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 44) |= 1u;
  if ((v41 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_74;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_74:
      v45 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188F4D1D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F4D5FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalletCategoryMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWalletCategoryMappingReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWalletCategoryMappingReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWalletCategoryMappingReadAllFrom_initialTag;
  Specified = GEOWalletCategoryMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188F4D7A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalletCategoryMappingReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWalletCategoryMappingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F4D800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryMappingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188F4DB60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryMappingIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188F4DDE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryStylingMapReadAllFrom(void *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  GEOWalletCategoryMapping *v19;
  _BOOL8 v20;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v19 = objc_alloc_init(GEOWalletCategoryMapping);
          if (!GEOWalletCategoryMappingReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addMappings:", v19, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_188F4E6A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryStylingMapReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWalletCategoryStylingMapReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F4E704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryStylingMapIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWalletCategoryMappingIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDStorefrontIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  BOOL v15;
  char v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  int v35;
  _BOOL8 v36;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
    goto LABEL_64;
  v5 = (int *)MEMORY[0x1E0D82BB8];
  do
  {
    if (a1[*v4])
      break;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
        break;
      v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v12 = v7++ >= 9;
      if (v12)
      {
        v8 = 0;
        v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v13 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v14 = v8 & 7;
    if (v13)
      v15 = 1;
    else
      v15 = v14 == 4;
    if (v15)
      break;
    if ((v8 >> 3) != 4)
    {
      if ((PBReaderSkipValueWithTag() & 1) != 0)
        continue;
LABEL_66:
      PBReaderRecallMark();
      return 0;
    }
    if (v14 != 2 || !PBReaderPlaceMark())
      goto LABEL_66;
    objc_msgSend(a1, "position", 0, 0);
    objc_msgSend(a1, "length");
LABEL_22:
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v16 = 0;
      v17 = 0;
      v18 = 0;
      while (1)
      {
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 == -1 || v20 >= *(_QWORD *)&a1[*v3])
          break;
        v21 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v20);
        *(_QWORD *)&a1[v19] = v20 + 1;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0)
          goto LABEL_32;
        v16 += 7;
        v12 = v17++ >= 9;
        if (v12)
        {
          v18 = 0;
          v22 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      v22 = a1[*v4];
      if (a1[*v4])
        v18 = 0;
LABEL_34:
      if (v22 || (v18 & 7) == 4)
        break;
      if ((v18 >> 3) == 2)
      {
        if ((v18 & 7) != 0)
          goto LABEL_65;
        v30 = 0;
        while (1)
        {
          v31 = *v2;
          v32 = *(_QWORD *)&a1[v31];
          if (v32 == -1 || v32 >= *(_QWORD *)&a1[*v3])
            break;
          v33 = v32 + 1;
          v34 = *(char *)(*(_QWORD *)&a1[*v5] + v32);
          *(_QWORD *)&a1[v31] = v33;
          if (v34 < 0)
          {
            v29 = v30++ > 8;
            if (!v29)
              continue;
          }
          goto LABEL_22;
        }
LABEL_56:
        a1[*v4] = 1;
      }
      else
      {
        if ((v18 >> 3) == 1)
        {
          if ((v18 & 7) != 0)
            goto LABEL_65;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            if (v26 == -1 || v26 >= *(_QWORD *)&a1[*v3])
              goto LABEL_56;
            v27 = v26 + 1;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v29 = v24++ > 8;
              if (!v29)
                continue;
            }
            goto LABEL_22;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_65:
          PBReaderRecallMark();
          goto LABEL_66;
        }
      }
    }
    v35 = a1[*v4];
    PBReaderRecallMark();
    if (v35)
      goto LABEL_66;
    PBReaderRecallMark();
  }
  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
LABEL_64:
  v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

void sub_188F4F9C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontBundleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  GEOPDStorefrontPresentation *v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  char v53;
  char v54;
  int v55;
  int v56;
  char v57;
  void *v58;
  _BOOL4 v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        if (v14)
          v17 = 1;
        else
          v17 = v16 == 0;
        v61 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v60 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      if (v26 == -1 || v26 >= *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v22 += 7;
      v28 = v23++ >= 9;
      if (v28)
      {
        v24 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_28:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_87:
      if (v15)
      {
        v54 = 1;
        goto LABEL_101;
      }
      if (!v16)
        goto LABEL_102;
      while (1)
      {
        v56 = *v16++;
        v55 = v56;
        if (v56 == 2)
          break;
        if (v55 == 3)
        {
          v57 = 4;
LABEL_96:
          *(_BYTE *)(a1 + v21[887]) |= v57;
        }
        else if (!v55)
        {
          goto LABEL_102;
        }
      }
      v57 = 8;
      goto LABEL_96;
    }
    v31 = v24 >> 3;
    v32 = v15;
    if (!v61)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + v21[887]) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0)
            goto LABEL_72;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_74;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_72:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_74:
        v52 = 24;
        goto LABEL_79;
      case 2:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + v21[887]) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_98:
            v54 = 0;
            goto LABEL_100;
          }
          v7 += *(unsigned __int8 *)(a1 + v21[887]) << 28 >> 31;
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v44 = objc_alloc_init(GEOPDStorefrontPresentation);
        if (GEOPDStorefrontPresentationReadAllFrom((uint64_t)v44, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v45 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v44;

          --v7;
LABEL_60:
          v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_82:
          v15 = v60;
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
          if (v7)
            v53 = 1;
          else
            v53 = v15;
          if ((v53 & 1) == 0)
            goto LABEL_87;
          continue;
        }
LABEL_99:

        v54 = 0;
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_100:
        v15 = v60;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_101:
        *(_BYTE *)(a1 + v21[887]) |= 8u;
        *(_BYTE *)(a1 + v21[887]) |= 4u;
        if ((v54 & 1) != 0)
        {
LABEL_102:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if (v15)
            goto LABEL_103;
        }
        else
        {
          v3 = 0;
          if (v15)
          {
LABEL_103:
            v58 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + v21[887]) & 4) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v44 = objc_alloc_init(GEOPDStorefrontFace);
        if (!GEOPDStorefrontFaceReadAllFrom((uint64_t)v44, (void *)v3, v9 & 1))
          goto LABEL_99;
        PBReaderRecallMark();
        -[GEOPDStorefrontBundle _addNoFlagsFace:](a1, v44);

        goto LABEL_60;
      case 4:
        if ((v8 & 1) != 0)
        {
          v46 = 0;
          v47 = 0;
          v39 = 0;
          *(_BYTE *)(a1 + v21[887]) |= 2u;
          while (1)
          {
            v48 = *v18;
            v49 = *(_QWORD *)(v3 + v48);
            if (v49 == -1 || v49 >= *(_QWORD *)(v3 + *v6))
              break;
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v49 + 1;
            v39 |= (unint64_t)(v50 & 0x7F) << v46;
            if ((v50 & 0x80) == 0)
              goto LABEL_76;
            v46 += 7;
            v28 = v47++ >= 9;
            if (v28)
            {
              v39 = 0;
              goto LABEL_78;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_76:
          if (*(_BYTE *)(v3 + *v19))
            v39 = 0;
LABEL_78:
          v52 = 32;
LABEL_79:
          *(_QWORD *)(a1 + v52) = v39;
        }
        else
        {
LABEL_69:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v60;
          if ((v51 & 1) == 0)
          {
LABEL_97:
            v54 = 0;
            goto LABEL_101;
          }
        }
        goto LABEL_83;
      default:
        v43 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v60;
        if (!v43)
          goto LABEL_97;
        goto LABEL_83;
    }
  }
}

void sub_188F50104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F50ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDStorefrontBundleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDStorefrontBundleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDStorefrontBundleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDStorefrontBundleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDStorefrontBundleReadAllFrom_initialTag;
  Specified = GEOPDStorefrontBundleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDStorefrontBundleCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188F50D5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontBundleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDStorefrontBundleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F50DBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontBundleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_46;
          }
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDStorefrontPresentationIsValid(a1))
            goto LABEL_49;
          goto LABEL_36;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDStorefrontFaceIsValid(a1))
            goto LABEL_49;
LABEL_36:
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v22 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_46;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOPDStorefrontFaceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDStorefrontFeatureIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if ((_DWORD)v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDOrientedBoundingBoxIsValid(a1))
            goto LABEL_43;
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188F51554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDStorefrontBundleIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOPDStorefrontPresentationIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDStorefrontBundleIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDStorefrontBundleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F51A08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F52244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontFaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOPDOrientedBoundingBox *v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  char v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  _BOOL4 v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v53 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_76;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        v47 = 1;
        goto LABEL_90;
      }
      if (!v15)
        goto LABEL_91;
      while (1)
      {
        v49 = *v15++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 2)
        {
LABEL_81:
          *(_BYTE *)(a1 + 52) |= v48;
        }
        else if (!v48)
        {
          goto LABEL_91;
        }
      }
      LOBYTE(v48) = 4;
      goto LABEL_81;
    }
    v30 = v23 >> 3;
    v31 = v16;
    if (!v53)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
    {
      if ((v8 & 1) != 0)
      {
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (1)
        {
          v41 = *v18;
          v42 = *(_QWORD *)(v3 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
          *(_QWORD *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0)
            goto LABEL_66;
          v38 += 7;
          v27 = v39++ >= 9;
          if (v27)
          {
            v40 = 0;
            goto LABEL_68;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_66:
        if (*(_BYTE *)(v3 + *v19))
          v40 = 0;
LABEL_68:
        *(_QWORD *)(a1 + 32) = v40;
        goto LABEL_72;
      }
      goto LABEL_63;
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 != 1)
    {
      v44 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
        goto LABEL_86;
      goto LABEL_72;
    }
    if (v31)
    {
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_87:
          v47 = 0;
          goto LABEL_89;
        }
        v7 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_87;
        v52 = v16;
        v36 = objc_alloc_init(GEOPDOrientedBoundingBox);
        if (!GEOPDOrientedBoundingBoxReadAllFrom((uint64_t)v36, (void *)v3))
          goto LABEL_88;
        PBReaderRecallMark();
        v37 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v36;

        --v7;
LABEL_60:
        v16 = v52;
      }
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_72;
    }
LABEL_63:
    v45 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
LABEL_86:
      v47 = 0;
      goto LABEL_90;
    }
LABEL_72:
    if (v7)
      v46 = 1;
    else
      v46 = v16;
    if ((v46 & 1) == 0)
      goto LABEL_76;
  }
  if (!v31 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_63;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_87;
  v52 = v16;
  v36 = objc_alloc_init(GEOPDStorefrontFeature);
  if (GEOPDStorefrontFeatureReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDStorefrontFace _addNoFlagsFeature:](a1, v36);

    goto LABEL_60;
  }
LABEL_88:

  v47 = 0;
  v16 = v52;
LABEL_89:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_90:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v47 & 1) != 0)
  {
LABEL_91:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_92;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_92:
      v50 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188F528C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F531E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDStorefrontFaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDStorefrontFaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDStorefrontFaceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDStorefrontFaceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDStorefrontFaceReadAllFrom_initialTag;
  Specified = GEOPDStorefrontFaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDStorefrontFaceCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188F53488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontFaceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDStorefrontFaceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F534E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFeatureIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDOrientedBoundingBoxIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188F5396C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFaceIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188F53D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFacesFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        if (v12 == -1 || v12 >= *(_QWORD *)&v2[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v15 = 1;
      else
        v15 = (v10 & 7) == 4;
      if (v15)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_188F542A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFeatureReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  GEOPDOrientedBoundingBox *v23;
  void *v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v23 = objc_alloc_init(GEOPDOrientedBoundingBox);
          if (!GEOPDOrientedBoundingBoxReadAllFrom((uint64_t)v23, v3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          v24 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v23;

        }
        else if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_34;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_188F54B44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFeatureReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDStorefrontFeatureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F54BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontPresentationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDStorefrontPresentationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F55464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDStorefrontPresentationIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 1) != 0)
  {
    if ((GEOPDStorefrontViewIsDirty(*(os_unfair_lock_s **)(a1 + 16)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOPDStorefrontViewIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

uint64_t _GEOPDStorefrontViewCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOPDStorefrontViewReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDStorefrontViewReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F55F28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F560F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDStorefrontViewIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOPDPhotoPositionIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 6) != 0)
    return 1;
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDStorefrontViewIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDStorefrontViewIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F564B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F58500(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

uint64_t CoreLocationLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = CoreLocationLibraryCore_frameworkLibrary;
  v6 = CoreLocationLibraryCore_frameworkLibrary;
  if (!CoreLocationLibraryCore_frameworkLibrary)
  {
    v7 = xmmword_1E1C08D58;
    v8 = *(_OWORD *)&off_1E1C08D68;
    v1 = _sl_dlopen();
    v4[3] = v1;
    CoreLocationLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_188F5959C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t CoreLocationLibrary()
{
  uint64_t v0;
  void *v2;

  v0 = CoreLocationLibraryCore();
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getCLLocationManagerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCLLocationManagerClass_softClass;
  v7 = getCLLocationManagerClass_softClass;
  if (!getCLLocationManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCLLocationManagerClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getCLLocationManagerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_188F596AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double __getCLLocationManagerClass_block_invoke(uint64_t a1)
{
  double result;
  GEOURLCamera *v3;
  SEL v4;

  CoreLocationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CLLocationManager");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCLLocationManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (GEOURLCamera *)abort_report_np();
    return -[GEOURLCamera latitude](v3, v4);
  }
  return result;
}

BOOL GEOURLCameraReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int *v29;
  _BOOL8 v30;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 48) |= 4u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOURLCamera__latitude;
            goto LABEL_47;
          case 2u:
            *(_BYTE *)(a1 + 48) |= 8u;
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v22 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOURLCamera__longitude;
            goto LABEL_47;
          case 3u:
            *(_BYTE *)(a1 + 48) |= 2u;
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOURLCamera__heading;
            goto LABEL_47;
          case 4u:
            *(_BYTE *)(a1 + 48) |= 0x10u;
            v25 = *v4;
            v26 = *(_QWORD *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
              *(_QWORD *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOURLCamera__pitch;
            goto LABEL_47;
          case 5u:
            *(_BYTE *)(a1 + 48) |= 1u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v29 = &OBJC_IVAR___GEOURLCamera__altitude;
LABEL_47:
            *(_QWORD *)(a1 + *v29) = v20;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_50;
            break;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_188F5A0E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLCameraReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLCameraReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F5A140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLCameraIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          if (v16 != 1)
            goto LABEL_28;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v18] = v20;
          else
            a1[v14] = 1;
          goto LABEL_25;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_28:
            v21 = 0;
            goto LABEL_27;
          }
LABEL_25:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_26;
          break;
      }
    }
  }
LABEL_26:
  v21 = a1[*v4] == 0;
LABEL_27:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOURLCenterSpanReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int *v27;
  _BOOL8 v28;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 40) |= 2u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v27 = &OBJC_IVAR___GEOURLCenterSpan__latitude;
            goto LABEL_42;
          case 2u:
            *(_BYTE *)(a1 + 40) |= 8u;
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v22 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v27 = &OBJC_IVAR___GEOURLCenterSpan__longitude;
            goto LABEL_42;
          case 3u:
            *(_BYTE *)(a1 + 40) |= 1u;
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v27 = &OBJC_IVAR___GEOURLCenterSpan__latitudeDelta;
            goto LABEL_42;
          case 4u:
            *(_BYTE *)(a1 + 40) |= 4u;
            v25 = *v4;
            v26 = *(_QWORD *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
              *(_QWORD *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v27 = &OBJC_IVAR___GEOURLCenterSpan__longitudeDelta;
LABEL_42:
            *(_QWORD *)(a1 + *v27) = v20;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_45;
            break;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_45:
    v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_188F5B38C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLCenterSpanReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLCenterSpanReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F5B3EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLCenterSpanIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1)
            goto LABEL_29;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v18] = v20;
          else
            a1[v14] = 1;
          goto LABEL_26;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_29:
            v21 = 0;
            goto LABEL_28;
          }
LABEL_26:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_27;
          break;
      }
    }
  }
LABEL_27:
  v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

void sub_188F5BDF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPlace *v38;
  uint64_t v39;
  void *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  int v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  int v55;
  void *v56;
  _BOOL4 v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        if (v14)
          v17 = 1;
        else
          v17 = v16 == 0;
        v59 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        v58 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_26;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_28:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      if (v15)
      {
        v52 = 1;
        goto LABEL_94;
      }
      if (!v16)
        goto LABEL_95;
      while (1)
      {
        v55 = *v16++;
        v54 = v55;
        if (v55 == 1)
          break;
        if (v54 == 3)
        {
          v53 = 2;
LABEL_85:
          *(_BYTE *)(a1 + v21[911]) |= v53;
        }
        else if (!v54)
        {
          goto LABEL_95;
        }
      }
      v53 = 4;
      goto LABEL_85;
    }
    v32 = v24 >> 3;
    v33 = v15;
    if (!v59)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
      break;
    if ((_DWORD)v32 == 2)
    {
      if ((v8 & 1) != 0)
      {
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + v21[911]) |= 1u;
        while (1)
        {
          v44 = *v18;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
            break;
          v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v45);
          *(_QWORD *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0)
            goto LABEL_66;
          v41 += 7;
          v29 = v42++ >= 9;
          if (v29)
          {
            v43 = 0;
            goto LABEL_68;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_66:
        if (*(_BYTE *)(v3 + *v19))
          v43 = 0;
LABEL_68:
        *(_BYTE *)(a1 + 44) = v43 != 0;
        goto LABEL_75;
      }
    }
    else
    {
      if ((_DWORD)v32 != 1)
      {
        v48 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v58;
        if (!v48)
          goto LABEL_90;
        goto LABEL_75;
      }
      if (v33)
      {
        if ((*(_BYTE *)(a1 + v21[911]) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_91;
          v38 = objc_alloc_init(GEOPlace);
          if (!GEOPlaceReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
            goto LABEL_92;
          PBReaderRecallMark();
          v39 = 24;
LABEL_52:
          v40 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v7;
          v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_74:
          v15 = v58;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_91;
        v50 = 32 * *(_BYTE *)(a1 + v21[911]);
LABEL_73:
        v7 += v50 >> 7;
        goto LABEL_74;
      }
    }
LABEL_63:
    v49 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v15 = v58;
    if ((v49 & 1) == 0)
    {
LABEL_90:
      v52 = 0;
      goto LABEL_94;
    }
LABEL_75:
    if (v7)
      v51 = 1;
    else
      v51 = v15;
    if ((v51 & 1) == 0)
      goto LABEL_79;
  }
  if (!v33)
    goto LABEL_63;
  if ((*(_BYTE *)(a1 + v21[911]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_91:
      v52 = 0;
      goto LABEL_93;
    }
    v50 = *(_BYTE *)(a1 + v21[911]) << 6;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_91;
  v38 = objc_alloc_init(GEOMapItemStorage);
  if (GEOMapItemStorageReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v39 = 16;
    goto LABEL_52;
  }
LABEL_92:

  v52 = 0;
  v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_93:
  v15 = v58;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
  *(_BYTE *)(a1 + v21[911]) |= 4u;
  *(_BYTE *)(a1 + v21[911]) |= 2u;
  if ((v52 & 1) != 0)
  {
LABEL_95:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_96;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_96:
      v56 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188F5C43C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F5C7B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOURLItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOURLItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOURLItemReadAllFrom_initialTag;
  Specified = GEOURLItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188F5C968(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F5CAF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOURLItemIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(_BYTE *)(a1 + 48);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 48) & 4) != 0)
  {
    if ((GEOPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 48);
  }
  if ((v2 & 2) != 0)
    return (uint64_t)GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 16));
  else
    return 0;
}

void sub_188F5CD0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F5D488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  __int16 v91;
  char v92;
  int v93;
  __int16 v94;
  void *v95;
  GEOURLCenterSpan *v97;
  char v98;
  char v99;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFF6FFF7FFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 11) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v99 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v98 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_165;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_165:
      if ((v15 & 1) != 0)
      {
        v92 = 1;
        goto LABEL_177;
      }
      if (v16)
      {
        while (1)
        {
          v93 = *v16++;
          v94 = 256;
          switch(v93)
          {
            case 0:
              goto LABEL_178;
            case 4:
              goto LABEL_173;
            case 5:
              v94 = 128;
              goto LABEL_173;
            case 6:
              v94 = 512;
              goto LABEL_173;
            case 8:
              v94 = 1024;
              goto LABEL_173;
            case 9:
              v94 = 2048;
LABEL_173:
              *(_WORD *)(a1 + 84) |= v94;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_178;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v99 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 84) |= 0x10u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_123;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            v38 = 0;
            goto LABEL_125;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_123:
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_125:
        v88 = v38 != 0;
        v89 = 81;
        goto LABEL_151;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v46) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v46) = 0;
LABEL_129:
        v90 = 68;
        goto LABEL_138;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v51 = 0;
        v52 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v53 = *v17;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v27 = v52++ >= 9;
              if (v27)
              {
                LODWORD(v46) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v46) = 0;
LABEL_133:
        v90 = 72;
        goto LABEL_138;
      case 4:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 84) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v91 = *(_WORD *)(a1 + 84) << 7;
          goto LABEL_162;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v97 = objc_alloc_init(GEOURLCenterSpan);
        if (!GEOURLCenterSpanReadAllFrom((uint64_t)v97, (void *)v3))
          goto LABEL_175;
        PBReaderRecallMark();
        v57 = 24;
        goto LABEL_94;
      case 5:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v91 = *(_WORD *)(a1 + 84) << 8;
          goto LABEL_162;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v97 = objc_alloc_init(GEOURLCamera);
        if (!GEOURLCameraReadAllFrom((uint64_t)v97, (void *)v3))
          goto LABEL_175;
        PBReaderRecallMark();
        v57 = 16;
        goto LABEL_94;
      case 6:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 84) & 0x200) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v58;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_176;
        v91 = *(_WORD *)(a1 + 84) << 6;
        goto LABEL_162;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v60 = 0;
        v61 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 84) |= 4u;
        while (2)
        {
          v62 = *v17;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v46 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v27 = v61++ >= 9;
              if (v27)
              {
                LODWORD(v46) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v46) = 0;
LABEL_137:
        v90 = 76;
LABEL_138:
        *(_DWORD *)(a1 + v90) = v46;
        goto LABEL_164;
      case 8:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 84) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v91 = 32 * *(_WORD *)(a1 + 84);
          goto LABEL_162;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v97 = objc_alloc_init(GEOURLRouteHandle);
        if (!GEOURLRouteHandleReadAllFrom((uint64_t)v97, (void *)v3, v9 & 1))
          goto LABEL_175;
        PBReaderRecallMark();
        v57 = 40;
        goto LABEL_94;
      case 9:
        if (!v31)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 84) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v91 = 16 * *(_WORD *)(a1 + 84);
LABEL_162:
          v7 += v91 >> 15;
LABEL_163:
          v15 = v98;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_164:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_165;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v97 = objc_alloc_init(GEOURLTimePoint);
        if (GEOURLTimePointReadAllFrom((uint64_t)v97, (void *)v3))
        {
          PBReaderRecallMark();
          v57 = 48;
LABEL_94:
          v59 = *(void **)(a1 + v57);
          *(_QWORD *)(a1 + v57) = v97;
LABEL_95:

          --v7;
          goto LABEL_163;
        }
LABEL_175:

LABEL_176:
        v92 = 0;
        v15 = v98;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_177:
        *(_WORD *)(a1 + 84) |= 0x100u;
        *(_WORD *)(a1 + 84) |= 0x80u;
        *(_WORD *)(a1 + 84) |= 0x200u;
        *(_WORD *)(a1 + 84) |= 0x400u;
        *(_WORD *)(a1 + 84) |= 0x800u;
        if ((v92 & 1) != 0)
        {
LABEL_178:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_179;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_179:
            v95 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v66 = 0;
        v67 = 0;
        v68 = 0;
        *(_WORD *)(a1 + 84) |= 8u;
        while (2)
        {
          v69 = *v17;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v27 = v67++ >= 9;
              if (v27)
              {
                v68 = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v68 = 0;
LABEL_142:
        v88 = v68 != 0;
        v89 = 80;
        goto LABEL_151;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v73 = 0;
        v74 = 0;
        v75 = 0;
        *(_WORD *)(a1 + 84) |= 0x40u;
        while (2)
        {
          v76 = *v17;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              v27 = v74++ >= 9;
              if (v27)
              {
                v75 = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v75 = 0;
LABEL_146:
        v88 = v75 != 0;
        v89 = 83;
        goto LABEL_151;
      case 12:
        if ((v8 & 1) != 0)
        {
          v80 = 0;
          v81 = 0;
          v82 = 0;
          *(_WORD *)(a1 + 84) |= 0x20u;
          while (1)
          {
            v83 = *v17;
            v84 = *(_QWORD *)(v3 + v83);
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
              break;
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if ((v86 & 0x80) == 0)
              goto LABEL_148;
            v80 += 7;
            v27 = v81++ >= 9;
            if (v27)
            {
              v82 = 0;
              goto LABEL_150;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_148:
          if (*(_BYTE *)(v3 + *v18))
            v82 = 0;
LABEL_150:
          v88 = v82 != 0;
          v89 = 82;
LABEL_151:
          *(_BYTE *)(a1 + v89) = v88;
        }
        else
        {
LABEL_120:
          v87 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v98;
          if ((v87 & 1) == 0)
          {
LABEL_174:
            v92 = 0;
            goto LABEL_177;
          }
        }
        goto LABEL_164;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v98;
        if (!v43)
          goto LABEL_174;
        goto LABEL_164;
    }
  }
}

void sub_188F5E138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F5E27C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F5E55C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F5E6A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F5F4A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOURLOptionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOURLOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOURLOptionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOURLOptionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOURLOptionsReadAllFrom_initialTag;
  Specified = GEOURLOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOURLOptionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188F5F69C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F5F6FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  _BOOL8 v53;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_98;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_95;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_98;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_95;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_98;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_95;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLCenterSpanIsValid(a1))
            goto LABEL_98;
          goto LABEL_69;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLCameraIsValid(a1))
            goto LABEL_98;
          goto LABEL_69;
        case 6u:
          if (v15 == 2)
            goto LABEL_52;
          goto LABEL_98;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_98;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_95;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLRouteHandleIsValid(a1))
            goto LABEL_98;
          goto LABEL_69;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLTimePointIsValid(a1))
            goto LABEL_98;
LABEL_69:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_98;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_95;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_98;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_95;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_98;
          v48 = 0;
          break;
        default:
LABEL_52:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_98:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v49 = *v2;
        v50 = *(_QWORD *)&a1[v49];
        v51 = v50 + 1;
        if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
          break;
        v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
        *(_QWORD *)&a1[v49] = v51;
        if (v52 < 0)
        {
          v22 = v48++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_95;
      }
LABEL_94:
      a1[*v4] = 1;
LABEL_95:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOURLRouteHandleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_32;
          goto LABEL_28;
        case 2u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 3u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 4u:
          if (v15 != 2)
            goto LABEL_32;
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            v17 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_30;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_32;
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  v17 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOURLTimePointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_37;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_37;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v16 != 1)
          goto LABEL_39;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 > 0xFFFFFFFFFFFFFFF7)
          goto LABEL_35;
        v20 = v19 + 8;
        if (v20 > *(_QWORD *)&a1[*v3])
          goto LABEL_35;
        *(_QWORD *)&a1[v18] = v20;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_37;
    }
    if ((v8 & 7) != 0)
      goto LABEL_39;
    v21 = 0;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
        break;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0 && v21++ <= 8)
        continue;
      goto LABEL_36;
    }
    v14 = *v4;
LABEL_35:
    a1[v14] = 1;
    goto LABEL_36;
  }
LABEL_37:
  v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

void sub_188F6028C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOURLOptionsIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int16 *)(a1 + 84);
  if ((v2 & 0x1380) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if (GEOURLRouteHandleIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 84);
  }
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOURLOptionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOURLOptionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F60878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F610D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLPresentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOURLItem *v38;
  void *v39;
  int v40;
  char v41;
  char v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  BOOL v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v48 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_62;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_62:
      if (v15)
      {
        v43 = 1;
        goto LABEL_74;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v45 = *v16++;
            v44 = v45;
            if (v45 != 1 && v44 != 2)
              break;
            *(_BYTE *)(a1 + v21[917]) |= v44;
          }
        }
        while (v44);
      }
      goto LABEL_75;
    }
    v32 = v24 >> 3;
    v33 = v15;
    if (!v48)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 != 1)
    {
      v40 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v40)
        goto LABEL_70;
      goto LABEL_58;
    }
    if (v33 && (*(_BYTE *)(a1 + v21[917]) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_71;
      v38 = objc_alloc_init(GEOURLItem);
      if (!GEOURLItemReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
        goto LABEL_72;
      PBReaderRecallMark();
      -[GEOURLPresent _addNoFlagsItem:](a1, v38);

LABEL_50:
      v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_57:
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_58;
    }
LABEL_53:
    v41 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v41 & 1) == 0)
    {
LABEL_70:
      v43 = 0;
      goto LABEL_74;
    }
LABEL_58:
    if (v7)
      v42 = 1;
    else
      v42 = v15;
    if ((v42 & 1) == 0)
      goto LABEL_62;
  }
  if (!v33)
    goto LABEL_53;
  if ((*(_BYTE *)(a1 + v21[917]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      v43 = 0;
      goto LABEL_73;
    }
    v7 += *(unsigned __int8 *)(a1 + v21[917]) << 30 >> 31;
    goto LABEL_57;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v38 = objc_alloc_init(GEOURLOptions);
  if (GEOURLOptionsReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v39 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v38;

    --v7;
    goto LABEL_50;
  }
LABEL_72:

  v43 = 0;
  v21 = &OBJC_IVAR___GEOComposedRoute__avoidsHighways;
LABEL_73:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  *(_BYTE *)(a1 + v21[917]) |= 1u;
  *(_BYTE *)(a1 + v21[917]) |= 2u;
  if ((v43 & 1) != 0)
  {
LABEL_75:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_76;
  }
  v3 = 0;
  if (v15)
  {
LABEL_76:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188F6171C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F61C30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLPresentReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOURLPresentReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 32) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 36) = objc_msgSend(v6, "length");
      Specified = GEOURLPresentReadSpecified(a1, (unint64_t)v6, (int *)&GEOURLPresentReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_188F61DAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F620D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F62304(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F625CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLRouteHandleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void *v36;
  char v37;
  char v38;
  char v39;
  int v40;
  char v41;
  void *v42;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_66;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_66:
      if ((v12 & 1) != 0)
      {
        v39 = 1;
        goto LABEL_76;
      }
      if (v13)
      {
        while (1)
        {
          v40 = *v13++;
          v41 = 1;
          switch(v40)
          {
            case 0:
              goto LABEL_77;
            case 1:
              goto LABEL_73;
            case 2:
              v41 = 2;
              goto LABEL_73;
            case 3:
              v41 = 8;
              goto LABEL_73;
            case 4:
              v41 = 4;
LABEL_73:
              *(_BYTE *)(a1 + 60) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_77;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 1) == 0)
        {
          PBReaderReadData();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 16;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v8 -= *(_BYTE *)(a1 + 60) & 1;
        goto LABEL_64;
      case 2:
        if (!v28)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          PBReaderReadData();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 24;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v38 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_63;
      case 3:
        if (!v28)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadData();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v38 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_63;
      case 4:
        if (!v28)
        {
LABEL_53:
          v37 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v37 & 1) == 0)
          {
LABEL_74:
            v39 = 0;
            goto LABEL_76;
          }
          goto LABEL_65;
        }
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadData();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 32;
LABEL_52:
          v36 = *(void **)(a1 + v34);
          *(_QWORD *)(a1 + v34) = v33;

          v15 = (int *)MEMORY[0x1E0D82BC8];
          --v8;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v38 = 32 * *(_BYTE *)(a1 + 60);
LABEL_63:
          v8 += v38 >> 7;
LABEL_64:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_65:
          if (!(v12 & 1 | (v8 != 0)))
            goto LABEL_66;
          continue;
        }
LABEL_75:
        v39 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        *(_BYTE *)(a1 + 60) |= 1u;
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 4u;
        if ((v39 & 1) != 0)
        {
LABEL_77:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_78;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_78:
            v42 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v35 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v35)
          goto LABEL_74;
        goto LABEL_65;
    }
  }
}

void sub_188F62BE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F62D20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F62E5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F633E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLRouteHandleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOURLRouteHandleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOURLRouteHandleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOURLRouteHandleReadAllFrom_initialTag;
  Specified = GEOURLRouteHandleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188F6356C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLRouteHandleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLRouteHandleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F635CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F63780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLRouteHandleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_188F63A84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLTimePointReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  _BOOL8 v28;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v24 = *v4;
            v25 = *(_QWORD *)&v3[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
            *(_QWORD *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_34;
            v21 += 7;
            v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          *(_BYTE *)(a1 + 20) |= 1u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          *(_QWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_188F64448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLTimePointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOURLTimePointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F644A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id getCNMutablePostalAddressClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCNMutablePostalAddressClass_softClass;
  v7 = getCNMutablePostalAddressClass_softClass;
  if (!getCNMutablePostalAddressClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCNMutablePostalAddressClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getCNMutablePostalAddressClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_188F64930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNMutablePostalAddressClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  ContactsLibrary();
  result = objc_getClass("CNMutablePostalAddress");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNMutablePostalAddressClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)getCNPostalAddressFormatterClass(v3);
  }
  return result;
}

id getCNPostalAddressFormatterClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCNPostalAddressFormatterClass_softClass;
  v7 = getCNPostalAddressFormatterClass_softClass;
  if (!getCNPostalAddressFormatterClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCNPostalAddressFormatterClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getCNPostalAddressFormatterClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_188F64A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSMutableArray *__getCNPostalAddressFormatterClass_block_invoke(uint64_t a1)
{
  NSMutableArray *result;
  GEORoutingFeatures *v3;
  SEL v4;

  ContactsLibrary();
  result = (NSMutableArray *)objc_getClass("CNPostalAddressFormatter");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNPostalAddressFormatterClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (GEORoutingFeatures *)abort_report_np();
    return -[GEORoutingFeatures routingFeaturesInfos](v3, v4);
  }
  return result;
}

BOOL GEORoutingFeaturesReadAllFrom(void *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  GEORoutingFeaturesInfo *v19;
  _BOOL8 v20;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v19 = objc_alloc_init(GEORoutingFeaturesInfo);
          if (!GEORoutingFeaturesInfoReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addRoutingFeaturesInfo:", v19, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_188F651C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingFeaturesReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORoutingFeaturesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F65228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingFeaturesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORoutingFeaturesInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORoutingFeaturesInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOChargingNetworkInfoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEORoutingFeaturesInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOChargingNetworkInfo *v25;
  void *v26;
  _BOOL8 v27;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v25 = objc_alloc_init(GEOChargingNetworkInfo);
          if (!GEOChargingNetworkInfoReadAllFrom(v25, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v12 >> 3) == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v22 = *v6;
            v23 = *(_QWORD *)&v5[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&v5[*v7])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v23);
            *(_QWORD *)&v5[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v19 += 7;
            v16 = v20++ >= 9;
            if (v16)
            {
              LODWORD(v21) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8])
            LODWORD(v21) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_188F6629C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingFeaturesInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORoutingFeaturesInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F662FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCameraViewReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  GEOURLCamera *v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_36;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v17 = objc_alloc_init(GEOURLCamera);
          if (!GEOURLCameraReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v18 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v17;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188F69A94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCameraViewReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStorageCameraViewReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F69AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCameraViewIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLCameraIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEOStorageCompletionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  GEOPDAutocompleteEntry *v19;
  void *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v19 = objc_alloc_init(GEOPDAutocompleteEntry);
          if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_188F6A778(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCompletionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStorageCompletionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F6A7D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCompletionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188F6AE64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageResumeRouteHandleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOOriginalWaypointRoute *v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  char v49;
  int v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        v12 = v6;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v12 = v6;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 != 0;
        v57 = v15 & ~(_BYTE)v10 | v7;
        v58 = v15 | v10 | v57;
        if ((((v15 | v10) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v59 = (v16 == 0) | v15 | v10;
        v60 = v15 | v10;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v6;
        v13 = v7;
LABEL_8:
        v14 = v10;
LABEL_10:
        ++v9;
        v6 = v12;
        v7 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v20) || *(_BYTE *)(v3 + *v18))
      goto LABEL_77;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v20))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_77:
      v55 = 1;
      goto LABEL_78;
    }
    v30 = v23 >> 3;
    v31 = v60;
    if ((v59 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
    {
      if ((v8 & 1) == 0)
        goto LABEL_64;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v41 = *v17;
        v42 = *(_QWORD *)(v3 + v41);
        if (v42 == -1 || v42 >= *(_QWORD *)(v3 + *v20))
          break;
        v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v42);
        *(_QWORD *)(v3 + v41) = v42 + 1;
        v40 |= (unint64_t)(v43 & 0x7F) << v38;
        if ((v43 & 0x80) == 0)
          goto LABEL_67;
        v38 += 7;
        v27 = v39++ >= 9;
        if (v27)
        {
          v40 = 0;
          goto LABEL_69;
        }
      }
      *(_BYTE *)(v3 + *v18) = 1;
LABEL_67:
      if (*(_BYTE *)(v3 + *v18))
        v40 = 0;
LABEL_69:
      *(_BYTE *)(a1 + 52) = v40 != 0;
      goto LABEL_76;
    }
    if ((_DWORD)v30 == 2)
    {
      if (!v31)
        goto LABEL_64;
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        PBReaderReadData();
        v44 = objc_claimAutoreleasedReturnValue();
        v37 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v44;
LABEL_57:

        --v9;
LABEL_75:
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_76;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_97;
      v49 = 16 * *(_BYTE *)(a1 + 56);
LABEL_74:
      v9 += v49 >> 7;
      goto LABEL_75;
    }
    if ((_DWORD)v30 == 1)
      break;
    if ((v57 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
    {
LABEL_64:
      v48 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BD8];
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if ((v48 & 1) == 0)
      {
        v55 = 0;
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v46 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v45;

    }
    v47 = PBUnknownFieldAdd();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    v20 = (int *)MEMORY[0x1E0D82BD8];
    if (!v47)
    {
      v55 = 0;
      v56 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v58 & 1 | (v9 != 0)))
      goto LABEL_77;
  }
  if (!v31)
    goto LABEL_64;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_97;
    v49 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v36 = objc_alloc_init(GEOOriginalWaypointRoute);
  if (GEOOriginalWaypointRouteReadAllFrom((uint64_t)v36, (void *)v3, v6 & 1))
  {
    PBReaderRecallMark();
    v37 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v36;
    goto LABEL_57;
  }

LABEL_97:
  v55 = 0;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
  v56 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
  if ((v57 & 1) == 0)
    goto LABEL_80;
LABEL_79:
  *(_BYTE *)(a1 + v56[130]) |= 2u;
LABEL_80:
  if (v60 & 1 | ((v55 & 1) == 0))
  {
    *(_BYTE *)(a1 + v56[130]) |= 4u;
    *(_BYTE *)(a1 + v56[130]) |= 8u;
    goto LABEL_90;
  }
  if (v16)
  {
    while (2)
    {
      while (1)
      {
        v51 = *v16++;
        v50 = v51;
        if (v51 == 1)
          break;
        if (v50 == 2)
        {
          v52 = 8;
          goto LABEL_89;
        }
        if (!v50)
          goto LABEL_90;
      }
      v52 = 4;
LABEL_89:
      *(_BYTE *)(a1 + v56[130]) |= v52;
      continue;
    }
  }
LABEL_90:
  if (v55)
    v3 = *(_BYTE *)(v3 + *v18) == 0;
  else
    v3 = 0;
  if ((v60 & 1) != 0)
  {
    v53 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188F6B5C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6BC68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageResumeRouteHandleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOStorageResumeRouteHandleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOStorageResumeRouteHandleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOStorageResumeRouteHandleReadAllFrom_initialTag;
  Specified = GEOStorageResumeRouteHandleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188F6BE0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageResumeRouteHandleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStorageResumeRouteHandleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F6BE6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageResumeRouteHandleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_38;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
        goto LABEL_37;
      }
      if ((_DWORD)v16 == 2)
        break;
      if ((_DWORD)v16 != 1)
        goto LABEL_34;
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOOriginalWaypointRouteIsValid(a1))
      {
LABEL_40:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v14 != 2)
      goto LABEL_40;
LABEL_34:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_38:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188F6C274(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageResumeRouteHandleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_188F6C5A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6C880(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6CAF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageRouteRequestStorageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOComposedWaypoint *v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char v52;
  __int16 v53;
  int v54;
  __int16 v55;
  void *v56;
  int v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(unsigned __int16 *)(a1 + 104);
  v12 = ((v11 >> 1) & 1)
      + ((v11 >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFF9FFFEFFF7FFFALL), (int8x8_t)0x1000100010001))+ ((v11 >> 8) & 1)+ ((v11 >> 3) & 1)+ ((v11 >> 5) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 5;
        v17 = v16 & ~(_BYTE)v10 | v8;
        v18 = v16 | v10;
        v59 = v17;
        v60 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v61 = (v19 == 0) | v18;
        v62 = v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v23 = (int *)MEMORY[0x1E0D82BD8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v8;
LABEL_8:
        v14 = v9;
        v15 = v10;
LABEL_10:
        ++v6;
        v8 = v13;
        v9 = v14;
        v10 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + *v21))
      goto LABEL_116;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(v3 + *v23))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v28);
      *(_QWORD *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v30 = v25++ >= 9;
      if (v30)
      {
        v26 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_116:
      v58 = 1;
      goto LABEL_117;
    }
    v33 = v26 >> 3;
    v34 = v62;
    if ((v61 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x200) != 0)
          goto LABEL_93;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v39 = objc_alloc_init(GEOComposedWaypoint);
        if (!GEOComposedWaypointReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_137;
        PBReaderRecallMark();
        -[GEOStorageRouteRequestStorage _addNoFlagsWaypoints:](a1, v39);

        goto LABEL_114;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_93;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          v46 = *v20;
          v47 = *(_QWORD *)(v3 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v47);
            *(_QWORD *)(v3 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v30 = v44++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v45) = 0;
LABEL_98:
        *(_DWORD *)(a1 + 100) = v45;
        goto LABEL_115;
      case 3:
        if (!v34)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v53 = *(_WORD *)(a1 + 104) << 9;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v39 = objc_alloc_init(GEOURLRouteHandle);
        if (!GEOURLRouteHandleReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_137;
        PBReaderRecallMark();
        v49 = 56;
        goto LABEL_88;
      case 4:
        if (!v34)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 104) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v53 = *(_WORD *)(a1 + 104) << 13;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v39 = objc_alloc_init(GEOAutomobileOptions);
        if (!GEOAutomobileOptionsReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_137;
        PBReaderRecallMark();
        v49 = 24;
        goto LABEL_88;
      case 5:
        if (!v34)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v53 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v39 = objc_alloc_init(GEOTransitOptions);
        if (!GEOTransitOptionsReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_137;
        PBReaderRecallMark();
        v49 = 64;
        goto LABEL_88;
      case 6:
        if (!v34)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v53 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v39 = objc_alloc_init(GEOWalkingOptions);
        if (!GEOWalkingOptionsReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_137;
        PBReaderRecallMark();
        v49 = 72;
        goto LABEL_88;
      case 7:
        if (!v34)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 104) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v53 = *(_WORD *)(a1 + 104) << 12;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v39 = objc_alloc_init(GEOCyclingOptions);
        if (!GEOCyclingOptionsReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
          goto LABEL_137;
        PBReaderRecallMark();
        v49 = 32;
        goto LABEL_88;
      case 8:
        if (!v34)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 104) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          v53 = *(_WORD *)(a1 + 104) << 10;
LABEL_113:
          v6 += v53 >> 15;
LABEL_114:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_115:
          if (!(v60 & 1 | (v6 != 0)))
            goto LABEL_116;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_138;
        v39 = objc_alloc_init(GEOStorageResumeRouteHandle);
        if (GEOStorageResumeRouteHandleReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v49 = 48;
LABEL_88:
          v50 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v39;
LABEL_89:

          --v6;
          goto LABEL_114;
        }
LABEL_137:

LABEL_138:
        v58 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_117:
        if ((v59 & 1) != 0)
LABEL_118:
          *(_WORD *)(a1 + 104) |= 2u;
        if (v62 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x40u;
          *(_WORD *)(a1 + 104) |= 4u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            v54 = *v19++;
            v55 = 512;
            switch(v54)
            {
              case 0:
                goto LABEL_131;
              case 1:
                goto LABEL_130;
              case 3:
                v55 = 64;
                goto LABEL_130;
              case 4:
                v55 = 4;
                goto LABEL_130;
              case 5:
                v55 = 128;
                goto LABEL_130;
              case 6:
                v55 = 256;
                goto LABEL_130;
              case 7:
                v55 = 8;
                goto LABEL_130;
              case 8:
                v55 = 32;
                goto LABEL_130;
              case 9:
                v55 = 16;
LABEL_130:
                *(_WORD *)(a1 + 104) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_131:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v62)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 9:
        if (!v34)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 104) & 0x10) == 0)
        {
          PBReaderReadData();
          v51 = objc_claimAutoreleasedReturnValue();
          v50 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v51;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_138;
        v53 = *(_WORD *)(a1 + 104) << 11;
        goto LABEL_113;
      default:
        if ((v59 & 1) == 0 || (*(_WORD *)(a1 + 104) & 2) != 0)
        {
LABEL_93:
          v52 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
            goto LABEL_117;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v42)
          {
            v58 = 0;
            goto LABEL_118;
          }
        }
        goto LABEL_115;
    }
  }
}

void sub_188F6DA2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6DB70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6DCB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6DDF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6DF38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6E07C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6E1C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F6EF48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStorageRouteRequestStorageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[10];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOStorageRouteRequestStorageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOStorageRouteRequestStorageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOStorageRouteRequestStorageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOStorageRouteRequestStorageReadAllFrom_initialTag;
  Specified = GEOStorageRouteRequestStorageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOStorageRouteRequestStorageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188F6F240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageRouteRequestStorageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStorageRouteRequestStorageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F6F2A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageRouteRequestStorageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOComposedWaypointIsValid(a1))
            goto LABEL_54;
          goto LABEL_61;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v16 = 0;
          break;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLRouteHandleIsValid(a1))
            goto LABEL_61;
          goto LABEL_54;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1))
            goto LABEL_61;
          goto LABEL_54;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1))
            goto LABEL_61;
          goto LABEL_54;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1))
            goto LABEL_61;
          goto LABEL_54;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOCyclingOptionsIsValid(a1))
            goto LABEL_61;
          goto LABEL_54;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOStorageResumeRouteHandleIsValid(a1))
            goto LABEL_61;
LABEL_54:
          PBReaderRecallMark();
          continue;
        case 9u:
          if (v14 == 2)
            goto LABEL_56;
          goto LABEL_61;
        default:
LABEL_56:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v17 = *v2;
        v18 = *(_QWORD *)&a1[v17];
        if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
          break;
        v19 = v18 + 1;
        v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
        *(_QWORD *)&a1[v17] = v19;
        if (v20 < 0 && v16++ <= 8)
          continue;
        goto LABEL_59;
      }
      a1[*v4] = 1;
LABEL_59:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188F6F90C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStorageRouteRequestStorageIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x600) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if (GEOURLRouteHandleIsDirty(*(_QWORD *)(a1 + 56)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEOAutomobileOptionsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOTransitOptionsIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOWalkingOptionsIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOCyclingOptionsIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x20) == 0)
    goto LABEL_22;
  if (GEOStorageResumeRouteHandleIsDirty(*(_QWORD *)(a1 + 48)))
    return 1;
  v2 = *(_WORD *)(a1 + 104);
LABEL_22:
  if ((v2 & 0x10) != 0)
    return 1;
  if ((v2 & 0x200) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 80);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_35;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_35:

  return v3;
}

os_unfair_lock_s *GEOStorageRouteRequestStorageIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOStorageRouteRequestStorageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOStorageRouteRequestStorageClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;

  -[GEOStorageRouteRequestStorage _readWaypoints](a1);
  result = objc_msgSend(*(id *)(a1 + 80), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 80), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOComposedWaypointHasSensitiveFields(v8, a2))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        GEOComposedWaypointClearSensitiveFields(v10, a2, 0);
        objc_msgSend(*(id *)(a1 + 80), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 80), "count");
    }
  }
  return result;
}

uint64_t GEOStorageRouteRequestStorageHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  objc_msgSend(a1, "waypoints", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        if ((GEOComposedWaypointHasSensitiveFields(*(void **)(*((_QWORD *)&v10 + 1) + 8 * v7), a2) & 1) != 0)
        {
          v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v5)
        continue;
      break;
    }
  }
  v8 = 0;
LABEL_12:

  return v8;
}

void sub_188F703D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F70988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F70D54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBrandInfoMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char v15;
  int *v16;
  GEOScopedBrandInfo *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  int *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  int v59;
  char v60;
  void *v61;
  int v63;
  char v64;
  char v65;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        LODWORD(v17) = v10 | v14;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_91;
        v64 = (v7 != 0) | v15;
        v65 = (v16 == 0) | v15;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_91;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    v29 = v23 & 7;
    if (v28 || v29 == 4)
    {
LABEL_91:
      if ((v17 & 1) != 0)
      {
        v58 = 1;
        goto LABEL_93;
      }
      if (v16)
      {
        while (1)
        {
          v59 = *v16++;
          v60 = 8;
          switch(v59)
          {
            case 0:
              goto LABEL_101;
            case 2:
              goto LABEL_100;
            case 3:
              v60 = 4;
              goto LABEL_100;
            case 4:
              v60 = 2;
LABEL_100:
              *(_BYTE *)(a1 + 76) |= v60;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    v31 = v23 >> 3;
    v32 = (char)v17;
    if ((v65 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0)
            goto LABEL_75;
          v37 += 7;
          v27 = v38++ >= 9;
          if (v27)
          {
            v39 = 0;
            goto LABEL_77;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_75:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_77:
        *(_QWORD *)(a1 + 40) = v39;
        goto LABEL_89;
      case 2:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 8) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v63 = (int)v17;
        v17 = objc_alloc_init(GEOScopedBrandInfo);
        if (GEOScopedBrandInfoReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOBrandInfoMapping _addNoFlagsScopedBrandInfo:](a1, v17);
LABEL_56:

          LODWORD(v17) = v63;
LABEL_88:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_89:
          if ((v64 & 1) == 0 || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_91;
          continue;
        }

        v58 = 0;
        LOBYTE(v17) = v63;
LABEL_107:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
        *(_BYTE *)(a1 + 76) |= 8u;
        *(_BYTE *)(a1 + 76) |= 4u;
        *(_BYTE *)(a1 + 76) |= 2u;
        if ((v58 & 1) != 0)
        {
LABEL_101:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v17 & 1) != 0)
            goto LABEL_102;
          return v3;
        }
        v3 = 0;
        if ((v17 & 1) == 0)
          return v3;
LABEL_102:
        v61 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 4) != 0)
          goto LABEL_72;
        v63 = (int)v17;
        PBReaderReadString();
        v17 = (GEOScopedBrandInfo *)objc_claimAutoreleasedReturnValue();
        if (v17)
          -[GEOBrandInfoMapping _addNoFlagsIsoCountryCode:](a1, v17);
        goto LABEL_56;
      case 4:
        if (v32 && (*(_BYTE *)(a1 + 76) & 2) == 0)
        {
          if (v29 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_105:
              v58 = 0;
              goto LABEL_107;
            }
            while (1)
            {
              v44 = (int *)MEMORY[0x1E0D82BC8];
              if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
                break;
              v45 = 0;
              v46 = 0;
              v47 = 0;
              while (1)
              {
                v48 = *v18;
                v49 = *(_QWORD *)(v3 + v48);
                if (v49 == -1 || v49 >= *(_QWORD *)(v3 + *v6))
                  break;
                v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
                *(_QWORD *)(v3 + v48) = v49 + 1;
                v47 |= (unint64_t)(v50 & 0x7F) << v45;
                if (v50 < 0)
                {
                  v45 += 7;
                  v27 = v46++ >= 9;
                  if (!v27)
                    continue;
                }
                goto LABEL_71;
              }
              *(_BYTE *)(v3 + *v44) = 1;
LABEL_71:
              PBRepeatedBOOLAdd();
            }
            PBReaderRecallMark();
          }
          else
          {
            v52 = 0;
            v53 = 0;
            v54 = 0;
            while (1)
            {
              v55 = *v18;
              v56 = *(_QWORD *)(v3 + v55);
              if (v56 == -1 || v56 >= *(_QWORD *)(v3 + *v6))
                break;
              v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v56);
              *(_QWORD *)(v3 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                v27 = v53++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_87;
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_87:
            PBRepeatedBOOLAdd();
          }
          goto LABEL_88;
        }
LABEL_72:
        v51 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if ((v51 & 1) == 0)
        {
LABEL_104:
          v58 = 0;
          goto LABEL_93;
        }
        goto LABEL_89;
      default:
        v43 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_104;
        goto LABEL_89;
    }
  }
}

void sub_188F71764(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F71A98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F72550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOBrandInfoMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 56);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOBrandInfoMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOBrandInfoMappingReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOBrandInfoMappingReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOBrandInfoMappingReadAllFrom_initialTag;
  Specified = GEOBrandInfoMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOBrandInfoMappingCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188F727DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBrandInfoMappingReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOBrandInfoMappingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F7283C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBrandInfoMappingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0 && v16++ <= 8)
              continue;
            goto LABEL_42;
          }
        case 2u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOScopedBrandInfoIsValid(a1))
            goto LABEL_30;
          goto LABEL_56;
        case 3u:
          if (v14 == 2)
            goto LABEL_32;
          goto LABEL_56;
        case 4u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_56:
              PBReaderRecallMark();
              return 0;
            }
LABEL_45:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v27 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v28 = *v2;
                v29 = *(_QWORD *)&a1[v28];
                if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
                  break;
                v30 = v29 + 1;
                v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
                *(_QWORD *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  v12 = v27++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_45;
              }
              a1[*v4] = 1;
            }
LABEL_30:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_56;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
                break;
              v24 = v23 + 1;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0)
              {
                v26 = v14++;
                if (v26 <= 8)
                  continue;
              }
              goto LABEL_42;
            }
LABEL_41:
            a1[*v4] = 1;
          }
LABEL_42:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_54;
          break;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_56;
          goto LABEL_42;
      }
    }
  }
LABEL_54:
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOScopedBrandInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188F730A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBrandInfoMappingIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188F735E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargingNetworkInfoReadAllFrom(void *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  GEOBrandInfoMapping *v19;
  _BOOL8 v20;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v19 = objc_alloc_init(GEOBrandInfoMapping);
          if (!GEOBrandInfoMappingReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addBrandInfoMapping:", v19, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_188F740E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargingNetworkInfoReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOChargingNetworkInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F74140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargingNetworkInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOBrandInfoMappingIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188F74950(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOScopedBrandInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOLocalizedString *v38;
  char v39;
  char v40;
  int v41;
  int v42;
  void *v43;
  BOOL v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v45 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_58;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        v40 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v42 = *v16++;
            v41 = v42;
            if (v42 != 1 && v41 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_69;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v45)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (!v31)
        goto LABEL_50;
      if ((*(_BYTE *)(a1 + 44) & 1) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_67:
          v40 = 0;
          goto LABEL_68;
        }
        v9 -= *(_BYTE *)(a1 + 44) & 1;
      }
      else
      {
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v36;

        --v9;
      }
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_67;
    }
LABEL_51:
    if (v9)
      v39 = 1;
    else
      v39 = v15;
    if ((v39 & 1) == 0)
      goto LABEL_58;
  }
  if (!v31 || (*(_BYTE *)(a1 + 44) & 2) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_67;
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_67;
  v38 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOScopedBrandInfo _addNoFlagsLocalizedName:](a1, v38);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_51;
  }

  v40 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v40 & 1) != 0)
  {
LABEL_69:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_70;
  }
  v3 = 0;
  if (v15)
  {
LABEL_70:
    v43 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188F74EB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F756B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOScopedBrandInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOScopedBrandInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOScopedBrandInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOScopedBrandInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOScopedBrandInfoReadAllFrom_initialTag;
  Specified = GEOScopedBrandInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOScopedBrandInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188F75940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOScopedBrandInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOScopedBrandInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F759A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F75BC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOScopedBrandInfoIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOScopedBrandInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOScopedBrandInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188F76084(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

long double GEOCoordinateForTilePoint(double a1, double a2, double a3)
{
  double v3;
  long double v4;
  long double v5;

  v3 = a2 * 0.0078125;
  v4 = exp2((double)(int)a3 + 1.0);
  v5 = exp((v3 + v4 * -0.5) / (v4 / 6.28318531));
  return (atan(v5) * -2.0 + 1.57079633) * 57.2957795;
}

double GEODistanceBetweenPointAndLine(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6;
  double v7;
  double v8;
  double v9;

  v6 = a1 - a3;
  v7 = a2 - a4;
  v8 = a5 - a3;
  v9 = a6 - a4;
  if (v8 == 0.0 && v9 == 0.0)
    return sqrt(v7 * v7 + v6 * v6);
  else
    return fabs(v6 * v9 - v8 * v7) / sqrt(v9 * v9 + v8 * v8);
}

double GEOClosestCoordinateOnLineSegmentFromCoordinate3D(double result, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v15;
  double v16;
  double v17;

  v15 = a4 - result;
  v16 = a5 - a2;
  if (a4 - result != 0.0 || v16 != 0.0)
  {
    v17 = (v16 * (a10 - a2) + (a9 - result) * v15) / (v16 * v16 + v15 * v15);
    if (v17 >= 0.0)
    {
      if (v17 <= 1.0)
        return result + v17 * v15;
      else
        return a4;
    }
  }
  return result;
}

double GEOClosestCoordinateOnLineSegmentFromCoordinate(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return GEOClosestCoordinateOnLineSegmentFromCoordinate3D(a1, a2, 1.79769313e308, a3, a4, 1.79769313e308, a4, a8, a5, a6);
}

long double GEOBearingFromCoordinateToCoordinate(double a1, double a2, double a3, double a4)
{
  double v4;
  double v5;
  double v6;
  __double2 v7;
  __double2 v8;
  __double2 v9;
  long double v10;

  v4 = a2 * 0.0174532925;
  v5 = a3 * 0.0174532925;
  v6 = a4 * 0.0174532925;
  v7 = __sincos_stret(a1 * 0.0174532925);
  v8 = __sincos_stret(v5);
  v9 = __sincos_stret(v6 - v4);
  v10 = atan2(v8.__cosval * v9.__sinval, -(v7.__sinval * v8.__cosval) * v9.__cosval + v7.__cosval * v8.__sinval);
  return fmod(v10, 6.28318531) * 57.2957795;
}

long double GEOCoordinate2DAlongBearing(double a1, double a2, double a3, double a4)
{
  double v7;
  double v8;
  double v9;
  double v10;
  long double v11;
  double sinval;
  long double v13;

  GEOTilePointForCoordinate(a1, a2, 20.0);
  v8 = v7;
  v9 = a3 + 360.0;
  if (a3 >= 0.0)
    v9 = a3;
  v10 = v9 * -0.0174532925 + 1.57079633;
  v11 = GEOMapPointsPerMeterAtLatitude(a1) * a4;
  sinval = __sincos_stret(v10).__sinval;
  v13 = exp(((v8 - v11 * sinval) * 0.0078125 + -1048576.0) / 333772.107);
  return (atan(v13) * -2.0 + 1.57079633) * 57.2957795;
}

void GEOCoordinatesForRegion(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v15;
  long double v16;
  long double v17;
  double v18;

  GEOMapRectForCoordinateRegion(a3, a4, a5, a6);
  v12 = v8;
  v13 = fabs(v9);
  if (fabs(v8) == INFINITY || v13 == INFINITY)
  {
    *(_OWORD *)a1 = kGEOLocationCoordinate2DInvalid_0;
    *(_OWORD *)a2 = kGEOLocationCoordinate2DInvalid_0;
  }
  else
  {
    v18 = v8 + v10;
    v15 = v9 + v11;
    v16 = exp((v9 * 0.0078125 + -1048576.0) / 333772.107);
    *(long double *)a1 = (atan(v16) * -2.0 + 1.57079633) * 57.2957795;
    *(double *)(a1 + 8) = v12 * 0.0078125 * 0.000171661377 + -180.0;
    v17 = exp((v15 * 0.0078125 + -1048576.0) / 333772.107);
    *(long double *)a2 = (atan(v17) * -2.0 + 1.57079633) * 57.2957795;
    *(double *)(a2 + 8) = v18 * 0.0078125 * 0.000171661377 + -180.0;
  }
}

uint64_t GEOMapRectIsNull(double a1, double a2)
{
  _BOOL4 v2;

  v2 = fabs(a1) == INFINITY;
  return fabs(a2) == INFINITY || v2;
}

double GEOLocationCoordinate3DLerp(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  return a1 + (a4 - a1) * a7;
}

void GEOMapPoint3DForCoordinate(double a1, double a2)
{
  GEOTilePointForCoordinate(a1, a2, 20.0);
}

long double GEOCoordinate3DForMapPoint(double a1, double a2)
{
  long double v2;

  v2 = exp((a2 * 0.0078125 + -1048576.0) / 333772.107);
  return (atan(v2) * -2.0 + 1.57079633) * 57.2957795;
}

long double GEOZoomScaleForZoomLevelF(double a1)
{
  return 1.0 / exp2(20.0 - a1);
}

long double GEOMetersPerDegreeAtLatitude(double a1)
{
  long double v2;
  long double v3;

  v2 = cos(a1 + a1) * -559.82 + 111132.92;
  v3 = v2 + cos(a1 * 4.0) * 1.175;
  return v3 + cos(a1 * 6.0) * -0.0023;
}

long double GEOMetersPerMapPointAtLatitude(double a1)
{
  return 1.0 / GEOMapPointsPerMeterAtLatitude(a1);
}

long double GEOMetersBetweenMapPoints(double a1, double a2, double a3, double a4)
{
  long double v5;
  double v6;
  long double v7;
  double v8;
  double v9;

  v5 = exp((a2 * 0.0078125 + -1048576.0) / 333772.107);
  v6 = (atan(v5) * -2.0 + 1.57079633) * 57.2957795;
  v7 = exp((a4 * 0.0078125 + -1048576.0) / 333772.107);
  v8 = (atan(v7) * -2.0 + 1.57079633) * 57.2957795;
  v9 = sin(v6 * 0.0174532925) * -21000.0 + 6378160.0;
  return GEOCalculateDistanceRadius(v6, a1 * 0.0078125 * 0.000171661377 + -180.0, v8, a3 * 0.0078125 * 0.000171661377 + -180.0, v9);
}

uint64_t GEOStringFromMapRectBounds(double a1, double a2, double a3, double a4)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%.1f, %.1f\n%.1f, %.1f\n%.1f, %.1f\n%.1f, %.1f"), *(_QWORD *)&a1, *(_QWORD *)&a2, *(_QWORD *)&a1, a2 + a4, a1 + a3, a2 + a4, a1 + a3, *(_QWORD *)&a2);
}

uint64_t GEOStringFromCoordinateRegionBounds(double a1, double a2, double a3, double a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  v5 = 0;
  v6 = 0;
  GEOCoordinatesForRegion((uint64_t)&v7, (uint64_t)&v5, a1, a2, a3, a4);
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%0.6f, %0.6f\n%0.6f, %0.6f\n%0.6f, %0.6f\n%0.6f, %0.6f"), v7, v8, v5, v8, v5, v6, v7, v6);
}

uint64_t GEOMapBoxUnion@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float64x2_t v3;
  double v4;
  float64x2_t v5;
  int32x2_t v6;
  float64x2_t v7;
  double v8;
  float64x2_t v9;
  int32x2_t v10;
  int8x16_t v11;
  double v12;
  double v13;
  double v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v3 = *(float64x2_t *)result;
  if (fabs(*(double *)result) == INFINITY
    || (v4 = *(double *)(result + 16),
        v5.f64[1] = *(float64_t *)(result + 8),
        v5.f64[0] = v4,
        v6 = vmovn_s64(vceqq_f64(vabsq_f64(v5), (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL))),
        (v6.i8[4] & 1) != 0)
    || (v6.i8[0] & 1) != 0)
  {
    v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a2;
    *(_OWORD *)(a3 + 16) = v18;
    v19 = *(_OWORD *)(a2 + 32);
LABEL_15:
    *(_OWORD *)(a3 + 32) = v19;
    return result;
  }
  v7 = *(float64x2_t *)a2;
  if (fabs(*(double *)a2) == INFINITY
    || (v8 = *(double *)(a2 + 16),
        v9.f64[1] = *(float64_t *)(a2 + 8),
        v9.f64[0] = v8,
        v10 = vmovn_s64(vceqq_f64(vabsq_f64(v9), (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL))),
        (v10.i8[4] & 1) != 0)
    || (v10.i8[0] & 1) != 0)
  {
    v20 = *(_OWORD *)(result + 16);
    *(_OWORD *)a3 = *(_OWORD *)result;
    *(_OWORD *)(a3 + 16) = v20;
    v19 = *(_OWORD *)(result + 32);
    goto LABEL_15;
  }
  v11 = (int8x16_t)vcgtq_f64(v7, v3);
  if (v4 >= v8)
    v12 = *(double *)(a2 + 16);
  else
    v12 = *(double *)(result + 16);
  v13 = v4 + *(double *)(result + 40);
  v14 = v8 + *(double *)(a2 + 40);
  if (v13 <= v14)
    v13 = v14;
  *(double *)(a3 + 16) = v12;
  v15 = (float64x2_t)vbslq_s8(v11, (int8x16_t)v3, (int8x16_t)v7);
  v16 = vaddq_f64(v3, *(float64x2_t *)(result + 24));
  v17 = vaddq_f64(v7, *(float64x2_t *)(a2 + 24));
  *(float64x2_t *)a3 = v15;
  *(float64x2_t *)(a3 + 24) = vsubq_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v16, v17), (int8x16_t)v16, (int8x16_t)v17), v15);
  *(double *)(a3 + 40) = v13 - v12;
  return result;
}

BOOL GEOMapBoxIsNull(double *a1)
{
  return fabs(*a1) == INFINITY || fabs(a1[1]) == INFINITY || fabs(a1[2]) == INFINITY;
}

double GEOMapRectIntersection(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v9;
  double v10;
  double result;
  double v13;
  double v15;
  double v16;
  double v17;
  double v18;

  v9 = fabs(a1);
  v10 = fabs(a2);
  result = INFINITY;
  if (v9 != INFINITY && v10 != INFINITY)
  {
    v13 = fabs(a6);
    result = INFINITY;
    if (fabs(a5) != INFINITY && v13 != INFINITY)
    {
      result = a1 <= a5 ? a5 : a1;
      v15 = a5 + a7;
      v16 = a1 + a3 >= v15 ? v15 : a1 + a3;
      if (result > v16)
        return INFINITY;
      v17 = a2 <= a6 ? a6 : a2;
      v18 = a2 + a4;
      if (v18 >= a6 + a8)
        v18 = a6 + a8;
      if (v17 > v18)
        return INFINITY;
    }
  }
  return result;
}

double GEOMapRectOffset(double a1, double a2, double a3, double a4, double a5)
{
  _BOOL4 v5;

  v5 = fabs(a1) == INFINITY;
  if (fabs(a2) == INFINITY)
    v5 = 1;
  if (v5)
    a5 = -0.0;
  return a1 + a5;
}

double GEOMapRectDivide(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double result;
  __int128 v11;
  double v12;
  double v13;
  double v14;

  v8 = fabs(a5);
  if (fabs(a4) == INFINITY || v8 == INFINITY)
  {
    result = *(double *)&GEOMapRectNull;
    *(_OWORD *)a1 = GEOMapRectNull;
    *(_OWORD *)(a1 + 16) = unk_189CD23C0;
    *(_OWORD *)a2 = GEOMapRectNull;
    *(_OWORD *)(a2 + 16) = unk_189CD23C0;
  }
  else
  {
    *(double *)a2 = a4;
    *(double *)(a2 + 8) = a5;
    *(double *)(a2 + 16) = a6;
    *(double *)(a2 + 24) = a7;
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = 0.0;
    if (a8 >= 0.0)
      v12 = a8;
    if ((a3 | 2) == 2)
    {
      if (v12 > a6)
        v12 = a6;
      *(double *)(a1 + 16) = v12;
      v13 = *(double *)(a2 + 16) - v12;
      *(double *)(a2 + 16) = v13;
      if (a3)
      {
        result = v13 + *(double *)a1;
        *(double *)a1 = result;
      }
      else
      {
        result = v12 + *(double *)a2;
        *(double *)a2 = result;
      }
    }
    else
    {
      if (v12 > a7)
        v12 = a7;
      *(double *)(a1 + 24) = v12;
      v14 = *(double *)(a2 + 24) - v12;
      *(double *)(a2 + 24) = v14;
      if (a3 == 1)
      {
        result = v12 + *(double *)(a2 + 8);
        *(double *)(a2 + 8) = result;
      }
      else
      {
        result = v14 + *(double *)(a1 + 8);
        *(double *)(a1 + 8) = result;
      }
    }
  }
  return result;
}

BOOL GEOMapRectContainsPoint(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6;
  double v7;

  v6 = fabs(a2);
  v7 = a1 + a3;
  return fabs(a1) != INFINITY && v6 != INFINITY && a5 >= a1 && a5 < v7 && a6 >= a2 && a6 < a2 + a4;
}

BOOL GEOMapRectContainsRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v11;

  v8 = fabs(a6);
  if (fabs(a5) == INFINITY || v8 == INFINITY)
    return 1;
  v11 = fabs(a2);
  if (fabs(a1) == INFINITY || v11 == INFINITY || a1 > a5)
    return 0;
  return a1 + a3 >= a5 + a7 && a2 <= a6 && a2 + a4 >= a6 + a8;
}

uint64_t GEOMapRectIntersectsRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v10;

  v8 = fabs(a2);
  if (fabs(a1) == INFINITY || v8 == INFINITY)
    return 0;
  v10 = fabs(a6);
  if (fabs(a5) == INFINITY || v10 == INFINITY)
    return 0;
  if (a1 >= a5)
  {
    if (a5 + a7 <= a1)
      return 0;
  }
  else if (a1 + a3 <= a5)
  {
    return 0;
  }
  if (a2 >= a6)
  {
    if (a6 + a8 <= a2)
      return 0;
  }
  else if (a2 + a4 <= a6)
  {
    return 0;
  }
  return 1;
}

BOOL GEOMapRectIntersectsSegment(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  double v10;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;

  if (a5 >= a7)
    v8 = a7;
  else
    v8 = a5;
  if (a5 <= a7)
    v9 = a7;
  else
    v9 = a5;
  if (a1 > v8)
    v8 = a1;
  v10 = a1 + a3;
  if (v10 >= v9)
    v10 = v9;
  if (v8 > v10)
    return 0;
  if (vabdd_f64(a7, a5) > 0.0000001)
  {
    v12 = (a8 - a6) / (a7 - a5);
    v13 = a6 - v12 * a5;
    a6 = v13 + v12 * v8;
    a8 = v13 + v12 * v10;
  }
  if (a6 <= a8)
    v14 = a6;
  else
    v14 = a8;
  if (a6 <= a8)
    v15 = a8;
  else
    v15 = a6;
  if (a2 > v14)
    v14 = a2;
  v16 = a2 + a4;
  if (v16 >= v15)
    v16 = v15;
  return v14 <= v16;
}

long double GEOCoordinateRegionForMapRect(double a1, double a2, double a3, double a4)
{
  long double v5;
  long double v6;
  long double v7;
  long double v9;
  double v10;

  v10 = a2 + a4;
  v5 = exp(((a2 + a4 * 0.5) * 0.0078125 + -1048576.0) / 333772.107);
  v9 = (atan(v5) * -2.0 + 1.57079633) * 57.2957795;
  v6 = exp((a2 * 0.0078125 + -1048576.0) / 333772.107);
  atan(v6);
  v7 = exp((v10 * 0.0078125 + -1048576.0) / 333772.107);
  atan(v7);
  return v9;
}

long double GEOMapRectMakeWithRadialDistance(double a1, double a2, double a3)
{
  double v5;

  v5 = GEOTilePointForCoordinate(a1, a2, 20.0);
  return v5 - GEOMapPointsPerMeterAtLatitude(a1) * a3;
}

double GEOMapBoxBoundingMapPoints@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float64x2_t v3;
  float64x2_t v4;
  double *v5;
  double v6;
  double v7;
  float64x2_t v8;
  float64x2_t v9;
  double result;

  v3 = (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL);
  v4 = (float64x2_t)vdupq_n_s64(0xFFF0000000000000);
  if (a2)
  {
    v5 = (double *)(a1 + 16);
    v6 = INFINITY;
    v7 = -INFINITY;
    do
    {
      if (*v5 < v6)
        v6 = *v5;
      v8 = *(float64x2_t *)(v5 - 2);
      v3 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v3, v8), (int8x16_t)v8, (int8x16_t)v3);
      v4 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v8, v4), (int8x16_t)v8, (int8x16_t)v4);
      if (*v5 > v7)
        v7 = *v5;
      v5 += 3;
      --a2;
    }
    while (a2);
  }
  else
  {
    v7 = -INFINITY;
    v6 = INFINITY;
  }
  v9 = vsubq_f64(v4, v3);
  *(float64x2_t *)a3 = v3;
  result = v7 - v6;
  *(double *)(a3 + 16) = v6;
  *(float64x2_t *)(a3 + 24) = v9;
  *(double *)(a3 + 40) = v7 - v6;
  return result;
}

double *GEOBoundingMapBoxAddPoint@<X0>(double *result@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  v6 = *result;
  v5 = result[1];
  v7 = result[2];
  v8 = fabs(v5);
  v9 = fabs(v7);
  if (fabs(*result) == INFINITY || v8 == INFINITY || v9 == INFINITY)
  {
    v12 = 0.0;
    v13 = 0.0;
    v14 = 0.0;
  }
  else
  {
    if (v6 >= a3)
      v15 = a3;
    else
      v15 = *result;
    if (v6 + result[3] > a3)
      a3 = v6 + result[3];
    if (v5 >= a4)
      v16 = a4;
    else
      v16 = result[1];
    v17 = v5 + result[4];
    if (v17 > a4)
      a4 = v17;
    if (v7 >= a5)
      v18 = a5;
    else
      v18 = result[2];
    v19 = v7 + result[5];
    if (v19 > a5)
      a5 = v19;
    v12 = a3 - v15;
    v13 = a4 - v16;
    v14 = a5 - v18;
    a3 = v15;
    a4 = v16;
    a5 = v18;
  }
  *a2 = a3;
  a2[1] = a4;
  a2[2] = a5;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  return result;
}

uint64_t GEOMapPointInPolygon(double *a1, unint64_t a2, double a3, double a4)
{
  char v4;
  unint64_t v5;
  double *i;
  unint64_t v7;
  double v8;
  double *v9;
  double *v10;
  double v11;
  BOOL v12;
  double *v13;
  double v14;
  double v15;
  double v17;

  if (a2 >= 3)
  {
    v5 = 0;
    v4 = 0;
    for (i = a1; ; i += 2)
    {
      if (v5)
        v7 = v5;
      else
        v7 = a2;
      v8 = i[1];
      v9 = &a1[2 * v7];
      v10 = v9 - 2;
      v11 = *(v9 - 1);
      v12 = v8 < v11;
      if (v8 >= v11)
        v13 = v9 - 2;
      else
        v13 = i;
      v14 = v13[1];
      if (!v12)
        v10 = i;
      v15 = v10[1];
      if (v14 <= a4 && a4 <= v15)
      {
        v17 = (*v13 - a3) * (v15 - v14) - (v14 - a4) * (*v10 - *v13);
        if (v17 == 0.0)
        {
          v4 = 1;
          return v4 & 1;
        }
        if (v17 > 0.0)
          v4 ^= 1u;
      }
      if (a2 == ++v5)
        return v4 & 1;
    }
  }
  v4 = 0;
  return v4 & 1;
}

BOOL GEOMapRectSpans180thMeridian(double a1, double a2, double a3)
{
  return a1 + a3 > 268435456.0 || a1 < 0.0;
}

double GEOMapRectRemainder(double a1, double a2, double a3)
{
  if (a1 < 0.0)
    return a1 + 268435456.0;
  if (a1 + a3 <= 268435456.0)
    return INFINITY;
  return 0.0;
}

BOOL GEOMapRectIsEmpty(double a1, double a2, double a3, double a4)
{
  double v4;

  v4 = fabs(a2);
  if (fabs(a1) == INFINITY || v4 == INFINITY)
    return 1;
  if (a4 == 0.0)
    return a3 == 0.0;
  return 0;
}

double GEOMapPointDistanceSquared(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t v2;

  v2 = vsubq_f64(*a2, *a1);
  return vaddvq_f64(vmulq_f64(v2, v2));
}

void GEOCoordinateAzimuth(double a1, double a2, double a3, double a4)
{
  long double v6;
  long double v7;
  long double v8;
  long double v9;
  double v10;

  v10 = a2 / 360.0 + 0.5;
  v6 = tan((1.57079633 - a1 * 0.0174532925) * 0.5);
  v7 = log(v6) / 6.28318531;
  v8 = tan((1.57079633 - a3 * 0.0174532925) * 0.5);
  v9 = log(v8);
  atan2(v7 + -0.5 + 0.5 - v9 / 6.28318531, a4 / 360.0 + 0.5 - v10);
}

double GEOCoordinateWithReducedPrecision(int a1, double a2)
{
  double v3;

  v3 = __exp10((double)-a1);
  return v3 * round(a2 / v3);
}

unint64_t GEOCoordinateHash(double a1, double a2)
{
  double v3;
  long double v4;
  double v5;
  double v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double v11;
  long double v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  unint64_t v17;

  v3 = -a1;
  if (a1 >= 0.0)
    v3 = a1;
  v4 = floor(v3 + 0.5);
  v5 = (v3 - v4) * 1.84467441e19;
  v6 = fmod(v4, 1.84467441e19);
  v7 = 2654435761u * (unint64_t)v6;
  v8 = v7 + (unint64_t)v5;
  if (v5 <= 0.0)
    v8 = 2654435761u * (unint64_t)v6;
  v9 = v7 - (unint64_t)fabs(v5);
  if (v5 < 0.0)
    v10 = v9;
  else
    v10 = v8;
  if (a2 >= 0.0)
    v11 = a2;
  else
    v11 = -a2;
  v12 = floor(v11 + 0.5);
  v13 = (v11 - v12) * 1.84467441e19;
  v14 = 2654435761u * (unint64_t)fmod(v12, 1.84467441e19);
  v15 = v14 + (unint64_t)v13;
  v16 = fabs(v13);
  if (v13 <= 0.0)
    v15 = v14;
  v17 = v14 - (unint64_t)v16;
  if (v13 >= 0.0)
    v17 = v15;
  return v17 ^ v10;
}

void GEOWrapAngleDegrees(long double a1)
{
  fmod(a1, 360.0);
}

void GEOAngleDifferenceDegrees(long double a1, long double a2)
{
  fmod(a1, 360.0);
  fmod(a2, 360.0);
}

double GEODistanceTraveledForLocationOnStep(uint64_t a1, unsigned int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  unsigned int v14;
  double v15;
  uint64_t v16;
  double *v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  double v27;
  double v28;
  double v29;

  if (a2 < 2)
  {
    v14 = 0;
    *(double *)&v19 = -180.0;
    *(double *)&v18 = -180.0;
  }
  else
  {
    v13 = 0;
    v14 = 0;
    v15 = 1.79769313e308;
    v16 = a2 - 1;
    v17 = (double *)(a1 + 16);
    *(double *)&v18 = -180.0;
    *(double *)&v19 = -180.0;
    do
    {
      v20 = GEOClosestCoordinateOnLineSegmentFromCoordinate3D(*(v17 - 2), *(v17 - 1), 1.79769313e308, *v17, v17[1], 1.79769313e308, a9, a10, a3, a4);
      v22 = v21;
      v23 = GEOCalculateDistanceRadius(a3, a4, v20, v21, 6367000.0);
      if (v23 < v15)
      {
        v15 = v23;
        *(double *)&v19 = v22;
        *(double *)&v18 = v20;
        v14 = v13;
      }
      ++v13;
      v17 += 2;
    }
    while (v16 != v13);
  }
  v24 = v14;
  if (v14 + 1 > 1)
    v25 = v14 + 1;
  else
    v25 = 1;
  v26 = (double *)(a1 + 16);
  v27 = 0.0;
  do
  {
    v28 = *(double *)&v18;
    v29 = *(double *)&v19;
    if (v24)
    {
      v28 = *v26;
      v29 = v26[1];
    }
    v27 = v27 + GEOCalculateDistanceRadius(*(v26 - 2), *(v26 - 1), v28, v29, 6367000.0);
    v26 += 2;
    --v24;
    --v25;
  }
  while (v25);
  return v27;
}

void GEODistancePercentageTraveledForLocationOnStep(uint64_t a1, unsigned int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v12;
  uint64_t v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  double v18;

  GEODistanceTraveledForLocationOnStep(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  v12 = 0.0;
  if (a2 >= 2)
  {
    v13 = a2 - 1;
    v14 = (double *)(a1 + 16);
    do
    {
      v15 = *(v14 - 2);
      v16 = *(v14 - 1);
      v17 = *v14;
      v18 = v14[1];
      v14 += 2;
      v12 = v12 + GEOCalculateDistanceRadius(v15, v16, v17, v18, 6367000.0);
      --v13;
    }
    while (v13);
  }
}

void sub_188F77DB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F7808C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188F784C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188F78B60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_188F790F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188F79384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188F794CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188F7981C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void ___ZL23GEOGetGEOPathMatcherLogv_block_invoke_1()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEOPathMatcher");
  v1 = (void *)_MergedGlobals_220;
  _MergedGlobals_220 = (uint64_t)v0;

}

os_log_t GEOGetRequestResponseLog(const char *a1)
{
  return GEOFindOrCreateLog("com.apple.Maps.RequestResponse", a1);
}

void _GEOStateCaptureLog(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  NSObject *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t v21[128];
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = v1;
  if (v1 && objc_msgSend(v1, "length"))
  {
    if ((unint64_t)objc_msgSend(v2, "length") > 0x7000)
    {
      v16 = v2;
      v4 = v2;
      v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      if ((unint64_t)objc_msgSend(v4, "length") >= 0x7000)
      {
        v6 = 0;
        v7 = 0;
        do
        {
          objc_msgSend(v4, "substringWithRange:", v6, 28672);
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "addObject:", v8);
          v6 += 28672;

          ++v7;
        }
        while (v7 < (((unint64_t)objc_msgSend(v4, "length") >> 12) * (unsigned __int128)0x2492492492492493uLL) >> 64);
      }
      else
      {
        v6 = 0;
      }
      objc_msgSend(v4, "substringFromIndex:", v6);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (v9)
        objc_msgSend(v5, "addObject:", v9);

      v19 = 0u;
      v20 = 0u;
      v17 = 0u;
      v18 = 0u;
      v3 = v5;
      v10 = -[NSObject countByEnumeratingWithState:objects:count:](v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v18;
        do
        {
          for (i = 0; i != v11; ++i)
          {
            if (*(_QWORD *)v18 != v12)
              objc_enumerationMutation(v3);
            v14 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
            GEOFindOrCreateLog("com.apple.Maps", "TileStateCapture");
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138543362;
              v23 = v14;
              _os_log_impl(&dword_1885A9000, v15, OS_LOG_TYPE_ERROR, "Tile State for Maps: %{public}@", buf, 0xCu);
            }

          }
          v11 = -[NSObject countByEnumeratingWithState:objects:count:](v3, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
        }
        while (v11);
      }

      v2 = v16;
    }
    else
    {
      GEOFindOrCreateLog("com.apple.Maps", "TileStateCapture");
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        v23 = v2;
        _os_log_impl(&dword_1885A9000, v3, OS_LOG_TYPE_ERROR, "Tile State for Maps: %{public}@", buf, 0xCu);
      }
    }

  }
}

id _GEORequestResponseLogQueue()
{
  if (qword_1ECDBBD68 != -1)
    dispatch_once(&qword_1ECDBBD68, &__block_literal_global_65);
  return (id)qword_1ECDBBD60;
}

id protobufDataWithHeader(void *a1, void *a2)
{
  Bytef *v3;
  id v4;
  void *v5;
  const Bytef *v6;
  uLong v7;
  void *v8;
  void *v9;
  Bytef *v10;
  char v11;
  void *v12;
  void *v13;
  char v15;
  char v16;
  uLongf destLen;

  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x18D764E2C]();
  LOBYTE(destLen) = 0;
  compress(v3, &destLen, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    v10 = v8;

    v11 = destLen | 1;
    v3 = v10;
  }
  else
  {
    v11 = 1;
  }

  objc_autoreleasePoolPop(v5);
  objc_msgSend(v4, "dataUsingEncoding:", 4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DF0], "dataWithCapacity:", -[Bytef length](v3, "length") + objc_msgSend(v12, "length") + 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = v11;
  objc_msgSend(v13, "appendBytes:length:", &v16, 1);
  objc_msgSend(v13, "appendData:", v12);
  v15 = 0;
  objc_msgSend(v13, "appendBytes:length:", &v15, 1);
  objc_msgSend(v13, "appendData:", v3);

  return v13;
}

id protobufDataParts(void *a1, void *a2)
{
  Bytef *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const Bytef *v10;
  uLong v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v26;
  char v27;
  unint64_t v28;
  char v29;
  _BYTE v30[2];
  char v31;
  unint64_t v32;
  uLongf destLen[5];
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = a1;
  v4 = a2;
  if (v4 && (v5 = -[Bytef length](v3, "length"), (unint64_t)(v5 - 143361) >= 0xFFFFFFFFFFFE4000))
  {
    v7 = v5;
    objc_msgSend(v4, "dataUsingEncoding:", 4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)MEMORY[0x18D764E2C]();
    LOBYTE(destLen[0]) = 0;
    compress(v3, destLen, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v12;
    v26 = v4;
    if (v12)
    {
      v14 = v12;

      v27 = LOBYTE(destLen[0]) | 2;
      v7 = objc_msgSend(v14, "length");
      v3 = (Bytef *)v14;
    }
    else
    {
      v27 = 2;
    }
    v28 = (((unint64_t)(v7 + 28671) >> 12) * (unsigned __int128)0x2492492492492493uLL) >> 64;

    objc_autoreleasePoolPop(v9);
    v32 = 0;
    v34 = 0;
    v35 = &v34;
    v36 = 0x2020000000;
    destLen[0] = MEMORY[0x1E0C809B0];
    destLen[1] = 3221225472;
    destLen[2] = (uLongf)__nextIdentifier_block_invoke;
    destLen[3] = (uLongf)&unk_1E1C03348;
    destLen[4] = (uLongf)&v34;
    if (nextIdentifier_onceToken != -1)
      dispatch_once(&nextIdentifier_onceToken, destLen);
    v15 = (unint64_t *)(v35 + 3);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 + 1, v15));
    _Block_object_dispose(&v34, 8);
    v32 = v16;
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)(v7 + 28671) >= 0x7000)
    {
      v17 = 0;
      v18 = 0;
      if (v28 <= 1)
        v19 = 1;
      else
        v19 = (((unint64_t)(v7 + 28671) >> 12) * (unsigned __int128)0x2492492492492493uLL) >> 64;
      v20 = 28672;
      do
      {
        v21 = -[Bytef length](v3, "length", v26);
        v22 = v20;
        if (v20 >= v21)
          v22 = -[Bytef length](v3, "length");
        -[Bytef subdataWithRange:](v3, "subdataWithRange:", v20 - 28672, v22 + v17);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99DF0], "dataWithCapacity:", objc_msgSend(v23, "length") + objc_msgSend(v8, "length") + 12);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v31 = v27;
        objc_msgSend(v24, "appendBytes:length:", &v31, 1);
        objc_msgSend(v24, "appendBytes:length:", &v32, 8);
        v30[0] = v18;
        v30[1] = v28;
        objc_msgSend(v24, "appendBytes:length:", v30, 2);
        objc_msgSend(v24, "appendData:", v8);
        v29 = 0;
        objc_msgSend(v24, "appendBytes:length:", &v29, 1);
        objc_msgSend(v24, "appendData:", v23);
        objc_msgSend(v6, "addObject:", v24);

        ++v18;
        v17 -= 28672;
        v20 += 28672;
      }
      while (v19 != v18);
    }

    v4 = v26;
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id rrPersister(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  char v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!+[GEOPlatform isRunningInGeod](GEOPlatform, "isRunningInGeod"))
    goto LABEL_32;
  _GEORequestResponseLogQueue();
  v2 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v2);

  if (qword_1ECDBBD88 != -1)
    dispatch_once(&qword_1ECDBBD88, &__block_literal_global_7_0);
  if (!_MergedGlobals_221)
  {
LABEL_32:
    v16 = 0;
    goto LABEL_31;
  }
  if (qword_1ECDBBD70)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "compare:", qword_1ECDBBD70);

    if (v4 == 1)
    {
      _MergedGlobals_221 = 0;
      GEOConfigSetBOOL(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1EDF4D208);
      _setValue(GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt, (uint64_t)off_1EDF4D248, 0, 0, 0);
    }
  }
  objc_msgSend(v1, "dataTask");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "requestCounterTicket");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "appId");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!_MergedGlobals_221)
    goto LABEL_27;
  if (objc_msgSend(v7, "length") && objc_msgSend((id)qword_1ECDBBD78, "count"))
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v8 = (id)qword_1ECDBBD78;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v22;
      while (2)
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v22 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
          if (objc_msgSend(v13, "hasSuffix:", CFSTR("*"), (_QWORD)v21))
          {
            objc_msgSend(v13, "substringToIndex:", objc_msgSend(v13, "length") - 1);
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = objc_msgSend(v7, "hasPrefix:", v14);

            if ((v15 & 1) != 0)
              goto LABEL_23;
          }
          else if ((objc_msgSend(v7, "isEqual:", v13) & 1) != 0)
          {
LABEL_23:

            goto LABEL_24;
          }
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
        if (v10)
          continue;
        break;
      }
    }

    v16 = 0;
    goto LABEL_30;
  }
LABEL_24:
  if (!_MergedGlobals_221)
  {
LABEL_27:
    v18 = 0;
    goto LABEL_28;
  }
  v17 = (void *)qword_1ECDBBD80;
  if (!qword_1ECDBBD80)
  {
    v18 = -[GEORequestResponsePersister initWritable:]([GEORequestResponsePersister alloc], "initWritable:", 1);
LABEL_28:
    v19 = (void *)qword_1ECDBBD80;
    qword_1ECDBBD80 = (uint64_t)v18;

    v17 = (void *)qword_1ECDBBD80;
  }
  v16 = v17;
LABEL_30:

LABEL_31:
  return v16;
}

void _GEORequestResponseLogError(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v4 = a2;
  v5 = a3;
  if (GEOConfigGetBOOL(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1EDF4D208))
  {
    _GEORequestResponseLogQueue();
    v6 = objc_claimAutoreleasedReturnValue();
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = ___GEORequestResponseLogError_block_invoke;
    v7[3] = &unk_1E1C00738;
    v8 = v5;
    v9 = v4;
    dispatch_async(v6, v7);

  }
}

id _GEOLogPBCodableData(void *a1)
{
  id v1;
  void *v2;
  objc_class *v3;
  void *v4;
  void *v5;

  v1 = a1;
  objc_msgSend(v1, "data");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = (objc_class *)objc_opt_class();
    NSStringFromClass(v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    protobufDataWithHeader(v2, v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void _block_invoke(uint64_t a1, int a2, void *a3)
{
  NSObject *v5;
  BOOL v6;
  int v7;
  int v9;
  void *v10;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  uint64_t v17;
  void *v18;

  _GEORequestResponseLogQueue();
  v5 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v5);

  if (a2)
    v6 = a3 == 0;
  else
    v6 = 1;
  v7 = !v6;
  if (v6)
  {
    _MergedGlobals_221 = GEOConfigGetBOOL(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1EDF4D208);
    v9 = GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt;
    v10 = off_1EDF4D248;
  }
  else
  {
    if (a2 == (_DWORD)GeoServicesConfig_MapsRequestResponseLoggingPersisted && a3 == off_1EDF4D208)
      _MergedGlobals_221 = GEOConfigGetBOOL(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1EDF4D208);
    v9 = GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt;
    v10 = off_1EDF4D248;
    if (a2 != (_DWORD)GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt || a3 != off_1EDF4D248)
      goto LABEL_21;
  }
  _getValue(v9, (uint64_t)v10, 1, 0, 0, 0);
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)qword_1ECDBBD70;
  qword_1ECDBBD70 = v12;

  if (!v7)
  {
    v14 = GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds;
    v15 = off_1EDF4D238;
LABEL_27:
    _getValue(v14, (uint64_t)v15, 1, 0, 0, 0);
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = (void *)qword_1ECDBBD78;
    qword_1ECDBBD78 = v17;

    return;
  }
LABEL_21:
  v14 = GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds;
  v15 = off_1EDF4D238;
  if (a2 == (_DWORD)GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds && a3 == off_1EDF4D238)
    goto LABEL_27;
}

void __rrPersister_block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[4];

  v9[3] = *MEMORY[0x1E0C80C00];
  _GEORequestResponseLogQueue();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1EDF4D208, v0, &__block_literal_global_6_0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v1;
  _GEORequestResponseLogQueue();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt, (uint64_t)off_1EDF4D248, v2, &__block_literal_global_6_0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[1] = v3;
  _GEORequestResponseLogQueue();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds, (uint64_t)off_1EDF4D238, v4, &__block_literal_global_6_0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[2] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 3);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)rrPersister_persisterListeners;
  rrPersister_persisterListeners = v6;

  _block_invoke(v8, GEOConfigKey_Invalid, *(void **)algn_1EDF51968);
}

int compress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
{
  Bytef *v5;
  id v6;
  unint64_t v7;
  size_t v8;
  compression_algorithm v9;
  id v10;
  uint8_t *v11;
  Bytef *v12;
  size_t v13;

  v5 = dest;
  if (qword_1ECDBBD90 != -1)
    dispatch_once(&qword_1ECDBBD90, &__block_literal_global_14);
  v6 = 0;
  if (destLen && byte_1ECDBBD59)
  {
    v6 = 0;
    HIDWORD(v7) = byte_1ECDBBD59;
    LODWORD(v7) = byte_1ECDBBD59 - 4;
    switch((v7 >> 2))
    {
      case 0u:
        v8 = (unint64_t)-[Bytef length](v5, "length") >> 1;
        v9 = COMPRESSION_LZFSE;
        goto LABEL_10;
      case 1u:
        v8 = 2 * -[Bytef length](v5, "length") / 3uLL;
        v9 = COMPRESSION_LZ4;
        goto LABEL_10;
      case 3u:
        v8 = (unint64_t)-[Bytef length](v5, "length") >> 1;
        v9 = COMPRESSION_ZLIB;
        goto LABEL_10;
      case 7u:
        v8 = (unint64_t)-[Bytef length](v5, "length") >> 1;
        v9 = COMPRESSION_LZMA;
LABEL_10:
        objc_msgSend(MEMORY[0x1E0C99DF0], "dataWithLength:", v8);
        v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v11 = (uint8_t *)objc_msgSend(v10, "mutableBytes");
        v12 = objc_retainAutorelease(v5);
        v13 = compression_encode_buffer(v11, v8, (const uint8_t *)-[Bytef bytes](v12, "bytes"), -[Bytef length](v12, "length"), 0, v9);
        if (v13)
        {
          *(_BYTE *)destLen = byte_1ECDBBD59;
          objc_msgSend(v10, "setLength:", v13);
          v6 = v10;
        }
        else
        {
          v6 = 0;
        }

        break;
      default:
        break;
    }
  }

  return (int)v6;
}

uint64_t __compress_block_invoke()
{
  uint64_t result;

  result = GEOConfigGetInteger(GeoServicesConfig_MapsRequestResponseLoggingCompression, (uint64_t)off_1EDF4D1F8);
  byte_1ECDBBD59 = result;
  return result;
}

uint64_t __nextIdentifier_block_invoke(uint64_t a1)
{
  uint64_t result;
  uint64_t bytes;

  bytes = 0;
  result = CCRandomGenerateBytes(&bytes, 8uLL);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = bytes;
  return result;
}

id GEOGetRRMetadataFileManagerLog()
{
  if (qword_1ECDBBDB0 != -1)
    dispatch_once(&qword_1ECDBBDB0, &__block_literal_global_42);
  return (id)qword_1ECDBBDA8;
}

void sub_188F7C210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOOfflineSuggestedStateAsString(unint64_t a1)
{
  if (a1 < 3)
    return *((id *)&off_1E1C090E8 + a1);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid(%d)"), a1);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_188F7D1A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35)
{
  void *v35;

  _Unwind_Resume(a1);
}

void sub_188F7D444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  v22 = v21;

  _Unwind_Resume(a1);
}

void _migrateState(NSDictionary *a1, NSString *a2, NSString *a3)
{
  void *v5;
  void *v6;
  NSString *v7;

  v7 = a3;
  -[NSDictionary objectForKeyedSubscript:](a1, "objectForKeyedSubscript:", a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", v7);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "unsignedIntValue");

}

void sub_188F7D4F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_188F7D5E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188F7D6C8(_Unwind_Exception *exception_object)
{
  int v1;
  void *v2;

  if (v1)

  _Unwind_Resume(exception_object);
}

void sub_188F7D710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188F7D8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_188F7D9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)GEOOfflineStateManager;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_188F7DA3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(&stru_1ECDBBDBC);
  _Unwind_Resume(a1);
}

void sub_188F7DB80(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_188F7DE60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F7E000(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v5;

  _Unwind_Resume(a1);
}

void sub_188F7E488(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_188F7E668(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F7E8BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t shouldCountRequest(unint64_t a1, int a2)
{
  uint64_t result;
  unint64_t v4;
  _BOOL4 v5;

  result = 0;
  if ((int)a1 > 767)
  {
    if ((_DWORD)a1 == 768 || (_DWORD)a1 == 1792)
    {
      v4 = HIDWORD(a1);
      if (((1 << v4) & 0x1004108000880A94) != 0)
        v5 = a2 == 1;
      else
        v5 = ((1 << v4) & 0x1402) != 0;
      return v4 <= 0x3C && v5;
    }
    else if ((_DWORD)a1 == 2860)
    {
      return 1;
    }
  }
  else
  {
    if ((a1 - 672) < 2)
      return a2 == 1;
    if ((_DWORD)a1 == 512)
      return 1;
  }
  return result;
}

void sub_188F7ECB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_188F7EE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188F7F074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_188F7F5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35)
{
  void *v35;
  void *v36;
  void *v37;
  id *v38;
  uint64_t v39;

  objc_destroyWeak(v38);
  _Block_object_dispose(&a30, 8);

  _Block_object_dispose((const void *)(v39 - 176), 8);
  objc_destroyWeak((id *)(v39 - 184));

  _Unwind_Resume(a1);
}

void sub_188F7F778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  id *v15;

  objc_destroyWeak(v15);
  _Unwind_Resume(a1);
}

void sub_188F7F86C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F7F918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_188F7FFF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);

  _Unwind_Resume(a1);
}

void sub_188F80348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  uint64_t v11;
  void *v13;
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  v13 = *(void **)(v11 + 48);
  if (v13)
  {
    *(_QWORD *)(v11 + 56) = v13;
    operator delete(v13);
  }

  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__88_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__89_0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_188F80710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_188F808AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_188F80928(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F809BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_188F80D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_188F80E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id `anonymous namespace'::Result::plistEncoded(_anonymous_namespace_::Result *this)
{
  void *v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  unint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v13[5];
  _QWORD v14[6];

  v14[5] = *MEMORY[0x1E0C80C00];
  v13[0] = CFSTR("age");
  v2 = (void *)MEMORY[0x1E0CB37E8];
  GEOGetMonotonicTime();
  objc_msgSend(v2, "numberWithDouble:", v3 - *(double *)this);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v4;
  v13[1] = CFSTR("timestamp");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)this);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v5;
  v13[2] = CFSTR("request");
  GEODataRequestKindAsString(*((_QWORD *)this + 1));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14[2] = v6;
  v13[3] = CFSTR("status");
  v7 = *((_QWORD *)this + 2);
  if (v7 > 6)
    v8 = "invalid";
  else
    v8 = off_1E1C09150[v7];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v14[3] = v9;
  v13[4] = CFSTR("interfaces");
  GEORequestCounterInterfaceTypesToStrings(*((_QWORD *)this + 3));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v14[4] = v10;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, v13, 5);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

void sub_188F80FAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_188F8182C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;

  _Unwind_Resume(a1);
}

void sub_188F81AA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

__n128 __copy_helper_block_ea8_32c51_ZTSKZ38__GEOOfflineStateManager__updateState_E3__0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)(a2 + 32);
  v3 = *(_OWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void sub_188F81ED4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id defaultCohortState(void)
{
  void *v0;
  void *v1;
  void *v2;
  _QWORD v4[3];
  _QWORD v5[4];

  v5[3] = *MEMORY[0x1E0C80C00];
  v4[0] = CFSTR("currentState");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", 257);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v0;
  v4[1] = CFSTR("savedState");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", 257);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v4[2] = CFSTR("suggestedState");
  v5[1] = v1;
  v5[2] = &unk_1E1E81190;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, v4, 3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_188F820EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188F8232C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_188F823DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F82510(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F8274C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F82A1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_188F82C20(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_188F83048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_188F83290(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_188F834A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOComposedWaypointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  __int16 v79;
  char v80;
  int v81;
  __int16 v82;
  void *v83;
  GEOWaypointTyped *v85;
  char v86;
  char v87;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFF7FFF8FFF5FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 108) >> 10) & 1)+ ((*(_WORD *)(a1 + 108) >> 5) & 1)+ ((*(_WORD *)(a1 + 108) >> 7) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 4;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v87 = (v16 == 0) | v15;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v86 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_152;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_152:
      if ((v15 & 1) != 0)
      {
        v80 = 1;
        goto LABEL_166;
      }
      if (v16)
      {
        while (1)
        {
          v81 = *v16++;
          v82 = 2048;
          switch(v81)
          {
            case 0:
              goto LABEL_167;
            case 1:
              goto LABEL_162;
            case 2:
              v82 = 256;
              goto LABEL_162;
            case 3:
              v82 = 64;
              goto LABEL_162;
            case 4:
              v82 = 512;
              goto LABEL_162;
            case 5:
              v82 = 1024;
              goto LABEL_162;
            case 6:
              v82 = 32;
              goto LABEL_162;
            case 9:
              v82 = 128;
LABEL_162:
              *(_WORD *)(a1 + 108) |= v82;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_167;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v87 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 108) & 0x800) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_165;
          v85 = objc_alloc_init(GEOWaypointTyped);
          if (GEOWaypointTypedReadAllFrom((uint64_t)v85, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v36 = 80;
            goto LABEL_85;
          }
          goto LABEL_164;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v79 = 16 * *(_WORD *)(a1 + 108);
        goto LABEL_149;
      case 2:
        if (!v31)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 108) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_165;
          v79 = *(_WORD *)(a1 + 108) << 7;
          goto LABEL_149;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_165;
        v85 = objc_alloc_init(GEOMapItemStorage);
        if (!GEOMapItemStorageReadAllFrom((uint64_t)v85, (void *)v3, v9 & 1))
          goto LABEL_164;
        PBReaderRecallMark();
        v36 = 48;
        goto LABEL_85;
      case 3:
        if (!v31)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 108) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_165;
          v79 = *(_WORD *)(a1 + 108) << 9;
          goto LABEL_149;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_165;
        v85 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v85, (void *)v3))
          goto LABEL_164;
        PBReaderRecallMark();
        v36 = 32;
        goto LABEL_85;
      case 4:
        if (!v31)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 108) & 0x200) == 0)
        {
          PBReaderReadData();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 64;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v79 = *(_WORD *)(a1 + 108) << 6;
        goto LABEL_149;
      case 5:
        if (!v31)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 108) & 0x400) == 0)
        {
          PBReaderReadData();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 72;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v79 = 32 * *(_WORD *)(a1 + 108);
        goto LABEL_149;
      case 6:
        if (!v31)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 24;
LABEL_63:
          v40 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;
          goto LABEL_86;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_165;
        v79 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_149;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 108) |= 0x10u;
        while (2)
        {
          v44 = *v17;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v27 = v42++ >= 9;
              if (v27)
              {
                v43 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v43 = 0;
LABEL_116:
        v76 = v43 != 0;
        v77 = 105;
        goto LABEL_125;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          v51 = *v17;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v27 = v49++ >= 9;
              if (v27)
              {
                LODWORD(v50) = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v50) = 0;
LABEL_120:
        *(_DWORD *)(a1 + 100) = v50;
        goto LABEL_151;
      case 9:
        if (!v31)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 108) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_165;
          v79 = *(_WORD *)(a1 + 108) << 8;
LABEL_149:
          v7 += v79 >> 15;
LABEL_150:
          v15 = v86;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_151:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_152;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_165;
        v85 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v85, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v36 = 40;
LABEL_85:
          v40 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v85;
LABEL_86:

          --v7;
          goto LABEL_150;
        }
LABEL_164:

LABEL_165:
        v80 = 0;
        v15 = v86;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_166:
        *(_WORD *)(a1 + 108) |= 0x800u;
        *(_WORD *)(a1 + 108) |= 0x40u;
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 0x200u;
        *(_WORD *)(a1 + 108) |= 0x400u;
        *(_WORD *)(a1 + 108) |= 0x20u;
        *(_WORD *)(a1 + 108) |= 0x80u;
        if ((v80 & 1) != 0)
        {
LABEL_167:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_168;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_168:
            v83 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_WORD *)(a1 + 108) |= 8u;
        while (2)
        {
          v58 = *v17;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v27 = v56++ >= 9;
              if (v27)
              {
                v57 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v57 = 0;
LABEL_124:
        v76 = v57 != 0;
        v77 = 104;
LABEL_125:
        *(_BYTE *)(a1 + v77) = v76;
        goto LABEL_151;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + 108) |= 2u;
        while (2)
        {
          v65 = *v17;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v27 = v63++ >= 9;
              if (v27)
              {
                v64 = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v64 = 0;
LABEL_129:
        v78 = 56;
        goto LABEL_134;
      case 12:
        if ((v8 & 1) != 0)
        {
          v69 = 0;
          v70 = 0;
          v64 = 0;
          *(_WORD *)(a1 + 108) |= 1u;
          while (1)
          {
            v71 = *v17;
            v72 = *(_QWORD *)(v3 + v71);
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
              break;
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v64 |= (unint64_t)(v74 & 0x7F) << v69;
            if ((v74 & 0x80) == 0)
              goto LABEL_131;
            v69 += 7;
            v27 = v70++ >= 9;
            if (v27)
            {
              v64 = 0;
              goto LABEL_133;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_131:
          if (*(_BYTE *)(v3 + *v18))
            v64 = 0;
LABEL_133:
          v78 = 16;
LABEL_134:
          *(_QWORD *)(a1 + v78) = v64;
        }
        else
        {
LABEL_111:
          v75 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v86;
          if ((v75 & 1) == 0)
          {
LABEL_163:
            v80 = 0;
            goto LABEL_166;
          }
        }
        goto LABEL_151;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v86;
        if (!v37)
          goto LABEL_163;
        goto LABEL_151;
    }
  }
}

void sub_188F840C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F84208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F843C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F84500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F84640(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F84A0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F85608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOComposedWaypointCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[5], "readAll:", 1);
}

unint64_t GEOComposedWaypointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOComposedWaypointReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOComposedWaypointReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOComposedWaypointReadAllFrom_initialTag;
  Specified = GEOComposedWaypointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOComposedWaypointCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_188F85804(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOComposedWaypointReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOComposedWaypointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F85864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOComposedWaypointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOWaypointTypedIsValid(a1))
            goto LABEL_57;
          goto LABEL_85;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapItemStorageIsValid(a1))
            goto LABEL_85;
          goto LABEL_57;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_85;
          goto LABEL_57;
        case 4u:
          if (v15 == 2)
            goto LABEL_36;
          goto LABEL_85;
        case 5u:
          if (v15 == 2)
            goto LABEL_36;
          goto LABEL_85;
        case 6u:
          if (v15 == 2)
            goto LABEL_36;
          goto LABEL_85;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_85;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_82;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_83;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_85;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_82;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_83;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_85;
LABEL_57:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_85;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_82;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_83;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_85;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_82;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_83;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_85;
          v38 = 0;
          break;
        default:
LABEL_36:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_85:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_83;
      }
LABEL_82:
      a1[*v4] = 1;
LABEL_83:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_188F85F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOComposedWaypointIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0x1000) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 108) & 0x800) != 0)
  {
    if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x40) != 0)
    return 1;
  if ((v2 & 0x100) == 0)
    goto LABEL_9;
  if ((GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 108);
LABEL_9:
  if ((v2 & 0x620) != 0)
    return 1;
  return (v2 & 0x80) != 0 && GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 40));
}

os_unfair_lock_s *GEOComposedWaypointIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOComposedWaypointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOComposedWaypointClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int HasSensitiveFields;
  void *v14;
  id *v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  _DWORD *v20;

  if (a3)
  {
    if (objc_msgSend(a1, "hasWaypoint")
      && (objc_msgSend(a1, "waypoint"),
          v6 = (void *)objc_claimAutoreleasedReturnValue(),
          v7 = GEOWaypointTypedHasSensitiveFields(v6),
          v6,
          v7))
    {
      objc_msgSend(a1, "waypoint");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)objc_msgSend(v8, "copy");

      objc_msgSend(v9, "waypointLocation");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "clearSensitiveFields:", a2);

      objc_msgSend(a1, "setWaypoint:", v9);
    }
    else
    {
      objc_msgSend(a1, "waypoint");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasMapItemStorage"))
    {
      objc_msgSend(a1, "mapItemStorage");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v12, a2);

      if (HasSensitiveFields)
      {
        objc_msgSend(a1, "mapItemStorage");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = (id *)objc_msgSend(v14, "copy");

        GEOMapItemStorageClearSensitiveFields(v15, a2, 0);
        objc_msgSend(a1, "setMapItemStorage:", v15);

        goto LABEL_11;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "waypoint");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "mapItemStorage");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "clearSensitiveFields:", a2);

  if (!a3)
  {
LABEL_14:
    objc_msgSend(a1, "location");
    v20 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "clearSensitiveFields:", a2);
    goto LABEL_15;
  }
LABEL_11:
  if (!objc_msgSend(a1, "hasLocation"))
    goto LABEL_14;
  objc_msgSend(a1, "location");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = GEOLocationHasSensitiveFields((uint64_t)v17);

  if (!v18)
    goto LABEL_14;
  objc_msgSend(a1, "location");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (_DWORD *)objc_msgSend(v19, "copy");

  GEOLocationClearSensitiveFields(v20);
  objc_msgSend(a1, "setLocation:", v20);
LABEL_15:

}

uint64_t GEOComposedWaypointHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t HasSensitiveFields;
  void *v6;
  void *v7;

  if (!a1)
    return 0;
  objc_msgSend(a1, "waypoint");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOWaypointTypedHasSensitiveFields(v4) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "mapItemStorage");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((GEOMapItemStorageHasSensitiveFields((uint64_t)v6, a2) & 1) != 0)
    {
      HasSensitiveFields = 1;
    }
    else
    {
      objc_msgSend(a1, "location");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v7);

    }
  }

  return HasSensitiveFields;
}

void sub_188F86884(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationGuidanceStateReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  _BOOL8 v57;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 0x10u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_65;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_67;
              }
            }
            v3[*v6] = 1;
LABEL_65:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_67:
            v56 = 24;
            goto LABEL_88;
          case 2u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 4u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_71:
            v56 = 16;
            goto LABEL_88;
          case 3u:
            v31 = 0;
            v32 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_75:
            v56 = 12;
            goto LABEL_88;
          case 4u:
            v37 = 0;
            v38 = 0;
            v39 = 0;
            *(_BYTE *)(a1 + 32) |= 0x20u;
            while (2)
            {
              v40 = *v4;
              v41 = *(_QWORD *)&v3[v40];
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v43 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v41);
                *(_QWORD *)&v3[v40] = v42;
                v39 |= (unint64_t)(v43 & 0x7F) << v37;
                if (v43 < 0)
                {
                  v37 += 7;
                  v15 = v38++ >= 9;
                  if (v15)
                  {
                    v39 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v39 = 0;
LABEL_79:
            *(_BYTE *)(a1 + 28) = v39 != 0;
            continue;
          case 5u:
            v44 = 0;
            v45 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (2)
            {
              v46 = *v4;
              v47 = *(_QWORD *)&v3[v46];
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v49 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v47);
                *(_QWORD *)&v3[v46] = v48;
                v20 |= (unint64_t)(v49 & 0x7F) << v44;
                if (v49 < 0)
                {
                  v44 += 7;
                  v15 = v45++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_83:
            v56 = 8;
            goto LABEL_88;
          case 6u:
            v50 = 0;
            v51 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_91;
            continue;
        }
        while (1)
        {
          v52 = *v4;
          v53 = *(_QWORD *)&v3[v52];
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)&v3[*v5])
            break;
          v55 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v53);
          *(_QWORD *)&v3[v52] = v54;
          v20 |= (unint64_t)(v55 & 0x7F) << v50;
          if ((v55 & 0x80) == 0)
            goto LABEL_85;
          v50 += 7;
          v15 = v51++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_87;
          }
        }
        v3[*v6] = 1;
LABEL_85:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_87:
        v56 = 20;
LABEL_88:
        *(_DWORD *)(a1 + v56) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v57 = v3[*v6] == 0;
  }
  else
  {
LABEL_91:
    v57 = 0;
  }
  objc_sync_exit(v3);

  return v57;
}

void sub_188F88654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationGuidanceStateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONavigationGuidanceStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F886B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationGuidanceStateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  _BOOL8 v47;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v42 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_73:
          v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        v43 = *v2;
        v44 = *(_QWORD *)&a1[v43];
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
          break;
        v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
        *(_QWORD *)&a1[v43] = v45;
        if (v46 < 0)
        {
          v21 = v42++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}

void sub_188F894E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  GEOComposedWaypoint *v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFEFFFALL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v60 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_95;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_95:
      if ((v15 & 1) != 0)
      {
        v53 = 1;
        goto LABEL_107;
      }
      if (v16)
      {
        while (1)
        {
          v54 = *v16++;
          v55 = 4;
          switch(v54)
          {
            case 0:
              goto LABEL_108;
            case 2:
              goto LABEL_103;
            case 4:
              v55 = 64;
              goto LABEL_103;
            case 5:
              v55 = 16;
              goto LABEL_103;
            case 6:
              v55 = 32;
              goto LABEL_103;
            case 7:
              v55 = 8;
LABEL_103:
              *(_BYTE *)(a1 + 80) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_108;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v60 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_75;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 80) |= 2u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_78;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_80;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_78:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_80:
        *(_DWORD *)(a1 + 76) = v38;
        goto LABEL_91;
      case 2:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 80) & 4) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 16;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v52 = 32 * *(_BYTE *)(a1 + 80);
        goto LABEL_89;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_75;
        *(_BYTE *)(a1 + 80) |= 1u;
        v46 = *v17;
        v47 = *(_QWORD *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v48 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v47);
          *(_QWORD *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v48 = 0;
        }
        *(_QWORD *)(a1 + 48) = v48;
        goto LABEL_91;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 0x40) != 0)
          goto LABEL_75;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v58 = objc_alloc_init(GEOComposedWaypoint);
        if (!GEOComposedWaypointReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEONavigationRouteSummary _addNoFlagsWaypoints:](a1, v58);

        goto LABEL_90;
      case 5:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 32;
LABEL_62:
          v49 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v52 = 8 * *(_BYTE *)(a1 + 80);
        goto LABEL_89;
      case 6:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v52 = 4 * *(_BYTE *)(a1 + 80);
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v58 = objc_alloc_init(GEOComposedWaypoint);
        if (!GEOComposedWaypointReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        v50 = 40;
        goto LABEL_73;
      case 7:
        if (!v31)
        {
LABEL_75:
          v51 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v59;
          if ((v51 & 1) == 0)
          {
LABEL_104:
            v53 = 0;
            goto LABEL_107;
          }
LABEL_91:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_95;
          continue;
        }
        if ((*(_BYTE *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v52 = 16 * *(_BYTE *)(a1 + 80);
LABEL_89:
          v7 += v52 >> 7;
LABEL_90:
          v15 = v59;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v58 = objc_alloc_init(GEOComposedWaypoint);
        if (GEOComposedWaypointReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v50 = 24;
LABEL_73:
          v49 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v58;
LABEL_74:

          --v7;
          goto LABEL_90;
        }
LABEL_105:

LABEL_106:
        v53 = 0;
        v15 = v59;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        *(_BYTE *)(a1 + 80) |= 4u;
        *(_BYTE *)(a1 + 80) |= 0x40u;
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        *(_BYTE *)(a1 + 80) |= 8u;
        if ((v53 & 1) != 0)
        {
LABEL_108:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_109;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_109:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v59;
        if (!v43)
          goto LABEL_104;
        goto LABEL_91;
    }
  }
}

void sub_188F89DEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8A120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8A264(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8A3A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8AD94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEONavigationRouteSummaryCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[3], "readAll:", 1);
}

unint64_t GEONavigationRouteSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEONavigationRouteSummaryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEONavigationRouteSummaryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEONavigationRouteSummaryReadAllFrom_initialTag;
  Specified = GEONavigationRouteSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEONavigationRouteSummaryCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188F8B04C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONavigationRouteSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F8B0AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationRouteSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_45;
          v18 = 0;
          do
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            {
              v14 = *v4;
              goto LABEL_41;
            }
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if ((v22 & 0x80000000) == 0)
              break;
          }
          while (v18++ <= 8);
          goto LABEL_42;
        case 2u:
          if (v16 == 2)
            goto LABEL_38;
          goto LABEL_45;
        case 3u:
          if (v16 != 1)
            goto LABEL_45;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7 || (v26 = v25 + 8, v26 > *(_QWORD *)&a1[*v3]))
LABEL_41:
            a1[v14] = 1;
          else
            *(_QWORD *)&a1[v24] = v26;
          goto LABEL_42;
        case 4u:
        case 6u:
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOComposedWaypointIsValid(a1))
            goto LABEL_45;
          PBReaderRecallMark();
          goto LABEL_42;
        case 5u:
          if (v16 == 2)
            goto LABEL_38;
          goto LABEL_45;
        default:
LABEL_38:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_45:
            PBReaderRecallMark();
            return 0;
          }
LABEL_42:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_43;
          break;
      }
    }
  }
LABEL_43:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_188F8B608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEONavigationRouteSummaryIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 80);
  if ((v2 & 0xD4) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
  {
    if ((GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 8) == 0)
    goto LABEL_10;
  if ((GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
    return 1;
  v2 = *(_BYTE *)(a1 + 80);
LABEL_10:
  if ((v2 & 0x40) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_22;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_22:

  return v3;
}

os_unfair_lock_s *GEONavigationRouteSummaryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEONavigationRouteSummaryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEONavigationRouteSummaryClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int HasSensitiveFields;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  id v18;

  -[GEONavigationRouteSummary _readWaypoints]((uint64_t)a1);
  if (objc_msgSend(a1[7], "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(a1[7], "objectAtIndexedSubscript:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (a3 && GEOComposedWaypointHasSensitiveFields(v7, a2))
      {
        v9 = (void *)objc_msgSend(v8, "copy");
        GEOComposedWaypointClearSensitiveFields(v9, a2, 0);
        objc_msgSend(a1[7], "replaceObjectAtIndex:withObject:", v6, v9);

      }
      else
      {
        objc_msgSend(v8, "clearSensitiveFields:", a2);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(a1[7], "count"));
  }
  if ((a3 & 1) == 0)
  {
    objc_msgSend(a1, "origin");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);

LABEL_17:
    objc_msgSend(a1, "destination");
    v18 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "clearSensitiveFields:", a2);
    goto LABEL_18;
  }
  if (objc_msgSend(a1, "hasOrigin")
    && (objc_msgSend(a1, "origin"),
        v10 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOComposedWaypointHasSensitiveFields(v10, a2),
        v10,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "origin");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v12, "copy");

    GEOComposedWaypointClearSensitiveFields(v13, a2, 0);
    objc_msgSend(a1, "setOrigin:", v13);
  }
  else
  {
    objc_msgSend(a1, "origin");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasDestination"))
    goto LABEL_17;
  objc_msgSend(a1, "destination");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = GEOComposedWaypointHasSensitiveFields(v15, a2);

  if (!v16)
    goto LABEL_17;
  objc_msgSend(a1, "destination");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = (id)objc_msgSend(v17, "copy");

  GEOComposedWaypointClearSensitiveFields(v18, a2, 0);
  objc_msgSend(a1, "setDestination:", v18);
LABEL_18:

}

uint64_t GEONavigationRouteSummaryHasSensitiveFields(uint64_t result, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  char HasSensitiveFields;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v3 = (void *)result;
    objc_msgSend((id)result, "origin");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (GEOComposedWaypointHasSensitiveFields(v4, a2))
    {

      return 1;
    }
    objc_msgSend(v3, "destination");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOComposedWaypointHasSensitiveFields(v5, a2);

    if ((HasSensitiveFields & 1) != 0)
      return 1;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    objc_msgSend(v3, "waypoints", 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v13;
      while (2)
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v13 != v10)
            objc_enumerationMutation(v7);
          if ((GEOComposedWaypointHasSensitiveFields(*(void **)(*((_QWORD *)&v12 + 1) + 8 * v11), a2) & 1) != 0)
          {

            return 1;
          }
          ++v11;
        }
        while (v9 != v11);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
        if (v9)
          continue;
        break;
      }
    }

    return 0;
  }
  return result;
}

void sub_188F8C154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8C808(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteTransitSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  _BOOL8 v16;
  BOOL v17;
  int *v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  _BOOL4 v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  _BOOL8 v40;
  GEONavigationScheduledTransitLinkSummary *v41;
  char v42;
  int v43;
  int v44;
  char v45;
  void *v46;
  BOOL v48;
  BOOL v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v7 != 0;
        v16 = v14 != 0;
        v17 = v16 | v8;
        if (v14)
          v15 = 1;
        if (v17)
          v18 = 0;
        else
          v18 = a3;
        v19 = v18 == 0;
        if (v14)
          v19 = 1;
        v48 = v15;
        v49 = v19;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_57;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_27;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_27:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_29:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_57:
      if (v16)
      {
        v42 = 1;
        goto LABEL_68;
      }
      if (!v18)
        goto LABEL_69;
      while (1)
      {
        v44 = *v18++;
        v43 = v44;
        if (v44 == 1)
          break;
        if (v43 == 2)
        {
          v45 = 1;
LABEL_66:
          *(_BYTE *)(a1 + v22[201]) |= v45;
        }
        else if (!v43)
        {
          goto LABEL_69;
        }
      }
      v45 = 2;
      goto LABEL_66;
    }
    v34 = v26 >> 3;
    v35 = v16;
    if (!v49)
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_67;
      goto LABEL_56;
    }
    if (v35 && (*(_BYTE *)(a1 + v22[201]) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_67;
      v40 = v16;
      v16 = (_BOOL8)v21;
      v41 = objc_alloc_init(GEONavigationScheduledTransitLinkSummary);
      if (!GEONavigationScheduledTransitLinkSummaryReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1))
        goto LABEL_74;
      PBReaderRecallMark();
      -[GEONavigationRouteTransitSummary _addNoFlagsScheduledLink:](a1, v41);
      goto LABEL_52;
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_67:
      v42 = 0;
      goto LABEL_68;
    }
LABEL_56:
    if (!v48)
      goto LABEL_57;
  }
  if (!v35 || (*(_BYTE *)(a1 + v22[201]) & 1) != 0)
    goto LABEL_55;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_67;
  v40 = v16;
  v16 = (_BOOL8)v21;
  v41 = objc_alloc_init(GEONavigationTransitStopSummary);
  if (GEONavigationTransitStopSummaryReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEONavigationRouteTransitSummary _addNoFlagsPossibleStop:](a1, v41);
LABEL_52:

    v21 = (int *)v16;
    v16 = v40;
    v22 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
    goto LABEL_56;
  }
LABEL_74:

  v42 = 0;
  v21 = (int *)v16;
  LODWORD(v16) = v40;
  v22 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
LABEL_68:
  *(_BYTE *)(a1 + v22[201]) |= 2u;
  *(_BYTE *)(a1 + v22[201]) |= 1u;
  if ((v42 & 1) != 0)
  {
LABEL_69:
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if (v16)
      goto LABEL_70;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_70:
      v46 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188F8CF70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8D8D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEONavigationRouteTransitSummaryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 16);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEONavigationRouteTransitSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEONavigationRouteTransitSummaryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEONavigationRouteTransitSummaryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEONavigationRouteTransitSummaryReadAllFrom_initialTag;
  Specified = GEONavigationRouteTransitSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEONavigationRouteTransitSummaryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188F8DBF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteTransitSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONavigationRouteTransitSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F8DC58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationRouteTransitSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigationScheduledTransitLinkSummaryIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigationTransitStopSummaryIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEONavigationScheduledTransitLinkSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_42;
          v21 = 0;
          do
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
            {
              v14 = *v4;
              goto LABEL_38;
            }
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0)
              break;
          }
          while (v21++ <= 8);
          goto LABEL_39;
        case 2u:
        case 3u:
          if (v16 != 1)
            goto LABEL_42;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7 || (v20 = v19 + 8, v20 > *(_QWORD *)&a1[*v3]))
LABEL_38:
            a1[v14] = 1;
          else
            *(_QWORD *)&a1[v18] = v20;
          goto LABEL_39;
        case 4u:
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavigationTransitStopSummaryIsValid(a1))
            goto LABEL_42;
          PBReaderRecallMark();
          goto LABEL_39;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          break;
      }
    }
  }
LABEL_40:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEONavigationTransitStopSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188F8E5A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationRouteTransitSummaryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_188F8EBD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8F1A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationScheduledTransitLinkSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  GEONavigationTransitStopSummary *v50;
  uint64_t v51;
  void *v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  int v59;
  int v60;
  void *v61;
  _BOOL4 v63;
  BOOL v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v64 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_90;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_90:
      if (v16)
      {
        v57 = 1;
        goto LABEL_105;
      }
      if (!v15)
        goto LABEL_106;
      while (1)
      {
        v60 = *v15++;
        v59 = v60;
        if (v60 == 4)
          break;
        if (v59 == 5)
        {
          v58 = 16;
LABEL_96:
          *(_BYTE *)(a1 + 68) |= v58;
        }
        else if (!v59)
        {
          goto LABEL_106;
        }
      }
      v58 = 8;
      goto LABEL_96;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v64)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_72;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_74;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_72:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_74:
        *(_QWORD *)(a1 + 16) = v39;
        goto LABEL_86;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 68) |= 4u;
        v45 = *v18;
        v46 = *(_QWORD *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v46);
          *(_QWORD *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v47 = 0;
        }
        v55 = 32;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 68) |= 2u;
        v48 = *v18;
        v49 = *(_QWORD *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v49);
          *(_QWORD *)(v3 + v48) = v49 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v47 = 0;
        }
        v55 = 24;
LABEL_85:
        *(_QWORD *)(a1 + v55) = v47;
        goto LABEL_86;
      case 4:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v54 = 16 * *(_BYTE *)(a1 + 68);
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v63 = v16;
        v50 = objc_alloc_init(GEONavigationTransitStopSummary);
        if (!GEONavigationTransitStopSummaryReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_103;
        PBReaderRecallMark();
        v51 = 40;
        goto LABEL_68;
      case 5:
        if (!v32)
        {
LABEL_69:
          v53 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
LABEL_101:
            v57 = 0;
            goto LABEL_105;
          }
LABEL_86:
          if (v7)
            v56 = 1;
          else
            v56 = v16;
          if ((v56 & 1) == 0)
            goto LABEL_90;
          continue;
        }
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_102:
            v57 = 0;
            goto LABEL_104;
          }
          v54 = 8 * *(_BYTE *)(a1 + 68);
LABEL_79:
          v7 += v54 >> 7;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v63 = v16;
        v50 = objc_alloc_init(GEONavigationTransitStopSummary);
        if (GEONavigationTransitStopSummaryReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          v51 = 48;
LABEL_68:
          v52 = *(void **)(a1 + v51);
          *(_QWORD *)(a1 + v51) = v50;

          --v7;
          v16 = v63;
LABEL_80:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_86;
        }
LABEL_103:

        v57 = 0;
        v16 = v63;
LABEL_104:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_105:
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 0x10u;
        if ((v57 & 1) != 0)
        {
LABEL_106:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if (v16)
            goto LABEL_107;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_107:
            v61 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v44 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_101;
        goto LABEL_86;
    }
  }
}

void sub_188F8F948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F8FF3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationScheduledTransitLinkSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEONavigationScheduledTransitLinkSummaryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEONavigationScheduledTransitLinkSummaryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEONavigationScheduledTransitLinkSummaryReadAllFrom_initialTag;
  Specified = GEONavigationScheduledTransitLinkSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188F900F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationScheduledTransitLinkSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONavigationScheduledTransitLinkSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F90154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F90340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationScheduledTransitLinkSummaryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_188F9074C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationTransitStopSummaryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOLatLng *v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v25 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            v20 = 0;
LABEL_36:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_188F91164(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationTransitStopSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONavigationTransitStopSummaryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188F911C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188F934F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188F95A44(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188F95AC8(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

id _geo_NSErrorXPCSafeRepresentationCopy(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v1 = a1;
  objc_msgSend(v1, "userInfo");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = _NSDictionarySafeEncodingCopy(v2, 1);

  v4 = (void *)MEMORY[0x1E0CB35C8];
  objc_msgSend(v1, "domain");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v1, "code");

  objc_msgSend(v4, "errorWithDomain:code:userInfo:", v5, v6, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id _geo_NSErrorDictionaryRepresentationCopy(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  if (a1)
  {
    v1 = (objc_class *)MEMORY[0x1E0C99E08];
    v2 = a1;
    v3 = objc_alloc_init(v1);
    objc_msgSend(v2, "domain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v4, CFSTR("domain"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v2, "code"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setObject:forKey:", v5, CFSTR("code"));

    objc_msgSend(v2, "userInfo");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = (void *)_NSDictionarySafeEncodingCopy(v6, 0);
    objc_msgSend(v3, "setObject:forKey:", v7, CFSTR("userInfo"));

  }
  else
  {
    v3 = 0;
  }
  return v3;
}

id _geo_NSErrorXPCDictionaryRepresentationCopy(void *a1)
{
  void *v1;
  void *v2;

  _geo_NSErrorDictionaryRepresentationCopy(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)_CFXPCCreateXPCObjectFromCFObject();

  return v2;
}

id _geo_NSErrorFromDictionaryRepresentationCopy(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  unsigned int v16;
  unsigned int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  __CFString *v25;
  id v26;
  void *v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  __CFString *v38;
  __int16 v39;
  id v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    objc_msgSend(v1, "objectForKey:", CFSTR("domain"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "objectForKey:", CFSTR("code"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "objectForKey:", CFSTR("userInfo"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      v5 = (void *)_NSDictionarySafeDecodingCopy(v4);
      v6 = *MEMORY[0x1E0CB3308];
      objc_msgSend(v5, "objectForKeyedSubscript:", *MEMORY[0x1E0CB3308]);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if (v7)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0 && os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: [urlErrorString isKindOfClass:NSString.class]", buf, 2u);
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v7);
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          if (v8)
          {
            v9 = v5;
            v5 = (void *)objc_msgSend(v5, "mutableCopy");
            objc_msgSend(v5, "setObject:forKeyedSubscript:", v8, v6);

          }
        }
      }
      v10 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB35C8]), "initWithDomain:code:userInfo:", v2, objc_msgSend(v3, "integerValue"), v5);
      if (objc_msgSend(v10, "code") == -3)
      {
        objc_msgSend(v10, "domain");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        GEOErrorDomain();
        v34 = v5;
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v11, "isEqual:", v12);

        v5 = v34;
        if (v13)
        {
          objc_msgSend(v10, "userInfo");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("requestKind"));
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          v16 = objc_msgSend(v15, "intValue");
          v17 = (v16 >> 8) & 0x7F;
          if (v17 > 0xB || ((1 << v17) & 0xC05) == 0 || v16 != 1)
          {
            v33 = v15;
            objc_msgSend(v10, "userInfo");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("details"));
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "firstObject");
            v20 = (void *)objc_claimAutoreleasedReturnValue();

            if (objc_msgSend(v20, "count"))
            {
              objc_msgSend(v20, "objectForKeyedSubscript:", CFSTR("maxRequests"));
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              v32 = objc_msgSend(v21, "unsignedIntValue");

              objc_msgSend(v20, "objectForKeyedSubscript:", CFSTR("windowSize"));
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              v31 = objc_msgSend(v22, "unsignedIntValue");

              objc_msgSend(v20, "objectForKeyedSubscript:", CFSTR("timeUntilReset"));
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              v24 = objc_msgSend(v23, "unsignedIntValue");

              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Tried to make more than %u requests in %u seconds, will reset in %u seconds"), v32, v31, v24);
              v25 = (__CFString *)objc_claimAutoreleasedReturnValue();
            }
            else
            {
              v25 = CFSTR("No details found");
            }
            objc_msgSend(v10, "userInfo");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v28, "objectForKeyedSubscript:", CFSTR("requestKindString"));
            v29 = (void *)objc_claimAutoreleasedReturnValue();

            GEOFindOrCreateLog("com.apple.GeoServices", "GEOXPC");
            v30 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v30, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412802;
              v36 = v29;
              v37 = 2112;
              v38 = v25;
              v39 = 2112;
              v40 = v10;
              _os_log_impl(&dword_1885A9000, v30, OS_LOG_TYPE_FAULT, "Throttled \"%@\" request: %@ - %@", buf, 0x20u);
            }

            v15 = v33;
            v5 = v34;
          }

        }
      }

      v26 = v10;
    }
    else
    {
      v26 = 0;
    }

  }
  else
  {
    v26 = 0;
  }

  return v26;
}

id _geo_NSErrorFromXPCDictionaryRepresentationCopy()
{
  void *v0;
  void *v1;

  v0 = (void *)_CFXPCCreateCFObjectFromXPCObject();
  _geo_NSErrorFromDictionaryRepresentationCopy(v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

void GEOEncodeXPCValue(void *a1, const char *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  void *v9;
  id v10;
  NSObject *v11;
  const char *v12;
  uint8_t *v13;
  __int16 v14;
  __int16 v15;
  __int16 v16;

  v7 = a1;
  v8 = a3;
  v9 = v8;
  if (!v7)
  {
    if (!os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      goto LABEL_5;
    v16 = 0;
    v11 = MEMORY[0x1E0C81028];
    v12 = "Assertion failed: dict != ((void *)0)";
    v13 = (uint8_t *)&v16;
LABEL_12:
    _os_log_fault_impl(&dword_1885A9000, v11, OS_LOG_TYPE_FAULT, v12, v13, 2u);
    goto LABEL_5;
  }
  if (!a2)
  {
    if (!os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      goto LABEL_5;
    v15 = 0;
    v11 = MEMORY[0x1E0C81028];
    v12 = "Assertion failed: key != ((void *)0)";
    v13 = (uint8_t *)&v15;
    goto LABEL_12;
  }
  if (!v8)
  {
    if (!os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      goto LABEL_5;
    v14 = 0;
    v11 = MEMORY[0x1E0C81028];
    v12 = "Assertion failed: value != ((void *)0)";
    v13 = (uint8_t *)&v14;
    goto LABEL_12;
  }
  objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v8, 1, a4);
  v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  xpc_dictionary_set_data(v7, a2, (const void *)objc_msgSend(v10, "bytes"), objc_msgSend(v10, "length"));

LABEL_5:
}

id _NSArraySafeEncodingCopy(void *a1, unsigned int a2)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v2 = a1;
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v26;
    v8 = 0x1E0CB3000uLL;
    v9 = 0x1E0CB3000uLL;
    v10 = 0x1E0CB3000uLL;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v26 != v7)
          objc_enumerationMutation(v4);
        v12 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * v11);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v12, "absoluteString");
          v13 = objc_claimAutoreleasedReturnValue();
LABEL_8:
          v14 = (void *)v13;
          objc_msgSend(v3, "addObject:", v13);

          goto LABEL_12;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          objc_msgSend(v3, "addObject:", v12);
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            _geo_NSErrorDictionaryRepresentationCopy(v12);
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithDictionary:", v24);
            objc_msgSend(*(id *)(v9 + 2024), "numberWithBool:", 1);
            v16 = v10;
            v17 = v4;
            v18 = v8;
            v19 = v9;
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "setObject:forKey:", v20, CFSTR("_geo_SerializedError"));

            v9 = v19;
            v8 = v18;
            v4 = v17;
            v10 = v16;
            objc_msgSend(v3, "addObject:", v15);

          }
          else
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v13 = _NSDictionarySafeEncodingCopy(v12, a2);
              goto LABEL_8;
            }
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v13 = _NSArraySafeEncodingCopy(v12, a2);
              goto LABEL_8;
            }
          }
        }
LABEL_12:
        ++v11;
      }
      while (v6 != v11);
      v21 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
      v6 = v21;
    }
    while (v21);
  }

  return v3;
}

id _NSArraySafeDecodingCopy(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  void *v16;
  int v17;
  void *v18;
  uint64_t v19;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v23;
    v7 = 0x1E0CB3000uLL;
    v8 = 0x1E0CB3000uLL;
    v21 = v2;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v23 != v6)
          objc_enumerationMutation(v3);
        v10 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * v9);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          objc_msgSend(v2, "addObject:", v10);
          goto LABEL_9;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v11 = v10;
          objc_msgSend(v11, "objectForKey:", CFSTR("_geo_SerializedError"));
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v11, "objectForKey:", CFSTR("_geo_SerializedError"));
            v13 = v7;
            v14 = v3;
            v15 = v8;
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            v17 = objc_msgSend(v16, "BOOLValue");

            v8 = v15;
            v3 = v14;
            v7 = v13;
            v2 = v21;

            if (v17)
            {
              _geo_NSErrorFromDictionaryRepresentationCopy(v11);
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v18)
                goto LABEL_21;
              goto LABEL_20;
            }
          }
          else
          {

          }
          v18 = (void *)_NSDictionarySafeDecodingCopy(v11);
LABEL_20:
          objc_msgSend(v2, "addObject:", v18);
LABEL_21:

          goto LABEL_22;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
          goto LABEL_9;
        v11 = (id)_NSArraySafeDecodingCopy(v10);
        objc_msgSend(v2, "addObject:", v11);
LABEL_22:

LABEL_9:
        ++v9;
      }
      while (v5 != v9);
      v19 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
      v5 = v19;
    }
    while (v19);
  }

  return v2;
}

void sub_188F9B3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188F9E8E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188F9E99C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F9EA1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188F9ECA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;

  _Unwind_Resume(a1);
}

void sub_188F9EF38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188F9F008(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t GEOSynchronizeDefaults()
{
  return 0;
}

void GEOSetDefault(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = a1;
  _GEOConfigProxy();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "configStoreForOptions:", 983040);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setConfigValue:forKey:options:synchronous:", v3, v4, 983040, 0);
}

void GEOSetDefaultSynchronous(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = a1;
  _GEOConfigProxy();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "configStoreForOptions:", 983040);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setConfigValue:forKey:options:synchronous:", v3, v4, 983040, 1);
}

id GEOGetDefaultNumber(void *a1)
{
  void *v1;
  id v2;

  GEOGetDecodedDefaultWithSource(a1, 0, 0, 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  v2 = 0;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;

  return v2;
}

id GEOGetDefault(void *a1, void *a2)
{
  return GEOGetDecodedDefaultWithSource(a1, a2, 0, 0);
}

uint64_t GEOGetDefaultInteger(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;

  GEOGetDefaultNumber(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
    a2 = objc_msgSend(v3, "integerValue");

  return a2;
}

uint64_t GEOGetDefaultUInt32(void *a1, uint64_t a2)
{
  void *v3;

  GEOGetDecodedDefaultWithSource(a1, 0, 0, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      a2 = objc_msgSend(v3, "unsignedIntValue");
  }

  return a2;
}

uint64_t GEOGetDefaultUint64(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;

  GEOGetDefaultNumber(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
    a2 = objc_msgSend(v3, "unsignedLongLongValue");

  return a2;
}

uint64_t GEOGetDefaultBOOL(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;

  GEOGetDefaultNumber(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
    a2 = objc_msgSend(v3, "BOOLValue");

  return a2;
}

double GEOGetDefaultDouble(void *a1, double a2)
{
  void *v3;
  void *v4;
  double v5;

  GEOGetDefaultNumber(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "doubleValue");
    a2 = v5;
  }

  return a2;
}

id GEOGetDefaultWithSource(void *a1, void *a2, _QWORD *a3)
{
  return GEOGetDecodedDefaultWithSource(a1, a2, a3, 0);
}

uint64_t GEOGetUserTransportTypePreference()
{
  if (_GEOConfigHasValue(GeoServicesConfig_TransportTypePreference, (uint64_t)off_1EDF4CBC8))
    return GEOConfigGetInteger(GeoServicesConfig_TransportTypePreference, (uint64_t)off_1EDF4CBC8);
  if (_GEOConfigHasValue(GeoServicesConfig_DefaultMapMode, (uint64_t)off_1EDF4DB98)
    && GEOConfigGetInteger(GeoServicesConfig_DefaultMapMode, (uint64_t)off_1EDF4DB98) == 3)
  {
    return 2;
  }
  return 0;
}

void GEOSetUserTransportTypePreference()
{
  GEOConfigSetInteger(GeoServicesConfig_TransportTypePreference, (uint64_t)off_1EDF4CBC8);
}

uint64_t GEOGetUserPreferredTransportType()
{
  unint64_t v0;

  v0 = GEOGetUserTransportTypePreference();
  if (v0 < 5)
    return (v0 + 1);
  else
    return 0;
}

id GEOGetFormatStyleParserLog()
{
  if (qword_1ECDBBE28 != -1)
    dispatch_once(&qword_1ECDBBE28, &__block_literal_global_51);
  return (id)qword_1ECDBBE20;
}

void sub_188FA18E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  uint64_t v61;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v61 - 240), 8);
  _Block_object_dispose((const void *)(v61 - 192), 8);
  _Block_object_dispose((const void *)(v61 - 144), 8);
  _Block_object_dispose((const void *)(v61 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_188FA2140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA226C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA2398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA24C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA25F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA271C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA2848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA2974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA2AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA2E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA3020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA314C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA32C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA38E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA3B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA3D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA3EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA4020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA4140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA4238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA4324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA4440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA455C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA469C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA5548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA5F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA65A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA68C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA69A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA6AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA6BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA6E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA7010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA7194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA7A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA7DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA7EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA803C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA8174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA82A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA83CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA8BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA924C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA945C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA966C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA987C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA9BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA9D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA9E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FA9F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FAA09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FAA1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FAA30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_188FAA644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL GEOSupportsOfflineMaps()
{
  _BOOL8 v0;
  void *v1;

  if (_registerSupportSourcesIfNecessary_once != -1)
    dispatch_once(&_registerSupportSourcesIfNecessary_once, &__block_literal_global_76);
  if (!GEOConfigGetBOOL(GeoOfflineConfig_SupportsOffline, (uint64_t)off_1EDF4EB68)
    || (GEOConfigGetBOOL(GeoOfflineConfig_OfflineSupportDeprecated, (uint64_t)off_1EDF4EB78) & 1) != 0)
  {
    return 0;
  }
  GEOGetURLWithSource(62, 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v0 = v1 != 0;

  return v0;
}

void ___registerSupportSourcesIfNecessary_block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _GEOOfflineSupportTileGroupObserver *v5;
  void *v6;
  id v7;

  v0 = (void *)MEMORY[0x1E0C80D38];
  _GEOConfigAddBlockListenerForKey(GeoOfflineConfig_SupportsOffline, (uint64_t)off_1EDF4EB68, MEMORY[0x1E0C80D38], &__block_literal_global_51_0);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)_MergedGlobals_227;
  _MergedGlobals_227 = v1;

  _GEOConfigAddBlockListenerForKey(GeoOfflineConfig_OfflineSupportDeprecated, (uint64_t)off_1EDF4EB78, v0, &__block_literal_global_52);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)qword_1ECDBBE38;
  qword_1ECDBBE38 = v3;

  v5 = objc_alloc_init(_GEOOfflineSupportTileGroupObserver);
  v6 = (void *)qword_1ECDBBE40;
  qword_1ECDBBE40 = (uint64_t)v5;

  +[GEOResourceManifestManager modernManager](GEOResourceManifestManager, "modernManager");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "addTileGroupObserver:queue:", qword_1ECDBBE40, v0);

}

void ___registerSupportSourcesIfNecessary_block_invoke_2()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "postNotificationName:object:", CFSTR("GEOSupportsOfflineMapsDidChangeNotificationName"), 0);

}

void ___registerSupportSourcesIfNecessary_block_invoke_3()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "postNotificationName:object:", CFSTR("GEOSupportsOfflineMapsDidChangeNotificationName"), 0);

}

void sub_188FAB9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_188FABB58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_188FAC020(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

int64x2_t std::deque<geo::TransitEdgePiece>::push_front(int64x2_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  int64x2_t result;
  void *v49;
  void *__p;
  char *v51;
  char *v52;
  char *v53;
  uint64_t *v54;

  v4 = a1[2].u64[0];
  if (!v4)
  {
    v5 = a1->i64[1];
    v6 = a1[1].i64[0];
    v7 = 16 * (v6 - v5) - 1;
    v8 = v6 - v5;
    if (v6 == v5)
      v7 = 0;
    if ((unint64_t)(v7 - a1[2].i64[1]) < 0x80)
    {
      v9 = (uint64_t)&a1[1].i64[1];
      v10 = a1[1].i64[1];
      v11 = a1->i64[0];
      v12 = v10 - a1->i64[0];
      if (v8 >= v12)
      {
        if (v10 == v11)
          v13 = 1;
        else
          v13 = v12 >> 2;
        v54 = &a1[1].i64[1];
        __p = std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v9, v13);
        v51 = (char *)__p;
        v52 = (char *)__p;
        v53 = (char *)__p + 8 * v14;
        v49 = operator new(0x1000uLL);
        std::__split_buffer<geo::TransitEdgePiece *>::push_back(&__p, &v49);
        v15 = (char *)a1->i64[1];
        v16 = v52;
        if (v15 == (char *)a1[1].i64[0])
        {
          v35 = (char *)a1->i64[1];
        }
        else
        {
          do
          {
            if (v16 == v53)
            {
              v17 = v51 - (_BYTE *)__p;
              if (v51 <= __p)
              {
                if (v16 == __p)
                  v25 = 1;
                else
                  v25 = (v16 - (_BYTE *)__p) >> 2;
                v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)v54, v25);
                v28 = v51;
                v16 = &v26[8 * (v25 >> 2)];
                v29 = v52 - v51;
                if (v52 != v51)
                {
                  v16 = &v26[8 * (v25 >> 2) + (v29 & 0xFFFFFFFFFFFFFFF8)];
                  v30 = 8 * (v29 >> 3);
                  v31 = &v26[8 * (v25 >> 2)];
                  do
                  {
                    v32 = *(_QWORD *)v28;
                    v28 += 8;
                    *(_QWORD *)v31 = v32;
                    v31 += 8;
                    v30 -= 8;
                  }
                  while (v30);
                }
                v33 = __p;
                __p = v26;
                v51 = &v26[8 * (v25 >> 2)];
                v52 = v16;
                v53 = &v26[8 * v27];
                if (v33)
                {
                  operator delete(v33);
                  v16 = v52;
                }
              }
              else
              {
                v18 = v17 >> 3;
                v19 = v17 >> 3 < -1;
                v20 = (v17 >> 3) + 2;
                if (v19)
                  v21 = v20;
                else
                  v21 = v18 + 1;
                v22 = &v51[-8 * (v21 >> 1)];
                v23 = v16 - v51;
                if (v16 != v51)
                {
                  memmove(&v51[-8 * (v21 >> 1)], v51, v16 - v51);
                  v16 = v51;
                }
                v24 = &v16[-8 * (v21 >> 1)];
                v16 = &v22[v23];
                v51 = v24;
                v52 = &v22[v23];
              }
            }
            v34 = *(_QWORD *)v15;
            v15 += 8;
            *(_QWORD *)v16 = v34;
            v16 = v52 + 8;
            v52 += 8;
          }
          while (v15 != (char *)a1[1].i64[0]);
          v35 = (char *)a1->i64[1];
        }
        v38 = (void *)a1->i64[0];
        v39 = v51;
        a1->i64[0] = (uint64_t)__p;
        a1->i64[1] = (uint64_t)v39;
        __p = v38;
        v51 = v35;
        v40 = (char *)a1[1].i64[1];
        v41 = v53;
        a1[1].i64[0] = (uint64_t)v16;
        a1[1].i64[1] = (uint64_t)v41;
        v52 = v15;
        v53 = v40;
        if (v16 - v39 == 8)
          v42 = 64;
        else
          v42 = a1[2].i64[0] + 128;
        a1[2].i64[0] = v42;
        if (v15 != v35)
          v52 = &v15[(v35 - v15 + 7) & 0xFFFFFFFFFFFFFFF8];
        if (v38)
          operator delete(v38);
      }
      else
      {
        if (v5 == v11)
        {
          __p = operator new(0x1000uLL);
          std::__split_buffer<geo::TransitEdgePiece *>::push_back(a1, &__p);
          v36 = a1[1].i64[0];
          __p = *(void **)(v36 - 8);
          a1[1].i64[0] = v36 - 8;
        }
        else
        {
          __p = operator new(0x1000uLL);
        }
        std::__split_buffer<geo::TransitEdgePiece *>::push_front((uint64_t)a1, &__p);
        if (a1[1].i64[0] - a1->i64[1] == 8)
          v37 = 64;
        else
          v37 = a1[2].i64[0] + 128;
        a1[2].i64[0] = v37;
      }
    }
    else
    {
      a1[2].i64[0] = 128;
      __p = *(void **)(v6 - 8);
      a1[1].i64[0] = v6 - 8;
      std::__split_buffer<geo::TransitEdgePiece *>::push_front((uint64_t)a1, &__p);
    }
    v4 = a1[2].u64[0];
  }
  v43 = a1->i64[1];
  v44 = (_QWORD *)(v43 + 8 * (v4 >> 7));
  v45 = *v44 + 32 * (v4 & 0x7F);
  if (a1[1].i64[0] == v43)
    v46 = 0;
  else
    v46 = v45;
  if (v46 == *v44)
    v46 = *(v44 - 1) + 4096;
  *(_QWORD *)(v46 - 32) = *(id *)a2;
  *(_QWORD *)(v46 - 24) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v46 - 16) = *(id *)(a2 + 16);
  v47 = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(v46 - 8) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(v46 - 4) = v47;
  result = vaddq_s64(a1[2], (int64x2_t)xmmword_189CC15E0);
  a1[2] = result;
  return result;
}

void sub_188FAC454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  void *v12;

  operator delete(v12);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_188FAC954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_188FACB28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188FACC1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188FACCD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188FACD8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<_GEOTileKey,std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,std::allocator<_GEOTileKey>>::__emplace_unique_key_args<_GEOTileKey,_GEOTileKey>(uint64_t a1, _QWORD *a2, _OWORD *a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v7 = GEOTileKeyHash(a2);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v9)
        v3 = v7 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v7;
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v7)
        {
          if (i[2] == *a2 && i[3] == a2[1])
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = *a3;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *i = *v22;
LABEL_42:
    *v22 = i;
    goto LABEL_43;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v21 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_188FAD070(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

id GEOGetGEOComposedStringLog()
{
  if (qword_1EDF51168 != -1)
    dispatch_once(&qword_1EDF51168, &__block_literal_global_81);
  return (id)_MergedGlobals_2;
}

void sub_188FAEAE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188FAF1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_188FAF648(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t GEOPDPlaceDataLayoutConfigurationFromGEOModuleType(int a1)
{
  if ((a1 - 1) > 0x2C)
    return 0;
  else
    return dword_189CD27D4[a1 - 1];
}

void sub_188FB3A88(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB3B50(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB3F74(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB4104(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB41F4(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB4288(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB4368(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB44A0(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB474C(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

id GEOGetGEOComposedRouteAnchorPointListLog()
{
  if (qword_1ECDBBE50 != -1)
    dispatch_once(&qword_1ECDBBE50, &__block_literal_global_126_0);
  return (id)_MergedGlobals_228;
}

void sub_188FB48A4(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB4CB8(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB5368(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB5554(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB5824(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_188FB60A8(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

uint64_t GEOSelectionTileKeyGetXYZId(uint64_t result, int *a2, _DWORD *a3, int *a4, _QWORD *a5)
{
  int v5;

  if (result)
  {
    v5 = *(_BYTE *)result & 0x7F;
    if (v5 == 10 || v5 == 11 || v5 == 19)
    {
      if (a2)
        *a2 = (*(_DWORD *)(result + 1) >> 6) & 0x1FFFFFF;
      if (a3)
        *a3 = (*(_QWORD *)(result + 1) >> 31) & 0x1FFFFFF;
      if (a4)
        *a4 = *(_DWORD *)(result + 1) & 0x3F;
      if (a5)
        *a5 = *(_QWORD *)(result + 8);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t GEORoadSelectionTileKeyMake(int a1, int a2, char a3, uint64_t a4)
{
  __int128 v5;

  LOBYTE(v5) = 19;
  *(_QWORD *)((char *)&v5 + 1) = a3 & 0x3F | ((a1 & 0x1FFFFFF) << 6) & 0x7FFFFFFFu | ((unint64_t)(a2 & 0x1FFFFFF) << 31) | (a4 << 56);
  return v5;
}

uint64_t GEOPolygonSelectionTileKeyMake(int a1, int a2, char a3, uint64_t a4)
{
  __int128 v5;

  LOBYTE(v5) = 11;
  *(_QWORD *)((char *)&v5 + 1) = a3 & 0x3F | ((a1 & 0x1FFFFFF) << 6) & 0x7FFFFFFFu | ((unint64_t)(a2 & 0x1FFFFFF) << 31) | (a4 << 56);
  return v5;
}

uint64_t GEOTransitLineSelectionTileKeyMake(int a1, int a2, char a3, uint64_t a4)
{
  __int128 v5;

  LOBYTE(v5) = 10;
  *(_QWORD *)((char *)&v5 + 1) = a3 & 0x3F | ((a1 & 0x1FFFFFF) << 6) & 0x7FFFFFFFu | ((unint64_t)(a2 & 0x1FFFFFF) << 31) | (a4 << 56);
  return v5;
}

double GEOTransitLineSelectionAdditionalInfoMake(void *a1)
{
  double result;

  objc_msgSend(a1, "coordinate");
  return result;
}

double GEOTransitLineSelectionAdditionalInfoGetLocationHint(uint64_t a1)
{
  return *(double *)&a1;
}

uint64_t GEOContourLinesTileKeyGetXYZSizeUnits(uint64_t result, _DWORD *a2, int *a3, int *a4, _DWORD *a5, _BYTE *a6)
{
  if (result)
  {
    if ((*(_BYTE *)result & 0x7F) == 0x14)
    {
      if (a2)
        *a2 = *(_DWORD *)(result + 1) >> 6;
      if (a3)
        *a3 = *(_DWORD *)(result + 5) & 0x3FFFFFF;
      if (a4)
        *a4 = *(_DWORD *)(result + 1) & 0x3F;
      if (a5)
        *a5 = (*(_QWORD *)(result + 1) >> 58) & 0xF;
      if (a6)
        *a6 = (*(_QWORD *)(result + 1) >> 62) | (4 * *(_BYTE *)(result + 9));
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t GEOContourLinesTileKeyMake(int a1, int a2, char a3, char a4, unsigned int a5)
{
  unint64_t v5;
  __int16 v6;
  __int128 v8;

  v6 = *(_WORD *)(((unint64_t)&v8 | 9) + 4);
  v5 = ((unint64_t)&v8 | 9) + 4;
  *(_BYTE *)(v5 + 2) = *(_BYTE *)(((unint64_t)&v8 | 9) + 6);
  *(_WORD *)v5 = v6;
  *(_QWORD *)((char *)&v8 + 1) = a3 & 0x3F | (a1 << 6) | ((unint64_t)(a2 & 0x3FFFFFF) << 32) | ((unint64_t)(a4 & 0xF) << 58) | ((unint64_t)a5 << 62);
  return v8;
}

void sub_188FB6864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiBSSReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  int v38;
  uint64_t v39;
  int *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  int v63;
  char v64;
  void *v65;
  GEOLatLng *v67;
  char v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 92)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFFFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 92) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_112;
        v69 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v68 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_112;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_112:
      if ((v15 & 1) != 0)
      {
        v62 = 1;
        goto LABEL_114;
      }
      if (v16)
      {
        while (1)
        {
          v63 = *v16++;
          v64 = 4;
          switch(v63)
          {
            case 0:
              goto LABEL_124;
            case 1:
              goto LABEL_123;
            case 2:
              v64 = 16;
              goto LABEL_123;
            case 3:
              v64 = 2;
              goto LABEL_123;
            case 4:
              v64 = 32;
              goto LABEL_123;
            case 6:
              v64 = 8;
LABEL_123:
              *(_BYTE *)(a1 + 92) |= v64;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_124;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v69 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_85;
        if ((*(_BYTE *)(a1 + 92) & 4) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v36;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_129;
        v55 = 32 * *(_BYTE *)(a1 + 92);
        goto LABEL_97;
      case 2:
        if (!v31)
          goto LABEL_85;
        if ((*(_BYTE *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v55 = 8 * *(_BYTE *)(a1 + 92);
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v67 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v67, (void *)v3))
          goto LABEL_128;
        PBReaderRecallMark();
        v39 = 56;
        goto LABEL_80;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 92) & 2) != 0)
          goto LABEL_85;
        if (v28 != 2)
        {
          v56 = 0;
          v57 = 0;
          v58 = 0;
          while (1)
          {
            v59 = *v17;
            v60 = *(_QWORD *)(v3 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(v3 + *v6))
              break;
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v60);
            *(_QWORD *)(v3 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v26 = v57++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_111;
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_111:
          PBRepeatedInt32Add();
          goto LABEL_98;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_129;
        while (1)
        {
          v40 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v41 = 0;
          v42 = 0;
          v43 = 0;
          while (1)
          {
            v44 = *v17;
            v45 = *(_QWORD *)(v3 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(v3 + *v6))
              break;
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              v26 = v42++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_61;
          }
          *(_BYTE *)(v3 + *v40) = 1;
LABEL_61:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v68;
        goto LABEL_99;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 92) & 0x20) != 0)
        {
          v53 = PBReaderSkipValueWithTag();
          v15 = v68;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
            goto LABEL_127;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v67 = objc_alloc_init(GEOWiFiQualityProfile);
        if (!GEOWiFiQualityProfileReadAllFrom((uint64_t)v67, (void *)v3, v9 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        -[GEOWiFiBSS _addNoFlagsQualities:](a1, v67);

        goto LABEL_98;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_85;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_BYTE *)(a1 + 92) |= 1u;
        while (2)
        {
          v50 = *v17;
          v51 = *(_QWORD *)(v3 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v51);
            *(_QWORD *)(v3 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v26 = v48++ >= 9;
              if (v26)
              {
                v49 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v49 = 0;
LABEL_90:
        *(_QWORD *)(a1 + 72) = v49;
        goto LABEL_99;
      case 6:
        if (!v31)
        {
LABEL_85:
          v54 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v68;
          if ((v54 & 1) == 0)
          {
LABEL_127:
            v62 = 0;
            goto LABEL_114;
          }
LABEL_99:
          if (!(v15 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_112;
          continue;
        }
        if ((*(_BYTE *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v55 = 16 * *(_BYTE *)(a1 + 92);
LABEL_97:
          v7 += v55 >> 7;
LABEL_98:
          v15 = v68;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v67 = objc_alloc_init(GEOLatLngE7);
        if (GEOLatLngE7ReadAllFrom((uint64_t)v67, (void *)v3))
        {
          PBReaderRecallMark();
          v39 = 48;
LABEL_80:
          v37 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v67;
LABEL_81:

          --v7;
          goto LABEL_98;
        }
LABEL_128:

LABEL_129:
        v62 = 0;
        v15 = v68;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_114:
        *(_BYTE *)(a1 + 92) |= 4u;
        *(_BYTE *)(a1 + 92) |= 0x10u;
        *(_BYTE *)(a1 + 92) |= 2u;
        *(_BYTE *)(a1 + 92) |= 0x20u;
        *(_BYTE *)(a1 + 92) |= 8u;
        if ((v62 & 1) != 0)
        {
LABEL_124:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_125;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_125:
        v65 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v68;
        if (!v38)
          goto LABEL_127;
        goto LABEL_99;
    }
  }
}

void sub_188FB7220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FB7364(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FB778C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FB7B2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FB8574(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiBSSCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[8];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOWiFiBSSReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t v6;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiBSSReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiBSSReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiBSSReadAllFrom_initialTag;
  v6 = GEOWiFiBSSReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiBSSCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v6;
}

void sub_188FB882C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiBSSReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t v4;

  v3 = a2;
  objc_sync_enter(v3);
  v4 = GEOWiFiBSSReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return v4;
}

void sub_188FB888C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiBSSIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_63;
          goto LABEL_20;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_63;
          goto LABEL_48;
        case 3u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_63:
              PBReaderRecallMark();
              return 0;
            }
LABEL_53:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v27 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v28 = *v2;
                v29 = *(_QWORD *)&a1[v28];
                if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
                  break;
                v30 = v29 + 1;
                v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
                *(_QWORD *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  v12 = v27++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_53;
              }
              a1[*v4] = 1;
            }
LABEL_48:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_63;
            while (1)
            {
              v16 = *v2;
              v17 = *(_QWORD *)&a1[v16];
              if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
                break;
              v18 = v17 + 1;
              v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
              *(_QWORD *)&a1[v16] = v18;
              if (v19 < 0)
              {
                v20 = v14++;
                if (v20 <= 8)
                  continue;
              }
              goto LABEL_50;
            }
LABEL_49:
            a1[*v4] = 1;
          }
LABEL_50:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_62;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityProfileIsValid(a1))
            goto LABEL_63;
          goto LABEL_48;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_63;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v24 = v23 + 1;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0 && v21++ <= 8)
              continue;
            goto LABEL_50;
          }
        case 6u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOLatLngE7IsValid(a1))
            goto LABEL_48;
          goto LABEL_63;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_63;
          goto LABEL_50;
      }
    }
  }
LABEL_62:
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOWiFiQualityProfileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityHoursIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityIndexIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188FB90F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiBSSIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = (*(_BYTE *)(a1 + 92) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_188FB95FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FB9C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiESSReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  int *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  int *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  GEOWiFiBSS *v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  __int16 v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  int v93;
  __int16 v94;
  void *v95;
  GEOWiFiBSS *v97;
  char v98;
  char v99;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 136)), (uint16x4_t)0xFFFBFFF8FFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 136) >> 10) & 1)+ ((*(_WORD *)(a1 + 136) >> 4) & 1)+ ((*(_WORD *)(a1 + 136) >> 9) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 4;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_168;
        v99 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v98 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_168;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_168:
      if ((v15 & 1) != 0)
      {
        v92 = 1;
        goto LABEL_170;
      }
      if (v16)
      {
        while (1)
        {
          v93 = *v16++;
          v94 = 128;
          switch(v93)
          {
            case 0:
              goto LABEL_182;
            case 1:
              goto LABEL_181;
            case 2:
              v94 = 64;
              goto LABEL_181;
            case 3:
              v94 = 256;
              goto LABEL_181;
            case 4:
              v94 = 32;
              goto LABEL_181;
            case 5:
              v94 = 1024;
              goto LABEL_181;
            case 6:
              v94 = 16;
              goto LABEL_181;
            case 8:
              v94 = 512;
LABEL_181:
              *(_WORD *)(a1 + 136) |= v94;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_182;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v99 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_124;
        if ((*(_WORD *)(a1 + 136) & 0x80) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 72;
          goto LABEL_50;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_187;
        v79 = *(_WORD *)(a1 + 136) << 8;
        goto LABEL_149;
      case 2:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x40) != 0)
          goto LABEL_124;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_187;
        v97 = objc_alloc_init(GEOWiFiBSS);
        if (!GEOWiFiBSSReadAllFrom((uint64_t)v97, (void *)v3, v9 & 1))
          goto LABEL_186;
        PBReaderRecallMark();
        -[GEOWiFiESS _addNoFlagsBss:](a1, v97);
        goto LABEL_98;
      case 3:
        if (!v31)
          goto LABEL_124;
        if ((*(_WORD *)(a1 + 136) & 0x100) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 80;
LABEL_50:
          v39 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;

          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v98;
          --v7;
          goto LABEL_125;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_187;
        v79 = *(_WORD *)(a1 + 136) << 7;
LABEL_149:
        v7 += v79 >> 15;
        goto LABEL_167;
      case 4:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x20) != 0)
          goto LABEL_124;
        if (v28 != 2)
        {
          v80 = 0;
          v81 = 0;
          v82 = 0;
          while (1)
          {
            v83 = *v17;
            v84 = *(_QWORD *)(v3 + v83);
            if (v84 == -1 || v84 >= *(_QWORD *)(v3 + *v6))
              goto LABEL_165;
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v84);
            *(_QWORD *)(v3 + v83) = v84 + 1;
            v82 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              v26 = v81++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_187;
        while (1)
        {
          v40 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_150;
          v41 = 0;
          v42 = 0;
          v43 = 0;
          while (1)
          {
            v44 = *v17;
            v45 = *(_QWORD *)(v3 + v44);
            if (v45 == -1 || v45 >= *(_QWORD *)(v3 + *v6))
              break;
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              v26 = v42++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_65;
          }
          *(_BYTE *)(v3 + *v40) = 1;
LABEL_65:
          PBRepeatedInt32Add();
        }
      case 5:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x400) != 0)
          goto LABEL_124;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_187;
        v97 = objc_alloc_init(GEOWiFiQualityProfile);
        if (GEOWiFiQualityProfileReadAllFrom((uint64_t)v97, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOWiFiESS _addNoFlagsQualities:](a1, v97);
LABEL_98:
          v60 = v97;
LABEL_99:

LABEL_167:
          v15 = v98;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_125:
          if (!(v15 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_168;
          continue;
        }
LABEL_186:

LABEL_187:
        v92 = 0;
        v15 = v98;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_170:
        *(_WORD *)(a1 + 136) |= 0x80u;
        *(_WORD *)(a1 + 136) |= 0x40u;
        *(_WORD *)(a1 + 136) |= 0x100u;
        *(_WORD *)(a1 + 136) |= 0x20u;
        *(_WORD *)(a1 + 136) |= 0x400u;
        *(_WORD *)(a1 + 136) |= 0x10u;
        *(_WORD *)(a1 + 136) |= 0x200u;
        if ((v92 & 1) != 0)
        {
LABEL_182:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_183;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_183:
        v95 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 6:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x10) != 0)
          goto LABEL_124;
        if (v28 != 2)
        {
          v86 = 0;
          v87 = 0;
          v88 = 0;
          while (1)
          {
            v89 = *v17;
            v90 = *(_QWORD *)(v3 + v89);
            if (v90 == -1 || v90 >= *(_QWORD *)(v3 + *v6))
              break;
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v90);
            *(_QWORD *)(v3 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              v26 = v87++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
LABEL_165:
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_166:
          PBRepeatedInt32Add();
          goto LABEL_167;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_187;
        while (1)
        {
          v47 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (1)
          {
            v51 = *v17;
            v52 = *(_QWORD *)(v3 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(v3 + *v6))
              break;
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v52);
            *(_QWORD *)(v3 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v26 = v49++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_85;
          }
          *(_BYTE *)(v3 + *v47) = 1;
LABEL_85:
          PBRepeatedInt32Add();
        }
LABEL_150:
        PBReaderRecallMark();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v98;
        goto LABEL_125;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_124;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 136) |= 1u;
        while (2)
        {
          v57 = *v17;
          v58 = *(_QWORD *)(v3 + v57);
          if (v58 == -1 || v58 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v58);
            *(_QWORD *)(v3 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v26 = v55++ >= 9;
              if (v26)
              {
                v56 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v56 = 0;
LABEL_131:
        *(_QWORD *)(a1 + 104) = v56;
        goto LABEL_125;
      case 8:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x200) != 0)
          goto LABEL_124;
        PBReaderReadString();
        v60 = (GEOWiFiBSS *)objc_claimAutoreleasedReturnValue();
        if (!v60)
          goto LABEL_99;
        v97 = v60;
        -[GEOWiFiESS _addNoFlagsOwnerIdentifier:](a1, v60);
        goto LABEL_98;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_124;
        v61 = 0;
        v62 = 0;
        v63 = 0;
        *(_WORD *)(a1 + 136) |= 2u;
        while (2)
        {
          v64 = *v17;
          v65 = *(_QWORD *)(v3 + v64);
          if (v65 == -1 || v65 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v65);
            *(_QWORD *)(v3 + v64) = v65 + 1;
            v63 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v26 = v62++ >= 9;
              if (v26)
              {
                LODWORD(v63) = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v63) = 0;
LABEL_135:
        v78 = 124;
        goto LABEL_144;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_124;
        v67 = 0;
        v68 = 0;
        v63 = 0;
        *(_WORD *)(a1 + 136) |= 4u;
        while (2)
        {
          v69 = *v17;
          v70 = *(_QWORD *)(v3 + v69);
          if (v70 == -1 || v70 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v70);
            *(_QWORD *)(v3 + v69) = v70 + 1;
            v63 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              v26 = v68++ >= 9;
              if (v26)
              {
                LODWORD(v63) = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v63) = 0;
LABEL_139:
        v78 = 128;
        goto LABEL_144;
      case 11:
        if ((v8 & 1) != 0)
        {
          v72 = 0;
          v73 = 0;
          v63 = 0;
          *(_WORD *)(a1 + 136) |= 8u;
          while (1)
          {
            v74 = *v17;
            v75 = *(_QWORD *)(v3 + v74);
            if (v75 == -1 || v75 >= *(_QWORD *)(v3 + *v6))
              break;
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v75);
            *(_QWORD *)(v3 + v74) = v75 + 1;
            v63 |= (unint64_t)(v76 & 0x7F) << v72;
            if ((v76 & 0x80) == 0)
              goto LABEL_141;
            v72 += 7;
            v26 = v73++ >= 9;
            if (v26)
            {
              LODWORD(v63) = 0;
              goto LABEL_143;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_141:
          if (*(_BYTE *)(v3 + *v18))
            LODWORD(v63) = 0;
LABEL_143:
          v78 = 132;
LABEL_144:
          *(_DWORD *)(a1 + v78) = v63;
        }
        else
        {
LABEL_124:
          v77 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v98;
          if ((v77 & 1) == 0)
          {
LABEL_185:
            v92 = 0;
            goto LABEL_170;
          }
        }
        goto LABEL_125;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v98;
        if (!v38)
          goto LABEL_185;
        goto LABEL_125;
    }
  }
}

void sub_188FBA9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FBACE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FBAE24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FBB268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FBB59C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FBBA68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FBD734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiESSCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 64);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 96);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOWiFiESSReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t v6;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiESSReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiESSReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiESSReadAllFrom_initialTag;
  v6 = GEOWiFiESSReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiESSCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return v6;
}

void sub_188FBDA5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiESSReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t v4;

  v3 = a2;
  objc_sync_enter(v3);
  v4 = GEOWiFiESSReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return v4;
}

void sub_188FBDABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  BOOL v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  _BOOL8 v57;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_105;
          goto LABEL_54;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiBSSIsValid(a1))
            goto LABEL_105;
          goto LABEL_37;
        case 3u:
          if (v14 == 2)
            goto LABEL_54;
          goto LABEL_105;
        case 4u:
          if (v14 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_105;
            while (1)
            {
              v16 = *v2;
              v17 = *(_QWORD *)&a1[v16];
              if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
                goto LABEL_80;
              v18 = v17 + 1;
              v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
              *(_QWORD *)&a1[v16] = v18;
              if (v19 < 0)
              {
                v20 = v14++;
                if (v20 <= 8)
                  continue;
              }
              goto LABEL_81;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_105;
LABEL_84:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v47 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v48 = *v2;
              v49 = *(_QWORD *)&a1[v48];
              if (v49 == -1 || v49 >= *(_QWORD *)&a1[*v3])
                break;
              v50 = v49 + 1;
              v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
              *(_QWORD *)&a1[v48] = v50;
              if (v51 < 0)
              {
                v12 = v47++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_84;
            }
            a1[*v4] = 1;
          }
          goto LABEL_37;
        case 5u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOWiFiQualityProfileIsValid(a1))
            goto LABEL_37;
          goto LABEL_105;
        case 6u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_105:
              PBReaderRecallMark();
              return 0;
            }
LABEL_94:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v52 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v53 = *v2;
                v54 = *(_QWORD *)&a1[v53];
                if (v54 == -1 || v54 >= *(_QWORD *)&a1[*v3])
                  break;
                v55 = v54 + 1;
                v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
                *(_QWORD *)&a1[v53] = v55;
                if (v56 < 0)
                {
                  v12 = v52++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_94;
              }
              a1[*v4] = 1;
            }
LABEL_37:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_105;
            while (1)
            {
              v21 = *v2;
              v22 = *(_QWORD *)&a1[v21];
              if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
                break;
              v23 = v22 + 1;
              v24 = *(char *)(*(_QWORD *)&a1[*v5] + v22);
              *(_QWORD *)&a1[v21] = v23;
              if (v24 < 0)
              {
                v25 = v14++;
                if (v25 <= 8)
                  continue;
              }
              goto LABEL_81;
            }
LABEL_80:
            a1[*v4] = 1;
          }
LABEL_81:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_103;
          break;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_105;
          v26 = 0;
          while (1)
          {
            v27 = *v2;
            v28 = *(_QWORD *)&a1[v27];
            if (v28 == -1 || v28 >= *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v29 = v28 + 1;
            v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
            *(_QWORD *)&a1[v27] = v29;
            if (v30 < 0)
            {
              v31 = v26++ > 8;
              if (!v31)
                continue;
            }
            goto LABEL_81;
          }
        case 8u:
          if (v14 == 2)
            goto LABEL_54;
          goto LABEL_105;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_105;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v35 = v34 + 1;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v31 = v32++ > 8;
              if (!v31)
                continue;
            }
            goto LABEL_81;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_105;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            if (v39 == -1 || v39 >= *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v40 = v39 + 1;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v31 = v37++ > 8;
              if (!v31)
                continue;
            }
            goto LABEL_81;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_105;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            if (v44 == -1 || v44 >= *(_QWORD *)&a1[*v3])
              goto LABEL_80;
            v45 = v44 + 1;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v31 = v42++ > 8;
              if (!v31)
                continue;
            }
            goto LABEL_81;
          }
        default:
LABEL_54:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          goto LABEL_81;
      }
    }
  }
LABEL_103:
  v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

void sub_188FBE4B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiESSIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  if ((*(_WORD *)(a1 + 136) & 0xFF0) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 136) & 0x400) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 96);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOWiFiQualityProfileIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOWiFiESSIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOWiFiESSIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)v2;
  }
  return result;
}

void sub_188FBEEF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSMatchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOWiFiESS *v25;
  void *v26;
  _BOOL8 v27;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v25 = objc_alloc_init(GEOWiFiESS);
          if (!GEOWiFiESSReadAllFrom((uint64_t)v25, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v12 >> 3) == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v22 = *v6;
            v23 = *(_QWORD *)&v5[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&v5[*v7])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v23);
            *(_QWORD *)&v5[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v19 += 7;
            v16 = v20++ >= 9;
            if (v16)
            {
              LODWORD(v21) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8])
            LODWORD(v21) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_188FBFE00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSMatchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiESSMatchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FBFE60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSMatchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_188FC05E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityHoursReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  int *v13;
  int *v14;
  int *v15;
  BOOL v16;
  _BOOL4 v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  _BOOL4 v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1) + (*(_BYTE *)(a1 + 76) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(v3 + *v6))
  {
    if (v13)
      v16 = (v9 & 1 | v10) != 0;
    else
      v16 = 1;
    if (v8)
      v17 = 1;
    else
      v17 = (v9 & 1 | v10) != 0;
    v52 = v17;
    v18 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(v3 + *v15))
        goto LABEL_82;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      while (1)
      {
        v22 = *v14;
        v23 = *(_QWORD *)(v3 + v22);
        if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
          break;
        v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
        *(_QWORD *)(v3 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0)
          goto LABEL_30;
        v19 += 7;
        v25 = v20++ >= 9;
        if (v25)
        {
          v21 = 0;
          v26 = *(unsigned __int8 *)(v3 + *v15);
          goto LABEL_32;
        }
      }
      *(_BYTE *)(v3 + *v15) = 1;
LABEL_30:
      v26 = *(unsigned __int8 *)(v3 + *v15);
      if (*(_BYTE *)(v3 + *v15))
        v21 = 0;
LABEL_32:
      v27 = v21 & 7;
      if (v26 || v27 == 4)
        goto LABEL_82;
      v29 = v21 >> 3;
      v30 = v12;
      if (!v16)
      {
        v31 = v13;
        do
        {
          v33 = *v31++;
          v32 = v33;
          v30 = v33 != 0;
          if (v33)
            v34 = v32 == (_DWORD)v29;
          else
            v34 = 1;
        }
        while (!v34);
      }
      if ((_DWORD)v29 == 2)
        break;
      if ((_DWORD)v29 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_96;
        goto LABEL_68;
      }
      if (!v30 || (*(_BYTE *)(a1 + 76) & 1) != 0)
        goto LABEL_67;
      if (v27 != 2)
      {
        v41 = 0;
        v42 = 0;
        v43 = 0;
        while (1)
        {
          v44 = *v14;
          v45 = *(_QWORD *)(v3 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v45);
          *(_QWORD *)(v3 + v44) = v45 + 1;
          v43 |= (unint64_t)(v46 & 0x7F) << v41;
          if (v46 < 0)
          {
            v41 += 7;
            v25 = v42++ >= 9;
            if (!v25)
              continue;
          }
          goto LABEL_81;
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_81:
        PBRepeatedInt32Add();
        goto LABEL_68;
      }
      if (!PBReaderPlaceMark())
        goto LABEL_96;
      while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
      {
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (1)
        {
          v38 = *v14;
          v39 = *(_QWORD *)(v3 + v38);
          if (v39 == -1 || v39 >= *(_QWORD *)(v3 + *v6))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
          *(_QWORD *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if (v40 < 0)
          {
            v35 += 7;
            v25 = v36++ >= 9;
            if (!v25)
              continue;
          }
          goto LABEL_59;
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_59:
        PBRepeatedInt32Add();
      }
      PBReaderRecallMark();
      if (!v52)
        goto LABEL_82;
LABEL_69:
      if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
        goto LABEL_82;
    }
    if (!v30 || (*(_BYTE *)(a1 + 76) & 2) != 0)
    {
LABEL_67:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_96;
    }
    else
    {
      if (!PBReaderPlaceMark()
        || (-[GEOWiFiQualityHours _reserveTimeRanges:](a1, 1uLL),
            !GEOWiFiQualityTimeRangeReadAllFrom(*(_QWORD *)(a1 + 40) + 12 * *(_QWORD *)(a1 + 48), v3)))
      {
LABEL_96:
        v47 = 0;
        goto LABEL_84;
      }
      PBReaderRecallMark();
      ++*(_QWORD *)(a1 + 48);
    }
LABEL_68:
    if (!v52)
      goto LABEL_82;
    goto LABEL_69;
  }
LABEL_82:
  if (!v12)
  {
    if (v13)
    {
      do
      {
        while (1)
        {
          v49 = *v13++;
          v48 = v49;
          if (v49 != 1 && v48 != 2)
            break;
          *(_BYTE *)(a1 + 76) |= v48;
        }
      }
      while (v48);
    }
    goto LABEL_93;
  }
  v47 = 1;
LABEL_84:
  *(_BYTE *)(a1 + 76) |= 1u;
  *(_BYTE *)(a1 + 76) |= 2u;
  if ((v47 & 1) != 0)
  {
LABEL_93:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if (v12)
      goto LABEL_94;
    return v3;
  }
  v3 = 0;
  if (!v12)
    return v3;
LABEL_94:
  v50 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_188FC0FAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FC1ADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityHoursReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualityHoursReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualityHoursReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualityHoursReadAllFrom_initialTag;
  Specified = GEOWiFiQualityHoursReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188FC1C68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityHoursReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityHoursReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FC1CC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityHoursIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_45;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_45;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_47;
LABEL_34:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v21 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
                break;
              v24 = v23 + 1;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0)
              {
                v12 = v21++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
LABEL_30:
          PBReaderRecallMark();
          goto LABEL_44;
        }
        if ((v8 & 7) != 0)
          goto LABEL_47;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v14++;
            if (v20 <= 8)
              continue;
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_47;
      }
LABEL_44:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_45;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityTimeRangeIsValid(a1))
    {
LABEL_47:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_30;
  }
LABEL_45:
  v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

BOOL GEOWiFiQualityTimeRangeIsValid(void *a1)
{
  _BOOL8 AllFrom;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = objc_msgSend(a1, "position");
  v7 = objc_msgSend(a1, "length");
  v5 = 0;
  v4 = 0;
  AllFrom = GEOWiFiQualityTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_188FC21DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityTimeRangeWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 8);
  if ((v2 & 1) != 0)
  {
    result = PBDataWriterWriteUint32Field();
    v2 = *(_BYTE *)(v1 + 8);
  }
  if ((v2 & 2) != 0)
    return PBDataWriterWriteUint32Field();
  return result;
}

BOOL GEOWiFiQualityHoursIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_188FC254C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityIndexReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  _BOOL8 v30;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 == -1 || v28 >= *(_QWORD *)&v3[*v5])
              break;
            v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
            *(_QWORD *)&v3[v27] = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0)
            {
              v24 = &OBJC_IVAR___GEOWiFiQualityIndex__value;
              goto LABEL_40;
            }
            v25 += 7;
            v23 = v26++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___GEOWiFiQualityIndex__value;
              goto LABEL_42;
            }
          }
          v24 = &OBJC_IVAR___GEOWiFiQualityIndex__value;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
            {
              v24 = &OBJC_IVAR___GEOWiFiQualityIndex__type;
              goto LABEL_39;
            }
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___GEOWiFiQualityIndex__type;
              goto LABEL_42;
            }
          }
          v24 = &OBJC_IVAR___GEOWiFiQualityIndex__type;
        }
LABEL_40:
        if (v3[*v6])
          LODWORD(v19) = 0;
LABEL_42:
        *(_DWORD *)(a1 + *v24) = v19;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_188FC2F38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityIndexReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityIndexReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FC2F98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityIndexIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v15++ > 8;
            if (!v20)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v21 = 0;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v24 = v23 + 1;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0)
      {
        v20 = v21++ > 8;
        if (!v20)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

void sub_188FC36B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOLocation *v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  char v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  _BOOL4 v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v54 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_76;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        v47 = 1;
        goto LABEL_91;
      }
      if (!v15)
        goto LABEL_92;
      while (1)
      {
        v50 = *v15++;
        v49 = v50;
        if (v50 == 1)
          break;
        if (v49 == 2)
        {
          v48 = 4;
LABEL_82:
          *(_BYTE *)(a1 + 52) |= v48;
        }
        else if (!v49)
        {
          goto LABEL_92;
        }
      }
      v48 = 2;
      goto LABEL_82;
    }
    v30 = v23 >> 3;
    v31 = v16;
    if (!v54)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
    {
      if ((v8 & 1) != 0)
      {
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (1)
        {
          v41 = *v18;
          v42 = *(_QWORD *)(v3 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
          *(_QWORD *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0)
            goto LABEL_66;
          v38 += 7;
          v27 = v39++ >= 9;
          if (v27)
          {
            v40 = 0;
            goto LABEL_68;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_66:
        if (*(_BYTE *)(v3 + *v19))
          v40 = 0;
LABEL_68:
        *(_QWORD *)(a1 + 24) = v40;
        goto LABEL_72;
      }
      goto LABEL_63;
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 != 1)
    {
      v44 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
        goto LABEL_87;
      goto LABEL_72;
    }
    if (v31)
    {
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_88:
          v47 = 0;
          goto LABEL_90;
        }
        v7 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_88;
        v53 = v16;
        v36 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          goto LABEL_89;
        PBReaderRecallMark();
        v37 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v36;

        --v7;
LABEL_60:
        v16 = v53;
      }
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_72;
    }
LABEL_63:
    v45 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
LABEL_87:
      v47 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v7)
      v46 = 1;
    else
      v46 = v16;
    if ((v46 & 1) == 0)
      goto LABEL_76;
  }
  if (!v31 || (*(_BYTE *)(a1 + 52) & 4) != 0)
    goto LABEL_63;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_88;
  v53 = v16;
  v36 = objc_alloc_init(GEOWiFiQualitySearchTile);
  if (GEOWiFiQualitySearchTileReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityLocationSearch _addNoFlagsTiles:](a1, v36);

    goto LABEL_60;
  }
LABEL_89:

  v47 = 0;
  v16 = v53;
LABEL_90:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v47 & 1) != 0)
  {
LABEL_92:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_93;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_93:
      v51 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188FC3D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FC4644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityLocationSearchCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOWiFiQualityLocationSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualityLocationSearchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualityLocationSearchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualityLocationSearchReadAllFrom_initialTag;
  Specified = GEOWiFiQualityLocationSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiQualityLocationSearchCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188FC48E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityLocationSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FC4948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityLocationSearchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualitySearchTileIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if ((_DWORD)v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_43;
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOWiFiQualitySearchTileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v15++ > 8;
            if (!v20)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v21 = 0;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v24 = v23 + 1;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0)
      {
        v20 = v21++ > 8;
        if (!v20)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

void sub_188FC5034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityLocationSearchIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 16)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOWiFiQualityLocationSearchIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWiFiQualityLocationSearchIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOWiFiQualityLocationSearchClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLocation")
    && (objc_msgSend(a1, "location"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "location");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "location");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEOWiFiQualityLocationSearchHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "location");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188FC55CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FC5A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOWiFiESS *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  void *v35;
  int v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  char v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v56 = (v15 == 0) | v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_86;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_86:
      if ((v16 & 1) != 0)
      {
        v50 = 1;
        goto LABEL_97;
      }
      if (v15)
      {
        while (1)
        {
          v51 = *v15++;
          v52 = 8;
          switch(v51)
          {
            case 0:
              goto LABEL_98;
            case 1:
              goto LABEL_92;
            case 4:
              v52 = 4;
              goto LABEL_92;
            case 5:
              v52 = 16;
LABEL_92:
              *(_BYTE *)(a1 + 64) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_98;
    }
    v29 = v22 >> 3;
    v30 = (char)v16;
    if ((v56 & 1) == 0)
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_94;
          v55 = (int)v16;
          v16 = objc_alloc_init(GEOLocation);
          if (GEOLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v35 = *(void **)(a1 + 24);
            *(_QWORD *)(a1 + 24) = v16;

            --v7;
            goto LABEL_71;
          }
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_94;
        v7 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
        goto LABEL_84;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v40 = *v17;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
            *(_QWORD *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v26 = v38++ >= 9;
              if (v26)
              {
                v39 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v39 = 0;
LABEL_77:
        *(_QWORD *)(a1 + 32) = v39;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v46 = *v17;
          v47 = *(_QWORD *)(v3 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v47);
            *(_QWORD *)(v3 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v45) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v45) = 0;
LABEL_81:
        *(_DWORD *)(a1 + 60) = v45;
        goto LABEL_85;
      case 4:
        if (!v30 || (*(_BYTE *)(a1 + 64) & 4) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v55 = (int)v16;
        v16 = objc_alloc_init(GEOWiFiESS);
        if (!GEOWiFiESSReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_95;
        PBReaderRecallMark();
        -[GEOWiFiQualityLocationSearchResult _addNoFlagsEss:](a1, v16);
        goto LABEL_70;
      case 5:
        if (!v30 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
LABEL_72:
          v49 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v49 & 1) == 0)
          {
LABEL_93:
            v50 = 0;
            goto LABEL_97;
          }
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) != 0)
        {
          v55 = (int)v16;
          v16 = objc_alloc_init(GEOWiFiQualitySearchResultTile);
          if (!GEOWiFiQualitySearchResultTileReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
LABEL_95:

            v50 = 0;
            LOBYTE(v16) = v55;
            goto LABEL_96;
          }
          PBReaderRecallMark();
          -[GEOWiFiQualityLocationSearchResult _addNoFlagsTile:](a1, v16);
LABEL_70:

LABEL_71:
          LODWORD(v16) = v55;
LABEL_84:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_86;
          continue;
        }
LABEL_94:
        v50 = 0;
LABEL_96:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        *(_BYTE *)(a1 + 64) |= 8u;
        *(_BYTE *)(a1 + 64) |= 4u;
        *(_BYTE *)(a1 + 64) |= 0x10u;
        if ((v50 & 1) != 0)
        {
LABEL_98:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_99;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_99:
            v53 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v36 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_93;
        goto LABEL_85;
    }
  }
}

