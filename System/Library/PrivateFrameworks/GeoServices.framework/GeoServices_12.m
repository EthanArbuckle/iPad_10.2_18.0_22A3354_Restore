void sub_18911C890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911D1CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDETAFilterCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEOPDETAFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDETAFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDETAFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDETAFilterReadAllFrom_initialTag;
  Specified = GEOPDETAFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDETAFilterCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18911DAF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911DD84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDETAFilterIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x410) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOAutomobileOptionsIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOCyclingOptionsIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOTransitOptionsIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x200) == 0)
    return (v2 & 0x40) != 0 && GEOClientCapabilitiesIsDirty(*(_QWORD *)(a1 + 56));
  if (GEOWalkingOptionsIsDirty(*(_QWORD *)(a1 + 80)))
    return 1;
  v2 = *(_WORD *)(a1 + 104);
  return (v2 & 0x40) != 0 && GEOClientCapabilitiesIsDirty(*(_QWORD *)(a1 + 56));
}

os_unfair_lock_s *GEOPDETAFilterIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDETAFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18911E134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911E66C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEVChargerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDPlug *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
LABEL_76:
      v58 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_77;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v7 & 1) != 0)
      {
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v41 = *v18;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_69;
          v38 += 7;
          v28 = v39++ >= 9;
          if (v28)
          {
            v40 = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          v40 = 0;
LABEL_71:
        *(_QWORD *)(a1 + 40) = v40;
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32 && (*(_BYTE *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v37 = objc_alloc_init(GEOPDPlug);
        if (!GEOPDPlugReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        -[GEOPDEVCharger _addNoFlagsPlug:](a1, v37);

        v19 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_66;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
      goto LABEL_76;
    }
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if (!v32)
    goto LABEL_65;
  if ((*(_BYTE *)(a1 + 60) & 4) != 0)
  {
    v51 = PBReaderSkipValueWithTag();
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v51 & 1) == 0)
      goto LABEL_97;
    v8 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
    goto LABEL_74;
  }
  v45 = PBReaderPlaceMark();
  v6 = (int *)MEMORY[0x1E0D82BD8];
  if ((v45 & 1) == 0)
    goto LABEL_97;
  v37 = objc_alloc_init(GEOPDAvailabilityInfo);
  if (GEOPDAvailabilityInfoReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v46 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v37;

    --v8;
LABEL_74:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOXPCReply__methodName;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[938]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[938]) |= 8u;
    *(_BYTE *)(a1 + v58[938]) |= 4u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v58[938]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18911EE88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911F344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDEVChargerCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDPlug readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDEVChargerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDEVChargerReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDEVChargerReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDEVChargerReadAllFrom_initialTag;
  Specified = GEOPDEVChargerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDEVChargerCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18911F694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911F8F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911FB74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEVChargerFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189120170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnhancedPlacementFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189120E70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891210A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDEnrichmentDataEntity *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v52 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 != 2)
      break;
    if (v35)
    {
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        PBReaderReadData();
        v41 = objc_claimAutoreleasedReturnValue();
        v42 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v41;

        --v10;
      }
      goto LABEL_58;
    }
LABEL_54:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_61:
      v53 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v55 & 1 | (v10 != 0)))
      goto LABEL_60;
  }
  if ((_DWORD)v34 != 1)
  {
    if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
    goto LABEL_54;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_54;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOPDEnrichmentDataEntity);
  if (GEOPDEnrichmentDataEntityReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDEnrichmentData _addNoFlagsEntity:](a1, v40);

LABEL_58:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_59;
  }

LABEL_81:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOXPCReply__methodName;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_62:
  if ((v54 & 1) == 0)
    goto LABEL_64;
LABEL_63:
  *(_BYTE *)(a1 + v53[949]) |= 1u;
LABEL_64:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[949]) |= 2u;
    *(_BYTE *)(a1 + v53[949]) |= 4u;
    goto LABEL_74;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
        v47 = 4;
LABEL_70:
        *(_BYTE *)(a1 + v53[949]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_74;
      }
    }
    v47 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189121794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189121BFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDEnrichmentDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDEnrichmentDataEntity readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDEnrichmentDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDEnrichmentDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDEnrichmentDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDEnrichmentDataReadAllFrom_initialTag;
  Specified = GEOPDEnrichmentDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDEnrichmentDataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189121F4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189122188(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891223D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891226AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentDataEntityReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDEnrichmentInfo *v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void *v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFCFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v61 = v16 & ~(_BYTE)v11 | v9;
        v62 = v16 | v11 | v61;
        v60 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v63 = (v17 == 0) | v16 | v11;
        v64 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_86;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_86:
      v58 = 1;
      goto LABEL_87;
    }
    v31 = v23 >> 3;
    v32 = v64;
    if ((v63 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_105;
          v37 = objc_alloc_init(GEOPDEnrichmentInfo);
          if (GEOPDEnrichmentInfoReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v38 = *(void **)(a1 + 32);
            *(_QWORD *)(a1 + 32) = v37;
            goto LABEL_57;
          }

          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v53 = 16 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      case 2:
        if (!v32)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v53 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_83;
      case 3:
        if (!v32)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadData();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 40;
LABEL_56:
          v38 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;
LABEL_57:

          --v8;
LABEL_84:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_85;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v53 = 8 * *(_BYTE *)(a1 + 72);
LABEL_83:
          v8 += v53 >> 7;
          goto LABEL_84;
        }
LABEL_105:
        v58 = 0;
        v59 = &OBJC_IVAR___GEOXPCReply__methodName;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        if ((v61 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v59[954]) |= 2u;
        if (v64 & 1 | ((v58 & 1) == 0))
        {
          *(_BYTE *)(a1 + v59[954]) |= 8u;
          *(_BYTE *)(a1 + v59[954]) |= 0x20u;
          *(_BYTE *)(a1 + v59[954]) |= 0x10u;
          *(_BYTE *)(a1 + v59[954]) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            v54 = *v17++;
            v55 = 8;
            switch(v54)
            {
              case 0:
                goto LABEL_98;
              case 1:
                goto LABEL_97;
              case 2:
                v55 = 32;
                goto LABEL_97;
              case 3:
                v55 = 16;
                goto LABEL_97;
              case 5:
                v55 = 4;
LABEL_97:
                *(_BYTE *)(a1 + v59[954]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_98:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v64 & 1) != 0)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v60 & 1) == 0)
          goto LABEL_71;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_76:
        *(_DWORD *)(a1 + 68) = v46;
        goto LABEL_85;
      case 5:
        if (!v32 || (*(_BYTE *)(a1 + 72) & 4) != 0)
          goto LABEL_71;
        PBReaderReadString();
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        if (v51)
          -[GEOPDEnrichmentDataEntity _addNoFlagsAdamId:](a1, v51);

        goto LABEL_84;
      default:
        if ((v61 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_71:
          v52 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_87:
            v59 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_89;
          }
        }
LABEL_85:
        if (!(v62 & 1 | (v8 != 0)))
          goto LABEL_86;
        continue;
    }
  }
}

void sub_189122E8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189122F74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18912305C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891235D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentDataEntityReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDEnrichmentDataEntityReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDEnrichmentDataEntityReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDEnrichmentDataEntityReadAllFrom_initialTag;
  Specified = GEOPDEnrichmentDataEntityReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDEnrichmentInfo readAll:](*(_QWORD *)(a1 + 32), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189123838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189123AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189123DB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnrichmentDataFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189124448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189124678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  void *v44;
  GEOLocalizedString *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFFFFFEFFFAFFFBLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 0x10) != 0)+ ((*(_BYTE *)(a1 + 84) & 8) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v55 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v56 = (v19 == 0) | v18;
        v57 = v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v21))
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
      break;
    v33 = v25 >> 3;
    v34 = v57;
    if ((v56 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 84) & 0x40) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 64;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v47 = 2 * *(_BYTE *)(a1 + 84);
        goto LABEL_78;
      case 2:
        if (!v34)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 84) & 0x20) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 56;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v47 = 4 * *(_BYTE *)(a1 + 84);
        goto LABEL_78;
      case 3:
        if (!v34)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          v47 = 32 * *(_BYTE *)(a1 + 84);
LABEL_78:
          v7 += v47 >> 7;
        }
        else
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 32;
LABEL_54:
          v44 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
        }
        goto LABEL_79;
      case 4:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 2) != 0)
          goto LABEL_70;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v45 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
          goto LABEL_101;
        PBReaderRecallMark();
        -[GEOPDEnrichmentInfo _addNoFlagsPoiName:](a1, v45);
        goto LABEL_69;
      case 5:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
          goto LABEL_70;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_102;
        v45 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDEnrichmentInfo _addNoFlagsShowcaseTitle:](a1, v45);
LABEL_69:

LABEL_79:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_80;
        }
LABEL_101:

LABEL_102:
        v52 = 0;
        v53 = &OBJC_IVAR___GEOXPCReply__methodName;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
        if ((v54 & 1) != 0)
LABEL_84:
          *(_BYTE *)(a1 + v53[961]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[961]) |= 0x40u;
          *(_BYTE *)(a1 + v53[961]) |= 0x20u;
          *(_BYTE *)(a1 + v53[961]) |= 4u;
          *(_BYTE *)(a1 + v53[961]) |= 2u;
          *(_BYTE *)(a1 + v53[961]) |= 0x10u;
          *(_BYTE *)(a1 + v53[961]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            v48 = *v19++;
            v49 = 64;
            switch(v48)
            {
              case 0:
                goto LABEL_95;
              case 1:
                goto LABEL_94;
              case 2:
                v49 = 32;
                goto LABEL_94;
              case 3:
                v49 = 4;
                goto LABEL_94;
              case 4:
                v49 = 2;
                goto LABEL_94;
              case 5:
                v49 = 16;
                goto LABEL_94;
              case 6:
                v49 = 8;
LABEL_94:
                *(_BYTE *)(a1 + v53[961]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_95:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 8) != 0)
          goto LABEL_70;
        PBReaderReadString();
        v45 = (GEOLocalizedString *)objc_claimAutoreleasedReturnValue();
        if (v45)
          -[GEOPDEnrichmentInfo _addNoFlagsShowcaseImageUrl:](a1, v45);
        goto LABEL_69;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_70:
          v46 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
LABEL_82:
            v53 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v43)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_84;
          }
        }
LABEL_80:
        if (!(v55 & 1 | (v7 != 0)))
          goto LABEL_81;
        break;
    }
  }
LABEL_81:
  v52 = 1;
  goto LABEL_82;
}

void sub_189124E78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189124F60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189125048(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189125230(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189125418(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189125B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDEnrichmentInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 48);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDEnrichmentInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDEnrichmentInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDEnrichmentInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDEnrichmentInfoReadAllFrom_initialTag;
  Specified = GEOPDEnrichmentInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDEnrichmentInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1891264F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891268A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnrichmentInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(unsigned __int8 *)(a1 + 84) > 1u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189126CF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnrichmentInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891273B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189127A80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189127E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891281B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891287B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189128AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891295F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189129F10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18912A41C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18912A7D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18912ADD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18912B114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18912B260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDEntityCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[128];
  _BYTE v49[128];
  _BYTE v50[128];
  _BYTE v51[128];
  _BYTE v52[128];
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v2 = a1[26];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v44, v52, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v45;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v45 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v44 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v44, v52, 16);
    }
    while (v4);
  }

  v42 = 0u;
  v43 = 0u;
  v40 = 0u;
  v41 = 0u;
  v7 = a1[29];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v40, v51, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v41;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v41 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v40 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v40, v51, 16);
    }
    while (v9);
  }

  v38 = 0u;
  v39 = 0u;
  v36 = 0u;
  v37 = 0u;
  v12 = a1[20];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v36, v50, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v37;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v37 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v36 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v36, v50, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[27], "readAll:", 1);
  objc_msgSend(a1[28], "readAll:", 1);
  objc_msgSend(a1[30], "readAll:", 1);
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v17 = a1[12];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v32, v49, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v33;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v33 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v32 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v32, v49, 16);
    }
    while (v19);
  }

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v22 = a1[24];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v28, v48, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v29;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v29 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * v26++), "readAll:", 1, (_QWORD)v28);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v28, v48, 16);
    }
    while (v24);
  }

  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  return objc_msgSend(a1[32], "readAll:", 1);
}

unint64_t GEOPDEntityReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDEntityReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18912D7E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDInlineRapEnablementIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOPDURLDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) != 1)
        goto LABEL_25;
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_28;
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_28;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

uint64_t _GEOPDEntityIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];
  _BYTE v45[128];
  _BYTE v46[128];
  _BYTE v47[128];
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 288));
  v2 = *(_QWORD *)(a1 + 328);
  if ((v2 & 0x55214F00000) != 0)
    return 1;
  if ((v2 & 0x400000000) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 216)))
      return 1;
    v2 = *(_QWORD *)(a1 + 328);
  }
  if ((v2 & 0x800000000) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 224)))
      return 1;
    v2 = *(_QWORD *)(a1 + 328);
  }
  if ((v2 & 0x221E9080000) == 0)
  {
    if ((v2 & 0x2000000) != 0)
    {
      if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 128)))
        return 1;
      v2 = *(_QWORD *)(a1 + 328);
    }
    if ((v2 & 0x8000000000) == 0)
      goto LABEL_17;
    if ((GEOPDURLDataIsDirty(*(os_unfair_lock_s **)(a1 + 256)) & 1) == 0)
    {
      v2 = *(_QWORD *)(a1 + 328);
LABEL_17:
      if ((v2 & 0x200000000) != 0)
      {
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v5 = *(id *)(a1 + 208);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v41;
LABEL_20:
          v9 = 0;
          while (1)
          {
            if (*(_QWORD *)v41 != v8)
              objc_enumerationMutation(v5);
            if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * v9)))
              goto LABEL_68;
            if (v7 == ++v9)
            {
              v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
              if (v7)
                goto LABEL_20;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x1000000000) != 0)
      {
        v38 = 0u;
        v39 = 0u;
        v36 = 0u;
        v37 = 0u;
        v5 = *(id *)(a1 + 232);
        v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v47, 16);
        if (v10)
        {
          v11 = v10;
          v12 = *(_QWORD *)v37;
LABEL_30:
          v13 = 0;
          while (1)
          {
            if (*(_QWORD *)v37 != v12)
              objc_enumerationMutation(v5);
            if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * v13)))
              goto LABEL_68;
            if (v11 == ++v13)
            {
              v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v47, 16);
              if (v11)
                goto LABEL_30;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x10000000) != 0)
      {
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v5 = *(id *)(a1 + 160);
        v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v46, 16);
        if (v14)
        {
          v15 = v14;
          v16 = *(_QWORD *)v33;
LABEL_40:
          v17 = 0;
          while (1)
          {
            if (*(_QWORD *)v33 != v16)
              objc_enumerationMutation(v5);
            if (GEOPDCategoryIsDirty(*(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * v17)))
              goto LABEL_68;
            if (v15 == ++v17)
            {
              v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v46, 16);
              if (v15)
                goto LABEL_40;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x1000000) != 0)
      {
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v5 = *(id *)(a1 + 96);
        v18 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v45, 16);
        if (v18)
        {
          v19 = v18;
          v20 = *(_QWORD *)v29;
LABEL_50:
          v21 = 0;
          while (1)
          {
            if (*(_QWORD *)v29 != v20)
              objc_enumerationMutation(v5);
            if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * v21)))
              goto LABEL_68;
            if (v19 == ++v21)
            {
              v19 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v45, 16);
              if (v19)
                goto LABEL_50;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x80000000) == 0)
        return 0;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 192);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v44, 16);
      if (!v3)
      {
LABEL_69:

        return v3;
      }
      v22 = *(_QWORD *)v25;
LABEL_61:
      v23 = 0;
      while (1)
      {
        if (*(_QWORD *)v25 != v22)
          objc_enumerationMutation(v5);
        if (GEOPDCategoryIsDirty(*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v23)))
          break;
        if (v3 == ++v23)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v44, 16);
          if (v3)
            goto LABEL_61;
          goto LABEL_69;
        }
      }
LABEL_68:
      v3 = 1;
      goto LABEL_69;
    }
  }
  return 1;
}

void sub_189130154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEntityFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _BOOL8 v47;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDEntityFilter__includeSpokenNames;
                goto LABEL_56;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                v20 = 0;
                v26 = &OBJC_IVAR___GEOPDEntityFilter__includeSpokenNames;
                goto LABEL_59;
              }
            }
            v26 = &OBJC_IVAR___GEOPDEntityFilter__includeSpokenNames;
            goto LABEL_57;
          case 2u:
            v29 = 0;
            v30 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 1u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDEntityFilter__includeName;
                goto LABEL_56;
              }
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v25 = v30++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOPDEntityFilter__includeName;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDEntityFilter__includeName;
            goto LABEL_57;
          case 3u:
            v35 = 0;
            v36 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 4u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDEntityFilter__populateAltCategory;
                goto LABEL_56;
              }
              v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
              *(_QWORD *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v25 = v36++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOPDEntityFilter__populateAltCategory;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDEntityFilter__populateAltCategory;
            goto LABEL_57;
          case 4u:
            v41 = 0;
            v42 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 8u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if ((PBUnknownFieldAdd() & 1) == 0)
              goto LABEL_67;
            continue;
        }
        while (1)
        {
          v43 = *v4;
          v44 = *(_QWORD *)&v3[v43];
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
            break;
          v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
          *(_QWORD *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOPDEntityFilter__useLegacyTaxonomy;
            goto LABEL_57;
          }
          v41 += 7;
          v25 = v42++ > 8;
          if (v25)
          {
            v20 = 0;
            v26 = &OBJC_IVAR___GEOPDEntityFilter__useLegacyTaxonomy;
            goto LABEL_59;
          }
        }
        v26 = &OBJC_IVAR___GEOPDEntityFilter__useLegacyTaxonomy;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          v20 = 0;
LABEL_59:
        *(_BYTE *)(a1 + *v26) = v20 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_189130DE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEvChargingPortReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 5)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingLevel;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingLevel;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingLevel;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 4)
          break;
        if ((_DWORD)v18 == 3)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOPDEvChargingPort__power;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDEvChargingPort__power;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDEvChargingPort__power;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 1u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingConnectorType;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingConnectorType;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingConnectorType;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1891320B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEvChargingPortReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDEvChargingPortReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189132118(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEvChargingPortIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 5)
        break;
      if ((_DWORD)v16 == 4)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDEventCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOPDCategory *v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOPDCategory);
          if (!GEOPDCategoryReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDEventCategory addLocalizedCategory:](a1, v27);

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_189133088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189133614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExploreGuidesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDGuidesLocationEntry *v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_64;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_64:
      v52 = 1;
      goto LABEL_65;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 != 2)
      break;
    if (v35)
    {
      if ((*(_BYTE *)(a1 + 52) & 2) == 0)
      {
        PBReaderReadString();
        v42 = objc_claimAutoreleasedReturnValue();
        v41 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v42;
LABEL_48:

        --v10;
LABEL_62:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_84;
      v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_61:
      v10 += v47 >> 7;
      goto LABEL_62;
    }
LABEL_55:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_65:
      v53 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if ((_DWORD)v34 != 1)
  {
    if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
    goto LABEL_55;
  }
  if (!v35)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_84;
    v47 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v40 = objc_alloc_init(GEOPDGuidesLocationEntry);
  if (GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v40;
    goto LABEL_48;
  }

LABEL_84:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOXPCReply__methodName;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v54 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + v53[975]) |= 1u;
LABEL_68:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[975]) |= 4u;
    *(_BYTE *)(a1 + v53[975]) |= 2u;
    goto LABEL_77;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v49 = *v20++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 2)
          goto LABEL_76;
        if (!v48)
          goto LABEL_77;
      }
      LOBYTE(v48) = 4;
LABEL_76:
      *(_BYTE *)(a1 + v53[975]) |= v48;
      continue;
    }
  }
LABEL_77:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189133C9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913406C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExploreGuidesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDExploreGuidesReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDExploreGuidesReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDExploreGuidesReadAllFrom_initialTag;
  Specified = GEOPDExploreGuidesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDGuidesLocationEntry readAll:](*(_QWORD *)(a1 + 32), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18913440C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189134588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDExploreGuidesIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOPDExploreGuidesIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDExploreGuidesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1891347B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExploreGuidesFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189134D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189134FBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtensionParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  char v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  char v64;
  char v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFFFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 2;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        if ((((v14 | v10) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_95;
        v64 = v14 & ~(_BYTE)v10 | v7;
        v65 = v16 | v15;
        v67 = (v17 == 0) | v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v66 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_93;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_93:
      LODWORD(v12) = 1;
      goto LABEL_94;
    }
    v32 = v23 >> 3;
    v33 = v16;
    if ((v67 & 1) == 0)
    {
      v34 = v17;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 84) & 0x10) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 64;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v52 = 8 * *(_BYTE *)(a1 + 84);
        goto LABEL_78;
      case 2:
        if (!v33)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 84) & 8) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 56;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_111;
        v52 = 16 * *(_BYTE *)(a1 + 84);
        goto LABEL_78;
      case 3:
        if (!v33 || (*(_BYTE *)(a1 + 84) & 2) != 0)
          goto LABEL_70;
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_111;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v19))
              break;
            v40 = 0;
            v41 = 0;
            v42 = 0;
            while (1)
            {
              v43 = *v18;
              v44 = *(_QWORD *)(v3 + v43);
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
                break;
              v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
              *(_QWORD *)(v3 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                v28 = v41++ >= 9;
                if (!v28)
                  continue;
              }
              goto LABEL_58;
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_58:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v56 = *v18;
            v57 = *(_QWORD *)(v3 + v56);
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v28 = v54++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_91;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_91:
          PBRepeatedInt32Add();
        }
        v16 = v66;
        goto LABEL_80;
      case 4:
        if (!v33)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_111:
            LODWORD(v12) = 0;
            v16 = v66;
            v19 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_94;
          }
          v52 = 32 * *(_BYTE *)(a1 + 84);
LABEL_78:
          v9 += v52 >> 7;
          v16 = v66;
        }
        else
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 48;
LABEL_63:
          v47 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          v16 = v66;
          --v9;
        }
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_80;
      default:
        if ((v64 & 1) != 0 && (*(_BYTE *)(a1 + 84) & 1) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v49 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v48;

          }
          v50 = PBUnknownFieldAdd();
          v16 = v66;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v50)
          {
            LODWORD(v12) = 0;
            goto LABEL_96;
          }
LABEL_80:
          if (!(v65 & 1 | (v9 != 0)) || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_93;
          continue;
        }
LABEL_70:
        v51 = PBReaderSkipValueWithTag();
        v16 = v66;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if ((v51 & 1) != 0)
          goto LABEL_80;
        LODWORD(v12) = 0;
LABEL_94:
        v15 = v64;
LABEL_95:
        if ((v15 & 1) != 0)
LABEL_96:
          *(_BYTE *)(a1 + 84) |= 1u;
        if (v16 & 1 | ((v12 & 1) == 0))
        {
          *(_BYTE *)(a1 + 84) |= 0x10u;
          *(_BYTE *)(a1 + 84) |= 8u;
          *(_BYTE *)(a1 + 84) |= 2u;
          *(_BYTE *)(a1 + 84) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            v60 = *v17++;
            v61 = 16;
            switch(v60)
            {
              case 0:
                goto LABEL_105;
              case 1:
                goto LABEL_104;
              case 2:
                v61 = 8;
                goto LABEL_104;
              case 3:
                v61 = 2;
                goto LABEL_104;
              case 4:
                v61 = 4;
LABEL_104:
                *(_BYTE *)(a1 + 84) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if ((_DWORD)v12)
        {
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v16 & 1) == 0)
            return v3;
LABEL_109:
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
            goto LABEL_109;
        }
        return v3;
    }
  }
}

void sub_189135808(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189135C08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189135CD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtensionParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDExtensionParamsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDExtensionParamsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDExtensionParamsReadAllFrom_initialTag;
  Specified = GEOPDExtensionParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189135F24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189136110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891362B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExternalActionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOPDExternalActionDetail *v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOPDExternalActionDetail);
          if (!GEOPDExternalActionDetailReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDExternalAction addExternalActionDetail:](a1, v27);

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_1891370F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalActionDetailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFEFFFFFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 2;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v50 = v15;
        v51 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v52 = (v17 == 0) | v16;
        v53 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_69;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      v49 = 1;
      goto LABEL_70;
    }
    v31 = v23 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_67;
      case 2:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 3:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 4:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_56:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0)))
            goto LABEL_69;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v44 = 16 * *(_BYTE *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_68;
        }
LABEL_86:
        v49 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
        if ((v50 & 1) != 0)
LABEL_71:
          *(_BYTE *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(_BYTE *)(a1 + 68) |= 2u;
          *(_BYTE *)(a1 + 68) |= 0x10u;
          *(_BYTE *)(a1 + 68) |= 4u;
          *(_BYTE *)(a1 + 68) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v45 = *v17++;
            v46 = 2;
            switch(v45)
            {
              case 0:
                goto LABEL_80;
              case 1:
                goto LABEL_79;
              case 2:
                v46 = 16;
                goto LABEL_79;
              case 3:
                v46 = 4;
                goto LABEL_79;
              case 4:
                v46 = 8;
LABEL_79:
                *(_BYTE *)(a1 + 68) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_80:
        if (v49)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v53)
        {
          v47 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_57:
          v43 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v43 & 1) == 0)
          {
            v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_189137FEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891380C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalActionDetailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDExternalActionDetailReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDExternalActionDetailReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDExternalActionDetailReadAllFrom_initialTag;
  Specified = GEOPDExternalActionDetailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189138314(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891384E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189138684(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExternalActionFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedInt32Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189139424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189139718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFactoidReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  GEOPDMapsIdentifier *v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  void *v69;
  char v70;
  uint64_t v71;
  __int16 v72;
  int v73;
  __int16 v74;
  void *v75;
  int v77;
  int *v78;
  char v79;
  char v80;
  char v81;
  BOOL v82;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 112) >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFF9FFFAFFF5FFF6), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 112)) & 1)+ ((*(_WORD *)(a1 + 112) >> 9) & 1)+ ((*(_WORD *)(a1 + 112) >> 5) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v79 = v17;
        v80 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v81 = (v19 == 0) | v18;
        v82 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_136;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_136:
      v77 = 1;
      goto LABEL_137;
    }
    v33 = v25 >> 3;
    v34 = v82;
    if ((v81 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 112) & 0x800) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 80;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_158;
        v72 = 16 * *(_WORD *)(a1 + 112);
        goto LABEL_130;
      case 2:
        if (!v34)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 112) & 0x400) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 72;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_158;
        v72 = 32 * *(_WORD *)(a1 + 112);
        goto LABEL_130;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        *(_WORD *)(a1 + 112) |= 1u;
        v41 = *v20;
        v42 = *(_QWORD *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v43 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v42);
          *(_QWORD *)(v3 + v41) = v42 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v43 = 0;
        }
        *(_QWORD *)(a1 + 40) = v43;
        goto LABEL_132;
      case 5:
        if (!v34)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 32;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_158;
        v72 = *(_WORD *)(a1 + 112) << 9;
        goto LABEL_130;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          v50 = *v20;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v30 = v48++ >= 9;
              if (v30)
              {
                LODWORD(v49) = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v49) = 0;
LABEL_108:
        v71 = 104;
        goto LABEL_113;
      case 7:
        if (!v34)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_158;
          v72 = *(_WORD *)(a1 + 112) << 8;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_158;
        v54 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_157;
        PBReaderRecallMark();
        v55 = 48;
        goto LABEL_101;
      case 8:
        if (!v34 || (*(_WORD *)(a1 + 112) & 0x100) != 0)
          goto LABEL_103;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_158;
        v54 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_157;
        PBReaderRecallMark();
        -[GEOPDFactoid _addNoFlagsPlaceName:](a1, v54);

        goto LABEL_131;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        v56 = 0;
        v57 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v58 = *v20;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v49 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v30 = v57++ >= 9;
              if (v30)
              {
                LODWORD(v49) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v49) = 0;
LABEL_112:
        v71 = 100;
LABEL_113:
        *(_DWORD *)(a1 + v71) = v49;
        goto LABEL_132;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_103;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          v65 = *v20;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v30 = v63++ >= 9;
              if (v30)
              {
                v64 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v64 = 0;
LABEL_117:
        *(_BYTE *)(a1 + 108) = v64 != 0;
        goto LABEL_132;
      case 11:
        if (!v34)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 112) & 0x200) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 64;
LABEL_95:
          v69 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
          goto LABEL_102;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_158;
        v72 = *(_WORD *)(a1 + 112) << 6;
        goto LABEL_130;
      case 12:
        if (!v34)
          goto LABEL_103;
        if ((*(_WORD *)(a1 + 112) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_158;
          v72 = *(_WORD *)(a1 + 112) << 10;
LABEL_130:
          v7 += v72 >> 15;
LABEL_131:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_132;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_158;
        v54 = objc_alloc_init(GEOPDColor);
        if (GEOPDColorReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          v55 = 24;
LABEL_101:
          v69 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;
LABEL_102:

          --v7;
          goto LABEL_131;
        }
LABEL_157:

LABEL_158:
        v77 = 0;
        v78 = &OBJC_IVAR___GEOXPCReply__methodName;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_138:
        if ((v79 & 1) != 0)
LABEL_139:
          *(_WORD *)(a1 + v78[986]) |= 0x10u;
        if (v82 || (v77 & 1) == 0)
        {
          *(_WORD *)(a1 + v78[986]) |= 0x800u;
          *(_WORD *)(a1 + v78[986]) |= 0x400u;
          *(_WORD *)(a1 + v78[986]) |= 0x40u;
          *(_WORD *)(a1 + v78[986]) |= 0x80u;
          *(_WORD *)(a1 + v78[986]) |= 0x100u;
          *(_WORD *)(a1 + v78[986]) |= 0x200u;
          *(_WORD *)(a1 + v78[986]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            v73 = *v19++;
            v74 = 2048;
            switch(v73)
            {
              case 0:
                goto LABEL_151;
              case 1:
                goto LABEL_150;
              case 2:
                v74 = 1024;
                goto LABEL_150;
              case 5:
                v74 = 64;
                goto LABEL_150;
              case 7:
                v74 = 128;
                goto LABEL_150;
              case 8:
                v74 = 256;
                goto LABEL_150;
              case 11:
                v74 = 512;
                goto LABEL_150;
              case 12:
                v74 = 32;
LABEL_150:
                *(_WORD *)(a1 + v78[986]) |= v74;
                break;
              default:
                continue;
            }
          }
        }
LABEL_151:
        if (v77)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v82)
        {
          v75 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v79 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
        {
LABEL_103:
          v70 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v70 & 1) == 0)
          {
            v77 = 0;
LABEL_137:
            v78 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v77 = 0;
            v78 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_139;
          }
        }
LABEL_132:
        if (!(v80 & 1 | (v7 != 0)))
          goto LABEL_136;
        continue;
    }
  }
}

void sub_18913A2D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913A3BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913A510(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913A5F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913A84C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913AF0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913AFEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDFactoidCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDFactoidReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDFactoidReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDFactoidReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDFactoidReadAllFrom_initialTag;
  Specified = GEOPDFactoidReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDFactoidCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18913BD88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913C0D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913C460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDFactoid *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDFactoid);
          if (!GEOPDFactoidReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_18913CE58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidInfoItemReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDFactoidReference *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDFactoidReference);
          if (!GEOPDFactoidReferenceReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDFactoidInfoItem addFactoidReference:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18913DA94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidReferenceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDFactoidReference__factoidItemIndex;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDFactoidReference__factoidItemIndex;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDFactoidReference__factoidItemIndex;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDFactoidReference__style;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDFactoidReference__style;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDFactoidReference__style;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18913E44C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidRibbonItemReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18913EBEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFlyoverFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18913F1D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFollowUpRequestMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__requestType;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__requestType;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__requestType;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__dataType;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__dataType;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__dataType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18913F95C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18913FD20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDForwardInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDMapsIdentifier *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v56 = v18;
        v54 = v19;
        v55 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v51 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_83;
          v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_83;
          v40 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
            goto LABEL_82;
          PBReaderRecallMark();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;

          --v8;
        }
        goto LABEL_60;
      }
    }
    else if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v51 = 0;
        v52 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v51 = 0;
LABEL_63:
      v52 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v54 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
    goto LABEL_56;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_83;
  v40 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDForwardInfo _addNoFlagsPreviousId:](a1, v40);

LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  v51 = 0;
  v52 = &OBJC_IVAR___GEOXPCReply__methodName;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_64:
  if ((v53 & 1) == 0)
    goto LABEL_66;
LABEL_65:
  *(_BYTE *)(a1 + v52[1011]) |= 1u;
LABEL_66:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[1011]) |= 2u;
    *(_BYTE *)(a1 + v52[1011]) |= 4u;
    goto LABEL_76;
  }
  if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_72:
        *(_BYTE *)(a1 + v52[1011]) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_76;
      }
    }
    v46 = 2;
    goto LABEL_72;
  }
LABEL_76:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189140344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891408B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDForwardInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDForwardInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDForwardInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDForwardInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDForwardInfoReadAllFrom_initialTag;
  Specified = GEOPDForwardInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDForwardInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189140C20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189140E5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891410A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDForwardInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189141630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroundViewLabelFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189141DB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189142468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroupDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOLocalizedString *v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  int v46;
  char v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v53 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v54 = (v19 == 0) | v18;
        v55 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_67;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_67:
      v50 = 1;
      goto LABEL_68;
    }
    v33 = v25 >> 3;
    v34 = v55;
    if ((v54 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 3)
      break;
    if ((_DWORD)v33 == 2)
    {
      if (!v34)
        goto LABEL_61;
      if ((*(_BYTE *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
        v7 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
      }
      else
      {
        PBReaderReadString();
        v40 = objc_claimAutoreleasedReturnValue();
        v41 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v40;

        --v7;
      }
      goto LABEL_65;
    }
    if ((_DWORD)v33 == 1)
    {
      if (!v34 || (*(_BYTE *)(a1 + 60) & 8) != 0)
        goto LABEL_61;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_84;
      v39 = objc_alloc_init(GEOLocalizedString);
      if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        goto LABEL_83;
      PBReaderRecallMark();
      -[GEOPDGroupData _addNoFlagsTitle:](a1, v39);
LABEL_51:

LABEL_65:
      v21 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_66;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_61;
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v50 = 0;
      v51 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
      goto LABEL_69;
    }
LABEL_66:
    if (!(v53 & 1 | (v7 != 0)))
      goto LABEL_67;
  }
  if (!v34 || (*(_BYTE *)(a1 + 60) & 2) != 0)
  {
LABEL_61:
    v45 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v50 = 0;
      goto LABEL_68;
    }
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v39 = objc_alloc_init(GEOPDButtonItem);
  if (GEOPDButtonItemReadAllFrom())
  {
    PBReaderRecallMark();
    -[GEOPDGroupData _addNoFlagsButtonItem:](a1, v39);
    goto LABEL_51;
  }
LABEL_83:

LABEL_84:
  v50 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  v51 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
  if ((v52 & 1) == 0)
    goto LABEL_70;
LABEL_69:
  *(_BYTE *)(a1 + v51[350]) |= 1u;
LABEL_70:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[350]) |= 8u;
    *(_BYTE *)(a1 + v51[350]) |= 4u;
    *(_BYTE *)(a1 + v51[350]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      v46 = *v19++;
      v47 = 8;
      switch(v46)
      {
        case 0:
          goto LABEL_77;
        case 1:
          goto LABEL_76;
        case 2:
          v47 = 4;
          goto LABEL_76;
        case 3:
          v47 = 2;
LABEL_76:
          *(_BYTE *)(a1 + v51[350]) |= v47;
          break;
        default:
          continue;
      }
    }
  }
LABEL_77:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189142D38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189142E7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189143A20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGroupDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDGroupDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGroupDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGroupDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGroupDataReadAllFrom_initialTag;
  Specified = GEOPDGroupDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGroupDataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189143D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroupDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDGroupDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189143DA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroupDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_32;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_32;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_33;
      }
      else if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
          goto LABEL_33;
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_33;
LABEL_31:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_32;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDButtonItemIsValid(a1))
    {
LABEL_33:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_32:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_18914428C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGroupDataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x1E) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDButtonItemIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDGroupDataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDGroupDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189144874(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189144C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroupParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  unint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  GEOPDGroupData *v28;
  void *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  id v36;
  void *v37;
  uint64_t v38;
  _BOOL8 v39;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v28 = objc_alloc_init(GEOPDGroupData);
          if (!GEOPDGroupDataReadAllFrom((uint64_t)v28, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          v29 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v28;

        }
        else
        {
          if ((_DWORD)v20 == 2)
          {
            v30 = 0;
            v31 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v32 = *v6;
              v33 = *(_QWORD *)&v5[v32];
              v34 = v33 + 1;
              if (v33 == -1 || v34 > *(_QWORD *)&v5[*v7])
                break;
              v35 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v33);
              *(_QWORD *)&v5[v32] = v34;
              v23 |= (unint64_t)(v35 & 0x7F) << v30;
              if ((v35 & 0x80) == 0)
                goto LABEL_48;
              v30 += 7;
              v17 = v31++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8])
              LODWORD(v23) = 0;
LABEL_50:
            v38 = 24;
            goto LABEL_51;
          }
          if ((_DWORD)v20 == 1)
          {
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (1)
            {
              v24 = *v6;
              v25 = *(_QWORD *)&v5[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v5[*v7])
                break;
              v27 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
              *(_QWORD *)&v5[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0)
                goto LABEL_44;
              v21 += 7;
              v17 = v22++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8])
              LODWORD(v23) = 0;
LABEL_46:
            v38 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v38) = v23;
            continue;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v36 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v37 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v36;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v39 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    v39 = 0;
  }
  objc_sync_exit(v5);

  return v39;
}

void sub_1891459A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroupParamsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDGroupParamsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189145A04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuideGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  GEOPDCaptionedPhoto *v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if ((v7 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_69;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v42) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if ((_DWORD)v31 != 1)
    {
      if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v48 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v47;

        }
        v49 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (!v49)
        {
          v57 = 0;
          v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          goto LABEL_78;
        }
        goto LABEL_66;
      }
LABEL_65:
      v50 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v50 & 1) != 0)
        goto LABEL_66;
      v57 = 0;
LABEL_76:
      v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_77;
    }
    if (!v32)
      goto LABEL_65;
    if ((*(_BYTE *)(a1 + 56) & 8) != 0)
    {
      v51 = PBReaderSkipValueWithTag();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v51 & 1) == 0)
        goto LABEL_97;
      v8 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
    }
    else
    {
      v37 = PBReaderPlaceMark();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v37 & 1) == 0)
        goto LABEL_97;
      v38 = objc_alloc_init(GEOPDCaptionedPhoto);
      if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
        goto LABEL_96;
      PBReaderRecallMark();
      v39 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v38;

      --v8;
    }
    v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if (!v32 || (*(_BYTE *)(a1 + 56) & 4) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v38 = objc_alloc_init(GEOPDGuideLocationImage);
  if (GEOPDGuideLocationImageReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDGuideGroup _addNoFlagsGuideLocationImage:](a1, v38);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[3]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[3]) |= 8u;
    *(_BYTE *)(a1 + v58[3]) |= 4u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v58[3]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891466C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189146C40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189146D20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuideGroupCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(a1 + 32), 1);
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v7;
    while (1)
    {
      if (*(_QWORD *)v7 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
        if (!v4)
          break;
      }
    }
  }

}

unint64_t GEOPDGuideGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuideGroupReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuideGroupReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuideGroupReadAllFrom_initialTag;
  Specified = GEOPDGuideGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuideGroupCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189147068(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuideLocationImageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCaptionedPhotoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18914750C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914778C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuideGroupFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189147DC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuideLocationImageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOPDCaptionedPhoto *v27;
  void *v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOPDCaptionedPhoto);
          if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v28 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v27;

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_1891486A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189148AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesLocationEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  int *v35;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOPDMapsIdentifier *v42;
  uint64_t v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  void *v60;
  uint64_t v61;
  void *v62;
  int *v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  __int16 v74;
  char v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  int v84;
  __int16 v85;
  void *v86;
  char v88;
  char v89;
  int v90;
  char v91;
  char v92;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 100)), (uint16x4_t)0xFFFCFFFBFFFAFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 100) >> 3) & 1)+ ((*(_WORD *)(a1 + 100) >> 2) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v90 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_138;
        v88 = v17;
        v91 = v18 | v17;
        v92 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v89 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_136;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_136:
      v90 = 1;
      goto LABEL_137;
    }
    v35 = v21;
    v36 = v26 >> 3;
    v37 = v18;
    if ((v92 & 1) == 0)
    {
      v38 = v19;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        v21 = v35;
        if (!v37)
          goto LABEL_99;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((*(_WORD *)(a1 + 100) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_156;
          v42 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
          {
            PBReaderRecallMark();
            v43 = 64;
            goto LABEL_71;
          }
          goto LABEL_155;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_156;
        v74 = *(_WORD *)(a1 + 100) << 9;
        goto LABEL_119;
      case 2:
        v21 = v35;
        if ((v8 & 1) == 0)
          goto LABEL_99;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v50 = *v20;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v31 = v48++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v49) = 0;
LABEL_105:
        v73 = 92;
        goto LABEL_110;
      case 3:
        v21 = v35;
        if ((v8 & 1) == 0)
          goto LABEL_99;
        v54 = 0;
        v55 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v56 = *v20;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v49 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v49) = 0;
LABEL_109:
        v73 = 96;
LABEL_110:
        *(_DWORD *)(a1 + v73) = v49;
        goto LABEL_123;
      case 4:
        v21 = v35;
        if (!v37)
          goto LABEL_99;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((*(_WORD *)(a1 + 100) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_156;
          v74 = *(_WORD *)(a1 + 100) << 8;
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_156;
        v42 = objc_alloc_init(GEOPDGuidesLocationEntryTypeWorldWide);
        if (!GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_155;
        PBReaderRecallMark();
        v43 = 72;
LABEL_71:
        v60 = *(void **)(a1 + v43);
        *(_QWORD *)(a1 + v43) = v42;

        --v7;
        goto LABEL_120;
      case 5:
        v21 = v35;
        if (!v37)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 100) & 0x20) != 0)
        {
          v75 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v75 & 1) == 0)
            goto LABEL_156;
          v74 = *(_WORD *)(a1 + 100) << 10;
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_156;
        v42 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_155;
        PBReaderRecallMark();
        v61 = 56;
        goto LABEL_82;
      case 6:
        v21 = v35;
        if (!v37)
          goto LABEL_99;
        if ((*(_WORD *)(a1 + 100) & 0x10) != 0)
        {
          v76 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v76 & 1) == 0)
            goto LABEL_156;
          v74 = *(_WORD *)(a1 + 100) << 11;
LABEL_119:
          v7 += v74 >> 15;
LABEL_120:
          v18 = v89;
LABEL_121:
          v20 = (int *)MEMORY[0x1E0D82BF0];
LABEL_122:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_123:
          if (!(v91 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_136;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_156;
        v42 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v61 = 48;
LABEL_82:
          v62 = *(void **)(a1 + v61);
          *(_QWORD *)(a1 + v61) = v42;

          --v7;
          v18 = v89;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_121;
        }
LABEL_155:

LABEL_156:
        v90 = 0;
        v18 = v89;
LABEL_137:
        v22 = v88;
LABEL_138:
        if ((v22 & 1) != 0)
LABEL_139:
          *(_WORD *)(a1 + 100) |= 4u;
        if (v18 & 1 | ((v90 & 1) == 0))
        {
          *(_WORD *)(a1 + 100) |= 0x40u;
          *(_WORD *)(a1 + 100) |= 0x80u;
          *(_WORD *)(a1 + 100) |= 0x20u;
          *(_WORD *)(a1 + 100) |= 0x10u;
          *(_WORD *)(a1 + 100) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            v84 = *v19++;
            v85 = 64;
            switch(v84)
            {
              case 0:
                goto LABEL_149;
              case 1:
                goto LABEL_148;
              case 4:
                v85 = 128;
                goto LABEL_148;
              case 5:
                v85 = 32;
                goto LABEL_148;
              case 6:
                v85 = 16;
                goto LABEL_148;
              case 7:
                v85 = 8;
LABEL_148:
                *(_WORD *)(a1 + 100) |= v85;
                break;
              default:
                continue;
            }
          }
        }
LABEL_149:
        if (v90)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_153:
          v86 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_153;
        }
        return v3;
      case 7:
        v21 = v35;
        if (!v37 || (*(_WORD *)(a1 + 100) & 8) != 0)
        {
LABEL_99:
          v72 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v18 = v89;
          goto LABEL_100;
        }
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (v33 != 2)
        {
          v77 = 0;
          v78 = 0;
          v79 = 0;
          while (1)
          {
            v80 = *v20;
            v81 = *(_QWORD *)(v3 + v80);
            v82 = v81 + 1;
            if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
              break;
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v31 = v78++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_135;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_135:
          PBRepeatedUInt64Add();
          goto LABEL_120;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_156;
        while (1)
        {
          v63 = (int *)MEMORY[0x1E0D82BF0];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
            break;
          v64 = 0;
          v65 = 0;
          v66 = 0;
          v67 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v68 = *v63;
            v69 = *(_QWORD *)(v3 + v68);
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
              break;
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v67) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v66 |= (unint64_t)(v71 & 0x7F) << v64;
            if (v71 < 0)
            {
              v64 += 7;
              v31 = v65++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_97;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_97:
          PBRepeatedUInt64Add();
        }
        PBReaderRecallMark();
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v18 = v89;
        goto LABEL_122;
      default:
        if ((v88 & 1) == 0 || (*(_WORD *)(a1 + 100) & 4) != 0)
        {
          v72 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v18 = v89;
          v21 = v35;
LABEL_100:
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v72 & 1) == 0)
          {
            v90 = 0;
            goto LABEL_137;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v18 = v89;
          v21 = v35;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BF0];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v90 = 0;
            goto LABEL_139;
          }
        }
        goto LABEL_123;
    }
  }
}

void sub_1891497A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891498FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189149A1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189149B3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914A0C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  -[GEOPDGuidesLocationEntryTypeWorldWide readAll:](*(_QWORD *)(a1 + 72), 1);
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  return objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
}

unint64_t GEOPDGuidesLocationEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesLocationEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesLocationEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesLocationEntryReadAllFrom_initialTag;
  Specified = GEOPDGuidesLocationEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesLocationEntryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18914AA58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914ACA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationEntryIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(unsigned __int16 *)(a1 + 100);
  if ((v2 & 0x140) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if ((GEOPDGuidesLocationEntryTypeWorldWideIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 100);
  }
  if ((v2 & 0x30) != 0)
    return 1;
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOPDGuidesLocationEntryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDGuidesLocationEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18914AF9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914B554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesLocationEntryTypeWorldWideReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  void *v40;
  GEOPDGuideLocationImage *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  int *v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v53 = v17;
        v54 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v19 == 0) | v18;
        v56 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_70;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_70:
      v51 = 1;
      goto LABEL_71;
    }
    v33 = v25 >> 3;
    v34 = v56;
    if ((v55 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 3)
    {
      if (v34 && (*(_BYTE *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_88;
        v41 = objc_alloc_init(GEOPDGuideLocationImage);
        if (!GEOPDGuideLocationImageReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_87;
        PBReaderRecallMark();
        -[GEOPDGuidesLocationEntryTypeWorldWide _addNoFlagsGuideLocationImage:](a1, v41);

        goto LABEL_68;
      }
      goto LABEL_61;
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (v34)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v39;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_88;
        v46 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_67;
      }
    }
    else if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v51 = 0;
        v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_73;
      }
      goto LABEL_69;
    }
LABEL_61:
    v45 = PBReaderSkipValueWithTag();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v51 = 0;
LABEL_71:
      v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_72;
    }
LABEL_69:
    if (!(v54 & 1 | (v7 != 0)))
      goto LABEL_70;
  }
  if (!v34)
    goto LABEL_61;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_88;
    v46 = 16 * *(_BYTE *)(a1 + 60);
LABEL_67:
    v7 += v46 >> 7;
    goto LABEL_68;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_88;
  v41 = objc_alloc_init(GEOPDCaptionedPhoto);
  if (GEOPDCaptionedPhotoReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v40 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v41;
LABEL_54:

    --v7;
LABEL_68:
    v21 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_69;
  }
LABEL_87:

LABEL_88:
  v51 = 0;
  v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  if ((v53 & 1) == 0)
    goto LABEL_74;
LABEL_73:
  *(_BYTE *)(a1 + v52[21]) |= 1u;
LABEL_74:
  if (v56 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + v52[21]) |= 4u;
    *(_BYTE *)(a1 + v52[21]) |= 8u;
    *(_BYTE *)(a1 + v52[21]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      v47 = *v19++;
      v48 = 4;
      switch(v47)
      {
        case 0:
          goto LABEL_81;
        case 1:
          goto LABEL_80;
        case 2:
          v48 = 8;
          goto LABEL_80;
        case 3:
          v48 = 2;
LABEL_80:
          *(_BYTE *)(a1 + v52[21]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_81:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v56)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18914BC7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914BD9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914C33C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesLocationEntryTypeWorldWideCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(a1 + 40), 1);
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v7;
    while (1)
    {
      if (*(_QWORD *)v7 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
        if (!v4)
          break;
      }
    }
  }

}

unint64_t GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom_initialTag;
  Specified = GEOPDGuidesLocationEntryTypeWorldWideReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDGuidesLocationEntryTypeWorldWideCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18914C684(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914C8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationEntryTypeWorldWideIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x14) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOPDGuidesLocationEntryTypeWorldWideIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDGuidesLocationEntryTypeWorldWideIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18914CBFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHeaderButtonsConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18914D304(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914D6B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDHikeAssociatedInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  _BOOL4 v20;
  int *v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  void *v49;
  GEOPDMapsIdentifier *v50;
  int v51;
  char v52;
  void *v53;
  char v55;
  char v56;
  int v57;
  char v58;

  v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
    v6 = (int *)MEMORY[0x1E0D82BD8];
    *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
    objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
    while (2)
    {
      v13 = 1;
      v14 = 1;
      v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          v8 = 1;
          goto LABEL_7;
        case -2:
          v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          v16 = v12 > 1;
          v17 = v16 & ~(_DWORD)v11 | v9;
          v18 = v16 | v11;
          if ((((v16 | v11) | v8) & 1) != 0)
            v19 = 0;
          else
            v19 = a3;
          v20 = v7 != 0;
          v21 = (int *)MEMORY[0x1E0D82BF0];
          v22 = 1;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_79;
          v55 = v17;
          v57 = v20 | v18 | v17;
          v58 = (v19 == 0) | v18;
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v56 = v16 | v11;
          break;
        default:
          ++v12;
LABEL_7:
          v13 = v9;
LABEL_8:
          v14 = v10;
          v15 = v11;
LABEL_10:
          ++v7;
          v9 = v13;
          v10 = v14;
          v11 = v15;
          continue;
      }
      break;
    }
    while (!*(_BYTE *)(v3 + *v23))
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      while (1)
      {
        v28 = *v21;
        v29 = *(_QWORD *)(v3 + v28);
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
        *(_QWORD *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0)
          goto LABEL_25;
        v25 += 7;
        v32 = v26++ >= 9;
        if (v32)
        {
          v27 = 0;
          v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
      v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(_BYTE *)(v3 + *v23))
        v27 = 0;
LABEL_27:
      if (v33 || (v27 & 7) == 4)
        break;
      v35 = v27 >> 3;
      v36 = v18;
      if ((v58 & 1) == 0)
      {
        v37 = v19;
        do
        {
          v39 = *v37++;
          v38 = v39;
          v36 = v39 != 0;
          if (v39)
            v40 = v38 == (_DWORD)v35;
          else
            v40 = 1;
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 1:
          if ((v8 & 1) == 0)
            goto LABEL_69;
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 68) |= 1u;
          while (1)
          {
            v44 = *v21;
            v45 = *(_QWORD *)(v3 + v44);
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
              break;
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if ((v47 & 0x80) == 0)
              goto LABEL_72;
            v41 += 7;
            v32 = v42++ >= 9;
            if (v32)
            {
              v43 = 0;
              goto LABEL_74;
            }
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_72:
          if (*(_BYTE *)(v3 + *v23))
            v43 = 0;
LABEL_74:
          *(_QWORD *)(a1 + 24) = v43;
          goto LABEL_75;
        case 2:
          if (!v36 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
            goto LABEL_69;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_95;
          v50 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v50, (void *)v3))
            goto LABEL_94;
          PBReaderRecallMark();
          -[GEOPDHikeAssociatedInfo _addNoFlagsStartMuid:](a1, v50);
          goto LABEL_68;
        case 3:
          if (!v36 || (*(_BYTE *)(a1 + 68) & 4) != 0)
            goto LABEL_69;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_95;
          v50 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v50, (void *)v3))
            goto LABEL_94;
          PBReaderRecallMark();
          -[GEOPDHikeAssociatedInfo _addNoFlagsEndMuid:](a1, v50);
          goto LABEL_68;
        case 4:
          if (!v36 || (*(_BYTE *)(a1 + 68) & 8) != 0)
            goto LABEL_69;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_95;
          v50 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v50, (void *)v3))
          {
LABEL_94:

LABEL_95:
            v22 = 0;
            LOBYTE(v18) = v56;
            v23 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_78;
          }
          PBReaderRecallMark();
          -[GEOPDHikeAssociatedInfo _addNoFlagsIntermediateMuid:](a1, v50);
LABEL_68:

          LOBYTE(v18) = v56;
          v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_75:
          if ((v57 & 1) == 0)
            goto LABEL_77;
LABEL_76:
          if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_77;
          break;
        default:
          if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 2) != 0)
          {
LABEL_69:
            v22 = PBReaderSkipValueWithTag();
            v23 = (int *)MEMORY[0x1E0D82BC8];
            LOBYTE(v18) = v56;
            if ((v22 & v57 & 1) == 0)
              goto LABEL_78;
            goto LABEL_76;
          }
          if (!*(_QWORD *)(a1 + 16))
          {
            v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v49 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v48;

          }
          v22 = PBUnknownFieldAdd();
          LOBYTE(v18) = v56;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v22)
            goto LABEL_80;
          goto LABEL_75;
      }
    }
LABEL_77:
    v22 = 1;
LABEL_78:
    LOBYTE(v17) = v55;
LABEL_79:
    if ((v17 & 1) != 0)
LABEL_80:
      *(_BYTE *)(a1 + 68) |= 2u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(_BYTE *)(a1 + 68) |= 0x10u;
      *(_BYTE *)(a1 + 68) |= 4u;
      *(_BYTE *)(a1 + 68) |= 8u;
    }
    else if (v19)
    {
      while (1)
      {
        v51 = *v19++;
        v52 = 16;
        switch(v51)
        {
          case 0:
            goto LABEL_88;
          case 2:
            goto LABEL_87;
          case 3:
            v52 = 4;
            goto LABEL_87;
          case 4:
            v52 = 8;
LABEL_87:
            *(_BYTE *)(a1 + 68) |= v52;
            break;
          default:
            continue;
        }
      }
    }
LABEL_88:
    if (v22)
    {
      v3 = *(_BYTE *)(v3 + *v23) == 0;
      if ((v18 & 1) == 0)
        return v3;
      goto LABEL_92;
    }
    v3 = 0;
    if ((v18 & 1) != 0)
    {
LABEL_92:
      v53 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_18914E070(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914E3A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914F1C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDHikeAssociatedInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOPDHikeAssociatedInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDHikeAssociatedInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDHikeAssociatedInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDHikeAssociatedInfoReadAllFrom_initialTag;
  Specified = GEOPDHikeAssociatedInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDHikeAssociatedInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18914F580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDHikeAssociatedInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDHikeAssociatedInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18914F5E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18914F964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeAssociatedInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1891501C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189150688(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeAssociatedInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189150D94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeGeometryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189151448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeGeometryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDHikeGeometryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1891514A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeGeometryFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189151BD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  GEOFormattedString *v47;
  void *v48;
  uint64_t v49;
  _BOOL8 v50;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (!v5[*v8])
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 2u;
            while (1)
            {
              v23 = *v6;
              v24 = *(_QWORD *)&v5[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
              *(_QWORD *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_56;
              v20 += 7;
              v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_58;
              }
            }
            v5[*v8] = 1;
LABEL_56:
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_58:
            v49 = 28;
            goto LABEL_71;
          case 2u:
            v29 = 0;
            v30 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 1u;
            while (2)
            {
              v31 = *v6;
              v32 = *(_QWORD *)&v5[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v32);
                *(_QWORD *)&v5[v31] = v33;
                v22 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  v17 = v30++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_62:
            v49 = 24;
            goto LABEL_71;
          case 3u:
            v35 = 0;
            v36 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 4u;
            while (2)
            {
              v37 = *v6;
              v38 = *(_QWORD *)&v5[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v38);
                *(_QWORD *)&v5[v37] = v39;
                v22 |= (unint64_t)(v40 & 0x7F) << v35;
                if (v40 < 0)
                {
                  v35 += 7;
                  v17 = v36++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_66;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_66:
            v49 = 32;
            goto LABEL_71;
          case 4u:
            v41 = 0;
            v42 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 8u;
            while (2)
            {
              v43 = *v6;
              v44 = *(_QWORD *)&v5[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v46 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v44);
                *(_QWORD *)&v5[v43] = v45;
                v22 |= (unint64_t)(v46 & 0x7F) << v41;
                if (v46 < 0)
                {
                  v41 += 7;
                  v17 = v42++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_70:
            v49 = 36;
LABEL_71:
            *(_DWORD *)(a1 + v49) = v22;
            goto LABEL_72;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_75;
            v47 = objc_alloc_init(GEOFormattedString);
            if (!GEOFormattedStringReadAllFrom((uint64_t)v47, v5, a3))
            {

              goto LABEL_75;
            }
            PBReaderRecallMark();
            v48 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v47;

LABEL_72:
            if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
              goto LABEL_73;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_75;
            goto LABEL_72;
        }
      }
    }
LABEL_73:
    v50 = v5[*v8] == 0;
  }
  else
  {
LABEL_75:
    v50 = 0;
  }
  objc_sync_exit(v5);

  return v50;
}

void sub_189152A04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDHikeSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189152A64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeSummaryFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189153590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikingAssociationModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDTemplatePlaceModuleConfiguration *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDTemplatePlaceModuleConfiguration);
          if (!GEOPDTemplatePlaceModuleConfigurationReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189153B68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTemplatePlaceModuleConfigurationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_61;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v33 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_189154328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDHoursReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  char v17;
  int *v18;
  int *v19;
  int v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  GEOPDHoursThreshold *v47;
  void *v48;
  id v49;
  void *v50;
  int v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  char v64;
  char v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v12 = ((*(unsigned __int8 *)(a1 + 92) >> 2) & 1)
      + (*(_BYTE *)(a1 + 92) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 3) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v15 = v12 > 1;
        v16 = v15 & ~(_BYTE)v10 | v9;
        v17 = v15 | v10;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v15 | v10) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_90;
        v64 = v15 & ~(_BYTE)v10 | v9;
        v65 = v17 | v16;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v67 = (v19 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v66 = v15 | v10;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
LABEL_9:
        ++v7;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_88;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v18;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_24;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_24:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_26:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_88:
      v20 = 1;
      goto LABEL_89;
    }
    v34 = v25 >> 3;
    v35 = v17;
    if ((v67 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
      break;
    if ((_DWORD)v34 == 2)
    {
      if (v35 && (*(_BYTE *)(a1 + 92) & 4) == 0)
      {
        if (!PBReaderPlaceMark())
          goto LABEL_106;
        -[GEOPDHours _reserveTimeRanges:](a1, 1uLL);
        if (!GEOPDLocalTimeRangeReadAllFrom(*(_QWORD *)(a1 + 48) + 12 * *(_QWORD *)(a1 + 56), v3))
          goto LABEL_106;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 56);
        goto LABEL_85;
      }
      goto LABEL_71;
    }
    if ((_DWORD)v34 == 1)
    {
      if (v35 && (*(_BYTE *)(a1 + 92) & 2) == 0)
      {
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_106;
          while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v21))
          {
            v40 = 0;
            v41 = 0;
            v42 = 0;
            while (1)
            {
              v43 = *v18;
              v44 = *(_QWORD *)(v3 + v43);
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
                break;
              v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v44);
              *(_QWORD *)(v3 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                v30 = v41++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_54;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_54:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          while (1)
          {
            v56 = *v18;
            v57 = *(_QWORD *)(v3 + v56);
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v30 = v54++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_84;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_84:
          PBRepeatedInt32Add();
        }
        goto LABEL_85;
      }
      goto LABEL_71;
    }
    if ((v64 & 1) == 0 || (*(_BYTE *)(a1 + 92) & 1) != 0)
      goto LABEL_71;
    if (!*(_QWORD *)(a1 + 16))
    {
      v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v50 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v49;

    }
    v51 = PBUnknownFieldAdd();
    v17 = v66;
    if (!v51)
    {
      v20 = 0;
      v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_91;
    }
LABEL_86:
    if (!(v65 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_88;
  }
  if (!v35)
  {
LABEL_71:
    v52 = PBReaderSkipValueWithTag();
    v17 = v66;
    if ((v52 & 1) == 0)
    {
      v20 = 0;
      goto LABEL_89;
    }
    goto LABEL_86;
  }
  if ((*(_BYTE *)(a1 + 92) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_106;
    v7 += *(unsigned __int8 *)(a1 + 92) << 28 >> 31;
    goto LABEL_85;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_106;
  v47 = objc_alloc_init(GEOPDHoursThreshold);
  if (GEOPDHoursThresholdReadAllFrom((uint64_t)v47, (void *)v3))
  {
    PBReaderRecallMark();
    v48 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v47;

    --v7;
LABEL_85:
    v17 = v66;
    goto LABEL_86;
  }

LABEL_106:
  v20 = 0;
  v17 = v66;
LABEL_89:
  v16 = v64;
  v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_90:
  if ((v16 & 1) != 0)
LABEL_91:
    *(_BYTE *)(a1 + v11[28]) |= 1u;
  if (v17 & 1 | ((v20 & 1) == 0))
  {
    *(_BYTE *)(a1 + v11[28]) |= 2u;
    *(_BYTE *)(a1 + v11[28]) |= 4u;
    *(_BYTE *)(a1 + v11[28]) |= 8u;
  }
  else if (v19)
  {
    while (1)
    {
      v60 = *v19++;
      v61 = 2;
      switch(v60)
      {
        case 0:
          goto LABEL_99;
        case 1:
          goto LABEL_98;
        case 2:
          v61 = 4;
          goto LABEL_98;
        case 3:
          v61 = 8;
LABEL_98:
          *(_BYTE *)(a1 + v11[28]) |= v61;
          break;
        default:
          continue;
      }
    }
  }
LABEL_99:
  if (v20)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v17 & 1) == 0)
      return v3;
LABEL_103:
    v62 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v17 & 1) != 0)
      goto LABEL_103;
  }
  return v3;
}

void sub_189154EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891553A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189155D90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDHoursReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDHoursReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDHoursReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDHoursReadAllFrom_initialTag;
  Specified = GEOPDHoursReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189155F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDHoursReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDHoursReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189155F78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189156194(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHoursIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = (*(_BYTE *)(a1 + 92) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_1891564FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189156844(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHoursFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189156D60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHoursThresholdReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDHoursThreshold__openingSoonMessageThresholdSecond;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDHoursThreshold__openingSoonMessageThresholdSecond;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDHoursThreshold__openingSoonMessageThresholdSecond;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDHoursThreshold__closingSoonMessageThresholdSecond;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDHoursThreshold__closingSoonMessageThresholdSecond;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDHoursThreshold__closingSoonMessageThresholdSecond;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1891575AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDISO3166CodeFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189157FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIconReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOPDPhoto *v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v22 = 0;
          v23 = 0;
          v24 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v25 = *v6;
            v26 = *(_QWORD *)&v5[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
            *(_QWORD *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0)
              goto LABEL_36;
            v22 += 7;
            v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v24) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEOPDPhoto);
          if (!GEOPDPhotoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_1891588A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIconFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189158F50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDInlineRapEnablementReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  id v27;
  void *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _BOOL8 v47;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isHoursEditable;
                goto LABEL_56;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                v20 = 0;
                v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isHoursEditable;
                goto LABEL_59;
              }
            }
            v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isHoursEditable;
            goto LABEL_57;
          case 2u:
            v29 = 0;
            v30 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 4u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isPhoneEditable;
                goto LABEL_56;
              }
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v25 = v30++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isPhoneEditable;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isPhoneEditable;
            goto LABEL_57;
          case 3u:
            v35 = 0;
            v36 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 8u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isWebsiteEditable;
                goto LABEL_56;
              }
              v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
              *(_QWORD *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v25 = v36++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isWebsiteEditable;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isWebsiteEditable;
            goto LABEL_57;
          case 4u:
            v41 = 0;
            v42 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 20) |= 1u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if ((PBUnknownFieldAdd() & 1) == 0)
              goto LABEL_67;
            continue;
        }
        while (1)
        {
          v43 = *v4;
          v44 = *(_QWORD *)&v3[v43];
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
            break;
          v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
          *(_QWORD *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isAddressEditable;
            goto LABEL_57;
          }
          v41 += 7;
          v25 = v42++ > 8;
          if (v25)
          {
            v20 = 0;
            v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isAddressEditable;
            goto LABEL_59;
          }
        }
        v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isAddressEditable;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6])
          v20 = 0;
LABEL_59:
        *(_BYTE *)(a1 + *v26) = v20 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_189159C20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDInlineRapEnablementReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDInlineRapEnablementReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189159C80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915A400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDJoeColorReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFBFFFEFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 0x10) != 0)+ ((*(_BYTE *)(a1 + 80) & 2) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v58 = v15;
        v59 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16;
        v61 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      v56 = 1;
      goto LABEL_88;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 80) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v51 = 32 * *(_BYTE *)(a1 + 80);
        goto LABEL_84;
      case 2:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 80) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v51 = 16 * *(_BYTE *)(a1 + 80);
        goto LABEL_84;
      case 3:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 80) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v51 = 4 * *(_BYTE *)(a1 + 80);
        goto LABEL_84;
      case 4:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 80) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v51 = 2 * *(_BYTE *)(a1 + 80);
        goto LABEL_84;
      case 5:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_59:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v9;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_86;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v51 = 8 * *(_BYTE *)(a1 + 80);
LABEL_84:
          v9 += v51 >> 7;
          goto LABEL_85;
        }
LABEL_106:
        v56 = 0;
        v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_89:
        if ((v58 & 1) != 0)
LABEL_90:
          *(_BYTE *)(a1 + v57[44]) |= 2u;
        if (v61 || (v56 & 1) == 0)
        {
          *(_BYTE *)(a1 + v57[44]) |= 4u;
          *(_BYTE *)(a1 + v57[44]) |= 8u;
          *(_BYTE *)(a1 + v57[44]) |= 0x20u;
          *(_BYTE *)(a1 + v57[44]) |= 0x40u;
          *(_BYTE *)(a1 + v57[44]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v52 = *v17++;
            v53 = 4;
            switch(v52)
            {
              case 0:
                goto LABEL_100;
              case 1:
                goto LABEL_99;
              case 2:
                v53 = 8;
                goto LABEL_99;
              case 3:
                v53 = 32;
                goto LABEL_99;
              case 4:
                v53 = 64;
                goto LABEL_99;
              case 5:
                v53 = 16;
LABEL_99:
                *(_BYTE *)(a1 + v57[44]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_100:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v61)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                v45 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v45 = 0;
LABEL_73:
        *(_BYTE *)(a1 + 76) = v45 != 0;
        goto LABEL_86;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 2) != 0)
        {
LABEL_68:
          v50 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v56 = 0;
LABEL_88:
            v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_89;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_90;
          }
        }
LABEL_86:
        if (!(v59 & 1 | (v9 != 0)))
          goto LABEL_87;
        continue;
    }
  }
}

void sub_18915B26C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915B344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDJoeColorReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDJoeColorReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDJoeColorReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDJoeColorReadAllFrom_initialTag;
  Specified = GEOPDJoeColorReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18915B594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915B7A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915B9B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLabelGeometryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOPDLineString *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  _BOOL8 v28;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_36;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            v21 = 0;
LABEL_38:
          *(_BYTE *)(a1 + 24) = v21 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v18 = objc_alloc_init(GEOPDLineString);
          if (!GEOPDLineStringReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDLabelGeometry addLabelShape:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_18915C428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLabelGeometryFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18915CC74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLineStringReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOLatLng *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDLineString addPoint:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18915D3CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915D8EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  GEOPDQuickLinkActionDataParams *v47;
  uint64_t v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  int v59;
  char v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v65 = v16 & ~(_BYTE)v11 | v9;
        v66 = v16 | v11 | v65;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v67 = (v17 == 0) | v16 | v11;
        v68 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_104;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_104:
      v63 = 1;
      goto LABEL_105;
    }
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_85;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_87;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_85:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_87:
        v57 = 68;
        goto LABEL_92;
      case 2:
        if (!v32)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v58 = 4 * *(_BYTE *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v47 = objc_alloc_init(GEOPDQuickLinkActionDataParams);
        if (!GEOPDQuickLinkActionDataParamsReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v48 = 40;
        goto LABEL_73;
      case 3:
        if (!v32)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v58 = 16 * *(_BYTE *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v47 = objc_alloc_init(GEOPDAppClipParams);
        if (!GEOPDAppClipParamsReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v48 = 24;
        goto LABEL_73;
      case 4:
        if (!v32)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v58 = 8 * *(_BYTE *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v47 = objc_alloc_init(GEOPDExtensionParams);
        if (!GEOPDExtensionParamsReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v48 = 32;
        goto LABEL_73;
      case 5:
        if (!v32)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v58 = 2 * *(_BYTE *)(a1 + 76);
LABEL_101:
          v7 += v58 >> 7;
LABEL_102:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v47 = objc_alloc_init(GEOPDWebLinkParams);
        if (GEOPDWebLinkParamsReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v48 = 48;
LABEL_73:
          v49 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          --v7;
          goto LABEL_102;
        }
LABEL_122:

LABEL_123:
        v63 = 0;
        v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        if ((v65 & 1) != 0)
LABEL_107:
          *(_BYTE *)(a1 + v64[52]) |= 4u;
        if (v68 & 1 | ((v63 & 1) == 0))
        {
          *(_BYTE *)(a1 + v64[52]) |= 0x20u;
          *(_BYTE *)(a1 + v64[52]) |= 8u;
          *(_BYTE *)(a1 + v64[52]) |= 0x10u;
          *(_BYTE *)(a1 + v64[52]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v59 = *v17++;
            v60 = 32;
            switch(v59)
            {
              case 0:
                goto LABEL_116;
              case 2:
                goto LABEL_115;
              case 3:
                v60 = 8;
                goto LABEL_115;
              case 4:
                v60 = 16;
                goto LABEL_115;
              case 5:
                v60 = 64;
LABEL_115:
                *(_BYTE *)(a1 + v64[52]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v68 & 1) != 0)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v50 = 0;
        v51 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v39 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_91:
        v57 = 72;
LABEL_92:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_103;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_82:
          v56 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
LABEL_105:
            v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v66 & 1 | (v7 != 0)))
          goto LABEL_104;
        continue;
    }
  }
}

void sub_18915E23C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915E324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915E40C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915E910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLinkCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDQuickLinkActionDataParams readAll:](a1[5], 1);
  -[GEOPDAppClipParams readAll:](a1[3], 1);
  -[GEOPDExtensionParams readAll:](a1[4], 1);
  -[GEOPDWebLinkParams readAll:](a1[6], 1);
}

unint64_t GEOPDLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLinkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLinkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLinkReadAllFrom_initialTag;
  Specified = GEOPDLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDLinkCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18915EBD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915EDE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDLinkIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  _BOOL8 v9;
  uint64_t v10;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(char *)(a1 + 76);
  if (v2 < 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    v3 = *(_QWORD *)(a1 + 40);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 64));
      v4 = *(_BYTE *)(v3 + 68) & 0x3E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 64));
      if (v4)
        return 1;
      LOBYTE(v2) = *(_BYTE *)(a1 + 76);
    }
  }
  if ((v2 & 8) != 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 72));
      v6 = *(_BYTE *)(v5 + 76) & 0x7E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 72));
      if (v6)
        return 1;
    }
    LOBYTE(v2) = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 0x10) != 0)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (v7)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v7 + 80));
      v8 = *(_BYTE *)(v7 + 84) & 0x3E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 80));
      if (v8)
        return 1;
    }
    LOBYTE(v2) = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 0x40) == 0)
    return 0;
  v10 = *(_QWORD *)(a1 + 48);
  if (!v10)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v10 + 56));
  v9 = (*(_BYTE *)(v10 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 56));
  return v9;
}

void sub_18915F1C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915F608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkedPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDMapsIdentifier *v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  uint64_t v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_90;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_90:
      v57 = 1;
      goto LABEL_91;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_109;
          v37 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            v38 = 40;
            goto LABEL_63;
          }
          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v52 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_87;
      case 2:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v42;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v52 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_87;
      case 3:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v52 = 32 * *(_BYTE *)(a1 + 76);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v37 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v37, (void *)v3))
          goto LABEL_108;
        PBReaderRecallMark();
        v38 = 24;
        goto LABEL_63;
      case 4:
        if (!v32)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_109;
          v52 = 4 * *(_BYTE *)(a1 + 76);
LABEL_87:
          v7 += v52 >> 7;
LABEL_88:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v37 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = 56;
LABEL_63:
          v43 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
LABEL_64:

          --v7;
          goto LABEL_88;
        }
LABEL_108:

LABEL_109:
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_92:
        if ((v59 & 1) != 0)
LABEL_93:
          *(_BYTE *)(a1 + v58[60]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[60]) |= 8u;
          *(_BYTE *)(a1 + v58[60]) |= 0x10u;
          *(_BYTE *)(a1 + v58[60]) |= 4u;
          *(_BYTE *)(a1 + v58[60]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 8;
            switch(v53)
            {
              case 0:
                goto LABEL_102;
              case 1:
                goto LABEL_101;
              case 2:
                v54 = 16;
                goto LABEL_101;
              case 3:
                v54 = 4;
                goto LABEL_101;
              case 4:
                v54 = 32;
LABEL_101:
                *(_BYTE *)(a1 + v58[60]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_102:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_73;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                v46 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v46 = 0;
LABEL_78:
        *(_QWORD *)(a1 + 32) = v46;
        goto LABEL_89;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 2) != 0)
        {
LABEL_73:
          v51 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_91:
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_92;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v41)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_93;
          }
        }
LABEL_89:
        if (!(v60 & 1 | (v7 != 0)))
          goto LABEL_90;
        continue;
    }
  }
}

void sub_18915FE78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18915FF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189160048(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891604C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkedPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLinkedPlaceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLinkedPlaceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLinkedPlaceReadAllFrom_initialTag;
  Specified = GEOPDLinkedPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189160AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189160CA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLinkedPlaceIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189160F08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891612EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkedServiceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDBusinessHours *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_72;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_72:
      v52 = 1;
      goto LABEL_73;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
    {
      if (v35 && (*(_BYTE *)(a1 + 60) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_90;
        v40 = objc_alloc_init(GEOPDBusinessHours);
        if (!GEOPDBusinessHoursReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_89;
        PBReaderRecallMark();
        -[GEOPDLinkedService _addNoFlagsHours:](a1, v40);

        goto LABEL_70;
      }
      goto LABEL_63;
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_90;
          v40 = objc_alloc_init(GEOPDEntity);
          if (!GEOPDEntityReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
            goto LABEL_89;
          PBReaderRecallMark();
          v41 = 24;
LABEL_56:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
LABEL_70:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_90;
        v47 = *(_BYTE *)(a1 + 60) << 6;
LABEL_69:
        v7 += v47 >> 7;
        goto LABEL_70;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_75;
      }
      goto LABEL_71;
    }
LABEL_63:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_73:
      v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_74;
    }
LABEL_71:
    if (!(v55 & 1 | (v7 != 0)))
      goto LABEL_72;
  }
  if (!v35)
    goto LABEL_63;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_90;
    v47 = 16 * *(_BYTE *)(a1 + 60);
    goto LABEL_69;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_90;
  v40 = objc_alloc_init(GEOPDPlaceInfo);
  if (GEOPDPlaceInfoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = 40;
    goto LABEL_56;
  }
LABEL_89:

LABEL_90:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  if ((v54 & 1) == 0)
    goto LABEL_76;
LABEL_75:
  *(_BYTE *)(a1 + v53[68]) |= 1u;
LABEL_76:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[68]) |= 2u;
    *(_BYTE *)(a1 + v53[68]) |= 8u;
    *(_BYTE *)(a1 + v53[68]) |= 4u;
  }
  else if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v49 = 2;
      switch(v48)
      {
        case 0:
          goto LABEL_83;
        case 1:
          goto LABEL_82;
        case 2:
          v49 = 8;
          goto LABEL_82;
        case 3:
          v49 = 4;
LABEL_82:
          *(_BYTE *)(a1 + v53[68]) |= v49;
          break;
        default:
          continue;
      }
    }
  }
LABEL_83:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891619C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189161A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189162034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLinkedServiceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  -[GEOPDPlaceInfo readAll:](*(_QWORD *)(a1 + 40), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDBusinessHours readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDLinkedServiceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLinkedServiceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLinkedServiceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLinkedServiceReadAllFrom_initialTag;
  Specified = GEOPDLinkedServiceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDLinkedServiceCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1891623B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189162684(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891628EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLinkedServiceFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189162EC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPDLocalTimeRangeDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOWiFiQualityTimeRangeDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOPDLocalTimeRange<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

BOOL GEOPDLocalTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPDLocalTimeRangeReadAllFrom(a1, a2);
}

BOOL GEOPDLocalTimeRangeReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  _DWORD *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (_DWORD *)(a1 + 4);
    v8 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v3;
        v13 = *(_QWORD *)(a2 + v12);
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)(a2 + *v4))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        if (v10++ >= 9)
        {
          v11 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v11 = 0;
LABEL_14:
      if (v17 || (v11 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v11 >> 3) == 2)
        break;
      if ((v11 >> 3) == 1)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 8) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
          {
            v27 = (_DWORD *)a1;
            goto LABEL_38;
          }
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            break;
          v19 += 7;
          v26 = v20++ > 8;
          if (v26)
          {
            LODWORD(v21) = 0;
            v27 = (_DWORD *)a1;
            goto LABEL_41;
          }
        }
        v27 = (_DWORD *)a1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_41:
        *v27 = v21;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v28 = 0;
    v29 = 0;
    v21 = 0;
    *(_BYTE *)(a1 + 8) |= 2u;
    while (1)
    {
      v30 = *v3;
      v31 = *(_QWORD *)(a2 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(a2 + *v4))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v31);
      *(_QWORD *)(a2 + v30) = v32;
      v21 |= (unint64_t)(v33 & 0x7F) << v28;
      if ((v33 & 0x80) == 0)
      {
        v27 = v7;
        goto LABEL_39;
      }
      v28 += 7;
      v26 = v29++ > 8;
      if (v26)
      {
        LODWORD(v21) = 0;
        v27 = v7;
        goto LABEL_41;
      }
    }
    v27 = v7;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL GEOPDLocalTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOPDLocalTimeRangeHash()
{
  return PBHashBytes();
}

unint64_t GEOPDLocalizedAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOAddress *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_64;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_64:
      v53 = 1;
      goto LABEL_65;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v40;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_85;
        v47 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_61;
      }
    }
    else if ((v55 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v53 = 0;
        v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v53 = 0;
LABEL_65:
      v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v56 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if (!v35)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_61:
    v10 += v47 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v42 = objc_alloc_init(GEOAddress);
  if (GEOAddressReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v42;
LABEL_48:

    --v10;
LABEL_62:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_63;
  }

LABEL_85:
  v53 = 0;
  v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v55 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + v54[73]) |= 1u;
LABEL_68:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[73]) |= 4u;
    *(_BYTE *)(a1 + v54[73]) |= 2u;
    goto LABEL_78;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v49 = *v20++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 3)
        {
          v50 = 2;
          goto LABEL_77;
        }
        if (!v48)
          goto LABEL_78;
      }
      v50 = 4;
LABEL_77:
      *(_BYTE *)(a1 + v54[73]) |= v50;
      continue;
    }
  }
LABEL_78:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891639C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189163D24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189163E08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocalizedAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLocalizedAddressReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLocalizedAddressReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLocalizedAddressReadAllFrom_initialTag;
  Specified = GEOPDLocalizedAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189164184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189164300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDLocalizedAddressIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xC) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
    return GEOAddressIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDLocalizedAddressIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDLocalizedAddressIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189164530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocalizedSpokenStructuredAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOStructuredAddress *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_64;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_64:
      v53 = 1;
      goto LABEL_65;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_85;
        v47 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_61;
      }
    }
    else if ((v55 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v53 = 0;
        v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v53 = 0;
LABEL_65:
      v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v56 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if (!v35)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v47 = 32 * *(_BYTE *)(a1 + 52);
LABEL_61:
    v10 += v47 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v42 = objc_alloc_init(GEOStructuredAddress);
  if (GEOStructuredAddressReadAllFrom(v42, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v42;
LABEL_48:

    --v10;
LABEL_62:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_63;
  }

LABEL_85:
  v53 = 0;
  v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v55 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + v54[78]) |= 1u;
LABEL_68:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[78]) |= 2u;
    *(_BYTE *)(a1 + v54[78]) |= 4u;
    goto LABEL_78;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v49 = *v20++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 3)
        {
          v50 = 4;
          goto LABEL_77;
        }
        if (!v48)
          goto LABEL_78;
      }
      v50 = 2;
LABEL_77:
      *(_BYTE *)(a1 + v54[78]) |= v50;
      continue;
    }
  }
LABEL_78:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189164D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891650A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189165170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocalizedSpokenStructuredAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLocalizedSpokenStructuredAddressReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLocalizedSpokenStructuredAddressReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLocalizedSpokenStructuredAddressReadAllFrom_initialTag;
  Specified = GEOPDLocalizedSpokenStructuredAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891653C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916554C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891656BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOLocalizedString *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDLocationData addLocationName:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189165EC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  int v52;
  int v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v58 = v15 | v8;
        v59 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16;
        v61 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_71;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_71:
      v56 = 1;
      goto LABEL_72;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_58;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_90;
        v49 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_64;
      case 2:
        if (!v32)
          goto LABEL_58;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_49:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
LABEL_70:
          if (!(v59 & 1 | (v10 != 0)))
            goto LABEL_71;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v49 = 16 * *(_BYTE *)(a1 + 68);
LABEL_64:
          v10 += v49 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_70;
        }
LABEL_90:
        v56 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
        v57 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        if ((v58 & 1) != 0)
LABEL_73:
          *(_BYTE *)(a1 + v57[455]) |= 4u;
        if (v61 || (v56 & 1) == 0)
        {
          *(_BYTE *)(a1 + v57[455]) |= 0x10u;
          *(_BYTE *)(a1 + v57[455]) |= 8u;
          goto LABEL_84;
        }
        if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v52 = v53;
            if (v53 == 1)
              break;
            if (v52 == 2)
            {
              v51 = 8;
LABEL_80:
              *(_BYTE *)(a1 + v57[455]) |= v51;
            }
            else if (!v52)
            {
              goto LABEL_84;
            }
          }
          v51 = 16;
          goto LABEL_80;
        }
LABEL_84:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v61)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_58;
        *(_BYTE *)(a1 + 68) |= 2u;
        v43 = *v18;
        v44 = *(_QWORD *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v45 = 0;
        }
        v50 = 32;
        goto LABEL_69;
      case 4:
        if ((v9 & 1) == 0)
          goto LABEL_58;
        *(_BYTE *)(a1 + 68) |= 1u;
        v46 = *v18;
        v47 = *(_QWORD *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v47);
          *(_QWORD *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v45 = 0;
        }
        v50 = 24;
LABEL_69:
        *(_QWORD *)(a1 + v50) = v45;
        goto LABEL_70;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 4) != 0)
        {
LABEL_58:
          v48 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v48 & 1) == 0)
          {
            v56 = 0;
            goto LABEL_72;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
            goto LABEL_73;
          }
        }
        goto LABEL_70;
    }
  }
}

void sub_189166C5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189166D28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDLocationEventReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDLocationEventReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDLocationEventReadAllFrom_initialTag;
  Specified = GEOPDLocationEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189166F7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189167154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189167320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationEventFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189167A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationInfoItemReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189168034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189168468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891685A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891686E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189168820(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMapsResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  -[GEOPDCollectionResult readAll:](*(_QWORD *)(a1 + 32), 1);
  -[GEOPDPublisherResult readAll:](*(_QWORD *)(a1 + 56), 1);
  -[GEOPDPlaceQuestionnaireResult readAll:](*(_QWORD *)(a1 + 40), 1);
  -[GEOPDBatchReverseGeocodeResult readAll:](*(_QWORD *)(a1 + 24), 1);
}

unint64_t GEOPDMapsResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDMapsResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189169A7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDMapsResultIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  os_unfair_lock_s *v8;
  uint64_t IsDirty;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(char *)(a1 + 80);
  if (v2 < 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 8) != 0)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
      v4 = *(_BYTE *)(v3 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
      if (v4)
        return 1;
    }
    LOBYTE(v2) = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 0x40) != 0)
  {
    v5 = *(_QWORD *)(a1 + 56);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 48));
      v6 = *(_BYTE *)(v5 + 56) & 0x1C;
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 48));
      if (v6)
        return 1;
    }
    LOBYTE(v2) = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 0x10) != 0)
  {
    if ((GEOPDPlaceQuestionnaireResultIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    LOBYTE(v2) = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 4) == 0)
    return 0;
  v8 = *(os_unfair_lock_s **)(a1 + 24);
  if (!v8)
    return 0;
  os_unfair_lock_lock_with_options();
  IsDirty = _GEOPDBatchReverseGeocodeResultIsDirty((uint64_t)v8);
  os_unfair_lock_unlock(v8 + 12);
  return IsDirty;
}

void GEOPDMapsResultClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id *v11;
  int HasSensitiveFields;
  void *v13;
  uint64_t v14;
  id v15;

  if (a3)
  {
    if (objc_msgSend(a1, "hasPlace")
      && (objc_msgSend(a1, "place"),
          v5 = (void *)objc_claimAutoreleasedReturnValue(),
          v6 = GEOPDPlaceHasSensitiveFields(v5, a2),
          v5,
          v6))
    {
      objc_msgSend(a1, "place");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = (void *)objc_msgSend(v7, "copy");

      objc_msgSend(v8, "requestData");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "clearSensitiveFields:", a2);

      objc_msgSend(a1, "setPlace:", v8);
    }
    else
    {
      objc_msgSend(a1, "place");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasBatchReverseGeocode"))
    {
      objc_msgSend(a1, "batchReverseGeocode");
      v11 = (id *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEOPDBatchReverseGeocodeResultHasSensitiveFields(v11, a2);

      if (HasSensitiveFields)
      {
        objc_msgSend(a1, "batchReverseGeocode");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = (id)objc_msgSend(v13, "copy");

        GEOPDBatchReverseGeocodeResultClearSensitiveFields((uint64_t)v15, a2, 0);
        objc_msgSend(a1, "setBatchReverseGeocode:", v15);
        goto LABEL_12;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "place");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "batchReverseGeocode");
  v14 = objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    v15 = (id)v14;
    GEOPDBatchReverseGeocodeResultClearSensitiveFields(v14, a2, 1);
  }
  else
  {
    v15 = 0;
  }
LABEL_12:

}

uint64_t GEOPDMapsResultHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t HasSensitiveFields;
  id *v6;

  if (!a1)
    return 0;
  objc_msgSend(a1, "place");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOPDPlaceHasSensitiveFields(v4, a2) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "batchReverseGeocode");
    v6 = (id *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDBatchReverseGeocodeResultHasSensitiveFields(v6, a2);

  }
  return HasSensitiveFields;
}

void sub_18916A4CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916AC04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916B1A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMediaLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  GEOPDThirdPartyLink *v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFAFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v67 = v16 & ~(_BYTE)v11 | v9;
        v68 = v16 | v11 | v67;
        v66 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16 | v11;
        v70 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_99;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_99:
      v64 = 1;
      goto LABEL_100;
    }
    v31 = v23 >> 3;
    v32 = v70;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v59 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_96;
      case 2:
        if (!v32)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_51:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v59 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_96;
      case 3:
        if ((v66 & 1) == 0)
          goto LABEL_79;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_84:
        v58 = 72;
        goto LABEL_89;
      case 4:
        if ((v66 & 1) == 0)
          goto LABEL_79;
        v50 = 0;
        v51 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v45 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_88:
        v58 = 68;
LABEL_89:
        *(_DWORD *)(a1 + v58) = v45;
        goto LABEL_98;
      case 5:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 0x40) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v56 = objc_alloc_init(GEOPDThirdPartyLink);
        if (!GEOPDThirdPartyLinkReadAllFrom((uint64_t)v56, (void *)v3, v10 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        -[GEOPDMediaLink _addNoFlagsThirdPartyLink:](a1, v56);

        goto LABEL_97;
      case 6:
        if (!v32)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v59 = 8 * *(_BYTE *)(a1 + 76);
LABEL_96:
          v7 += v59 >> 7;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v56 = objc_alloc_init(GEOPDMediaLinkPositionMetaData);
        if (GEOPDMediaLinkPositionMetaDataReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v56;
LABEL_78:

          --v7;
LABEL_97:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_98;
        }
LABEL_117:

LABEL_118:
        v64 = 0;
        v65 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_101:
        if ((v67 & 1) != 0)
LABEL_102:
          *(_BYTE *)(a1 + v65[86]) |= 4u;
        if (v70 & 1 | ((v64 & 1) == 0))
        {
          *(_BYTE *)(a1 + v65[86]) |= 8u;
          *(_BYTE *)(a1 + v65[86]) |= 0x20u;
          *(_BYTE *)(a1 + v65[86]) |= 0x40u;
          *(_BYTE *)(a1 + v65[86]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v60 = *v17++;
            v61 = 8;
            switch(v60)
            {
              case 0:
                goto LABEL_111;
              case 1:
                goto LABEL_110;
              case 2:
                v61 = 32;
                goto LABEL_110;
              case 5:
                v61 = 64;
                goto LABEL_110;
              case 6:
                v61 = 16;
LABEL_110:
                *(_BYTE *)(a1 + v65[86]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v67 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_79:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
LABEL_100:
            v65 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_102;
          }
        }
LABEL_98:
        if (!(v68 & 1 | (v7 != 0)))
          goto LABEL_99;
        continue;
    }
  }
}

void sub_18916BA64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916BC24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916BE0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916C3EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMediaLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDThirdPartyLink readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDMediaLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMediaLinkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMediaLinkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMediaLinkReadAllFrom_initialTag;
  Specified = GEOPDMediaLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDMediaLinkCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18916C73C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916C9F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMediaLinkIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 76) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18916CD4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMediaLinkPositionMetaDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__collectionItemIndex;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__collectionItemIndex;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__collectionItemIndex;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__mediaLinkPosition;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__mediaLinkPosition;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__mediaLinkPosition;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18916D68C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916DA50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMessageLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  GEOPDHours *v51;
  void *v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  __int16 v61;
  int v62;
  __int16 v63;
  void *v64;
  int v66;
  int *v67;
  char v68;
  char v69;
  char v70;
  BOOL v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFF8FFFDFFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 6) & 1)+ ((*(_WORD *)(a1 + 92) >> 7) & 1)+ ((*(_WORD *)(a1 + 92) >> 2) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v68 = v17;
        v69 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v70 = (v19 == 0) | v18;
        v71 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_108;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_108:
      v66 = 1;
      goto LABEL_109;
    }
    v33 = v25 >> 3;
    v34 = v71;
    if ((v70 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 92) & 0x10) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 32;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_129;
        v61 = *(_WORD *)(a1 + 92) << 11;
        goto LABEL_105;
      case 2:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 40;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_129;
        v61 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_105;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_85;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          v47 = *v20;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_90:
        *(_DWORD *)(a1 + 84) = v46;
        goto LABEL_107;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 92) & 8) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v51 = objc_alloc_init(GEOPDHours);
        if (!GEOPDHoursReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_128;
        PBReaderRecallMark();
        -[GEOPDMessageLink _addNoFlagsHoursOfOperation:](a1, v51);

        goto LABEL_106;
      case 5:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v61 = *(_WORD *)(a1 + 92) << 7;
LABEL_105:
          v7 += v61 >> 15;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v51 = objc_alloc_init(GEOTimezone);
        if (GEOTimezoneReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          v52 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v51;
LABEL_84:

          --v7;
LABEL_106:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_107;
        }
LABEL_128:

LABEL_129:
        v66 = 0;
        v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_110:
        if ((v68 & 1) != 0)
LABEL_111:
          *(_WORD *)(a1 + v67[98]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(_WORD *)(a1 + v67[98]) |= 0x10u;
          *(_WORD *)(a1 + v67[98]) |= 0x20u;
          *(_WORD *)(a1 + v67[98]) |= 8u;
          *(_WORD *)(a1 + v67[98]) |= 0x100u;
          *(_WORD *)(a1 + v67[98]) |= 0x40u;
          *(_WORD *)(a1 + v67[98]) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            v62 = *v19++;
            v63 = 16;
            switch(v62)
            {
              case 0:
                goto LABEL_122;
              case 1:
                goto LABEL_121;
              case 2:
                v63 = 32;
                goto LABEL_121;
              case 4:
                v63 = 8;
                goto LABEL_121;
              case 5:
                v63 = 256;
                goto LABEL_121;
              case 7:
                v63 = 64;
                goto LABEL_121;
              case 8:
                v63 = 128;
LABEL_121:
                *(_WORD *)(a1 + v67[98]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_122:
        if (v66)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v71)
        {
          v64 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_85;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          v56 = *v20;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v30 = v54++ >= 9;
              if (v30)
              {
                v55 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v55 = 0;
LABEL_94:
        *(_BYTE *)(a1 + 88) = v55 != 0;
        goto LABEL_107;
      case 7:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 48;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_129;
        v61 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_105;
      case 8:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 92) & 0x80) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 56;
LABEL_83:
          v52 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
          goto LABEL_84;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_129;
        v61 = *(_WORD *)(a1 + 92) << 8;
        goto LABEL_105;
      default:
        if ((v68 & 1) == 0 || (*(_WORD *)(a1 + 92) & 4) != 0)
        {
LABEL_85:
          v60 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v60 & 1) == 0)
          {
            v66 = 0;
LABEL_109:
            v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v43)
          {
            v66 = 0;
            v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_111;
          }
        }
LABEL_107:
        if (!(v69 & 1 | (v7 != 0)))
          goto LABEL_108;
        continue;
    }
  }
}

void sub_18916E42C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916E580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916E768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916E850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916E938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916EF64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMessageLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDMessageLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMessageLinkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMessageLinkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMessageLinkReadAllFrom_initialTag;
  Specified = GEOPDMessageLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDMessageLinkCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18916F2B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916F5A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18916F8C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMessageLinkFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189170064(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189170294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMiniBrowseCategoriesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  int *v19;
  _BOOL4 v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDMiniBrowseCategory *v40;
  id v41;
  void *v42;
  int v43;
  int v44;
  char v45;
  void *v46;
  char v48;
  int v49;
  int v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v8;
        v50 = v16 | v11;
        if ((((v16 | v11) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = v10 != 0;
        v21 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_61;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v48 = v17;
        v49 = v20 | v50 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_59;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_59:
      v21 = 1;
      goto LABEL_60;
    }
    v34 = v26 >> 3;
    v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
      {
LABEL_57:
        v21 = PBReaderSkipValueWithTag();
        if ((v21 & v49 & 1) == 0)
          goto LABEL_60;
        goto LABEL_58;
      }
      PBReaderReadString();
      v40 = (GEOPDMiniBrowseCategory *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEOPDMiniBrowseCategories _addNoFlagsTopChildName:](a1, v40);
      goto LABEL_49;
    }
    if ((_DWORD)v34 == 1)
      break;
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_57;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    if (!v21)
      goto LABEL_62;
LABEL_55:
    if ((v49 & 1) == 0)
      goto LABEL_59;
LABEL_58:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_59;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_57;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_80;
  v40 = objc_alloc_init(GEOPDMiniBrowseCategory);
  if (GEOPDMiniBrowseCategoryReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDMiniBrowseCategories _addNoFlagsMiniBrowseCategory:](a1, v40);
LABEL_49:

    goto LABEL_55;
  }

LABEL_80:
  v21 = 0;
LABEL_60:
  LOBYTE(v17) = v48;
LABEL_61:
  if ((v17 & 1) != 0)
LABEL_62:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_73;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v44 = *v18++;
        v43 = v44;
        if (v44 == 1)
          break;
        if (v43 == 2)
        {
          v45 = 4;
          goto LABEL_72;
        }
        if (!v43)
          goto LABEL_73;
      }
      v45 = 2;
LABEL_72:
      *(_BYTE *)(a1 + 52) |= v45;
      continue;
    }
  }
LABEL_73:
  if (v21)
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
  else
    v3 = 0;
  if ((v50 & 1) != 0)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189170948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189170EA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMiniBrowseCategoriesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDMiniBrowseCategoriesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDMiniBrowseCategoriesReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDMiniBrowseCategoriesReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDMiniBrowseCategoriesReadAllFrom_initialTag;
  Specified = GEOPDMiniBrowseCategoriesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDMiniBrowseCategoriesCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891711D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189171494(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189171768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMiniBrowseCategoryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOStyleAttributes *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOStyleAttributes);
          if (!GEOStyleAttributesReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189171E10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917278C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  int v44;
  GEOPDModuleOptions *v45;
  void *v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  char v56;
  int v57;
  int v58;
  char v59;
  void *v60;
  int v62;
  int *v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v64 = v14 & ~(_BYTE)v10 | v7;
        v65 = v14 | v10 | v64;
        if ((((v14 | v10) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        v66 = (v15 == 0) | v14 | v10;
        v67 = v14 | v10;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_87;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_24;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_24:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_26:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_87:
      v62 = 1;
      goto LABEL_88;
    }
    v29 = v21 >> 3;
    v30 = v67;
    if ((v66 & 1) == 0)
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (1)
        {
          v38 = *v16;
          v39 = *(_QWORD *)(v3 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
          *(_QWORD *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_72;
          v35 += 7;
          v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_74;
          }
        }
        *(_BYTE *)(v3 + *v17) = 1;
LABEL_72:
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_74:
        v55 = 56;
        goto LABEL_79;
      case 2:
        if (!v30)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v56 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v9 += v56 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v45 = objc_alloc_init(GEOPDModuleOptions);
        if (GEOPDModuleOptionsReadAllFrom((uint64_t)v45, (void *)v3))
        {
          PBReaderRecallMark();
          v46 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v45;
LABEL_60:

          --v9;
LABEL_85:
          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v65 & 1 | (v9 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v62 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v63 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        if ((v64 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v63[490]) |= 4u;
        if (v67 & 1 | ((v62 & 1) == 0))
        {
          *(_BYTE *)(a1 + v63[490]) |= 0x10u;
          *(_BYTE *)(a1 + v63[490]) |= 8u;
          goto LABEL_100;
        }
        if (v15)
        {
          while (2)
          {
            while (1)
            {
              v58 = *v15++;
              v57 = v58;
              if (v58 == 2)
                break;
              if (v57 == 3)
              {
                v59 = 8;
                goto LABEL_99;
              }
              if (!v57)
                goto LABEL_100;
            }
            v59 = 16;
LABEL_99:
            *(_BYTE *)(a1 + v63[490]) |= v59;
            continue;
          }
        }
LABEL_100:
        if (v62)
          v3 = *(_BYTE *)(v3 + *v17) == 0;
        else
          v3 = 0;
        if ((v67 & 1) != 0)
        {
          v60 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if (!v30)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v46 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v47;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v56 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v48 = 0;
        v49 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v50 = *v16;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v37 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v26 = v49++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_78:
        v55 = 52;
LABEL_79:
        *(_DWORD *)(a1 + v55) = v37;
        goto LABEL_86;
      default:
        if ((v64 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_69:
          v54 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v54 & 1) == 0)
          {
            v62 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v62 = 0;
            v63 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_189172F58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189173C0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDModuleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDModuleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDModuleReadAllFrom_initialTag;
  Specified = GEOPDModuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189173DB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDModuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189173E10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDModuleOptionsIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 3u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_46;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          break;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDModuleOptionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_189174434(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18917478C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189174AE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOPDModuleConfigurationValue *v27;
  void *v28;
  id v29;
  void *v30;
  _BOOL8 v31;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v27 = objc_alloc_init(GEOPDModuleConfigurationValue);
          if (!GEOPDModuleConfigurationValueReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          v28 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v27;

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_36;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            LODWORD(v22) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v29 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v30 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v29;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_189175294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917568C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleConfigurationValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  unsigned __int8 v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDPlaceRibbonConfiguration *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  char v46;
  __int16 v47;
  int v48;
  __int16 v49;
  void *v50;
  int v52;
  char v53;
  char v54;
  char v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(unsigned __int16 *)(a1 + 116);
  v13 = ((v12 >> 3) & 1)
      + (v12 & 1)
      + ((v12 >> 9) & 1)
      + ((v12 >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v12), (uint16x4_t)0xFFF6FFFAFFF9FFFELL), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 116)) & 1)+ ((*(_WORD *)(a1 + 116) >> 5) & 1)+ ((*(_WORD *)(a1 + 116) >> 1) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 7;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        v53 = v18;
        v54 = v19 | v18;
        if (((v19 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v55 = (v20 == 0) | v19;
        v56 = v19;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_121;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_121:
      v52 = 1;
      goto LABEL_122;
    }
    v34 = v26 >> 3;
    v35 = v56;
    if ((v55 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_145;
          v40 = objc_alloc_init(GEOPDPlaceRibbonConfiguration);
          if (GEOPDPlaceRibbonConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = 72;
            goto LABEL_95;
          }
          goto LABEL_144;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_145;
        v47 = *(_WORD *)(a1 + 116) << 8;
        goto LABEL_118;
      case 2:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 13;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDButtonModuleConfiguration);
        if (!GEOPDButtonModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 32;
        goto LABEL_95;
      case 3:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 9;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDRelatedPlaceModuleConfiguration);
        if (!GEOPDRelatedPlaceModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 64;
        goto LABEL_95;
      case 4:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = 32 * *(_WORD *)(a1 + 116);
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDWebModuleConfiguration);
        if (!GEOPDWebModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 96;
        goto LABEL_95;
      case 5:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 7;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDTemplatePlaceModuleConfiguration);
        if (!GEOPDTemplatePlaceModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 80;
        goto LABEL_95;
      case 6:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 10;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDPlaceInfosModuleConfiguration);
        if (!GEOPDPlaceInfosModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 56;
        goto LABEL_95;
      case 7:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 14;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDBusinessInfosModuleConfiguration);
        if (!GEOPDBusinessInfosModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 24;
        goto LABEL_95;
      case 8:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 12;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDHeaderButtonsConfiguration);
        if (!GEOPDHeaderButtonsConfigurationReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 40;
        goto LABEL_95;
      case 9:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 6;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDUnifiedActionModuleConfiguration);
        if (!GEOPDUnifiedActionModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        v41 = 88;
        goto LABEL_95;
      case 10:
        if (!v35)
          goto LABEL_96;
        if ((*(_WORD *)(a1 + 116) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v47 = *(_WORD *)(a1 + 116) << 11;
LABEL_118:
          v7 += v47 >> 15;
LABEL_119:
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_120:
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!(v54 & 1 | (v7 != 0)))
            goto LABEL_121;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v40 = objc_alloc_init(GEOPDHikingAssociationModuleConfiguration);
        if (GEOPDHikingAssociationModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 48;
LABEL_95:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
          goto LABEL_119;
        }
LABEL_144:

LABEL_145:
        v52 = 0;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
        if ((v53 & 1) != 0)
LABEL_123:
          *(_WORD *)(a1 + 116) |= 1u;
        if (v56 || (v52 & 1) == 0)
        {
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 4u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x400u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x20u;
          *(_WORD *)(a1 + 116) |= 2u;
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            v48 = *v20++;
            v49 = 128;
            switch(v48)
            {
              case 0:
                goto LABEL_138;
              case 1:
                goto LABEL_137;
              case 2:
                v49 = 4;
                goto LABEL_137;
              case 3:
                v49 = 64;
                goto LABEL_137;
              case 4:
                v49 = 1024;
                goto LABEL_137;
              case 5:
                v49 = 256;
                goto LABEL_137;
              case 6:
                v49 = 32;
                goto LABEL_137;
              case 7:
                v49 = 2;
                goto LABEL_137;
              case 8:
                v49 = 8;
                goto LABEL_137;
              case 9:
                v49 = 512;
                goto LABEL_137;
              case 10:
                v49 = 16;
LABEL_137:
                *(_WORD *)(a1 + 116) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_138:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v56)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v53 & 1) == 0 || (*(_WORD *)(a1 + 116) & 1) != 0)
        {
LABEL_96:
          v46 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_122;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v52 = 0;
            goto LABEL_123;
          }
        }
        goto LABEL_120;
    }
  }
}

void sub_189176228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176638(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176808(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176E78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189176F60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleConfigurationValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDModuleConfigurationValueReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDModuleConfigurationValueReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDModuleConfigurationValueReadAllFrom_initialTag;
  Specified = GEOPDModuleConfigurationValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDPlaceInfosModuleConfiguration readAll:](*(_QWORD *)(a1 + 56), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_189178E54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189179150(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891793BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891798E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleLayoutEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDModule *v38;
  id v39;
  void *v40;
  int v41;
  uint64_t v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v58 = v17 & ~(_BYTE)v12 | v8;
        v59 = v17 | v12 | v58;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v60 = (v18 == 0) | v17 | v12;
        v61 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v8;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v10;
        v8 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_76;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_76:
      v56 = 1;
      goto LABEL_77;
    }
    v32 = v24 >> 3;
    v33 = v61;
    if ((v60 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(_BYTE *)(a1 + 64) & 4) != 0)
          goto LABEL_66;
        PBReaderReadString();
        v38 = (GEOPDModule *)objc_claimAutoreleasedReturnValue();
        if (v38)
          -[GEOPDModuleLayoutEntry _addNoFlagsApplicationId:](a1, v38);
        goto LABEL_65;
      case 2:
        if (!v33)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_93;
          v10 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
        }
        else
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v42;

          --v10;
        }
        goto LABEL_74;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_66;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v47 = *v19;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v29 = v45++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 60) = v46;
        goto LABEL_75;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
          goto LABEL_66;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_93;
        v38 = objc_alloc_init(GEOPDModule);
        if (GEOPDModuleReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDModuleLayoutEntry _addNoFlagsModules:](a1, v38);
LABEL_65:

LABEL_74:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_75:
          if (!(v59 & 1 | (v10 != 0)))
            goto LABEL_76;
          continue;
        }

LABEL_93:
        v56 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
        v57 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        if ((v58 & 1) != 0)
LABEL_78:
          *(_BYTE *)(a1 + v57[506]) |= 2u;
        if (v61 & 1 | ((v56 & 1) == 0))
        {
          *(_BYTE *)(a1 + v57[506]) |= 4u;
          *(_BYTE *)(a1 + v57[506]) |= 8u;
          *(_BYTE *)(a1 + v57[506]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v52 = *v18++;
            v53 = 4;
            switch(v52)
            {
              case 0:
                goto LABEL_86;
              case 1:
                goto LABEL_85;
              case 2:
                v53 = 8;
                goto LABEL_85;
              case 4:
                v53 = 16;
LABEL_85:
                *(_BYTE *)(a1 + v57[506]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_86:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v61 & 1) != 0)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_66:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v56 = 0;
            goto LABEL_77;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v41)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
            goto LABEL_78;
          }
        }
        goto LABEL_75;
    }
  }
}

void sub_18917A268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917A53C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917B138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDModuleLayoutEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 40);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDModuleLayoutEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDModuleLayoutEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDModuleLayoutEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDModuleLayoutEntryReadAllFrom_initialTag;
  Specified = GEOPDModuleLayoutEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDModuleLayoutEntryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18917B3C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleLayoutEntryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDModuleLayoutEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18917B424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleLayoutEntryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_40;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_40;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_40;
          v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDModuleIsValid(a1))
            goto LABEL_40;
          PBReaderRecallMark();
          continue;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_40:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_37;
      }
      a1[*v4] = 1;
LABEL_37:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18917B988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDModuleLayoutEntryIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 64) & 0x3C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 40);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDModuleIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDModuleLayoutEntryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDModuleLayoutEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18917BFD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917C420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleOptionsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18917CB9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDModuleOptionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18917CBFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbyPlacesMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt64Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18917D570(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917D864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDOfflineAreaReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOMapRegion *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_72;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_72:
      v52 = 1;
      goto LABEL_73;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
    {
      if (v35 && (*(_BYTE *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_90;
        v40 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_89;
        PBReaderRecallMark();
        -[GEOPDOfflineArea _addNoFlagsDisplayMapRegion:](a1, v40);

        goto LABEL_70;
      }
      goto LABEL_63;
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_90;
          v40 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v40, (void *)v3))
            goto LABEL_89;
          PBReaderRecallMark();
          v41 = 32;
LABEL_56:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
LABEL_70:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_90;
        v47 = 32 * *(_BYTE *)(a1 + 60);
LABEL_69:
        v7 += v47 >> 7;
        goto LABEL_70;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_75;
      }
      goto LABEL_71;
    }
LABEL_63:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_73:
      v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_74;
    }
LABEL_71:
    if (!(v55 & 1 | (v7 != 0)))
      goto LABEL_72;
  }
  if (!v35)
    goto LABEL_63;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_90;
    v47 = 16 * *(_BYTE *)(a1 + 60);
    goto LABEL_69;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_90;
  v40 = objc_alloc_init(GEOMapRegion);
  if (GEOMapRegionReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = 40;
    goto LABEL_56;
  }
LABEL_89:

LABEL_90:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  if ((v54 & 1) == 0)
    goto LABEL_76;
LABEL_75:
  *(_BYTE *)(a1 + v53[129]) |= 1u;
LABEL_76:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[129]) |= 4u;
    *(_BYTE *)(a1 + v53[129]) |= 8u;
    *(_BYTE *)(a1 + v53[129]) |= 2u;
  }
  else if (v20)
  {
    while (1)
    {
      v48 = *v20++;
      v49 = 4;
      switch(v48)
      {
        case 0:
          goto LABEL_83;
        case 1:
          goto LABEL_82;
        case 2:
          v49 = 8;
          goto LABEL_82;
        case 3:
          v49 = 2;
LABEL_82:
          *(_BYTE *)(a1 + v53[129]) |= v49;
          break;
        default:
          continue;
      }
    }
  }
LABEL_83:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18917DF38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917DFD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917E580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDOfflineAreaCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDOfflineAreaReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDOfflineAreaReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDOfflineAreaReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDOfflineAreaReadAllFrom_initialTag;
  Specified = GEOPDOfflineAreaReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDOfflineAreaCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18917E8FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917EB54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917EDBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPOIClaimFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18917FC48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18917FE78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPerformerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOLocalizedString *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_74;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_74:
      v53 = 1;
      goto LABEL_75;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_93;
          v40 = objc_alloc_init(GEOLocalizedString);
          if (GEOLocalizedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v41 = *(void **)(a1 + 40);
            *(_QWORD *)(a1 + 40) = v40;
            goto LABEL_60;
          }

          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v48 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_71;
      case 2:
        if (!v35)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v48 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_71;
      case 3:
        if (!v35)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 24;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v48 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_71;
      case 4:
        if (!v35)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 32;
LABEL_59:
          v41 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
LABEL_60:

          --v8;
LABEL_72:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v48 = 32 * *(_BYTE *)(a1 + 68);
LABEL_71:
          v8 += v48 >> 7;
          goto LABEL_72;
        }
LABEL_93:
        v53 = 0;
        v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        if ((v55 & 1) != 0)
LABEL_77:
          *(_BYTE *)(a1 + v54[136]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(_BYTE *)(a1 + v54[136]) |= 8u;
          *(_BYTE *)(a1 + v54[136]) |= 0x10u;
          *(_BYTE *)(a1 + v54[136]) |= 2u;
          *(_BYTE *)(a1 + v54[136]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            v49 = *v20++;
            v50 = 8;
            switch(v49)
            {
              case 0:
                goto LABEL_86;
              case 1:
                goto LABEL_85;
              case 2:
                v50 = 16;
                goto LABEL_85;
              case 3:
                v50 = 2;
                goto LABEL_85;
              case 4:
                v50 = 4;
LABEL_85:
                *(_BYTE *)(a1 + v54[136]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_86:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v58)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_61:
          v47 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
LABEL_75:
            v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_77;
          }
        }
LABEL_73:
        if (!(v56 & 1 | (v8 != 0)))
          goto LABEL_74;
        continue;
    }
  }
}

void sub_1891805B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189180698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189180A0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189180AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPerformerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPerformerReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPerformerReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPerformerReadAllFrom_initialTag;
  Specified = GEOPDPerformerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189180D58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189180F14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPerformerIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 0x12) != 0)
    return 1;
  return (v2 >> 2) & 1;
}

void sub_189181138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891814A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPhotoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOPDPhotoContent *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  int v48;
  int *v49;
  char v50;
  char v51;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v10;
        v50 = v14 & ~(_BYTE)v10 | v7;
        v51 = v14 | v10 | v50;
        if ((((v14 | v10) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_59;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      v48 = 1;
      goto LABEL_60;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_80;
          v9 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_57;
      }
    }
    else if ((v50 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v40 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v39;

      }
      v41 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
      {
        v48 = 0;
        v49 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_53:
    v42 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
      v48 = 0;
LABEL_60:
      v49 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v51 & 1 | (v9 != 0)))
      goto LABEL_59;
  }
  if (!v31 || (*(_BYTE *)(a1 + 52) & 4) != 0)
    goto LABEL_53;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_80;
  v38 = objc_alloc_init(GEOPDPhotoContent);
  if (GEOPDPhotoContentReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDPhoto _addNoFlagsPhotoVersion:](a1, v38);

LABEL_57:
    v18 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }

LABEL_80:
  v48 = 0;
  v49 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  if ((v50 & 1) == 0)
    goto LABEL_63;
LABEL_62:
  *(_BYTE *)(a1 + v49[142]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v48 & 1) == 0))
  {
    *(_BYTE *)(a1 + v49[142]) |= 2u;
    *(_BYTE *)(a1 + v49[142]) |= 4u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      v45 = *v16++;
      v44 = v45;
      if (v45 == 1)
        break;
      if (v44 == 2)
      {
        v43 = 4;
LABEL_69:
        *(_BYTE *)(a1 + v49[142]) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_73;
      }
    }
    v43 = 2;
    goto LABEL_69;
  }
LABEL_73:
  if (v48)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_77:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_77;
  }
  return v3;
}

void sub_189181AE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189182038(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPhotoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDPhotoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPhotoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPhotoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPhotoReadAllFrom_initialTag;
  Specified = GEOPDPhotoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPhotoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189182788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891829C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189182C80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoContentReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_47;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_49:
            v41 = 32;
            goto LABEL_58;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_53:
            v41 = 24;
            goto LABEL_58;
          case 3u:
            PBReaderReadString();
            v33 = objc_claimAutoreleasedReturnValue();
            v34 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v33;

            continue;
          case 4u:
            v35 = 0;
            v36 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_61;
            continue;
        }
        while (1)
        {
          v37 = *v4;
          v38 = *(_QWORD *)&v3[v37];
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
            break;
          v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
          *(_QWORD *)&v3[v37] = v39;
          v20 |= (unint64_t)(v40 & 0x7F) << v35;
          if ((v40 & 0x80) == 0)
            goto LABEL_55;
          v35 += 7;
          v15 = v36++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_57;
          }
        }
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_57:
        v41 = 28;
LABEL_58:
        *(_DWORD *)(a1 + v41) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_61:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_18918360C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoFilterReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  id v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_28;
          -[GEOPDPhotoFilter _reservePhotoSizeFilters:]((uint64_t)a1, 1uLL);
          if (!GEOPDPhotoSizeFilterValueReadAllFrom(a1[2] + 12 * a1[3], (uint64_t)v3))
            goto LABEL_28;
          PBReaderRecallMark();
          ++a1[3];
        }
        else
        {
          if (!a1[1])
          {
            v18 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v19 = (void *)a1[1];
            a1[1] = v18;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189184134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id _GEOPDPhotoSizeFilterValueDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  char v3;
  void *v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *((_BYTE *)a1 + 8);
  if ((v3 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *a1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v4, CFSTR("height"));

    v3 = *((_BYTE *)a1 + 8);
  }
  if ((v3 & 2) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[1]);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v5, CFSTR("width"));

  }
  return v2;
}

void _GEOPDPhotoSizeFilterValueFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a1;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("width"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = objc_msgSend(v4, "unsignedIntValue");
  }

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("height"));
  v5 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 1u;
    *(_DWORD *)a2 = objc_msgSend(v5, "unsignedIntValue");
  }

}

void sub_189184638(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPictureItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDPhoto *v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v60 = v16 & ~(_BYTE)v11 | v7;
        v61 = v16 | v11 | v60;
        v59 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_81;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_81:
      v57 = 1;
      goto LABEL_82;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_99;
          v37 = objc_alloc_init(GEOPDPhoto);
          if (GEOPDPhotoReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v38 = *(void **)(a1 + 24);
            *(_QWORD *)(a1 + 24) = v37;
            goto LABEL_57;
          }

          goto LABEL_99;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_78;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 16 * *(_BYTE *)(a1 + 64);
        goto LABEL_78;
      case 3:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
        {
          PBReaderReadString();
          v42 = objc_claimAutoreleasedReturnValue();
          v43 = 40;
LABEL_56:
          v38 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;
LABEL_57:

          --v9;
LABEL_79:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_80;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v52 = 8 * *(_BYTE *)(a1 + 64);
LABEL_78:
          v9 += v52 >> 7;
          goto LABEL_79;
        }
LABEL_99:
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
        if ((v60 & 1) != 0)
LABEL_84:
          *(_BYTE *)(a1 + v58[155]) |= 2u;
        if (v63 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[155]) |= 4u;
          *(_BYTE *)(a1 + v58[155]) |= 8u;
          *(_BYTE *)(a1 + v58[155]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_92;
              case 1:
                goto LABEL_91;
              case 2:
                v54 = 8;
                goto LABEL_91;
              case 3:
                v54 = 16;
LABEL_91:
                *(_BYTE *)(a1 + v58[155]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_92:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v59 & 1) == 0)
          goto LABEL_66;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 60) = v46;
        goto LABEL_80;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_66:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_82:
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_84;
          }
        }
LABEL_80:
        if (!(v61 & 1 | (v9 != 0)))
          goto LABEL_81;
        continue;
    }
  }
}

void sub_189184DB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189184E98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189185310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPictureItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPictureItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPictureItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPictureItemReadAllFrom_initialTag;
  Specified = GEOPDPictureItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDPhoto readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189185578(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918576C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918593C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPictureItemContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOPDPictureItem *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  void *v29;
  _BOOL8 v30;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v24 = *v6;
            v25 = *(_QWORD *)&v5[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v5[*v7])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
            *(_QWORD *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_36;
            v21 += 7;
            v17 = v22++ >= 9;
            if (v17)
            {
              v23 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8])
            v23 = 0;
LABEL_38:
          *(_BYTE *)(a1 + 24) = v23 != 0;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_42;
          v20 = objc_alloc_init(GEOPDPictureItem);
          if (!GEOPDPictureItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDPictureItemContainer addPictureItem:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v28 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v29 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v28;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_42;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_189186320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918704C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  -[GEOPDPlacecardLayoutData readAll:](*(_QWORD *)(a1 + 72), 1);
  return objc_msgSend(*(id *)(a1 + 88), "readAll:", 1);
}

uint64_t GEOPDPlaceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlaceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18918869C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardLayoutDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  int v41;
  char v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int v50;
  int v51;
  BOOL v52;
  char v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  int v60;
  int v61;
  unint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  char v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  int v76;
  int v77;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  char v89;
  unsigned int v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  int v96;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  int v103;
  int v104;
  int v105;
  char v106;
  unsigned int v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  int v113;
  int v114;
  char v116;
  unsigned int v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  int v123;
  int v124;
  unint64_t v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  char v137;
  unsigned int v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  int v144;
  int v145;
  unint64_t v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  int v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  int v157;
  char v158;
  unsigned int v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  int v165;
  int v166;
  unint64_t v168;
  char v169;
  unsigned int v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  int v176;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  int v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  int v187;
  char v188;
  unsigned int v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  int v195;
  int v196;
  char v198;
  unsigned int v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  int v205;
  unsigned int v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  int v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  int v216;
  int v217;
  int v218;
  int v219;
  char v220;
  unsigned int v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  char v226;
  int v227;
  int v228;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  int v239;
  char v240;
  unsigned int v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  char v246;
  int v247;
  unsigned int v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  int v253;
  int v254;
  char v255;
  unsigned int v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  char v261;
  int v262;
  int v263;
  char v265;
  unsigned int v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  char v271;
  int v272;
  int v273;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  _BOOL8 v280;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_600:
    v280 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v280;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (a1[*v4])
      goto LABEL_600;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_600;
    if ((v8 >> 3) != 2)
      break;
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlacecardLayoutConfigurationIsValid(a1))
      goto LABEL_610;
LABEL_598:
    PBReaderRecallMark();
LABEL_599:
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      goto LABEL_600;
  }
  if ((v8 >> 3) != 1)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_610;
    goto LABEL_599;
  }
  if (v15 != 2 || !PBReaderPlaceMark())
    goto LABEL_610;
  objc_msgSend(a1, "position", 0, 0);
  objc_msgSend(a1, "length");
  while (1)
  {
    while (1)
    {
LABEL_23:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
        goto LABEL_597;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      while (1)
      {
        v20 = *v2;
        v21 = *(_QWORD *)&a1[v20];
        v22 = v21 + 1;
        if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
          break;
        v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
        *(_QWORD *)&a1[v20] = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0)
          goto LABEL_33;
        v17 += 7;
        v13 = v18++ >= 9;
        if (v13)
        {
          v19 = 0;
          v24 = a1[*v4];
          goto LABEL_35;
        }
      }
      a1[*v4] = 1;
LABEL_33:
      v24 = a1[*v4];
      if (a1[*v4])
        v19 = 0;
LABEL_35:
      v25 = v19 & 7;
      if (v24 || v25 == 4)
      {
LABEL_597:
        v279 = a1[*v4];
        PBReaderRecallMark();
        if (v279)
          goto LABEL_610;
        goto LABEL_598;
      }
      if ((v19 >> 3) == 2)
        break;
      if ((v19 >> 3) == 1)
      {
        if ((v19 & 7) != 0)
          goto LABEL_609;
        v27 = 0;
        while (1)
        {
          v28 = *v2;
          v29 = *(_QWORD *)&a1[v28];
          v30 = v29 + 1;
          if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
            break;
          v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
          *(_QWORD *)&a1[v28] = v30;
          if (v31 < 0)
          {
            v32 = v27++ > 8;
            if (!v32)
              continue;
          }
          goto LABEL_23;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_609;
      }
    }
    if (v25 != 2 || !PBReaderPlaceMark())
      goto LABEL_609;
    objc_msgSend(a1, "position");
    objc_msgSend(a1, "length");
LABEL_52:
    if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v33 = 0;
      v34 = 0;
      v35 = 0;
      while (1)
      {
        v36 = *v2;
        v37 = *(_QWORD *)&a1[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
          break;
        v39 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v37);
        *(_QWORD *)&a1[v36] = v38;
        v35 |= (unint64_t)(v39 & 0x7F) << v33;
        if ((v39 & 0x80) == 0)
          goto LABEL_62;
        v33 += 7;
        v13 = v34++ >= 9;
        if (v13)
        {
          v35 = 0;
          v40 = a1[*v4];
          goto LABEL_64;
        }
      }
      a1[*v4] = 1;
LABEL_62:
      v40 = a1[*v4];
      if (a1[*v4])
        v35 = 0;
LABEL_64:
      v41 = v35 & 7;
      if (!v40 && v41 != 4)
        break;
    }
    v278 = a1[*v4];
    PBReaderRecallMark();
    if (v278)
      goto LABEL_609;
    PBReaderRecallMark();
  }
  switch((v35 >> 3))
  {
    case 1u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
LABEL_72:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
      {
        v43 = 0;
        v44 = 0;
        v45 = 0;
        while (2)
        {
          v46 = *v2;
          v47 = *(_QWORD *)&a1[v46];
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
          {
            a1[*v4] = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v47);
            *(_QWORD *)&a1[v46] = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v13 = v44++ >= 9;
              if (v13)
              {
                v45 = 0;
                v50 = a1[*v4];
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        v50 = a1[*v4];
        if (a1[*v4])
          v45 = 0;
LABEL_84:
        v51 = v45 & 7;
        if (v50)
          v52 = 1;
        else
          v52 = v51 == 4;
        if (!v52)
        {
          if ((v45 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_607;
            continue;
          }
          if (v51 != 2 || !PBReaderPlaceMark())
            goto LABEL_607;
          objc_msgSend(a1, "position");
          objc_msgSend(a1, "length");
          while (1)
          {
            while (1)
            {
LABEL_92:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                goto LABEL_200;
              v53 = 0;
              v54 = 0;
              v55 = 0;
              while (1)
              {
                v56 = *v2;
                v57 = *(_QWORD *)&a1[v56];
                v58 = v57 + 1;
                if (v57 == -1 || v58 > *(_QWORD *)&a1[*v3])
                  break;
                v59 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v57);
                *(_QWORD *)&a1[v56] = v58;
                v55 |= (unint64_t)(v59 & 0x7F) << v53;
                if ((v59 & 0x80) == 0)
                  goto LABEL_102;
                v53 += 7;
                v13 = v54++ >= 9;
                if (v13)
                {
                  v55 = 0;
                  v60 = a1[*v4];
                  goto LABEL_104;
                }
              }
              a1[*v4] = 1;
LABEL_102:
              v60 = a1[*v4];
              if (a1[*v4])
                v55 = 0;
LABEL_104:
              v61 = v55 & 7;
              if (v60 || v61 == 4)
              {
LABEL_200:
                v105 = a1[*v4];
                PBReaderRecallMark();
                if (v105)
                  goto LABEL_607;
                PBReaderRecallMark();
                goto LABEL_72;
              }
              v63 = v55 >> 3;
              if ((v55 >> 3) != 3)
                break;
              if (v61 != 2 || !PBReaderPlaceMark())
                goto LABEL_603;
              objc_msgSend(a1, "position");
              objc_msgSend(a1, "length");
LABEL_122:
              while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
              {
                v69 = 0;
                v70 = 0;
                v71 = 0;
                while (1)
                {
                  v72 = *v2;
                  v73 = *(_QWORD *)&a1[v72];
                  v74 = v73 + 1;
                  if (v73 == -1 || v74 > *(_QWORD *)&a1[*v3])
                    break;
                  v75 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v73);
                  *(_QWORD *)&a1[v72] = v74;
                  v71 |= (unint64_t)(v75 & 0x7F) << v69;
                  if ((v75 & 0x80) == 0)
                    goto LABEL_132;
                  v69 += 7;
                  v13 = v70++ >= 9;
                  if (v13)
                  {
                    v71 = 0;
                    v76 = a1[*v4];
                    goto LABEL_134;
                  }
                }
                a1[*v4] = 1;
LABEL_132:
                v76 = a1[*v4];
                if (a1[*v4])
                  v71 = 0;
LABEL_134:
                v77 = v71 & 7;
                if (v76 || v77 == 4)
                  break;
                if ((v71 >> 3) == 1)
                {
                  if (v77 == 2)
                  {
                    if (!PBReaderPlaceMark())
                    {
LABEL_602:
                      PBReaderRecallMark();
                      goto LABEL_603;
                    }
LABEL_149:
                    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                    {
                      v84 = a1[*v4];
                      if (a1[*v4])
                        break;
                      while (1)
                      {
                        v85 = *v2;
                        v86 = *(_QWORD *)&a1[v85];
                        v87 = v86 + 1;
                        if (v86 == -1 || v87 > *(_QWORD *)&a1[*v3])
                          break;
                        v88 = *(char *)(*(_QWORD *)&a1[*v5] + v86);
                        *(_QWORD *)&a1[v85] = v87;
                        if (v88 < 0)
                        {
                          v13 = v84++ >= 9;
                          if (!v13)
                            continue;
                        }
                        goto LABEL_149;
                      }
                      a1[*v4] = 1;
                    }
                    PBReaderRecallMark();
                  }
                  else
                  {
                    if ((v71 & 7) != 0)
                      goto LABEL_602;
                    while (1)
                    {
                      v79 = *v2;
                      v80 = *(_QWORD *)&a1[v79];
                      v81 = v80 + 1;
                      if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
                        break;
                      v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
                      *(_QWORD *)&a1[v79] = v81;
                      if (v82 < 0)
                      {
                        v83 = v77++;
                        if (v83 <= 8)
                          continue;
                      }
                      goto LABEL_122;
                    }
                    a1[*v4] = 1;
                  }
                }
                else if ((PBReaderSkipValueWithTag() & 1) == 0)
                {
                  goto LABEL_602;
                }
              }
              v103 = a1[*v4];
              PBReaderRecallMark();
              if (v103)
              {
LABEL_603:
                PBReaderRecallMark();
                goto LABEL_607;
              }
LABEL_196:
              PBReaderRecallMark();
            }
            if ((_DWORD)v63 == 2)
            {
              if (v61 != 2 || !PBReaderPlaceMark())
                goto LABEL_603;
              objc_msgSend(a1, "position");
              objc_msgSend(a1, "length");
LABEL_163:
              while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
              {
                v89 = 0;
                v90 = 0;
                v91 = 0;
                while (1)
                {
                  v92 = *v2;
                  v93 = *(_QWORD *)&a1[v92];
                  v94 = v93 + 1;
                  if (v93 == -1 || v94 > *(_QWORD *)&a1[*v3])
                    break;
                  v95 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v93);
                  *(_QWORD *)&a1[v92] = v94;
                  v91 |= (unint64_t)(v95 & 0x7F) << v89;
                  if ((v95 & 0x80) == 0)
                    goto LABEL_173;
                  v89 += 7;
                  v13 = v90++ >= 9;
                  if (v13)
                  {
                    v91 = 0;
                    v96 = a1[*v4];
                    goto LABEL_175;
                  }
                }
                a1[*v4] = 1;
LABEL_173:
                v96 = a1[*v4];
                if (a1[*v4])
                  v91 = 0;
LABEL_175:
                if (v96 || (v91 & 7) == 4)
                  break;
                if ((v91 >> 3) == 2)
                {
                  if ((v91 & 7) != 0)
                    goto LABEL_602;
                  v98 = 0;
                  while (1)
                  {
                    v99 = *v2;
                    v100 = *(_QWORD *)&a1[v99];
                    v101 = v100 + 1;
                    if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
                      break;
                    v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
                    *(_QWORD *)&a1[v99] = v101;
                    if (v102 < 0)
                    {
                      v32 = v98++ > 8;
                      if (!v32)
                        continue;
                    }
                    goto LABEL_163;
                  }
                  a1[*v4] = 1;
                }
                else if (!PBReaderSkipValueWithTag())
                {
                  goto LABEL_602;
                }
              }
              v104 = a1[*v4];
              PBReaderRecallMark();
              if (v104)
                goto LABEL_603;
              goto LABEL_196;
            }
            if ((_DWORD)v63 == 1)
            {
              if ((v55 & 7) != 0)
                goto LABEL_603;
              v64 = 0;
              while (1)
              {
                v65 = *v2;
                v66 = *(_QWORD *)&a1[v65];
                v67 = v66 + 1;
                if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
                  break;
                v68 = *(char *)(*(_QWORD *)&a1[*v5] + v66);
                *(_QWORD *)&a1[v65] = v67;
                if (v68 < 0)
                {
                  v32 = v64++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_92;
              }
              a1[*v4] = 1;
            }
            else if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
              goto LABEL_603;
            }
          }
        }
        break;
      }
      v277 = a1[*v4];
      PBReaderRecallMark();
      if (v277)
        goto LABEL_608;
      goto LABEL_581;
    case 2u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
      while (2)
      {
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_580;
          v106 = 0;
          v107 = 0;
          v108 = 0;
          while (1)
          {
            v109 = *v2;
            v110 = *(_QWORD *)&a1[v109];
            v111 = v110 + 1;
            if (v110 == -1 || v111 > *(_QWORD *)&a1[*v3])
              break;
            v112 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v110);
            *(_QWORD *)&a1[v109] = v111;
            v108 |= (unint64_t)(v112 & 0x7F) << v106;
            if ((v112 & 0x80) == 0)
              goto LABEL_217;
            v106 += 7;
            v13 = v107++ >= 9;
            if (v13)
            {
              v108 = 0;
              v113 = a1[*v4];
              goto LABEL_219;
            }
          }
          a1[*v4] = 1;
LABEL_217:
          v113 = a1[*v4];
          if (a1[*v4])
            v108 = 0;
LABEL_219:
          v114 = v108 & 7;
          if (v113 || v114 == 4)
            goto LABEL_580;
          if ((v108 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_607;
            continue;
          }
          break;
        }
        if (v114 == 2 && PBReaderPlaceMark() && GEOPDButtonItemIsValid(a1))
        {
          PBReaderRecallMark();
          continue;
        }
        goto LABEL_607;
      }
    case 3u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
LABEL_233:
      while (2)
      {
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_580;
          v116 = 0;
          v117 = 0;
          v118 = 0;
          while (1)
          {
            v119 = *v2;
            v120 = *(_QWORD *)&a1[v119];
            v121 = v120 + 1;
            if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
              break;
            v122 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v120);
            *(_QWORD *)&a1[v119] = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if ((v122 & 0x80) == 0)
              goto LABEL_243;
            v116 += 7;
            v13 = v117++ >= 9;
            if (v13)
            {
              v118 = 0;
              v123 = a1[*v4];
              goto LABEL_245;
            }
          }
          a1[*v4] = 1;
LABEL_243:
          v123 = a1[*v4];
          if (a1[*v4])
            v118 = 0;
LABEL_245:
          v124 = v118 & 7;
          if (v123 || v124 == 4)
            goto LABEL_580;
          v126 = v118 >> 3;
          if ((v118 >> 3) == 3)
          {
            if ((v118 & 7) != 0)
              goto LABEL_607;
            v132 = 0;
            while (1)
            {
              v133 = *v2;
              v134 = *(_QWORD *)&a1[v133];
              v135 = v134 + 1;
              if (v134 == -1 || v135 > *(_QWORD *)&a1[*v3])
                break;
              v136 = *(char *)(*(_QWORD *)&a1[*v5] + v134);
              *(_QWORD *)&a1[v133] = v135;
              if (v136 < 0)
              {
                v32 = v132++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_233;
            }
          }
          else
          {
            if ((_DWORD)v126 == 2)
            {
              if (v124 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_607;
            }
            if ((_DWORD)v126 != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_607;
              continue;
            }
            if ((v118 & 7) != 0)
              goto LABEL_607;
            v127 = 0;
            while (1)
            {
              v128 = *v2;
              v129 = *(_QWORD *)&a1[v128];
              v130 = v129 + 1;
              if (v129 == -1 || v130 > *(_QWORD *)&a1[*v3])
                break;
              v131 = *(char *)(*(_QWORD *)&a1[*v5] + v129);
              *(_QWORD *)&a1[v128] = v130;
              if (v131 < 0)
              {
                v32 = v127++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_233;
            }
          }
          break;
        }
        a1[*v4] = 1;
        continue;
      }
    case 4u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
LABEL_278:
      while (2)
      {
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_526;
          v137 = 0;
          v138 = 0;
          v139 = 0;
          while (1)
          {
            v140 = *v2;
            v141 = *(_QWORD *)&a1[v140];
            v142 = v141 + 1;
            if (v141 == -1 || v142 > *(_QWORD *)&a1[*v3])
              break;
            v143 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v141);
            *(_QWORD *)&a1[v140] = v142;
            v139 |= (unint64_t)(v143 & 0x7F) << v137;
            if ((v143 & 0x80) == 0)
              goto LABEL_288;
            v137 += 7;
            v13 = v138++ >= 9;
            if (v13)
            {
              v139 = 0;
              v144 = a1[*v4];
              goto LABEL_290;
            }
          }
          a1[*v4] = 1;
LABEL_288:
          v144 = a1[*v4];
          if (a1[*v4])
            v139 = 0;
LABEL_290:
          v145 = v139 & 7;
          if (v144 || v145 == 4)
            goto LABEL_526;
          v147 = v139 >> 3;
          if ((v139 >> 3) == 3)
          {
            if ((v139 & 7) != 0)
              goto LABEL_607;
            v148 = 0;
            while (1)
            {
              v149 = *v2;
              v150 = *(_QWORD *)&a1[v149];
              v151 = v150 + 1;
              if (v150 == -1 || v151 > *(_QWORD *)&a1[*v3])
                break;
              v152 = *(char *)(*(_QWORD *)&a1[*v5] + v150);
              *(_QWORD *)&a1[v149] = v151;
              if (v152 < 0)
              {
                v32 = v148++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_278;
            }
          }
          else
          {
            if ((_DWORD)v147 != 2)
            {
              if ((_DWORD)v147 == 1 && v145 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_607;
              continue;
            }
            if ((v139 & 7) != 0)
              goto LABEL_607;
            v153 = 0;
            while (1)
            {
              v154 = *v2;
              v155 = *(_QWORD *)&a1[v154];
              v156 = v155 + 1;
              if (v155 == -1 || v156 > *(_QWORD *)&a1[*v3])
                break;
              v157 = *(char *)(*(_QWORD *)&a1[*v5] + v155);
              *(_QWORD *)&a1[v154] = v156;
              if (v157 < 0)
              {
                v32 = v153++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_278;
            }
          }
          break;
        }
        a1[*v4] = 1;
        continue;
      }
    case 5u:
      if (v41 == 2 && PBReaderPlaceMark() && GEOPDTemplatePlaceModuleConfigurationIsValid(a1))
        goto LABEL_581;
      goto LABEL_608;
    case 6u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
LABEL_325:
      while (2)
      {
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_582;
            v158 = 0;
            v159 = 0;
            v160 = 0;
            while (1)
            {
              v161 = *v2;
              v162 = *(_QWORD *)&a1[v161];
              v163 = v162 + 1;
              if (v162 == -1 || v163 > *(_QWORD *)&a1[*v3])
                break;
              v164 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v162);
              *(_QWORD *)&a1[v161] = v163;
              v160 |= (unint64_t)(v164 & 0x7F) << v158;
              if ((v164 & 0x80) == 0)
                goto LABEL_335;
              v158 += 7;
              v13 = v159++ >= 9;
              if (v13)
              {
                v160 = 0;
                v165 = a1[*v4];
                goto LABEL_337;
              }
            }
            a1[*v4] = 1;
LABEL_335:
            v165 = a1[*v4];
            if (a1[*v4])
              v160 = 0;
LABEL_337:
            v166 = v160 & 7;
            if (v165 || v166 == 4)
            {
LABEL_582:
              v276 = a1[*v4];
              PBReaderRecallMark();
              if (v276)
                goto LABEL_608;
LABEL_581:
              PBReaderRecallMark();
              goto LABEL_52;
            }
            v168 = v160 >> 3;
            if ((v160 >> 3) == 3)
            {
              if ((v160 & 7) == 0)
              {
                v183 = 0;
                do
                {
                  v184 = *v2;
                  v185 = *(_QWORD *)&a1[v184];
                  v186 = v185 + 1;
                  if (v185 == -1 || v186 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_325;
                  }
                  v187 = *(char *)(*(_QWORD *)&a1[*v5] + v185);
                  *(_QWORD *)&a1[v184] = v186;
                  if ((v187 & 0x80000000) == 0)
                    break;
                  v32 = v183++ > 8;
                }
                while (!v32);
                continue;
              }
              goto LABEL_607;
            }
            break;
          }
          if ((_DWORD)v168 == 2)
          {
            if (v166 != 2 || !PBReaderPlaceMark())
              goto LABEL_607;
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
LABEL_386:
            while (2)
            {
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                goto LABEL_451;
              v188 = 0;
              v189 = 0;
              v190 = 0;
              while (1)
              {
                v191 = *v2;
                v192 = *(_QWORD *)&a1[v191];
                v193 = v192 + 1;
                if (v192 == -1 || v193 > *(_QWORD *)&a1[*v3])
                  break;
                v194 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v192);
                *(_QWORD *)&a1[v191] = v193;
                v190 |= (unint64_t)(v194 & 0x7F) << v188;
                if ((v194 & 0x80) == 0)
                  goto LABEL_396;
                v188 += 7;
                v13 = v189++ >= 9;
                if (v13)
                {
                  v190 = 0;
                  v195 = a1[*v4];
                  goto LABEL_398;
                }
              }
              a1[*v4] = 1;
LABEL_396:
              v195 = a1[*v4];
              if (a1[*v4])
                v190 = 0;
LABEL_398:
              v196 = v190 & 7;
              if (v195 || v196 == 4)
              {
LABEL_451:
                v219 = a1[*v4];
                PBReaderRecallMark();
                if (!v219)
                  goto LABEL_452;
                goto LABEL_607;
              }
              if ((v190 >> 3) == 2)
              {
                if (v196 == 2 && PBReaderPlaceMark())
                {
                  objc_msgSend(a1, "position");
                  objc_msgSend(a1, "length");
                  while (1)
                  {
                    while (1)
                    {
LABEL_406:
                      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                        goto LABEL_445;
                      v198 = 0;
                      v199 = 0;
                      v200 = 0;
                      while (1)
                      {
                        v201 = *v2;
                        v202 = *(_QWORD *)&a1[v201];
                        v203 = v202 + 1;
                        if (v202 == -1 || v203 > *(_QWORD *)&a1[*v3])
                          break;
                        v204 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v202);
                        *(_QWORD *)&a1[v201] = v203;
                        v200 |= (unint64_t)(v204 & 0x7F) << v198;
                        if ((v204 & 0x80) == 0)
                          goto LABEL_416;
                        v198 += 7;
                        v13 = v199++ >= 9;
                        if (v13)
                        {
                          v200 = 0;
                          v205 = a1[*v4];
                          goto LABEL_418;
                        }
                      }
                      a1[*v4] = 1;
LABEL_416:
                      v205 = a1[*v4];
                      if (a1[*v4])
                        v200 = 0;
LABEL_418:
                      if (v205 || (v200 & 7) == 4)
                      {
LABEL_445:
                        v217 = a1[*v4];
                        PBReaderRecallMark();
                        if (v217)
                          goto LABEL_606;
                        PBReaderRecallMark();
                        goto LABEL_386;
                      }
                      if ((v200 >> 3) != 2)
                        break;
                      if ((v200 & 7) != 0)
                        goto LABEL_605;
                      v212 = 0;
                      while (1)
                      {
                        v213 = *v2;
                        v214 = *(_QWORD *)&a1[v213];
                        v215 = v214 + 1;
                        if (v214 == -1 || v215 > *(_QWORD *)&a1[*v3])
                          break;
                        v216 = *(char *)(*(_QWORD *)&a1[*v5] + v214);
                        *(_QWORD *)&a1[v213] = v215;
                        if (v216 < 0)
                        {
                          v32 = v212++ > 8;
                          if (!v32)
                            continue;
                        }
                        goto LABEL_406;
                      }
LABEL_440:
                      a1[*v4] = 1;
                    }
                    if ((v200 >> 3) == 1)
                    {
                      if ((v200 & 7) != 0)
                        goto LABEL_605;
                      v207 = 0;
                      while (1)
                      {
                        v208 = *v2;
                        v209 = *(_QWORD *)&a1[v208];
                        v210 = v209 + 1;
                        if (v209 == -1 || v210 > *(_QWORD *)&a1[*v3])
                          goto LABEL_440;
                        v211 = *(char *)(*(_QWORD *)&a1[*v5] + v209);
                        *(_QWORD *)&a1[v208] = v210;
                        if (v211 < 0)
                        {
                          v32 = v207++ > 8;
                          if (!v32)
                            continue;
                        }
                        goto LABEL_406;
                      }
                    }
                    if ((PBReaderSkipValueWithTag() & 1) == 0)
                    {
LABEL_605:
                      PBReaderRecallMark();
                      break;
                    }
                  }
                }
              }
              else if ((PBReaderSkipValueWithTag() & 1) != 0)
              {
                continue;
              }
              break;
            }
LABEL_606:
            PBReaderRecallMark();
            goto LABEL_607;
          }
          if ((_DWORD)v168 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_607;
            continue;
          }
          break;
        }
        if (v166 == 2 && PBReaderPlaceMark())
        {
          objc_msgSend(a1, "position");
          objc_msgSend(a1, "length");
LABEL_347:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v169 = 0;
            v170 = 0;
            v171 = 0;
            while (1)
            {
              v172 = *v2;
              v173 = *(_QWORD *)&a1[v172];
              v174 = v173 + 1;
              if (v173 == -1 || v174 > *(_QWORD *)&a1[*v3])
                break;
              v175 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v173);
              *(_QWORD *)&a1[v172] = v174;
              v171 |= (unint64_t)(v175 & 0x7F) << v169;
              if ((v175 & 0x80) == 0)
                goto LABEL_357;
              v169 += 7;
              v13 = v170++ >= 9;
              if (v13)
              {
                v171 = 0;
                v176 = a1[*v4];
                goto LABEL_359;
              }
            }
            a1[*v4] = 1;
LABEL_357:
            v176 = a1[*v4];
            if (a1[*v4])
              v171 = 0;
LABEL_359:
            if (v176 || (v171 & 7) == 4)
              break;
            if ((v171 >> 3) == 1)
            {
              if ((v171 & 7) != 0)
                goto LABEL_606;
              v178 = 0;
              while (1)
              {
                v179 = *v2;
                v180 = *(_QWORD *)&a1[v179];
                v181 = v180 + 1;
                if (v180 == -1 || v181 > *(_QWORD *)&a1[*v3])
                  break;
                v182 = *(char *)(*(_QWORD *)&a1[*v5] + v180);
                *(_QWORD *)&a1[v179] = v181;
                if (v182 < 0)
                {
                  v32 = v178++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_347;
              }
              a1[*v4] = 1;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_606;
            }
          }
          v218 = a1[*v4];
          PBReaderRecallMark();
          if (!v218)
          {
LABEL_452:
            PBReaderRecallMark();
            continue;
          }
        }
        break;
      }
LABEL_607:
      PBReaderRecallMark();
LABEL_608:
      PBReaderRecallMark();
LABEL_609:
      PBReaderRecallMark();
LABEL_610:
      PBReaderRecallMark();
      return 0;
    case 7u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
LABEL_457:
      while (2)
      {
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_580;
          v220 = 0;
          v221 = 0;
          v222 = 0;
          while (1)
          {
            v223 = *v2;
            v224 = *(_QWORD *)&a1[v223];
            v225 = v224 + 1;
            if (v224 == -1 || v225 > *(_QWORD *)&a1[*v3])
              break;
            v226 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v224);
            *(_QWORD *)&a1[v223] = v225;
            v222 |= (unint64_t)(v226 & 0x7F) << v220;
            if ((v226 & 0x80) == 0)
              goto LABEL_467;
            v220 += 7;
            v13 = v221++ >= 9;
            if (v13)
            {
              v222 = 0;
              v227 = a1[*v4];
              goto LABEL_469;
            }
          }
          a1[*v4] = 1;
LABEL_467:
          v227 = a1[*v4];
          if (a1[*v4])
            v222 = 0;
LABEL_469:
          v228 = v222 & 7;
          if (v227 || v228 == 4)
            goto LABEL_580;
          if ((v222 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_607;
            continue;
          }
          break;
        }
        if (v228 == 2)
        {
          if (PBReaderPlaceMark())
          {
            while (1)
            {
LABEL_484:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v235 = a1[*v4], a1[*v4]))
              {
                PBReaderRecallMark();
                goto LABEL_457;
              }
              while (1)
              {
                v236 = *v2;
                v237 = *(_QWORD *)&a1[v236];
                v238 = v237 + 1;
                if (v237 == -1 || v238 > *(_QWORD *)&a1[*v3])
                  break;
                v239 = *(char *)(*(_QWORD *)&a1[*v5] + v237);
                *(_QWORD *)&a1[v236] = v238;
                if (v239 < 0)
                {
                  v13 = v235++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_484;
              }
              a1[*v4] = 1;
            }
          }
        }
        else if ((v222 & 7) == 0)
        {
          do
          {
            v230 = *v2;
            v231 = *(_QWORD *)&a1[v230];
            v232 = v231 + 1;
            if (v231 == -1 || v232 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_457;
            }
            v233 = *(char *)(*(_QWORD *)&a1[*v5] + v231);
            *(_QWORD *)&a1[v230] = v232;
            if ((v233 & 0x80000000) == 0)
              break;
            v234 = v228++;
          }
          while (v234 <= 8);
          continue;
        }
        goto LABEL_607;
      }
    case 8u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
LABEL_498:
      while (2)
      {
        if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v240 = 0;
          v241 = 0;
          v242 = 0;
          while (1)
          {
            v243 = *v2;
            v244 = *(_QWORD *)&a1[v243];
            v245 = v244 + 1;
            if (v244 == -1 || v245 > *(_QWORD *)&a1[*v3])
              break;
            v246 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v244);
            *(_QWORD *)&a1[v243] = v245;
            v242 |= (unint64_t)(v246 & 0x7F) << v240;
            if ((v246 & 0x80) == 0)
              goto LABEL_508;
            v240 += 7;
            v13 = v241++ >= 9;
            if (v13)
            {
              v242 = 0;
              v247 = a1[*v4];
              goto LABEL_510;
            }
          }
          a1[*v4] = 1;
LABEL_508:
          v247 = a1[*v4];
          if (a1[*v4])
            v242 = 0;
LABEL_510:
          if (!v247 && (v242 & 7) != 4)
          {
            if ((v242 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_607;
              continue;
            }
            if ((v242 & 7) == 0)
            {
              v249 = 0;
              do
              {
                v250 = *v2;
                v251 = *(_QWORD *)&a1[v250];
                v252 = v251 + 1;
                if (v251 == -1 || v252 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_498;
                }
                v253 = *(char *)(*(_QWORD *)&a1[*v5] + v251);
                *(_QWORD *)&a1[v250] = v252;
                if ((v253 & 0x80000000) == 0)
                  break;
                v32 = v249++ > 8;
              }
              while (!v32);
              continue;
            }
            goto LABEL_607;
          }
        }
        break;
      }
LABEL_526:
      v254 = a1[*v4];
      PBReaderRecallMark();
      if (v254)
        goto LABEL_608;
      goto LABEL_581;
    case 9u:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
      while (2)
      {
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_580;
          v255 = 0;
          v256 = 0;
          v257 = 0;
          while (1)
          {
            v258 = *v2;
            v259 = *(_QWORD *)&a1[v258];
            v260 = v259 + 1;
            if (v259 == -1 || v260 > *(_QWORD *)&a1[*v3])
              break;
            v261 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v259);
            *(_QWORD *)&a1[v258] = v260;
            v257 |= (unint64_t)(v261 & 0x7F) << v255;
            if ((v261 & 0x80) == 0)
              goto LABEL_541;
            v255 += 7;
            v13 = v256++ >= 9;
            if (v13)
            {
              v257 = 0;
              v262 = a1[*v4];
              goto LABEL_543;
            }
          }
          a1[*v4] = 1;
LABEL_541:
          v262 = a1[*v4];
          if (a1[*v4])
            v257 = 0;
LABEL_543:
          v263 = v257 & 7;
          if (v262 || v263 == 4)
            goto LABEL_580;
          if ((v257 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_607;
            continue;
          }
          break;
        }
        if (v263 == 2 && PBReaderPlaceMark() && GEOPDButtonItemIsValid(a1))
        {
          PBReaderRecallMark();
          continue;
        }
        goto LABEL_607;
      }
    case 0xAu:
      if (v41 != 2 || !PBReaderPlaceMark())
        goto LABEL_608;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
      while (2)
      {
        if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v265 = 0;
          v266 = 0;
          v267 = 0;
          while (1)
          {
            v268 = *v2;
            v269 = *(_QWORD *)&a1[v268];
            v270 = v269 + 1;
            if (v269 == -1 || v270 > *(_QWORD *)&a1[*v3])
              break;
            v271 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v269);
            *(_QWORD *)&a1[v268] = v270;
            v267 |= (unint64_t)(v271 & 0x7F) << v265;
            if ((v271 & 0x80) == 0)
              goto LABEL_567;
            v265 += 7;
            v13 = v266++ >= 9;
            if (v13)
            {
              v267 = 0;
              v272 = a1[*v4];
              goto LABEL_569;
            }
          }
          a1[*v4] = 1;
LABEL_567:
          v272 = a1[*v4];
          if (a1[*v4])
            v267 = 0;
LABEL_569:
          v273 = v267 & 7;
          if (!v272 && v273 != 4)
          {
            if ((v267 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_607;
              continue;
            }
            if (v273 == 2 && PBReaderPlaceMark() && GEOPDTemplatePlaceModuleConfigurationIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
            goto LABEL_607;
          }
        }
        break;
      }
LABEL_580:
      v275 = a1[*v4];
      PBReaderRecallMark();
      if (v275)
        goto LABEL_608;
      goto LABEL_581;
    default:
      if ((PBReaderSkipValueWithTag() & 1) != 0)
        goto LABEL_52;
      goto LABEL_608;
  }
}

uint64_t _GEOPDPlaceIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v2 = *(_DWORD *)(a1 + 140);
  if ((v2 & 0x46000) != 0)
    return 1;
  if ((v2 & 0x10000) != 0)
  {
    if (GEOPDPlacecardLayoutDataIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(_DWORD *)(a1 + 140);
  }
  if ((v2 & 0x21000) != 0)
    return 1;
  return (v2 >> 15) & 1;
}

void sub_18918B4D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918C140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceCollectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const float *v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  unsigned __int8 v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOLocalizedString *v42;
  id v43;
  void *v44;
  int v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  void *v78;
  int v80;
  char v81;
  char v82;
  char v83;
  BOOL v84;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 224));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 220);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 216));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const float *)(a1 + 240);
  v13 = (uint32x4_t)vld1q_dup_f32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD7C80), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD7C90), v14)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD7C60), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD7C70), v14))), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD7CA0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CD7CB0), v14))));
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 0x11;
        v20 = v19 & ~(_BYTE)v11 | v9;
        v21 = v19 | v11;
        v81 = v20;
        v82 = v21 | v20;
        if (((v21 | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v83 = (v22 == 0) | v21;
        v84 = v21;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_221;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_221:
      v80 = 1;
      goto LABEL_222;
    }
    v36 = v28 >> 3;
    v37 = v84;
    if ((v83 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(_BYTE *)(a1 + 241) & 0x80) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsDisplayTitle:](a1, v42);
        goto LABEL_187;
      case 2:
        if (!v37 || (*(_BYTE *)(a1 + 241) & 8) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsCollectionDescription:](a1, v42);
        goto LABEL_187;
      case 3:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 0x40) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsPhoto:](a1, v42);
        goto LABEL_187;
      case 4:
        if (!v37)
          goto LABEL_188;
        if ((*(_BYTE *)(a1 + 241) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_258;
          v75 = (int)(*(_DWORD *)(a1 + 240) << 19) >> 31;
          goto LABEL_215;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_257;
        PBReaderRecallMark();
        v46 = 80;
        goto LABEL_132;
      case 5:
        if (!v37)
          goto LABEL_188;
        if ((*(_BYTE *)(a1 + 243) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_258;
          v75 = (int)(*(_DWORD *)(a1 + 240) << 7) >> 31;
          goto LABEL_215;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_257;
        PBReaderRecallMark();
        v46 = 184;
        goto LABEL_132;
      case 6:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 0x80) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDPlaceCollectionItem);
        if (!GEOPDPlaceCollectionItemReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsPlaceCollectionItem:](a1, v42);
        goto LABEL_187;
      case 7:
        if (!v37 || (*(_BYTE *)(a1 + 243) & 4) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsSpokenTitle:](a1, v42);
        goto LABEL_187;
      case 8:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 1) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsItemId:](a1, v42);
        goto LABEL_187;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_188;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_DWORD *)(a1 + 240) |= 4u;
        while (2)
        {
          v50 = *v23;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v33 = v48++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_193;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_193:
        v74 = 232;
        goto LABEL_202;
      case 10:
        if (!v37 || (*(_BYTE *)(a1 + 240) & 0x80) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsCollectionClassDisplayName:](a1, v42);
        goto LABEL_187;
      case 11:
        if (!v37 || (*(_BYTE *)(a1 + 241) & 1) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsCollectionClassSpokenName:](a1, v42);
        goto LABEL_187;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_188;
        *(_DWORD *)(a1 + 240) |= 1u;
        v54 = *v23;
        v55 = *(_QWORD *)(v3 + v54);
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v56 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v55);
          *(_QWORD *)(v3 + v54) = v55 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v24) = 1;
          v56 = 0;
        }
        *(_QWORD *)(a1 + 160) = v56;
        goto LABEL_217;
      case 13:
        if (!v37)
          goto LABEL_188;
        if ((*(_BYTE *)(a1 + 243) & 8) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 208;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_258;
        v75 = (16 * *(_DWORD *)(a1 + 240)) >> 31;
        goto LABEL_215;
      case 14:
        if (!v37)
          goto LABEL_188;
        if ((*(_BYTE *)(a1 + 240) & 0x20) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 24;
LABEL_113:
          v59 = *(void **)(a1 + v58);
          *(_QWORD *)(a1 + v58) = v57;
          goto LABEL_133;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_258;
        v75 = (int)(*(_DWORD *)(a1 + 240) << 26) >> 31;
        goto LABEL_215;
      case 15:
        if (!v37)
          goto LABEL_188;
        if ((*(_BYTE *)(a1 + 243) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_258;
          v75 = (int)(*(_DWORD *)(a1 + 240) << 6) >> 31;
          goto LABEL_215;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDPublisher);
        if (!GEOPDPublisherReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        v46 = 192;
        goto LABEL_132;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_188;
        v60 = 0;
        v61 = 0;
        v62 = 0;
        *(_DWORD *)(a1 + 240) |= 8u;
        while (2)
        {
          v63 = *v23;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v33 = v61++ >= 9;
              if (v33)
              {
                v62 = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v62 = 0;
LABEL_197:
        *(_BYTE *)(a1 + 236) = v62 != 0;
        goto LABEL_217;
      case 17:
        if (!v37)
          goto LABEL_188;
        if ((*(_BYTE *)(a1 + 240) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_258;
          v75 = (int)(*(_DWORD *)(a1 + 240) << 25) >> 31;
LABEL_215:
          v7 += v75;
LABEL_216:
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BF0];
          v25 = (int *)MEMORY[0x1E0D82BB8];
LABEL_217:
          if (!(v82 & 1 | (v7 != 0)))
            goto LABEL_221;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (GEOPDCaptionedPhotoReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v46 = 32;
LABEL_132:
          v59 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v42;
LABEL_133:

          --v7;
          goto LABEL_216;
        }
LABEL_257:

LABEL_258:
        v80 = 0;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_222:
        if ((v81 & 1) != 0)
LABEL_223:
          *(_DWORD *)(a1 + 240) |= 0x10u;
        if (v84 || (v80 & 1) == 0)
        {
          *(_DWORD *)(a1 + 240) |= 0x8000u;
          *(_DWORD *)(a1 + 240) |= 0x800u;
          *(_DWORD *)(a1 + 240) |= 0x400000u;
          *(_DWORD *)(a1 + 240) |= 0x1000u;
          *(_DWORD *)(a1 + 240) |= 0x1000000u;
          *(_DWORD *)(a1 + 240) |= 0x800000u;
          *(_DWORD *)(a1 + 240) |= 0x4000000u;
          *(_DWORD *)(a1 + 240) |= 0x10000u;
          *(_DWORD *)(a1 + 240) |= 0x80u;
          *(_DWORD *)(a1 + 240) |= 0x100u;
          *(_DWORD *)(a1 + 240) |= 0x8000000u;
          *(_DWORD *)(a1 + 240) |= 0x20u;
          *(_DWORD *)(a1 + 240) |= 0x2000000u;
          *(_DWORD *)(a1 + 240) |= 0x40u;
          *(_DWORD *)(a1 + 240) |= 0x200u;
          *(_DWORD *)(a1 + 240) |= 0x400u;
          *(_DWORD *)(a1 + 240) |= 0x4000u;
          *(_DWORD *)(a1 + 240) |= 0x2000u;
          *(_DWORD *)(a1 + 240) |= 0x100000u;
          *(_DWORD *)(a1 + 240) |= 0x80000u;
          *(_DWORD *)(a1 + 240) |= 0x200000u;
          *(_DWORD *)(a1 + 240) |= 0x20000u;
          *(_DWORD *)(a1 + 240) |= 0x40000u;
        }
        else if (v22)
        {
          while (1)
          {
            v76 = *v22++;
            v77 = 0x8000;
            switch(v76)
            {
              case 0:
                goto LABEL_251;
              case 1:
                goto LABEL_250;
              case 2:
                v77 = 2048;
                goto LABEL_250;
              case 3:
                v77 = 0x400000;
                goto LABEL_250;
              case 4:
                v77 = 4096;
                goto LABEL_250;
              case 5:
                v77 = 0x1000000;
                goto LABEL_250;
              case 6:
                v77 = 0x800000;
                goto LABEL_250;
              case 7:
                v77 = 0x4000000;
                goto LABEL_250;
              case 8:
                v77 = 0x10000;
                goto LABEL_250;
              case 10:
                v77 = 128;
                goto LABEL_250;
              case 11:
                v77 = 256;
                goto LABEL_250;
              case 13:
                v77 = 0x8000000;
                goto LABEL_250;
              case 14:
                v77 = 32;
                goto LABEL_250;
              case 15:
                v77 = 0x2000000;
                goto LABEL_250;
              case 17:
                v77 = 64;
                goto LABEL_250;
              case 19:
                v77 = 512;
                goto LABEL_250;
              case 20:
                v77 = 1024;
                goto LABEL_250;
              case 21:
                v77 = 0x4000;
                goto LABEL_250;
              case 22:
                v77 = 0x2000;
                goto LABEL_250;
              case 23:
                v77 = 0x100000;
                goto LABEL_250;
              case 24:
                v77 = 0x80000;
                goto LABEL_250;
              case 25:
                v77 = 0x200000;
                goto LABEL_250;
              case 26:
                v77 = 0x20000;
                goto LABEL_250;
              case 27:
                v77 = 0x40000;
LABEL_250:
                *(_DWORD *)(a1 + 240) |= v77;
                break;
              default:
                continue;
            }
          }
        }
LABEL_251:
        if (v80)
          v3 = *(_BYTE *)(v3 + *v24) == 0;
        else
          v3 = 0;
        if (v84)
        {
          v78 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_188;
        v67 = 0;
        v68 = 0;
        v49 = 0;
        *(_DWORD *)(a1 + 240) |= 2u;
        while (2)
        {
          v69 = *v23;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v49 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v33 = v68++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v49) = 0;
LABEL_201:
        v74 = 228;
LABEL_202:
        *(_DWORD *)(a1 + v74) = v49;
        goto LABEL_217;
      case 19:
        if (!v37 || (*(_BYTE *)(a1 + 241) & 2) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedBytes);
        if (!GEOLocalizedBytesReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsCollectionDescriptionBytes:](a1, v42);
        goto LABEL_187;
      case 20:
        if (!v37 || (*(_BYTE *)(a1 + 241) & 4) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsCollectionDescriptionHtml:](a1, v42);
        goto LABEL_187;
      case 21:
        if (!v37 || (*(_BYTE *)(a1 + 241) & 0x40) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsCollectionItemDescription:](a1, v42);
        goto LABEL_187;
      case 22:
        if (!v37 || (*(_BYTE *)(a1 + 241) & 0x20) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsCollectionItemDescriptionHtml:](a1, v42);
        goto LABEL_187;
      case 23:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 0x10) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsLongTitle:](a1, v42);
        goto LABEL_187;
      case 24:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 8) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsLongSpokenTitle:](a1, v42);
        goto LABEL_187;
      case 25:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 0x20) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDMediaLink);
        if (!GEOPDMediaLinkReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsMediaLink:](a1, v42);
        goto LABEL_187;
      case 26:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 2) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsItemPhoto:](a1, v42);
        goto LABEL_187;
      case 27:
        if (!v37 || (*(_BYTE *)(a1 + 242) & 4) != 0)
          goto LABEL_188;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_258;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_257;
        PBReaderRecallMark();
        -[GEOPDPlaceCollection _addNoFlagsLocalizedCategory:](a1, v42);
LABEL_187:

        goto LABEL_216;
      default:
        if ((v81 & 1) == 0 || (*(_BYTE *)(a1 + 240) & 0x10) != 0)
        {
LABEL_188:
          v73 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v23 = (int *)MEMORY[0x1E0D82BF0];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if ((v73 & 1) == 0)
          {
            v80 = 0;
            goto LABEL_222;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BF0];
          v25 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v80 = 0;
            goto LABEL_223;
          }
        }
        goto LABEL_217;
    }
  }
}

void sub_18918D700(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918D8EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918DAD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918DC1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918DD2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918DF34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918E060(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918E298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918E414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918E540(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918E694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918E7EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918E940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918EB54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918EC80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918EE6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918F058(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918F244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918F480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918F5AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918F7E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18918F964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891913CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceCollectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  _BYTE v155[128];
  _BYTE v156[128];
  _BYTE v157[128];
  _BYTE v158[128];
  _BYTE v159[128];
  _BYTE v160[128];
  _BYTE v161[128];
  _BYTE v162[128];
  _BYTE v163[128];
  _BYTE v164[128];
  _BYTE v165[128];
  _BYTE v166[128];
  _BYTE v167[128];
  _BYTE v168[128];
  _BYTE v169[128];
  _BYTE v170[128];
  _BYTE v171[128];
  uint64_t v172;

  v172 = *MEMORY[0x1E0C80C00];
  v151 = 0u;
  v152 = 0u;
  v153 = 0u;
  v154 = 0u;
  v2 = *(id *)(a1 + 104);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v151, v171, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v152;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v152 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v151 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v151, v171, 16);
    }
    while (v4);
  }

  v149 = 0u;
  v150 = 0u;
  v147 = 0u;
  v148 = 0u;
  v7 = *(id *)(a1 + 72);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v147, v170, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v148;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v148 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v147 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v147, v170, 16);
    }
    while (v9);
  }

  v145 = 0u;
  v146 = 0u;
  v143 = 0u;
  v144 = 0u;
  v12 = *(id *)(a1 + 168);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v143, v169, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v144;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v144 != v15)
          objc_enumerationMutation(v12);
        -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(*((_QWORD *)&v143 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v143, v169, 16);
    }
    while (v14);
  }

  objc_msgSend(*(id *)(a1 + 80), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 184), "readAll:", 1);
  v141 = 0u;
  v142 = 0u;
  v139 = 0u;
  v140 = 0u;
  v17 = *(id *)(a1 + 176);
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v139, v168, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v140;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v140 != v20)
          objc_enumerationMutation(v17);
        -[GEOPDPlaceCollectionItem readAll:](*(_QWORD *)(*((_QWORD *)&v139 + 1) + 8 * v21++), 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v139, v168, 16);
    }
    while (v19);
  }

  v137 = 0u;
  v138 = 0u;
  v135 = 0u;
  v136 = 0u;
  v22 = *(id *)(a1 + 200);
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v135, v167, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v136;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v136 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v135 + 1) + 8 * v26++), "readAll:", 1);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v135, v167, 16);
    }
    while (v24);
  }

  v133 = 0u;
  v134 = 0u;
  v131 = 0u;
  v132 = 0u;
  v27 = *(id *)(a1 + 112);
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v131, v166, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v132;
    do
    {
      v31 = 0;
      do
      {
        if (*(_QWORD *)v132 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v131 + 1) + 8 * v31++), "readAll:", 1);
      }
      while (v29 != v31);
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v131, v166, 16);
    }
    while (v29);
  }

  v129 = 0u;
  v130 = 0u;
  v127 = 0u;
  v128 = 0u;
  v32 = *(id *)(a1 + 40);
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v127, v165, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v128;
    do
    {
      v36 = 0;
      do
      {
        if (*(_QWORD *)v128 != v35)
          objc_enumerationMutation(v32);
        objc_msgSend(*(id *)(*((_QWORD *)&v127 + 1) + 8 * v36++), "readAll:", 1);
      }
      while (v34 != v36);
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v127, v165, 16);
    }
    while (v34);
  }

  v125 = 0u;
  v126 = 0u;
  v123 = 0u;
  v124 = 0u;
  v37 = *(id *)(a1 + 48);
  v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v123, v164, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v124;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v124 != v40)
          objc_enumerationMutation(v37);
        objc_msgSend(*(id *)(*((_QWORD *)&v123 + 1) + 8 * v41++), "readAll:", 1);
      }
      while (v39 != v41);
      v39 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v123, v164, 16);
    }
    while (v39);
  }

  -[GEOPDPublisher readAll:](*(_QWORD *)(a1 + 192), 1);
  -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(a1 + 32), 1);
  v121 = 0u;
  v122 = 0u;
  v119 = 0u;
  v120 = 0u;
  v42 = *(id *)(a1 + 56);
  v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v119, v163, 16);
  if (v43)
  {
    v44 = v43;
    v45 = *(_QWORD *)v120;
    do
    {
      v46 = 0;
      do
      {
        if (*(_QWORD *)v120 != v45)
          objc_enumerationMutation(v42);
        objc_msgSend(*(id *)(*((_QWORD *)&v119 + 1) + 8 * v46++), "readAll:", 1);
      }
      while (v44 != v46);
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v119, v163, 16);
    }
    while (v44);
  }

  v117 = 0u;
  v118 = 0u;
  v115 = 0u;
  v116 = 0u;
  v47 = *(id *)(a1 + 64);
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v115, v162, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v116;
    do
    {
      v51 = 0;
      do
      {
        if (*(_QWORD *)v116 != v50)
          objc_enumerationMutation(v47);
        objc_msgSend(*(id *)(*((_QWORD *)&v115 + 1) + 8 * v51++), "readAll:", 1);
      }
      while (v49 != v51);
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v115, v162, 16);
    }
    while (v49);
  }

  v113 = 0u;
  v114 = 0u;
  v111 = 0u;
  v112 = 0u;
  v52 = *(id *)(a1 + 96);
  v53 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v111, v161, 16);
  if (v53)
  {
    v54 = v53;
    v55 = *(_QWORD *)v112;
    do
    {
      v56 = 0;
      do
      {
        if (*(_QWORD *)v112 != v55)
          objc_enumerationMutation(v52);
        objc_msgSend(*(id *)(*((_QWORD *)&v111 + 1) + 8 * v56++), "readAll:", 1);
      }
      while (v54 != v56);
      v54 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v111, v161, 16);
    }
    while (v54);
  }

  v109 = 0u;
  v110 = 0u;
  v107 = 0u;
  v108 = 0u;
  v57 = *(id *)(a1 + 88);
  v58 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v107, v160, 16);
  if (v58)
  {
    v59 = v58;
    v60 = *(_QWORD *)v108;
    do
    {
      v61 = 0;
      do
      {
        if (*(_QWORD *)v108 != v60)
          objc_enumerationMutation(v57);
        objc_msgSend(*(id *)(*((_QWORD *)&v107 + 1) + 8 * v61++), "readAll:", 1);
      }
      while (v59 != v61);
      v59 = objc_msgSend(v57, "countByEnumeratingWithState:objects:count:", &v107, v160, 16);
    }
    while (v59);
  }

  v105 = 0u;
  v106 = 0u;
  v103 = 0u;
  v104 = 0u;
  v62 = *(id *)(a1 + 144);
  v63 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v103, v159, 16);
  if (v63)
  {
    v64 = v63;
    v65 = *(_QWORD *)v104;
    do
    {
      v66 = 0;
      do
      {
        if (*(_QWORD *)v104 != v65)
          objc_enumerationMutation(v62);
        objc_msgSend(*(id *)(*((_QWORD *)&v103 + 1) + 8 * v66++), "readAll:", 1);
      }
      while (v64 != v66);
      v64 = objc_msgSend(v62, "countByEnumeratingWithState:objects:count:", &v103, v159, 16);
    }
    while (v64);
  }

  v101 = 0u;
  v102 = 0u;
  v99 = 0u;
  v100 = 0u;
  v67 = *(id *)(a1 + 136);
  v68 = objc_msgSend(v67, "countByEnumeratingWithState:objects:count:", &v99, v158, 16);
  if (v68)
  {
    v69 = v68;
    v70 = *(_QWORD *)v100;
    do
    {
      v71 = 0;
      do
      {
        if (*(_QWORD *)v100 != v70)
          objc_enumerationMutation(v67);
        objc_msgSend(*(id *)(*((_QWORD *)&v99 + 1) + 8 * v71++), "readAll:", 1);
      }
      while (v69 != v71);
      v69 = objc_msgSend(v67, "countByEnumeratingWithState:objects:count:", &v99, v158, 16);
    }
    while (v69);
  }

  v97 = 0u;
  v98 = 0u;
  v95 = 0u;
  v96 = 0u;
  v72 = *(id *)(a1 + 152);
  v73 = objc_msgSend(v72, "countByEnumeratingWithState:objects:count:", &v95, v157, 16);
  if (v73)
  {
    v74 = v73;
    v75 = *(_QWORD *)v96;
    do
    {
      v76 = 0;
      do
      {
        if (*(_QWORD *)v96 != v75)
          objc_enumerationMutation(v72);
        -[GEOPDMediaLink readAll:](*(_QWORD *)(*((_QWORD *)&v95 + 1) + 8 * v76++), 1);
      }
      while (v74 != v76);
      v74 = objc_msgSend(v72, "countByEnumeratingWithState:objects:count:", &v95, v157, 16);
    }
    while (v74);
  }

  v93 = 0u;
  v94 = 0u;
  v91 = 0u;
  v92 = 0u;
  v77 = *(id *)(a1 + 120);
  v78 = objc_msgSend(v77, "countByEnumeratingWithState:objects:count:", &v91, v156, 16);
  if (v78)
  {
    v79 = v78;
    v80 = *(_QWORD *)v92;
    do
    {
      v81 = 0;
      do
      {
        if (*(_QWORD *)v92 != v80)
          objc_enumerationMutation(v77);
        -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(*((_QWORD *)&v91 + 1) + 8 * v81++), 1);
      }
      while (v79 != v81);
      v79 = objc_msgSend(v77, "countByEnumeratingWithState:objects:count:", &v91, v156, 16);
    }
    while (v79);
  }

  v89 = 0u;
  v90 = 0u;
  v87 = 0u;
  v88 = 0u;
  v82 = *(id *)(a1 + 128);
  v83 = objc_msgSend(v82, "countByEnumeratingWithState:objects:count:", &v87, v155, 16);
  if (v83)
  {
    v84 = v83;
    v85 = *(_QWORD *)v88;
    do
    {
      v86 = 0;
      do
      {
        if (*(_QWORD *)v88 != v85)
          objc_enumerationMutation(v82);
        objc_msgSend(*(id *)(*((_QWORD *)&v87 + 1) + 8 * v86++), "readAll:", 1, (_QWORD)v87);
      }
      while (v84 != v86);
      v84 = objc_msgSend(v82, "countByEnumeratingWithState:objects:count:", &v87, v155, 16);
    }
    while (v84);
  }

}

unint64_t GEOPDPlaceCollectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 220))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceCollectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 224));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 216) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 220) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceCollectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceCollectionReadAllFrom_initialTag;
  Specified = GEOPDPlaceCollectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceCollectionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 224));
  return Specified;
}

void sub_1891943F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891950FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceCollectionIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  os_unfair_lock_s *v5;
  char IsDirty;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  _BYTE v136[128];
  _BYTE v137[128];
  _BYTE v138[128];
  _BYTE v139[128];
  _BYTE v140[128];
  _BYTE v141[128];
  _BYTE v142[128];
  _BYTE v143[128];
  _BYTE v144[128];
  _BYTE v145[128];
  _BYTE v146[128];
  _BYTE v147[128];
  _BYTE v148[128];
  _BYTE v149[128];
  _BYTE v150[128];
  _BYTE v151[128];
  uint64_t v152;

  v152 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 224));
  v2 = *(_DWORD *)(a1 + 240);
  if ((v2 & 0x1DC199A0) != 0)
    return 1;
  if ((v2 & 0x2000000) != 0)
  {
    v5 = *(os_unfair_lock_s **)(a1 + 192);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDPublisherIsDirty((uint64_t)v5);
      os_unfair_lock_unlock(v5 + 18);
      if ((IsDirty & 1) != 0)
        return 1;
      v2 = *(_DWORD *)(a1 + 240);
    }
  }
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 240);
  }
  if ((v2 & 0x3E6600) == 0)
  {
    if ((v2 & 0x8000) != 0)
    {
      v134 = 0u;
      v135 = 0u;
      v132 = 0u;
      v133 = 0u;
      v7 = *(id *)(a1 + 104);
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v132, v151, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v133;
LABEL_15:
        v11 = 0;
        while (1)
        {
          if (*(_QWORD *)v133 != v10)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v132 + 1) + 8 * v11)))
            goto LABEL_174;
          if (v9 == ++v11)
          {
            v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v132, v151, 16);
            if (v9)
              goto LABEL_15;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x800) != 0)
    {
      v130 = 0u;
      v131 = 0u;
      v128 = 0u;
      v129 = 0u;
      v7 = *(id *)(a1 + 72);
      v12 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v128, v150, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v129;
LABEL_25:
        v15 = 0;
        while (1)
        {
          if (*(_QWORD *)v129 != v14)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v128 + 1) + 8 * v15)))
            goto LABEL_174;
          if (v13 == ++v15)
          {
            v13 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v128, v150, 16);
            if (v13)
              goto LABEL_25;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x400000) != 0)
    {
      v126 = 0u;
      v127 = 0u;
      v124 = 0u;
      v125 = 0u;
      v7 = *(id *)(a1 + 168);
      v16 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v124, v149, 16);
      if (v16)
      {
        v17 = v16;
        v18 = *(_QWORD *)v125;
LABEL_35:
        v19 = 0;
        while (1)
        {
          if (*(_QWORD *)v125 != v18)
            objc_enumerationMutation(v7);
          if ((GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v124 + 1) + 8 * v19)) & 1) != 0)
            goto LABEL_174;
          if (v17 == ++v19)
          {
            v17 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v124, v149, 16);
            if (v17)
              goto LABEL_35;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x800000) != 0)
    {
      v122 = 0u;
      v123 = 0u;
      v120 = 0u;
      v121 = 0u;
      v7 = *(id *)(a1 + 176);
      v20 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v120, v148, 16);
      if (v20)
      {
        v21 = v20;
        v22 = *(_QWORD *)v121;
LABEL_45:
        v23 = 0;
        while (1)
        {
          if (*(_QWORD *)v121 != v22)
            objc_enumerationMutation(v7);
          v24 = *(os_unfair_lock_s **)(*((_QWORD *)&v120 + 1) + 8 * v23);
          if (v24)
          {
            os_unfair_lock_lock_with_options();
            v25 = _GEOPDPlaceCollectionItemIsDirty((uint64_t)v24);
            os_unfair_lock_unlock(v24 + 24);
            if ((v25 & 1) != 0)
              goto LABEL_174;
          }
          if (v21 == ++v23)
          {
            v21 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v120, v148, 16);
            if (v21)
              goto LABEL_45;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x4000000) != 0)
    {
      v118 = 0u;
      v119 = 0u;
      v116 = 0u;
      v117 = 0u;
      v7 = *(id *)(a1 + 200);
      v26 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v116, v147, 16);
      if (v26)
      {
        v27 = v26;
        v28 = *(_QWORD *)v117;
LABEL_56:
        v29 = 0;
        while (1)
        {
          if (*(_QWORD *)v117 != v28)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v116 + 1) + 8 * v29)))
            goto LABEL_174;
          if (v27 == ++v29)
          {
            v27 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v116, v147, 16);
            if (v27)
              goto LABEL_56;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x80) != 0)
    {
      v114 = 0u;
      v115 = 0u;
      v112 = 0u;
      v113 = 0u;
      v7 = *(id *)(a1 + 40);
      v30 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v112, v146, 16);
      if (v30)
      {
        v31 = v30;
        v32 = *(_QWORD *)v113;
LABEL_66:
        v33 = 0;
        while (1)
        {
          if (*(_QWORD *)v113 != v32)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v112 + 1) + 8 * v33)))
            goto LABEL_174;
          if (v31 == ++v33)
          {
            v31 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v112, v146, 16);
            if (v31)
              goto LABEL_66;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x100) != 0)
    {
      v110 = 0u;
      v111 = 0u;
      v108 = 0u;
      v109 = 0u;
      v7 = *(id *)(a1 + 48);
      v34 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v108, v145, 16);
      if (v34)
      {
        v35 = v34;
        v36 = *(_QWORD *)v109;
LABEL_76:
        v37 = 0;
        while (1)
        {
          if (*(_QWORD *)v109 != v36)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v108 + 1) + 8 * v37)))
            goto LABEL_174;
          if (v35 == ++v37)
          {
            v35 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v108, v145, 16);
            if (v35)
              goto LABEL_76;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x200) != 0)
    {
      v106 = 0u;
      v107 = 0u;
      v104 = 0u;
      v105 = 0u;
      v7 = *(id *)(a1 + 56);
      v38 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v104, v144, 16);
      if (v38)
      {
        v39 = v38;
        v40 = *(_QWORD *)v105;
LABEL_86:
        v41 = 0;
        while (1)
        {
          if (*(_QWORD *)v105 != v40)
            objc_enumerationMutation(v7);
          if (GEOLocalizedBytesIsDirty(*(_QWORD *)(*((_QWORD *)&v104 + 1) + 8 * v41)))
            goto LABEL_174;
          if (v39 == ++v41)
          {
            v39 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v104, v144, 16);
            if (v39)
              goto LABEL_86;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x400) != 0)
    {
      v102 = 0u;
      v103 = 0u;
      v100 = 0u;
      v101 = 0u;
      v7 = *(id *)(a1 + 64);
      v42 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v100, v143, 16);
      if (v42)
      {
        v43 = v42;
        v44 = *(_QWORD *)v101;
LABEL_96:
        v45 = 0;
        while (1)
        {
          if (*(_QWORD *)v101 != v44)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v100 + 1) + 8 * v45)))
            goto LABEL_174;
          if (v43 == ++v45)
          {
            v43 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v100, v143, 16);
            if (v43)
              goto LABEL_96;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x4000) != 0)
    {
      v98 = 0u;
      v99 = 0u;
      v96 = 0u;
      v97 = 0u;
      v7 = *(id *)(a1 + 96);
      v46 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v96, v142, 16);
      if (v46)
      {
        v47 = v46;
        v48 = *(_QWORD *)v97;
LABEL_106:
        v49 = 0;
        while (1)
        {
          if (*(_QWORD *)v97 != v48)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v96 + 1) + 8 * v49)))
            goto LABEL_174;
          if (v47 == ++v49)
          {
            v47 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v96, v142, 16);
            if (v47)
              goto LABEL_106;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x2000) != 0)
    {
      v94 = 0u;
      v95 = 0u;
      v92 = 0u;
      v93 = 0u;
      v7 = *(id *)(a1 + 88);
      v50 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v92, v141, 16);
      if (v50)
      {
        v51 = v50;
        v52 = *(_QWORD *)v93;
LABEL_116:
        v53 = 0;
        while (1)
        {
          if (*(_QWORD *)v93 != v52)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v92 + 1) + 8 * v53)))
            goto LABEL_174;
          if (v51 == ++v53)
          {
            v51 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v92, v141, 16);
            if (v51)
              goto LABEL_116;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x100000) != 0)
    {
      v90 = 0u;
      v91 = 0u;
      v88 = 0u;
      v89 = 0u;
      v7 = *(id *)(a1 + 144);
      v54 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v88, v140, 16);
      if (v54)
      {
        v55 = v54;
        v56 = *(_QWORD *)v89;
LABEL_126:
        v57 = 0;
        while (1)
        {
          if (*(_QWORD *)v89 != v56)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v88 + 1) + 8 * v57)))
            goto LABEL_174;
          if (v55 == ++v57)
          {
            v55 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v88, v140, 16);
            if (v55)
              goto LABEL_126;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x80000) != 0)
    {
      v86 = 0u;
      v87 = 0u;
      v84 = 0u;
      v85 = 0u;
      v7 = *(id *)(a1 + 136);
      v58 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v84, v139, 16);
      if (v58)
      {
        v59 = v58;
        v60 = *(_QWORD *)v85;
LABEL_136:
        v61 = 0;
        while (1)
        {
          if (*(_QWORD *)v85 != v60)
            objc_enumerationMutation(v7);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v84 + 1) + 8 * v61)))
            goto LABEL_174;
          if (v59 == ++v61)
          {
            v59 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v84, v139, 16);
            if (v59)
              goto LABEL_136;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x200000) != 0)
    {
      v82 = 0u;
      v83 = 0u;
      v80 = 0u;
      v81 = 0u;
      v7 = *(id *)(a1 + 152);
      v62 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v80, v138, 16);
      if (v62)
      {
        v63 = v62;
        v64 = *(_QWORD *)v81;
LABEL_146:
        v65 = 0;
        while (1)
        {
          if (*(_QWORD *)v81 != v64)
            objc_enumerationMutation(v7);
          if (GEOPDMediaLinkIsDirty(*(_QWORD *)(*((_QWORD *)&v80 + 1) + 8 * v65)))
            goto LABEL_174;
          if (v63 == ++v65)
          {
            v63 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v80, v138, 16);
            if (v63)
              goto LABEL_146;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x20000) != 0)
    {
      v78 = 0u;
      v79 = 0u;
      v76 = 0u;
      v77 = 0u;
      v7 = *(id *)(a1 + 120);
      v66 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v76, v137, 16);
      if (v66)
      {
        v67 = v66;
        v68 = *(_QWORD *)v77;
LABEL_156:
        v69 = 0;
        while (1)
        {
          if (*(_QWORD *)v77 != v68)
            objc_enumerationMutation(v7);
          if ((GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v76 + 1) + 8 * v69)) & 1) != 0)
            goto LABEL_174;
          if (v67 == ++v69)
          {
            v67 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v76, v137, 16);
            if (v67)
              goto LABEL_156;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x40000) == 0)
      return 0;
    v74 = 0u;
    v75 = 0u;
    v72 = 0u;
    v73 = 0u;
    v7 = *(id *)(a1 + 128);
    v3 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v72, v136, 16);
    if (!v3)
    {
LABEL_175:

      return v3;
    }
    v70 = *(_QWORD *)v73;
LABEL_167:
    v71 = 0;
    while (1)
    {
      if (*(_QWORD *)v73 != v70)
        objc_enumerationMutation(v7);
      if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v72 + 1) + 8 * v71)))
        break;
      if (v3 == ++v71)
      {
        v3 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v72, v136, 16);
        if (v3)
          goto LABEL_167;
        goto LABEL_175;
      }
    }
LABEL_174:
    v3 = 1;
    goto LABEL_175;
  }
  return 1;
}

os_unfair_lock_s *GEOPDPlaceCollectionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlaceCollectionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 56);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189196B44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189197E4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceCollectionItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDMapsIdentifier *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  BOOL v61;
  uint64_t v62;
  __int16 v63;
  int v64;
  __int16 v65;
  void *v66;
  int v68;
  char v69;
  char v70;
  char v71;
  char v72;
  BOOL v73;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 104) >> 2) & 1)
      + ((*(unsigned __int16 *)(a1 + 104) >> 3) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 104)), (uint16x4_t)0xFFF6FFFAFFF9FFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 104) >> 9) & 1)+ ((*(_WORD *)(a1 + 104) >> 4) & 1)+ ((*(_WORD *)(a1 + 104) >> 5) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 5;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v70 = v17;
        v71 = v18 | v17;
        v69 = v8;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v72 = (v19 == 0) | v18;
        v73 = v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_122;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_122:
      v68 = 1;
      goto LABEL_123;
    }
    v33 = v25 >> 3;
    v34 = v73;
    if ((v72 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 104) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_144;
          v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            v40 = 56;
            goto LABEL_92;
          }
          goto LABEL_143;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_144;
        v63 = *(_WORD *)(a1 + 104) << 8;
        goto LABEL_119;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x100) != 0)
          goto LABEL_102;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_144;
        v39 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_143;
        PBReaderRecallMark();
        -[GEOPDPlaceCollectionItem _addNoFlagsPhoto:](a1, v39);
        goto LABEL_86;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x40) != 0)
          goto LABEL_102;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_144;
        v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_143;
        PBReaderRecallMark();
        -[GEOPDPlaceCollectionItem _addNoFlagsItemDescription:](a1, v39);
        goto LABEL_86;
      case 4:
        if (!v34)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 104) & 0x400) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 80);
          *(_QWORD *)(a1 + 80) = v44;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_144;
        v63 = 32 * *(_WORD *)(a1 + 104);
        goto LABEL_119;
      case 5:
        if ((v69 & 1) == 0)
          goto LABEL_102;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        while (2)
        {
          v49 = *v20;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v30 = v47++ >= 9;
              if (v30)
              {
                v48 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v48 = 0;
LABEL_107:
        v61 = v48 != 0;
        v62 = 101;
        goto LABEL_112;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x200) != 0)
          goto LABEL_102;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_144;
        v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_143;
        PBReaderRecallMark();
        -[GEOPDPlaceCollectionItem _addNoFlagsPunchOutText:](a1, v39);
        goto LABEL_86;
      case 7:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x10) != 0)
          goto LABEL_102;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_144;
        v39 = objc_alloc_init(GEOLocalizedBytes);
        if (!GEOLocalizedBytesReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_143;
        PBReaderRecallMark();
        -[GEOPDPlaceCollectionItem _addNoFlagsItemDescriptionBytes:](a1, v39);
        goto LABEL_86;
      case 8:
        if (!v34 || (*(_WORD *)(a1 + 104) & 0x20) != 0)
          goto LABEL_102;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_144;
        v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_143;
        PBReaderRecallMark();
        -[GEOPDPlaceCollectionItem _addNoFlagsItemDescriptionHtml:](a1, v39);
LABEL_86:

        goto LABEL_120;
      case 9:
        if (!v34)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 104) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_144;
          v63 = *(_WORD *)(a1 + 104) << 12;
LABEL_119:
          v7 += v63 >> 15;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_144;
        v39 = objc_alloc_init(GEOPDQuickLinkItem);
        if (GEOPDQuickLinkItemReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v40 = 24;
LABEL_92:
          v45 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
LABEL_93:

          --v7;
LABEL_120:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_121:
          if (!(v71 & 1 | (v7 != 0)))
            goto LABEL_122;
          continue;
        }
LABEL_143:

LABEL_144:
        v68 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_123:
        if ((v70 & 1) != 0)
LABEL_124:
          *(_WORD *)(a1 + 104) |= 4u;
        if (v73 || (v68 & 1) == 0)
        {
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 0x40u;
          *(_WORD *)(a1 + 104) |= 0x400u;
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            v64 = *v19++;
            v65 = 128;
            switch(v64)
            {
              case 0:
                goto LABEL_137;
              case 1:
                goto LABEL_136;
              case 2:
                v65 = 256;
                goto LABEL_136;
              case 3:
                v65 = 64;
                goto LABEL_136;
              case 4:
                v65 = 1024;
                goto LABEL_136;
              case 6:
                v65 = 512;
                goto LABEL_136;
              case 7:
                v65 = 16;
                goto LABEL_136;
              case 8:
                v65 = 32;
                goto LABEL_136;
              case 9:
                v65 = 8;
LABEL_136:
                *(_WORD *)(a1 + 104) |= v65;
                break;
              default:
                continue;
            }
          }
        }
LABEL_137:
        if (v68)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v73)
        {
          v66 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 10:
        if ((v69 & 1) == 0)
          goto LABEL_102;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          v56 = *v20;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v30 = v54++ >= 9;
              if (v30)
              {
                v55 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v55 = 0;
LABEL_111:
        v61 = v55 != 0;
        v62 = 100;
LABEL_112:
        *(_BYTE *)(a1 + v62) = v61;
        goto LABEL_121;
      default:
        if ((v70 & 1) == 0 || (*(_WORD *)(a1 + 104) & 4) != 0)
        {
LABEL_102:
          v60 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v60 & 1) == 0)
          {
            v68 = 0;
            goto LABEL_123;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v43)
          {
            v68 = 0;
            goto LABEL_124;
          }
        }
        goto LABEL_121;
    }
  }
}

void sub_189198964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189198B4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189198D34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189198E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189199054(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18919917C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189199364(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189199D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceCollectionItemCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v2 = *(id *)(a1 + 64);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v44;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v44 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(*((_QWORD *)&v43 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
    }
    while (v4);
  }

  v41 = 0u;
  v42 = 0u;
  v39 = 0u;
  v40 = 0u;
  v7 = *(id *)(a1 + 48);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v40;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v40 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v39 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
    }
    while (v9);
  }

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v12 = *(id *)(a1 + 72);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v36;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v36 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
    }
    while (v14);
  }

  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v17 = *(id *)(a1 + 32);
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v32;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v32 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v31 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
    }
    while (v19);
  }

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v22 = *(id *)(a1 + 40);
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v28;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v28 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v26++), "readAll:", 1, (_QWORD)v27);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
    }
    while (v24);
  }

  -[GEOPDQuickLinkItem readAll:](*(_QWORD *)(a1 + 24), 1);
}

unint64_t GEOPDPlaceCollectionItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceCollectionItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceCollectionItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceCollectionItemReadAllFrom_initialTag;
  Specified = GEOPDPlaceCollectionItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceCollectionItemCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18919AC78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQuickLinkItemIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_49;
          goto LABEL_45;
        case 2u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_49;
        case 3u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_49;
        case 4u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_49;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_46;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v23 = 0;
          break;
        case 7u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_49;
        default:
LABEL_45:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_49:
          v28 = 0;
          goto LABEL_48;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_46;
      }
LABEL_43:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_48:
  PBReaderRecallMark();
  return v28;
}

void sub_18919B448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceCollectionItemIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];
  _BYTE v45[128];
  _BYTE v46[128];
  _BYTE v47[128];
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0xFF0) != 0)
    return 1;
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x100) != 0)
    {
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
      v4 = *(id *)(a1 + 64);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v41;
LABEL_9:
        v8 = 0;
        while (1)
        {
          if (*(_QWORD *)v41 != v7)
            objc_enumerationMutation(v4);
          if ((GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v40 + 1) + 8 * v8)) & 1) != 0)
            goto LABEL_57;
          if (v6 == ++v8)
          {
            v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
            if (v6)
              goto LABEL_9;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 104);
    }
    if ((v2 & 0x40) != 0)
    {
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v4 = *(id *)(a1 + 48);
      v9 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v36, v47, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v37;
LABEL_19:
        v12 = 0;
        while (1)
        {
          if (*(_QWORD *)v37 != v11)
            objc_enumerationMutation(v4);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v36 + 1) + 8 * v12)))
            goto LABEL_57;
          if (v10 == ++v12)
          {
            v10 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v36, v47, 16);
            if (v10)
              goto LABEL_19;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 104);
    }
    if ((v2 & 0x200) != 0)
    {
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v4 = *(id *)(a1 + 72);
      v13 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v32, v46, 16);
      if (v13)
      {
        v14 = v13;
        v15 = *(_QWORD *)v33;
LABEL_29:
        v16 = 0;
        while (1)
        {
          if (*(_QWORD *)v33 != v15)
            objc_enumerationMutation(v4);
          if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * v16)))
            goto LABEL_57;
          if (v14 == ++v16)
          {
            v14 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v32, v46, 16);
            if (v14)
              goto LABEL_29;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 104);
    }
    if ((v2 & 0x10) != 0)
    {
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v4 = *(id *)(a1 + 32);
      v17 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v28, v45, 16);
      if (v17)
      {
        v18 = v17;
        v19 = *(_QWORD *)v29;
LABEL_39:
        v20 = 0;
        while (1)
        {
          if (*(_QWORD *)v29 != v19)
            objc_enumerationMutation(v4);
          if (GEOLocalizedBytesIsDirty(*(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * v20)))
            goto LABEL_57;
          if (v18 == ++v20)
          {
            v18 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v28, v45, 16);
            if (v18)
              goto LABEL_39;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 104);
    }
    if ((v2 & 0x20) == 0)
      return 0;
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v4 = *(id *)(a1 + 40);
    v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v44, 16);
    if (!v3)
    {
LABEL_58:

      return v3;
    }
    v21 = *(_QWORD *)v25;
LABEL_50:
    v22 = 0;
    while (1)
    {
      if (*(_QWORD *)v25 != v21)
        objc_enumerationMutation(v4);
      if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v22)))
        break;
      if (v3 == ++v22)
      {
        v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v44, 16);
        if (v3)
          goto LABEL_50;
        goto LABEL_58;
      }
    }
LABEL_57:
    v3 = 1;
    goto LABEL_58;
  }
  if (!GEOPDQuickLinkItemIsDirty(*(_QWORD *)(a1 + 24)))
  {
    v2 = *(_WORD *)(a1 + 104);
    goto LABEL_6;
  }
  return 1;
}

void sub_18919BDD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceCollectionItemFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceCollectionItemFilter addItemId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18919C968(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceContextMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  GEOPDSearchPlaceContextMetadata *v55;
  uint64_t v56;
  void *v57;
  char v58;
  char v59;
  int v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  int *v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v67 = v17 & ~(_BYTE)v12 | v10;
        v68 = v17 | v12 | v67;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v69 = (v18 == 0) | v17 | v12;
        v70 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_89;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_89:
      v65 = 1;
      goto LABEL_90;
    }
    v32 = v24 >> 3;
    v33 = v70;
    if ((v69 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_75;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            v40 = 0;
            goto LABEL_77;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_75:
        if (*(_BYTE *)(v3 + *v20))
          v40 = 0;
LABEL_77:
        *(_QWORD *)(a1 + 32) = v40;
        goto LABEL_88;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_72;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v51 = *v19;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v50) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v50) = 0;
LABEL_81:
        *(_DWORD *)(a1 + 60) = v50;
        goto LABEL_88;
      case 3:
        if (!v33)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v59 = 8 * *(_BYTE *)(a1 + 64);
          goto LABEL_86;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v55 = objc_alloc_init(GEOPDSearchPlaceContextMetadata);
        if (!GEOPDSearchPlaceContextMetadataReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
          goto LABEL_109;
        PBReaderRecallMark();
        v56 = 40;
        goto LABEL_71;
      case 4:
        if (!v33)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v59 = 16 * *(_BYTE *)(a1 + 64);
LABEL_86:
          v9 += v59 >> 7;
LABEL_87:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v55 = objc_alloc_init(GEOPDAutocompletePlaceContextMetadata);
        if (GEOPDAutocompletePlaceContextMetadataReadAllFrom((uint64_t)v55, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v56 = 24;
LABEL_71:
          v57 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;

          --v9;
          goto LABEL_87;
        }
LABEL_109:

LABEL_110:
        v65 = 0;
        v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
        if ((v67 & 1) != 0)
LABEL_92:
          *(_BYTE *)(a1 + v66[207]) |= 4u;
        if (v70 & 1 | ((v65 & 1) == 0))
        {
          *(_BYTE *)(a1 + v66[207]) |= 0x10u;
          *(_BYTE *)(a1 + v66[207]) |= 8u;
          goto LABEL_103;
        }
        if (v18)
        {
          while (2)
          {
            while (1)
            {
              v61 = *v18++;
              v60 = v61;
              if (v61 == 3)
                break;
              if (v60 == 4)
              {
                v62 = 8;
                goto LABEL_102;
              }
              if (!v60)
                goto LABEL_103;
            }
            v62 = 16;
LABEL_102:
            *(_BYTE *)(a1 + v66[207]) |= v62;
            continue;
          }
        }
LABEL_103:
        if (v65)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v63 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v67 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 4) != 0)
        {
LABEL_72:
          v58 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
            v65 = 0;
LABEL_90:
            v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v65 = 0;
            v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_92;
          }
        }
LABEL_88:
        if (!(v68 & 1 | (v9 != 0)))
          goto LABEL_89;
        continue;
    }
  }
}

void sub_18919D87C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18919D978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18919F69C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceContextMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceContextMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceContextMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceContextMetadataReadAllFrom_initialTag;
  Specified = GEOPDPlaceContextMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDSearchPlaceContextMetadata readAll:](*(_QWORD *)(a1 + 40), 1);
    -[GEOPDAutocompletePlaceContextMetadata readAll:](*(_QWORD *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18919F858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceContextMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  int v36;
  BOOL v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  int v55;
  int v56;
  BOOL v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  char v83;
  unsigned int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  int v90;
  int v91;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  int v108;
  int v109;
  char v110;
  unsigned int v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  int v117;
  int v118;
  BOOL v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  int v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  int v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  int v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  int v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  int v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  int v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  int v164;
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  int v169;
  unsigned int v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  int v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  int v179;
  unsigned int v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  int v184;
  int v185;
  int v186;
  _BOOL8 v187;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_349:
    v187 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v187;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_349;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_349;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_353;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_37;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_348;
        }
      case 2u:
        if ((v8 & 7) != 0)
          goto LABEL_353;
        v23 = 0;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
            break;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v22 = v23++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_348;
        }
LABEL_37:
        a1[*v4] = 1;
        goto LABEL_348;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_353;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_41:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_346;
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (2)
        {
          v31 = *v2;
          v32 = *(_QWORD *)&a1[v31];
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)&a1[*v3])
          {
            a1[*v4] = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v32);
            *(_QWORD *)&a1[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if (v34 < 0)
            {
              v28 += 7;
              v13 = v29++ >= 9;
              if (v13)
              {
                v30 = 0;
                v35 = a1[*v4];
                goto LABEL_53;
              }
              continue;
            }
          }
          break;
        }
        v35 = a1[*v4];
        if (a1[*v4])
          v30 = 0;
LABEL_53:
        v36 = v30 & 7;
        if (v35)
          v37 = 1;
        else
          v37 = v36 == 4;
        if (v37)
        {
LABEL_346:
          v186 = a1[*v4];
          PBReaderRecallMark();
          if (v186)
            goto LABEL_353;
LABEL_347:
          PBReaderRecallMark();
LABEL_348:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_349;
          continue;
        }
        switch((v30 >> 3))
        {
          case 1u:
            if (v36 == 2)
              goto LABEL_79;
            goto LABEL_352;
          case 2u:
            if ((v30 & 7) != 0)
              goto LABEL_352;
            v38 = 0;
            while (1)
            {
              v39 = *v2;
              v40 = *(_QWORD *)&a1[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                goto LABEL_202;
              v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
              *(_QWORD *)&a1[v39] = v41;
              if (v42 < 0)
              {
                v22 = v38++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_41;
            }
          case 3u:
            if (v36 == 2)
              goto LABEL_79;
            goto LABEL_352;
          case 4u:
            if (v36 == 2)
              goto LABEL_79;
            goto LABEL_352;
          case 5u:
            if (v36 == 2)
              goto LABEL_79;
            goto LABEL_352;
          case 6u:
            if (v36 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
              goto LABEL_206;
            goto LABEL_352;
          case 7u:
            if (v36 == 2)
              goto LABEL_79;
            goto LABEL_352;
          case 8u:
            if ((v30 & 7) != 0)
              goto LABEL_352;
            v43 = 0;
            while (1)
            {
              v44 = *v2;
              v45 = *(_QWORD *)&a1[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
                goto LABEL_202;
              v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
              *(_QWORD *)&a1[v44] = v46;
              if (v47 < 0)
              {
                v22 = v43++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_41;
            }
          case 9u:
            if (v36 != 2 || !PBReaderPlaceMark())
              goto LABEL_352;
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
LABEL_92:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
            {
              v48 = 0;
              v49 = 0;
              v50 = 0;
              while (2)
              {
                v51 = *v2;
                v52 = *(_QWORD *)&a1[v51];
                v53 = v52 + 1;
                if (v52 == -1 || v53 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                }
                else
                {
                  v54 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v52);
                  *(_QWORD *)&a1[v51] = v53;
                  v50 |= (unint64_t)(v54 & 0x7F) << v48;
                  if (v54 < 0)
                  {
                    v48 += 7;
                    v13 = v49++ >= 9;
                    if (v13)
                    {
                      v50 = 0;
                      v55 = a1[*v4];
                      goto LABEL_104;
                    }
                    continue;
                  }
                }
                break;
              }
              v55 = a1[*v4];
              if (a1[*v4])
                v50 = 0;
LABEL_104:
              v56 = v50 & 7;
              if (v55)
                v57 = 1;
              else
                v57 = v56 == 4;
              if (!v57)
              {
                switch((v50 >> 3))
                {
                  case 1u:
                    if (v56 != 2)
                      goto LABEL_351;
                    goto LABEL_110;
                  case 2u:
                    if ((v50 & 7) != 0)
                      goto LABEL_351;
                    v58 = 0;
                    while (1)
                    {
                      v59 = *v2;
                      v60 = *(_QWORD *)&a1[v59];
                      v61 = v60 + 1;
                      if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                        goto LABEL_152;
                      v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
                      *(_QWORD *)&a1[v59] = v61;
                      if (v62 < 0)
                      {
                        v22 = v58++ > 8;
                        if (!v22)
                          continue;
                      }
                      goto LABEL_92;
                    }
                  case 3u:
                    if ((v50 & 7) != 0)
                      goto LABEL_351;
                    v63 = 0;
                    while (1)
                    {
                      v64 = *v2;
                      v65 = *(_QWORD *)&a1[v64];
                      v66 = v65 + 1;
                      if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
                        goto LABEL_152;
                      v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
                      *(_QWORD *)&a1[v64] = v66;
                      if (v67 < 0)
                      {
                        v22 = v63++ > 8;
                        if (!v22)
                          continue;
                      }
                      goto LABEL_92;
                    }
                  case 4u:
                    if ((v50 & 7) != 0)
                      goto LABEL_351;
                    v68 = 0;
                    while (1)
                    {
                      v69 = *v2;
                      v70 = *(_QWORD *)&a1[v69];
                      v71 = v70 + 1;
                      if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
                        goto LABEL_152;
                      v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
                      *(_QWORD *)&a1[v69] = v71;
                      if (v72 < 0)
                      {
                        v22 = v68++ > 8;
                        if (!v22)
                          continue;
                      }
                      goto LABEL_92;
                    }
                  case 5u:
                    if ((v50 & 7) != 0)
                      goto LABEL_351;
                    v73 = 0;
                    while (1)
                    {
                      v74 = *v2;
                      v75 = *(_QWORD *)&a1[v74];
                      v76 = v75 + 1;
                      if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
                        goto LABEL_152;
                      v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
                      *(_QWORD *)&a1[v74] = v76;
                      if (v77 < 0)
                      {
                        v22 = v73++ > 8;
                        if (!v22)
                          continue;
                      }
                      goto LABEL_92;
                    }
                  case 6u:
                    if ((v50 & 7) != 0)
                      goto LABEL_351;
                    v78 = 0;
                    do
                    {
                      v79 = *v2;
                      v80 = *(_QWORD *)&a1[v79];
                      v81 = v80 + 1;
                      if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
                      {
LABEL_152:
                        a1[*v4] = 1;
                        goto LABEL_92;
                      }
                      v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
                      *(_QWORD *)&a1[v79] = v81;
                      if ((v82 & 0x80000000) == 0)
                        break;
                      v22 = v78++ > 8;
                    }
                    while (!v22);
                    break;
                  default:
LABEL_110:
                    if ((PBReaderSkipValueWithTag() & 1) == 0)
                      goto LABEL_351;
                    continue;
                }
                continue;
              }
              break;
            }
            v109 = a1[*v4];
            PBReaderRecallMark();
            if (!v109)
              goto LABEL_206;
            goto LABEL_352;
          case 0xAu:
            if (v36 != 2 || !PBReaderPlaceMark())
              goto LABEL_352;
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
            break;
          case 0xBu:
            if ((v30 & 7) != 0)
              goto LABEL_352;
            v103 = 0;
            do
            {
              v104 = *v2;
              v105 = *(_QWORD *)&a1[v104];
              v106 = v105 + 1;
              if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
              {
LABEL_202:
                a1[*v4] = 1;
                goto LABEL_41;
              }
              v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
              *(_QWORD *)&a1[v104] = v106;
              if ((v107 & 0x80000000) == 0)
                break;
              v22 = v103++ > 8;
            }
            while (!v22);
            goto LABEL_41;
          default:
LABEL_79:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_352;
            goto LABEL_41;
        }
LABEL_156:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v83 = 0;
          v84 = 0;
          v85 = 0;
          while (1)
          {
            v86 = *v2;
            v87 = *(_QWORD *)&a1[v86];
            v88 = v87 + 1;
            if (v87 == -1 || v88 > *(_QWORD *)&a1[*v3])
              break;
            v89 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v87);
            *(_QWORD *)&a1[v86] = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if ((v89 & 0x80) == 0)
              goto LABEL_166;
            v83 += 7;
            v13 = v84++ >= 9;
            if (v13)
            {
              v85 = 0;
              v90 = a1[*v4];
              goto LABEL_168;
            }
          }
          a1[*v4] = 1;
LABEL_166:
          v90 = a1[*v4];
          if (a1[*v4])
            v85 = 0;
LABEL_168:
          v91 = v85 & 7;
          if (v90 || v91 == 4)
            break;
          if ((v85 >> 3) == 1)
          {
            if (v91 == 2)
            {
              if (PBReaderPlaceMark())
              {
                while (1)
                {
LABEL_183:
                  if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v98 = a1[*v4], a1[*v4]))
                  {
                    PBReaderRecallMark();
                    goto LABEL_156;
                  }
                  while (1)
                  {
                    v99 = *v2;
                    v100 = *(_QWORD *)&a1[v99];
                    v101 = v100 + 1;
                    if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
                      break;
                    v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
                    *(_QWORD *)&a1[v99] = v101;
                    if (v102 < 0)
                    {
                      v13 = v98++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_183;
                  }
                  a1[*v4] = 1;
                }
              }
            }
            else if ((v85 & 7) == 0)
            {
              do
              {
                v93 = *v2;
                v94 = *(_QWORD *)&a1[v93];
                v95 = v94 + 1;
                if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_156;
                }
                v96 = *(char *)(*(_QWORD *)&a1[*v5] + v94);
                *(_QWORD *)&a1[v93] = v95;
                if ((v96 & 0x80000000) == 0)
                  break;
                v97 = v91++;
              }
              while (v97 <= 8);
              continue;
            }
LABEL_351:
            PBReaderRecallMark();
            goto LABEL_352;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_351;
        }
        v108 = a1[*v4];
        PBReaderRecallMark();
        if (!v108)
        {
LABEL_206:
          PBReaderRecallMark();
          goto LABEL_41;
        }
LABEL_352:
        PBReaderRecallMark();
LABEL_353:
        PBReaderRecallMark();
        return 0;
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_353;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_210:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v110 = 0;
          v111 = 0;
          v112 = 0;
          while (2)
          {
            v113 = *v2;
            v114 = *(_QWORD *)&a1[v113];
            v115 = v114 + 1;
            if (v114 == -1 || v115 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v116 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v114);
              *(_QWORD *)&a1[v113] = v115;
              v112 |= (unint64_t)(v116 & 0x7F) << v110;
              if (v116 < 0)
              {
                v110 += 7;
                v13 = v111++ >= 9;
                if (v13)
                {
                  v112 = 0;
                  v117 = a1[*v4];
                  goto LABEL_222;
                }
                continue;
              }
            }
            break;
          }
          v117 = a1[*v4];
          if (a1[*v4])
            v112 = 0;
LABEL_222:
          v118 = v112 & 7;
          if (v117)
            v119 = 1;
          else
            v119 = v118 == 4;
          if (!v119)
          {
            switch((v112 >> 3))
            {
              case 1u:
                if (v118 == 2)
                  goto LABEL_323;
                goto LABEL_352;
              case 2u:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v120 = 0;
                while (1)
                {
                  v121 = *v2;
                  v122 = *(_QWORD *)&a1[v121];
                  v123 = v122 + 1;
                  if (v122 == -1 || v123 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v124 = *(char *)(*(_QWORD *)&a1[*v5] + v122);
                  *(_QWORD *)&a1[v121] = v123;
                  if (v124 < 0)
                  {
                    v22 = v120++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 3u:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v125 = 0;
                while (1)
                {
                  v126 = *v2;
                  v127 = *(_QWORD *)&a1[v126];
                  v128 = v127 + 1;
                  if (v127 == -1 || v128 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v129 = *(char *)(*(_QWORD *)&a1[*v5] + v127);
                  *(_QWORD *)&a1[v126] = v128;
                  if (v129 < 0)
                  {
                    v22 = v125++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 4u:
                if (v118 == 2)
                {
                  if (PBReaderPlaceMark())
                  {
                    while (1)
                    {
LABEL_335:
                      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v180 = a1[*v4], a1[*v4]))
                      {
LABEL_273:
                        PBReaderRecallMark();
                        goto LABEL_210;
                      }
                      while (1)
                      {
                        v181 = *v2;
                        v182 = *(_QWORD *)&a1[v181];
                        v183 = v182 + 1;
                        if (v182 == -1 || v183 > *(_QWORD *)&a1[*v3])
                          break;
                        v184 = *(char *)(*(_QWORD *)&a1[*v5] + v182);
                        *(_QWORD *)&a1[v181] = v183;
                        if (v184 < 0)
                        {
                          v13 = v180++ >= 9;
                          if (!v13)
                            continue;
                        }
                        goto LABEL_335;
                      }
                      a1[*v4] = 1;
                    }
                  }
                }
                else if ((v112 & 7) == 0)
                {
                  while (1)
                  {
                    v130 = *v2;
                    v131 = *(_QWORD *)&a1[v130];
                    v132 = v131 + 1;
                    if (v131 == -1 || v132 > *(_QWORD *)&a1[*v3])
                      break;
                    v133 = *(char *)(*(_QWORD *)&a1[*v5] + v131);
                    *(_QWORD *)&a1[v130] = v132;
                    if (v133 < 0)
                    {
                      v134 = v118++;
                      if (v134 <= 8)
                        continue;
                    }
                    goto LABEL_210;
                  }
LABEL_333:
                  a1[*v4] = 1;
                  continue;
                }
                break;
              case 5u:
                if (v118 == 2)
                  goto LABEL_323;
                goto LABEL_352;
              case 6u:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v135 = 0;
                while (1)
                {
                  v136 = *v2;
                  v137 = *(_QWORD *)&a1[v136];
                  v138 = v137 + 1;
                  if (v137 == -1 || v138 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v139 = *(char *)(*(_QWORD *)&a1[*v5] + v137);
                  *(_QWORD *)&a1[v136] = v138;
                  if (v139 < 0)
                  {
                    v22 = v135++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 7u:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v140 = 0;
                while (1)
                {
                  v141 = *v2;
                  v142 = *(_QWORD *)&a1[v141];
                  v143 = v142 + 1;
                  if (v142 == -1 || v143 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v144 = *(char *)(*(_QWORD *)&a1[*v5] + v142);
                  *(_QWORD *)&a1[v141] = v143;
                  if (v144 < 0)
                  {
                    v22 = v140++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 8u:
                if (v118 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
                  goto LABEL_273;
                goto LABEL_352;
              case 9u:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v145 = 0;
                while (1)
                {
                  v146 = *v2;
                  v147 = *(_QWORD *)&a1[v146];
                  v148 = v147 + 1;
                  if (v147 == -1 || v148 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v149 = *(char *)(*(_QWORD *)&a1[*v5] + v147);
                  *(_QWORD *)&a1[v146] = v148;
                  if (v149 < 0)
                  {
                    v22 = v145++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 0xAu:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v150 = 0;
                while (1)
                {
                  v151 = *v2;
                  v152 = *(_QWORD *)&a1[v151];
                  v153 = v152 + 1;
                  if (v152 == -1 || v153 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v154 = *(char *)(*(_QWORD *)&a1[*v5] + v152);
                  *(_QWORD *)&a1[v151] = v153;
                  if (v154 < 0)
                  {
                    v22 = v150++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 0xBu:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v155 = 0;
                while (1)
                {
                  v156 = *v2;
                  v157 = *(_QWORD *)&a1[v156];
                  v158 = v157 + 1;
                  if (v157 == -1 || v158 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v159 = *(char *)(*(_QWORD *)&a1[*v5] + v157);
                  *(_QWORD *)&a1[v156] = v158;
                  if (v159 < 0)
                  {
                    v22 = v155++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 0xCu:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v160 = 0;
                while (1)
                {
                  v161 = *v2;
                  v162 = *(_QWORD *)&a1[v161];
                  v163 = v162 + 1;
                  if (v162 == -1 || v163 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v164 = *(char *)(*(_QWORD *)&a1[*v5] + v162);
                  *(_QWORD *)&a1[v161] = v163;
                  if (v164 < 0)
                  {
                    v22 = v160++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 0xDu:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v165 = 0;
                while (1)
                {
                  v166 = *v2;
                  v167 = *(_QWORD *)&a1[v166];
                  v168 = v167 + 1;
                  if (v167 == -1 || v168 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v169 = *(char *)(*(_QWORD *)&a1[*v5] + v167);
                  *(_QWORD *)&a1[v166] = v168;
                  if (v169 < 0)
                  {
                    v22 = v165++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 0xEu:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v170 = 0;
                while (1)
                {
                  v171 = *v2;
                  v172 = *(_QWORD *)&a1[v171];
                  v173 = v172 + 1;
                  if (v172 == -1 || v173 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v174 = *(char *)(*(_QWORD *)&a1[*v5] + v172);
                  *(_QWORD *)&a1[v171] = v173;
                  if (v174 < 0)
                  {
                    v22 = v170++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              case 0xFu:
                if (v118 == 2)
                  goto LABEL_323;
                goto LABEL_352;
              case 0x10u:
                if ((v112 & 7) != 0)
                  goto LABEL_352;
                v175 = 0;
                while (1)
                {
                  v176 = *v2;
                  v177 = *(_QWORD *)&a1[v176];
                  v178 = v177 + 1;
                  if (v177 == -1 || v178 > *(_QWORD *)&a1[*v3])
                    goto LABEL_333;
                  v179 = *(char *)(*(_QWORD *)&a1[*v5] + v177);
                  *(_QWORD *)&a1[v176] = v178;
                  if (v179 < 0)
                  {
                    v22 = v175++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_210;
                }
              default:
LABEL_323:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_352;
                continue;
            }
            goto LABEL_352;
          }
          break;
        }
        v185 = a1[*v4];
        PBReaderRecallMark();
        if (v185)
          goto LABEL_353;
        goto LABEL_347;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_353;
        goto LABEL_348;
    }
  }
}

void sub_1891A0B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A0D5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891A21BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A23EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceInfosModuleConfigurationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDLocationInfoItem *v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v59 = v15;
        v60 = v16 | v15;
        if (((v16 | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_78;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      v57 = 1;
      goto LABEL_79;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v7 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_68;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            LODWORD(v41) = 0;
            goto LABEL_70;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_68:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_70:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_77;
      }
      goto LABEL_65;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_99;
          v37 = objc_alloc_init(GEOPDLocationInfoItem);
          if (!GEOPDLocationInfoItemReadAllFrom((uint64_t)v37, (void *)v3))
            goto LABEL_98;
          PBReaderRecallMark();
          v38 = 32;
LABEL_58:
          v46 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v8;
LABEL_76:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v51 = 16 * *(_BYTE *)(a1 + 56);
LABEL_75:
        v8 += v51 >> 7;
        goto LABEL_76;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_81;
      }
      goto LABEL_77;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_79:
      v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_78;
  }
  if (!v32)
    goto LABEL_65;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_99;
    v51 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v37 = objc_alloc_init(GEOPDFactoidInfoItem);
  if (GEOPDFactoidInfoItemReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v38 = 24;
    goto LABEL_58;
  }
LABEL_98:

LABEL_99:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
  if ((v59 & 1) == 0)
    goto LABEL_82;
LABEL_81:
  *(_BYTE *)(a1 + v58[223]) |= 2u;
LABEL_82:
  if (v62 || (v57 & 1) == 0)
  {
    *(_BYTE *)(a1 + v58[223]) |= 8u;
    *(_BYTE *)(a1 + v58[223]) |= 4u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 4;
          goto LABEL_91;
        }
        if (!v52)
          goto LABEL_92;
      }
      v54 = 8;
LABEL_91:
      *(_BYTE *)(a1 + v58[223]) |= v54;
      continue;
    }
  }
LABEL_92:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v62)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891A2AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A2F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceInfosModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceInfosModuleConfigurationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceInfosModuleConfigurationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceInfosModuleConfigurationReadAllFrom_initialTag;
  Specified = GEOPDPlaceInfosModuleConfigurationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891A317C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A3330(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A34E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceQuestionnaireFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891A3AD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRibbonConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDRibbonItem *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDRibbonItem);
          if (!GEOPDRibbonItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceRibbonConfiguration addRibbonItem:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891A423C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardLayoutConfigurationReadAllFrom(_QWORD *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDModuleLayoutEntry *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDModuleLayoutEntry);
          if (!GEOPDModuleLayoutEntryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addEntries:", v20, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = (void *)a1[1];
            a1[1] = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891A4E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardLayoutConfigurationReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDPlacecardLayoutConfigurationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1891A4E7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardLayoutConfigurationFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891A5904(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A5AD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A5CC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlacecardLayoutDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (!v4)
          break;
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 24), "readAll:", 1, v7);
}

BOOL GEOPDPlacecardLayoutDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1891A654C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardURLReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1891A6ADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardURLFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891A70AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A7348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlugReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  GEOPDAvailabilityInfo *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  int *v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFBFFFALL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v68 = v16 & ~(_BYTE)v11 | v9;
        v69 = v16 | v11 | v68;
        v67 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v70 = (v17 == 0) | v16 | v11;
        v71 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_102;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_102:
      v65 = 1;
      goto LABEL_103;
    }
    v31 = v23 >> 3;
    v32 = v71;
    if ((v70 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v67 & 1) == 0)
          goto LABEL_80;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_83;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_85;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_83:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_85:
        v59 = 68;
        goto LABEL_90;
      case 2:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 40;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_121;
        v60 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_99;
      case 3:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x40) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 48;
LABEL_59:
          v49 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_121;
        v60 = 2 * *(_BYTE *)(a1 + 76);
        goto LABEL_99;
      case 4:
        if ((v67 & 1) == 0)
          goto LABEL_80;
        v50 = 0;
        v51 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v39 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_89:
        v59 = 72;
LABEL_90:
        *(_DWORD *)(a1 + v59) = v39;
        goto LABEL_101;
      case 5:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v60 = 16 * *(_BYTE *)(a1 + 76);
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v56 = objc_alloc_init(GEOPDAvailabilityInfo);
        if (!GEOPDAvailabilityInfoReadAllFrom((uint64_t)v56, (void *)v3))
          goto LABEL_120;
        PBReaderRecallMark();
        v57 = 24;
        goto LABEL_78;
      case 6:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v60 = 8 * *(_BYTE *)(a1 + 76);
LABEL_99:
          v7 += v60 >> 7;
LABEL_100:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v56 = objc_alloc_init(GEOPDChargerInfo);
        if (GEOPDChargerInfoReadAllFrom((uint64_t)v56, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v57 = 32;
LABEL_78:
          v49 = *(void **)(a1 + v57);
          *(_QWORD *)(a1 + v57) = v56;
LABEL_79:

          --v7;
          goto LABEL_100;
        }
LABEL_120:

LABEL_121:
        v65 = 0;
        v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        if ((v68 & 1) != 0)
LABEL_105:
          *(_BYTE *)(a1 + v66[235]) |= 4u;
        if (v71 & 1 | ((v65 & 1) == 0))
        {
          *(_BYTE *)(a1 + v66[235]) |= 0x20u;
          *(_BYTE *)(a1 + v66[235]) |= 0x40u;
          *(_BYTE *)(a1 + v66[235]) |= 8u;
          *(_BYTE *)(a1 + v66[235]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v61 = *v17++;
            v62 = 32;
            switch(v61)
            {
              case 0:
                goto LABEL_114;
              case 2:
                goto LABEL_113;
              case 3:
                v62 = 64;
                goto LABEL_113;
              case 5:
                v62 = 8;
                goto LABEL_113;
              case 6:
                v62 = 16;
LABEL_113:
                *(_BYTE *)(a1 + v66[235]) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v65)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v71 & 1) != 0)
        {
          v63 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v68 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_80:
          v58 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
            v65 = 0;
LABEL_103:
            v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v65 = 0;
            v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_105;
          }
        }
LABEL_101:
        if (!(v69 & 1 | (v7 != 0)))
          goto LABEL_102;
        continue;
    }
  }
}

void sub_1891A7C28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A7D10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A7DF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A82C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlugReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlugReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlugReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlugReadAllFrom_initialTag;
  Specified = GEOPDPlugReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDChargerInfo readAll:](*(_QWORD *)(a1 + 32), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1891A8528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A87A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A89B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A8DF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPoiEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDMapsIdentifier *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  __int16 v53;
  int v54;
  __int16 v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  BOOL v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFF9FFFEFFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 3) & 1)+ (HIBYTE(*(_WORD *)(a1 + 96)) & 1)+ ((*(_WORD *)(a1 + 96) >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v60 = v17;
        v61 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v62 = (v19 == 0) | v18;
        v63 = v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_105;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_105:
      v58 = 1;
      goto LABEL_106;
    }
    v33 = v25 >> 3;
    v34 = v63;
    if ((v62 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 96) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_127;
          v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            v40 = 40;
            goto LABEL_75;
          }
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_127;
        v53 = *(_WORD *)(a1 + 96) << 11;
        goto LABEL_102;
      case 2:
        if (!v34)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_127;
          v53 = *(_WORD *)(a1 + 96) << 10;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_126;
        PBReaderRecallMark();
        v40 = 48;
        goto LABEL_75;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 96) & 4) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v39 = objc_alloc_init(GEOPDEventCategory);
        if (!GEOPDEventCategoryReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_126;
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsEventCategory:](a1, v39);
        goto LABEL_81;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x80) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v39 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_126;
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsPoiId:](a1, v39);
        goto LABEL_81;
      case 5:
        if (!v34 || (*(_WORD *)(a1 + 96) & 8) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v39 = objc_alloc_init(GEOPDDateTimeRange);
        if (!GEOPDDateTimeRangeReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_126;
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsEventDateTime:](a1, v39);
        goto LABEL_81;
      case 6:
        if (!v34)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 96) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_127;
          v53 = *(_WORD *)(a1 + 96) << 7;
LABEL_102:
          v7 += v53 >> 15;
LABEL_103:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v39 = objc_alloc_init(GEOTimezone);
        if (GEOTimezoneReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = 72;
LABEL_75:
          v44 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
          goto LABEL_103;
        }
LABEL_126:

LABEL_127:
        v58 = 0;
        v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        if ((v60 & 1) != 0)
LABEL_108:
          *(_WORD *)(a1 + v59[244]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[244]) |= 0x10u;
          *(_WORD *)(a1 + v59[244]) |= 0x20u;
          *(_WORD *)(a1 + v59[244]) |= 4u;
          *(_WORD *)(a1 + v59[244]) |= 0x80u;
          *(_WORD *)(a1 + v59[244]) |= 8u;
          *(_WORD *)(a1 + v59[244]) |= 0x100u;
          *(_WORD *)(a1 + v59[244]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            v54 = *v19++;
            v55 = 16;
            switch(v54)
            {
              case 0:
                goto LABEL_120;
              case 1:
                goto LABEL_119;
              case 2:
                v55 = 32;
                goto LABEL_119;
              case 3:
                v55 = 4;
                goto LABEL_119;
              case 4:
                v55 = 128;
                goto LABEL_119;
              case 5:
                v55 = 8;
                goto LABEL_119;
              case 6:
                v55 = 256;
                goto LABEL_119;
              case 7:
                v55 = 64;
LABEL_119:
                *(_WORD *)(a1 + v59[244]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_120:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v63)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 7:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x40) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v39 = objc_alloc_init(GEOPDPerformer);
        if (!GEOPDPerformerReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_126;
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsPerformer:](a1, v39);
LABEL_81:

        goto LABEL_103;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_90;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          v48 = *v20;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v47) = 0;
LABEL_95:
        *(_DWORD *)(a1 + 92) = v47;
        goto LABEL_104;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_90:
          v52 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_106:
            v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_107;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v43)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_108;
          }
        }
LABEL_104:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_105;
        continue;
    }
  }
}

void sub_1891A9818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A9900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A9AE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A9CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A9EB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891A9FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891AA964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPoiEventCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v33;
    while (1)
    {
      if (*(_QWORD *)v33 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
        if (!v4)
          break;
      }
    }
  }

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v6 = a1[8];
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v29;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v29 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * v10++), "readAll:", 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
    }
    while (v8);
  }

  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v11 = a1[4];
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v25;
    while (1)
    {
      if (*(_QWORD *)v25 != v14)
        objc_enumerationMutation(v11);
      if (!--v13)
      {
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
        if (!v13)
          break;
      }
    }
  }

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v15 = a1[7];
  v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v21;
    do
    {
      v19 = 0;
      do
      {
        if (*(_QWORD *)v21 != v18)
          objc_enumerationMutation(v15);
        -[GEOPDPerformer readAll:](*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v19++), 1);
      }
      while (v17 != v19);
      v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
    }
    while (v17);
  }

}

unint64_t GEOPDPoiEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPoiEventReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPoiEventReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPoiEventReadAllFrom_initialTag;
  Specified = GEOPDPoiEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPoiEventCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1891AAE78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891AB404(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891AB8C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPoiEventFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1891AC18C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPriceDescriptionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1891AC8EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPriceDescriptionFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891ACEB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPrototypeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v50 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v53 = v16;
        v51 = v17;
        v52 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_65;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_65:
      v49 = 1;
      goto LABEL_66;
    }
    v32 = v24 >> 3;
    v33 = v53;
    if ((v52 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if (!v33 || (*(_BYTE *)(a1 + 60) & 4) != 0)
      {
LABEL_57:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        goto LABEL_58;
      }
      PBReaderReadData();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEOPDPrototype _addNoFlagsValue:](a1, v40);

      goto LABEL_58;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v44 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_64;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_50;
    }
    if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_57;
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    if (!PBUnknownFieldAdd())
    {
      v49 = 0;
      v20 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_67;
    }
LABEL_58:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!(v51 & 1 | (v10 != 0)))
      goto LABEL_65;
  }
  if (!v33)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 40;
LABEL_50:
    v41 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v44 = 16 * *(_BYTE *)(a1 + 60);
LABEL_64:
    v10 += v44 >> 7;
    goto LABEL_58;
  }
LABEL_81:
  v49 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v50 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + 60) |= 1u;
LABEL_68:
  if (v53 || (v49 & 1) == 0)
  {
    *(_BYTE *)(a1 + 60) |= 2u;
    *(_BYTE *)(a1 + 60) |= 8u;
    *(_BYTE *)(a1 + 60) |= 4u;
  }
  else if (v18)
  {
    while (1)
    {
      v45 = *v18++;
      v46 = 2;
      switch(v45)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          v46 = 8;
          goto LABEL_74;
        case 3:
          v46 = 4;
LABEL_74:
          *(_BYTE *)(a1 + 60) |= v46;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v49)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v53)
  {
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891AD5F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891ADB94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891ADC68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPrototypeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPrototypeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPrototypeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPrototypeReadAllFrom_initialTag;
  Specified = GEOPDPrototypeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1891ADEBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891AE114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891AE378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPrototypeContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDPrototype *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDPrototype);
          if (!GEOPDPrototypeReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPrototypeContainer addPrototype:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891AEB98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPrototypeContainerFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891AF2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891AF52C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDMapsIdentifier *v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  __int16 v58;
  int v59;
  __int16 v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFDFFFCFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 6) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v65 = v16 & ~(_BYTE)v11 | v9;
        v66 = v16 | v11 | v65;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v67 = (v17 == 0) | v16 | v11;
        v68 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_108;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_108:
      v63 = 1;
      goto LABEL_109;
    }
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_88;
        if ((*(_WORD *)(a1 + 84) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_128;
          v37 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            v38 = 56;
            goto LABEL_60;
          }
          goto LABEL_127;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_128;
        v58 = *(_WORD *)(a1 + 84) << 8;
        goto LABEL_105;
      case 2:
        if (!v32)
          goto LABEL_88;
        if ((*(_WORD *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_128;
          v58 = *(_WORD *)(a1 + 84) << 10;
          goto LABEL_105;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v37 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_127;
        PBReaderRecallMark();
        v38 = 40;
        goto LABEL_60;
      case 3:
        if (!v32)
          goto LABEL_88;
        if ((*(_WORD *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_128;
          v58 = *(_WORD *)(a1 + 84) << 11;
LABEL_105:
          v7 += v58 >> 15;
LABEL_106:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v37 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v38 = 32;
LABEL_60:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v7;
          goto LABEL_106;
        }
LABEL_127:

LABEL_128:
        v63 = 0;
        v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_110:
        if ((v65 & 1) != 0)
LABEL_111:
          *(_WORD *)(a1 + v64[256]) |= 4u;
        if (v68 & 1 | ((v63 & 1) == 0))
        {
          *(_WORD *)(a1 + v64[256]) |= 0x80u;
          *(_WORD *)(a1 + v64[256]) |= 0x20u;
          *(_WORD *)(a1 + v64[256]) |= 0x10u;
          *(_WORD *)(a1 + v64[256]) |= 8u;
          *(_WORD *)(a1 + v64[256]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            v59 = *v17++;
            v60 = 128;
            switch(v59)
            {
              case 0:
                goto LABEL_121;
              case 1:
                goto LABEL_120;
              case 2:
                v60 = 32;
                goto LABEL_120;
              case 3:
                v60 = 16;
                goto LABEL_120;
              case 4:
                v60 = 8;
                goto LABEL_120;
              case 6:
                v60 = 64;
LABEL_120:
                *(_WORD *)(a1 + v64[256]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_121:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v68 & 1) != 0)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v32 || (*(_WORD *)(a1 + 84) & 8) != 0)
          goto LABEL_88;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v37 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v37, (void *)v3))
          goto LABEL_127;
        PBReaderRecallMark();
        -[GEOPDPublisher _addNoFlagsCollectionId:](a1, v37);
        goto LABEL_79;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_93:
        v57 = 80;
        goto LABEL_98;
      case 6:
        if (!v32 || (*(_WORD *)(a1 + 84) & 0x40) != 0)
          goto LABEL_88;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v37 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_127;
        PBReaderRecallMark();
        -[GEOPDPublisher _addNoFlagsPublisherDescription:](a1, v37);
LABEL_79:

        goto LABEL_106;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_88;
        v50 = 0;
        v51 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v45 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_97:
        v57 = 76;
LABEL_98:
        *(_DWORD *)(a1 + v57) = v45;
        goto LABEL_107;
      default:
        if ((v65 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_88:
          v56 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
LABEL_109:
            v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v41)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_111;
          }
        }
LABEL_107:
        if (!(v66 & 1 | (v7 != 0)))
          goto LABEL_108;
        continue;
    }
  }
}

void sub_1891B001C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B01D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B0A78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B0B5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPublisherCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(a1 + 40), 1);
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 48);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDPublisherReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPublisherReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPublisherReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPublisherReadAllFrom_initialTag;
  Specified = GEOPDPublisherReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPublisherCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1891B1520(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B1868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPublisherIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_WORD *)(a1 + 84);
  if ((v2 & 0x180) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 84);
  }
  if ((v2 & 0x10) == 0)
    goto LABEL_10;
  if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 32)))
    return 1;
  v2 = *(_WORD *)(a1 + 84);
LABEL_10:
  if ((v2 & 0x48) != 0)
    return 1;
  if ((v2 & 0x40) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_23;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_23:

  return v3;
}

void sub_1891B1D7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B25FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  GEOPDMapsIdentifier *v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if ((v7 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_69;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v42) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if ((_DWORD)v31 != 1)
    {
      if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v48 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v47;

        }
        v49 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (!v49)
        {
          v57 = 0;
          v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          goto LABEL_78;
        }
        goto LABEL_66;
      }
LABEL_65:
      v50 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v50 & 1) != 0)
        goto LABEL_66;
      v57 = 0;
LABEL_76:
      v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_77;
    }
    if (!v32)
      goto LABEL_65;
    if ((*(_BYTE *)(a1 + 56) & 8) != 0)
    {
      v51 = PBReaderSkipValueWithTag();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v51 & 1) == 0)
        goto LABEL_97;
      v8 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
    }
    else
    {
      v37 = PBReaderPlaceMark();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v37 & 1) == 0)
        goto LABEL_97;
      v38 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v38, (void *)v3))
        goto LABEL_96;
      PBReaderRecallMark();
      v39 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v38;

      --v8;
    }
    v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if (!v32 || (*(_BYTE *)(a1 + 56) & 4) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v38 = objc_alloc_init(GEOPDComponent);
  if (GEOPDComponentReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPublisherResult _addNoFlagsComponent:](a1, v38);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[265]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[265]) |= 8u;
    *(_BYTE *)(a1 + v58[265]) |= 4u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v58[265]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891B2D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B340C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPublisherResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPublisherResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPublisherResultReadAllFrom_initialTag;
  Specified = GEOPDPublisherResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891B3674(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B38D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B3B54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B3E98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  _BOOL4 v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDQuickLinkItem *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  char v48;
  int v49;
  int v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v50 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v8 != 0;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_62;
        v48 = v17;
        v49 = v19 | v50 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v21 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_58;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_81;
      v40 = objc_alloc_init(GEOPDQuickLinkItem);
      if (!GEOPDQuickLinkItemReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_80;
      PBReaderRecallMark();
      -[GEOPDQuickLink _addNoFlagsQuickLinkItem:](a1, v40);
      goto LABEL_50;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_58;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v21)
      goto LABEL_63;
LABEL_56:
    if ((v49 & 1) == 0)
      goto LABEL_60;
LABEL_59:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
  {
LABEL_58:
    v21 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v21 & v49 & 1) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOPDQuickLinkItem);
  if (GEOPDQuickLinkItemReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDQuickLink _addNoFlagsSecondaryQuickLinkItem:](a1, v40);
LABEL_50:

    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }
LABEL_80:

LABEL_81:
  v21 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if ((v17 & 1) != 0)
LABEL_63:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_74;
  }
  if (v18)
  {
    while (1)
    {
      v45 = *v18++;
      v44 = v45;
      if (v45 == 1)
        break;
      if (v44 == 2)
      {
        v43 = 4;
LABEL_70:
        *(_BYTE *)(a1 + 52) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_74;
      }
    }
    v43 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v21)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if ((v50 & 1) != 0)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891B4580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B4BBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDQuickLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDQuickLinkItem readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDQuickLinkItem readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDQuickLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQuickLinkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQuickLinkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQuickLinkReadAllFrom_initialTag;
  Specified = GEOPDQuickLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDQuickLinkCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891B4FA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B5310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B55E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkActionDataParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 2;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v50 = v15;
        v51 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v52 = (v17 == 0) | v16;
        v53 = v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_69;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      v49 = 1;
      goto LABEL_70;
    }
    v31 = v23 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 2:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_67;
      case 3:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v44 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_67;
      case 4:
        if (!v32)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
LABEL_56:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0)))
            goto LABEL_69;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v44 = 32 * *(_BYTE *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_68;
        }
LABEL_86:
        v49 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
        if ((v50 & 1) != 0)
LABEL_71:
          *(_BYTE *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(_BYTE *)(a1 + 68) |= 8u;
          *(_BYTE *)(a1 + 68) |= 0x10u;
          *(_BYTE *)(a1 + 68) |= 2u;
          *(_BYTE *)(a1 + 68) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            v45 = *v17++;
            v46 = 8;
            switch(v45)
            {
              case 0:
                goto LABEL_80;
              case 1:
                goto LABEL_79;
              case 2:
                v46 = 16;
                goto LABEL_79;
              case 3:
                v46 = 2;
                goto LABEL_79;
              case 4:
                v46 = 4;
LABEL_79:
                *(_BYTE *)(a1 + 68) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_80:
        if (v49)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v53)
        {
          v47 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_57:
          v43 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v43 & 1) == 0)
          {
            v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_1891B5E8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B5F74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B631C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B63EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkActionDataParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQuickLinkActionDataParamsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQuickLinkActionDataParamsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQuickLinkActionDataParamsReadAllFrom_initialTag;
  Specified = GEOPDQuickLinkActionDataParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1891B663C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B6808(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B69B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B7108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  uint64_t v57;
  __int16 v58;
  int v59;
  __int16 v60;
  void *v61;
  int v63;
  int *v64;
  char v65;
  char v66;
  char v67;
  BOOL v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFDFFFAFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 5) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v65 = v15;
        v66 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v67 = (v17 == 0) | v16;
        v68 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_100;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_100:
      v63 = 1;
      goto LABEL_101;
    }
    v31 = v23 >> 3;
    v32 = v68;
    if ((v67 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 84) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_119;
        v58 = *(_WORD *)(a1 + 84) << 9;
        goto LABEL_97;
      case 2:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 84) & 0x80) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_119;
        v58 = *(_WORD *)(a1 + 84) << 8;
        goto LABEL_97;
      case 3:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 84) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_119;
        v58 = *(_WORD *)(a1 + 84) << 12;
        goto LABEL_97;
      case 4:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 84) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_119;
        v58 = *(_WORD *)(a1 + 84) << 11;
        goto LABEL_97;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_81:
        v57 = 76;
        goto LABEL_86;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_85:
        v57 = 80;
LABEL_86:
        *(_DWORD *)(a1 + v57) = v44;
        goto LABEL_99;
      case 7:
        if (!v32)
          goto LABEL_76;
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_75:
          v55 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v9;
LABEL_98:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_99;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v58 = *(_WORD *)(a1 + 84) << 10;
LABEL_97:
          v9 += v58 >> 15;
          goto LABEL_98;
        }
LABEL_119:
        v63 = 0;
        v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_102:
        if ((v65 & 1) != 0)
LABEL_103:
          *(_WORD *)(a1 + v64[282]) |= 4u;
        if (v68 || (v63 & 1) == 0)
        {
          *(_WORD *)(a1 + v64[282]) |= 0x40u;
          *(_WORD *)(a1 + v64[282]) |= 0x80u;
          *(_WORD *)(a1 + v64[282]) |= 8u;
          *(_WORD *)(a1 + v64[282]) |= 0x10u;
          *(_WORD *)(a1 + v64[282]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v59 = *v17++;
            v60 = 64;
            switch(v59)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_112;
              case 2:
                v60 = 128;
                goto LABEL_112;
              case 3:
                v60 = 8;
                goto LABEL_112;
              case 4:
                v60 = 16;
                goto LABEL_112;
              case 7:
                v60 = 32;
LABEL_112:
                *(_WORD *)(a1 + v64[282]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_113:
        if (v63)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v68)
        {
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v65 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_76:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
            v63 = 0;
LABEL_101:
            v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_102;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v63 = 0;
            v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_103;
          }
        }
LABEL_99:
        if (!(v66 & 1 | (v9 != 0)))
          goto LABEL_100;
        continue;
    }
  }
}

void sub_1891B79D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B7B2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B7C84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B7E48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B82EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDQuickLinkItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDQuickLinkItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDQuickLinkItemReadAllFrom_initialTag;
  Specified = GEOPDQuickLinkItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1891B89AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891B8BE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQuickLinkItemIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_WORD *)(a1 + 84) & 0x1F8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1891B8E8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQuickLinkParamsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1891B9810(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQuickLinkParamsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDQuickLinkParamsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1891B9870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRatingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  GEOLocalizedString *v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL8 v43;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (!v5[*v8])
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 48) |= 8u;
            while (1)
            {
              v23 = *v6;
              v24 = *(_QWORD *)&v5[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
              *(_QWORD *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_48;
              v20 += 7;
              v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_50:
            v41 = 44;
            goto LABEL_55;
          case 2u:
            *(_BYTE *)(a1 + 48) |= 2u;
            v29 = *v6;
            v30 = *(_QWORD *)&v5[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)&v5[*v7])
            {
              v31 = *(_QWORD *)(*(_QWORD *)&v5[*v9] + v30);
              *(_QWORD *)&v5[v29] = v30 + 8;
            }
            else
            {
              v5[*v8] = 1;
              v31 = 0;
            }
            v42 = 32;
            goto LABEL_60;
          case 3u:
            *(_BYTE *)(a1 + 48) |= 1u;
            v32 = *v6;
            v33 = *(_QWORD *)&v5[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)&v5[*v7])
            {
              v31 = *(_QWORD *)(*(_QWORD *)&v5[*v9] + v33);
              *(_QWORD *)&v5[v32] = v33 + 8;
            }
            else
            {
              v5[*v8] = 1;
              v31 = 0;
            }
            v42 = 24;
LABEL_60:
            *(_QWORD *)(a1 + v42) = v31;
            goto LABEL_61;
          case 4u:
            v34 = 0;
            v35 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 48) |= 4u;
            while (2)
            {
              v36 = *v6;
              v37 = *(_QWORD *)&v5[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v39 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v37);
                *(_QWORD *)&v5[v36] = v38;
                v22 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  v17 = v35++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_54;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_54:
            v41 = 40;
LABEL_55:
            *(_DWORD *)(a1 + v41) = v22;
            goto LABEL_61;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_64;
            v40 = objc_alloc_init(GEOLocalizedString);
            if (!GEOLocalizedStringReadAllFrom((uint64_t)v40, v5, a3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            -[GEOPDRating addAppleRatingCategory:](a1, v40);

LABEL_61:
            if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
              goto LABEL_62;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_64;
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    v43 = v5[*v8] == 0;
  }
  else
  {
LABEL_64:
    v43 = 0;
  }
  objc_sync_exit(v5);

  return v43;
}

void sub_1891BA9F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891BB20C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRatingDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDRating *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v52 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 != 2)
      break;
    if (v35)
    {
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        PBReaderReadString();
        v41 = objc_claimAutoreleasedReturnValue();
        v42 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v41;

        --v10;
      }
      goto LABEL_58;
    }
LABEL_54:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_61:
      v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v55 & 1 | (v10 != 0)))
      goto LABEL_60;
  }
  if ((_DWORD)v34 != 1)
  {
    if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
    goto LABEL_54;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_54;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOPDRating);
  if (GEOPDRatingReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDRatingData _addNoFlagsRating:](a1, v40);

LABEL_58:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_59;
  }

LABEL_81:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_62:
  if ((v54 & 1) == 0)
    goto LABEL_64;
LABEL_63:
  *(_BYTE *)(a1 + v53[298]) |= 1u;
LABEL_64:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[298]) |= 2u;
    *(_BYTE *)(a1 + v53[298]) |= 4u;
    goto LABEL_74;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
        v47 = 4;
LABEL_70:
        *(_BYTE *)(a1 + v53[298]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_74;
      }
    }
    v47 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891BB900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891BBD44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRatingDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDRatingDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRatingDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRatingDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRatingDataReadAllFrom_initialTag;
  Specified = GEOPDRatingDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDRatingDataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891BC074(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891BC2B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891BC4F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRatingFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891BCA84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRawAttributeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  char v46;
  int v47;
  int v48;
  void *v49;
  int v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v52 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v55 = v16;
        v53 = v17;
        v54 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      v51 = 1;
      goto LABEL_60;
    }
    v32 = v24 >> 3;
    v33 = v55;
    if ((v54 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_78;
        v45 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_44;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v44 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v51 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v51 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v53 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v33)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 32;
LABEL_44:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v45 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_78:
  v51 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v52 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v55 || (v51 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v18)
  {
    while (1)
    {
      v48 = *v18++;
      v47 = v48;
      if (v48 == 1)
        break;
      if (v47 == 2)
      {
        v46 = 4;
LABEL_68:
        *(_BYTE *)(a1 + 52) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_72;
      }
    }
    v46 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v51)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v49 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891BD3B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891BD480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRawAttributeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRawAttributeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRawAttributeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRawAttributeReadAllFrom_initialTag;
  Specified = GEOPDRawAttributeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891BD6D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891BD860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891BD9CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRawAttributeFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  void *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (v18)
            -[GEOPDRawAttributeFilter addKey:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891BE034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefreshIdReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1891BE88C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefreshIdFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891BEE60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRelatedPlaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

BOOL GEOPDRelatedPlaceModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  unint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  GEOLocalizedString *v34;
  id v35;
  void *v36;
  uint64_t v37;
  _BOOL8 v38;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v5[*v8])
          goto LABEL_53;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          goto LABEL_53;
        v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
          break;
        if ((_DWORD)v20 == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v34 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v34, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          -[GEOPDRelatedPlaceModuleConfiguration addSectionTitle:](a1, v34);

        }
        else
        {
          if ((_DWORD)v20 == 1)
          {
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (1)
            {
              v24 = *v6;
              v25 = *(_QWORD *)&v5[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v5[*v7])
                break;
              v27 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
              *(_QWORD *)&v5[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0)
                goto LABEL_44;
              v21 += 7;
              v17 = v22++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8])
              LODWORD(v23) = 0;
LABEL_46:
            v37 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v37) = v23;
            goto LABEL_52;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v35 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v36 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v35;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
LABEL_52:
        if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
          goto LABEL_53;
      }
      v28 = 0;
      v29 = 0;
      v23 = 0;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        v30 = *v6;
        v31 = *(_QWORD *)&v5[v30];
        v32 = v31 + 1;
        if (v31 == -1 || v32 > *(_QWORD *)&v5[*v7])
          break;
        v33 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v31);
        *(_QWORD *)&v5[v30] = v32;
        v23 |= (unint64_t)(v33 & 0x7F) << v28;
        if ((v33 & 0x80) == 0)
          goto LABEL_48;
        v28 += 7;
        v17 = v29++ >= 9;
        if (v17)
        {
          LODWORD(v23) = 0;
          goto LABEL_50;
        }
      }
      v5[*v8] = 1;
LABEL_48:
      if (v5[*v8])
        LODWORD(v23) = 0;
LABEL_50:
      v37 = 24;
      goto LABEL_51;
    }
LABEL_53:
    v38 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    v38 = 0;
  }
  objc_sync_exit(v5);

  return v38;
}

void sub_1891C0158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResolvedItemReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  void *v35;
  uint64_t v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_51;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_51;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
              goto LABEL_46;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_48:
          v36 = 24;
LABEL_49:
          *(_DWORD *)(a1 + v36) = v23;
          goto LABEL_50;
        }
        if ((_DWORD)v18 == 1)
        {
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_52;
        }
LABEL_50:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_51;
      }
      v21 = 0;
      v22 = 0;
      v23 = 0;
      *(_BYTE *)(a1 + 32) |= 2u;
      while (1)
      {
        v24 = *v4;
        v25 = *(_QWORD *)&v3[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
          break;
        v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
        *(_QWORD *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0)
          goto LABEL_42;
        v21 += 7;
        v15 = v22++ >= 9;
        if (v15)
        {
          LODWORD(v23) = 0;
          goto LABEL_44;
        }
      }
      v3[*v6] = 1;
LABEL_42:
      if (v3[*v6])
        LODWORD(v23) = 0;
LABEL_44:
      v36 = 28;
      goto LABEL_49;
    }
LABEL_51:
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_1891C0FDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRestaurantReservationLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDVendorIDLink *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDVendorIDLink);
          if (!GEOPDVendorIDLinkReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDRestaurantReservationLink addRestaurantLink:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891C1980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRestaurantReservationLinkFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891C20E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C22B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C23A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C2488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C2570(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C2658(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C2840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C2FE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C30C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultSnippetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDChildPlace readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDChildItem readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

void sub_1891C36C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C410C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDReviewReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOLocalizedString *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  char v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v57 = v16 & ~(_BYTE)v11 | v9;
        v58 = v16 | v11 | v57;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v59 = (v17 == 0) | v16 | v11;
        v60 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v60;
    if ((v59 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 0x20) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v37 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        -[GEOPDReview _addNoFlagsSnippet:](a1, v37);

        goto LABEL_73;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 76) |= 1u;
        v38 = *v18;
        v39 = *(_QWORD *)(v3 + v38);
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
        {
          v40 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v39);
          *(_QWORD *)(v3 + v38) = v39 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v40 = 0;
        }
        *(_QWORD *)(a1 + 40) = v40;
        goto LABEL_81;
      case 4:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v7 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v37 = objc_alloc_init(GEOPDUser);
        if (!GEOPDUserReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        v44 = 48;
        goto LABEL_67;
      case 5:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v45;
          goto LABEL_68;
        }
        v48 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v48 & 1) == 0)
          goto LABEL_101;
        v49 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_78;
      case 6:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 4) != 0)
        {
          v50 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v50 & 1) == 0)
            goto LABEL_101;
          v49 = 32 * *(_BYTE *)(a1 + 76);
LABEL_78:
          v7 += v49 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v37 = objc_alloc_init(GEOPDRating);
        if (GEOPDRatingReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v44 = 24;
LABEL_67:
          v46 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v37;
LABEL_68:

          --v7;
LABEL_73:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        v55 = 0;
        v56 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        if ((v57 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + v56[331]) |= 2u;
        if (v60 & 1 | ((v55 & 1) == 0))
        {
          *(_BYTE *)(a1 + v56[331]) |= 0x20u;
          *(_BYTE *)(a1 + v56[331]) |= 0x10u;
          *(_BYTE *)(a1 + v56[331]) |= 8u;
          *(_BYTE *)(a1 + v56[331]) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            v51 = *v17++;
            v52 = 32;
            switch(v51)
            {
              case 0:
                goto LABEL_94;
              case 1:
                goto LABEL_93;
              case 4:
                v52 = 16;
                goto LABEL_93;
              case 5:
                v52 = 8;
                goto LABEL_93;
              case 6:
                v52 = 4;
LABEL_93:
                *(_BYTE *)(a1 + v56[331]) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v55)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v60 & 1) != 0)
        {
          v53 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v57 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 2) != 0)
        {
LABEL_69:
          v47 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v47 & 1) != 0)
            goto LABEL_81;
          v55 = 0;
LABEL_83:
          v56 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          goto LABEL_84;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v42 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v41;

        }
        v43 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (!v43)
        {
          v55 = 0;
          v56 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          goto LABEL_85;
        }
LABEL_81:
        if (!(v58 & 1 | (v7 != 0)))
          goto LABEL_82;
        break;
    }
  }
LABEL_82:
  v55 = 1;
  goto LABEL_83;
}

void sub_1891C4A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C4B30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C4C18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C5154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDReviewCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  -[GEOPDUser readAll:](*(_QWORD *)(a1 + 48), 1);
}

unint64_t GEOPDReviewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDReviewReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDReviewReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDReviewReadAllFrom_initialTag;
  Specified = GEOPDReviewReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDReviewCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1891C54BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C5850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C5B10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C64E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRibbonItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDAmenityRibbonItem *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v59 = v15;
        v60 = v16 | v15;
        if (((v16 | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_78;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      v57 = 1;
      goto LABEL_79;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (!v32)
        goto LABEL_65;
      if ((*(_BYTE *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v44 = objc_alloc_init(GEOPDAmenityRibbonItem);
        if (!GEOPDAmenityRibbonItemReadAllFrom((uint64_t)v44, (void *)v3))
          goto LABEL_98;
        PBReaderRecallMark();
        v45 = 24;
LABEL_58:
        v46 = *(void **)(a1 + v45);
        *(_QWORD *)(a1 + v45) = v44;

        --v8;
LABEL_76:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_77;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_99;
      v51 = 32 * *(_BYTE *)(a1 + 56);
LABEL_75:
      v8 += v51 >> 7;
      goto LABEL_76;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if ((v7 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_68;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_70;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_68:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_70:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_77;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_81;
      }
      goto LABEL_77;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_79:
      v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_78;
  }
  if (!v32)
    goto LABEL_65;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_99;
    v51 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v44 = objc_alloc_init(GEOPDFactoidRibbonItem);
  if (GEOPDFactoidRibbonItemReadAllFrom((uint64_t)v44, (void *)v3))
  {
    PBReaderRecallMark();
    v45 = 32;
    goto LABEL_58;
  }
LABEL_98:

LABEL_99:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
  if ((v59 & 1) == 0)
    goto LABEL_82;
LABEL_81:
  *(_BYTE *)(a1 + v58[344]) |= 2u;
LABEL_82:
  if (v62 || (v57 & 1) == 0)
  {
    *(_BYTE *)(a1 + v58[344]) |= 8u;
    *(_BYTE *)(a1 + v58[344]) |= 4u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_91;
        }
        if (!v52)
          goto LABEL_92;
      }
      v54 = 8;
LABEL_91:
      *(_BYTE *)(a1 + v58[344]) |= v54;
      continue;
    }
  }
LABEL_92:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v62)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891C6BCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C6FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRibbonItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRibbonItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRibbonItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRibbonItemReadAllFrom_initialTag;
  Specified = GEOPDRibbonItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891C71F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C73A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C7554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRoadAccessInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891C7FFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchPlaceContextMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unsigned __int8 v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  GEOLocalizedString *v53;
  void *v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  BOOL v71;
  uint64_t v72;
  __int16 v73;
  int v74;
  __int16 v75;
  void *v76;
  int v78;
  char v79;
  char v80;
  char v81;
  BOOL v82;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(unsigned __int16 *)(a1 + 108);
  v14 = ((v13 >> 3) & 1)
      + ((v13 >> 9) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFF9FFFAFFF8FFF6), (int8x8_t)0x1000100010001))+ ((v13 >> 4) & 1)+ ((v13 >> 11) & 1)+ ((v13 >> 5) & 1));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 5;
        v19 = v18 & ~(_BYTE)v12 | v10;
        v20 = v18 | v12;
        v79 = v19;
        v80 = v20 | v19;
        if (((v20 | v9) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v81 = (v21 == 0) | v20;
        v82 = v20;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v10;
LABEL_8:
        v16 = v11;
        v17 = v12;
LABEL_10:
        ++v8;
        v10 = v15;
        v11 = v16;
        v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v23))
      goto LABEL_134;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v7))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_134:
      v78 = 1;
      goto LABEL_135;
    }
    v35 = v27 >> 3;
    v36 = v82;
    if ((v81 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x100) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 56;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_156;
        v73 = *(_WORD *)(a1 + 108) << 7;
        goto LABEL_131;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_WORD *)(a1 + 108) |= 2u;
        while (2)
        {
          v49 = *v22;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v32 = v47++ >= 9;
              if (v32)
              {
                v48 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v48 = 0;
LABEL_107:
        v71 = v48 != 0;
        v72 = 104;
        goto LABEL_116;
      case 3:
        if (!v36)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x400) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 72;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_156;
        v73 = 32 * *(_WORD *)(a1 + 108);
        goto LABEL_131;
      case 4:
        if (!v36)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x40) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 40;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_156;
        v73 = *(_WORD *)(a1 + 108) << 9;
        goto LABEL_131;
      case 5:
        if (!v36)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x80) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 48;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_156;
        v73 = *(_WORD *)(a1 + 108) << 8;
        goto LABEL_131;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 108) & 0x10) != 0)
          goto LABEL_102;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_156;
        v53 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v53, (void *)v3, v11 & 1))
          goto LABEL_155;
        PBReaderRecallMark();
        -[GEOPDSearchPlaceContextMetadata _addNoFlagsAlternateSearchableName:](a1, v53);

        goto LABEL_132;
      case 7:
        if (!v36)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x800) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 80;
LABEL_73:
          v54 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_156;
        v73 = 16 * *(_WORD *)(a1 + 108);
        goto LABEL_131;
      case 8:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_WORD *)(a1 + 108) |= 1u;
        while (2)
        {
          v58 = *v22;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v57) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v57) = 0;
LABEL_111:
        *(_DWORD *)(a1 + 100) = v57;
        goto LABEL_133;
      case 9:
        if (!v36)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_156;
          v73 = *(_WORD *)(a1 + 108) << 10;
          goto LABEL_131;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_156;
        v53 = objc_alloc_init(GEOPDContextualPhotoMetadata);
        if (!GEOPDContextualPhotoMetadataReadAllFrom((uint64_t)v53, (void *)v3))
          goto LABEL_155;
        PBReaderRecallMark();
        v62 = 32;
        goto LABEL_92;
      case 10:
        if (!v36)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_156;
          v73 = *(_WORD *)(a1 + 108) << 6;
LABEL_131:
          v8 += v73 >> 15;
LABEL_132:
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_133:
          if (!(v80 & 1 | (v8 != 0)))
            goto LABEL_134;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_156;
        v53 = objc_alloc_init(GEOPDNearbyPlacesMetadata);
        if (GEOPDNearbyPlacesMetadataReadAllFrom((uint64_t)v53, (void *)v3))
        {
          PBReaderRecallMark();
          v62 = 64;
LABEL_92:
          v54 = *(void **)(a1 + v62);
          *(_QWORD *)(a1 + v62) = v53;
LABEL_93:

          --v8;
          goto LABEL_132;
        }
LABEL_155:

LABEL_156:
        v78 = 0;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_135:
        if ((v79 & 1) != 0)
LABEL_136:
          *(_WORD *)(a1 + 108) |= 8u;
        if (v82 || (v78 & 1) == 0)
        {
          *(_WORD *)(a1 + 108) |= 0x100u;
          *(_WORD *)(a1 + 108) |= 0x400u;
          *(_WORD *)(a1 + 108) |= 0x40u;
          *(_WORD *)(a1 + 108) |= 0x80u;
          *(_WORD *)(a1 + 108) |= 0x10u;
          *(_WORD *)(a1 + 108) |= 0x800u;
          *(_WORD *)(a1 + 108) |= 0x20u;
          *(_WORD *)(a1 + 108) |= 0x200u;
        }
        else if (v21)
        {
          while (1)
          {
            v74 = *v21++;
            v75 = 256;
            switch(v74)
            {
              case 0:
                goto LABEL_149;
              case 1:
                goto LABEL_148;
              case 3:
                v75 = 1024;
                goto LABEL_148;
              case 4:
                v75 = 64;
                goto LABEL_148;
              case 5:
                v75 = 128;
                goto LABEL_148;
              case 6:
                v75 = 16;
                goto LABEL_148;
              case 7:
                v75 = 2048;
                goto LABEL_148;
              case 9:
                v75 = 32;
                goto LABEL_148;
              case 10:
                v75 = 512;
LABEL_148:
                *(_WORD *)(a1 + 108) |= v75;
                break;
              default:
                continue;
            }
          }
        }
LABEL_149:
        if (v78)
          v3 = *(_BYTE *)(v3 + *v23) == 0;
        else
          v3 = 0;
        if (v82)
        {
          v76 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 11:
        if ((v9 & 1) == 0)
          goto LABEL_102;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          v66 = *v22;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v32 = v64++ >= 9;
              if (v32)
              {
                v65 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v65 = 0;
LABEL_115:
        v71 = v65 != 0;
        v72 = 105;
LABEL_116:
        *(_BYTE *)(a1 + v72) = v71;
        goto LABEL_133;
      default:
        if ((v79 & 1) == 0 || (*(_WORD *)(a1 + 108) & 8) != 0)
        {
LABEL_102:
          v70 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v70 & 1) == 0)
          {
            v78 = 0;
            goto LABEL_135;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v45 = PBUnknownFieldAdd();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v45)
          {
            v78 = 0;
            goto LABEL_136;
          }
        }
        goto LABEL_133;
    }
  }
}

void sub_1891C8D18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C96D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C97D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchPlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDSearchPlaceContextMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchPlaceContextMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchPlaceContextMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchPlaceContextMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchPlaceContextMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchPlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1891C9B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891C9E68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891CA1EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchResultPlacePhotoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDCaptionedPhoto *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDCaptionedPhoto);
          if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1891CAB94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchResultPlacePhotoFilterReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  id v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_28;
          -[GEOPDSearchResultPlacePhotoFilter _reservePhotoSizeFilters:]((uint64_t)a1, 1uLL);
          if (!GEOPDPhotoSizeFilterValueReadAllFrom(a1[2] + 12 * a1[3], (uint64_t)v3))
            goto LABEL_28;
          PBReaderRecallMark();
          ++a1[3];
        }
        else
        {
          if (!a1[1])
          {
            v18 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v19 = (void *)a1[1];
            a1[1] = v18;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_1891CB424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSimpleRestaurantMenuTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDSimpleRestaurantMenuTextGroup *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDSimpleRestaurantMenuTextGroup);
          if (!GEOPDSimpleRestaurantMenuTextGroupReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSimpleRestaurantMenuText addMenuGroup:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891CBCC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSimpleRestaurantMenuTextFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891CC424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSimpleRestaurantMenuTextGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v50 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v53 = v16;
        v51 = v17;
        v52 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_58;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_58:
      v49 = 1;
      goto LABEL_59;
    }
    v32 = v24 >> 3;
    v33 = v53;
    if ((v52 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
    {
      if (!v33 || (*(_BYTE *)(a1 + 52) & 2) != 0)
      {
LABEL_52:
        v44 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v44 & 1) == 0)
        {
          v49 = 0;
          goto LABEL_59;
        }
        goto LABEL_57;
      }
      PBReaderReadString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEOPDSimpleRestaurantMenuTextGroup _addNoFlagsMenuItem:](a1, v40);

      goto LABEL_56;
    }
    if ((_DWORD)v32 == 1)
      break;
    if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_52;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v49 = 0;
      goto LABEL_60;
    }
LABEL_57:
    if (!(v51 & 1 | (v10 != 0)))
      goto LABEL_58;
  }
  if (!v33)
    goto LABEL_52;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v38;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_57;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
LABEL_56:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_57;
  }
  v49 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_59:
  if ((v50 & 1) == 0)
    goto LABEL_61;
LABEL_60:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_61:
  if (v53 || (v49 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_70;
  }
  if (v18)
  {
    while (1)
    {
      v46 = *v18++;
      v45 = v46;
      if (v46 == 1)
        break;
      if (v45 == 2)
      {
LABEL_66:
        *(_BYTE *)(a1 + 52) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_70;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_66;
  }
LABEL_70:
  if (v49)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v53)
  {
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891CCAE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891CCE94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891CCF5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSimpleRestaurantMenuTextGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSimpleRestaurantMenuTextGroupReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSimpleRestaurantMenuTextGroupReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSimpleRestaurantMenuTextGroupReadAllFrom_initialTag;
  Specified = GEOPDSimpleRestaurantMenuTextGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891CD1B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891CD3EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891CD634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891CDD70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDSpatialEventLookupParametersReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  int v34;
  int *v36;
  int *v37;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  char v44;
  GEOLatLng *v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  int v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  int v84;
  int v85;
  void *v86;
  char v88;
  char v89;
  int v90;
  char v91;
  char v92;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 76));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 72);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 68));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v13 = ((*(unsigned __int8 *)(a1 + 88) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 88) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 88) >> 3) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v90 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = v18;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_119;
        v88 = v18;
        v91 = v19 | v18;
        v92 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v89 = v19;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v22))
  {
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v21;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v27 = 0;
LABEL_27:
    v34 = v27 & 7;
    if (v33 || v34 == 4)
      break;
    v36 = v6;
    v37 = v22;
    v38 = v27 >> 3;
    v39 = v19;
    if ((v92 & 1) == 0)
    {
      v40 = v20;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        v22 = v37;
        if (!v39)
          goto LABEL_86;
        v6 = v36;
        if ((*(_BYTE *)(a1 + v12[359]) & 0x20) == 0)
        {
          v44 = PBReaderPlaceMark();
          v21 = (int *)MEMORY[0x1E0D82BF0];
          if ((v44 & 1) == 0)
            goto LABEL_139;
          v45 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v45, (void *)v3))
          {
            PBReaderRecallMark();
            v46 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v45;

            --v7;
            goto LABEL_112;
          }

          goto LABEL_139;
        }
        v75 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BF0];
        if ((v75 & 1) == 0)
          goto LABEL_139;
        v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v7 += *(unsigned __int8 *)(a1 + 88) << 26 >> 31;
        goto LABEL_113;
      case 2:
        v22 = v37;
        if ((v8 & 1) == 0)
          goto LABEL_86;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + v12[359]) |= 4u;
        v6 = v36;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        while (2)
        {
          v53 = *v21;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v32 = v51++ >= 9;
              if (v32)
              {
                LODWORD(v52) = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v52) = 0;
LABEL_94:
        v74 = 84;
        goto LABEL_99;
      case 3:
        v22 = v37;
        if ((v8 & 1) == 0)
          goto LABEL_86;
        v57 = 0;
        v58 = 0;
        v52 = 0;
        *(_BYTE *)(a1 + v12[359]) |= 2u;
        v6 = v36;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        while (2)
        {
          v59 = *v21;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v52 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              v32 = v58++ >= 9;
              if (v32)
              {
                LODWORD(v52) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v52) = 0;
LABEL_98:
        v74 = 80;
LABEL_99:
        *(_DWORD *)(a1 + v74) = v52;
        goto LABEL_115;
      case 4:
        v22 = v37;
        if (!v39 || (*(_BYTE *)(a1 + v12[359]) & 0x10) != 0)
        {
LABEL_86:
          v72 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v19 = v89;
          v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          goto LABEL_87;
        }
        v6 = v36;
        if (v34 == 2)
        {
          v63 = PBReaderPlaceMark();
          v21 = (int *)MEMORY[0x1E0D82BF0];
          if (!v63)
            goto LABEL_139;
          while (*(_QWORD *)(v3 + *v21) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v22))
          {
            v64 = 0;
            v65 = 0;
            v66 = 0;
            v67 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v68 = *v21;
              v69 = *(_QWORD *)(v3 + v68);
              v70 = v69 + 1;
              if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
                break;
              v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v67) + v69);
              *(_QWORD *)(v3 + v68) = v70;
              v66 |= (unint64_t)(v71 & 0x7F) << v64;
              if (v71 < 0)
              {
                v64 += 7;
                v32 = v65++ >= 9;
                if (!v32)
                  continue;
              }
              goto LABEL_80;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_80:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v76 = 0;
          v77 = 0;
          v78 = 0;
          v21 = (int *)MEMORY[0x1E0D82BF0];
          while (1)
          {
            v79 = *v21;
            v80 = *(_QWORD *)(v3 + v79);
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
              break;
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v32 = v77++ >= 9;
              if (!v32)
                continue;
            }
            goto LABEL_111;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_111:
          PBRepeatedInt32Add();
        }
LABEL_112:
        v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_113:
        v19 = v89;
        goto LABEL_114;
      case 5:
        v22 = v37;
        if ((v8 & 1) != 0)
        {
          if (!PBReaderPlaceMark() || (v6 = v36, !GEOPDTimeRangeReadAllFrom(a1 + 56, v3)))
          {
LABEL_139:
            v90 = 0;
            v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            v19 = v89;
            goto LABEL_118;
          }
          PBReaderRecallMark();
          v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          *(_BYTE *)(a1 + 88) |= 1u;
          v19 = v89;
          v21 = (int *)MEMORY[0x1E0D82BF0];
LABEL_114:
          v24 = (int *)MEMORY[0x1E0D82BB8];
        }
        else
        {
          v73 = PBReaderSkipValueWithTag();
          v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          v19 = v89;
          v6 = v36;
          v21 = (int *)MEMORY[0x1E0D82BF0];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if ((v73 & 1) == 0)
          {
LABEL_137:
            v90 = 0;
            goto LABEL_118;
          }
        }
LABEL_115:
        if (!(v91 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_117;
        break;
      default:
        if ((v88 & 1) == 0 || (*(_BYTE *)(a1 + v12[359]) & 8) != 0)
        {
          v72 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v19 = v89;
          v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          v22 = v37;
LABEL_87:
          v6 = v36;
          v21 = (int *)MEMORY[0x1E0D82BF0];
          if ((v72 & 1) == 0)
            goto LABEL_137;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v48 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v47;

          }
          v49 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          v19 = v89;
          v22 = v37;
          v6 = v36;
          v21 = (int *)MEMORY[0x1E0D82BF0];
          v24 = (int *)MEMORY[0x1E0D82BB8];
          if (!v49)
          {
            v90 = 0;
            goto LABEL_120;
          }
        }
        goto LABEL_115;
    }
  }
LABEL_117:
  v90 = 1;
LABEL_118:
  v23 = v88;
LABEL_119:
  if ((v23 & 1) != 0)
LABEL_120:
    *(_BYTE *)(a1 + v12[359]) |= 8u;
  if (!(v19 & 1 | ((v90 & 1) == 0)))
  {
    if (!v20)
      goto LABEL_131;
    while (1)
    {
      v85 = *v20++;
      v84 = v85;
      if (v85 == 1)
        break;
      if (v84 == 4)
      {
        v83 = 16;
LABEL_127:
        *(_BYTE *)(a1 + v12[359]) |= v83;
      }
      else if (!v84)
      {
        goto LABEL_131;
      }
    }
    v83 = 32;
    goto LABEL_127;
  }
  *(_BYTE *)(a1 + v12[359]) |= 0x20u;
  *(_BYTE *)(a1 + v12[359]) |= 0x10u;
LABEL_131:
  if (v90)
  {
    v3 = *(_BYTE *)(v3 + *v22) == 0;
    if ((v19 & 1) == 0)
      return v3;
    goto LABEL_135;
  }
  v3 = 0;
  if ((v19 & 1) != 0)
  {
LABEL_135:
    v86 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891CE7E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891CED20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDSpatialEventLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 72))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSpatialEventLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 76));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSpatialEventLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSpatialEventLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDSpatialEventLookupParametersReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 76));
  return Specified;
}

void sub_1891CF4D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialEventLookupParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
            goto LABEL_52;
          goto LABEL_67;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_67;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_53;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_67;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_53;
          }
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_67:
              PBReaderRecallMark();
              return 0;
            }
LABEL_56:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v33 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  break;
                v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v13 = v33++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_56;
              }
              a1[*v4] = 1;
            }
LABEL_52:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_67;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                break;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_53;
            }
LABEL_48:
            a1[*v4] = 1;
          }
LABEL_53:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_65;
          break;
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDTimeRangeIsValid(a1))
            goto LABEL_52;
          goto LABEL_67;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_67;
          goto LABEL_53;
      }
    }
  }
LABEL_65:
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_1891CFAAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialEventLookupParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 76));
  v2 = (*(_BYTE *)(a1 + 88) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 76));
  return v2;
}

void sub_1891CFD1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D0214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialEventLookupResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  int *v34;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDMapsIdentifier *v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  _BOOL4 AllFrom;
  void *v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  int v68;
  char v69;
  void *v70;
  char v72;
  char v73;
  int v74;
  char v75;
  char v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 100)), (uint16x4_t)0xFFFDFFFFFFFCFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 100) & 1)+ ((*(_BYTE *)(a1 + 100) & 0x40) != 0)+ ((*(_BYTE *)(a1 + 100) & 0x20) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v74 = 1;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_115;
        v72 = v16 & ~(_BYTE)v11 | v9;
        v73 = v17 | v72;
        v76 = (v18 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v75 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v20))
      goto LABEL_113;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_27:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_113:
      v74 = 1;
      goto LABEL_114;
    }
    v34 = v20;
    v35 = v25 >> 3;
    v36 = v17;
    if ((v76 & 1) == 0)
    {
      v37 = v18;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        v20 = v34;
        if (!v36)
          goto LABEL_87;
        if ((*(_BYTE *)(a1 + 100) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_134;
          v41 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            v42 = 64;
            goto LABEL_85;
          }
          goto LABEL_133;
        }
        v56 = PBReaderSkipValueWithTag();
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v56 & 1) == 0)
          goto LABEL_134;
        v57 = 8 * *(_BYTE *)(a1 + 100);
        goto LABEL_98;
      case 2:
        v20 = v34;
        if (!v36)
          goto LABEL_87;
        if ((*(_BYTE *)(a1 + 100) & 4) != 0)
        {
          v58 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v58 & 1) == 0)
            goto LABEL_134;
          v57 = 32 * *(_BYTE *)(a1 + 100);
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v41 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_133;
        PBReaderRecallMark();
        v42 = 48;
        goto LABEL_85;
      case 3:
        v20 = v34;
        if (!v36 || (*(_BYTE *)(a1 + 100) & 2) != 0)
          goto LABEL_87;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_134;
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v20))
          {
            v46 = 0;
            v47 = 0;
            v48 = 0;
            while (1)
            {
              v49 = *v19;
              v50 = *(_QWORD *)(v3 + v49);
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
                break;
              v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v50);
              *(_QWORD *)(v3 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if (v52 < 0)
              {
                v46 += 7;
                v30 = v47++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_69;
            }
            *(_BYTE *)(v3 + *v20) = 1;
LABEL_69:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v61 = 0;
          v62 = 0;
          v63 = 0;
          while (1)
          {
            v64 = *v19;
            v65 = *(_QWORD *)(v3 + v64);
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
              break;
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              v30 = v62++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_112;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_112:
          PBRepeatedInt32Add();
        }
        goto LABEL_99;
      case 4:
        v20 = v34;
        if (!v36 || (*(_BYTE *)(a1 + 100) & 8) != 0)
          goto LABEL_87;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v41 = objc_alloc_init(GEOPDDateTimeRange);
        AllFrom = GEOPDDateTimeRangeReadAllFrom((uint64_t)v41, (void *)v3);
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if (!AllFrom)
          goto LABEL_133;
        PBReaderRecallMark();
        -[GEOPDSpatialEventLookupResponse _addNoFlagsEventDateTime:](a1, v41);

        goto LABEL_99;
      case 5:
        v20 = v34;
        if (!v36)
          goto LABEL_87;
        if ((*(_BYTE *)(a1 + 100) & 0x40) != 0)
        {
          v59 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v59 & 1) == 0)
            goto LABEL_134;
          v57 = 2 * *(_BYTE *)(a1 + 100);
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v41 = objc_alloc_init(GEOTimezone);
        if (!GEOTimezoneReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_133;
        PBReaderRecallMark();
        v42 = 80;
        goto LABEL_85;
      case 6:
        v20 = v34;
        if (!v36)
        {
LABEL_87:
          v55 = PBReaderSkipValueWithTag();
          v17 = v75;
LABEL_88:
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v55 & 1) == 0)
          {
            v74 = 0;
            goto LABEL_114;
          }
LABEL_100:
          if (!(v73 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_113;
          continue;
        }
        if ((*(_BYTE *)(a1 + 100) & 0x20) != 0)
        {
          v60 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v60 & 1) == 0)
            goto LABEL_134;
          v57 = 4 * *(_BYTE *)(a1 + 100);
LABEL_98:
          v7 += v57 >> 7;
LABEL_99:
          v17 = v75;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v41 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = 72;
LABEL_85:
          v54 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v7;
          v17 = v75;
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_100;
        }
LABEL_133:

LABEL_134:
        v74 = 0;
        v17 = v75;
LABEL_114:
        v21 = v72;
LABEL_115:
        if ((v21 & 1) != 0)
LABEL_116:
          *(_BYTE *)(a1 + 100) |= 1u;
        if (v17 & 1 | ((v74 & 1) == 0))
        {
          *(_BYTE *)(a1 + 100) |= 0x10u;
          *(_BYTE *)(a1 + 100) |= 4u;
          *(_BYTE *)(a1 + 100) |= 2u;
          *(_BYTE *)(a1 + 100) |= 8u;
          *(_BYTE *)(a1 + 100) |= 0x40u;
          *(_BYTE *)(a1 + 100) |= 0x20u;
        }
        else if (v18)
        {
          while (1)
          {
            v68 = *v18++;
            v69 = 16;
            switch(v68)
            {
              case 0:
                goto LABEL_127;
              case 1:
                goto LABEL_126;
              case 2:
                v69 = 4;
                goto LABEL_126;
              case 3:
                v69 = 2;
                goto LABEL_126;
              case 4:
                v69 = 8;
                goto LABEL_126;
              case 5:
                v69 = 64;
                goto LABEL_126;
              case 6:
                v69 = 32;
LABEL_126:
                *(_BYTE *)(a1 + 100) |= v69;
                break;
              default:
                continue;
            }
          }
        }
LABEL_127:
        if (v74)
        {
          v3 = *(_BYTE *)(v3 + *v20) == 0;
          if ((v17 & 1) == 0)
            return v3;
LABEL_131:
          v70 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
            goto LABEL_131;
        }
        return v3;
      default:
        if ((v72 & 1) == 0 || (*(_BYTE *)(a1 + 100) & 1) != 0)
        {
          v55 = PBReaderSkipValueWithTag();
          v17 = v75;
          v20 = v34;
          goto LABEL_88;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v44 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v43;

        }
        v45 = PBUnknownFieldAdd();
        v17 = v75;
        v20 = v34;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if (!v45)
        {
          v74 = 0;
          goto LABEL_116;
        }
        goto LABEL_100;
    }
  }
}

void sub_1891D0D28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D0E6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D13AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D16E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D1820(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D25C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSpatialEventLookupResponseCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (!v4)
          break;
      }
    }
  }

  return objc_msgSend(a1[9], "readAll:", 1, v7);
}

unint64_t GEOPDSpatialEventLookupResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSpatialEventLookupResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSpatialEventLookupResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSpatialEventLookupResponseReadAllFrom_initialTag;
  Specified = GEOPDSpatialEventLookupResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSpatialEventLookupResponseCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1891D2874(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialEventLookupResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_43;
          goto LABEL_58;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_58;
          goto LABEL_43;
        case 3u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_58:
              PBReaderRecallMark();
              return 0;
            }
LABEL_47:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v22 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v23 = *v2;
                v24 = *(_QWORD *)&a1[v23];
                v25 = v24 + 1;
                if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                  break;
                v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
                *(_QWORD *)&a1[v23] = v25;
                if (v26 < 0)
                {
                  v13 = v22++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_47;
              }
              a1[*v4] = 1;
            }
LABEL_43:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_58;
            while (1)
            {
              v17 = *v2;
              v18 = *(_QWORD *)&a1[v17];
              v19 = v18 + 1;
              if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
                break;
              v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
              *(_QWORD *)&a1[v17] = v19;
              if (v20 < 0)
              {
                v21 = v15++;
                if (v21 <= 8)
                  continue;
              }
              goto LABEL_44;
            }
            a1[*v4] = 1;
          }
LABEL_44:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_57;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDateTimeRangeIsValid(a1))
            goto LABEL_58;
          goto LABEL_43;
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTimezoneIsValid(a1))
            goto LABEL_43;
          goto LABEL_58;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_58;
          goto LABEL_44;
      }
    }
  }
LABEL_57:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1891D2EA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D3378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D3800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialLookupFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891D3E70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D40F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOLatLng *v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  id v51;
  void *v52;
  int v53;
  char v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  int v63;
  char v64;
  void *v65;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(_BYTE *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_97;
        v67 = v17 & ~(_BYTE)v11 | v9;
        v68 = v19 | v18;
        v70 = (v21 == 0) | v19;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v69 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_94;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_94:
      LODWORD(v14) = 1;
      goto LABEL_95;
    }
    v35 = v26 >> 3;
    v36 = v19;
    if ((v70 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 3)
    {
      if (v36 && (*(_BYTE *)(a1 + 76) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_113;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v22))
              break;
            v43 = 0;
            v44 = 0;
            v45 = 0;
            while (1)
            {
              v46 = *v20;
              v47 = *(_QWORD *)(v3 + v46);
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
                break;
              v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v47);
              *(_QWORD *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                v31 = v44++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_60;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_60:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v56 = 0;
          v57 = 0;
          v58 = 0;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v59 = *v20;
            v60 = *(_QWORD *)(v3 + v59);
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
              break;
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v31 = v57++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_90;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_90:
          PBRepeatedInt32Add();
        }
        v19 = v69;
        goto LABEL_92;
      }
LABEL_74:
      v54 = PBReaderSkipValueWithTag();
      v19 = v69;
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v54 & 1) != 0)
        goto LABEL_92;
      LODWORD(v14) = 0;
LABEL_95:
      v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_96;
    }
    if ((_DWORD)v35 == 2)
      break;
    if ((_DWORD)v35 == 1)
    {
      if (!v36)
        goto LABEL_74;
      if ((*(_BYTE *)(a1 + 76) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v41 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_112;
        PBReaderRecallMark();
        v42 = 56;
LABEL_67:
        v50 = *(void **)(a1 + v42);
        *(_QWORD *)(a1 + v42) = v41;

        --v7;
LABEL_81:
        v19 = v69;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_92;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_113;
      v55 = 16 * *(_BYTE *)(a1 + 76);
LABEL_80:
      v7 += v55 >> 7;
      goto LABEL_81;
    }
    if ((v67 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
      goto LABEL_74;
    if (!*(_QWORD *)(a1 + 16))
    {
      v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v52 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v51;

    }
    v53 = PBUnknownFieldAdd();
    v19 = v69;
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v53)
    {
      LODWORD(v14) = 0;
      v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_98;
    }
LABEL_92:
    if (!(v68 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_94;
  }
  if (!v36)
    goto LABEL_74;
  if ((*(_BYTE *)(a1 + 76) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_113;
    v55 = 32 * *(_BYTE *)(a1 + 76);
    goto LABEL_80;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_113;
  v41 = objc_alloc_init(GEOPDBounds);
  if (GEOPDBoundsReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v42 = 48;
    goto LABEL_67;
  }
LABEL_112:

LABEL_113:
  LODWORD(v14) = 0;
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v19 = v69;
LABEL_96:
  v18 = v67;
LABEL_97:
  if ((v18 & 1) != 0)
LABEL_98:
    *(_BYTE *)(a1 + v12[368]) |= 1u;
  if (v19 & 1 | ((v14 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[368]) |= 8u;
    *(_BYTE *)(a1 + v12[368]) |= 4u;
    *(_BYTE *)(a1 + v12[368]) |= 2u;
  }
  else if (v21)
  {
    while (1)
    {
      v63 = *v21++;
      v64 = 8;
      switch(v63)
      {
        case 0:
          goto LABEL_106;
        case 1:
          goto LABEL_105;
        case 2:
          v64 = 4;
          goto LABEL_105;
        case 3:
          v64 = 2;
LABEL_105:
          *(_BYTE *)(a1 + v12[368]) |= v64;
          break;
        default:
          continue;
      }
    }
  }
LABEL_106:
  if ((_DWORD)v14)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
LABEL_110:
    v65 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v19 & 1) != 0)
      goto LABEL_110;
  }
  return v3;
}

void sub_1891D4954(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D4A3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D4F28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSpatialLookupResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSpatialLookupResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSpatialLookupResultReadAllFrom_initialTag;
  Specified = GEOPDSpatialLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
    -[GEOPDBounds readAll:](*(_QWORD *)(a1 + 48), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1891D51A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D5390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D5514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D587C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialPlaceLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOLatLng *v41;
  _BOOL4 AllFrom;
  uint64_t v43;
  id v44;
  void *v45;
  int v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  GEOMapRegion *v84;
  void *v85;
  int v86;
  void *v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  __int16 v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  int v118;
  __int16 v119;
  void *v120;
  char v122;
  char v123;
  int v124;
  char v125;
  char v126;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 124);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 120));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 144)), (uint16x4_t)0xFFFBFFFAFFF9FFFCLL), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 144)) & 1)+ ((*(_WORD *)(a1 + 144) >> 9) & 1)+ ((*(_WORD *)(a1 + 144) >> 3) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 3;
        v16 = v15 & ~(_BYTE)v10 | v8;
        v17 = v15 | v10;
        if ((((v15 | v10) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        v124 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = v15 & ~(_BYTE)v10 | v8;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
          goto LABEL_188;
        v122 = v16;
        v125 = v17 | v16;
        v126 = (v18 == 0) | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v123 = v17;
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_186;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v20))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_186:
      v124 = 1;
      goto LABEL_187;
    }
    v35 = v26 >> 3;
    v36 = v17;
    if ((v126 & 1) == 0)
    {
      v37 = v18;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_133;
        if ((*(_WORD *)(a1 + 144) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_208;
          v41 = objc_alloc_init(GEOLatLng);
          AllFrom = GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3);
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (AllFrom)
          {
            PBReaderRecallMark();
            v43 = 96;
            goto LABEL_124;
          }
          goto LABEL_206;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_208;
        v96 = *(_WORD *)(a1 + 144) << 8;
        goto LABEL_154;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_133;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 144) |= 2u;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v50 = *v19;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v20))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v31 = v48++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v49) = 0;
LABEL_138:
        v95 = 136;
        goto LABEL_147;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_133;
        v54 = 0;
        v55 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 144) |= 1u;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v56 = *v19;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v20))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v49 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v49) = 0;
LABEL_142:
        v95 = 132;
        goto LABEL_147;
      case 4:
        if (!v36 || (*(_WORD *)(a1 + 144) & 0x10) != 0)
          goto LABEL_133;
        if (v33 != 2)
        {
          v97 = 0;
          v98 = 0;
          v99 = 0;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v100 = *v19;
            v101 = *(_QWORD *)(v3 + v100);
            v102 = v101 + 1;
            if (v101 == -1 || v102 > *(_QWORD *)(v3 + *v20))
              break;
            v103 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v101);
            *(_QWORD *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              v31 = v98++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_181;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_181:
          PBRepeatedInt32Add();
          goto LABEL_182;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_208;
        v20 = (int *)MEMORY[0x1E0D82BD8];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
        {
          do
          {
            if (*(_BYTE *)(v3 + *v21))
              break;
            v60 = 0;
            v61 = 0;
            v62 = 0;
            v63 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v64 = *v19;
              v65 = *(_QWORD *)(v3 + v64);
              v66 = v65 + 1;
              if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v20))
                break;
              v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v63) + v65);
              *(_QWORD *)(v3 + v64) = v66;
              v62 |= (unint64_t)(v67 & 0x7F) << v60;
              if (v67 < 0)
              {
                v60 += 7;
                v31 = v61++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_80;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_80:
            PBRepeatedInt32Add();
          }
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v20));
        }
        goto LABEL_113;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 144) & 0x40) != 0)
          goto LABEL_133;
        if (v33 != 2)
        {
          v104 = 0;
          v105 = 0;
          v106 = 0;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v107 = *v19;
            v108 = *(_QWORD *)(v3 + v107);
            v109 = v108 + 1;
            if (v108 == -1 || v109 > *(_QWORD *)(v3 + *v20))
              goto LABEL_178;
            v110 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v108);
            *(_QWORD *)(v3 + v107) = v109;
            v106 |= (unint64_t)(v110 & 0x7F) << v104;
            if (v110 < 0)
            {
              v104 += 7;
              v31 = v105++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_179;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_208;
        v20 = (int *)MEMORY[0x1E0D82BD8];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
        {
          do
          {
            if (*(_BYTE *)(v3 + *v21))
              break;
            v68 = 0;
            v69 = 0;
            v70 = 0;
            v71 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v72 = *v19;
              v73 = *(_QWORD *)(v3 + v72);
              v74 = v73 + 1;
              if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v20))
                break;
              v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v71) + v73);
              *(_QWORD *)(v3 + v72) = v74;
              v70 |= (unint64_t)(v75 & 0x7F) << v68;
              if (v75 < 0)
              {
                v68 += 7;
                v31 = v69++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_96;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_96:
            PBRepeatedUInt32Add();
          }
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v20));
        }
        goto LABEL_113;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 144) & 0x20) != 0)
          goto LABEL_133;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_208;
          v20 = (int *)MEMORY[0x1E0D82BD8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
          {
            do
            {
              if (*(_BYTE *)(v3 + *v21))
                break;
              v76 = 0;
              v77 = 0;
              v78 = 0;
              v79 = (int *)MEMORY[0x1E0D82BB8];
              while (1)
              {
                v80 = *v19;
                v81 = *(_QWORD *)(v3 + v80);
                v82 = v81 + 1;
                if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v20))
                  break;
                v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v79) + v81);
                *(_QWORD *)(v3 + v80) = v82;
                v78 |= (unint64_t)(v83 & 0x7F) << v76;
                if (v83 < 0)
                {
                  v76 += 7;
                  v31 = v77++ >= 9;
                  if (!v31)
                    continue;
                }
                goto LABEL_112;
              }
              *(_BYTE *)(v3 + *v21) = 1;
LABEL_112:
              PBRepeatedUInt32Add();
            }
            while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v20));
          }
LABEL_113:
          PBReaderRecallMark();
        }
        else
        {
          v111 = 0;
          v112 = 0;
          v113 = 0;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v114 = *v19;
            v115 = *(_QWORD *)(v3 + v114);
            v116 = v115 + 1;
            if (v115 == -1 || v116 > *(_QWORD *)(v3 + *v20))
              break;
            v117 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v115);
            *(_QWORD *)(v3 + v114) = v116;
            v113 |= (unint64_t)(v117 & 0x7F) << v111;
            if (v117 < 0)
            {
              v111 += 7;
              v31 = v112++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_179;
          }
LABEL_178:
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_179:
          PBRepeatedUInt32Add();
        }
LABEL_182:
        v17 = v123;
        goto LABEL_183;
      case 7:
        if (!v36)
          goto LABEL_133;
        if ((*(_WORD *)(a1 + 144) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_208;
          v96 = *(_WORD *)(a1 + 144) << 7;
LABEL_154:
          v6 += v96 >> 15;
LABEL_155:
          v17 = v123;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_156:
          v20 = (int *)MEMORY[0x1E0D82BD8];
LABEL_183:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_184:
          if (!(v125 & 1 | (v6 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v20))
            goto LABEL_186;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_208;
        v84 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v84, (void *)v3))
        {
          PBReaderRecallMark();
          v85 = *(void **)(a1 + 104);
          *(_QWORD *)(a1 + 104) = v84;

          --v6;
          goto LABEL_155;
        }

LABEL_208:
        v124 = 0;
        v17 = v123;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_187:
        v22 = v122;
LABEL_188:
        if ((v22 & 1) != 0)
LABEL_189:
          *(_WORD *)(a1 + 144) |= 8u;
        if (v17 & 1 | ((v124 & 1) == 0))
        {
          *(_WORD *)(a1 + 144) |= 0x80u;
          *(_WORD *)(a1 + 144) |= 0x10u;
          *(_WORD *)(a1 + 144) |= 0x40u;
          *(_WORD *)(a1 + 144) |= 0x20u;
          *(_WORD *)(a1 + 144) |= 0x100u;
          *(_WORD *)(a1 + 144) |= 0x200u;
        }
        else if (v18)
        {
          while (1)
          {
            v118 = *v18++;
            v119 = 128;
            switch(v118)
            {
              case 0:
                goto LABEL_200;
              case 1:
                goto LABEL_199;
              case 4:
                v119 = 16;
                goto LABEL_199;
              case 5:
                v119 = 64;
                goto LABEL_199;
              case 6:
                v119 = 32;
                goto LABEL_199;
              case 7:
                v119 = 256;
                goto LABEL_199;
              case 8:
                v119 = 512;
LABEL_199:
                *(_WORD *)(a1 + 144) |= v119;
                break;
              default:
                continue;
            }
          }
        }
LABEL_200:
        if (v124)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v17 & 1) == 0)
            return v3;
LABEL_204:
          v120 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
            goto LABEL_204;
        }
        return v3;
      case 8:
        if (!v36)
          goto LABEL_133;
        if ((*(_WORD *)(a1 + 144) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_208;
          v96 = *(_WORD *)(a1 + 144) << 6;
          goto LABEL_154;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_208;
        v41 = objc_alloc_init(GEOPDPoiIconCategoryFilter);
        v86 = GEOPDPoiIconCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1);
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v86)
        {
LABEL_206:

          v124 = 0;
          v17 = v123;
          goto LABEL_187;
        }
        PBReaderRecallMark();
        v43 = 112;
LABEL_124:
        v87 = *(void **)(a1 + v43);
        *(_QWORD *)(a1 + v43) = v41;

        --v6;
        v17 = v123;
        goto LABEL_156;
      case 9:
        if ((v7 & 1) == 0)
          goto LABEL_133;
        v88 = 0;
        v89 = 0;
        v49 = 0;
        *(_WORD *)(a1 + 144) |= 4u;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v90 = *v19;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v20))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v49 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              v31 = v89++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v49) = 0;
LABEL_146:
        v95 = 140;
LABEL_147:
        *(_DWORD *)(a1 + v95) = v49;
        goto LABEL_184;
      default:
        if ((v122 & 1) == 0 || (*(_WORD *)(a1 + 144) & 8) != 0)
        {
LABEL_133:
          v94 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v17 = v123;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          if ((v94 & 1) == 0)
          {
            v124 = 0;
            goto LABEL_187;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v17 = v123;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v46)
          {
            v124 = 0;
            goto LABEL_189;
          }
        }
        goto LABEL_184;
    }
  }
}

void sub_1891D684C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D6988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D7034(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D710C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D7D44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSpatialPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 96), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 104), "readAll:", 1);
  -[GEOPDPoiIconCategoryFilter readAll:](*(_QWORD *)(a1 + 112), 1);
}

unint64_t GEOPDSpatialPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 124))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSpatialPlaceLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 124) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSpatialPlaceLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSpatialPlaceLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDSpatialPlaceLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSpatialPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_1891D7F38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialPlaceLookupParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  _BOOL8 v63;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
            goto LABEL_69;
          goto LABEL_113;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_113;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_78;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_113;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_78;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        case 4u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_113;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                goto LABEL_78;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_79;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_113;
LABEL_82:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v48 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v49 = *v2;
              v50 = *(_QWORD *)&a1[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
                break;
              v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
              *(_QWORD *)&a1[v49] = v51;
              if (v52 < 0)
              {
                v13 = v48++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_82;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 5u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_113;
            while (1)
            {
              v33 = *v2;
              v34 = *(_QWORD *)&a1[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                goto LABEL_78;
              v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
              *(_QWORD *)&a1[v33] = v35;
              if (v36 < 0)
              {
                v37 = v15++;
                if (v37 <= 8)
                  continue;
              }
              goto LABEL_79;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_113;
LABEL_92:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v53 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v54 = *v2;
              v55 = *(_QWORD *)&a1[v54];
              v56 = v55 + 1;
              if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
                break;
              v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
              *(_QWORD *)&a1[v54] = v56;
              if (v57 < 0)
              {
                v13 = v53++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_92;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_113:
              PBReaderRecallMark();
              return 0;
            }
LABEL_102:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v58 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v59 = *v2;
                v60 = *(_QWORD *)&a1[v59];
                v61 = v60 + 1;
                if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                  break;
                v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
                *(_QWORD *)&a1[v59] = v61;
                if (v62 < 0)
                {
                  v13 = v58++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_102;
              }
              a1[*v4] = 1;
            }
LABEL_69:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_113;
            while (1)
            {
              v38 = *v2;
              v39 = *(_QWORD *)&a1[v38];
              v40 = v39 + 1;
              if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
                break;
              v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
              *(_QWORD *)&a1[v38] = v40;
              if (v41 < 0)
              {
                v42 = v15++;
                if (v42 <= 8)
                  continue;
              }
              goto LABEL_79;
            }
LABEL_78:
            a1[*v4] = 1;
          }
LABEL_79:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_111;
          break;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_113;
          goto LABEL_69;
        case 8u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAddressResultSubTypeFilterIsValid(a1))
            goto LABEL_69;
          goto LABEL_113;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_113;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_78;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_79;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          goto LABEL_79;
      }
    }
  }
LABEL_111:
  v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

void sub_1891D8810(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D8ACC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D90D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialPlaceLookupResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDMapsIdentifier *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  void *v52;
  char v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  int v62;
  char v63;
  void *v64;
  char v66;
  char v67;
  char v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFFFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v16 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_102;
        v66 = v16 & ~(_BYTE)v11 | v9;
        v67 = v18 | v17;
        v69 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v68 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_100;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_100:
      LODWORD(v14) = 1;
      goto LABEL_101;
    }
    v34 = v25 >> 3;
    v35 = v18;
    if ((v69 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_119;
          v40 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
          {
            PBReaderRecallMark();
            v41 = 64;
            goto LABEL_76;
          }
          goto LABEL_118;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_119;
        v54 = 8 * *(_BYTE *)(a1 + 84);
        goto LABEL_85;
      case 2:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_119;
          v54 = 16 * *(_BYTE *)(a1 + 84);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v40 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_118;
        PBReaderRecallMark();
        v41 = 56;
        goto LABEL_76;
      case 3:
        if (!v35 || (*(_BYTE *)(a1 + 84) & 2) != 0)
          goto LABEL_77;
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_119;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v21))
              break;
            v45 = 0;
            v46 = 0;
            v47 = 0;
            while (1)
            {
              v48 = *v19;
              v49 = *(_QWORD *)(v3 + v48);
              v50 = v49 + 1;
              if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
                break;
              v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v49);
              *(_QWORD *)(v3 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                v30 = v46++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_69;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_69:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v55 = 0;
          v56 = 0;
          v57 = 0;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v58 = *v19;
            v59 = *(_QWORD *)(v3 + v58);
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
              break;
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v30 = v56++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_98;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_98:
          PBRepeatedInt32Add();
        }
        v18 = v68;
        goto LABEL_87;
      case 4:
        if (!v35)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_119;
          v54 = 32 * *(_BYTE *)(a1 + 84);
LABEL_85:
          v7 += v54 >> 7;
LABEL_86:
          v18 = v68;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
          if (!(v67 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_100;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v40 = objc_alloc_init(GEOPDBounds);
        if (GEOPDBoundsReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v41 = 48;
LABEL_76:
          v52 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
          goto LABEL_86;
        }
LABEL_118:

LABEL_119:
        LODWORD(v14) = 0;
        v18 = v68;
LABEL_101:
        v17 = v66;
LABEL_102:
        if ((v17 & 1) != 0)
LABEL_103:
          *(_BYTE *)(a1 + 84) |= 1u;
        if (v18 & 1 | ((v14 & 1) == 0))
        {
          *(_BYTE *)(a1 + 84) |= 0x10u;
          *(_BYTE *)(a1 + 84) |= 8u;
          *(_BYTE *)(a1 + 84) |= 2u;
          *(_BYTE *)(a1 + 84) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            v62 = *v20++;
            v63 = 16;
            switch(v62)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 2:
                v63 = 8;
                goto LABEL_111;
              case 3:
                v63 = 2;
                goto LABEL_111;
              case 4:
                v63 = 4;
LABEL_111:
                *(_BYTE *)(a1 + 84) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if ((_DWORD)v14)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_116:
          v64 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_116;
        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_77:
          v53 = PBReaderSkipValueWithTag();
          v18 = v68;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            LODWORD(v14) = 0;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v18 = v68;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            LODWORD(v14) = 0;
            goto LABEL_103;
          }
        }
        goto LABEL_87;
    }
  }
}

void sub_1891D9A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891D9B98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DA1F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DAD60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSpatialPlaceLookupResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  -[GEOPDBounds readAll:](*(_QWORD *)(a1 + 48), 1);
}

unint64_t GEOPDSpatialPlaceLookupResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSpatialPlaceLookupResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSpatialPlaceLookupResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSpatialPlaceLookupResponseReadAllFrom_initialTag;
  Specified = GEOPDSpatialPlaceLookupResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSpatialPlaceLookupResponseCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1891DAF48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialPlaceLookupResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_39;
          goto LABEL_54;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_54;
          goto LABEL_39;
        case 3u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_54:
              PBReaderRecallMark();
              return 0;
            }
LABEL_43:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v22 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v23 = *v2;
                v24 = *(_QWORD *)&a1[v23];
                v25 = v24 + 1;
                if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                  break;
                v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
                *(_QWORD *)&a1[v23] = v25;
                if (v26 < 0)
                {
                  v13 = v22++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_43;
              }
              a1[*v4] = 1;
            }
LABEL_39:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_54;
            while (1)
            {
              v17 = *v2;
              v18 = *(_QWORD *)&a1[v17];
              v19 = v18 + 1;
              if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
                break;
              v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
              *(_QWORD *)&a1[v17] = v19;
              if (v20 < 0)
              {
                v21 = v15++;
                if (v21 <= 8)
                  continue;
              }
              goto LABEL_40;
            }
            a1[*v4] = 1;
          }
LABEL_40:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_53;
          break;
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDBoundsIsValid(a1))
            goto LABEL_39;
          goto LABEL_54;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_54;
          goto LABEL_40;
      }
    }
  }
LABEL_53:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1891DB488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DB7CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DBD50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStopInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOTimezone *v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  void *v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_54;
          v26 = objc_alloc_init(GEOTimezone);
          if (!GEOTimezoneReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          v27 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v26;

        }
        else if ((_DWORD)v18 == 3)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_48;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v30) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            LODWORD(v30) = 0;
LABEL_50:
          *(_DWORD *)(a1 + 32) = v30;
        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_44;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            v21 = 0;
LABEL_46:
          *(_QWORD *)(a1 + 16) = v21;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v35 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v36 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v35;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_54;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_1891DC5A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFacesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDStorefrontFace *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDStorefrontFace);
          if (!GEOPDStorefrontFaceReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDStorefrontFaces addFace:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891DCF34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStyleAttributesFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891DD698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTemplateDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDMapsIdentifier *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void *v51;
  char v52;
  __int16 v53;
  int v54;
  __int16 v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  BOOL v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFBFFFAFFFDFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 4) & 1)+ ((*(_WORD *)(a1 + 96) >> 2) & 1)+ ((*(_WORD *)(a1 + 96) >> 7) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 4;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v60 = v17;
        v61 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v62 = (v19 == 0) | v18;
        v63 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_110;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_110:
      v58 = 1;
      goto LABEL_111;
    }
    v33 = v25 >> 3;
    v34 = v63;
    if ((v62 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 96) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_132;
          v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            v40 = 32;
            goto LABEL_88;
          }
          goto LABEL_131;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_132;
        v53 = *(_WORD *)(a1 + 96) << 12;
        goto LABEL_107;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_89;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          v47 = *v20;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v30 = v45++ >= 9;
              if (v30)
              {
                v46 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v46 = 0;
LABEL_94:
        *(_BYTE *)(a1 + 92) = v46 != 0;
        goto LABEL_109;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x100) != 0)
          goto LABEL_89;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_131;
        PBReaderRecallMark();
        -[GEOPDTemplateData _addNoFlagsTitle:](a1, v39);

        goto LABEL_108;
      case 4:
        if (!v34)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 96) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v53 = *(_WORD *)(a1 + 96) << 9;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v39 = objc_alloc_init(GEOPDDataItem);
        if (!GEOPDDataItemReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_131;
        PBReaderRecallMark();
        v40 = 56;
        goto LABEL_88;
      case 5:
        if (!v34)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v53 = *(_WORD *)(a1 + 96) << 10;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v39 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_131;
        PBReaderRecallMark();
        v40 = 48;
        goto LABEL_88;
      case 6:
        if (!v34)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 96) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v53 = *(_WORD *)(a1 + 96) << 11;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v39 = objc_alloc_init(GEOPDPhoto);
        if (!GEOPDPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_131;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_88;
      case 7:
        if (!v34)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 96) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v53 = *(_WORD *)(a1 + 96) << 13;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v39 = objc_alloc_init(GEOPDDataItem);
        if (!GEOPDDataItemReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_131;
        PBReaderRecallMark();
        v40 = 24;
        goto LABEL_88;
      case 8:
        if (!v34)
          goto LABEL_89;
        if ((*(_WORD *)(a1 + 96) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          v53 = *(_WORD *)(a1 + 96) << 8;
LABEL_107:
          v7 += v53 >> 15;
LABEL_108:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_109;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_132;
        v39 = objc_alloc_init(GEOTimezone);
        if (GEOTimezoneReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = 64;
LABEL_88:
          v51 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
          goto LABEL_108;
        }
LABEL_131:

LABEL_132:
        v58 = 0;
        v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_112:
        if ((v60 & 1) != 0)
LABEL_113:
          *(_WORD *)(a1 + v59[390]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[390]) |= 8u;
          *(_WORD *)(a1 + v59[390]) |= 0x100u;
          *(_WORD *)(a1 + v59[390]) |= 0x40u;
          *(_WORD *)(a1 + v59[390]) |= 0x20u;
          *(_WORD *)(a1 + v59[390]) |= 0x10u;
          *(_WORD *)(a1 + v59[390]) |= 4u;
          *(_WORD *)(a1 + v59[390]) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            v54 = *v19++;
            v55 = 8;
            switch(v54)
            {
              case 0:
                goto LABEL_125;
              case 1:
                goto LABEL_124;
              case 3:
                v55 = 256;
                goto LABEL_124;
              case 4:
                v55 = 64;
                goto LABEL_124;
              case 5:
                v55 = 32;
                goto LABEL_124;
              case 6:
                v55 = 16;
                goto LABEL_124;
              case 7:
                v55 = 4;
                goto LABEL_124;
              case 8:
                v55 = 128;
LABEL_124:
                *(_WORD *)(a1 + v59[390]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_125:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v63)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_89:
          v52 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_111:
            v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_112;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v43)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_113;
          }
        }
LABEL_109:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_110;
        continue;
    }
  }
}

void sub_1891DE7AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DE994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DEA7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DEB64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DEC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DF2A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTemplateDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 72);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  -[GEOPDDataItem readAll:](*(_QWORD *)(a1 + 56), 1);
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  -[GEOPDPhoto readAll:](*(_QWORD *)(a1 + 40), 1);
  -[GEOPDDataItem readAll:](*(_QWORD *)(a1 + 24), 1);
}

unint64_t GEOPDTemplateDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTemplateDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTemplateDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTemplateDataReadAllFrom_initialTag;
  Specified = GEOPDTemplateDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTemplateDataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1891DF65C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DFA60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891DFD80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E0178(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTemplatePlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDTemplateData *v37;
  char v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
LABEL_76:
      v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_77;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if ((v7 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_69;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v42) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_66;
      }
    }
    else if ((_DWORD)v31 == 1)
    {
      if (v32 && (*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v37 = objc_alloc_init(GEOPDTemplateData);
        if (!GEOPDTemplateDataReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        -[GEOPDTemplatePlace _addNoFlagsTemplateData:](a1, v37);

        v19 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_66;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
      goto LABEL_76;
    }
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if (!v32)
    goto LABEL_65;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    v51 = PBReaderSkipValueWithTag();
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v51 & 1) == 0)
      goto LABEL_97;
    v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    goto LABEL_74;
  }
  v38 = PBReaderPlaceMark();
  v6 = (int *)MEMORY[0x1E0D82BD8];
  if ((v38 & 1) == 0)
    goto LABEL_97;
  v37 = objc_alloc_init(GEOPDFollowUpRequestMetadata);
  if (GEOPDFollowUpRequestMetadataReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v39 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v37;

    --v8;
LABEL_74:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[401]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[401]) |= 8u;
    *(_BYTE *)(a1 + v58[401]) |= 4u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 8;
LABEL_88:
      *(_BYTE *)(a1 + v58[401]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891E0994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E0E60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTemplatePlaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDTemplateData readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDTemplatePlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTemplatePlaceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTemplatePlaceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTemplatePlaceReadAllFrom_initialTag;
  Specified = GEOPDTemplatePlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTemplatePlaceCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891E11B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E1410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E1690(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTemplatePlaceFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891E1C84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTemplatePlaceModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  GEOLocalizedString *v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  _BOOL8 v49;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (!v5[*v8])
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 8u;
            while (1)
            {
              v23 = *v6;
              v24 = *(_QWORD *)&v5[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
              *(_QWORD *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_56;
              v20 += 7;
              v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_58;
              }
            }
            v5[*v8] = 1;
LABEL_56:
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_58:
            v48 = 36;
            goto LABEL_71;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_75;
            v29 = objc_alloc_init(GEOLocalizedString);
            if (!GEOLocalizedStringReadAllFrom((uint64_t)v29, v5, a3))
            {

              goto LABEL_75;
            }
            PBReaderRecallMark();
            -[GEOPDTemplatePlaceModuleConfiguration addSectionTitle:](a1, v29);

LABEL_72:
            if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
              goto LABEL_73;
            break;
          case 3u:
            v30 = 0;
            v31 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 2u;
            while (2)
            {
              v32 = *v6;
              v33 = *(_QWORD *)&v5[v32];
              v34 = v33 + 1;
              if (v33 == -1 || v34 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v35 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v33);
                *(_QWORD *)&v5[v32] = v34;
                v22 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  v17 = v31++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_62:
            v48 = 28;
            goto LABEL_71;
          case 4u:
            v36 = 0;
            v37 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 4u;
            while (2)
            {
              v38 = *v6;
              v39 = *(_QWORD *)&v5[v38];
              v40 = v39 + 1;
              if (v39 == -1 || v40 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v41 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v39);
                *(_QWORD *)&v5[v38] = v40;
                v22 |= (unint64_t)(v41 & 0x7F) << v36;
                if (v41 < 0)
                {
                  v36 += 7;
                  v17 = v37++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_66;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_66:
            v48 = 32;
            goto LABEL_71;
          case 5u:
            v42 = 0;
            v43 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 1u;
            while (2)
            {
              v44 = *v6;
              v45 = *(_QWORD *)&v5[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v47 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v45);
                *(_QWORD *)&v5[v44] = v46;
                v22 |= (unint64_t)(v47 & 0x7F) << v42;
                if (v47 < 0)
                {
                  v42 += 7;
                  v17 = v43++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_70:
            v48 = 24;
LABEL_71:
            *(_DWORD *)(a1 + v48) = v22;
            goto LABEL_72;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v28 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v27;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_75;
            goto LABEL_72;
        }
      }
    }
LABEL_73:
    v49 = v5[*v8] == 0;
  }
  else
  {
LABEL_75:
    v49 = 0;
  }
  objc_sync_exit(v5);

  return v49;
}

void sub_1891E2CBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E3420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTextBlockReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  char v45;
  void *v46;
  int v48;
  char v49;
  char v50;
  char v51;
  BOOL v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v49 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v52 = v16;
        v50 = v17;
        v51 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_65;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_65:
      v48 = 1;
      goto LABEL_66;
    }
    v32 = v24 >> 3;
    v33 = v52;
    if ((v51 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 24;
      goto LABEL_48;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 60) & 8) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_81;
        v43 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_63;
      }
      PBReaderReadString();
      v38 = objc_claimAutoreleasedReturnValue();
      v39 = 40;
      goto LABEL_48;
    }
    if ((v49 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_81;
      goto LABEL_64;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    if (!PBUnknownFieldAdd())
    {
      v48 = 0;
      v20 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_67;
    }
LABEL_64:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!(v50 & 1 | (v10 != 0)))
      goto LABEL_65;
  }
  if (!v33)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 60) & 4) == 0)
  {
    PBReaderReadString();
    v38 = objc_claimAutoreleasedReturnValue();
    v39 = 32;
LABEL_48:
    v40 = *(void **)(a1 + v39);
    *(_QWORD *)(a1 + v39) = v38;

    --v10;
    goto LABEL_64;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v43 = 32 * *(_BYTE *)(a1 + 60);
LABEL_63:
    v10 += v43 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  v48 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v49 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + 60) |= 1u;
LABEL_68:
  if (v52 || (v48 & 1) == 0)
  {
    *(_BYTE *)(a1 + 60) |= 8u;
    *(_BYTE *)(a1 + 60) |= 4u;
    *(_BYTE *)(a1 + 60) |= 2u;
  }
  else if (v18)
  {
    while (1)
    {
      v44 = *v18++;
      v45 = 8;
      switch(v44)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          v45 = 4;
          goto LABEL_74;
        case 3:
          v45 = 2;
LABEL_74:
          *(_BYTE *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v48)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v52)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891E3A3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E3D40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E3E0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTextBlockReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTextBlockReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTextBlockReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTextBlockReadAllFrom_initialTag;
  Specified = GEOPDTextBlockReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1891E405C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E4208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E4398(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTextBlockFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891E4964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTextItemReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1891E4EE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E51FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTextItemContainerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOPDTextItem *v36;
  void *v37;
  id v38;
  void *v39;
  int v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  int v46;
  int *v47;
  char v48;
  char v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v10;
        v48 = v14 & ~(_BYTE)v10 | v9;
        v49 = v14 | v10 | v48;
        if ((((v14 | v10) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_61;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_61:
      v46 = 1;
      goto LABEL_62;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31 && (*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_81;
        v36 = objc_alloc_init(GEOPDTextItem);
        if (!GEOPDTextItemReadAllFrom((uint64_t)v36, (void *)v3))
          goto LABEL_80;
        PBReaderRecallMark();
        -[GEOPDTextItemContainer _addNoFlagsTextItem:](a1, v36);

        goto LABEL_59;
      }
    }
    else if ((v48 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v38 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v39 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v38;

      }
      v40 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v40)
      {
        v46 = 0;
        v47 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_64;
      }
      goto LABEL_60;
    }
LABEL_55:
    v41 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v41 & 1) == 0)
    {
      v46 = 0;
LABEL_62:
      v47 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_63;
    }
LABEL_60:
    if (!(v49 & 1 | (v8 != 0)))
      goto LABEL_61;
  }
  if (!v31)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_81;
    v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v36 = objc_alloc_init(GEOPDTextItemDisplayConfig);
  if (GEOPDTextItemDisplayConfigReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    v37 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v36;

    --v8;
LABEL_59:
    v18 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_60;
  }
LABEL_80:

LABEL_81:
  v46 = 0;
  v47 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_63:
  if ((v48 & 1) == 0)
    goto LABEL_65;
LABEL_64:
  *(_BYTE *)(a1 + v47[420]) |= 1u;
LABEL_65:
  if (v15 & 1 | ((v46 & 1) == 0))
  {
    *(_BYTE *)(a1 + v47[420]) |= 4u;
    *(_BYTE *)(a1 + v47[420]) |= 2u;
    goto LABEL_74;
  }
  if (v16)
  {
    while (1)
    {
      v43 = *v16++;
      v42 = v43;
      if (v43 == 1)
        break;
      if (v42 == 2)
      {
LABEL_70:
        *(_BYTE *)(a1 + v47[420]) |= v42;
      }
      else if (!v42)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v42) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v46)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_78:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_78;
  }
  return v3;
}

void sub_1891E58F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E5D68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTextItemContainerCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDTextItemContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTextItemContainerReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTextItemContainerReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTextItemContainerReadAllFrom_initialTag;
  Specified = GEOPDTextItemContainerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTextItemContainerCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891E6098(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E62D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E651C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTextItemDisplayConfigReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxItemsPerRow;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxItemsPerRow;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxItemsPerRow;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxRowCount;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxRowCount;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxRowCount;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1891E6CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E70B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDThirdPartyLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  int v49;
  int *v50;
  unsigned __int8 v51;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v51 = v14 & ~(_BYTE)v7 | v8;
        if ((((v14 | v7) | v9) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_59;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      v49 = 1;
      goto LABEL_60;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_79;
          v43 = *(_BYTE *)(a1 + 52) << 6;
          goto LABEL_57;
        }
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 24;
        goto LABEL_44;
      }
    }
    else if ((v51 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v40 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v39;

      }
      v41 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
      {
        v49 = 0;
        v50 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    v42 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
      v49 = 0;
LABEL_60:
      v50 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v51) & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v31)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v36 = objc_claimAutoreleasedReturnValue();
    v37 = 32;
LABEL_44:
    v38 = *(void **)(a1 + v37);
    *(_QWORD *)(a1 + v37) = v36;

    v18 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v43 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v43 >> 7;
    v18 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_79:
  v49 = 0;
  v50 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  if ((v51 & 1) == 0)
    goto LABEL_63;
LABEL_62:
  *(_BYTE *)(a1 + v50[428]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(_BYTE *)(a1 + v50[428]) |= 2u;
    *(_BYTE *)(a1 + v50[428]) |= 4u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      v46 = *v16++;
      v45 = v46;
      if (v46 == 1)
        break;
      if (v45 == 2)
      {
        v44 = 4;
LABEL_69:
        *(_BYTE *)(a1 + v50[428]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_73;
      }
    }
    v44 = 2;
    goto LABEL_69;
  }
LABEL_73:
  if (v49)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_77:
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_77;
  }
  return v3;
}

void sub_1891E7678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E7990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDThirdPartyLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDThirdPartyLinkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDThirdPartyLinkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDThirdPartyLinkReadAllFrom_initialTag;
  Specified = GEOPDThirdPartyLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891E7BE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E7D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E7EDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPDTimeRangeDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOPDTimeRange<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOPDTimeRangeDictionaryRepresentation(unsigned int *a1, int a2)
{
  void *v4;
  char v5;
  void *v6;
  void *v7;
  const __CFString *v8;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *((_BYTE *)a1 + 8);
  if ((v5 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *a1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKey:", v6, CFSTR("duration"));

    v5 = *((_BYTE *)a1 + 8);
  }
  if ((v5 & 2) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[1]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (a2)
      v8 = CFSTR("startTime");
    else
      v8 = CFSTR("start_time");
    objc_msgSend(v4, "setObject:forKey:", v7, v8);

  }
  return v4;
}

void _GEOPDTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  const __CFString *v4;
  id v5;
  void *v6;
  id v7;

  if (a3)
    v4 = CFSTR("startTime");
  else
    v4 = CFSTR("start_time");
  v5 = a1;
  objc_msgSend(v5, "objectForKeyedSubscript:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = objc_msgSend(v6, "unsignedIntValue");
  }

  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("duration"));
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 1u;
    *(_DWORD *)a2 = objc_msgSend(v7, "unsignedIntValue");
  }

}

BOOL GEOPDTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPDTimeRangeReadAllFrom(a1, a2);
}

uint64_t GEOPDTimeRangeHash()
{
  return PBHashBytes();
}

void sub_1891E83D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  void *v37;
  id v38;
  void *v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  GEOPDTipUser *v44;
  void *v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  char v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v55 = v16 & ~(_BYTE)v11 | v7;
        v56 = v16 | v11 | v55;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v57 = (v17 == 0) | v16 | v11;
        v58 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_74;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_74:
      v53 = 1;
      goto LABEL_75;
    }
    v31 = v23 >> 3;
    v32 = v58;
    if ((v57 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_63;
        PBReaderReadString();
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        if (v37)
          -[GEOPDTip _addNoFlagsSnippet:](a1, v37);

        goto LABEL_70;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_63;
        *(_BYTE *)(a1 + 68) |= 1u;
        v41 = *v18;
        v42 = *(_QWORD *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v43 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v42);
          *(_QWORD *)(v3 + v41) = v42 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v43 = 0;
        }
        *(_QWORD *)(a1 + 40) = v43;
        goto LABEL_73;
      case 3:
        if (!v32)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_92;
          v48 = 8 * *(_BYTE *)(a1 + 68);
LABEL_69:
          v9 += v48 >> 7;
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v44 = objc_alloc_init(GEOPDTipUser);
        if (GEOPDTipUserReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v45 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v44;
LABEL_62:

          --v9;
LABEL_70:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_73;
        }

LABEL_92:
        v53 = 0;
        v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        if ((v55 & 1) != 0)
LABEL_77:
          *(_BYTE *)(a1 + v54[433]) |= 2u;
        if (v58 & 1 | ((v53 & 1) == 0))
        {
          *(_BYTE *)(a1 + v54[433]) |= 4u;
          *(_BYTE *)(a1 + v54[433]) |= 0x10u;
          *(_BYTE *)(a1 + v54[433]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v49 = *v17++;
            v50 = 4;
            switch(v49)
            {
              case 0:
                goto LABEL_85;
              case 1:
                goto LABEL_84;
              case 3:
                v50 = 16;
                goto LABEL_84;
              case 4:
                v50 = 8;
LABEL_84:
                *(_BYTE *)(a1 + v54[433]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_85:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v58 & 1) != 0)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v32)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v46;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_92;
        v48 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_69;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 2) != 0)
        {
LABEL_63:
          v47 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
LABEL_75:
            v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v38 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v39 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v38;

          }
          v40 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v40)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_77;
          }
        }
LABEL_73:
        if (!(v56 & 1 | (v9 != 0)))
          goto LABEL_74;
        continue;
    }
  }
}

void sub_1891E8C04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E8CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E90D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTipReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTipReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTipReadAllFrom_initialTag;
  Specified = GEOPDTipReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDTipUser readAll:](*(_QWORD *)(a1 + 48), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1891E9338(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E960C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891E98AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EA104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipUserReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOPDPhoto *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_64;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_64:
      v52 = 1;
      goto LABEL_65;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v40;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
        v47 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_61;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_65:
      v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if (!v35)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_84;
    v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_61:
    v10 += v47 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v42 = objc_alloc_init(GEOPDPhoto);
  if (GEOPDPhotoReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v42;
LABEL_48:

    --v10;
LABEL_62:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_63;
  }

LABEL_84:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v54 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + v53[443]) |= 1u;
LABEL_68:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[443]) |= 4u;
    *(_BYTE *)(a1 + v53[443]) |= 2u;
    goto LABEL_77;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v49 = *v20++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 2)
          goto LABEL_76;
        if (!v48)
          goto LABEL_77;
      }
      LOBYTE(v48) = 4;
LABEL_76:
      *(_BYTE *)(a1 + v53[443]) |= v48;
      continue;
    }
  }
LABEL_77:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891EA71C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EAA60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipUserReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTipUserReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTipUserReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTipUserReadAllFrom_initialTag;
  Specified = GEOPDTipUserReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDPhoto readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891EACC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EAE44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDTipUserIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xC) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
    return GEOPDPhotoIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

void sub_1891EB01C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EB2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTooltipReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOLocalizedString *v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFEFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v58 = v16 & ~(_BYTE)v11 | v9;
        v59 = v16 | v11 | v58;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16 | v11;
        v61 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_91;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_91:
      v56 = 1;
      goto LABEL_92;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_110;
          v37 = objc_alloc_init(GEOLocalizedString);
          if (GEOLocalizedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v38 = 48;
            goto LABEL_65;
          }
          goto LABEL_109;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_110;
        v51 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_88;
      case 2:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v51 = 8 * *(_BYTE *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v37 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_109;
        PBReaderRecallMark();
        v38 = 40;
        goto LABEL_65;
      case 3:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v51 = 32 * *(_BYTE *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v37 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_109;
        PBReaderRecallMark();
        v38 = 24;
        goto LABEL_65;
      case 4:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_110;
          v51 = 16 * *(_BYTE *)(a1 + 72);
LABEL_88:
          v7 += v51 >> 7;
LABEL_89:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_110;
        v37 = objc_alloc_init(GEOPDPhoto);
        if (GEOPDPhotoReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v38 = 32;
LABEL_65:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v7;
          goto LABEL_89;
        }
LABEL_109:

LABEL_110:
        v56 = 0;
        v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
        if ((v58 & 1) != 0)
LABEL_94:
          *(_BYTE *)(a1 + v57[448]) |= 2u;
        if (v61 & 1 | ((v56 & 1) == 0))
        {
          *(_BYTE *)(a1 + v57[448]) |= 0x20u;
          *(_BYTE *)(a1 + v57[448]) |= 0x10u;
          *(_BYTE *)(a1 + v57[448]) |= 4u;
          *(_BYTE *)(a1 + v57[448]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v52 = *v17++;
            v53 = 32;
            switch(v52)
            {
              case 0:
                goto LABEL_103;
              case 1:
                goto LABEL_102;
              case 2:
                v53 = 16;
                goto LABEL_102;
              case 3:
                v53 = 4;
                goto LABEL_102;
              case 4:
                v53 = 8;
LABEL_102:
                *(_BYTE *)(a1 + v57[448]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_103:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v61 & 1) != 0)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_79:
        *(_DWORD *)(a1 + 68) = v45;
        goto LABEL_90;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_74:
          v50 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v56 = 0;
LABEL_92:
            v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_93;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v41)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_94;
          }
        }
LABEL_90:
        if (!(v59 & 1 | (v7 != 0)))
          goto LABEL_91;
        continue;
    }
  }
}

void sub_1891EBB8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EBC74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EBD5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EC258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTooltipCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  -[GEOPDPhoto readAll:](*(_QWORD *)(a1 + 32), 1);
}

unint64_t GEOPDTooltipReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTooltipReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTooltipReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTooltipReadAllFrom_initialTag;
  Specified = GEOPDTooltipReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTooltipCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1891EC51C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EC77C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EC96C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTooltipFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1891ED134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891ED478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTrailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPDEntity *v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void *v51;
  char v52;
  __int16 v53;
  int v54;
  __int16 v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  BOOL v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFF9FFFAFFFDFFFCLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 5) & 1)+ ((*(_WORD *)(a1 + 88) >> 2) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v60 = v17;
        v61 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v62 = (v19 == 0) | v18;
        v63 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_102;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_102:
      v58 = 1;
      goto LABEL_103;
    }
    v33 = v25 >> 3;
    v34 = v63;
    if ((v62 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_123;
          v39 = objc_alloc_init(GEOPDEntity);
          if (GEOPDEntityReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v40 = 32;
            goto LABEL_84;
          }
          goto LABEL_122;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_123;
        v53 = *(_WORD *)(a1 + 88) << 12;
        goto LABEL_99;
      case 2:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v53 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v39 = objc_alloc_init(GEOPDTrailHeadTrailFactoidData);
        if (!GEOPDTrailHeadTrailFactoidDataReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_84;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 88) & 0x40) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v39 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_122;
        PBReaderRecallMark();
        -[GEOPDTrail _addNoFlagsMapsId:](a1, v39);
        goto LABEL_78;
      case 4:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v53 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v39 = objc_alloc_init(GEOPDPhoto);
        if (!GEOPDPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        v40 = 64;
        goto LABEL_84;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_85;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          v47 = *v20;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v30 = v45++ >= 9;
              if (v30)
              {
                v46 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v46 = 0;
LABEL_90:
        *(_BYTE *)(a1 + 84) = v46 != 0;
        goto LABEL_101;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 88) & 0x20) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v39 = objc_alloc_init(GEOPDHours);
        if (!GEOPDHoursReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_122;
        PBReaderRecallMark();
        -[GEOPDTrail _addNoFlagsHoursOfOperation:](a1, v39);
LABEL_78:

        goto LABEL_100;
      case 7:
        if (!v34)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          v53 = *(_WORD *)(a1 + 88) << 13;
LABEL_99:
          v7 += v53 >> 15;
LABEL_100:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_123;
        v39 = objc_alloc_init(GEOPDBusinessHours);
        if (GEOPDBusinessHoursReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v40 = 24;
LABEL_84:
          v51 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v7;
          goto LABEL_100;
        }
LABEL_122:

LABEL_123:
        v58 = 0;
        v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
        if ((v60 & 1) != 0)
LABEL_105:
          *(_WORD *)(a1 + v59[458]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[458]) |= 8u;
          *(_WORD *)(a1 + v59[458]) |= 0x10u;
          *(_WORD *)(a1 + v59[458]) |= 0x40u;
          *(_WORD *)(a1 + v59[458]) |= 0x80u;
          *(_WORD *)(a1 + v59[458]) |= 0x20u;
          *(_WORD *)(a1 + v59[458]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            v54 = *v19++;
            v55 = 8;
            switch(v54)
            {
              case 0:
                goto LABEL_116;
              case 1:
                goto LABEL_115;
              case 2:
                v55 = 16;
                goto LABEL_115;
              case 3:
                v55 = 64;
                goto LABEL_115;
              case 4:
                v55 = 128;
                goto LABEL_115;
              case 6:
                v55 = 32;
                goto LABEL_115;
              case 7:
                v55 = 4;
LABEL_115:
                *(_WORD *)(a1 + v59[458]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v63)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_85:
          v52 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_103:
            v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v43)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_105;
          }
        }
LABEL_101:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_102;
        continue;
    }
  }
}

void sub_1891EDE40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EDF28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EE110(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EE248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EE92C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EEA0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTrailCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  -[GEOPDPhoto readAll:](*(_QWORD *)(a1 + 64), 1);
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 48);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

  -[GEOPDBusinessHours readAll:](*(_QWORD *)(a1 + 24), 1);
}

unint64_t GEOPDTrailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTrailReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTrailReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTrailReadAllFrom_initialTag;
  Specified = GEOPDTrailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTrailCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1891EEE34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EF2C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EF654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891EFAD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTrailHeadReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  _BOOL4 v22;
  int v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOPDTrail *v42;
  id v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  int v61;
  void *v62;
  char v64;
  char v65;
  int v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = v8 != 0;
        v23 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_88;
        v64 = v18;
        v66 = v22 | v19 | v18;
        v67 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v65 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v24))
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v21;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
      break;
    v36 = v28 >> 3;
    v37 = v19;
    if ((v67 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDTrail);
        if (!GEOPDTrailReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_106;
        PBReaderRecallMark();
        -[GEOPDTrailHead _addNoFlagsTrail:](a1, v42);
        goto LABEL_55;
      case 2:
        if (!v37 || (*(_BYTE *)(a1 + 60) & 8) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v42 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
        {
LABEL_106:

LABEL_107:
          v23 = 0;
          v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          LOBYTE(v19) = v65;
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDTrailHead _addNoFlagsMapsId:](a1, v42);
LABEL_55:

        LOBYTE(v19) = v65;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_83;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v48 = *v21;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v33 = v46++ >= 9;
              if (v33)
              {
                LODWORD(v47) = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v47) = 0;
LABEL_77:
        v58 = 52;
        goto LABEL_82;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_72;
        v52 = 0;
        v53 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v54 = *v21;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v47) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v47) = 0;
LABEL_81:
        v58 = 56;
LABEL_82:
        *(_DWORD *)(a1 + v58) = v47;
        goto LABEL_83;
      default:
        if ((v64 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_72:
          v23 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BC8];
          LOBYTE(v19) = v65;
          if ((v23 & v66 & 1) == 0)
            goto LABEL_86;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v44 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v43;

          }
          v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v65;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (!v23)
          {
            v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_89;
          }
LABEL_83:
          if ((v66 & 1) == 0)
            goto LABEL_85;
        }
        if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_85;
        break;
    }
  }
LABEL_85:
  v23 = 1;
LABEL_86:
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_87:
  LOBYTE(v18) = v64;
LABEL_88:
  if ((v18 & 1) != 0)
LABEL_89:
    *(_BYTE *)(a1 + v12[466]) |= 4u;
  if (!(v19 & 1 | ((v23 & 1) == 0)))
  {
    if (!v20)
      goto LABEL_100;
    while (1)
    {
      v61 = *v20++;
      v60 = v61;
      if (v61 == 1)
        break;
      if (v60 == 2)
      {
        v59 = 8;
LABEL_96:
        *(_BYTE *)(a1 + v12[466]) |= v59;
      }
      else if (!v60)
      {
        goto LABEL_100;
      }
    }
    v59 = 16;
    goto LABEL_96;
  }
  *(_BYTE *)(a1 + v12[466]) |= 0x10u;
  *(_BYTE *)(a1 + v12[466]) |= 8u;
LABEL_100:
  if (v23)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
    goto LABEL_104;
  }
  v3 = 0;
  if ((v19 & 1) != 0)
  {
LABEL_104:
    v62 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891F0350(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F0A90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTrailHeadCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDTrail readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDTrailHeadReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTrailHeadReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTrailHeadReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTrailHeadReadAllFrom_initialTag;
  Specified = GEOPDTrailHeadReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTrailHeadCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891F0E7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F117C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F14AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTrailHeadFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1891F1C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTrailHeadTrailFactoidDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDFactoid *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDFactoid);
          if (!GEOPDFactoidReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTrailHeadTrailFactoidData addFactoid:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891F2488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAssociatedInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1891F2D18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAssociatedInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891F3304(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAttributionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  void *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (v18)
            -[GEOPDTransitAttribution addProviderName:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891F38FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAttributionFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891F405C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F428C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitConnectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  GEOPDTransitLabel *v47;
  uint64_t v48;
  void *v49;
  char v50;
  void *v51;
  char v52;
  char v53;
  char v54;
  char v55;
  int v56;
  char v57;
  void *v58;
  int v60;
  int *v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v62 = v16 & ~(_BYTE)v11 | v9;
        v63 = v16 | v11 | v62;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v64 = (v17 == 0) | v16 | v11;
        v65 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_80;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_80:
      v60 = 1;
LABEL_81:
      v61 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_82;
    }
    v31 = v23 >> 3;
    v32 = v65;
    if ((v64 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_67;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_71;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_73;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_71:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_73:
        *(_QWORD *)(a1 + 40) = v39;
        goto LABEL_68;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
          goto LABEL_67;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v47 = objc_alloc_init(GEOPDTransitLabel);
        if (!GEOPDTransitLabelReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_98;
        PBReaderRecallMark();
        -[GEOPDTransitConnection _addNoFlagsTransitLabel:](a1, v47);

        goto LABEL_61;
      case 4:
        if (!v32)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v48;

          --v7;
LABEL_61:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_68;
        }
        v53 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v53 & 1) == 0)
          goto LABEL_99;
        v54 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_78;
      case 5:
        if (!v32)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          v55 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v55 & 1) == 0)
            goto LABEL_99;
          v54 = 16 * *(_BYTE *)(a1 + 68);
LABEL_78:
          v7 += v54 >> 7;
          goto LABEL_79;
        }
        v50 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v50 & 1) == 0)
          goto LABEL_99;
        v47 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          v51 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v47;

          --v7;
LABEL_79:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_68;
        }
LABEL_98:

LABEL_99:
        v60 = 0;
        v61 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
        if ((v62 & 1) != 0)
LABEL_83:
          *(_BYTE *)(a1 + v61[477]) |= 2u;
        if (v65 & 1 | ((v60 & 1) == 0))
        {
          *(_BYTE *)(a1 + v61[477]) |= 0x10u;
          *(_BYTE *)(a1 + v61[477]) |= 4u;
          *(_BYTE *)(a1 + v61[477]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v56 = *v17++;
            v57 = 16;
            switch(v56)
            {
              case 0:
                goto LABEL_91;
              case 3:
                goto LABEL_90;
              case 4:
                v57 = 4;
                goto LABEL_90;
              case 5:
                v57 = 8;
LABEL_90:
                *(_BYTE *)(a1 + v61[477]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_91:
        if (v60)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v65 & 1) != 0)
        {
          v58 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v62 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 2) != 0)
        {
LABEL_67:
          v52 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v52 & 1) == 0)
          {
            v60 = 0;
            goto LABEL_81;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if (!v46)
          {
            v60 = 0;
            v61 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_83;
          }
        }
LABEL_68:
        if (!(v63 & 1 | (v7 != 0)))
          goto LABEL_80;
        continue;
    }
  }
}

void sub_1891F4B5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F4C44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F513C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDTransitConnectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
}

unint64_t GEOPDTransitConnectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitConnectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitConnectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitConnectionReadAllFrom_initialTag;
  Specified = GEOPDTransitConnectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitConnectionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1891F54A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F5720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F59C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitIncidentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPBTransitIncident *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPBTransitIncident);
          if (!GEOPBTransitIncidentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitIncident addTransitIncident:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1891F6290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitIncidentFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891F69F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F6C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPBTransitLine *v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void *v46;
  void *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  char v56;
  __int16 v57;
  char v58;
  char v59;
  char v60;
  int v61;
  __int16 v62;
  void *v63;
  int v65;
  char v66;
  char v67;
  char v68;
  BOOL v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 116) >> 5) & 1)
      + ((*(unsigned __int16 *)(a1 + 116) >> 6) & 1)
      + ((*(unsigned __int16 *)(a1 + 116) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF7FFFEFFFDFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 4) & 1)+ ((*(_WORD *)(a1 + 116) >> 10) & 1)+ (HIBYTE(*(_WORD *)(a1 + 116)) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 6;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v66 = v17;
        v67 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v68 = (v19 == 0) | v18;
        v69 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_113;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_113:
      v65 = 1;
      goto LABEL_114;
    }
    v33 = v25 >> 3;
    v34 = v69;
    if ((v68 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_WORD *)(a1 + 116) & 8) != 0)
          goto LABEL_95;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_136;
        v39 = objc_alloc_init(GEOPBTransitLine);
        if (!GEOPBTransitLineReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_135;
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsLine:](a1, v39);
        goto LABEL_93;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 116) & 0x80) != 0)
          goto LABEL_95;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_136;
        v39 = objc_alloc_init(GEOPBTransitSystem);
        if (!GEOPBTransitSystemReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_135;
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsSystem:](a1, v39);
        goto LABEL_93;
      case 9:
        if (!v34 || (*(_WORD *)(a1 + 116) & 4) != 0)
          goto LABEL_95;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_136;
        v39 = objc_alloc_init(GEOPDTransitLabel);
        if (!GEOPDTransitLabelReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_135;
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsLabel:](a1, v39);
        goto LABEL_93;
      case 10:
        if (!v34 || (*(_WORD *)(a1 + 116) & 0x200) != 0)
          goto LABEL_95;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_136;
        v39 = objc_alloc_init(GEOPDTransitConnection);
        if (!GEOPDTransitConnectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_135;
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsTransitConnection:](a1, v39);
        goto LABEL_93;
      case 11:
        if (!v34)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 116) & 0x10) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 40;
          goto LABEL_79;
        }
        v56 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v56 & 1) == 0)
          goto LABEL_136;
        v57 = *(_WORD *)(a1 + 116) << 11;
        goto LABEL_109;
      case 12:
        if (!v34)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          v58 = PBReaderSkipValueWithTag();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v58 & 1) == 0)
            goto LABEL_136;
          v57 = 32 * *(_WORD *)(a1 + 116);
LABEL_109:
          v7 += v57 >> 15;
          goto LABEL_110;
        }
        v45 = PBReaderPlaceMark();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v45 & 1) == 0)
          goto LABEL_136;
        v39 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          v46 = *(void **)(a1 + 96);
          *(_QWORD *)(a1 + 96) = v39;

          --v7;
LABEL_110:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_111:
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_112:
          if (!(v67 & 1 | (v7 != 0)))
            goto LABEL_113;
          continue;
        }
LABEL_135:

LABEL_136:
        v65 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_114:
        if ((v66 & 1) != 0)
LABEL_115:
          *(_WORD *)(a1 + 116) |= 2u;
        if (v69 || (v65 & 1) == 0)
        {
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 4u;
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x10u;
          *(_WORD *)(a1 + 116) |= 0x400u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            v61 = *v19++;
            v62 = 8;
            switch(v61)
            {
              case 0:
                goto LABEL_129;
              case 1:
                goto LABEL_128;
              case 2:
                v62 = 128;
                goto LABEL_128;
              case 9:
                v62 = 4;
                goto LABEL_128;
              case 10:
                v62 = 512;
                goto LABEL_128;
              case 11:
                v62 = 16;
                goto LABEL_128;
              case 12:
                v62 = 1024;
                goto LABEL_128;
              case 13:
                v62 = 256;
                goto LABEL_128;
              case 14:
                v62 = 64;
                goto LABEL_128;
              case 16:
                v62 = 32;
LABEL_128:
                *(_WORD *)(a1 + 116) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_129:
        if (v65)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v69)
        {
          v63 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 13:
        if (!v34)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 116) & 0x100) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 72;
          goto LABEL_79;
        }
        v59 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v59 & 1) == 0)
          goto LABEL_136;
        v57 = *(_WORD *)(a1 + 116) << 7;
        goto LABEL_109;
      case 14:
        if (!v34)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 116) & 0x40) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 56;
LABEL_79:
          v47 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;

          --v7;
LABEL_94:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_111;
        }
        v60 = PBReaderSkipValueWithTag();
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if ((v60 & 1) == 0)
          goto LABEL_136;
        v57 = *(_WORD *)(a1 + 116) << 9;
        goto LABEL_109;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_95;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v51 = *v20;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v30 = v49++ >= 9;
              if (v30)
              {
                v50 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v50 = 0;
LABEL_100:
        *(_QWORD *)(a1 + 88) = v50;
        goto LABEL_112;
      case 16:
        if (!v34 || (*(_WORD *)(a1 + 116) & 0x20) != 0)
          goto LABEL_95;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_136;
        v39 = objc_alloc_init(GEOPDStopInfo);
        if (!GEOPDStopInfoReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_135;
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsStopInfo:](a1, v39);
LABEL_93:

        goto LABEL_94;
      default:
        if ((v66 & 1) == 0 || (*(_WORD *)(a1 + 116) & 2) != 0)
        {
LABEL_95:
          v55 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v55 & 1) == 0)
          {
            v65 = 0;
            goto LABEL_114;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v42)
          {
            v65 = 0;
            goto LABEL_115;
          }
        }
        goto LABEL_112;
    }
  }
}

void sub_1891F784C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F7A34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F7C1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F7E04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F7ED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F7F8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F8074(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F815C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F8C30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];
  _BYTE v50[128];
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v42, v50, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v43;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v43 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v42 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v42, v50, 16);
    }
    while (v4);
  }

  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  v39 = 0u;
  v7 = a1[8];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v38, v49, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v39;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v39 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v38 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v38, v49, 16);
    }
    while (v9);
  }

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v12 = a1[3];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v34, v48, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v35;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v35 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v34, v48, 16);
    }
    while (v14);
  }

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v17 = a1[10];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v30, v47, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v31;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v31 != v20)
          objc_enumerationMutation(v17);
        -[GEOPDTransitConnection readAll:](*(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * v21++), 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v30, v47, 16);
    }
    while (v19);
  }

  objc_msgSend(a1[12], "readAll:", 1);
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v22 = a1[6];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v26, v46, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v27;
    while (1)
    {
      if (*(_QWORD *)v27 != v25)
        objc_enumerationMutation(v22);
      if (!--v24)
      {
        v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v26, v46, 16);
        if (!v24)
          break;
      }
    }
  }

}

unint64_t GEOPDTransitInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitInfoReadAllFrom_initialTag;
  Specified = GEOPDTransitInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_1891F91E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F9970(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891F9F00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891FA720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FA950(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitInfoSnippetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOPBTransitArtwork *v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  __int16 v62;
  int v63;
  __int16 v64;
  void *v65;
  int v67;
  char v68;
  char v69;
  char v70;
  char v71;
  BOOL v72;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 112) >> 2) & 1)
      + ((*(unsigned __int16 *)(a1 + 112) >> 7) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFFCFFFBFFF8FFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 9) & 1)+ ((*(_WORD *)(a1 + 112) >> 10) & 1)+ ((*(_WORD *)(a1 + 112) >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 5;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v69 = v17;
        v70 = v18 | v17;
        v68 = v8;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v71 = (v19 == 0) | v18;
        v72 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_123;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_123:
      v67 = 1;
      goto LABEL_124;
    }
    v33 = v25 >> 3;
    v34 = v72;
    if ((v71 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_WORD *)(a1 + 112) & 0x100) != 0)
          goto LABEL_100;
        PBReaderReadString();
        v39 = (GEOPBTransitArtwork *)objc_claimAutoreleasedReturnValue();
        if (v39)
          -[GEOPDTransitInfoSnippet _addNoFlagsSystemName:](a1, v39);
        goto LABEL_62;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 112) & 8) != 0)
          goto LABEL_100;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        -[GEOPDTransitInfoSnippet _addNoFlagsArtwork:](a1, v39);
        goto LABEL_62;
      case 3:
        if (!v34)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 112) & 0x20) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 40;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_145;
        v62 = *(_WORD *)(a1 + 112) << 10;
        goto LABEL_120;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
          goto LABEL_100;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v39 = objc_alloc_init(GEOPDTransitLabel);
        if (!GEOPDTransitLabelReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        -[GEOPDTransitInfoSnippet _addNoFlagsLabel:](a1, v39);
LABEL_62:

        goto LABEL_121;
      case 5:
        if ((v68 & 1) == 0)
          goto LABEL_100;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v48 = *v20;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v30 = v46++ >= 9;
              if (v30)
              {
                v47 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v47 = 0;
LABEL_105:
        *(_QWORD *)(a1 + 80) = v47;
        goto LABEL_122;
      case 6:
        if (!v34)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v62 = *(_WORD *)(a1 + 112) << 6;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v39 = objc_alloc_init(GEOTimezone);
        if (!GEOTimezoneReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_144;
        PBReaderRecallMark();
        v52 = 72;
        goto LABEL_90;
      case 7:
        if (!v34)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 112) & 0x400) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 88;
LABEL_79:
          v53 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
          goto LABEL_91;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_145;
        v62 = 32 * *(_WORD *)(a1 + 112);
        goto LABEL_120;
      case 8:
        if (!v34)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 112) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v62 = *(_WORD *)(a1 + 112) << 9;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3))
          goto LABEL_144;
        PBReaderRecallMark();
        v52 = 48;
        goto LABEL_90;
      case 9:
        if (!v34)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v62 = *(_WORD *)(a1 + 112) << 8;
LABEL_120:
          v7 += v62 >> 15;
LABEL_121:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_122:
          if (!(v70 & 1 | (v7 != 0)))
            goto LABEL_123;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v39 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          v52 = 56;
LABEL_90:
          v53 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v39;
LABEL_91:

          --v7;
          goto LABEL_121;
        }
LABEL_144:

LABEL_145:
        v67 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_124:
        if ((v69 & 1) != 0)
LABEL_125:
          *(_WORD *)(a1 + 112) |= 4u;
        if (v72 || (v67 & 1) == 0)
        {
          *(_WORD *)(a1 + 112) |= 0x100u;
          *(_WORD *)(a1 + 112) |= 8u;
          *(_WORD *)(a1 + 112) |= 0x20u;
          *(_WORD *)(a1 + 112) |= 0x10u;
          *(_WORD *)(a1 + 112) |= 0x200u;
          *(_WORD *)(a1 + 112) |= 0x400u;
          *(_WORD *)(a1 + 112) |= 0x40u;
          *(_WORD *)(a1 + 112) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            v63 = *v19++;
            v64 = 256;
            switch(v63)
            {
              case 0:
                goto LABEL_138;
              case 1:
                goto LABEL_137;
              case 2:
                v64 = 8;
                goto LABEL_137;
              case 3:
                v64 = 32;
                goto LABEL_137;
              case 4:
                v64 = 16;
                goto LABEL_137;
              case 6:
                v64 = 512;
                goto LABEL_137;
              case 7:
                v64 = 1024;
                goto LABEL_137;
              case 8:
                v64 = 64;
                goto LABEL_137;
              case 9:
                v64 = 128;
LABEL_137:
                *(_WORD *)(a1 + 112) |= v64;
                break;
              default:
                continue;
            }
          }
        }
LABEL_138:
        if (v67)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v72)
        {
          v65 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 10:
        if ((v68 & 1) == 0)
          goto LABEL_100;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v57 = *v20;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v30 = v55++ >= 9;
              if (v30)
              {
                v56 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v56 = 0;
LABEL_109:
        *(_BYTE *)(a1 + 108) = v56 != 0;
        goto LABEL_122;
      default:
        if ((v69 & 1) == 0 || (*(_WORD *)(a1 + 112) & 4) != 0)
        {
LABEL_100:
          v61 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v61 & 1) == 0)
          {
            v67 = 0;
            goto LABEL_124;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v42)
          {
            v67 = 0;
            goto LABEL_125;
          }
        }
        goto LABEL_122;
    }
  }
}

void sub_1891FB544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FB72C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FB814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FB9FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FBAE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FBBCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FBCB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FC440(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDTransitInfoSnippetCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[6], "readAll:", 1);
  return objc_msgSend(a1[7], "readAll:", 1);
}

unint64_t GEOPDTransitInfoSnippetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitInfoSnippetReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitInfoSnippetReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitInfoSnippetReadAllFrom_initialTag;
  Specified = GEOPDTransitInfoSnippetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitInfoSnippetCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1891FD038(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FD50C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FD988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitInfoSnippetFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1891FE1E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FE5DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitLabelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  GEOPBTransitArtwork *v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  char v52;
  int v53;
  int v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        v14 = v8;
        goto LABEL_8;
      case -3:
        v10 = 1;
        goto LABEL_7;
      case -2:
        v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v59 = v17 & ~(_BYTE)v12 | v9;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v10) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v8;
        v15 = v9;
LABEL_8:
        v16 = v12;
LABEL_10:
        ++v11;
        v8 = v14;
        v9 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_77;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_77:
      v57 = 1;
      goto LABEL_78;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 5)
    {
      if (!v33)
        goto LABEL_64;
      if ((*(_BYTE *)(a1 + 56) & 8) == 0)
      {
        PBReaderReadString();
        v45 = objc_claimAutoreleasedReturnValue();
        v46 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v45;
        goto LABEL_57;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_96;
      v52 = 16 * *(_BYTE *)(a1 + 56);
      goto LABEL_74;
    }
    if ((_DWORD)v32 == 4)
      break;
    if ((_DWORD)v32 == 1)
    {
      if ((v10 & 1) == 0)
        goto LABEL_64;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v41 = *v19;
        v42 = *(_QWORD *)(v3 + v41);
        v43 = v42 + 1;
        if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
        *(_QWORD *)(v3 + v41) = v43;
        v40 |= (unint64_t)(v44 & 0x7F) << v38;
        if ((v44 & 0x80) == 0)
          goto LABEL_67;
        v38 += 7;
        v29 = v39++ >= 9;
        if (v29)
        {
          LODWORD(v40) = 0;
          goto LABEL_69;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_67:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v40) = 0;
LABEL_69:
      *(_DWORD *)(a1 + 52) = v40;
    }
    else
    {
      if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
      {
LABEL_64:
        v51 = PBReaderSkipValueWithTag();
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v51 & 1) == 0)
        {
          v57 = 0;
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (!*(_QWORD *)(a1 + 16))
      {
        v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v49 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v48;

      }
      v50 = PBUnknownFieldAdd();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      v7 = (int *)MEMORY[0x1E0D82BD8];
      if (!v50)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        goto LABEL_79;
      }
    }
LABEL_76:
    if (!(v60 & 1 | (v11 != 0)))
      goto LABEL_77;
  }
  if (!v33)
    goto LABEL_64;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_96;
    v52 = 32 * *(_BYTE *)(a1 + 56);
LABEL_74:
    v11 += v52 >> 7;
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_96;
  v47 = objc_alloc_init(GEOPBTransitArtwork);
  if (GEOPBTransitArtworkReadAllFrom((uint64_t)v47, (void *)v3, v8 & 1))
  {
    PBReaderRecallMark();
    v46 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v47;
LABEL_57:

    --v11;
LABEL_75:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_76;
  }

LABEL_96:
  v57 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
  v58 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
  if ((v59 & 1) == 0)
    goto LABEL_80;
LABEL_79:
  *(_BYTE *)(a1 + v58[838]) |= 2u;
LABEL_80:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[838]) |= 8u;
    *(_BYTE *)(a1 + v58[838]) |= 4u;
    goto LABEL_89;
  }
  if (v18)
  {
    while (1)
    {
LABEL_83:
      v54 = *v18++;
      v53 = v54;
      if (v54 == 4)
        goto LABEL_88;
      if (v53 == 5)
        break;
      if (!v53)
        goto LABEL_89;
    }
    LOBYTE(v53) = 8;
LABEL_88:
    *(_BYTE *)(a1 + v58[838]) |= v53;
    goto LABEL_83;
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1891FED18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FF45C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitLabelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitLabelReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitLabelReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitLabelReadAllFrom_initialTag;
  Specified = GEOPDTransitLabelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1891FF600(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FF7B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDTransitLabelIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x18) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
    return GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDTransitLabelIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEOPDTransitLabelIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_1891FFB14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891FFDE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920004C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitNearbyScheduleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  _BOOL4 v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDTransitScheduleCategory *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  char v48;
  int v49;
  int v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v50 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v8 != 0;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_62;
        v48 = v17;
        v49 = v19 | v50 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v21 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_58;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_81;
      v40 = objc_alloc_init(GEOPDTransitScheduleCategory);
      if (!GEOPDTransitScheduleCategoryReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_80;
      PBReaderRecallMark();
      -[GEOPDTransitNearbySchedule _addNoFlagsCategory:](a1, v40);
      goto LABEL_50;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_58;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v21)
      goto LABEL_63;
LABEL_56:
    if ((v49 & 1) == 0)
      goto LABEL_60;
LABEL_59:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
  {
LABEL_58:
    v21 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v21 & v49 & 1) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOPDTransitScheduleGroup);
  if (GEOPDTransitScheduleGroupReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDTransitNearbySchedule _addNoFlagsGroup:](a1, v40);
LABEL_50:

    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }
LABEL_80:

LABEL_81:
  v21 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if ((v17 & 1) != 0)
LABEL_63:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_74;
  }
  if (v18)
  {
    while (1)
    {
      v45 = *v18++;
      v44 = v45;
      if (v45 == 1)
        break;
      if (v44 == 2)
      {
        v43 = 4;
LABEL_70:
        *(_BYTE *)(a1 + 52) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_74;
      }
    }
    v43 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v21)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if ((v50 & 1) != 0)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189200734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189200D50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitNearbyScheduleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDTransitScheduleCategory readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDTransitScheduleGroup readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDTransitNearbyScheduleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitNearbyScheduleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitNearbyScheduleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitNearbyScheduleReadAllFrom_initialTag;
  Specified = GEOPDTransitNearbyScheduleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitNearbyScheduleCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18920113C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892014FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892017D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189201AAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitPaymentMethodInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  _BOOL4 v22;
  int v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOPBTransitPaymentMethod *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  int v48;
  int v49;
  char v50;
  void *v51;
  char v53;
  char v54;
  int v55;
  char v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v18 = v17 & ~(_DWORD)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = v8 != 0;
        v23 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_71;
        v53 = v18;
        v55 = v22 | v19 | v18;
        v56 = (v20 == 0) | v19;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v54 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v24))
      break;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v21;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      if (v27++ >= 9)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
      break;
    v36 = v28 >> 3;
    v37 = v19;
    if ((v56 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((_DWORD)v36)
    {
      case 1:
        if (v37 && (*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_90;
          v42 = objc_alloc_init(GEOPBTransitPaymentMethod);
          if (!GEOPBTransitPaymentMethodReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          {
LABEL_89:

LABEL_90:
            v23 = 0;
            v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            LOBYTE(v19) = v54;
            goto LABEL_70;
          }
          PBReaderRecallMark();
          -[GEOPDTransitPaymentMethodInfo _addNoFlagsPaymentMethod:](a1, v42);
LABEL_51:

          LOBYTE(v19) = v54;
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
          if ((v55 & 1) == 0)
            goto LABEL_68;
          continue;
        }
        break;
      case 3:
        if ((v7 & 1) != 0)
        {
          *(_BYTE *)(a1 + 60) |= 1u;
          v43 = *v21;
          v44 = *(_QWORD *)(v3 + v43);
          if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(v3 + *v6))
          {
            v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v44);
            *(_QWORD *)(v3 + v43) = v44 + 8;
          }
          else
          {
            *(_BYTE *)(v3 + *v24) = 1;
            v45 = 0;
          }
          *(_QWORD *)(a1 + 24) = v45;
          goto LABEL_66;
        }
        break;
      case 2:
        if (v37 && (*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_90;
          v42 = objc_alloc_init(GEOPBTransitPaymentMethodSuggestion);
          if (!GEOPBTransitPaymentMethodSuggestionReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
            goto LABEL_89;
          PBReaderRecallMark();
          -[GEOPDTransitPaymentMethodInfo _addNoFlagsPaymentMethodSuggestion:](a1, v42);
          goto LABEL_51;
        }
        break;
      default:
        if ((v53 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v54;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (!v23)
          {
            v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_72;
          }
          goto LABEL_66;
        }
        break;
    }
    v23 = PBReaderSkipValueWithTag();
    v24 = (int *)MEMORY[0x1E0D82BC8];
    LOBYTE(v19) = v54;
    if ((v23 & v55 & 1) == 0)
      goto LABEL_69;
  }
  while (*(_QWORD *)(v3 + *v21) < *(_QWORD *)(v3 + *v6));
LABEL_68:
  v23 = 1;
LABEL_69:
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_70:
  LOBYTE(v18) = v53;
LABEL_71:
  if ((v18 & 1) != 0)
LABEL_72:
    *(_BYTE *)(a1 + v12[513]) |= 2u;
  if (v19 & 1 | ((v23 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[513]) |= 4u;
    *(_BYTE *)(a1 + v12[513]) |= 8u;
    goto LABEL_83;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v49 = *v20++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 2)
        {
          v50 = 4;
          goto LABEL_82;
        }
        if (!v48)
          goto LABEL_83;
      }
      v50 = 8;
LABEL_82:
      *(_BYTE *)(a1 + v12[513]) |= v50;
      continue;
    }
  }
LABEL_83:
  if (v23)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
LABEL_87:
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v19 & 1) != 0)
      goto LABEL_87;
  }
  return v3;
}

void sub_189202240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892028D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitPaymentMethodInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 40);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDTransitPaymentMethodInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitPaymentMethodInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitPaymentMethodInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitPaymentMethodInfoReadAllFrom_initialTag;
  Specified = GEOPDTransitPaymentMethodInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitPaymentMethodInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189202CC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920304C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189203358(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitPaymentMethodInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1892039BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189203BEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDTransitScheduleReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDDepartureSequence *v37;
  id v38;
  void *v39;
  int v40;
  uint64_t v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 92)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 92) & 4) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v58 = v16 & ~(_BYTE)v11 | v9;
        v59 = v16 | v11 | v58;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16 | v11;
        v61 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_92;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_92:
      v56 = 1;
      goto LABEL_93;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_BYTE *)(a1 + 92) & 0x40) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v37 = objc_alloc_init(GEOPDDepartureSequence);
        if (!GEOPDDepartureSequenceReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_110;
        PBReaderRecallMark();
        -[GEOPDTransitSchedule _addNoFlagsDepartureSequence:](a1, v37);
        goto LABEL_78;
      case 2:
        if (!v32)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_111;
          v51 = 16 * *(_BYTE *)(a1 + 92);
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v37 = objc_alloc_init(GEOPDDeparturePredicate);
        if (!GEOPDDeparturePredicateReadAllFrom((uint64_t)v37, (void *)v3))
          goto LABEL_110;
        PBReaderRecallMark();
        v41 = 24;
        goto LABEL_60;
      case 3:
        if (!v32)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_111;
          v51 = 8 * *(_BYTE *)(a1 + 92);
LABEL_89:
          v7 += v51 >> 7;
LABEL_90:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v37 = objc_alloc_init(GEOPDDeparturePredicate);
        if (GEOPDDeparturePredicateReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          v41 = 32;
LABEL_60:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v37;

          --v7;
          goto LABEL_90;
        }
LABEL_110:

LABEL_111:
        v56 = 0;
        v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
        if ((v58 & 1) != 0)
LABEL_95:
          *(_BYTE *)(a1 + v57[519]) |= 4u;
        if (v61 & 1 | ((v56 & 1) == 0))
        {
          *(_BYTE *)(a1 + v57[519]) |= 0x40u;
          *(_BYTE *)(a1 + v57[519]) |= 8u;
          *(_BYTE *)(a1 + v57[519]) |= 0x10u;
          *(_BYTE *)(a1 + v57[519]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v52 = *v17++;
            v53 = 64;
            switch(v52)
            {
              case 0:
                goto LABEL_104;
              case 1:
                goto LABEL_103;
              case 2:
                v53 = 8;
                goto LABEL_103;
              case 3:
                v53 = 16;
                goto LABEL_103;
              case 6:
                v53 = 32;
LABEL_103:
                *(_BYTE *)(a1 + v57[519]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v61 & 1) != 0)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        if (!PBReaderPlaceMark() || !GEOPDTimeRangeReadAllFrom(a1 + 56, v3))
          goto LABEL_111;
        PBReaderRecallMark();
        *(_BYTE *)(a1 + 92) |= 1u;
        goto LABEL_90;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 92) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                v45 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v45 = 0;
LABEL_84:
        *(_QWORD *)(a1 + 72) = v45;
        goto LABEL_91;
      case 6:
        if (!v32 || (*(_BYTE *)(a1 + 92) & 0x20) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_111;
        v37 = objc_alloc_init(GEOPDDepartureSequenceContainer);
        if (!GEOPDDepartureSequenceContainerReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_110;
        PBReaderRecallMark();
        -[GEOPDTransitSchedule _addNoFlagsDepartureSequenceContainer:](a1, v37);
LABEL_78:

        goto LABEL_90;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 92) & 4) != 0)
        {
LABEL_79:
          v50 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BB8];
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v56 = 0;
LABEL_93:
            v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v38 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v39 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v38;

          }
          v40 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BB8];
          if (!v40)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_95;
          }
        }
LABEL_91:
        if (!(v59 & 1 | (v7 != 0)))
          goto LABEL_92;
        continue;
    }
  }
}

void sub_1892045AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189204694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920477C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189204F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitScheduleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDDepartureSequence readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 40);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDDepartureSequenceContainer readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

uint64_t GEOPDTransitScheduleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitScheduleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitScheduleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitScheduleReadAllFrom_initialTag;
  Specified = GEOPDTransitScheduleReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitScheduleCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189205350(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892056A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189205A24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189205EC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  int *v35;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  void *v43;
  char v44;
  GEOPBTransitArtwork *v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  id v55;
  void *v56;
  int v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  char v70;
  void *v71;
  char v73;
  char v74;
  char v75;
  char v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1)
      + (*(_BYTE *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        if ((((v17 | v11) | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_93;
        v73 = v17 & ~(_BYTE)v11 | v9;
        v74 = v19 | v18;
        v76 = (v20 == 0) | v19;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v75 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_90;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_90:
      LODWORD(v14) = 1;
      goto LABEL_91;
    }
    v35 = v22;
    v36 = v26 >> 3;
    v37 = v19;
    if ((v76 & 1) == 0)
    {
      v38 = v20;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    if ((_DWORD)v36 == 3)
      break;
    if ((_DWORD)v36 == 2)
    {
      if (v37 && (*(_BYTE *)(a1 + 76) & 2) == 0)
      {
        v22 = v35;
        if (v33 == 2)
        {
          v47 = PBReaderPlaceMark();
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
            goto LABEL_109;
          while (*(_QWORD *)(v3 + *v21) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v22))
          {
            v48 = 0;
            v49 = 0;
            v50 = 0;
            while (1)
            {
              v51 = *v21;
              v52 = *(_QWORD *)(v3 + v51);
              v53 = v52 + 1;
              if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
                break;
              v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v52);
              *(_QWORD *)(v3 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                v31 = v49++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_63;
            }
            *(_BYTE *)(v3 + *v22) = 1;
LABEL_63:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v62 = 0;
          v63 = 0;
          v64 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v65 = *v21;
            v66 = *(_QWORD *)(v3 + v65);
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
              break;
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_86;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_86:
          PBRepeatedUInt32Add();
        }
        goto LABEL_87;
      }
LABEL_70:
      v58 = PBReaderSkipValueWithTag();
      v19 = v75;
      v22 = v35;
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v58 & 1) != 0)
        goto LABEL_88;
      LODWORD(v14) = 0;
LABEL_91:
      v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_92;
    }
    if ((_DWORD)v36 == 1)
    {
      if (!v37)
        goto LABEL_70;
      v22 = v35;
      if ((*(_BYTE *)(a1 + 76) & 8) == 0)
      {
        PBReaderReadString();
        v42 = objc_claimAutoreleasedReturnValue();
        v43 = *(void **)(a1 + 56);
        *(_QWORD *)(a1 + 56) = v42;

        --v8;
        v19 = v75;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_88;
      }
      v59 = PBReaderSkipValueWithTag();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v59 & 1) == 0)
        goto LABEL_109;
      v60 = 16 * *(_BYTE *)(a1 + 76);
      goto LABEL_76;
    }
    if ((v73 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
      goto LABEL_70;
    if (!*(_QWORD *)(a1 + 16))
    {
      v55 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v56 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v55;

    }
    v57 = PBUnknownFieldAdd();
    v19 = v75;
    v22 = v35;
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if (!v57)
    {
      LODWORD(v14) = 0;
      v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_94;
    }
LABEL_88:
    if (!(v74 & 1 | (v8 != 0)) || *(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_90;
  }
  if (!v37)
    goto LABEL_70;
  v22 = v35;
  if ((*(_BYTE *)(a1 + 76) & 4) != 0)
  {
    v61 = PBReaderSkipValueWithTag();
    v6 = (int *)MEMORY[0x1E0D82BD8];
    if ((v61 & 1) == 0)
      goto LABEL_109;
    v60 = 32 * *(_BYTE *)(a1 + 76);
LABEL_76:
    v8 += v60 >> 7;
    goto LABEL_87;
  }
  v44 = PBReaderPlaceMark();
  v6 = (int *)MEMORY[0x1E0D82BD8];
  if ((v44 & 1) == 0)
    goto LABEL_109;
  v45 = objc_alloc_init(GEOPBTransitArtwork);
  if (GEOPBTransitArtworkReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v46 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v45;

    --v8;
LABEL_87:
    v19 = v75;
    goto LABEL_88;
  }

LABEL_109:
  LODWORD(v14) = 0;
  v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v19 = v75;
LABEL_92:
  v18 = v73;
LABEL_93:
  if ((v18 & 1) != 0)
LABEL_94:
    *(_BYTE *)(a1 + v12[529]) |= 1u;
  if (v19 & 1 | ((v14 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[529]) |= 8u;
    *(_BYTE *)(a1 + v12[529]) |= 2u;
    *(_BYTE *)(a1 + v12[529]) |= 4u;
  }
  else if (v20)
  {
    while (1)
    {
      v69 = *v20++;
      v70 = 8;
      switch(v69)
      {
        case 0:
          goto LABEL_102;
        case 1:
          goto LABEL_101;
        case 2:
          v70 = 2;
          goto LABEL_101;
        case 3:
          v70 = 4;
LABEL_101:
          *(_BYTE *)(a1 + v12[529]) |= v70;
          break;
        default:
          continue;
      }
    }
  }
LABEL_102:
  if ((_DWORD)v14)
  {
    v3 = *(_BYTE *)(v3 + *v22) == 0;
    if ((v19 & 1) == 0)
      return v3;
LABEL_106:
    v71 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v19 & 1) != 0)
      goto LABEL_106;
  }
  return v3;
}

void sub_189206718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920688C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189206C28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitScheduleCategoryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitScheduleCategoryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitScheduleCategoryReadAllFrom_initialTag;
  Specified = GEOPDTransitScheduleCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189206E90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189207078(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892071FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892077F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189207AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189207DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  char v16;
  int *v17;
  int *v18;
  char v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  void *v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  __int16 v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  int v121;
  __int16 v122;
  void *v123;
  char v125;
  char v126;
  int v127;
  char v128;
  char v129;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 144)), (uint16x4_t)0xFFF8FFFAFFF7FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 144) >> 10) & 1)+ ((*(_WORD *)(a1 + 144) >> 5) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v14 | v10) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v127 = 1;
        v19 = v14 & ~(_BYTE)v10 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_198;
        v125 = v15;
        v128 = v16 | v15;
        v129 = (v18 == 0) | v16;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        v126 = v16;
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v20))
      goto LABEL_196;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v17;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_24;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_24:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_26:
    v31 = v24 & 7;
    if (v30 || v31 == 4)
    {
LABEL_196:
      v127 = 1;
      goto LABEL_197;
    }
    v33 = v24 >> 3;
    v34 = v16;
    if ((v129 & 1) == 0)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_139;
        if ((*(_WORD *)(a1 + 144) & 0x200) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 96;
          goto LABEL_130;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_215;
        v99 = *(_WORD *)(a1 + 144) << 6;
        goto LABEL_166;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_139;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 144) |= 8u;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v29 = v45++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_144:
        v98 = 136;
        goto LABEL_161;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_139;
        v51 = 0;
        v52 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 144) |= 2u;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        while (2)
        {
          v53 = *v17;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v29 = v52++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_148:
        v98 = 128;
        goto LABEL_161;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_139;
        v57 = 0;
        v58 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 144) |= 0x10u;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        while (2)
        {
          v59 = *v17;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v46 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              v29 = v58++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_152:
        v98 = 140;
        goto LABEL_161;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_139;
        v63 = 0;
        v64 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 144) |= 4u;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        while (2)
        {
          v65 = *v17;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v46 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              v29 = v64++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_156:
        v98 = 132;
        goto LABEL_161;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 144) & 0x80) != 0)
          goto LABEL_139;
        if (v31 != 2)
        {
          v100 = 0;
          v101 = 0;
          v102 = 0;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v103 = *v17;
            v104 = *(_QWORD *)(v3 + v103);
            v105 = v104 + 1;
            if (v104 == -1 || v105 > *(_QWORD *)(v3 + *v6))
              goto LABEL_182;
            v106 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v104);
            *(_QWORD *)(v3 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              v29 = v101++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_183;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_215;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6))
        {
          if (*(_BYTE *)(v3 + *v20))
            break;
          v69 = 0;
          v70 = 0;
          v71 = 0;
          while (1)
          {
            v72 = *v17;
            v73 = *(_QWORD *)(v3 + v72);
            v74 = v73 + 1;
            if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
              break;
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v29 = v70++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_93;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_93:
          PBRepeatedUInt32Add();
        }
        goto LABEL_126;
      case 7:
        if (!v34 || (*(_WORD *)(a1 + 144) & 0x40) != 0)
          goto LABEL_139;
        if (v31 != 2)
        {
          v107 = 0;
          v108 = 0;
          v109 = 0;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v110 = *v17;
            v111 = *(_QWORD *)(v3 + v110);
            v112 = v111 + 1;
            if (v111 == -1 || v112 > *(_QWORD *)(v3 + *v6))
              break;
            v113 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v111);
            *(_QWORD *)(v3 + v110) = v112;
            v109 |= (unint64_t)(v113 & 0x7F) << v107;
            if (v113 < 0)
            {
              v107 += 7;
              v29 = v108++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_183;
          }
LABEL_182:
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_183:
          PBRepeatedUInt32Add();
          goto LABEL_193;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_215;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6))
        {
          if (*(_BYTE *)(v3 + *v20))
            break;
          v76 = 0;
          v77 = 0;
          v78 = 0;
          while (1)
          {
            v79 = *v17;
            v80 = *(_QWORD *)(v3 + v79);
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
              break;
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v29 = v77++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_109;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_109:
          PBRepeatedUInt32Add();
        }
        goto LABEL_126;
      case 8:
        if (!v34 || (*(_WORD *)(a1 + 144) & 0x100) != 0)
          goto LABEL_139;
        if (v31 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_215;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v20))
              break;
            v83 = 0;
            v84 = 0;
            v85 = 0;
            while (1)
            {
              v86 = *v17;
              v87 = *(_QWORD *)(v3 + v86);
              v88 = v87 + 1;
              if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v6))
                break;
              v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v87);
              *(_QWORD *)(v3 + v86) = v88;
              v85 |= (unint64_t)(v89 & 0x7F) << v83;
              if (v89 < 0)
              {
                v83 += 7;
                v29 = v84++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_125;
            }
            *(_BYTE *)(v3 + *v20) = 1;
LABEL_125:
            PBRepeatedUInt64Add();
          }
LABEL_126:
          PBReaderRecallMark();
        }
        else
        {
          v114 = 0;
          v115 = 0;
          v116 = 0;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v117 = *v17;
            v118 = *(_QWORD *)(v3 + v117);
            v119 = v118 + 1;
            if (v118 == -1 || v119 > *(_QWORD *)(v3 + *v6))
              break;
            v120 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v118);
            *(_QWORD *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              v29 = v115++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_192;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_192:
          PBRepeatedUInt64Add();
        }
LABEL_193:
        v16 = v126;
        goto LABEL_194;
      case 9:
        if (!v34)
          goto LABEL_139;
        if ((*(_WORD *)(a1 + 144) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_215:
            v127 = 0;
            v16 = v126;
            goto LABEL_197;
          }
          v99 = 32 * *(_WORD *)(a1 + 144);
LABEL_166:
          v7 += v99 >> 15;
          v16 = v126;
        }
        else
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 104;
LABEL_130:
          v90 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          v16 = v126;
          --v7;
        }
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        goto LABEL_194;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_139;
        v91 = 0;
        v92 = 0;
        v46 = 0;
        *(_WORD *)(a1 + 144) |= 1u;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        while (2)
        {
          v93 = *v17;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v46 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              v29 = v92++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v46) = 0;
LABEL_160:
        v98 = 124;
LABEL_161:
        *(_DWORD *)(a1 + v98) = v46;
        goto LABEL_194;
      default:
        if ((v125 & 1) != 0 && (*(_WORD *)(a1 + 144) & 0x20) == 0)
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v42 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v41;

          }
          v43 = PBUnknownFieldAdd();
          v16 = v126;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v21 = (int *)MEMORY[0x1E0D82BB8];
          if (!v43)
          {
            v127 = 0;
            goto LABEL_199;
          }
LABEL_194:
          if (!(v128 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_196;
          continue;
        }
LABEL_139:
        v97 = PBReaderSkipValueWithTag();
        v16 = v126;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        if ((v97 & 1) != 0)
          goto LABEL_194;
        v127 = 0;
LABEL_197:
        v19 = v125;
LABEL_198:
        if ((v19 & 1) != 0)
LABEL_199:
          *(_WORD *)(a1 + 144) |= 0x20u;
        if (v16 & 1 | ((v127 & 1) == 0))
        {
          *(_WORD *)(a1 + 144) |= 0x200u;
          *(_WORD *)(a1 + 144) |= 0x80u;
          *(_WORD *)(a1 + 144) |= 0x40u;
          *(_WORD *)(a1 + 144) |= 0x100u;
          *(_WORD *)(a1 + 144) |= 0x400u;
        }
        else if (v18)
        {
          while (1)
          {
            v121 = *v18++;
            v122 = 512;
            switch(v121)
            {
              case 0:
                goto LABEL_209;
              case 1:
                goto LABEL_208;
              case 6:
                v122 = 128;
                goto LABEL_208;
              case 7:
                v122 = 64;
                goto LABEL_208;
              case 8:
                v122 = 256;
                goto LABEL_208;
              case 9:
                v122 = 1024;
LABEL_208:
                *(_WORD *)(a1 + 144) |= v122;
                break;
              default:
                continue;
            }
          }
        }
LABEL_209:
        if (v127)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v16 & 1) == 0)
            return v3;
LABEL_213:
          v123 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
            goto LABEL_213;
        }
        return v3;
    }
  }
}

void sub_189208D3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189208EB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189209024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189209668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitScheduleGroupReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitScheduleGroupReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitScheduleGroupReadAllFrom_initialTag;
  Specified = GEOPDTransitScheduleGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_1892098B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189209BCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189209E58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920A3E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitTripGeometryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int *v16;
  int *v17;
  int v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDTripLink *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  int v55;
  int v56;
  void *v57;
  char v59;
  int v60;
  int v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_DWORD)v10 | v7;
        v61 = v14 | v10;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v14 | v10) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_81;
        v59 = v14 & ~(_BYTE)v10 | v7;
        v60 = (v9 != 0) | v61 | v15;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v16;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_79:
      v18 = 1;
      goto LABEL_80;
    }
    v32 = v23 >> 3;
    v33 = v61;
    if (!((v17 == 0) | v61 & 1))
    {
      v34 = v17;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 != 2)
      break;
    if (v33 && (*(_BYTE *)(a1 + 68) & 2) == 0)
    {
      if (v30 == 2)
      {
        v18 = PBReaderPlaceMark();
        if (!v18)
          goto LABEL_80;
        while (*(_QWORD *)(v3 + *v16) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
        {
          v39 = 0;
          v40 = 0;
          v41 = 0;
          while (1)
          {
            v42 = *v16;
            v43 = *(_QWORD *)(v3 + v42);
            v44 = v43 + 1;
            if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
              break;
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v28 = v40++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_58;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_58:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        v48 = 0;
        v49 = 0;
        v50 = 0;
        while (1)
        {
          v51 = *v16;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
            break;
          v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
          *(_QWORD *)(v3 + v51) = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if (v54 < 0)
          {
            v48 += 7;
            v28 = v49++ >= 9;
            if (!v28)
              continue;
          }
          goto LABEL_76;
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_76:
        PBRepeatedUInt32Add();
      }
LABEL_77:
      if ((v60 & 1) == 0)
        goto LABEL_79;
      goto LABEL_78;
    }
LABEL_65:
    v18 = PBReaderSkipValueWithTag();
    if ((v18 & v60 & 1) == 0)
      goto LABEL_80;
LABEL_78:
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_79;
  }
  if ((_DWORD)v32 != 1)
  {
    if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 68) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v47 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v46;

      }
      v18 = PBUnknownFieldAdd();
      if (!v18)
        goto LABEL_82;
      goto LABEL_77;
    }
    goto LABEL_65;
  }
  if (!v33 || (*(_BYTE *)(a1 + 68) & 4) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v38 = objc_alloc_init(GEOPDTripLink);
  if (GEOPDTripLinkReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDTransitTripGeometry _addNoFlagsTripLink:](a1, v38);

    goto LABEL_77;
  }

LABEL_99:
  v18 = 0;
LABEL_80:
  LOBYTE(v15) = v59;
LABEL_81:
  if ((v15 & 1) != 0)
LABEL_82:
    *(_BYTE *)(a1 + 68) |= 1u;
  if (v61 & 1 | ((v18 & 1) == 0))
  {
    *(_BYTE *)(a1 + 68) |= 4u;
    *(_BYTE *)(a1 + 68) |= 2u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v56 = *v17++;
        v55 = v56;
        if (v56 == 1)
          break;
        if (v55 == 2)
          goto LABEL_91;
        if (!v55)
          goto LABEL_92;
      }
      LOBYTE(v55) = 4;
LABEL_91:
      *(_BYTE *)(a1 + 68) |= v55;
      continue;
    }
  }
LABEL_92:
  if (v18)
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
  else
    v3 = 0;
  if ((v61 & 1) != 0)
  {
    v57 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18920ABC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920B0B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitTripGeometryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDTransitTripGeometryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitTripGeometryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitTripGeometryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitTripGeometryReadAllFrom_initialTag;
  Specified = GEOPDTransitTripGeometryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDTransitTripGeometryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18920B3E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920B63C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920B878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripGeometryFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18920BDE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDTransitInfoSnippet *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDTransitInfoSnippet);
          if (!GEOPDTransitInfoSnippetReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitTripStop addStopInfo:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_18920C524(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18920CC88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopTimeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDDepartureSequence *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDDepartureSequence);
          if (!GEOPDDepartureSequenceReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitTripStopTime addDepartureSequence:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_18920D3CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDTransitTripStopTimeFilterReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDDeparturePredicate *v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  int v53;
  int v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 60));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 56);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 52));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v59 = v15;
        v60 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_80;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_80:
      v57 = 1;
      goto LABEL_81;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_101;
          v37 = objc_alloc_init(GEOPDDeparturePredicate);
          if (GEOPDDeparturePredicateReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            v38 = 24;
            goto LABEL_54;
          }
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_101;
        v51 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_77;
      case 2:
        if (!v32)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v51 = 8 * *(_BYTE *)(a1 + 68);
LABEL_77:
          v7 += v51 >> 7;
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v37 = objc_alloc_init(GEOPDDeparturePredicate);
        if (GEOPDDeparturePredicateReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          v38 = 32;
LABEL_54:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v7;
LABEL_78:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_79;
        }
LABEL_100:

LABEL_101:
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
        if ((v59 & 1) != 0)
LABEL_83:
          *(_BYTE *)(a1 + v58[557]) |= 4u;
        if (v62 || (v57 & 1) == 0)
        {
          *(_BYTE *)(a1 + v58[557]) |= 8u;
          *(_BYTE *)(a1 + v58[557]) |= 0x10u;
          goto LABEL_94;
        }
        if (v17)
        {
          while (1)
          {
            v54 = *v17++;
            v53 = v54;
            if (v54 == 1)
              break;
            if (v53 == 2)
            {
              v52 = 16;
LABEL_90:
              *(_BYTE *)(a1 + v58[557]) |= v52;
            }
            else if (!v53)
            {
              goto LABEL_94;
            }
          }
          v52 = 8;
          goto LABEL_90;
        }
LABEL_94:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v62)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_67;
        if (!PBReaderPlaceMark() || !GEOPDTimeRangeReadAllFrom(a1 + 40, v3))
          goto LABEL_101;
        PBReaderRecallMark();
        *(_BYTE *)(a1 + 68) |= 1u;
        goto LABEL_78;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_67;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                v45 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v45 = 0;
LABEL_72:
        *(_BYTE *)(a1 + 64) = v45 != 0;
        goto LABEL_79;
      default:
        if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 4) != 0)
        {
LABEL_67:
          v50 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v57 = 0;
LABEL_81:
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_82;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_83;
          }
        }
LABEL_79:
        if (!(v60 & 1 | (v7 != 0)))
          goto LABEL_80;
        continue;
    }
  }
}

void sub_18920E31C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDTransitTripStopTimeFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 56))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDTransitTripStopTimeFilterReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 60));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDTransitTripStopTimeFilterReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDTransitTripStopTimeFilterReadAllFrom_initialTag;
  Specified = GEOPDTransitTripStopTimeFilterReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 60));
  return Specified;
}

void sub_18920E57C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920E76C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopTimeFilterIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 60));
  v2 = (*(_BYTE *)(a1 + 68) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 60));
  return v2;
}

void sub_18920E9C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTripLinkReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadData();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            v20 = 0;
LABEL_36:
          *(_QWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_39;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18920F210(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18920F608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDURLDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOLocalizedString *v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v54 = v17;
        v55 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v56 = (v19 == 0) | v18;
        v57 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_64;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      v52 = 1;
      goto LABEL_65;
    }
    v33 = v25 >> 3;
    v34 = v57;
    if ((v56 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
    {
      if (!v34)
        goto LABEL_55;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        PBReaderReadString();
        v41 = objc_claimAutoreleasedReturnValue();
        v40 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v41;
LABEL_48:

        --v10;
LABEL_62:
        v21 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_84;
      v46 = 32 * *(_BYTE *)(a1 + 52);
LABEL_61:
      v10 += v46 >> 7;
      goto LABEL_62;
    }
    if ((_DWORD)v33 == 1)
      break;
    if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_55:
      v45 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v45 & 1) == 0)
      {
        v52 = 0;
        goto LABEL_65;
      }
      goto LABEL_63;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v52 = 0;
      v53 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if (!v34)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_84;
    v46 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v39 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v40 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v39;
    goto LABEL_48;
  }

LABEL_84:
  v52 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_65:
  v53 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
  if ((v54 & 1) == 0)
    goto LABEL_67;
LABEL_66:
  *(_BYTE *)(a1 + v53[884]) |= 1u;
LABEL_67:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[884]) |= 2u;
    *(_BYTE *)(a1 + v53[884]) |= 4u;
    goto LABEL_77;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v48 = *v19++;
        v47 = v48;
        if (v48 == 1)
          break;
        if (v47 == 2)
        {
          v49 = 4;
          goto LABEL_76;
        }
        if (!v47)
          goto LABEL_77;
      }
      v49 = 2;
LABEL_76:
      *(_BYTE *)(a1 + v53[884]) |= v49;
      continue;
    }
  }
LABEL_77:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18920FC78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892101FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDURLDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDURLDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDURLDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDURLDataReadAllFrom_initialTag;
  Specified = GEOPDURLDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892103A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDURLDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDURLDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189210400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189210584(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDURLDataIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDURLDataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDURLDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189210878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189210AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDUnifiedActionModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDButtonItem *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDButtonItem);
          if (!GEOPDButtonItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDUnifiedActionModuleConfiguration addButtonItem:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189211254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189211708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDUserReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOPDPhoto *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_64;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_64:
      v52 = 1;
      goto LABEL_65;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v40;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
        v47 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_61;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_65:
      v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if (!v35)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_84;
    v47 = *(_BYTE *)(a1 + 52) << 6;
LABEL_61:
    v10 += v47 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v42 = objc_alloc_init(GEOPDPhoto);
  if (GEOPDPhotoReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v42;
LABEL_48:

    --v10;
LABEL_62:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_63;
  }

LABEL_84:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v54 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + v53[565]) |= 1u;
LABEL_68:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[565]) |= 4u;
    *(_BYTE *)(a1 + v53[565]) |= 2u;
    goto LABEL_77;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v49 = *v20++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 2)
          goto LABEL_76;
        if (!v48)
          goto LABEL_77;
      }
      LOBYTE(v48) = 4;
LABEL_76:
      *(_BYTE *)(a1 + v53[565]) |= v48;
      continue;
    }
  }
LABEL_77:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189211D20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189212064(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDUserReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDUserReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDUserReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDUserReadAllFrom_initialTag;
  Specified = GEOPDUserReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDPhoto readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1892122CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189212448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDUserIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xC) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
    return GEOPDPhotoIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

void sub_189212620(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVehiclePositionFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189212BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVendorAmenitiesFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189213084(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189213304(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVendorIDLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  void *v48;
  id v49;
  void *v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  char v60;
  void *v61;
  char v63;
  char v64;
  char v65;
  char v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
  v12 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(_BYTE *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v15 = v12 > 1;
        v16 = v15 & ~(_BYTE)v10 | v7;
        v17 = v15 | v10;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v15 | v10) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_92;
        v63 = v15 & ~(_BYTE)v10 | v7;
        v64 = v17 | v16;
        v66 = (v19 == 0) | v17;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        v65 = v15 | v10;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
LABEL_9:
        ++v9;
        v7 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v20))
      goto LABEL_87;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_24;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_24:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_26:
    v31 = v24 & 7;
    if (v30 || v31 == 4)
    {
LABEL_87:
      LODWORD(v13) = 1;
      goto LABEL_91;
    }
    v33 = v24 >> 3;
    v34 = v17;
    if ((v66 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 3)
    {
      if (v34 && (*(_BYTE *)(a1 + 76) & 2) == 0)
      {
        if (v31 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_89;
          while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v20))
          {
            v41 = 0;
            v42 = 0;
            v43 = 0;
            while (1)
            {
              v44 = *v18;
              v45 = *(_QWORD *)(v3 + v44);
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
                break;
              v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v45);
              *(_QWORD *)(v3 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                v29 = v42++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_57;
            }
            *(_BYTE *)(v3 + *v20) = 1;
LABEL_57:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v52 = 0;
          v53 = 0;
          v54 = 0;
          while (1)
          {
            v55 = *v18;
            v56 = *(_QWORD *)(v3 + v55);
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
              break;
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v29 = v53++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_86;
          }
          *(_BYTE *)(v3 + *v20) = 1;
LABEL_86:
          PBRepeatedInt32Add();
        }
        goto LABEL_69;
      }
      goto LABEL_68;
    }
    if ((_DWORD)v33 == 2)
      break;
    if ((_DWORD)v33 == 1)
    {
      if (v34)
      {
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 56;
LABEL_61:
          v48 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;

          --v9;
          goto LABEL_69;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_89;
        v51 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_76;
      }
      goto LABEL_68;
    }
    if ((v63 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
      goto LABEL_68;
    if (!*(_QWORD *)(a1 + 16))
    {
      v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v50 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v49;

    }
    if (!PBUnknownFieldAdd())
    {
      LODWORD(v13) = 0;
      v17 = v65;
      v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_93:
      *(_BYTE *)(a1 + v11[571]) |= 1u;
      goto LABEL_94;
    }
LABEL_69:
    if (!(v64 & 1 | (v9 != 0)))
    {
      LODWORD(v13) = 1;
      goto LABEL_90;
    }
    v17 = v65;
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_87;
  }
  if (!v34)
  {
LABEL_68:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_89;
    goto LABEL_69;
  }
  if ((*(_BYTE *)(a1 + 76) & 4) == 0)
  {
    PBReaderReadString();
    v39 = objc_claimAutoreleasedReturnValue();
    v40 = 48;
    goto LABEL_61;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v51 = 32 * *(_BYTE *)(a1 + 76);
LABEL_76:
    v9 += v51 >> 7;
    goto LABEL_69;
  }
LABEL_89:
  LODWORD(v13) = 0;
LABEL_90:
  v17 = v65;
LABEL_91:
  v16 = v63;
  v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_92:
  if ((v16 & 1) != 0)
    goto LABEL_93;
LABEL_94:
  if (v17 & 1 | ((v13 & 1) == 0))
  {
    *(_BYTE *)(a1 + v11[571]) |= 8u;
    *(_BYTE *)(a1 + v11[571]) |= 4u;
    *(_BYTE *)(a1 + v11[571]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      v59 = *v19++;
      v60 = 8;
      switch(v59)
      {
        case 0:
          goto LABEL_101;
        case 1:
          goto LABEL_100;
        case 2:
          v60 = 4;
          goto LABEL_100;
        case 3:
          v60 = 2;
LABEL_100:
          *(_BYTE *)(a1 + v11[571]) |= v60;
          break;
        default:
          continue;
      }
    }
  }
LABEL_101:
  if ((_DWORD)v13)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v17 & 1) == 0)
      return v3;
LABEL_105:
    v61 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v17 & 1) != 0)
      goto LABEL_105;
  }
  return v3;
}

void sub_189213AA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189213B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189214020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVendorIDLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDVendorIDLinkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDVendorIDLinkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDVendorIDLinkReadAllFrom_initialTag;
  Specified = GEOPDVendorIDLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189214270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18921443C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892145C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892148B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDViewportFrameReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDGeographicCoordinate *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  int v55;
  int v56;
  void *v57;
  int v59;
  int *v60;
  char v61;
  char v62;
  char v63;
  char v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v61 = v17 & ~(_BYTE)v12 | v10;
        v62 = v17 | v12 | v61;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v63 = (v18 == 0) | v17 | v12;
        v64 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_84;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_84:
      v59 = 1;
      goto LABEL_85;
    }
    v32 = v24 >> 3;
    v33 = v64;
    if ((v63 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_105;
          v38 = objc_alloc_init(GEOPDGeographicCoordinate);
          if (GEOPDGeographicCoordinateReadAllFrom((uint64_t)v38, (void *)v3))
          {
            PBReaderRecallMark();
            v39 = 24;
            goto LABEL_67;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
        v52 = 8 * *(_BYTE *)(a1 + 64);
        goto LABEL_74;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        *(_BYTE *)(a1 + 64) |= 2u;
        v43 = *v19;
        v44 = *(_QWORD *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFFBLL && v44 + 4 <= *(_QWORD *)(v3 + *v7))
        {
          v45 = *(_DWORD *)(*(_QWORD *)(v3 + *v21) + v44);
          *(_QWORD *)(v3 + v43) = v44 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v45 = 0;
        }
        v53 = 56;
        goto LABEL_82;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        *(_BYTE *)(a1 + 64) |= 4u;
        v46 = *v19;
        v47 = *(_QWORD *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFFBLL && v47 + 4 <= *(_QWORD *)(v3 + *v7))
        {
          v45 = *(_DWORD *)(*(_QWORD *)(v3 + *v21) + v47);
          *(_QWORD *)(v3 + v46) = v47 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v45 = 0;
        }
        v53 = 60;
        goto LABEL_82;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_68;
        *(_BYTE *)(a1 + 64) |= 1u;
        v48 = *v19;
        v49 = *(_QWORD *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFFBLL && v49 + 4 <= *(_QWORD *)(v3 + *v7))
        {
          v45 = *(_DWORD *)(*(_QWORD *)(v3 + *v21) + v49);
          *(_QWORD *)(v3 + v48) = v49 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v45 = 0;
        }
        v53 = 52;
LABEL_82:
        *(_DWORD *)(a1 + v53) = v45;
        goto LABEL_83;
      case 5:
        if (!v33)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_105;
          v52 = 4 * *(_BYTE *)(a1 + 64);
LABEL_74:
          v9 += v52 >> 7;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v38 = objc_alloc_init(GEOPDBoundingCube);
        if (GEOPDBoundingCubeReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v39 = 32;
LABEL_67:
          v50 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v9;
LABEL_75:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_83;
        }
LABEL_104:

LABEL_105:
        v59 = 0;
        v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
        if ((v61 & 1) != 0)
LABEL_87:
          *(_BYTE *)(a1 + v60[576]) |= 8u;
        if (v64 & 1 | ((v59 & 1) == 0))
        {
          *(_BYTE *)(a1 + v60[576]) |= 0x10u;
          *(_BYTE *)(a1 + v60[576]) |= 0x20u;
          goto LABEL_98;
        }
        if (v18)
        {
          while (1)
          {
            v56 = *v18++;
            v55 = v56;
            if (v56 == 1)
              break;
            if (v55 == 5)
            {
              v54 = 32;
LABEL_94:
              *(_BYTE *)(a1 + v60[576]) |= v54;
            }
            else if (!v55)
            {
              goto LABEL_98;
            }
          }
          v54 = 16;
          goto LABEL_94;
        }
LABEL_98:
        if (v59)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v64 & 1) != 0)
        {
          v57 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v61 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 8) != 0)
        {
LABEL_68:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v59 = 0;
LABEL_85:
            v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v42)
          {
            v59 = 0;
            v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v62 & 1 | (v9 != 0)))
          goto LABEL_84;
        continue;
    }
  }
}

void sub_189215100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892155DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDViewportFrameReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDViewportFrameReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDViewportFrameReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDViewportFrameReadAllFrom_initialTag;
  Specified = GEOPDViewportFrameReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    -[GEOPDBoundingCube readAll:](*(_QWORD *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189215858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189215A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDViewportFrameIsDirty(uint64_t a1)
{
  _BOOL8 v2;
  uint64_t v3;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 64) & 0x50) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 64) & 0x20) == 0)
    return 0;
  v3 = *(_QWORD *)(a1 + 32);
  if (!v3)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
  v2 = (*(_BYTE *)(v3 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
  return v2;
}

void sub_189215D0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWalletCategoryInformationFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1892164AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892166DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWebLinkParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  GEOPDIcon *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v60 = v16 & ~(_BYTE)v11 | v7;
        v61 = v16 | v11 | v60;
        v59 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v9;
        v7 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_81;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_81:
      v57 = 1;
      goto LABEL_82;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 16 * *(_BYTE *)(a1 + 64);
        goto LABEL_78;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
LABEL_51:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 8 * *(_BYTE *)(a1 + 64);
        goto LABEL_78;
      case 3:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_99;
          v52 = 32 * *(_BYTE *)(a1 + 64);
LABEL_78:
          v9 += v52 >> 7;
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v43 = objc_alloc_init(GEOPDIcon);
        if (GEOPDIconReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v43;
LABEL_57:

          --v9;
LABEL_79:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_80;
        }

LABEL_99:
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
        if ((v60 & 1) != 0)
LABEL_84:
          *(_BYTE *)(a1 + v58[584]) |= 2u;
        if (v63 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[584]) |= 8u;
          *(_BYTE *)(a1 + v58[584]) |= 0x10u;
          *(_BYTE *)(a1 + v58[584]) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 8;
            switch(v53)
            {
              case 0:
                goto LABEL_92;
              case 1:
                goto LABEL_91;
              case 2:
                v54 = 16;
                goto LABEL_91;
              case 3:
                v54 = 4;
LABEL_91:
                *(_BYTE *)(a1 + v58[584]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_92:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v59 & 1) == 0)
          goto LABEL_66;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                v46 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v46 = 0;
LABEL_71:
        *(_BYTE *)(a1 + 60) = v46 != 0;
        goto LABEL_80;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_66:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_82:
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
            goto LABEL_84;
          }
        }
LABEL_80:
        if (!(v61 & 1 | (v9 != 0)))
          goto LABEL_81;
        continue;
    }
  }
}

void sub_189216E5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189216F44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892172F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWebLinkParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDWebLinkParamsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDWebLinkParamsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDWebLinkParamsReadAllFrom_initialTag;
  Specified = GEOPDWebLinkParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189217544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189217718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892178E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWebModuleConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  void *v36;
  _BOOL8 v37;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v24 = *v4;
            v25 = *(_QWORD *)&v3[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
            *(_QWORD *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_42;
            v21 += 7;
            v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_44:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_46;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              v30 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            v30 = 0;
LABEL_48:
          *(_BYTE *)(a1 + 28) = v30 != 0;
        }
        else if ((_DWORD)v18 == 1)
        {
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v35 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v36 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v35;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_51;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_51:
    v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189218238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWifiFingerprintReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOPDWifiFingerprint__confidence;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDWifiFingerprint__confidence;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDWifiFingerprint__confidence;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOPDWifiFingerprint__status;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDWifiFingerprint__status;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDWifiFingerprint__status;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 2u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOPDWifiFingerprint__labelType;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEOPDWifiFingerprint__labelType;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOPDWifiFingerprint__labelType;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189218D90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWifiFingerprintFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1892194A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892197F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusynessPoiLookupTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  int *v13;
  int *v14;
  int *v15;
  BOOL v16;
  int v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  int v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  int v55;
  int v56;
  void *v57;
  int v59;
  BOOL v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 80) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 80) >> 2) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_93:
    if (v12)
    {
      v54 = 1;
      goto LABEL_95;
    }
    if (!v13)
      goto LABEL_105;
    while (1)
    {
      while (1)
      {
        v56 = *v13++;
        v55 = v56;
        if (v56 != 2)
          break;
LABEL_101:
        *(_BYTE *)(a1 + 80) |= v55;
      }
      if (v55 == 3)
      {
        LOBYTE(v55) = 4;
        goto LABEL_101;
      }
      if (!v55)
        goto LABEL_105;
    }
  }
  if (v13)
    v16 = (v9 & 1 | v10) != 0;
  else
    v16 = 1;
  if (v8)
    v17 = 1;
  else
    v17 = v12;
  v59 = v17;
  v60 = v16;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_93;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v14;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_30;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *v15;
        v28 = *(unsigned __int8 *)(v3 + v27);
        goto LABEL_32;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_30:
    v27 = *v15;
    v28 = *(unsigned __int8 *)(v3 + v27);
    if (*(_BYTE *)(v3 + v27))
      v21 = 0;
LABEL_32:
    v29 = v21 & 7;
    if (v28 || v29 == 4)
      goto LABEL_93;
    v31 = v21 >> 3;
    v32 = v12;
    if (!v60)
    {
      v33 = v13;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 != 3)
      break;
    if (!v32 || (*(_BYTE *)(a1 + 80) & 4) != 0)
      goto LABEL_78;
    if (v29 != 2)
    {
LABEL_86:
      v52 = *v14;
      v53 = *(_QWORD *)(v3 + v52);
      if (v53 <= 0xFFFFFFFFFFFFFFFBLL && v53 + 4 <= *(_QWORD *)(v3 + *v6))
        *(_QWORD *)(v3 + v52) = v53 + 4;
      else
        *(_BYTE *)(v3 + v27) = 1;
      PBRepeatedInt32Add();
      goto LABEL_91;
    }
    if (!PBReaderPlaceMark())
      goto LABEL_108;
    while (1)
    {
      v48 = (unint64_t *)(v3 + *v14);
      v49 = *v48;
      v50 = *(_QWORD *)(v3 + *v6);
      if (*v48 >= v50)
        break;
      v51 = *v15;
      if (*(_BYTE *)(v3 + v51))
        break;
      if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > v50)
        *(_BYTE *)(v3 + v51) = 1;
      else
        *v48 = v49 + 4;
      PBRepeatedInt32Add();
    }
LABEL_84:
    PBReaderRecallMark();
    if ((v59 & 1) == 0)
      goto LABEL_93;
LABEL_92:
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_93;
  }
  if ((_DWORD)v31 == 2)
  {
    if (!v32 || (*(_BYTE *)(a1 + 80) & 2) != 0)
      goto LABEL_78;
    if (v29 != 2)
      goto LABEL_86;
    if (!PBReaderPlaceMark())
      goto LABEL_108;
    while (1)
    {
      v44 = (unint64_t *)(v3 + *v14);
      v45 = *v44;
      v46 = *(_QWORD *)(v3 + *v6);
      if (*v44 >= v46)
        break;
      v47 = *v15;
      if (*(_BYTE *)(v3 + v47))
        break;
      if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > v46)
        *(_BYTE *)(v3 + v47) = 1;
      else
        *v44 = v45 + 4;
      PBRepeatedInt32Add();
    }
    goto LABEL_84;
  }
  if ((_DWORD)v31 != 1)
  {
    if (!PBReaderSkipValueWithTag())
      goto LABEL_108;
LABEL_91:
    if (!v59)
      goto LABEL_93;
    goto LABEL_92;
  }
  if ((v7 & 1) != 0)
  {
    v37 = 0;
    v38 = 0;
    v39 = 0;
    *(_BYTE *)(a1 + 80) |= 1u;
    while (1)
    {
      v40 = *v14;
      v41 = *(_QWORD *)(v3 + v40);
      v42 = v41 + 1;
      if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
        break;
      v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v41);
      *(_QWORD *)(v3 + v40) = v42;
      v39 |= (unint64_t)(v43 & 0x7F) << v37;
      if ((v43 & 0x80) == 0)
        goto LABEL_81;
      v37 += 7;
      v26 = v38++ >= 9;
      if (v26)
      {
        LODWORD(v39) = 0;
        goto LABEL_83;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_81:
    if (*(_BYTE *)(v3 + *v15))
      LODWORD(v39) = 0;
LABEL_83:
    *(_DWORD *)(a1 + 76) = v39;
    goto LABEL_91;
  }
LABEL_78:
  if ((PBReaderSkipValueWithTag() & 1) != 0)
    goto LABEL_91;
LABEL_108:
  v54 = 0;
LABEL_95:
  *(_BYTE *)(a1 + 80) |= 2u;
  *(_BYTE *)(a1 + 80) |= 4u;
  if ((v54 & 1) != 0)
  {
LABEL_105:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if (v12)
      goto LABEL_106;
    return v3;
  }
  v3 = 0;
  if (!v12)
    return v3;
LABEL_106:
  v57 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_189219E30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18921A094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusynessPoiLookupTileReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOBusynessPoiLookupTileReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 68) = objc_msgSend(v6, "length");
      Specified = GEOBusynessPoiLookupTileReadSpecified(a1, (unint64_t)v6, (int *)&GEOBusynessPoiLookupTileReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_18921A208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18921A434(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18921A5A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18921ABB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOThrottleKeyStringForRequest(unint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%#x"), GEOThrottleKeyMakeFromRequestKind(a1));
}

void sub_18921B0B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18921B1F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18921B2E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18921B3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18921B438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18921B508(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t checkEntitlements(int a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a2;
  v4 = v3;
  if (a1 == 1792)
    v5 = objc_msgSend(v3, "hasEntitlement:", CFSTR("com.apple.geod.allow-user-initiated-request"));
  else
    v5 = 1;

  return v5;
}

void sub_18921B578(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18921B604(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18921B880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  void *v20;
  id *v21;
  void *v22;
  id *v23;
  void *v24;

  v24 = v22;
  objc_destroyWeak(v23);

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_18921B950(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18921B998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18921BA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)GEODataRequestThrottler;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

id GEOGetGEODataRequestThrottlerLog(void)
{
  if (qword_1ECDBC028 != -1)
    dispatch_once(&qword_1ECDBC028, &__block_literal_global_279);
  return (id)qword_1ECDBC020;
}

void sub_18921BBD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18921BD7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18921BEBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18921C044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_18921C0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_18921C2BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18921C468(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18921C5FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18921C6E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void ___ZL17bundleIdAllowlistv_block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v0 = (void *)MEMORY[0x1E0C99E60];
  _getValue(GeoServicesConfig_ThrottlerAllowlist, (uint64_t)off_1EDF4D3F8, 1, 0, 0, 0);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)qword_1ECDBC010;
  qword_1ECDBC010 = v1;

}

void sub_18921C774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void ___ZL32GEOGetGEODataRequestThrottlerLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEODataRequestThrottler");
  v1 = (void *)qword_1ECDBC020;
  qword_1ECDBC020 = (uint64_t)v0;

}

uint64_t _PlaceTypeForMapItemPlaceType(int a1)
{
  if ((a1 - 1) > 0x13)
    return 0;
  else
    return dword_189CD7D8C[a1 - 1];
}

uint64_t _MapItemPlaceTypeForPlaceType(int a1)
{
  int v1;
  uint64_t result;
  unsigned int v3;

  if (a1 <= 15)
  {
    if (a1 == 4)
      v3 = 3;
    else
      v3 = 0;
    if (a1 == 2)
      v3 = 2;
    if (a1 == 1)
      return 1;
    else
      return v3;
  }
  else
  {
    v1 = a1 - 35;
    result = 0;
    switch(v1)
    {
      case 0:
        result = 5;
        break;
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 17:
      case 18:
      case 21:
      case 23:
      case 24:
      case 25:
        return result;
      case 8:
        result = 6;
        break;
      case 9:
        result = 7;
        break;
      case 10:
        result = 8;
        break;
      case 11:
        result = 9;
        break;
      case 12:
        result = 10;
        break;
      case 13:
        result = 11;
        break;
      case 14:
        result = 12;
        break;
      case 15:
        result = 13;
        break;
      case 16:
        result = 14;
        break;
      case 19:
        result = 15;
        break;
      case 20:
        result = 16;
        break;
      case 22:
        result = 17;
        break;
      case 26:
        result = 18;
        break;
      default:
        result = 0;
        break;
    }
  }
  return result;
}

id _navd_debugDurationAsString(double a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D68], "dateWithTimeInterval:sinceDate:", v2, a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "components:fromDate:toDate:options:", 224, v2, v4, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  if (objc_msgSend(v5, "hour"))
    objc_msgSend(v6, "appendFormat:", CFSTR("%dhr "), objc_msgSend(v5, "hour"));
  if (objc_msgSend(v5, "minute"))
    objc_msgSend(v6, "appendFormat:", CFSTR("%dmin "), objc_msgSend(v5, "minute"));
  objc_msgSend(v6, "appendFormat:", CFSTR("%dsec"), objc_msgSend(v5, "second"));

  return v6;
}

double randomJitterForHypothesisWakeup()
{
  void *v0;
  int v1;
  void *v2;
  uint32_t v3;
  void *v4;

  +[GEONavdDefaults sharedInstance](GEONavdDefaults, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "maxRandomJitterForHypothesisWakeup");
  +[GEONavdDefaults sharedInstance](GEONavdDefaults, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v1 - objc_msgSend(v2, "minRandomJitterForHypothesisWakeup");

  +[GEONavdDefaults sharedInstance](GEONavdDefaults, "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v2) = objc_msgSend(v4, "minRandomJitterForHypothesisWakeup");

  return (double)v2 + (double)arc4random_uniform(v3);
}

BOOL GEOLocalPeak::mightReach(GEOLocalPeak *this, double a2)
{
  double v2;
  double v3;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  if (!*(_BYTE *)this || !*((_BYTE *)this + 1) || !*((_BYTE *)this + 2))
    return 1;
  v2 = *((double *)this + 1);
  v3 = *((double *)this + 3);
  if (v2 == v3)
    return *((unsigned __int8 *)this + 56) == *((double *)this + 4) > a2;
  v6 = *((double *)this + 4);
  v5 = *((double *)this + 5);
  v7 = *((double *)this + 2);
  v8 = (v5 - v6) / (v7 - v2);
  v9 = v3 - v7;
  v10 = v3 - v2;
  v11 = v6 + v8 * v10;
  v12 = *((double *)this + 6) + -(*((double *)this + 6) - v5) / v9 * v10;
  if (*((_BYTE *)this + 56))
  {
    if (v11 < v12)
      v11 = v12;
    return v11 > a2;
  }
  else
  {
    if (v12 < v11)
      v11 = v12;
    return v11 < a2;
  }
}

void GEOLocalPeak::getY(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (!*(_BYTE *)(a1 + a3))
  {
    v5 = a1 + 8 * a3;
    v6 = *(_QWORD *)(v5 + 8);
    if (!a2)
      std::__throw_bad_function_call[abi:ne180100]();
    *(double *)(v5 + 32) = (*(double (**)(uint64_t, uint64_t *))(*(_QWORD *)a2 + 48))(a2, &v6);
    *(_BYTE *)(a1 + a3) = 1;
  }
}

const __CFString *StringFromGEOSolarEventType(int a1)
{
  int v1;
  const __CFString *result;

  if (a1 > 31)
  {
    if (a1 <= 127)
    {
      if (a1 == 32)
        return CFSTR("Set");
      if (a1 == 64)
        return CFSTR("EndCT");
    }
    else
    {
      switch(a1)
      {
        case 128:
          return CFSTR("EndNT");
        case 256:
          return CFSTR("EndAT");
        case 512:
          return CFSTR("Midnight");
      }
    }
    return CFSTR("Unknown");
  }
  else
  {
    v1 = a1 - 1;
    result = CFSTR("StartAT");
    switch(v1)
    {
      case 0:
        return result;
      case 1:
        result = CFSTR("StartNT");
        break;
      case 2:
      case 4:
      case 5:
      case 6:
        return CFSTR("Unknown");
      case 3:
        result = CFSTR("StartCT");
        break;
      case 7:
        result = CFSTR("Rise");
        break;
      default:
        if (CFSTR("StartAT") != 16)
          return CFSTR("Unknown");
        result = CFSTR("Noon");
        break;
    }
  }
  return result;
}

uint64_t std::__function::__value_func<double ()(double)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
    }
    else
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
  }
  return a1;
}

{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

_QWORD *std::__function::__value_func<double ()(double)>::operator=[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)a1[3];
  a1[3] = 0;
  if (v4 == a1)
  {
    v5 = 4;
    v4 = a1;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    if (v6 == a2)
    {
      a1[3] = a1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v6;
      *(_QWORD *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

_QWORD *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::~__func(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_1E1BFA230;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::~__func(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_1E1BFA230;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x18D76437CLL);
}

char *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::__clone(uint64_t a1)
{
  uint64_t v2;
  char *v3;

  v2 = a1 + 8;
  v3 = (char *)operator new(0x38uLL);
  *(_QWORD *)v3 = &off_1E1BFA230;
  std::__function::__value_func<double ()(double)>::__value_func[abi:ne180100]((uint64_t)(v3 + 8), v2);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a1 + 40);
  return v3;
}

void sub_18921D924(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::__clone(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E1BFA230;
  std::__function::__value_func<double ()(double)>::__value_func[abi:ne180100](a2 + 8, a1 + 8);
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(a2 + 40) = result;
  return result;
}

_QWORD *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::destroy(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::destroy_deallocate(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

uint64_t std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *a2;
  v2 = *(_QWORD *)(a1 + 32);
  if (!v2)
    std::__throw_bad_function_call[abi:ne180100]();
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)v2 + 48))(v2, &v4);
}

uint64_t std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else
    return 0;
}

void *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::target_type()
{
}

void std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::~__func()
{
  JUMPOUT(0x18D76437CLL);
}

_QWORD *std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::__clone(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E1BFA288;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::operator()(uint64_t a1, double *a2)
{
  return (*(uint64_t (**)(double))(a1 + 8))(*a2);
}

uint64_t std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else
    return 0;
}

void *std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::target_type()
{
}

void std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::~__func()
{
  JUMPOUT(0x18D76437CLL);
}

__n128 std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::__clone(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E1BFA5F8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::target_type()
{
}

void std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::~__func()
{
  JUMPOUT(0x18D76437CLL);
}

__n128 std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::__clone(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_1E1BFA5A0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::__clone(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E1BFA5A0;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

double std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::operator()(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = a1[2];
  v3 = a1[3];
  v4 = *a2 * a1[1];
  v17 = 0;
  v16 = 0u;
  v15 = 0u;
  v14 = 0u;
  v13 = 0u;
  v12 = 0u;
  v11 = 0u;
  v10 = 0u;
  v9 = 0u;
  v8 = 0u;
  v7 = 0u;
  v6 = v4;
  return fabs(geo_getSunPosition((const GEODayCache *)&v6, v2, v3) + -180.0);
}

uint64_t std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::target_type()
{
}

void sub_18921DD84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_18921DDDC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL NSIntegerIsValidFloorOrdinal(uint64_t a1)
{
  return (unint64_t)(a1 + 0x80000000) < 0xFFFFFFFF;
}

uint64_t GEOLocationFloorOrdinalFromNSInteger(uint64_t result)
{
  if ((unint64_t)(result + 0x80000000) >= 0xFFFFFFFF)
    return 0x7FFFFFFFLL;
  else
    return result;
}

void sub_18921F920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void GEOETARequestRemoveFieldsForSendingRequest(void *a1)
{
  id v1;

  v1 = a1;
  if (GEOETARequestHasSensitiveFields((uint64_t)v1))
    objc_msgSend(v1, "clearSensitiveFields:", 0);

}

void sub_189220028(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1892200D0(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1892201DC(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1892203D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1892204C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_18922061C(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1892206FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double GEORemainingTimeForRemainingDistanceAlongStep(void *a1, double a2, double a3, double a4)
{
  id v7;
  void *v8;
  double v9;
  uint64_t v10;
  unsigned int v11;
  double v12;
  double v13;
  double v14;

  v7 = a1;
  v8 = v7;
  v9 = 0.0;
  if (v7 && objc_msgSend(v7, "timeToNextCheckpointsCount"))
  {
    v10 = 0;
    while (1)
    {
      v11 = objc_msgSend(v8, "distToNextCheckpointAtIndex:", v10);
      v12 = (double)v11;
      if (a2 <= (double)v11)
        break;
      v9 = v9 + (double)objc_msgSend(v8, "timeToNextCheckpointAtIndex:", v10);
      a2 = a2 - v12;
      if (++v10 >= (unint64_t)objc_msgSend(v8, "timeToNextCheckpointsCount"))
        goto LABEL_6;
    }
    if (v11)
      v14 = a2 / v12;
    else
      v14 = 0.0;
    v9 = v9 + (double)objc_msgSend(v8, "timeToNextCheckpointAtIndex:", v10) * v14;
  }
  else
  {
LABEL_6:
    if (a2 > 0.0)
    {
      v13 = a2 / a4;
      if (a4 == 0.0)
        v13 = 0.0;
      v9 = v9 + a3 * v13;
    }
  }

  return v9;
}

void GEORegisterNetworkDefaults(void *a1)
{
  id v1;
  void *v2;
  id v3;
  _QWORD v4[4];
  id v5;

  v1 = a1;
  +[GEONetworkDefaults sharedNetworkDefaults](GEONetworkDefaults, "sharedNetworkDefaults");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __GEORegisterNetworkDefaults_block_invoke;
  v4[3] = &unk_1E1C03638;
  v5 = v1;
  v3 = v1;
  objc_msgSend(v2, "updateIfNecessary:", v4);

}

uint64_t GEONetworkDefaultsDisableServerConnection()
{
  uint64_t result;

  result = objc_opt_self();
  byte_1ECDBC041 = 1;
  return result;
}

void sub_1892218F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_189222C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189223864(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189223974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189223A18(_Unwind_Exception *a1)
{
  void *v1;
  std::mutex *v2;

  std::mutex::unlock(v2);

  _Unwind_Resume(a1);
}

void sub_189223AAC(_Unwind_Exception *a1)
{
  void *v1;
  std::mutex *v2;

  std::mutex::unlock(v2);

  _Unwind_Resume(a1);
}

void sub_1892245BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1892249A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189224B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189225208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1892253E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1892254C8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_189225FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 192), 8);
  _Block_object_dispose((const void *)(v39 - 144), 8);
  _Block_object_dispose((const void *)(v39 - 112), 8);
  _Block_object_dispose((const void *)(v39 - 64), 8);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledAssetsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  GEONonTiledMaterialMap *v34;
  char v35;
  int v36;
  char v37;
  void *v38;
  char v40;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v40 = (v7 != 0) | v14;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_59;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_23;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_59:
      if ((v14 & 1) != 0)
      {
        v35 = 1;
        goto LABEL_67;
      }
      if (v15)
      {
        while (1)
        {
          v36 = *v15++;
          v37 = 4;
          switch(v36)
          {
            case 0:
              goto LABEL_68;
            case 1:
              goto LABEL_65;
            case 2:
              v37 = 2;
              goto LABEL_65;
            case 3:
              v37 = 1;
LABEL_65:
              *(_BYTE *)(a1 + 52) |= v37;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_68;
    }
    v28 = v21 >> 3;
    v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v30 = v15;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 == 3)
    {
      if (v29 && (*(_BYTE *)(a1 + 52) & 1) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_66;
        v34 = objc_alloc_init(GEONonTiledMaterialMap);
        if (!GEONonTiledMaterialMapReadAllFrom((uint64_t)v34, (void *)v3))
          goto LABEL_73;
        PBReaderRecallMark();
        -[GEONonTiledAssets _addNoFlagsMaterialMap:](a1, v34);
        goto LABEL_54;
      }
      goto LABEL_57;
    }
    if ((_DWORD)v28 == 2)
      break;
    if ((_DWORD)v28 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_66;
      goto LABEL_58;
    }
    if (v29 && (*(_BYTE *)(a1 + 52) & 4) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_66;
      v34 = objc_alloc_init(GEONonTiledModel);
      if (!GEONonTiledModelReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
        goto LABEL_73;
      PBReaderRecallMark();
      -[GEONonTiledAssets _addNoFlagsModel:](a1, v34);
      goto LABEL_54;
    }
LABEL_57:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_66:
      v35 = 0;
      goto LABEL_67;
    }
LABEL_58:
    if ((v40 & 1) == 0)
      goto LABEL_59;
  }
  if (!v29 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_57;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_66;
  v34 = objc_alloc_init(GEONonTiledMaterial);
  if (GEONonTiledMaterialReadAllFrom((uint64_t)v34, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEONonTiledAssets _addNoFlagsMaterial:](a1, v34);
LABEL_54:

    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_73:

  v35 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 1u;
  if ((v35 & 1) != 0)
  {
LABEL_68:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_69;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_69:
    v38 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189227C28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEONonTiledAssetsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[2];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEONonTiledAssetsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEONonTiledAssetsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEONonTiledAssetsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEONonTiledAssetsReadAllFrom_initialTag;
  Specified = GEONonTiledAssetsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEONonTiledAssetsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189227FE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledAssetsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONonTiledAssetsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189228048(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledAssetsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_35;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_35;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledMaterialMapIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if ((_DWORD)v16 == 2)
        break;
      if ((_DWORD)v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledModelIsValid(a1))
          goto LABEL_36;
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_36;
LABEL_34:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_35;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledMaterialIsValid(a1))
      goto LABEL_36;
    goto LABEL_32;
  }
LABEL_35:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEONonTiledModelIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledInfoIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledMaterialMapIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEONonTiledMaterialIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEONonTiledMaterialMapIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_189228B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledAssetsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1892290C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              v21 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v21 = 0;
LABEL_34:
          *(_QWORD *)(a1 + 8) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v17;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18922983C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONonTiledInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18922989C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v22 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v22;
}

BOOL GEONonTiledMaterialReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  GEONonTiledInfo *v17;
  void *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v17 = objc_alloc_init(GEONonTiledInfo);
          if (!GEONonTiledInfoReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          v18 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v17;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18922A198(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledMaterialReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONonTiledMaterialReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18922A1F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledMaterialMapReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  GEONonTiledInfo *v17;
  void *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v17 = objc_alloc_init(GEONonTiledInfo);
          if (!GEONonTiledInfoReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          v18 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v17;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18922A708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledMaterialMapReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONonTiledMaterialMapReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18922A768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledModelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  int *v35;
  GEONonTiledInfo *v36;
  void *v37;
  char v38;
  char v39;
  int v40;
  int v41;
  void *v42;
  BOOL v44;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = v14 == 0;
  if (v12)
    v15 = 1;
  v44 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_26;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_26:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v22 = 0;
LABEL_28:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        v39 = 1;
        goto LABEL_71;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v41 = *v14++;
            v40 = v41;
            if (v41 != 1 && v40 != 2)
              break;
            *(_BYTE *)(a1 + v18[920]) |= v40;
          }
        }
        while (v40);
      }
      goto LABEL_72;
    }
    v29 = v22 >> 3;
    v30 = v13;
    if (!v44)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 != 2)
    {
      if ((_DWORD)v29 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_70;
        goto LABEL_55;
      }
      if (v30)
      {
        if ((*(_BYTE *)(a1 + v18[920]) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_70:
            v39 = 0;
            goto LABEL_71;
          }
          v7 -= *(_BYTE *)(a1 + v18[920]) & 1;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_70;
          v35 = v17;
          v36 = objc_alloc_init(GEONonTiledInfo);
          if (!GEONonTiledInfoReadAllFrom((uint64_t)v36, (void *)v3))
            goto LABEL_77;
          PBReaderRecallMark();
          v37 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v36;

          --v7;
LABEL_51:
          v17 = v35;
          v18 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        }
LABEL_55:
        if (v7)
          v38 = 1;
        else
          v38 = v13;
        if ((v38 & 1) == 0)
          goto LABEL_62;
        continue;
      }
LABEL_54:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_70;
      goto LABEL_55;
    }
    break;
  }
  if (!v30 || (*(_BYTE *)(a1 + v18[920]) & 2) != 0)
    goto LABEL_54;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_70;
  v35 = v17;
  v36 = objc_alloc_init(GEONonTiledMaterialMap);
  if (GEONonTiledMaterialMapReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEONonTiledModel _addNoFlagsMaterialMap:](a1, v36);

    goto LABEL_51;
  }
LABEL_77:

  v39 = 0;
  v17 = v35;
  v18 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
LABEL_71:
  *(_BYTE *)(a1 + v18[920]) |= 1u;
  *(_BYTE *)(a1 + v18[920]) |= 2u;
  if ((v39 & 1) != 0)
  {
LABEL_72:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (!v13)
      return v3;
    goto LABEL_73;
  }
  v3 = 0;
  if (v13)
  {
LABEL_73:
    v42 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18922AF04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18922B4E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEONonTiledModelCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEONonTiledModelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEONonTiledModelReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEONonTiledModelReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEONonTiledModelReadAllFrom_initialTag;
  Specified = GEONonTiledModelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEONonTiledModelCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18922B784(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledModelReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEONonTiledModelReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18922B7E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18922BA14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledModelIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18922BDAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18922C3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAKAccountManagerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1ECDBC0C0;
  v7 = qword_1ECDBC0C0;
  if (!qword_1ECDBC0C0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAKAccountManagerClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getAKAccountManagerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18922C564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18922C730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18922CA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18922CC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18922CEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAKAccountManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!qword_1ECDBC0B8)
  {
    qword_1ECDBC0B8 = _sl_dlopen();
    if (!qword_1ECDBC0B8)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("AKAccountManager");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)abort_report_np();
    free(v3);
  }
  qword_1ECDBC0C0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getACAccountStoreClass_block_invoke(uint64_t a1)
{
  Class result;

  AccountsLibrary();
  result = objc_getClass("ACAccountStore");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECDBC0C8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)AccountsLibrary();
  }
  return result;
}

uint64_t AccountsLibrary()
{
  uint64_t v0;
  void *v2;

  if (qword_1ECDBC0A8)
    return qword_1ECDBC0A8;
  qword_1ECDBC0A8 = _sl_dlopen();
  v0 = qword_1ECDBC0A8;
  if (!qword_1ECDBC0A8)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void sub_18922D4B4(_Unwind_Exception *a1)
{
  void *v1;
  std::__shared_weak_count *v2;
  uint64_t v3;
  void *v5;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100](v3);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v5);

  _Unwind_Resume(a1);
}

void sub_18922D57C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18922D6E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void FeatureStyleAttributes::setExtAttributes(FeatureStyleAttributes *this, const GeoCodecsFeatureStylePairExt *__src, unsigned int a3)
{
  void *v6;
  size_t v7;

  if (*((unsigned __int8 *)this + 32) == a3)
  {
    if (a3)
    {
      v6 = (void *)*((_QWORD *)this + 3);
      if (v6)
      {
        v7 = 12 * a3;
LABEL_10:
        memcpy(v6, __src, v7);
      }
    }
  }
  else
  {
    if (*((_BYTE *)this + 32))
    {
      free(*((void **)this + 3));
      *((_QWORD *)this + 3) = 0;
      *((_BYTE *)this + 32) = 0;
    }
    if (a3)
    {
      v7 = 12 * a3;
      v6 = malloc_type_malloc(v7, 0x10000403E1C8BA9uLL);
      *((_QWORD *)this + 3) = v6;
      if (v6)
      {
        *((_BYTE *)this + 32) = a3;
        goto LABEL_10;
      }
    }
  }
}

void FeatureStyleAttributes::replaceAttributes(FeatureStyleAttributes *this, const GeoCodecsFeatureStylePair *a2, int a3)
{
  uint64_t v3;
  char v4;
  size_t v5;
  GeoCodecsFeatureStylePair *v6;
  uint64_t v7;
  uint64_t v8;

  if (a3)
  {
    v3 = 0;
    v4 = 0;
    LOBYTE(v5) = *((_BYTE *)this + 33);
LABEL_3:
    v5 = v5;
    v6 = *(GeoCodecsFeatureStylePair **)this;
    v7 = v3;
    do
    {
      if (!(_BYTE)v5)
      {
LABEL_13:
        v6[v5] = a2[v3];
        LOBYTE(v5) = *((_BYTE *)this + 33) + 1;
        *((_BYTE *)this + 33) = v5;
        ++v3;
        v4 = 1;
        if (v3 != a3)
          goto LABEL_3;
        v6 = *(GeoCodecsFeatureStylePair **)this;
        v5 = v5;
        goto LABEL_16;
      }
      v8 = 0;
      do
      {
        if (v6[v8].var0 == a2[v7].var0)
        {
          v6[v8].var1 = a2[v7].var1;
          goto LABEL_11;
        }
        ++v8;
      }
      while (v5 != v8);
      if (v5 < 0x20u)
      {
        v3 = v7;
        goto LABEL_13;
      }
LABEL_11:
      ++v7;
    }
    while (v7 != a3);
    if ((v4 & 1) == 0)
      return;
LABEL_16:
    qsort(v6, v5, 8uLL, (int (__cdecl *)(const void *, const void *))FeatureStyleAttributes::compareStylePairs);
  }
}

void sub_18922E020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18922E398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18922E5E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18922E724(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18922E8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  void *v5;
  va_list va;

  va_start(va, a5);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_18922EA9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

unint64_t featureStyleAttributesHash(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = *(unsigned __int8 *)(a1 + 33) | ((unint64_t)*(unsigned __int8 *)(a1 + 32) << 8);
  v3 = 21 * ((~v2 + (v2 << 18)) ^ ((~v2 + (v2 << 18)) >> 31));
  v4 = (65 * (v3 ^ (v3 >> 11))) ^ ((65 * (v3 ^ (v3 >> 11))) >> 22);
  if (*(_QWORD *)a1)
    v4 ^= PBHashBytes();
  if (*(_QWORD *)(a1 + 24))
    v4 ^= PBHashBytes();
  return v4;
}

uint64_t GeoCodecsFeatureStyleAttributesCompare(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[2];
  __int128 v24;
  __int128 v25;

  v3 = a1;
  v4 = a2;
  v5 = (void *)v4;
  if (v3 | v4)
    v6 = -1;
  else
    v6 = 0;
  if (v3)
    v7 = 1;
  else
    v7 = v6;
  if (v3 && v4)
  {
    objc_msgSend((id)v3, "featureStyleAttributesPtr");
    v25 = v24;
    v24 = 0uLL;
    objc_msgSend(v5, "featureStyleAttributesPtr");
    v8 = (std::__shared_weak_count *)v22;
    v23[0] = v21;
    v23[1] = v22;
    v21 = 0;
    v22 = 0;
    v7 = geo::codec::featureStyleAttributesCompare((uint64_t *)&v25, v23);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    v11 = (std::__shared_weak_count *)v22;
    if (v22)
    {
      v12 = (unint64_t *)(v22 + 8);
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    v14 = (std::__shared_weak_count *)*((_QWORD *)&v25 + 1);
    if (*((_QWORD *)&v25 + 1))
    {
      v15 = (unint64_t *)(*((_QWORD *)&v25 + 1) + 8);
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v17 = (std::__shared_weak_count *)*((_QWORD *)&v24 + 1);
    if (*((_QWORD *)&v24 + 1))
    {
      v18 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
  }

  return v7;
}

void sub_18922ECBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  void *v5;
  void *v6;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va1);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);

  _Unwind_Resume(a1);
}

BOOL FeatureStyleAttributesFind(void *a1, int a2, _DWORD *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  _BOOL8 v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15[2];

  v5 = a1;
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "featureStyleAttributesPtr");
    v7 = v13;
    v8 = v14;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v7;
  v15[1] = (uint64_t)v8;
  v9 = geo::codec::featureStyleAttributesFind(v15, a2, a3);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return v9;
}

void sub_18922EDD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_OWORD *_ZNSt3__115allocate_sharedB8ne180100I22FeatureStyleAttributesNS_9allocatorIS1_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(_QWORD *a1)
{
  char *v2;
  _OWORD *result;
  __int128 v4;

  v2 = (char *)operator new(0x40uLL);
  *((_QWORD *)v2 + 1) = 0;
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)v2 = &off_1E1BFB2F8;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_DWORD *)(v2 + 55) = 0;
  result = malloc_type_malloc(0x100uLL, 0x100004000313F17uLL);
  *((_QWORD *)v2 + 3) = result;
  if (result)
  {
    *(_QWORD *)&v4 = -1;
    *((_QWORD *)&v4 + 1) = -1;
    result[14] = v4;
    result[15] = v4;
    result[12] = v4;
    result[13] = v4;
    result[10] = v4;
    result[11] = v4;
    result[8] = v4;
    result[9] = v4;
    result[6] = v4;
    result[7] = v4;
    result[4] = v4;
    result[5] = v4;
    result[2] = v4;
    result[3] = v4;
    *result = v4;
    result[1] = v4;
  }
  *a1 = v2 + 24;
  a1[1] = v2;
  return result;
}

void sub_18922EE7C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&v1[1].__shared_owners_);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<FeatureStyleAttributes>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB2F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<FeatureStyleAttributes>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB2F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

void std::allocate_shared[abi:ne180100]<FeatureStyleAttributes,std::allocator<FeatureStyleAttributes>,FeatureStyleAttributes const&,void>(FeatureStyleAttributes **a1, uint64_t a2)
{
  char *v4;
  FeatureStyleAttributes *v5;
  void *v6;

  v4 = (char *)operator new(0x40uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = &off_1E1BFB2F8;
  *(_OWORD *)(v4 + 24) = 0u;
  v5 = (FeatureStyleAttributes *)(v4 + 24);
  *(_OWORD *)(v4 + 40) = 0u;
  *(_DWORD *)(v4 + 55) = 0;
  v6 = malloc_type_malloc(0x100uLL, 0x100004000313F17uLL);
  *((_QWORD *)v4 + 3) = v6;
  if (v6)
    memcpy(v6, *(const void **)a2, 8 * *(unsigned __int8 *)(a2 + 33));
  *(_WORD *)(v4 + 57) = *(_WORD *)(a2 + 33);
  v4[56] = 0;
  if (*(_BYTE *)(a2 + 32))
    FeatureStyleAttributes::setExtAttributes(v5, *(const GeoCodecsFeatureStylePairExt **)(a2 + 24), *(unsigned __int8 *)(a2 + 32));
  *a1 = v5;
  a1[1] = (FeatureStyleAttributes *)v4;
}

void sub_18922EF88(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&v1[1].__shared_owners_);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

id getRadiosPreferencesClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getRadiosPreferencesClass_softClass;
  v7 = getRadiosPreferencesClass_softClass;
  if (!getRadiosPreferencesClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getRadiosPreferencesClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getRadiosPreferencesClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18922F048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getRadiosPreferencesClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  SEL v4;
  id v5;

  AppSupportLibrary();
  result = objc_getClass("RadiosPreferences");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRadiosPreferencesClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (void *)abort_report_np();
    return (Class)+[GEOMapItemBuilder buildWithSetterBlock:](v3, v4, v5);
  }
  return result;
}

void sub_189230CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189231F68(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 64));
  _Unwind_Resume(a1);
}

__CFString *GEONavigationListenerStateAsString(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_1E1C0CA78[a1];
}

BOOL GEOAlightNotificationFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BOOL8 v97;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_WORD *)(a1 + 84) |= 0x1000u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_105;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_107;
              }
            }
            v3[*v6] = 1;
LABEL_105:
            if (v3[*v6])
              v20 = 0;
LABEL_107:
            v92 = v20 != 0;
            v93 = 81;
            goto LABEL_141;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_WORD *)(a1 + 84) |= 0x2000u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_111;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_111:
            v92 = v27 != 0;
            v93 = 82;
            goto LABEL_141;
          case 3u:
            v32 = 0;
            v33 = 0;
            v34 = 0;
            *(_WORD *)(a1 + 84) |= 0x10u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_115;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_115:
            v94 = 40;
            goto LABEL_124;
          case 4u:
            v39 = 0;
            v40 = 0;
            v34 = 0;
            *(_WORD *)(a1 + 84) |= 0x20u;
            while (2)
            {
              v41 = *v4;
              v42 = *(_QWORD *)&v3[v41];
              v43 = v42 + 1;
              if (v42 == -1 || v43 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v42);
                *(_QWORD *)&v3[v41] = v43;
                v34 |= (unint64_t)(v44 & 0x7F) << v39;
                if (v44 < 0)
                {
                  v39 += 7;
                  v15 = v40++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_119;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_119:
            v94 = 48;
            goto LABEL_124;
          case 5u:
            v45 = 0;
            v46 = 0;
            v34 = 0;
            *(_WORD *)(a1 + 84) |= 1u;
            while (2)
            {
              v47 = *v4;
              v48 = *(_QWORD *)&v3[v47];
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v50 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v48);
                *(_QWORD *)&v3[v47] = v49;
                v34 |= (unint64_t)(v50 & 0x7F) << v45;
                if (v50 < 0)
                {
                  v45 += 7;
                  v15 = v46++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_123;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_123:
            v94 = 8;
LABEL_124:
            *(_QWORD *)(a1 + v94) = v34;
            continue;
          case 6u:
            v51 = 0;
            v52 = 0;
            v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x400u;
            while (2)
            {
              v54 = *v4;
              v55 = *(_QWORD *)&v3[v54];
              v56 = v55 + 1;
              if (v55 == -1 || v56 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v57 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v55);
                *(_QWORD *)&v3[v54] = v56;
                v53 |= (unint64_t)(v57 & 0x7F) << v51;
                if (v57 < 0)
                {
                  v51 += 7;
                  v15 = v52++ >= 9;
                  if (v15)
                  {
                    LODWORD(v53) = 0;
                    goto LABEL_128;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v53) = 0;
LABEL_128:
            v95 = 76;
            goto LABEL_146;
          case 7u:
            *(_WORD *)(a1 + 84) |= 0x40u;
            v58 = *v4;
            v59 = *(_QWORD *)&v3[v58];
            if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v60 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v59);
              *(_QWORD *)&v3[v58] = v59 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v60 = 0;
            }
            v96 = 56;
            goto LABEL_155;
          case 8u:
            v61 = 0;
            v62 = 0;
            v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x200u;
            while (2)
            {
              v63 = *v4;
              v64 = *(_QWORD *)&v3[v63];
              v65 = v64 + 1;
              if (v64 == -1 || v65 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v66 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v64);
                *(_QWORD *)&v3[v63] = v65;
                v53 |= (unint64_t)(v66 & 0x7F) << v61;
                if (v66 < 0)
                {
                  v61 += 7;
                  v15 = v62++ >= 9;
                  if (v15)
                  {
                    LODWORD(v53) = 0;
                    goto LABEL_132;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v53) = 0;
LABEL_132:
            v95 = 72;
            goto LABEL_146;
          case 9u:
            *(_WORD *)(a1 + 84) |= 8u;
            v67 = *v4;
            v68 = *(_QWORD *)&v3[v67];
            if (v68 <= 0xFFFFFFFFFFFFFFF7 && v68 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v60 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v68);
              *(_QWORD *)&v3[v67] = v68 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v60 = 0;
            }
            v96 = 32;
            goto LABEL_155;
          case 0xAu:
            v69 = 0;
            v70 = 0;
            v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x80u;
            while (2)
            {
              v71 = *v4;
              v72 = *(_QWORD *)&v3[v71];
              v73 = v72 + 1;
              if (v72 == -1 || v73 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v74 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v72);
                *(_QWORD *)&v3[v71] = v73;
                v53 |= (unint64_t)(v74 & 0x7F) << v69;
                if (v74 < 0)
                {
                  v69 += 7;
                  v15 = v70++ >= 9;
                  if (v15)
                  {
                    LODWORD(v53) = 0;
                    goto LABEL_136;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v53) = 0;
LABEL_136:
            v95 = 64;
            goto LABEL_146;
          case 0xBu:
            *(_WORD *)(a1 + 84) |= 4u;
            v75 = *v4;
            v76 = *(_QWORD *)&v3[v75];
            if (v76 <= 0xFFFFFFFFFFFFFFF7 && v76 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v60 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v76);
              *(_QWORD *)&v3[v75] = v76 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v60 = 0;
            }
            v96 = 24;
            goto LABEL_155;
          case 0xCu:
            v77 = 0;
            v78 = 0;
            v79 = 0;
            *(_WORD *)(a1 + 84) |= 0x800u;
            while (2)
            {
              v80 = *v4;
              v81 = *(_QWORD *)&v3[v80];
              v82 = v81 + 1;
              if (v81 == -1 || v82 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v83 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v81);
                *(_QWORD *)&v3[v80] = v82;
                v79 |= (unint64_t)(v83 & 0x7F) << v77;
                if (v83 < 0)
                {
                  v77 += 7;
                  v15 = v78++ >= 9;
                  if (v15)
                  {
                    v79 = 0;
                    goto LABEL_140;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v79 = 0;
LABEL_140:
            v92 = v79 != 0;
            v93 = 80;
LABEL_141:
            *(_BYTE *)(a1 + v93) = v92;
            continue;
          case 0xDu:
            *(_WORD *)(a1 + 84) |= 2u;
            v84 = *v4;
            v85 = *(_QWORD *)&v3[v84];
            if (v85 <= 0xFFFFFFFFFFFFFFF7 && v85 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v60 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v85);
              *(_QWORD *)&v3[v84] = v85 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v60 = 0;
            }
            v96 = 16;
LABEL_155:
            *(_QWORD *)(a1 + v96) = v60;
            continue;
          case 0xEu:
            v86 = 0;
            v87 = 0;
            v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x100u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_158;
            continue;
        }
        while (1)
        {
          v88 = *v4;
          v89 = *(_QWORD *)&v3[v88];
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)&v3[*v5])
            break;
          v91 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v89);
          *(_QWORD *)&v3[v88] = v90;
          v53 |= (unint64_t)(v91 & 0x7F) << v86;
          if ((v91 & 0x80) == 0)
            goto LABEL_143;
          v86 += 7;
          v15 = v87++ >= 9;
          if (v15)
          {
            LODWORD(v53) = 0;
            goto LABEL_145;
          }
        }
        v3[*v6] = 1;
LABEL_143:
        if (v3[*v6])
          LODWORD(v53) = 0;
LABEL_145:
        v95 = 68;
LABEL_146:
        *(_DWORD *)(a1 + v95) = v53;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v97 = v3[*v6] == 0;
  }
  else
  {
LABEL_158:
    v97 = 0;
  }
  objc_sync_exit(v3);

  return v97;
}

void sub_189236354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlightNotificationFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAlightNotificationFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892363B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlightNotificationFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  _BOOL8 v72;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 7u:
        case 9u:
        case 0xBu:
        case 0xDu:
          if (v16 != 1)
            goto LABEL_110;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_106;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_106;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_105;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_107;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_110;
          v67 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_110:
          v72 = 0;
          goto LABEL_109;
      }
      while (1)
      {
        v68 = *v2;
        v69 = *(_QWORD *)&a1[v68];
        v70 = v69 + 1;
        if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
          break;
        v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
        *(_QWORD *)&a1[v68] = v70;
        if (v71 < 0)
        {
          v26 = v67++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_107;
      }
LABEL_105:
      v14 = *v4;
LABEL_106:
      a1[v14] = 1;
LABEL_107:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v72 = a1[*v4] == 0;
LABEL_109:
  PBReaderRecallMark();
  return v72;
}

void sub_189237A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  int v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  GEOStepFeedback *v52;
  char v53;
  char v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFAFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 8) != 0)+ ((*(_BYTE *)(a1 + 80) & 0x10) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v54 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v53 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_86;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_86:
      if ((v15 & 1) != 0)
      {
        v47 = 1;
        goto LABEL_99;
      }
      if (v16)
      {
        while (1)
        {
          v48 = *v16++;
          v49 = 4;
          switch(v48)
          {
            case 0:
              goto LABEL_100;
            case 1:
              goto LABEL_95;
            case 3:
              v49 = 32;
              goto LABEL_95;
            case 4:
              v49 = 64;
              goto LABEL_95;
            case 5:
              v49 = 2;
              goto LABEL_95;
            case 6:
              v49 = 8;
              goto LABEL_95;
            case 7:
              v49 = 16;
LABEL_95:
              *(_BYTE *)(a1 + 80) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_100;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v54 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 4) == 0)
        {
          PBReaderReadData();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v36;

          --v7;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_98;
        v7 += *(unsigned __int8 *)(a1 + 80) << 29 >> 31;
        goto LABEL_68;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 0x20) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v52 = objc_alloc_init(GEOStepFeedback);
        if (!GEOStepFeedbackReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
          goto LABEL_97;
        PBReaderRecallMark();
        -[GEODirectionsFeedback _addNoFlagsStepFeedback:](a1, v52);
        goto LABEL_67;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 0x40) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v52 = objc_alloc_init(GEOTrafficRerouteFeedback);
        if (!GEOTrafficRerouteFeedbackReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
          goto LABEL_97;
        PBReaderRecallMark();
        -[GEODirectionsFeedback _addNoFlagsTrafficRerouteFeedback:](a1, v52);
        goto LABEL_67;
      case 5:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 2) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v52 = objc_alloc_init(GEOAlightNotificationFeedback);
        if (!GEOAlightNotificationFeedbackReadAllFrom((uint64_t)v52, (void *)v3))
          goto LABEL_97;
        PBReaderRecallMark();
        -[GEODirectionsFeedback _addNoFlagsAlightNotificationFeedback:](a1, v52);
        goto LABEL_67;
      case 6:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 8) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v52 = objc_alloc_init(GEOGuidanceEventFeedback);
        if (!GEOGuidanceEventFeedbackReadAllFrom((uint64_t)v52, (void *)v3, v9 & 1))
          goto LABEL_97;
        PBReaderRecallMark();
        -[GEODirectionsFeedback _addNoFlagsGuidanceFeedback:](a1, v52);
        goto LABEL_67;
      case 7:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v52 = objc_alloc_init(GEOModality);
        if (GEOModalityReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEODirectionsFeedback _addNoFlagsModality:](a1, v52);
LABEL_67:

LABEL_68:
          v15 = v53;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_86;
          continue;
        }
LABEL_97:

LABEL_98:
        v47 = 0;
        v15 = v53;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
        *(_BYTE *)(a1 + 80) |= 4u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        *(_BYTE *)(a1 + 80) |= 0x40u;
        *(_BYTE *)(a1 + 80) |= 2u;
        *(_BYTE *)(a1 + 80) |= 8u;
        *(_BYTE *)(a1 + 80) |= 0x10u;
        if ((v47 & 1) != 0)
        {
LABEL_100:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_101;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_101:
            v50 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 8:
        if ((v8 & 1) != 0)
        {
          v39 = 0;
          v40 = 0;
          v41 = 0;
          *(_BYTE *)(a1 + 80) |= 1u;
          while (1)
          {
            v42 = *v17;
            v43 = *(_QWORD *)(v3 + v42);
            v44 = v43 + 1;
            if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
              break;
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if ((v45 & 0x80) == 0)
              goto LABEL_81;
            v39 += 7;
            v27 = v40++ >= 9;
            if (v27)
            {
              v41 = 0;
              goto LABEL_83;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_81:
          if (*(_BYTE *)(v3 + *v18))
            v41 = 0;
LABEL_83:
          *(_BYTE *)(a1 + 76) = v41 != 0;
        }
        else
        {
LABEL_77:
          v46 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v53;
          if ((v46 & 1) == 0)
          {
LABEL_96:
            v47 = 0;
            goto LABEL_99;
          }
        }
        goto LABEL_78;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v53;
        if (!v38)
          goto LABEL_96;
        goto LABEL_78;
    }
  }
}

void sub_1892382A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892385D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189238908(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189238C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189238F68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18923A11C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEODirectionsFeedbackCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v44;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v44 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v43 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
    }
    while (v4);
  }

  v41 = 0u;
  v42 = 0u;
  v39 = 0u;
  v40 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v40;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v40 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v39 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
    }
    while (v9);
  }

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v12 = a1[2];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v36;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v36 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
    }
    while (v14);
  }

  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v17 = a1[4];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v32;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v32 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v31 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
    }
    while (v19);
  }

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v22 = a1[5];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v28;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v28 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v26++), "readAll:", 1, (_QWORD)v27);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
    }
    while (v24);
  }

}

unint64_t GEODirectionsFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODirectionsFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODirectionsFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODirectionsFeedbackReadAllFrom_initialTag;
  Specified = GEODirectionsFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEODirectionsFeedbackCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18923A608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODirectionsFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18923A668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_54;
          goto LABEL_20;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStepFeedbackIsValid(a1))
            goto LABEL_54;
          goto LABEL_41;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficRerouteFeedbackIsValid(a1))
            goto LABEL_54;
          goto LABEL_41;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAlightNotificationFeedbackIsValid(a1))
            goto LABEL_54;
          goto LABEL_41;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventFeedbackIsValid(a1))
            goto LABEL_54;
          goto LABEL_41;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOModalityIsValid(a1))
            goto LABEL_54;
LABEL_41:
          PBReaderRecallMark();
          continue;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v17 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_42;
      }
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOStepFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  _BOOL8 v72;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 2u:
        case 0x11u:
          if (v16 != 1)
            goto LABEL_120;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_114;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_114;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 4u:
          if (v16 == 2)
            goto LABEL_116;
          goto LABEL_120;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 8u:
          if (v16 == 2)
            goto LABEL_116;
          goto LABEL_120;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOEVStepFeedbackInfoIsValid(a1))
            goto LABEL_120;
          PBReaderRecallMark();
          continue;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_113;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_117;
          }
        case 0xFu:
          if (v16 == 2)
            goto LABEL_116;
          goto LABEL_120;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_120;
          v67 = 0;
          break;
        case 0x12u:
          if (v16 == 2)
            goto LABEL_116;
          goto LABEL_120;
        default:
LABEL_116:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_120:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v68 = *v2;
        v69 = *(_QWORD *)&a1[v68];
        v70 = v69 + 1;
        if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
          break;
        v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
        *(_QWORD *)&a1[v68] = v70;
        if (v71 < 0)
        {
          v26 = v67++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_117;
      }
LABEL_113:
      v14 = *v4;
LABEL_114:
      a1[v14] = 1;
LABEL_117:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v72 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v72;
}

BOOL GEOTrafficRerouteFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  _BOOL8 v62;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_95;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_101;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_95;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_101;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_95;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_101;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_95;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_101;
          }
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1))
            goto LABEL_104;
          PBReaderRecallMark();
          continue;
        case 8u:
          if (v16 == 2)
            goto LABEL_100;
          goto LABEL_104;
        case 9u:
          if (v16 == 2)
            goto LABEL_100;
          goto LABEL_104;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_95;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_101;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_95;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_101;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_95;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_101;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_104;
          v57 = 0;
          break;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_100;
          goto LABEL_104;
        case 0xFu:
        case 0x11u:
          if (v16 != 1)
            goto LABEL_104;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_96;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_96;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0x10u:
          if (v16 == 2)
            goto LABEL_100;
          goto LABEL_104;
        default:
LABEL_100:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_104:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v58 = *v2;
        v59 = *(_QWORD *)&a1[v58];
        v60 = v59 + 1;
        if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
          break;
        v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
        *(_QWORD *)&a1[v58] = v60;
        if (v61 < 0)
        {
          v26 = v57++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_101;
      }
LABEL_95:
      v14 = *v4;
LABEL_96:
      a1[v14] = 1;
LABEL_101:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v62 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v62;
}

BOOL GEOGuidanceEventFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_79;
          goto LABEL_24;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_58;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_76;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_58;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_76;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_58;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_76;
          }
        case 5u:
        case 6u:
        case 7u:
        case 9u:
          if (v16 != 5)
            goto LABEL_79;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_59;
          v20 = v19 + 4;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_59;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_79;
          v37 = 0;
          break;
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSignGuidanceFeedbackIsValid(a1))
            goto LABEL_79;
          goto LABEL_75;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSpokenGuidanceFeedbackIsValid(a1))
            goto LABEL_79;
          goto LABEL_75;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOJunctionViewGuidanceFeedbackIsValid(a1))
            goto LABEL_79;
          goto LABEL_75;
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraInformationIsValid(a1))
            goto LABEL_79;
LABEL_75:
          PBReaderRecallMark();
          continue;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_79:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v26 = v37++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_76;
      }
LABEL_58:
      v14 = *v4;
LABEL_59:
      a1[v14] = 1;
LABEL_76:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

BOOL GEOModalityIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1)
            goto LABEL_54;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_50;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_50;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_51;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_54:
          v37 = 0;
          goto LABEL_53;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v26 = v32++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_51;
      }
LABEL_49:
      v14 = *v4;
LABEL_50:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_53:
  PBReaderRecallMark();
  return v37;
}

void sub_18923BF9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsFeedbackIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int8 *)(a1 + 80) > 1u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18923C8D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepFeedbackInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _BOOL8 v45;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryPercentage;
                goto LABEL_54;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryPercentage;
                goto LABEL_57;
              }
            }
            v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryPercentage;
            goto LABEL_55;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 4u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingTravelRange;
                goto LABEL_54;
              }
              v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
              *(_QWORD *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingTravelRange;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingTravelRange;
            goto LABEL_55;
          case 3u:
            v33 = 0;
            v34 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryCharge;
                goto LABEL_54;
              }
              v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
              *(_QWORD *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryCharge;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryCharge;
            goto LABEL_55;
          case 4u:
            v39 = 0;
            v40 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 8u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_65;
            continue;
        }
        while (1)
        {
          v41 = *v4;
          v42 = *(_QWORD *)&v3[v41];
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)&v3[*v5])
            break;
          v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v42);
          *(_QWORD *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__stateOfChargeDiff;
            goto LABEL_55;
          }
          v39 += 7;
          v25 = v40++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__stateOfChargeDiff;
            goto LABEL_57;
          }
        }
        v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__stateOfChargeDiff;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_57:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18923D99C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepFeedbackInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOEVStepFeedbackInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18923D9FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepFeedbackInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_18923E3AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOGuidanceEventFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  int v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  __int16 v73;
  uint64_t v74;
  char v75;
  int v76;
  __int16 v77;
  void *v78;
  GEOSignGuidanceFeedback *v80;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 100)), (uint16x4_t)0xFFF8FFF5FFF7FFF6) & 0xFF01FF01FF01FF01))+ ((*(_WORD *)(a1 + 100) >> 12) & 1));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_154;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_154:
      if ((v12 & 1) != 0)
      {
        v75 = 1;
        goto LABEL_156;
      }
      if (v13)
      {
        while (1)
        {
          v76 = *v13++;
          v77 = 512;
          switch(v76)
          {
            case 0:
              goto LABEL_166;
            case 1:
              goto LABEL_165;
            case 10:
              v77 = 1024;
              goto LABEL_165;
            case 11:
              v77 = 2048;
              goto LABEL_165;
            case 12:
              v77 = 256;
              goto LABEL_165;
            case 13:
              v77 = 4096;
LABEL_165:
              *(_WORD *)(a1 + 100) |= v77;
              break;
            default:
              continue;
          }
        }
      }
LABEL_166:
      v3 = *(_BYTE *)(v3 + *v15) == 0;
      if ((v12 & 1) != 0)
        goto LABEL_167;
      return v3;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 100) & 0x200) == 0)
        {
          PBReaderReadData();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v33;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_171;
        v73 = *(_WORD *)(a1 + 100) << 6;
        goto LABEL_142;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          v39 = *v14;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v40);
            *(_QWORD *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v24 = v37++ >= 9;
              if (v24)
              {
                LODWORD(v38) = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v38) = 0;
LABEL_118:
        v72 = 84;
        goto LABEL_131;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v43 = 0;
        v44 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          v45 = *v14;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v24 = v44++ >= 9;
              if (v24)
              {
                LODWORD(v38) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v38) = 0;
LABEL_122:
        v72 = 76;
        goto LABEL_131;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v49 = 0;
        v50 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          v51 = *v14;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v38 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v24 = v50++ >= 9;
              if (v24)
              {
                LODWORD(v38) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v38) = 0;
LABEL_126:
        v72 = 80;
        goto LABEL_131;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        *(_WORD *)(a1 + 100) |= 1u;
        v55 = *v14;
        v56 = *(_QWORD *)(v3 + v55);
        if (v56 <= 0xFFFFFFFFFFFFFFFBLL && v56 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v57 = *(_DWORD *)(*(_QWORD *)(v3 + *v16) + v56);
          *(_QWORD *)(v3 + v55) = v56 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v57 = 0;
        }
        v74 = 68;
        goto LABEL_152;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        *(_WORD *)(a1 + 100) |= 0x20u;
        v58 = *v14;
        v59 = *(_QWORD *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v57 = *(_DWORD *)(*(_QWORD *)(v3 + *v16) + v59);
          *(_QWORD *)(v3 + v58) = v59 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v57 = 0;
        }
        v74 = 88;
        goto LABEL_152;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        *(_WORD *)(a1 + 100) |= 0x80u;
        v60 = *v14;
        v61 = *(_QWORD *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v57 = *(_DWORD *)(*(_QWORD *)(v3 + *v16) + v61);
          *(_QWORD *)(v3 + v60) = v61 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v57 = 0;
        }
        v74 = 96;
        goto LABEL_152;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v62 = 0;
        v63 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 100) |= 0x40u;
        while (2)
        {
          v64 = *v14;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v38 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v24 = v63++ >= 9;
              if (v24)
              {
                LODWORD(v38) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v38) = 0;
LABEL_130:
        v72 = 92;
LABEL_131:
        *(_DWORD *)(a1 + v72) = v38;
        goto LABEL_153;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        *(_WORD *)(a1 + 100) |= 2u;
        v68 = *v14;
        v69 = *(_QWORD *)(v3 + v68);
        if (v69 <= 0xFFFFFFFFFFFFFFFBLL && v69 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v57 = *(_DWORD *)(*(_QWORD *)(v3 + *v16) + v69);
          *(_QWORD *)(v3 + v68) = v69 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v57 = 0;
        }
        v74 = 72;
LABEL_152:
        *(_DWORD *)(a1 + v74) = v57;
        goto LABEL_153;
      case 10:
        if (!v28)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 100) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v73 = 32 * *(_WORD *)(a1 + 100);
          goto LABEL_142;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v80 = objc_alloc_init(GEOSignGuidanceFeedback);
        if (!GEOSignGuidanceFeedbackReadAllFrom((uint64_t)v80, (void *)v3))
          goto LABEL_170;
        PBReaderRecallMark();
        v70 = 32;
        goto LABEL_111;
      case 11:
        if (!v28)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 100) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v73 = 16 * *(_WORD *)(a1 + 100);
          goto LABEL_142;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v80 = objc_alloc_init(GEOSpokenGuidanceFeedback);
        if (!GEOSpokenGuidanceFeedbackReadAllFrom((uint64_t)v80, (void *)v3))
          goto LABEL_170;
        PBReaderRecallMark();
        v70 = 40;
        goto LABEL_111;
      case 12:
        if (!v28)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 100) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v73 = *(_WORD *)(a1 + 100) << 7;
          goto LABEL_142;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v80 = objc_alloc_init(GEOJunctionViewGuidanceFeedback);
        if (!GEOJunctionViewGuidanceFeedbackReadAllFrom(v80, (void *)v3))
          goto LABEL_170;
        PBReaderRecallMark();
        v70 = 16;
        goto LABEL_111;
      case 13:
        if (!v28)
        {
LABEL_113:
          v71 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v71 & 1) == 0)
          {
LABEL_169:
            v75 = 0;
            goto LABEL_156;
          }
          goto LABEL_153;
        }
        if ((*(_WORD *)(a1 + 100) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_171;
          v73 = 8 * *(_WORD *)(a1 + 100);
LABEL_142:
          v7 += v73 >> 15;
LABEL_143:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_153:
          if (!(v12 & 1 | (v7 != 0)))
            goto LABEL_154;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_171;
        v80 = objc_alloc_init(GEOTrafficCameraInformation);
        if (GEOTrafficCameraInformationReadAllFrom((uint64_t)v80, (void *)v3))
        {
          PBReaderRecallMark();
          v70 = 48;
LABEL_111:
          v34 = *(void **)(a1 + v70);
          *(_QWORD *)(a1 + v70) = v80;
LABEL_112:

          --v7;
          goto LABEL_143;
        }
LABEL_170:

LABEL_171:
        v75 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_156:
        *(_WORD *)(a1 + 100) |= 0x200u;
        *(_WORD *)(a1 + 100) |= 0x400u;
        *(_WORD *)(a1 + 100) |= 0x800u;
        *(_WORD *)(a1 + 100) |= 0x100u;
        *(_WORD *)(a1 + 100) |= 0x1000u;
        if ((v75 & 1) != 0)
          goto LABEL_166;
        v3 = 0;
        if ((v12 & 1) == 0)
          return v3;
LABEL_167:
        v78 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v35 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v35)
          goto LABEL_169;
        goto LABEL_153;
    }
  }
}

void sub_18923F4C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18923F608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18923F748(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18923F888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18924054C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOGuidanceEventFeedbackCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOGuidanceEventFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOGuidanceEventFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOGuidanceEventFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOGuidanceEventFeedbackReadAllFrom_initialTag;
  Specified = GEOGuidanceEventFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOGuidanceEventFeedbackCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189240740(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOGuidanceEventFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOGuidanceEventFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892407A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSignGuidanceFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOSpokenGuidanceFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraInformationIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOJunctionViewGuidanceFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOTrafficCameraInformationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_189241348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGuidanceEventFeedbackIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_WORD *)(a1 + 100) & 0x3F00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18924192C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionViewGuidanceFeedbackReadAllFrom(_BYTE *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *v25;
  _BOOL8 v26;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadData();
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          if (v25)
            objc_msgSend(a1, "addImageID:", v25);

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          a1[20] |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            v20 = 0;
LABEL_36:
          a1[16] = v20 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_39;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_189242A24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionViewGuidanceFeedbackReadFrom(_BYTE *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOJunctionViewGuidanceFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189242A84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189243254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOPlaceActionDetails *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  char v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v54 = (v15 == 0) | v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_78;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_78:
      if ((v16 & 1) != 0)
      {
        v48 = 1;
        goto LABEL_89;
      }
      if (v15)
      {
        while (1)
        {
          v49 = *v15++;
          v50 = 2;
          switch(v49)
          {
            case 0:
              goto LABEL_90;
            case 2:
              goto LABEL_84;
            case 3:
              v50 = 8;
              goto LABEL_84;
            case 4:
              v50 = 4;
LABEL_84:
              *(_BYTE *)(a1 + 60) |= v50;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_90;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v54 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_63;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_66;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            v38 = 0;
            goto LABEL_68;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_66:
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_68:
        *(_QWORD *)(a1 + 32) = v38;
        goto LABEL_77;
      case 2:
        if (!v31)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_86;
          v47 = *(_BYTE *)(a1 + 60) << 6;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v53 = (int)v16;
        v16 = objc_alloc_init(GEOAddress);
        if (!GEOAddressReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_87;
        PBReaderRecallMark();
        v44 = 16;
        goto LABEL_62;
      case 3:
        if (!v31)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_86;
          v47 = 16 * *(_BYTE *)(a1 + 60);
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v53 = (int)v16;
        v16 = objc_alloc_init(GEOPlaceActionDetails);
        if (!GEOPlaceActionDetailsReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_87;
        PBReaderRecallMark();
        v44 = 40;
        goto LABEL_62;
      case 4:
        if (!v31)
        {
LABEL_63:
          v46 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
LABEL_85:
            v48 = 0;
            goto LABEL_89;
          }
LABEL_77:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_78;
          continue;
        }
        if ((*(_BYTE *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_86:
            v48 = 0;
            goto LABEL_88;
          }
          v47 = 32 * *(_BYTE *)(a1 + 60);
LABEL_75:
          v7 += v47 >> 7;
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v53 = (int)v16;
        v16 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          v44 = 24;
LABEL_62:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v16;

          --v7;
          LODWORD(v16) = v53;
LABEL_76:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_77;
        }
LABEL_87:

        v48 = 0;
        LOBYTE(v16) = v53;
LABEL_88:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_89:
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 4u;
        if ((v48 & 1) != 0)
        {
LABEL_90:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_91;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_91:
            v51 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_85;
        goto LABEL_77;
    }
  }
}

void sub_1892439B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189243AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892440C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOMapsSearchResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOMapsSearchResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOMapsSearchResultReadAllFrom_initialTag;
  Specified = GEOMapsSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189244288(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsSearchResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOMapsSearchResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1892442E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapsSearchResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_41;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_41;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1))
            goto LABEL_46;
          goto LABEL_40;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceActionDetailsIsValid(a1))
            goto LABEL_46;
          goto LABEL_40;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_46;
LABEL_40:
          PBReaderRecallMark();
          goto LABEL_41;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_41:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          break;
      }
    }
  }
LABEL_44:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPlaceActionDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_71;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_87;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_71;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_87;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_71;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_87;
          }
        case 5u:
          if (v16 != 1)
            goto LABEL_90;
          v34 = *v2;
          v35 = *(_QWORD *)&a1[v34];
          if (v35 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_72;
          v36 = v35 + 8;
          if (v36 > *(_QWORD *)&a1[*v3])
            goto LABEL_72;
          *(_QWORD *)&a1[v34] = v36;
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_71;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v23 = v37++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_87;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_71;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v23 = v42++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_87;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v47 = 0;
          break;
        case 9u:
          if (v16 == 2)
            goto LABEL_86;
          goto LABEL_90;
        case 0xAu:
          if (v16 == 2)
            goto LABEL_86;
          goto LABEL_90;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitPlaceCardIsValid(a1))
            goto LABEL_90;
          PBReaderRecallMark();
          continue;
        case 0xCu:
          if (v16 == 2)
            goto LABEL_86;
          goto LABEL_90;
        case 0xDu:
          if (v16 == 2)
            goto LABEL_86;
          goto LABEL_90;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_86;
          goto LABEL_90;
        default:
LABEL_86:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_90:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v48 = *v2;
        v49 = *(_QWORD *)&a1[v48];
        v50 = v49 + 1;
        if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
          break;
        v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
        *(_QWORD *)&a1[v48] = v50;
        if (v51 < 0)
        {
          v23 = v47++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_87;
      }
LABEL_71:
      v14 = *v4;
LABEL_72:
      a1[v14] = 1;
LABEL_87:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

void sub_189244BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOMapsSearchResultIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEOAddressIsDirty(*(_QWORD *)(a1 + 16)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 60);
  }
  if ((v2 & 8) != 0)
  {
    if ((GEOPlaceActionDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOMapsSearchResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOMapsSearchResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189244F80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892453E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsServerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOMapsSearchResult *v38;
  int v39;
  char v40;
  char v41;
  int v42;
  char v43;
  void *v44;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        v19 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_60;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_60:
      if ((v14 & 1) != 0)
      {
        v41 = 1;
        goto LABEL_71;
      }
      if (v15)
      {
        while (1)
        {
          v42 = *v15++;
          v43 = 4;
          switch(v42)
          {
            case 0:
              goto LABEL_72;
            case 1:
              goto LABEL_66;
            case 2:
              v43 = 2;
              goto LABEL_66;
            case 3:
              v43 = 1;
LABEL_66:
              *(_BYTE *)(a1 + v19[770]) |= v43;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_72;
    }
    v30 = v22 >> 3;
    v31 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
      break;
    if ((_DWORD)v30 == 2)
    {
      if (v31 && (*(_BYTE *)(a1 + v19[770]) & 2) == 0)
      {
        PBReaderReadData();
        v38 = (GEOMapsSearchResult *)objc_claimAutoreleasedReturnValue();
        if (v38)
          -[GEOMapsServerMetadata _addNoFlagsSuggestionEntryMetadataDisplayed:](a1, v38);
        goto LABEL_51;
      }
    }
    else
    {
      if ((_DWORD)v30 != 1)
      {
        v39 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v39)
          goto LABEL_67;
        goto LABEL_59;
      }
      if (v31)
      {
        if ((*(_BYTE *)(a1 + v19[770]) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_68:
            v41 = 0;
            goto LABEL_70;
          }
          v8 += *(unsigned __int8 *)(a1 + v19[770]) << 29 >> 31;
        }
        else
        {
          PBReaderReadData();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v36;

          --v8;
        }
        goto LABEL_58;
      }
    }
LABEL_54:
    v40 = PBReaderSkipValueWithTag();
    v17 = (int *)MEMORY[0x1E0D82BC8];
    if ((v40 & 1) == 0)
    {
LABEL_67:
      v41 = 0;
      goto LABEL_71;
    }
LABEL_59:
    if (!(v14 & 1 | (v8 != 0)))
      goto LABEL_60;
  }
  if (!v31 || (*(_BYTE *)(a1 + v19[770]) & 1) != 0)
    goto LABEL_54;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_68;
  v38 = objc_alloc_init(GEOMapsSearchResult);
  if (GEOMapsSearchResultReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOMapsServerMetadata _addNoFlagsMapsSearchResult:](a1, v38);
LABEL_51:

    v19 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_58:
    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_59;
  }

  v41 = 0;
  v19 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_70:
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
  *(_BYTE *)(a1 + v19[770]) |= 4u;
  *(_BYTE *)(a1 + v19[770]) |= 2u;
  *(_BYTE *)(a1 + v19[770]) |= 1u;
  if ((v41 & 1) != 0)
  {
LABEL_72:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_73;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_73:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1892459C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189245CF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18924678C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOMapsServerMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOMapsServerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOMapsServerMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOMapsServerMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOMapsServerMetadataReadAllFrom_initialTag;
  Specified = GEOMapsServerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOMapsServerMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189246A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsServerMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOMapsServerMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189246A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapsServerMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapsSearchResultIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if (v15 != 2)
            goto LABEL_31;
        }
        else if ((_DWORD)v17 == 1 && v15 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_31;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_189246F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOMapsServerMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xF) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOMapsSearchResultIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOMapsServerMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOMapsServerMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189247614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOModalityReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  BOOL v42;
  uint64_t v43;
  _BOOL8 v44;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 24) |= 1u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            *(_QWORD *)(a1 + 8) = v20;
            continue;
          case 2u:
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 24) |= 4u;
            while (1)
            {
              v24 = *v4;
              v25 = *(_QWORD *)&v3[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
                break;
              v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
              *(_QWORD *)&v3[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0)
                goto LABEL_47;
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                v23 = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6])
              v23 = 0;
LABEL_49:
            v42 = v23 != 0;
            v43 = 20;
            goto LABEL_54;
          case 3u:
            v28 = 0;
            v29 = 0;
            v30 = 0;
            *(_BYTE *)(a1 + 24) |= 8u;
            while (2)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
                *(_QWORD *)&v3[v31] = v33;
                v30 |= (unint64_t)(v34 & 0x7F) << v28;
                if (v34 < 0)
                {
                  v28 += 7;
                  v15 = v29++ >= 9;
                  if (v15)
                  {
                    v30 = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v30 = 0;
LABEL_53:
            v42 = v30 != 0;
            v43 = 21;
LABEL_54:
            *(_BYTE *)(a1 + v43) = v42;
            continue;
          case 4u:
            v35 = 0;
            v36 = 0;
            v37 = 0;
            *(_BYTE *)(a1 + 24) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_63;
            continue;
        }
        while (1)
        {
          v38 = *v4;
          v39 = *(_QWORD *)&v3[v38];
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)&v3[*v5])
            break;
          v41 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v39);
          *(_QWORD *)&v3[v38] = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_56;
          v35 += 7;
          v15 = v36++ >= 9;
          if (v15)
          {
            LODWORD(v37) = 0;
            goto LABEL_58;
          }
        }
        v3[*v6] = 1;
LABEL_56:
        if (v3[*v6])
          LODWORD(v37) = 0;
LABEL_58:
        *(_DWORD *)(a1 + 16) = v37;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v44 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    v44 = 0;
  }
  objc_sync_exit(v3);

  return v44;
}

void sub_1892484B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOModalityReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOModalityReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189248514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEONavigationAudioFeedbackDescription(unsigned __int8 *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEONavigationAudioFeedbackDictionaryRepresentation(a1, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEONavigationAudioFeedback<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id GEONavigationAudioFeedbackDictionaryRepresentation(unsigned __int8 *a1)
{
  return _GEONavigationAudioFeedbackDictionaryRepresentation(a1, 0);
}

id _GEONavigationAudioFeedbackDictionaryRepresentation(unsigned __int8 *a1, int a2)
{
  void *v4;
  int v5;
  void *v6;
  void *v8;
  const __CFString *v9;
  void *v10;
  const __CFString *v11;
  void *v12;
  unsigned int v13;
  __CFString *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", *a1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (a2)
      v9 = CFSTR("bTHFPAvailableAtEndOfNav");
    else
      v9 = CFSTR("BTHFPAvailableAtEndOfNav");
    objc_msgSend(v4, "setObject:forKey:", v8, v9);

    v5 = *((_DWORD *)a1 + 10);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[1]);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (a2)
    v11 = CFSTR("bTHFPRoutesAvailable");
  else
    v11 = CFSTR("BTHFPRoutesAvailable");
  objc_msgSend(v4, "setObject:forKey:", v10, v11);

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_30;
  }
LABEL_29:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[2]);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v12, CFSTR("currentRouteHFPEnabledAtEndOfNav"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_34;
  }
LABEL_30:
  v13 = *((_DWORD *)a1 + 1) - 1;
  if (v13 >= 3)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), *((unsigned int *)a1 + 1));
    v14 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v14 = off_1E1C0CB40[v13];
  }
  objc_msgSend(v4, "setObject:forKey:", v14, CFSTR("currentRouteTypeAtEndOfNav"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_35;
  }
LABEL_34:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[8]);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v15, CFSTR("everManuallyChangedRoute"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_36;
  }
LABEL_35:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[9]);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v16, CFSTR("everManuallyEnabledHFPRoute"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_37;
  }
LABEL_36:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[10]);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v17, CFSTR("everViewedAudioSheet"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_38;
  }
LABEL_37:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[11]);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v18, CFSTR("everViewedAudioSheetBTAny"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_39;
  }
LABEL_38:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[12]);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v19, CFSTR("everViewedAudioSheetBTHFP"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_40;
  }
LABEL_39:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *((unsigned int *)a1 + 4));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v20, CFSTR("manuallyChangedRouteCount"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_41;
  }
LABEL_40:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *((unsigned int *)a1 + 5));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v21, CFSTR("manuallyDisabledHFPCount"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_42;
  }
LABEL_41:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *((unsigned int *)a1 + 6));
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v22, CFSTR("manuallyEnabledHFPCount"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_43;
  }
LABEL_42:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[28]);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v23, CFSTR("pauseSpokenAudioEnabled"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_44;
  }
LABEL_43:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *((unsigned int *)a1 + 8));
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v24, CFSTR("spokenPromptsCount"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_45;
  }
LABEL_44:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[36]);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v25, CFSTR("viewedAudioSheet"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0)
      goto LABEL_18;
LABEL_46:
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[38]);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKey:", v27, CFSTR("viewedAudioSheetBTHFP"));

    if ((*((_DWORD *)a1 + 10) & 0x20000) == 0)
      return v4;
    goto LABEL_19;
  }
LABEL_45:
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[37]);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v26, CFSTR("viewedAudioSheetBTAny"));

  v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x10000) != 0)
    goto LABEL_46;
LABEL_18:
  if ((v5 & 0x20000) != 0)
  {
LABEL_19:
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a1[39]);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKey:", v6, CFSTR("wirelessRoutesAvailable"));

  }
  return v4;
}

id GEONavigationAudioFeedbackJSONRepresentation(unsigned __int8 *a1)
{
  return _GEONavigationAudioFeedbackDictionaryRepresentation(a1, 1);
}

void GEONavigationAudioFeedbackFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  _GEONavigationAudioFeedbackFromDictionaryRepresentation(a1, a2, 0);
}

void _GEONavigationAudioFeedbackFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  const __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  const __CFString *v20;
  void *v21;
  void *v22;
  id v23;
  int v24;
  void *v25;
  void *v26;
  id v27;

  v27 = a1;
  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("everViewedAudioSheet"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x40u;
    *(_BYTE *)(a2 + 10) = objc_msgSend(v5, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("everViewedAudioSheetBTAny"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x80u;
    *(_BYTE *)(a2 + 11) = objc_msgSend(v6, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("everViewedAudioSheetBTHFP"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x100u;
    *(_BYTE *)(a2 + 12) = objc_msgSend(v7, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("everManuallyChangedRoute"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x10u;
    *(_BYTE *)(a2 + 8) = objc_msgSend(v8, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("everManuallyEnabledHFPRoute"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x20u;
    *(_BYTE *)(a2 + 9) = objc_msgSend(v9, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("spokenPromptsCount"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x2000u;
    *(_DWORD *)(a2 + 32) = objc_msgSend(v10, "unsignedIntValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("wirelessRoutesAvailable"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x20000u;
    *(_BYTE *)(a2 + 39) = objc_msgSend(v11, "BOOLValue");
  }

  if (a3)
    v12 = CFSTR("bTHFPRoutesAvailable");
  else
    v12 = CFSTR("BTHFPRoutesAvailable");
  objc_msgSend(v27, "objectForKeyedSubscript:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 2u;
    *(_BYTE *)(a2 + 1) = objc_msgSend(v13, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("viewedAudioSheet"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x4000u;
    *(_BYTE *)(a2 + 36) = objc_msgSend(v14, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("viewedAudioSheetBTAny"));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x8000u;
    *(_BYTE *)(a2 + 37) = objc_msgSend(v15, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("viewedAudioSheetBTHFP"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x10000u;
    *(_BYTE *)(a2 + 38) = objc_msgSend(v16, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("manuallyChangedRouteCount"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x200u;
    *(_DWORD *)(a2 + 16) = objc_msgSend(v17, "unsignedIntValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("manuallyEnabledHFPCount"));
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x800u;
    *(_DWORD *)(a2 + 24) = objc_msgSend(v18, "unsignedIntValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("manuallyDisabledHFPCount"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x400u;
    *(_DWORD *)(a2 + 20) = objc_msgSend(v19, "unsignedIntValue");
  }

  if (a3)
    v20 = CFSTR("bTHFPAvailableAtEndOfNav");
  else
    v20 = CFSTR("BTHFPAvailableAtEndOfNav");
  objc_msgSend(v27, "objectForKeyedSubscript:", v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 1u;
    *(_BYTE *)a2 = objc_msgSend(v21, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("currentRouteTypeAtEndOfNav"));
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 8u;
    v23 = v22;
    if ((objc_msgSend(v23, "isEqualToString:", CFSTR("AUDIO_DEVICE_TYPE_BT_HFP_ONLY")) & 1) != 0)
    {
      v24 = 1;
    }
    else if ((objc_msgSend(v23, "isEqualToString:", CFSTR("AUDIO_DEVICE_TYPE_BT_COMBO")) & 1) != 0)
    {
      v24 = 2;
    }
    else if (objc_msgSend(v23, "isEqualToString:", CFSTR("AUDIO_DEVICE_TYPE_OTHER")))
    {
      v24 = 3;
    }
    else
    {
      v24 = 1;
    }

  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_49;
    v24 = objc_msgSend(v22, "intValue");
  }
  *(_DWORD *)(a2 + 4) = v24;
LABEL_49:

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("currentRouteHFPEnabledAtEndOfNav"));
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 4u;
    *(_BYTE *)(a2 + 2) = objc_msgSend(v25, "BOOLValue");
  }

  objc_msgSend(v27, "objectForKeyedSubscript:", CFSTR("pauseSpokenAudioEnabled"));
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_DWORD *)(a2 + 40) |= 0x1000u;
    *(_BYTE *)(a2 + 28) = objc_msgSend(v26, "BOOLValue");
  }

}

void GEONavigationAudioFeedbackFromJSONRepresentation(void *a1, uint64_t a2)
{
  _GEONavigationAudioFeedbackFromDictionaryRepresentation(a1, a2, 1);
}

uint64_t GEONavigationAudioFeedbackReadFrom(uint64_t a1, uint64_t a2)
{
  return GEONavigationAudioFeedbackReadAllFrom(a1, a2);
}

uint64_t GEONavigationAudioFeedbackReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  char v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char v144;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_DWORD *)(a1 + 40) |= 0x40u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_148;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_150;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_148:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_150:
          *(_BYTE *)(a1 + 10) = v20 != 0;
          continue;
        case 2u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_DWORD *)(a1 + 40) |= 0x80u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v31;
              v28 |= (unint64_t)(v32 & 0x7F) << v26;
              if (v32 < 0)
              {
                v26 += 7;
                v15 = v27++ >= 9;
                if (v15)
                {
                  v28 = 0;
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v28 = 0;
LABEL_154:
          *(_BYTE *)(a1 + 11) = v28 != 0;
          continue;
        case 3u:
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_DWORD *)(a1 + 40) |= 0x100u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if (v39 < 0)
              {
                v33 += 7;
                v15 = v34++ >= 9;
                if (v15)
                {
                  v35 = 0;
                  goto LABEL_158;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v35 = 0;
LABEL_158:
          *(_BYTE *)(a1 + 12) = v35 != 0;
          continue;
        case 4u:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          *(_DWORD *)(a1 + 40) |= 0x10u;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                v15 = v41++ >= 9;
                if (v15)
                {
                  v42 = 0;
                  goto LABEL_162;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
LABEL_162:
          *(_BYTE *)(a1 + 8) = v42 != 0;
          continue;
        case 5u:
          v47 = 0;
          v48 = 0;
          v49 = 0;
          *(_DWORD *)(a1 + 40) |= 0x20u;
          while (2)
          {
            v50 = *v3;
            v51 = *(_QWORD *)(a2 + v50);
            v52 = v51 + 1;
            if (v51 == -1 || v52 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
              *(_QWORD *)(a2 + v50) = v52;
              v49 |= (unint64_t)(v53 & 0x7F) << v47;
              if (v53 < 0)
              {
                v47 += 7;
                v15 = v48++ >= 9;
                if (v15)
                {
                  v49 = 0;
                  goto LABEL_166;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v49 = 0;
LABEL_166:
          *(_BYTE *)(a1 + 9) = v49 != 0;
          continue;
        case 6u:
          v54 = 0;
          v55 = 0;
          v56 = 0;
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          while (2)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            v59 = v58 + 1;
            if (v58 == -1 || v59 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
              *(_QWORD *)(a2 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                v15 = v55++ >= 9;
                if (v15)
                {
                  LODWORD(v56) = 0;
                  goto LABEL_170;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v56) = 0;
LABEL_170:
          *(_DWORD *)(a1 + 32) = v56;
          continue;
        case 7u:
          v61 = 0;
          v62 = 0;
          v63 = 0;
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          while (2)
          {
            v64 = *v3;
            v65 = *(_QWORD *)(a2 + v64);
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v65);
              *(_QWORD *)(a2 + v64) = v66;
              v63 |= (unint64_t)(v67 & 0x7F) << v61;
              if (v67 < 0)
              {
                v61 += 7;
                v15 = v62++ >= 9;
                if (v15)
                {
                  v63 = 0;
                  goto LABEL_174;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v63 = 0;
LABEL_174:
          *(_BYTE *)(a1 + 39) = v63 != 0;
          continue;
        case 8u:
          v68 = 0;
          v69 = 0;
          v70 = 0;
          *(_DWORD *)(a1 + 40) |= 2u;
          while (2)
          {
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
              *(_QWORD *)(a2 + v71) = v73;
              v70 |= (unint64_t)(v74 & 0x7F) << v68;
              if (v74 < 0)
              {
                v68 += 7;
                v15 = v69++ >= 9;
                if (v15)
                {
                  v70 = 0;
                  goto LABEL_178;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v70 = 0;
LABEL_178:
          *(_BYTE *)(a1 + 1) = v70 != 0;
          continue;
        case 9u:
          v75 = 0;
          v76 = 0;
          v77 = 0;
          *(_DWORD *)(a1 + 40) |= 0x4000u;
          while (2)
          {
            v78 = *v3;
            v79 = *(_QWORD *)(a2 + v78);
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v81 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
              *(_QWORD *)(a2 + v78) = v80;
              v77 |= (unint64_t)(v81 & 0x7F) << v75;
              if (v81 < 0)
              {
                v75 += 7;
                v15 = v76++ >= 9;
                if (v15)
                {
                  v77 = 0;
                  goto LABEL_182;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v77 = 0;
LABEL_182:
          *(_BYTE *)(a1 + 36) = v77 != 0;
          continue;
        case 0xAu:
          v82 = 0;
          v83 = 0;
          v84 = 0;
          *(_DWORD *)(a1 + 40) |= 0x8000u;
          while (2)
          {
            v85 = *v3;
            v86 = *(_QWORD *)(a2 + v85);
            v87 = v86 + 1;
            if (v86 == -1 || v87 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v88 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
              *(_QWORD *)(a2 + v85) = v87;
              v84 |= (unint64_t)(v88 & 0x7F) << v82;
              if (v88 < 0)
              {
                v82 += 7;
                v15 = v83++ >= 9;
                if (v15)
                {
                  v84 = 0;
                  goto LABEL_186;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v84 = 0;
LABEL_186:
          *(_BYTE *)(a1 + 37) = v84 != 0;
          continue;
        case 0xBu:
          v89 = 0;
          v90 = 0;
          v91 = 0;
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          while (2)
          {
            v92 = *v3;
            v93 = *(_QWORD *)(a2 + v92);
            v94 = v93 + 1;
            if (v93 == -1 || v94 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v95 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v93);
              *(_QWORD *)(a2 + v92) = v94;
              v91 |= (unint64_t)(v95 & 0x7F) << v89;
              if (v95 < 0)
              {
                v89 += 7;
                v15 = v90++ >= 9;
                if (v15)
                {
                  v91 = 0;
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v91 = 0;
LABEL_190:
          *(_BYTE *)(a1 + 38) = v91 != 0;
          continue;
        case 0xCu:
          v96 = 0;
          v97 = 0;
          v98 = 0;
          *(_DWORD *)(a1 + 40) |= 0x200u;
          while (2)
          {
            v99 = *v3;
            v100 = *(_QWORD *)(a2 + v99);
            v101 = v100 + 1;
            if (v100 == -1 || v101 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v100);
              *(_QWORD *)(a2 + v99) = v101;
              v98 |= (unint64_t)(v102 & 0x7F) << v96;
              if (v102 < 0)
              {
                v96 += 7;
                v15 = v97++ >= 9;
                if (v15)
                {
                  LODWORD(v98) = 0;
                  goto LABEL_194;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v98) = 0;
LABEL_194:
          *(_DWORD *)(a1 + 16) = v98;
          continue;
        case 0xDu:
          v103 = 0;
          v104 = 0;
          v105 = 0;
          *(_DWORD *)(a1 + 40) |= 0x800u;
          while (2)
          {
            v106 = *v3;
            v107 = *(_QWORD *)(a2 + v106);
            v108 = v107 + 1;
            if (v107 == -1 || v108 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v109 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
              *(_QWORD *)(a2 + v106) = v108;
              v105 |= (unint64_t)(v109 & 0x7F) << v103;
              if (v109 < 0)
              {
                v103 += 7;
                v15 = v104++ >= 9;
                if (v15)
                {
                  LODWORD(v105) = 0;
                  goto LABEL_198;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v105) = 0;
LABEL_198:
          *(_DWORD *)(a1 + 24) = v105;
          continue;
        case 0xEu:
          v110 = 0;
          v111 = 0;
          v112 = 0;
          *(_DWORD *)(a1 + 40) |= 0x400u;
          while (2)
          {
            v113 = *v3;
            v114 = *(_QWORD *)(a2 + v113);
            v115 = v114 + 1;
            if (v114 == -1 || v115 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v116 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v114);
              *(_QWORD *)(a2 + v113) = v115;
              v112 |= (unint64_t)(v116 & 0x7F) << v110;
              if (v116 < 0)
              {
                v110 += 7;
                v15 = v111++ >= 9;
                if (v15)
                {
                  LODWORD(v112) = 0;
                  goto LABEL_202;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v112) = 0;
LABEL_202:
          *(_DWORD *)(a1 + 20) = v112;
          continue;
        case 0xFu:
          v117 = 0;
          v118 = 0;
          v119 = 0;
          *(_DWORD *)(a1 + 40) |= 1u;
          while (2)
          {
            v120 = *v3;
            v121 = *(_QWORD *)(a2 + v120);
            v122 = v121 + 1;
            if (v121 == -1 || v122 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v121);
              *(_QWORD *)(a2 + v120) = v122;
              v119 |= (unint64_t)(v123 & 0x7F) << v117;
              if (v123 < 0)
              {
                v117 += 7;
                v15 = v118++ >= 9;
                if (v15)
                {
                  v119 = 0;
                  goto LABEL_206;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v119 = 0;
LABEL_206:
          *(_BYTE *)a1 = v119 != 0;
          continue;
        case 0x10u:
          v124 = 0;
          v125 = 0;
          v126 = 0;
          *(_DWORD *)(a1 + 40) |= 8u;
          while (2)
          {
            v127 = *v3;
            v128 = *(_QWORD *)(a2 + v127);
            v129 = v128 + 1;
            if (v128 == -1 || v129 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v130 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v128);
              *(_QWORD *)(a2 + v127) = v129;
              v126 |= (unint64_t)(v130 & 0x7F) << v124;
              if (v130 < 0)
              {
                v124 += 7;
                v15 = v125++ >= 9;
                if (v15)
                {
                  LODWORD(v126) = 0;
                  goto LABEL_210;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v126) = 0;
LABEL_210:
          *(_DWORD *)(a1 + 4) = v126;
          continue;
        case 0x11u:
          v131 = 0;
          v132 = 0;
          v133 = 0;
          *(_DWORD *)(a1 + 40) |= 4u;
          while (2)
          {
            v134 = *v3;
            v135 = *(_QWORD *)(a2 + v134);
            v136 = v135 + 1;
            if (v135 == -1 || v136 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v137 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v135);
              *(_QWORD *)(a2 + v134) = v136;
              v133 |= (unint64_t)(v137 & 0x7F) << v131;
              if (v137 < 0)
              {
                v131 += 7;
                v15 = v132++ >= 9;
                if (v15)
                {
                  v133 = 0;
                  goto LABEL_214;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v133 = 0;
LABEL_214:
          *(_BYTE *)(a1 + 2) = v133 != 0;
          continue;
        case 0x12u:
          v138 = 0;
          v139 = 0;
          v140 = 0;
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v141 = *v3;
        v142 = *(_QWORD *)(a2 + v141);
        v143 = v142 + 1;
        if (v142 == -1 || v143 > *(_QWORD *)(a2 + *v4))
          break;
        v144 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
        *(_QWORD *)(a2 + v141) = v143;
        v140 |= (unint64_t)(v144 & 0x7F) << v138;
        if ((v144 & 0x80) == 0)
          goto LABEL_216;
        v138 += 7;
        v15 = v139++ >= 9;
        if (v15)
        {
          v140 = 0;
          goto LABEL_218;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_216:
      if (*(_BYTE *)(a2 + *v5))
        v140 = 0;
LABEL_218:
      *(_BYTE *)(a1 + 28) = v140 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t GEONavigationAudioFeedbackWriteTo(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = result;
  v2 = *(_DWORD *)(result + 40);
  if ((v2 & 0x40) != 0)
  {
    result = PBDataWriterWriteBOOLField();
    v2 = *(_DWORD *)(v1 + 40);
    if ((v2 & 0x80) == 0)
    {
LABEL_3:
      if ((v2 & 0x100) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x100) == 0)
  {
LABEL_4:
    if ((v2 & 0x10) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_5:
    if ((v2 & 0x20) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_6:
    if ((v2 & 0x2000) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x2000) == 0)
  {
LABEL_7:
    if ((v2 & 0x20000) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  result = PBDataWriterWriteUint32Field();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x20000) == 0)
  {
LABEL_8:
    if ((v2 & 2) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x8000) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x8000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10000) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x10000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x800) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  result = PBDataWriterWriteUint32Field();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x800) == 0)
  {
LABEL_14:
    if ((v2 & 0x400) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  result = PBDataWriterWriteUint32Field();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x400) == 0)
  {
LABEL_15:
    if ((v2 & 1) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  result = PBDataWriterWriteUint32Field();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 1) == 0)
  {
LABEL_16:
    if ((v2 & 8) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  result = PBDataWriterWriteBOOLField();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 8) == 0)
  {
LABEL_17:
    if ((v2 & 4) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  result = PBDataWriterWriteInt32Field();
  v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 4) == 0)
  {
LABEL_18:
    if ((v2 & 0x1000) == 0)
      return result;
    return PBDataWriterWriteBOOLField();
  }
LABEL_36:
  result = PBDataWriterWriteBOOLField();
  if ((*(_DWORD *)(v1 + 40) & 0x1000) != 0)
    return PBDataWriterWriteBOOLField();
  return result;
}

BOOL GEONavigationAudioFeedbackEquals(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x2CuLL) == 0;
}

uint64_t GEONavigationAudioFeedbackHash()
{
  return PBHashBytes();
}

uint64_t GEONavigationAudioFeedbackIsValid(void *a1)
{
  uint64_t AllFrom;
  _OWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  v5 = objc_msgSend(a1, "position");
  v6 = objc_msgSend(a1, "length");
  memset(v4, 0, 44);
  AllFrom = GEONavigationAudioFeedbackReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_18924AA24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceActionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  __int16 v84;
  char v85;
  int v86;
  __int16 v87;
  void *v88;
  GEOTransitPlaceCard *v90;
  char v91;
  char v92;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 124)), (uint16x4_t)0xFFF6FFF4FFF7FFF9), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 124)) & 1)+ ((*(_WORD *)(a1 + 124) >> 11) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v92 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v91 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_159;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_159:
      if ((v15 & 1) != 0)
      {
        v85 = 1;
        goto LABEL_161;
      }
      if (v16)
      {
        while (1)
        {
          v86 = *v16++;
          v87 = 512;
          switch(v86)
          {
            case 0:
              goto LABEL_172;
            case 9:
              goto LABEL_171;
            case 10:
              v87 = 128;
              goto LABEL_171;
            case 11:
              v87 = 4096;
              goto LABEL_171;
            case 12:
              v87 = 1024;
              goto LABEL_171;
            case 13:
              v87 = 256;
              goto LABEL_171;
            case 14:
              v87 = 2048;
LABEL_171:
              *(_WORD *)(a1 + 124) |= v87;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_172;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v92 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 124) |= 2u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_116;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            v38 = 0;
            goto LABEL_118;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_116:
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_118:
        v82 = 32;
        goto LABEL_140;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v43 = 0;
        v44 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 124) |= 4u;
        while (2)
        {
          v45 = *v17;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v27 = v44++ >= 9;
              if (v27)
              {
                v38 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_122:
        v82 = 56;
        goto LABEL_140;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_WORD *)(a1 + 124) |= 0x20u;
        while (2)
        {
          v52 = *v17;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v27 = v50++ >= 9;
              if (v27)
              {
                LODWORD(v51) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v51) = 0;
LABEL_126:
        v83 = 116;
        goto LABEL_131;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        *(_WORD *)(a1 + 124) |= 8u;
        v57 = *v17;
        v58 = *(_QWORD *)(v3 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFF7 && v58 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v59 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v58);
          *(_QWORD *)(v3 + v57) = v58 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v59 = 0;
        }
        *(_QWORD *)(a1 + 72) = v59;
        goto LABEL_155;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v60 = 0;
        v61 = 0;
        v51 = 0;
        *(_WORD *)(a1 + 124) |= 0x40u;
        while (2)
        {
          v62 = *v17;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v51 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v27 = v61++ >= 9;
              if (v27)
              {
                LODWORD(v51) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v51) = 0;
LABEL_130:
        v83 = 120;
LABEL_131:
        *(_DWORD *)(a1 + v83) = v51;
        goto LABEL_155;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v66 = 0;
        v67 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 124) |= 1u;
        while (2)
        {
          v68 = *v17;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v38 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v27 = v67++ >= 9;
              if (v27)
              {
                v38 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_135:
        v82 = 24;
        goto LABEL_140;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_113;
        v72 = 0;
        v73 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 124) |= 0x10u;
        while (2)
        {
          v74 = *v17;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v38 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v27 = v73++ >= 9;
              if (v27)
              {
                v38 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_139:
        v82 = 88;
LABEL_140:
        *(_QWORD *)(a1 + v82) = v38;
        goto LABEL_155;
      case 9:
        if (!v31)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 124) & 0x200) == 0)
        {
          PBReaderReadString();
          v78 = objc_claimAutoreleasedReturnValue();
          v79 = 48;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_177;
        v84 = *(_WORD *)(a1 + 124) << 6;
        goto LABEL_153;
      case 10:
        if (!v31)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 124) & 0x80) == 0)
        {
          PBReaderReadString();
          v78 = objc_claimAutoreleasedReturnValue();
          v79 = 16;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_177;
        v84 = *(_WORD *)(a1 + 124) << 8;
        goto LABEL_153;
      case 11:
        if (!v31)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 124) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_177;
          v84 = 8 * *(_WORD *)(a1 + 124);
LABEL_153:
          v7 += v84 >> 15;
LABEL_154:
          v15 = v91;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_155:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_159;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_177;
        v90 = objc_alloc_init(GEOTransitPlaceCard);
        if (GEOTransitPlaceCardReadAllFrom((uint64_t)v90, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v80 = *(void **)(a1 + 96);
          *(_QWORD *)(a1 + 96) = v90;
LABEL_112:

          --v7;
          goto LABEL_154;
        }

LABEL_177:
        v85 = 0;
        v15 = v91;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_161:
        *(_WORD *)(a1 + 124) |= 0x200u;
        *(_WORD *)(a1 + 124) |= 0x80u;
        *(_WORD *)(a1 + 124) |= 0x1000u;
        *(_WORD *)(a1 + 124) |= 0x400u;
        *(_WORD *)(a1 + 124) |= 0x100u;
        *(_WORD *)(a1 + 124) |= 0x800u;
        if ((v85 & 1) != 0)
        {
LABEL_172:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_173;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_173:
        v88 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 12:
        if (!v31)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 124) & 0x400) == 0)
        {
          PBReaderReadString();
          v78 = objc_claimAutoreleasedReturnValue();
          v79 = 64;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_177;
        v84 = 32 * *(_WORD *)(a1 + 124);
        goto LABEL_153;
      case 13:
        if (!v31)
          goto LABEL_113;
        if ((*(_WORD *)(a1 + 124) & 0x100) == 0)
        {
          PBReaderReadString();
          v78 = objc_claimAutoreleasedReturnValue();
          v79 = 40;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_177;
        v84 = *(_WORD *)(a1 + 124) << 7;
        goto LABEL_153;
      case 14:
        if (!v31)
        {
LABEL_113:
          v81 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v91;
          if ((v81 & 1) == 0)
          {
LABEL_175:
            v85 = 0;
            goto LABEL_161;
          }
          goto LABEL_155;
        }
        if ((*(_WORD *)(a1 + 124) & 0x800) == 0)
        {
          PBReaderReadString();
          v78 = objc_claimAutoreleasedReturnValue();
          v79 = 80;
LABEL_111:
          v80 = *(void **)(a1 + v79);
          *(_QWORD *)(a1 + v79) = v78;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_177;
        v84 = 16 * *(_WORD *)(a1 + 124);
        goto LABEL_153;
      default:
        v56 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v91;
        if (!v56)
          goto LABEL_175;
        goto LABEL_155;
    }
  }
}

void sub_18924B658(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18924B798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18924B8D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18924BA14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18924BB54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18924C5E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceActionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPlaceActionDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPlaceActionDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPlaceActionDetailsReadAllFrom_initialTag;
  Specified = GEOPlaceActionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 96), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_18924C784(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceActionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPlaceActionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18924C7E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitPlaceCardIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_40;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_35;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_35;
        case 2u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_40;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitDepartureSequenceUsageIsValid(a1))
            goto LABEL_40;
          PBReaderRecallMark();
          goto LABEL_35;
        case 4u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_40;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_40:
            PBReaderRecallMark();
            return 0;
          }
LABEL_35:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_38;
          break;
      }
    }
  }
LABEL_38:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18924CD34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPlaceActionDetailsIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v2 = *(unsigned __int16 *)(a1 + 124);
  if ((v2 & 0x2280) != 0)
    return 1;
  if ((v2 & 0x1000) != 0)
  {
    if ((GEOTransitPlaceCardIsDirty(*(os_unfair_lock_s **)(a1 + 96)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 124);
  }
  if ((v2 & 0x500) != 0)
    return 1;
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOPlaceActionDetailsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPlaceActionDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18924D368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  _BOOL8 v58;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 2u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_61;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_63:
            v55 = 16;
            goto LABEL_68;
          case 3u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 4u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_67:
            v55 = 20;
LABEL_68:
            *(_DWORD *)(a1 + v55) = v20;
            continue;
          case 4u:
            v31 = 0;
            v32 = 0;
            v33 = 0;
            *(_BYTE *)(a1 + 28) |= 0x10u;
            while (2)
            {
              v34 = *v4;
              v35 = *(_QWORD *)&v3[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v37 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v35);
                *(_QWORD *)&v3[v34] = v36;
                v33 |= (unint64_t)(v37 & 0x7F) << v31;
                if (v37 < 0)
                {
                  v31 += 7;
                  v15 = v32++ >= 9;
                  if (v15)
                  {
                    v33 = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v33 = 0;
LABEL_72:
            v56 = v33 != 0;
            v57 = 25;
            goto LABEL_81;
          case 5u:
            v38 = 0;
            v39 = 0;
            v40 = 0;
            *(_BYTE *)(a1 + 28) |= 8u;
            while (2)
            {
              v41 = *v4;
              v42 = *(_QWORD *)&v3[v41];
              v43 = v42 + 1;
              if (v42 == -1 || v43 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v42);
                *(_QWORD *)&v3[v41] = v43;
                v40 |= (unint64_t)(v44 & 0x7F) << v38;
                if (v44 < 0)
                {
                  v38 += 7;
                  v15 = v39++ >= 9;
                  if (v15)
                  {
                    v40 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v40 = 0;
LABEL_76:
            v56 = v40 != 0;
            v57 = 24;
            goto LABEL_81;
          case 6u:
            v45 = 0;
            v46 = 0;
            v47 = 0;
            *(_BYTE *)(a1 + 28) |= 0x20u;
            break;
          case 7u:
            *(_BYTE *)(a1 + 28) |= 1u;
            v52 = *v4;
            v53 = *(_QWORD *)&v3[v52];
            if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v54 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v53);
              *(_QWORD *)&v3[v52] = v53 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v54 = 0;
            }
            *(_QWORD *)(a1 + 8) = v54;
            continue;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_86;
            continue;
        }
        while (1)
        {
          v48 = *v4;
          v49 = *(_QWORD *)&v3[v48];
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)&v3[*v5])
            break;
          v51 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v49);
          *(_QWORD *)&v3[v48] = v50;
          v47 |= (unint64_t)(v51 & 0x7F) << v45;
          if ((v51 & 0x80) == 0)
            goto LABEL_78;
          v45 += 7;
          v15 = v46++ >= 9;
          if (v15)
          {
            v47 = 0;
            goto LABEL_80;
          }
        }
        v3[*v6] = 1;
LABEL_78:
        if (v3[*v6])
          v47 = 0;
LABEL_80:
        v56 = v47 != 0;
        v57 = 26;
LABEL_81:
        *(_BYTE *)(a1 + v57) = v56;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_86:
    v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_18924E6D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18924E730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _BOOL8 v47;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_63;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_71;
          v39 = 0;
          break;
        case 7u:
          if (v16 != 1)
            goto LABEL_71;
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          if (v45 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_62;
          v46 = v45 + 8;
          if (v46 > *(_QWORD *)&a1[*v3])
            goto LABEL_62;
          *(_QWORD *)&a1[v44] = v46;
          continue;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_71:
          v47 = 0;
          goto LABEL_70;
      }
      while (1)
      {
        v40 = *v2;
        v41 = *(_QWORD *)&a1[v40];
        v42 = v41 + 1;
        if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
          break;
        v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
        *(_QWORD *)&a1[v40] = v42;
        if (v43 < 0)
        {
          v23 = v39++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_63;
      }
LABEL_61:
      v14 = *v4;
LABEL_62:
      a1[v14] = 1;
LABEL_63:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
LABEL_70:
  PBReaderRecallMark();
  return v47;
}

BOOL GEOSignGuidanceFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signDetailIndex;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signDetailIndex;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signDetailIndex;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signTitleIndex;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signTitleIndex;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signTitleIndex;
        }
LABEL_40:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18924F910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSignGuidanceFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSignGuidanceFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18924F970(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpokenGuidanceFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOTrafficCameraInformation *v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_52;
          v26 = objc_alloc_init(GEOTrafficCameraInformation);
          if (!GEOTrafficCameraInformationReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_52;
          }
          PBReaderRecallMark();
          v27 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v26;

        }
        else if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_46;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              v30 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            v30 = 0;
LABEL_48:
          *(_BYTE *)(a1 + 20) = v30 != 0;
        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_42;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_44:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_52;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189250508(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpokenGuidanceFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSpokenGuidanceFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189250568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStateTransitionFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOStateTransitionFeedback__newValue;
              goto LABEL_49;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOStateTransitionFeedback__newValue;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOStateTransitionFeedback__newValue;
LABEL_48:
          v3[*v6] = 1;
        }
        else if ((_DWORD)v18 == 2)
        {
          v34 = 0;
          v35 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v36 = *v4;
            v37 = *(_QWORD *)&v3[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOStateTransitionFeedback__oldValue;
              goto LABEL_48;
            }
            v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
            *(_QWORD *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0)
              break;
            v34 += 7;
            v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOStateTransitionFeedback__oldValue;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOStateTransitionFeedback__oldValue;
        }
        else
        {
          if ((_DWORD)v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_58;
            continue;
          }
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 20) |= 4u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOStateTransitionFeedback__stateType;
              goto LABEL_48;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOStateTransitionFeedback__stateType;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOStateTransitionFeedback__stateType;
        }
LABEL_49:
        if (v3[*v6])
          LODWORD(v21) = 0;
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189251FD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStateTransitionFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStateTransitionFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189252030(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStateTransitionFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189252A1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  int8x16_t v10;
  unsigned int v11;
  unsigned int v12;
  char v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  void *v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  char v114;
  int v115;
  int v116;
  int v117;
  void *v118;
  GEOEVStepFeedbackInfo *v120;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10.i64[0] = 0x100000001;
  v10.i64[1] = 0x100000001;
  v11 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 112)), (uint32x4_t)xmmword_189CD8770), v10))+ ((*(_DWORD *)(a1 + 112) >> 12) & 1);
  while (1)
  {
    v12 = a3[v7];
    if (v12 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v12 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v12)
  {
    ++v11;
    goto LABEL_9;
  }
  v13 = v9 | (v11 > 3);
  if (v9 & 1 | (v11 > 3) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_209;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v15;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v20 = 0;
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_209:
      if ((v13 & 1) != 0)
      {
        v114 = 1;
        goto LABEL_211;
      }
      if (!v14)
      {
LABEL_228:
        v3 = *(_BYTE *)(v3 + *v16) == 0;
        if ((v13 & 1) != 0)
          goto LABEL_229;
        return v3;
      }
      while (1)
      {
        while (1)
        {
          v116 = *v14++;
          v115 = v116;
          if (v116 > 10)
            break;
          switch(v115)
          {
            case 4:
              v117 = 0x4000;
LABEL_226:
              *(_DWORD *)(a1 + 112) |= v117;
              break;
            case 8:
              v117 = 0x10000;
              goto LABEL_226;
            case 0:
              goto LABEL_228;
          }
        }
        switch(v115)
        {
          case 11:
            v117 = 0x2000;
            goto LABEL_226;
          case 15:
            v117 = 0x8000;
            goto LABEL_226;
          case 18:
            v117 = 4096;
            goto LABEL_226;
        }
      }
    }
    v28 = v20 >> 3;
    v29 = v13;
    if (!((v14 == 0) | v13 & 1))
    {
      v30 = v14;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v34 = 0;
        v35 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x20u;
        while (1)
        {
          v37 = *v15;
          v38 = *(_QWORD *)(v3 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(v3 + *v6))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v38);
          *(_QWORD *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0)
            goto LABEL_150;
          v34 += 7;
          v25 = v35++ >= 9;
          if (v25)
          {
            LODWORD(v36) = 0;
            goto LABEL_152;
          }
        }
        *(_BYTE *)(v3 + *v16) = 1;
LABEL_150:
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v36) = 0;
LABEL_152:
        v109 = 96;
        goto LABEL_190;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        *(_DWORD *)(a1 + 112) |= 1u;
        v41 = *v15;
        v42 = *(_QWORD *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v43 = *(_QWORD *)(*(_QWORD *)(v3 + *v17) + v42);
          *(_QWORD *)(v3 + v41) = v42 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v16) = 1;
          v43 = 0;
        }
        v113 = 16;
        goto LABEL_207;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_DWORD *)(a1 + 112) |= 0x100u;
        while (2)
        {
          v47 = *v15;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v25 = v45++ >= 9;
              if (v25)
              {
                v46 = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v46 = 0;
LABEL_156:
        v110 = v46 != 0;
        v111 = 108;
        goto LABEL_173;
      case 4:
        if (!v29)
          goto LABEL_147;
        if ((*(_BYTE *)(a1 + 113) & 0x40) == 0)
        {
          PBReaderReadData();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = 40;
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_233;
        v112 = (int)(*(_DWORD *)(a1 + 112) << 17) >> 31;
        goto LABEL_201;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v53 = 0;
        v54 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          v55 = *v15;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v36 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v25 = v54++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v36) = 0;
LABEL_160:
        v109 = 92;
        goto LABEL_190;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v60 = 0;
        v61 = 0;
        v62 = 0;
        *(_DWORD *)(a1 + 112) |= 0x200u;
        while (2)
        {
          v63 = *v15;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v25 = v61++ >= 9;
              if (v25)
              {
                v62 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v62 = 0;
LABEL_164:
        v110 = v62 != 0;
        v111 = 109;
        goto LABEL_173;
      case 8:
        if (!v29)
          goto LABEL_147;
        if ((*(_BYTE *)(a1 + 114) & 1) == 0)
        {
          PBReaderReadData();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = 64;
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_233;
        v112 = (int)(*(_DWORD *)(a1 + 112) << 15) >> 31;
        goto LABEL_201;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_DWORD *)(a1 + 112) |= 0x400u;
        while (2)
        {
          v70 = *v15;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v25 = v68++ >= 9;
              if (v25)
              {
                v69 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v69 = 0;
LABEL_168:
        v110 = v69 != 0;
        v111 = 110;
        goto LABEL_173;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_DWORD *)(a1 + 112) |= 0x800u;
        while (2)
        {
          v77 = *v15;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v25 = v75++ >= 9;
              if (v25)
              {
                v76 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v76 = 0;
LABEL_172:
        v110 = v76 != 0;
        v111 = 111;
LABEL_173:
        *(_BYTE *)(a1 + v111) = v110;
        goto LABEL_208;
      case 11:
        if (!v29)
          goto LABEL_147;
        if ((*(_BYTE *)(a1 + 113) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_233;
          v112 = (int)(*(_DWORD *)(a1 + 112) << 18) >> 31;
LABEL_201:
          v7 += v112;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_233;
        v120 = objc_alloc_init(GEOEVStepFeedbackInfo);
        if (GEOEVStepFeedbackInfoReadAllFrom((uint64_t)v120, (void *)v3))
        {
          PBReaderRecallMark();
          v81 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v120;
LABEL_146:

          --v7;
LABEL_202:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_208:
          if (!(v13 & 1 | (v7 != 0)))
            goto LABEL_209;
          continue;
        }

LABEL_233:
        v114 = 0;
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_211:
        *(_DWORD *)(a1 + 112) |= 0x4000u;
        *(_DWORD *)(a1 + 112) |= 0x10000u;
        *(_DWORD *)(a1 + 112) |= 0x2000u;
        *(_DWORD *)(a1 + 112) |= 0x8000u;
        *(_DWORD *)(a1 + 112) |= 0x1000u;
        if ((v114 & 1) != 0)
          goto LABEL_228;
        v3 = 0;
        if ((v13 & 1) == 0)
          return v3;
LABEL_229:
        v118 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v82 = 0;
        v83 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x80u;
        while (2)
        {
          v84 = *v15;
          v85 = *(_QWORD *)(v3 + v84);
          v86 = v85 + 1;
          if (v85 == -1 || v86 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v85);
            *(_QWORD *)(v3 + v84) = v86;
            v36 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              v25 = v83++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v36) = 0;
LABEL_177:
        v109 = 104;
        goto LABEL_190;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v88 = 0;
        v89 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 112) |= 8u;
        while (2)
        {
          v90 = *v15;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v36 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              v25 = v89++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v36) = 0;
LABEL_181:
        v109 = 88;
        goto LABEL_190;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v94 = 0;
        v95 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 112) |= 4u;
        while (2)
        {
          v96 = *v15;
          v97 = *(_QWORD *)(v3 + v96);
          v98 = v97 + 1;
          if (v97 == -1 || v98 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v97);
            *(_QWORD *)(v3 + v96) = v98;
            v36 |= (unint64_t)(v99 & 0x7F) << v94;
            if (v99 < 0)
            {
              v94 += 7;
              v25 = v95++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v36) = 0;
LABEL_185:
        v109 = 84;
        goto LABEL_190;
      case 15:
        if (!v29)
          goto LABEL_147;
        if ((*(_BYTE *)(a1 + 113) & 0x80) == 0)
        {
          PBReaderReadData();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = 56;
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_233;
        v112 = (int)(*(_DWORD *)(a1 + 112) << 16) >> 31;
        goto LABEL_201;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        v100 = 0;
        v101 = 0;
        v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x40u;
        while (2)
        {
          v102 = *v15;
          v103 = *(_QWORD *)(v3 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v36 |= (unint64_t)(v105 & 0x7F) << v100;
            if (v105 < 0)
            {
              v100 += 7;
              v25 = v101++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_189;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v36) = 0;
LABEL_189:
        v109 = 100;
LABEL_190:
        *(_DWORD *)(a1 + v109) = v36;
        goto LABEL_208;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_147;
        *(_DWORD *)(a1 + 112) |= 2u;
        v106 = *v15;
        v107 = *(_QWORD *)(v3 + v106);
        if (v107 <= 0xFFFFFFFFFFFFFFF7 && v107 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v43 = *(_QWORD *)(*(_QWORD *)(v3 + *v17) + v107);
          *(_QWORD *)(v3 + v106) = v107 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v16) = 1;
          v43 = 0;
        }
        v113 = 48;
LABEL_207:
        *(_QWORD *)(a1 + v113) = v43;
        goto LABEL_208;
      case 18:
        if (!v29)
        {
LABEL_147:
          v108 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v108 & 1) == 0)
          {
LABEL_231:
            v114 = 0;
            goto LABEL_211;
          }
          goto LABEL_208;
        }
        if ((*(_BYTE *)(a1 + 113) & 0x10) == 0)
        {
          PBReaderReadData();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = 24;
LABEL_145:
          v81 = *(void **)(a1 + v52);
          *(_QWORD *)(a1 + v52) = v51;
          goto LABEL_146;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_233;
        v112 = (int)(*(_DWORD *)(a1 + 112) << 19) >> 31;
        goto LABEL_201;
      default:
        v59 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v59)
          goto LABEL_231;
        goto LABEL_208;
    }
  }
}

void sub_189253A20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189253C6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892549E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189254C28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189256464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOStepFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOStepFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOStepFeedbackReadAllFrom_initialTag;
  Specified = GEOStepFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189256608(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOStepFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189256668(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892569D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStepFeedbackIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 20);
  v2 = (a1[28]._os_unfair_lock_opaque & 0x3F000) != 0;
  os_unfair_lock_unlock(a1 + 20);
  return v2;
}

void sub_1892570D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficCameraInformationReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_32;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1892581D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficCameraInformationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficCameraInformationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189258230(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892588E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficRerouteFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  __int16 v97;
  uint64_t v98;
  char v99;
  int v100;
  __int16 v101;
  void *v102;
  GEORouteIncident *v104;
  char v105;
  char v106;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF2FFF3FFF4FFF5) & 0xFFE1FFE1FFE1FFE1))+ ((*(_WORD *)(a1 + 116) >> 10) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v106 = (v16 == 0) | v15;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v105 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_180;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_180:
      if ((v15 & 1) != 0)
      {
        v99 = 1;
        goto LABEL_190;
      }
      if (v16)
      {
        while (1)
        {
          v100 = *v16++;
          v101 = 4096;
          switch(v100)
          {
            case 6:
              goto LABEL_188;
            case 8:
              v101 = 2048;
              goto LABEL_188;
            case 9:
              v101 = 0x2000;
              goto LABEL_188;
            case 14:
              v101 = 0x4000;
              goto LABEL_188;
            case 16:
              v101 = 1024;
LABEL_188:
              *(_WORD *)(a1 + 116) |= v101;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_191;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v106 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x20u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_132;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_134;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_132:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_134:
        v96 = 96;
        goto LABEL_163;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v43 = 0;
        v44 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x100u;
        while (2)
        {
          v45 = *v17;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v27 = v44++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_138:
        v96 = 108;
        goto LABEL_163;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v49 = 0;
        v50 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x10u;
        while (2)
        {
          v51 = *v17;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v38 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v27 = v50++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_142:
        v96 = 92;
        goto LABEL_163;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v55 = 0;
        v56 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x80u;
        while (2)
        {
          v57 = *v17;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v38 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v27 = v56++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_146:
        v96 = 104;
        goto LABEL_163;
      case 6:
        if (!v31 || (*(_WORD *)(a1 + 116) & 0x1000) != 0)
          goto LABEL_129;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_197;
        v104 = objc_alloc_init(GEORouteIncident);
        if (GEORouteIncidentReadAllFrom((uint64_t)v104, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOTrafficRerouteFeedback _addNoFlagsOldRouteIncidents:](a1, v104);

LABEL_173:
          v15 = v105;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_179:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_180;
          continue;
        }

LABEL_197:
        v99 = 0;
        v15 = v105;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_190:
        *(_WORD *)(a1 + 116) |= 0x1000u;
        *(_WORD *)(a1 + 116) |= 0x800u;
        *(_WORD *)(a1 + 116) |= 0x2000u;
        *(_WORD *)(a1 + 116) |= 0x4000u;
        *(_WORD *)(a1 + 116) |= 0x400u;
        if ((v99 & 1) != 0)
        {
LABEL_191:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_192;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_192:
            v102 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 8:
        if (!v31)
          goto LABEL_129;
        if ((*(_WORD *)(a1 + 116) & 0x800) == 0)
        {
          PBReaderReadData();
          v62 = objc_claimAutoreleasedReturnValue();
          v63 = 40;
          goto LABEL_124;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_197;
        v97 = 16 * *(_WORD *)(a1 + 116);
        goto LABEL_172;
      case 9:
        if (!v31)
          goto LABEL_129;
        if ((*(_WORD *)(a1 + 116) & 0x2000) == 0)
        {
          PBReaderReadData();
          v62 = objc_claimAutoreleasedReturnValue();
          v63 = 56;
          goto LABEL_124;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_197;
        v97 = 4 * *(_WORD *)(a1 + 116);
        goto LABEL_172;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v64 = 0;
        v65 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 116) |= 4u;
        while (2)
        {
          v66 = *v17;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v38 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v27 = v65++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_150:
        v96 = 84;
        goto LABEL_163;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v70 = 0;
        v71 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 116) |= 8u;
        while (2)
        {
          v72 = *v17;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v38 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v27 = v71++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_154:
        v96 = 88;
        goto LABEL_163;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v76 = 0;
        v77 = 0;
        v78 = 0;
        *(_WORD *)(a1 + 116) |= 0x200u;
        while (2)
        {
          v79 = *v17;
          v80 = *(_QWORD *)(v3 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v27 = v77++ >= 9;
              if (v27)
              {
                v78 = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v78 = 0;
LABEL_158:
        *(_BYTE *)(a1 + 112) = v78 != 0;
        goto LABEL_179;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        v83 = 0;
        v84 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x40u;
        while (2)
        {
          v85 = *v17;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v38 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              v27 = v84++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_162:
        v96 = 100;
LABEL_163:
        *(_DWORD *)(a1 + v96) = v38;
        goto LABEL_179;
      case 14:
        if (!v31)
          goto LABEL_129;
        if ((*(_WORD *)(a1 + 116) & 0x4000) == 0)
        {
          PBReaderReadData();
          v62 = objc_claimAutoreleasedReturnValue();
          v63 = 64;
          goto LABEL_124;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_197;
        v97 = 2 * *(_WORD *)(a1 + 116);
        goto LABEL_172;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_129;
        *(_WORD *)(a1 + 116) |= 1u;
        v89 = *v17;
        v90 = *(_QWORD *)(v3 + v89);
        if (v90 <= 0xFFFFFFFFFFFFFFF7 && v90 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v91 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v90);
          *(_QWORD *)(v3 + v89) = v90 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v91 = 0;
        }
        v98 = 16;
        goto LABEL_178;
      case 16:
        if (!v31)
          goto LABEL_129;
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_197;
          v97 = 32 * *(_WORD *)(a1 + 116);
LABEL_172:
          v7 += v97 >> 15;
        }
        else
        {
          PBReaderReadString();
          v62 = objc_claimAutoreleasedReturnValue();
          v63 = 24;
LABEL_124:
          v92 = *(void **)(a1 + v63);
          *(_QWORD *)(a1 + v63) = v62;

          --v7;
        }
        goto LABEL_173;
      case 17:
        if ((v8 & 1) != 0)
        {
          *(_WORD *)(a1 + 116) |= 2u;
          v93 = *v17;
          v94 = *(_QWORD *)(v3 + v93);
          if (v94 <= 0xFFFFFFFFFFFFFFF7 && v94 + 8 <= *(_QWORD *)(v3 + *v6))
          {
            v91 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v94);
            *(_QWORD *)(v3 + v93) = v94 + 8;
          }
          else
          {
            *(_BYTE *)(v3 + *v18) = 1;
            v91 = 0;
          }
          v98 = 32;
LABEL_178:
          *(_QWORD *)(a1 + v98) = v91;
        }
        else
        {
LABEL_129:
          v95 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v105;
          if ((v95 & 1) == 0)
          {
LABEL_189:
            v99 = 0;
            goto LABEL_190;
          }
        }
        goto LABEL_179;
      default:
        v61 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v105;
        if (!v61)
          goto LABEL_189;
        goto LABEL_179;
    }
  }
}

void sub_189259858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925999C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925A10C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925A2B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925B41C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTrafficRerouteFeedbackCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOTrafficRerouteFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTrafficRerouteFeedbackReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTrafficRerouteFeedbackReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTrafficRerouteFeedbackReadAllFrom_initialTag;
  Specified = GEOTrafficRerouteFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOTrafficRerouteFeedbackCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18925B6A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficRerouteFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTrafficRerouteFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18925B708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925BAE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficRerouteFeedbackIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(unsigned __int16 *)(a1 + 116) > 0x3FFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_18925C388(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925CEB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDepartureSequenceUsageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  BOOL v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v52 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_75;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_75:
      if (v13)
      {
        v47 = 1;
        goto LABEL_85;
      }
      if (!v14)
      {
LABEL_86:
        v3 = *(_BYTE *)(v3 + *v17) == 0;
        if (!v13)
          return v3;
        goto LABEL_87;
      }
      while (1)
      {
        v49 = *v14++;
        v48 = v49;
        if (v49 == 2)
          goto LABEL_83;
        if (v48 == 3)
        {
          LOBYTE(v48) = 4;
LABEL_83:
          *(_BYTE *)(a1 + 52) |= v48;
        }
        else if (!v48)
        {
          goto LABEL_86;
        }
      }
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v52)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 3)
    {
      if (!v30)
        goto LABEL_60;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        PBReaderReadString();
        v42 = objc_claimAutoreleasedReturnValue();
        v43 = 24;
LABEL_57:
        v44 = *(void **)(a1 + v43);
        *(_QWORD *)(a1 + v43) = v42;

        --v9;
        goto LABEL_71;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_84;
      v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_70:
      v9 += v45 >> 7;
      goto LABEL_71;
    }
    if ((_DWORD)v29 != 2)
    {
      if ((_DWORD)v29 == 1)
      {
        if ((v8 & 1) != 0)
        {
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          while (1)
          {
            v38 = *v16;
            v39 = *(_QWORD *)(v3 + v38);
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
              break;
            v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
            *(_QWORD *)(v3 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if ((v41 & 0x80) == 0)
              goto LABEL_63;
            v35 += 7;
            v26 = v36++ >= 9;
            if (v26)
            {
              v37 = 0;
              goto LABEL_65;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_63:
          if (*(_BYTE *)(v3 + *v17))
            v37 = 0;
LABEL_65:
          *(_QWORD *)(a1 + 32) = v37;
          goto LABEL_71;
        }
LABEL_60:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_84;
      }
LABEL_71:
      if (v9)
        v46 = 1;
      else
        v46 = v13;
      if ((v46 & 1) == 0)
        goto LABEL_75;
      continue;
    }
    break;
  }
  if (!v30)
    goto LABEL_60;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
  {
    PBReaderReadString();
    v42 = objc_claimAutoreleasedReturnValue();
    v43 = 16;
    goto LABEL_57;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v45 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_70;
  }
LABEL_84:
  v47 = 0;
LABEL_85:
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v47 & 1) != 0)
    goto LABEL_86;
  v3 = 0;
  if (v13)
  {
LABEL_87:
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18925D480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925D8C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDepartureSequenceUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTransitDepartureSequenceUsageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTransitDepartureSequenceUsageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTransitDepartureSequenceUsageReadAllFrom_initialTag;
  Specified = GEOTransitDepartureSequenceUsageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18925DA48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDepartureSequenceUsageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTransitDepartureSequenceUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18925DAA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureSequenceUsageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_38;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_40;
LABEL_32:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_40;
        goto LABEL_37;
      }
      if ((_DWORD)v17 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v15 != 2)
      goto LABEL_40;
    goto LABEL_32;
  }
LABEL_38:
  v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_18925DE64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureSequenceUsageIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18925E16C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925E730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitPlaceCardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  GEOTransitDepartureSequenceUsage *v47;
  void *v48;
  void *v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  char v57;
  char v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v58 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
        v57 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_74;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_74:
      if ((v15 & 1) != 0)
      {
        v52 = 1;
        goto LABEL_85;
      }
      if (v16)
      {
        while (1)
        {
          v53 = *v16++;
          v54 = 8;
          switch(v53)
          {
            case 0:
              goto LABEL_86;
            case 2:
              goto LABEL_80;
            case 3:
              v54 = 4;
              goto LABEL_80;
            case 4:
              v54 = 2;
LABEL_80:
              *(_BYTE *)(a1 + v20[778]) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if ((v58 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_59;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + v20[778]) |= 1u;
        while (1)
        {
          v40 = *v17;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_62;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_64;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_62:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_64:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_73;
      case 2:
        if (!v32)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + v20[778]) & 8) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 32;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v51 = 16 * *(_BYTE *)(a1 + v20[778]);
        goto LABEL_71;
      case 3:
        if (!v32)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + v20[778]) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_82;
          v51 = 32 * *(_BYTE *)(a1 + v20[778]);
LABEL_71:
          v8 += v51 >> 7;
LABEL_72:
          v15 = v57;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_73:
          if (!(v15 & 1 | (v8 != 0)))
            goto LABEL_74;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v47 = objc_alloc_init(GEOTransitDepartureSequenceUsage);
        if (GEOTransitDepartureSequenceUsageReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v48 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v47;

          --v8;
          v20 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
          goto LABEL_72;
        }

        v52 = 0;
        v20 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__startHeading;
LABEL_84:
        v15 = v57;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        *(_BYTE *)(a1 + v20[778]) |= 8u;
        *(_BYTE *)(a1 + v20[778]) |= 4u;
        *(_BYTE *)(a1 + v20[778]) |= 2u;
        if ((v52 & 1) != 0)
        {
LABEL_86:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_87;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_87:
            v55 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if (!v32)
        {
LABEL_59:
          v50 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v57;
          if ((v50 & 1) == 0)
          {
LABEL_81:
            v52 = 0;
            goto LABEL_85;
          }
          goto LABEL_73;
        }
        if ((*(_BYTE *)(a1 + v20[778]) & 2) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 16;
LABEL_58:
          v49 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;

          --v8;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_82:
          v52 = 0;
          goto LABEL_84;
        }
        v51 = *(_BYTE *)(a1 + v20[778]) << 6;
        goto LABEL_71;
      default:
        v44 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v57;
        if (!v44)
          goto LABEL_81;
        goto LABEL_73;
    }
  }
}

void sub_18925EE20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925EF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925F5FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitPlaceCardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTransitPlaceCardReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTransitPlaceCardReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTransitPlaceCardReadAllFrom_initialTag;
  Specified = GEOTransitPlaceCardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18925F79C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitPlaceCardReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTransitPlaceCardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18925F7FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18925F9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitPlaceCardIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 56);
  if ((v2 & 0x18) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if (GEOTransitDepartureSequenceUsageIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 56);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOTransitPlaceCardIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOTransitPlaceCardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18925FD40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18926154C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_189261974(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_189261E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_189262098(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18926271C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,void *a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29,char a30)
{
  void *v30;
  void *v31;
  void *v32;

  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a30, 8);

  _Unwind_Resume(a1);
}

void sub_189262990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_189262B00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189262F30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189263A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  void *v25;

  _Unwind_Resume(a1);
}

void sub_189263C14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189263DB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189263E18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189263E74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189263F04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189264188(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18926425C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1892644B8(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_189264654(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void _GEOConfigPostKeyExpirysChangedNotificationSource(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint8_t v6[16];

  v3 = a1;
  v4 = v3;
  v5 = 983040;
  switch(a2)
  {
    case 0:
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)v6 = 0;
        _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: source != GEODefaultsSourceNone", v6, 2u);
      }
      goto LABEL_4;
    case 1:
    case 4:
    case 5:
    case 9:
      v5 = 0;
      goto LABEL_3;
    case 3:
      v5 = 0x10000;
      goto LABEL_3;
    case 6:
      v5 = 0x20000;
      goto LABEL_3;
    case 7:
      v5 = 0x40000;
      goto LABEL_3;
    case 8:
      v5 = 0x80000;
      goto LABEL_3;
    default:
LABEL_3:
      _GEOConfigPostKeyExpirysChangedNotificationOptions(v3, v5);
LABEL_4:

      return;
  }
}

void _GEOConfigPostKeyExpirysChangedNotificationOptions(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint8_t v7[8];
  _QWORD v8[2];
  _QWORD v9[3];

  v9[2] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (a2)
  {
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v8[0] = CFSTR("keys");
    v8[1] = CFSTR("options");
    v9[0] = v3;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v9[1] = v5;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v9, v8, 2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "postNotificationName:object:userInfo:", CFSTR("_GEOConfigExpireChangedNotification"), 0, v6);

  }
  else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: options != GEOConfigOption_None", v7, 2u);
  }

}

void _GEORemoveChangeListenerForKeys(void *a1)
{
  GEOConfigRemoveChangeListenerRequest *v1;
  void *v2;
  void *v3;
  id v4;

  v4 = a1;
  if (objc_msgSend(v4, "count") && _GEODefaultsUseServer)
  {
    v1 = -[GEOConfigRemoveChangeListenerRequest initWithTraits:auditToken:throttleToken:]([GEOConfigRemoveChangeListenerRequest alloc], "initWithTraits:auditToken:throttleToken:", 0, 0, 0);
    objc_msgSend(v4, "allObjects");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOConfigRemoveChangeListenerRequest setKeys:](v1, "setKeys:", v2);

    _GEODefaultsServerConnection();
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOXPCRequest send:](v1, "send:", v3);

  }
}

BOOL GEOPDABClientDatasetMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  void *v31;
  _BOOL8 v32;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
            {
              v24 = &OBJC_IVAR___GEOPDABClientDatasetMetadata__bucketId;
              goto LABEL_41;
            }
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___GEOPDABClientDatasetMetadata__bucketId;
              goto LABEL_44;
            }
          }
          v24 = &OBJC_IVAR___GEOPDABClientDatasetMetadata__bucketId;
LABEL_42:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v24) = v19;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v30 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v31 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v30;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v25 = 0;
      v26 = 0;
      v19 = 0;
      *(_BYTE *)(a1 + 24) |= 2u;
      while (1)
      {
        v27 = *v4;
        v28 = *(_QWORD *)&v3[v27];
        if (v28 == -1 || v28 >= *(_QWORD *)&v3[*v5])
          break;
        v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
        *(_QWORD *)&v3[v27] = v28 + 1;
        v19 |= (unint64_t)(v29 & 0x7F) << v25;
        if ((v29 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___GEOPDABClientDatasetMetadata__datasetId;
          goto LABEL_42;
        }
        v25 += 7;
        v23 = v26++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___GEOPDABClientDatasetMetadata__datasetId;
          goto LABEL_44;
        }
      }
      v24 = &OBJC_IVAR___GEOPDABClientDatasetMetadata__datasetId;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_18926612C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDABClientDatasetMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDABClientDatasetMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18926618C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDABClientDatasetMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v15++ > 8;
            if (!v20)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v21 = 0;
    while (1)
    {
      v22 = *v2;
      v23 = *(_QWORD *)&a1[v22];
      if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v24 = v23 + 1;
      v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
      *(_QWORD *)&a1[v22] = v24;
      if (v25 < 0)
      {
        v20 = v21++ > 8;
        if (!v20)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

BOOL GEOPDDatasetABStatusReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDDatasetABStatusReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189266B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189267FA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1892689C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOMapQueryReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const float *v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  int v100;
  char v101;
  int v102;
  int v103;
  int v104;
  void *v105;
  GEOMapRegion *v107;
  char v108;
  char v109;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const float *)(a1 + 120);
  v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD8790), v13));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 2;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v109 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v108 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_209;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v29 = v24++ >= 9;
      if (v29)
      {
        v25 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_209:
      if ((v18 & 1) != 0)
      {
        v101 = 1;
        goto LABEL_211;
      }
      if (!v19)
        goto LABEL_226;
      while (1)
      {
        while (1)
        {
          v103 = *v19++;
          v102 = v103;
          if (v103 <= 13)
            break;
          if (v102 == 14)
          {
            v104 = 0x8000;
LABEL_224:
            *(_DWORD *)(a1 + 120) |= v104;
          }
          else if (v102 == 16)
          {
            v104 = 0x2000;
            goto LABEL_224;
          }
        }
        switch(v102)
        {
          case 1:
            v104 = 0x4000;
            goto LABEL_224;
          case 13:
            v104 = 4096;
            goto LABEL_224;
          case 0:
            goto LABEL_226;
        }
      }
    }
    v32 = v25 >> 3;
    v33 = v18;
    if ((v109 & 1) == 0)
    {
      v34 = v19;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_151;
        if ((*(_BYTE *)(a1 + 121) & 0x40) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v38;
          goto LABEL_150;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_231;
        v100 = (int)(*(_DWORD *)(a1 + 120) << 17) >> 31;
        goto LABEL_206;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x100u;
        while (2)
        {
          v44 = *v20;
          v45 = *(_QWORD *)(v3 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v45);
            *(_QWORD *)(v3 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              v29 = v42++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_156:
        v99 = 104;
        goto LABEL_197;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v47 = 0;
        v48 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x10u;
        while (2)
        {
          v49 = *v20;
          v50 = *(_QWORD *)(v3 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v50);
            *(_QWORD *)(v3 + v49) = v50 + 1;
            v43 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              v29 = v48++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_160:
        v99 = 88;
        goto LABEL_197;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v52 = 0;
        v53 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x20u;
        while (2)
        {
          v54 = *v20;
          v55 = *(_QWORD *)(v3 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v55);
            *(_QWORD *)(v3 + v54) = v55 + 1;
            v43 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              v29 = v53++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_164:
        v99 = 92;
        goto LABEL_197;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v57 = 0;
        v58 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x40u;
        while (2)
        {
          v59 = *v20;
          v60 = *(_QWORD *)(v3 + v59);
          if (v60 == -1 || v60 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v60);
            *(_QWORD *)(v3 + v59) = v60 + 1;
            v43 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              v29 = v58++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_168:
        v99 = 96;
        goto LABEL_197;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v62 = 0;
        v63 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x80u;
        while (2)
        {
          v64 = *v20;
          v65 = *(_QWORD *)(v3 + v64);
          if (v65 == -1 || v65 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v65);
            *(_QWORD *)(v3 + v64) = v65 + 1;
            v43 |= (unint64_t)(v66 & 0x7F) << v62;
            if (v66 < 0)
            {
              v62 += 7;
              v29 = v63++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_172:
        v99 = 100;
        goto LABEL_197;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v67 = 0;
        v68 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x800u;
        while (2)
        {
          v69 = *v20;
          v70 = *(_QWORD *)(v3 + v69);
          if (v70 == -1 || v70 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v70);
            *(_QWORD *)(v3 + v69) = v70 + 1;
            v43 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              v29 = v68++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_176:
        v99 = 116;
        goto LABEL_197;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v72 = 0;
        v73 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 2u;
        while (2)
        {
          v74 = *v20;
          v75 = *(_QWORD *)(v3 + v74);
          if (v75 == -1 || v75 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v75);
            *(_QWORD *)(v3 + v74) = v75 + 1;
            v43 |= (unint64_t)(v76 & 0x7F) << v72;
            if (v76 < 0)
            {
              v72 += 7;
              v29 = v73++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_180:
        v99 = 76;
        goto LABEL_197;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v77 = 0;
        v78 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x200u;
        while (2)
        {
          v79 = *v20;
          v80 = *(_QWORD *)(v3 + v79);
          if (v80 == -1 || v80 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v80);
            *(_QWORD *)(v3 + v79) = v80 + 1;
            v43 |= (unint64_t)(v81 & 0x7F) << v77;
            if (v81 < 0)
            {
              v77 += 7;
              v29 = v78++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_184:
        v99 = 108;
        goto LABEL_197;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v82 = 0;
        v83 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x400u;
        while (2)
        {
          v84 = *v20;
          v85 = *(_QWORD *)(v3 + v84);
          if (v85 == -1 || v85 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v85);
            *(_QWORD *)(v3 + v84) = v85 + 1;
            v43 |= (unint64_t)(v86 & 0x7F) << v82;
            if (v86 < 0)
            {
              v82 += 7;
              v29 = v83++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_188:
        v99 = 112;
        goto LABEL_197;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v87 = 0;
        v88 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 8u;
        while (2)
        {
          v89 = *v20;
          v90 = *(_QWORD *)(v3 + v89);
          if (v90 == -1 || v90 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v90);
            *(_QWORD *)(v3 + v89) = v90 + 1;
            v43 |= (unint64_t)(v91 & 0x7F) << v87;
            if (v91 < 0)
            {
              v87 += 7;
              v29 = v88++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_192:
        v99 = 84;
        goto LABEL_197;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        v92 = 0;
        v93 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 120) |= 4u;
        while (2)
        {
          v94 = *v20;
          v95 = *(_QWORD *)(v3 + v94);
          if (v95 == -1 || v95 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v95);
            *(_QWORD *)(v3 + v94) = v95 + 1;
            v43 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              v29 = v93++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v43) = 0;
LABEL_196:
        v99 = 80;
LABEL_197:
        *(_DWORD *)(a1 + v99) = v43;
        goto LABEL_208;
      case 13:
        if (!v33)
          goto LABEL_151;
        if ((*(_BYTE *)(a1 + 121) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v100 = (int)(*(_DWORD *)(a1 + 120) << 19) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v107 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v107, (void *)v3))
          goto LABEL_230;
        PBReaderRecallMark();
        v97 = 32;
        goto LABEL_149;
      case 14:
        if (!v33)
          goto LABEL_151;
        if ((*(_BYTE *)(a1 + 121) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v100 = (int)(*(_DWORD *)(a1 + 120) << 16) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v107 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v107, (void *)v3, v9 & 1))
          goto LABEL_230;
        PBReaderRecallMark();
        v97 = 56;
        goto LABEL_149;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_151;
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((_QWORD *)(a1 + 16), v3) & 1) == 0)
          goto LABEL_231;
        PBReaderRecallMark();
        *(_DWORD *)(a1 + 120) |= 1u;
        goto LABEL_207;
      case 16:
        if (!v33)
        {
LABEL_151:
          v98 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v108;
          if ((v98 & 1) == 0)
          {
LABEL_229:
            v101 = 0;
            goto LABEL_211;
          }
LABEL_208:
          if (!(v18 & 1 | (v7 != 0)))
            goto LABEL_209;
          continue;
        }
        if ((*(_BYTE *)(a1 + 121) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v100 = (int)(*(_DWORD *)(a1 + 120) << 18) >> 31;
LABEL_206:
          v7 += v100;
LABEL_207:
          v18 = v108;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v107 = objc_alloc_init(GEOPlaceSearchRequest);
        if (GEOPlaceSearchRequestReadAllFrom((uint64_t)v107, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v97 = 40;
LABEL_149:
          v39 = *(void **)(a1 + v97);
          *(_QWORD *)(a1 + v97) = v107;
LABEL_150:

          --v7;
          goto LABEL_207;
        }
LABEL_230:

LABEL_231:
        v101 = 0;
        v18 = v108;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_211:
        *(_DWORD *)(a1 + 120) |= 0x4000u;
        *(_DWORD *)(a1 + 120) |= 0x1000u;
        *(_DWORD *)(a1 + 120) |= 0x8000u;
        *(_DWORD *)(a1 + 120) |= 0x2000u;
        if ((v101 & 1) != 0)
        {
LABEL_226:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_227;
          return v3;
        }
        v3 = 0;
        if ((v18 & 1) == 0)
          return v3;
LABEL_227:
        v105 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v40 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v108;
        if (!v40)
          goto LABEL_229;
        goto LABEL_208;
    }
  }
}

