void sub_189833D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983440C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189834558(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898346A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898349DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189834D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189834E60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189834FAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898350F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898352BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189835408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189835550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983569C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898359D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189835B20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189835E58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189835FA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898360F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898363A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898364F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898366B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898367F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189836940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189836A8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189836DC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898370FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983A218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETARequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[128];
  _BYTE v48[128];
  _BYTE v49[128];
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[23], "readAll:", 1);
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v2 = a1[15];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v44;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v44 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v43 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v43, v51, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  v41 = 0u;
  v42 = 0u;
  v39 = 0u;
  v40 = 0u;
  v7 = a1[14];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v40;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v40 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v39 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
    }
    while (v9);
  }

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v12 = a1[17];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v36;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v36 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v35, v49, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[34], "readAll:", 1);
  objc_msgSend(a1[35], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[22], "readAll:", 1);
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v17 = a1[16];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v32;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v32 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v31 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v31, v48, 16);
    }
    while (v19);
  }

  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[27], "readAll:", 1);
  objc_msgSend(a1[26], "readAll:", 1);
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v22 = a1[29];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v28;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v28 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v26++), "readAll:", 1, (_QWORD)v27);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v27, v47, 16);
    }
    while (v24);
  }

}

uint64_t GEOETARequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 292))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETARequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 296));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 288) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 292) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETARequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETARequestReadAllFrom_initialTag;
  Specified = GEOETARequestReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETARequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 296));
  return Specified;
}

void sub_18983A7F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETARequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETARequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18983A858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  char v67;
  unsigned int v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  int v74;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  int v86;
  _BOOL8 v87;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_224:
    v87 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v87;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_224;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = *v4;
        v15 = a1[v14];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = *v4;
    v15 = a1[v14];
    if (a1[v14])
      v8 = 0;
LABEL_14:
    v16 = v8 & 7;
    if (v15 || v16 == 4)
      goto LABEL_224;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0)
          {
            v23 = v18++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 2u:
        if (v16 != 2 || !PBReaderPlaceMark() || (GEOTimepointIsValid(a1) & 1) == 0)
          goto LABEL_226;
        goto LABEL_175;
      case 3u:
      case 4u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 5u:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 6u:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v29 = 0;
        while (1)
        {
          v30 = *v2;
          v31 = *(_QWORD *)&a1[v30];
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
          *(_QWORD *)&a1[v30] = v32;
          if (v33 < 0)
          {
            v23 = v29++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 7u:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v34 = 0;
        while (1)
        {
          v35 = *v2;
          v36 = *(_QWORD *)&a1[v35];
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
          *(_QWORD *)&a1[v35] = v37;
          if (v38 < 0)
          {
            v23 = v34++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 8u:
        if (v16 != 2 || !PBReaderPlaceMark() || (GEOSessionIDIsValid(a1) & 1) == 0)
          goto LABEL_226;
        goto LABEL_175;
      case 9u:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v39 = 0;
        while (1)
        {
          v40 = *v2;
          v41 = *(_QWORD *)&a1[v40];
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
          *(_QWORD *)&a1[v40] = v42;
          if (v43 < 0)
          {
            v23 = v39++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 0xAu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOAdditionalEnabledMarketsIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0xBu:
      case 0xCu:
      case 0x22u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0xDu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0xEu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0xFu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0x10u:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v44 = 0;
        while (1)
        {
          v45 = *v2;
          v46 = *(_QWORD *)&a1[v45];
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
          *(_QWORD *)&a1[v45] = v47;
          if (v48 < 0)
          {
            v23 = v44++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 0x11u:
        goto LABEL_210;
      case 0x12u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOCommonOptionsIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0x13u:
        if (v16 == 2)
          goto LABEL_210;
        goto LABEL_226;
      case 0x14u:
        if (v16 == 2)
          goto LABEL_210;
        goto LABEL_226;
      case 0x15u:
        if (v16 == 2)
          goto LABEL_210;
        goto LABEL_226;
      case 0x16u:
      case 0x18u:
        if (v16 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0)
          goto LABEL_226;
        goto LABEL_175;
      case 0x17u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientCapabilitiesIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0x19u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDABClientDatasetMetadataIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0x1Au:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v49 = 0;
        while (1)
        {
          v50 = *v2;
          v51 = *(_QWORD *)&a1[v50];
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
          *(_QWORD *)&a1[v50] = v52;
          if (v53 < 0)
          {
            v23 = v49++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 0x1Bu:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v54 = 0;
        while (1)
        {
          v55 = *v2;
          v56 = *(_QWORD *)&a1[v55];
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
            goto LABEL_166;
          v58 = *(char *)(*(_QWORD *)&a1[*v5] + v56);
          *(_QWORD *)&a1[v55] = v57;
          if (v58 < 0)
          {
            v23 = v54++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
      case 0x1Cu:
        if (v16 == 2)
          goto LABEL_210;
        goto LABEL_226;
      case 0x1Du:
        if (v16 != 2)
          goto LABEL_226;
LABEL_210:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
          goto LABEL_211;
        goto LABEL_226;
      case 0x1Eu:
        if (v16 != 1)
          goto LABEL_226;
        v59 = *v2;
        v60 = *(_QWORD *)&a1[v59];
        if (v60 > 0xFFFFFFFFFFFFFFF7)
          goto LABEL_167;
        v61 = v60 + 8;
        if (v61 > *(_QWORD *)&a1[*v3])
          goto LABEL_167;
        *(_QWORD *)&a1[v59] = v61;
        goto LABEL_211;
      case 0x1Fu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOCyclingOptionsIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0x20u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOOriginalWaypointRouteIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0x21u:
        if ((v8 & 7) != 0)
          goto LABEL_226;
        v62 = 0;
        while (1)
        {
          v63 = *v2;
          v64 = *(_QWORD *)&a1[v63];
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
            break;
          v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
          *(_QWORD *)&a1[v63] = v65;
          if (v66 < 0)
          {
            v23 = v62++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
LABEL_166:
        v14 = *v4;
LABEL_167:
        a1[v14] = 1;
        goto LABEL_211;
      case 0x23u:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEORecentLocationHistoryIsValid(a1))
          goto LABEL_226;
        goto LABEL_175;
      case 0x24u:
        if (v16 == 2 && PBReaderPlaceMark() && GEOPrivacyMetadataIsValid(a1))
          goto LABEL_175;
        goto LABEL_226;
      case 0x25u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_179:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_221;
        v67 = 0;
        v68 = 0;
        v69 = 0;
        while (1)
        {
          v70 = *v2;
          v71 = *(_QWORD *)&a1[v70];
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)&a1[*v3])
            break;
          v73 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v71);
          *(_QWORD *)&a1[v70] = v72;
          v69 |= (unint64_t)(v73 & 0x7F) << v67;
          if ((v73 & 0x80) == 0)
            goto LABEL_189;
          v67 += 7;
          v13 = v68++ >= 9;
          if (v13)
          {
            v69 = 0;
            v74 = a1[*v4];
            goto LABEL_191;
          }
        }
        a1[*v4] = 1;
LABEL_189:
        v74 = a1[*v4];
        if (a1[*v4])
          v69 = 0;
LABEL_191:
        if (v74 || (v69 & 7) == 4)
        {
LABEL_221:
          v86 = a1[*v4];
          PBReaderRecallMark();
          if (v86)
            goto LABEL_226;
LABEL_175:
          PBReaderRecallMark();
LABEL_211:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_224;
          continue;
        }
        if ((v69 >> 3) != 1)
        {
          if (!PBReaderSkipValueWithTag())
            goto LABEL_225;
          goto LABEL_179;
        }
        if ((v69 & 7) == 0)
        {
          v76 = 0;
          do
          {
            v77 = *v2;
            v78 = *(_QWORD *)&a1[v77];
            v79 = v78 + 1;
            if (v78 == -1 || v79 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_179;
            }
            v80 = *(char *)(*(_QWORD *)&a1[*v5] + v78);
            *(_QWORD *)&a1[v77] = v79;
            if ((v80 & 0x80000000) == 0)
              break;
            v23 = v76++ > 8;
          }
          while (!v23);
          goto LABEL_179;
        }
LABEL_225:
        PBReaderRecallMark();
LABEL_226:
        PBReaderRecallMark();
        return 0;
      default:
        switch((v8 >> 3))
        {
          case 'd':
            if (v16 != 2 || !PBReaderPlaceMark() || (GEOGeoServiceTagIsValid(a1) & 1) == 0)
              goto LABEL_226;
            goto LABEL_175;
          case 'e':
            if (v16 == 2)
              goto LABEL_210;
            goto LABEL_226;
          case 'f':
            if (v16 == 2)
              goto LABEL_210;
            goto LABEL_226;
          case 'g':
            if ((v8 & 7) != 0)
              goto LABEL_226;
            v81 = 0;
            break;
          default:
            goto LABEL_210;
        }
        while (1)
        {
          v82 = *v2;
          v83 = *(_QWORD *)&a1[v82];
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)&a1[*v3])
            break;
          v85 = *(char *)(*(_QWORD *)&a1[*v5] + v83);
          *(_QWORD *)&a1[v82] = v84;
          if (v85 < 0)
          {
            v23 = v81++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_211;
        }
        a1[*v4] = 1;
        goto LABEL_211;
    }
  }
}

void sub_18983BD38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETARequestIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 296));
  v2 = *(_QWORD *)(a1 + 320);
  if ((v2 & 0x20000000000) != 0)
    return 1;
  if ((v2 & 0x20000000) != 0)
  {
    if ((GEOWaypointIsDirty(*(os_unfair_lock_s **)(a1 + 184)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 320);
  }
  if ((v2 & 0x200000) == 0)
  {
    if ((v2 & 0x8000) != 0)
    {
      if (GEOAdditionalEnabledMarketsIsDirty(*(_QWORD *)(a1 + 72)))
        return 1;
      v2 = *(_QWORD *)(a1 + 320);
    }
    if ((v2 & 0x2000000) == 0)
      goto LABEL_12;
    if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(a1 + 152)) & 1) == 0)
    {
      v2 = *(_QWORD *)(a1 + 320);
LABEL_12:
      if ((v2 & 0x900000) != 0)
        return 1;
      if ((v2 & 0x10000) != 0)
      {
        if ((GEOAutomobileOptionsIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x80000) != 0)
      {
        if (GEOCyclingOptionsIsDirty(*(_QWORD *)(a1 + 104)))
          return 1;
        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x8000000000) != 0)
      {
        if (GEOTransitOptionsIsDirty(*(_QWORD *)(a1 + 272)))
          return 1;
        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x10000000000) != 0)
      {
        if (GEOWalkingOptionsIsDirty(*(_QWORD *)(a1 + 280)))
          return 1;
        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x101C440000) != 0)
        return 1;
      if ((v2 & 0x20000) != 0)
      {
        if (GEOClientCapabilitiesIsDirty(*(_QWORD *)(a1 + 88)))
          return 1;
        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x1000000) != 0)
      {
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 144)))
          return 1;
        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x480004000) != 0)
        return 1;
      if ((v2 & 0x200000000) != 0)
      {
        if (GEORecentLocationHistoryIsDirty(*(_QWORD *)(a1 + 216)))
          return 1;
        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x6940000000) != 0)
        return 1;
      if ((v2 & 0x200000) != 0)
      {
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v5 = *(id *)(a1 + 120);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v33;
LABEL_42:
          v9 = 0;
          while (1)
          {
            if (*(_QWORD *)v33 != v8)
              objc_enumerationMutation(v5);
            if ((GEOWaypointIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v32 + 1) + 8 * v9)) & 1) != 0)
              goto LABEL_80;
            if (v7 == ++v9)
            {
              v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
              if (v7)
                goto LABEL_42;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x100000) != 0)
      {
        v30 = 0u;
        v31 = 0u;
        v28 = 0u;
        v29 = 0u;
        v5 = *(id *)(a1 + 112);
        v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
        if (v10)
        {
          v11 = v10;
          v12 = *(_QWORD *)v29;
LABEL_52:
          v13 = 0;
          while (1)
          {
            if (*(_QWORD *)v29 != v12)
              objc_enumerationMutation(v5);
            if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v28 + 1) + 8 * v13)) & 1) != 0)
              goto LABEL_80;
            if (v11 == ++v13)
            {
              v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
              if (v11)
                goto LABEL_52;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x800000) != 0)
      {
        v26 = 0u;
        v27 = 0u;
        v24 = 0u;
        v25 = 0u;
        v5 = *(id *)(a1 + 136);
        v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
        if (v14)
        {
          v15 = v14;
          v16 = *(_QWORD *)v25;
LABEL_62:
          v17 = 0;
          while (1)
          {
            if (*(_QWORD *)v25 != v16)
              objc_enumerationMutation(v5);
            if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v17)) & 1) != 0)
              goto LABEL_80;
            if (v15 == ++v17)
            {
              v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
              if (v15)
                goto LABEL_62;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 320);
      }
      if ((v2 & 0x400000) == 0)
        return 0;
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v5 = *(id *)(a1 + 128);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
      if (!v3)
      {
LABEL_81:

        return v3;
      }
      v18 = *(_QWORD *)v21;
LABEL_73:
      v19 = 0;
      while (1)
      {
        if (*(_QWORD *)v21 != v18)
          objc_enumerationMutation(v5);
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v19)))
          break;
        if (v3 == ++v19)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
          if (v3)
            goto LABEL_73;
          goto LABEL_81;
        }
      }
LABEL_80:
      v3 = 1;
      goto LABEL_81;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOETARequestIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETARequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 74);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOETARequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  void *v6;
  int HasSensitiveFields;
  void *v8;
  void *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned int v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  unint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  _DWORD *v32;
  void *v33;
  int v34;
  void *v35;
  _DWORD *v36;

  if (a3
    && objc_msgSend(a1, "hasOrigin")
    && (objc_msgSend(a1, "origin"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOWaypointHasSensitiveFields(v6),
        v6,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "origin");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v8, "copy");

    GEOWaypointClearSensitiveFields(v9, a2, 0);
    objc_msgSend(a1, "setOrigin:", v9);
  }
  else
  {
    objc_msgSend(a1, "origin");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

  -[GEOETARequest _readDestinations]((uint64_t)a1);
  if (objc_msgSend(a1[15], "count"))
  {
    v10 = 0;
    do
    {
      objc_msgSend(a1[15], "objectAtIndexedSubscript:", v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (a3 && GEOWaypointHasSensitiveFields(v11))
      {
        v13 = (void *)objc_msgSend(v12, "copy");
        GEOWaypointClearSensitiveFields(v13, a2, 0);
        objc_msgSend(a1[15], "replaceObjectAtIndex:withObject:", v10, v13);

      }
      else
      {
        objc_msgSend(v12, "clearSensitiveFields:", a2);
      }

      ++v10;
    }
    while (v10 < objc_msgSend(a1[15], "count"));
  }
  if ((a3 & 1) != 0
    && objc_msgSend(a1, "hasOriginWaypointTyped")
    && (objc_msgSend(a1, "originWaypointTyped"),
        v14 = (void *)objc_claimAutoreleasedReturnValue(),
        v15 = GEOWaypointTypedHasSensitiveFields(v14),
        v14,
        v15))
  {
    objc_msgSend(a1, "originWaypointTyped");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (void *)objc_msgSend(v16, "copy");

    objc_msgSend(v17, "waypointLocation");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setOriginWaypointTyped:", v17);
  }
  else
  {
    objc_msgSend(a1, "originWaypointTyped");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "clearSensitiveFields:", a2);
  }

  -[GEOETARequest _readDestinationWaypointTypeds]((uint64_t)a1);
  if (objc_msgSend(a1[14], "count"))
  {
    v19 = 0;
    do
    {
      objc_msgSend(a1[14], "objectAtIndexedSubscript:", v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = v20;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v20))
      {
        v22 = (void *)objc_msgSend(v21, "copy");
        objc_msgSend(v22, "waypointLocation");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "clearSensitiveFields:", a2);

        objc_msgSend(a1[14], "replaceObjectAtIndex:withObject:", v19, v22);
      }
      else
      {
        objc_msgSend(v21, "clearSensitiveFields:", a2);
      }

      ++v19;
    }
    while (v19 < objc_msgSend(a1[14], "count"));
  }
  -[GEOETARequest _readIntermediateWaypointTypeds]((uint64_t)a1);
  if (objc_msgSend(a1[17], "count"))
  {
    v24 = 0;
    do
    {
      objc_msgSend(a1[17], "objectAtIndexedSubscript:", v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = v25;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v25))
      {
        v27 = (void *)objc_msgSend(v26, "copy");
        objc_msgSend(v27, "waypointLocation");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "clearSensitiveFields:", a2);

        objc_msgSend(a1[17], "replaceObjectAtIndex:withObject:", v24, v27);
      }
      else
      {
        objc_msgSend(v26, "clearSensitiveFields:", a2);
      }

      ++v24;
    }
    while (v24 < objc_msgSend(a1[17], "count"));
  }
  -[GEOETARequest _readDeviceHistoricalLocations]((uint64_t)a1);
  if (objc_msgSend(a1[16], "count"))
  {
    v29 = 0;
    do
    {
      objc_msgSend(a1[16], "objectAtIndexedSubscript:", v29);
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = (void *)v30;
      if (a3 && GEOLocationHasSensitiveFields(v30))
      {
        v32 = (_DWORD *)objc_msgSend(v31, "copy");
        GEOLocationClearSensitiveFields(v32);
        objc_msgSend(a1[16], "replaceObjectAtIndex:withObject:", v29, v32);

      }
      else
      {
        objc_msgSend(v31, "clearSensitiveFields:", a2);
      }

      ++v29;
    }
    while (v29 < objc_msgSend(a1[16], "count"));
  }
  if ((a3 & 1) != 0
    && objc_msgSend(a1, "hasLastKnownRoadLocation")
    && (objc_msgSend(a1, "lastKnownRoadLocation"),
        v33 = (void *)objc_claimAutoreleasedReturnValue(),
        v34 = GEOLocationHasSensitiveFields((uint64_t)v33),
        v33,
        v34))
  {
    objc_msgSend(a1, "lastKnownRoadLocation");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = (_DWORD *)objc_msgSend(v35, "copy");

    GEOLocationClearSensitiveFields(v36);
    objc_msgSend(a1, "setLastKnownRoadLocation:", v36);
  }
  else
  {
    objc_msgSend(a1, "lastKnownRoadLocation");
    v36 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "clearSensitiveFields:", a2);
  }

}

uint64_t GEOETARequestHasSensitiveFields(uint64_t result)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  char HasSensitiveFields;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v1 = (void *)result;
    objc_msgSend((id)result, "origin");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (GEOWaypointHasSensitiveFields(v2))
    {
LABEL_5:

      return 1;
    }
    objc_msgSend(v1, "originWaypointTyped");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (GEOWaypointTypedHasSensitiveFields(v3))
    {

      goto LABEL_5;
    }
    objc_msgSend(v1, "lastKnownRoadLocation");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v4);

    if ((HasSensitiveFields & 1) != 0)
      return 1;
    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    objc_msgSend(v1, "destinations");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v36;
LABEL_11:
      v9 = 0;
      while (1)
      {
        if (*(_QWORD *)v36 != v8)
          objc_enumerationMutation(v2);
        if ((GEOWaypointHasSensitiveFields(*(void **)(*((_QWORD *)&v35 + 1) + 8 * v9)) & 1) != 0)
          goto LABEL_5;
        if (v7 == ++v9)
        {
          v7 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
          if (v7)
            goto LABEL_11;
          break;
        }
      }
    }

    v33 = 0u;
    v34 = 0u;
    v31 = 0u;
    v32 = 0u;
    objc_msgSend(v1, "destinationWaypointTypeds");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v32;
LABEL_19:
      v13 = 0;
      while (1)
      {
        if (*(_QWORD *)v32 != v12)
          objc_enumerationMutation(v2);
        if ((GEOWaypointTypedHasSensitiveFields(*(void **)(*((_QWORD *)&v31 + 1) + 8 * v13)) & 1) != 0)
          goto LABEL_5;
        if (v11 == ++v13)
        {
          v11 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
          if (v11)
            goto LABEL_19;
          break;
        }
      }
    }

    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    objc_msgSend(v1, "intermediateWaypointTypeds");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v28;
LABEL_27:
      v17 = 0;
      while (1)
      {
        if (*(_QWORD *)v28 != v16)
          objc_enumerationMutation(v2);
        if ((GEOWaypointTypedHasSensitiveFields(*(void **)(*((_QWORD *)&v27 + 1) + 8 * v17)) & 1) != 0)
          goto LABEL_5;
        if (v15 == ++v17)
        {
          v15 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
          if (v15)
            goto LABEL_27;
          break;
        }
      }
    }

    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    objc_msgSend(v1, "deviceHistoricalLocations", 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
    if (v19)
    {
      v20 = v19;
      v21 = *(_QWORD *)v24;
      while (2)
      {
        v22 = 0;
        do
        {
          if (*(_QWORD *)v24 != v21)
            objc_enumerationMutation(v18);
          if ((GEOLocationHasSensitiveFields(*(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * v22)) & 1) != 0)
          {

            return 1;
          }
          ++v22;
        }
        while (v20 != v22);
        v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
        if (v20)
          continue;
        break;
      }
    }

    return 0;
  }
  return result;
}

void sub_18983E0B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983F7D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189840328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETAResponseReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unsigned __int8 v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  GEOETAResult *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  int v54;
  char v55;
  __int16 v56;
  int v57;
  int v58;
  __int16 v59;
  void *v60;
  int v62;
  char v63;
  char v64;
  char v65;
  BOOL v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(unsigned __int16 *)(a1 + 128);
  v14 = ((v13 >> 3) & 1)
      + ((v13 >> 10) & 1)
      + ((v13 >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFF9FFFEFFF8FFF7), (int8x8_t)0x1000100010001))+ ((v13 >> 6) & 1)+ ((v13 >> 4) & 1)+ ((v13 >> 5) & 1));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 6;
        v19 = v18 & ~(_BYTE)v12 | v10;
        v20 = v18 | v12;
        v63 = v19;
        v64 = v20 | v19;
        if (((v20 | v9) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v65 = (v21 == 0) | v20;
        v66 = v20;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v10;
LABEL_8:
        v16 = v11;
        v17 = v12;
LABEL_10:
        ++v8;
        v10 = v15;
        v11 = v16;
        v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v23))
      goto LABEL_121;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v7))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_121:
      v62 = 1;
      goto LABEL_122;
    }
    v35 = v27 >> 3;
    v36 = v66;
    if ((v65 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_100;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 128) |= 1u;
        while (1)
        {
          v44 = *v22;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v7))
            break;
          v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v45);
          *(_QWORD *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0)
            goto LABEL_103;
          v41 += 7;
          v32 = v42++ >= 9;
          if (v32)
          {
            LODWORD(v43) = 0;
            goto LABEL_105;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_103:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v43) = 0;
LABEL_105:
        *(_DWORD *)(a1 + 124) = v43;
        goto LABEL_120;
      case 2:
        if (!v36 || (*(_WORD *)(a1 + 128) & 0x100) != 0)
          goto LABEL_100;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v48 = objc_alloc_init(GEOETAResult);
        if (!GEOETAResultReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        -[GEOETAResponse _addNoFlagsEtaResult:](a1, v48);
        goto LABEL_78;
      case 3:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v56 = *(_WORD *)(a1 + 128) << 6;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v48 = objc_alloc_init(GEOPlaceSearchResponse);
        if (!GEOPlaceSearchResponseReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        v49 = 96;
        goto LABEL_92;
      case 4:
        if (!v36 || (*(_WORD *)(a1 + 128) & 4) != 0)
          goto LABEL_100;
        if (!PBReaderPlaceMark())
          goto LABEL_145;
        -[GEOETAResponse _reserveProblemDetails:](a1, 1uLL);
        if (!GEOProblemDetailReadAllFrom(*(_QWORD *)(a1 + 24) + 12 * *(_QWORD *)(a1 + 32), v3))
          goto LABEL_145;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 32);
        goto LABEL_119;
      case 5:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 128) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v56 = *(_WORD *)(a1 + 128) << 8;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v48 = objc_alloc_init(GEOETAResult);
        if (!GEOETAResultReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        v49 = 80;
        goto LABEL_92;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 128) & 0x40) != 0)
          goto LABEL_100;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v48 = objc_alloc_init(GEOETAResult);
        if (!GEOETAResultReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
          goto LABEL_144;
        PBReaderRecallMark();
        -[GEOETAResponse _addNoFlagsEtaResultReferencePointDestination:](a1, v48);
LABEL_78:

        goto LABEL_119;
      case 7:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 128) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v56 = *(_WORD *)(a1 + 128) << 11;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v48 = objc_alloc_init(GEOPDDatasetABStatus);
        if (!GEOPDDatasetABStatusReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_144;
        PBReaderRecallMark();
        v49 = 56;
        goto LABEL_92;
      case 8:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 128) & 0x20) == 0)
        {
          PBReaderReadString();
          v50 = objc_claimAutoreleasedReturnValue();
          v51 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v50;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_145;
        v56 = *(_WORD *)(a1 + 128) << 10;
        goto LABEL_118;
      case 9:
        if (!v36)
          goto LABEL_100;
        if ((*(_WORD *)(a1 + 128) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_145;
          v56 = 32 * *(_WORD *)(a1 + 128);
LABEL_118:
          v8 += v56 >> 15;
LABEL_119:
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_120:
          if (!(v64 & 1 | (v8 != 0)))
            goto LABEL_121;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_145;
        v48 = objc_alloc_init(GEOCommonResponseAttributes);
        if (GEOCommonResponseAttributesReadAllFrom((uint64_t)v48, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = 104;
LABEL_92:
          v51 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;
LABEL_93:

          --v8;
          goto LABEL_119;
        }
LABEL_144:

LABEL_145:
        v62 = 0;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
        if ((v63 & 1) != 0)
LABEL_123:
          *(_WORD *)(a1 + 128) |= 2u;
        if (v66 || (v62 & 1) == 0)
        {
          *(_WORD *)(a1 + 128) |= 0x100u;
          *(_WORD *)(a1 + 128) |= 0x200u;
          *(_WORD *)(a1 + 128) |= 4u;
          *(_WORD *)(a1 + 128) |= 0x80u;
          *(_WORD *)(a1 + 128) |= 0x40u;
          *(_WORD *)(a1 + 128) |= 0x10u;
          *(_WORD *)(a1 + 128) |= 0x20u;
          *(_WORD *)(a1 + 128) |= 0x400u;
          *(_WORD *)(a1 + 128) |= 8u;
        }
        else if (v21)
        {
          while (1)
          {
            v58 = *v21++;
            v57 = v58;
            v59 = 256;
            switch(v58)
            {
              case 0:
                goto LABEL_138;
              case 1:
                continue;
              case 2:
                goto LABEL_137;
              case 3:
                v59 = 512;
                goto LABEL_137;
              case 4:
                v59 = 4;
                goto LABEL_137;
              case 5:
                v59 = 128;
                goto LABEL_137;
              case 6:
                v59 = 64;
                goto LABEL_137;
              case 7:
                v59 = 16;
                goto LABEL_137;
              case 8:
                v59 = 32;
                goto LABEL_137;
              case 9:
                v59 = 1024;
                goto LABEL_137;
              default:
                if (v57 != 1051)
                  continue;
                v59 = 8;
LABEL_137:
                *(_WORD *)(a1 + 128) |= v59;
                break;
            }
          }
        }
LABEL_138:
        if (v62)
          v3 = *(_BYTE *)(v3 + *v23) == 0;
        else
          v3 = 0;
        if (v66)
        {
          v60 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((_DWORD)v35 == 1051)
        {
          if (!v36)
            goto LABEL_100;
          if ((*(_WORD *)(a1 + 128) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_145;
            v56 = *(_WORD *)(a1 + 128) << 12;
            goto LABEL_118;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_145;
          v48 = objc_alloc_init(GEOClientMetrics);
          if (!GEOClientMetricsReadAllFrom((uint64_t)v48, (void *)v3, v11 & 1))
            goto LABEL_144;
          PBReaderRecallMark();
          v49 = 48;
          goto LABEL_92;
        }
        if ((v63 & 1) == 0 || (*(_WORD *)(a1 + 128) & 2) != 0)
        {
LABEL_100:
          v55 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v55 & 1) == 0)
          {
            v62 = 0;
            goto LABEL_122;
          }
          goto LABEL_120;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v52 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v53 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v52;

        }
        v54 = PBUnknownFieldAdd();
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        if (!v54)
        {
          v62 = 0;
          goto LABEL_123;
        }
        goto LABEL_120;
    }
  }
}

void sub_1898410FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984123C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898416FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984183C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189841B74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189841CB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189841DF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189842F90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = *(id *)(a1 + 88);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        -[GEOETAResult readAll:](*(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 96), "readAll:", 1);
  -[GEOETAResult readAll:](*(_QWORD *)(a1 + 80), 1);
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = *(id *)(a1 + 72);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        -[GEOETAResult readAll:](*(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(*(id *)(a1 + 56), "readAll:", 1, (_QWORD)v13);
  objc_msgSend(*(id *)(a1 + 104), "readAll:", 1);
  return objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
}

uint64_t GEOETAResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETAResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETAResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETAResponseReadAllFrom_initialTag;
  Specified = GEOETAResponseReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETAResponseCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_189843310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETAResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETAResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189843370(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETAResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_59;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_57;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_57;
        case 2u:
        case 5u:
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETAResultIsValid(a1))
            goto LABEL_59;
          goto LABEL_53;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceSearchResponseIsValid(a1))
            goto LABEL_59;
          goto LABEL_53;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOProblemDetailIsValid(a1))
            goto LABEL_59;
          goto LABEL_53;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDatasetABStatusIsValid(a1))
            goto LABEL_59;
          goto LABEL_53;
        case 8u:
          if (v15 == 2)
            goto LABEL_54;
          goto LABEL_59;
        case 9u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOCommonResponseAttributesIsValid(a1))
            goto LABEL_53;
          goto LABEL_59;
        default:
          if ((v8 >> 3) == 1051)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOClientMetricsIsValid(a1))
            {
LABEL_59:
              PBReaderRecallMark();
              return 0;
            }
LABEL_53:
            PBReaderRecallMark();
          }
          else
          {
LABEL_54:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_59;
          }
LABEL_57:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_58;
          break;
      }
    }
  }
LABEL_58:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOETAResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceSearchResponseIsValid(a1))
            goto LABEL_69;
          goto LABEL_65;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v33 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETAResultByTypeIsValid(a1))
            goto LABEL_69;
          goto LABEL_65;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETARouteIncidentIsValid(a1))
            goto LABEL_69;
LABEL_65:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_66;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_189843E20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAResponseIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v2 = *(_WORD *)(a1 + 128);
  if ((v2 & 0x900) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 128) & 0x200) != 0)
  {
    if ((GEOPlaceSearchResponseIsDirty(*(os_unfair_lock_s **)(a1 + 96)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 128);
  }
  if ((v2 & 4) == 0)
  {
    if ((v2 & 0x80) != 0)
    {
      if ((GEOETAResultIsDirty(*(os_unfair_lock_s **)(a1 + 80)) & 1) != 0)
        return 1;
      v2 = *(_WORD *)(a1 + 128);
    }
    if ((v2 & 0x478) == 0)
    {
      if ((v2 & 0x100) != 0)
      {
        v18 = 0u;
        v19 = 0u;
        v16 = 0u;
        v17 = 0u;
        v5 = *(id *)(a1 + 88);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v17;
LABEL_15:
          v9 = 0;
          while (1)
          {
            if (*(_QWORD *)v17 != v8)
              objc_enumerationMutation(v5);
            if ((GEOETAResultIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v9)) & 1) != 0)
              goto LABEL_33;
            if (v7 == ++v9)
            {
              v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
              if (v7)
                goto LABEL_15;
              break;
            }
          }
        }

        v2 = *(_WORD *)(a1 + 128);
      }
      if ((v2 & 0x40) == 0)
        return 0;
      v14 = 0u;
      v15 = 0u;
      v12 = 0u;
      v13 = 0u;
      v5 = *(id *)(a1 + 72);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
      if (!v3)
      {
LABEL_34:

        return v3;
      }
      v10 = *(_QWORD *)v13;
LABEL_26:
      v11 = 0;
      while (1)
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v5);
        if ((GEOETAResultIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)) & 1) != 0)
          break;
        if (v3 == ++v11)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
          if (v3)
            goto LABEL_26;
          goto LABEL_34;
        }
      }
LABEL_33:
      v3 = 1;
      goto LABEL_34;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOETAResponseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETAResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOETAResponseClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  unint64_t v6;
  id *v7;
  id *v8;
  void *v9;
  void *v10;
  int HasSensitiveFields;
  void *v12;
  void *v13;
  void *v14;
  id *v15;
  unsigned int v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t result;
  unint64_t i;
  id *v22;
  id *v23;
  void *v24;

  -[GEOETAResponse _readEtaResults]((uint64_t)a1);
  if (objc_msgSend(a1[11], "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(a1[11], "objectAtIndexedSubscript:", v6);
      v7 = (id *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (a3 && GEOETAResultHasSensitiveFields(v7))
      {
        v9 = (void *)objc_msgSend(v8, "copy");
        GEOETAResultClearSensitiveFields((uint64_t)v9, a2, 0);
        objc_msgSend(a1[11], "replaceObjectAtIndex:withObject:", v6, v9);

      }
      else if (v8)
      {
        GEOETAResultClearSensitiveFields((uint64_t)v8, a2, 1);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(a1[11], "count"));
  }
  if ((a3 & 1) != 0)
  {
    if (objc_msgSend(a1, "hasOriginPlaceSearchResponse")
      && (objc_msgSend(a1, "originPlaceSearchResponse"),
          v10 = (void *)objc_claimAutoreleasedReturnValue(),
          HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v10),
          v10,
          HasSensitiveFields))
    {
      objc_msgSend(a1, "originPlaceSearchResponse");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = (void *)objc_msgSend(v12, "copy");

      GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v13, a2, 0);
      objc_msgSend(a1, "setOriginPlaceSearchResponse:", v13);
    }
    else
    {
      objc_msgSend(a1, "originPlaceSearchResponse");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasEtaResultReferencePointOrigin"))
    {
      objc_msgSend(a1, "etaResultReferencePointOrigin");
      v15 = (id *)objc_claimAutoreleasedReturnValue();
      v16 = GEOETAResultHasSensitiveFields(v15);

      if (v16)
      {
        objc_msgSend(a1, "etaResultReferencePointOrigin");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = (void *)objc_msgSend(v17, "copy");

        GEOETAResultClearSensitiveFields((uint64_t)v18, a2, 0);
        objc_msgSend(a1, "setEtaResultReferencePointOrigin:", v18);
        goto LABEL_20;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "originPlaceSearchResponse");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "etaResultReferencePointOrigin");
  v19 = objc_claimAutoreleasedReturnValue();
  v18 = (void *)v19;
  if (v19)
    GEOETAResultClearSensitiveFields(v19, a2, 1);
LABEL_20:

  -[GEOETAResponse _readEtaResultReferencePointDestinations]((uint64_t)a1);
  result = objc_msgSend(a1[9], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[9], "objectAtIndexedSubscript:", i);
      v22 = (id *)objc_claimAutoreleasedReturnValue();
      v23 = v22;
      if (a3 && GEOETAResultHasSensitiveFields(v22))
      {
        v24 = (void *)objc_msgSend(v23, "copy");
        GEOETAResultClearSensitiveFields((uint64_t)v24, a2, 0);
        objc_msgSend(a1[9], "replaceObjectAtIndex:withObject:", i, v24);

      }
      else if (v23)
      {
        GEOETAResultClearSensitiveFields((uint64_t)v23, a2, 1);
      }

      result = objc_msgSend(a1[9], "count");
    }
  }
  return result;
}

uint64_t GEOETAResponseHasSensitiveFields(uint64_t result)
{
  void *v1;
  void *v2;
  id *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v1 = (void *)result;
    objc_msgSend((id)result, "originPlaceSearchResponse");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (GEOPlaceSearchResponseHasSensitiveFields(v2))
    {
LABEL_3:

      return 1;
    }
    objc_msgSend(v1, "etaResultReferencePointOrigin");
    v3 = (id *)objc_claimAutoreleasedReturnValue();
    v4 = GEOETAResultHasSensitiveFields(v3);

    if ((v4 & 1) != 0)
      return 1;
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    objc_msgSend(v1, "etaResults");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v19;
LABEL_9:
      v8 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v7)
          objc_enumerationMutation(v2);
        if ((GEOETAResultHasSensitiveFields(*(id **)(*((_QWORD *)&v18 + 1) + 8 * v8)) & 1) != 0)
          goto LABEL_3;
        if (v6 == ++v8)
        {
          v6 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
          if (v6)
            goto LABEL_9;
          break;
        }
      }
    }

    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    objc_msgSend(v1, "etaResultReferencePointDestinations", 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v15;
      while (2)
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v15 != v12)
            objc_enumerationMutation(v9);
          if ((GEOETAResultHasSensitiveFields(*(id **)(*((_QWORD *)&v14 + 1) + 8 * v13)) & 1) != 0)
          {

            return 1;
          }
          ++v13;
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
        if (v11)
          continue;
        break;
      }
    }

    return 0;
  }
  return result;
}

id *GEOETAResultHasSensitiveFields(id *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    -[GEOETAResult placeSearchResponse](result);
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v1);

    return (id *)HasSensitiveFields;
  }
  return result;
}

void GEOETAResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a1
    && a3
    && (-[GEOETAResult _readPlaceSearchResponse](a1), *(_QWORD *)(a1 + 32))
    && (-[GEOETAResult placeSearchResponse]((id *)a1),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPlaceSearchResponseHasSensitiveFields(v5),
        v5,
        HasSensitiveFields))
  {
    -[GEOETAResult placeSearchResponse]((id *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v8, a2, 0);
    -[GEOETAResult setPlaceSearchResponse:](a1, v8);
  }
  else
  {
    -[GEOETAResult placeSearchResponse]((id *)a1);
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_18984503C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984591C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189845E1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984613C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const __int16 *v12;
  uint16x4_t v13;
  int16x4_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  GEOPlaceSearchResponse *v62;
  void *v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  int v72;
  __int16 v73;
  void *v74;
  int v76;
  int *v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const __int16 *)(a1 + 76);
  v13 = (uint16x4_t)vld1_dup_s16(v12);
  v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFCFFFBFFFAFFF9), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  v15 = v14.i32[0];
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 1;
        v78 = v19 & ~(_BYTE)v11 | v9;
        v79 = v8;
        v80 = v19 | v11 | v78;
        if ((((v19 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v81 = (v20 == 0) | v19 | v11;
        v82 = v19 | v11;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_116;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_116:
      v76 = 1;
      goto LABEL_117;
    }
    v34 = v26 >> 3;
    v35 = v82;
    if ((v81 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v79 & 1) == 0)
          goto LABEL_93;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (1)
        {
          v43 = *v21;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_96;
          v40 += 7;
          v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_98;
          }
        }
        *(_BYTE *)(v3 + *v22) = 1;
LABEL_96:
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v42) = 0;
LABEL_98:
        v71 = 72;
        goto LABEL_111;
      case 2:
        if ((v79 & 1) == 0)
          goto LABEL_93;
        v50 = 0;
        v51 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          v52 = *v21;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v42 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              v31 = v51++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v42) = 0;
LABEL_102:
        v71 = 68;
        goto LABEL_111;
      case 3:
        if ((v79 & 1) == 0)
          goto LABEL_93;
        v56 = 0;
        v57 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          v58 = *v21;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v42 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              v31 = v57++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v42) = 0;
LABEL_106:
        v71 = 64;
        goto LABEL_111;
      case 4:
        if (!v35)
          goto LABEL_93;
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_134;
          v7 += *(unsigned __int16 *)(a1 + 76) << 25 >> 31;
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v62 = objc_alloc_init(GEOPlaceSearchResponse);
        if (GEOPlaceSearchResponseReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v63 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v62;

          --v7;
LABEL_114:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_115;
        }
LABEL_133:

LABEL_134:
        v76 = 0;
        v77 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_118:
        if ((v78 & 1) != 0)
LABEL_119:
          *(_WORD *)(a1 + v77[346]) |= 0x10u;
        if (v82 & 1 | ((v76 & 1) == 0))
        {
          *(_WORD *)(a1 + v77[346]) |= 0x40u;
          *(_WORD *)(a1 + v77[346]) |= 0x80u;
          *(_WORD *)(a1 + v77[346]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            v72 = *v20++;
            v73 = 64;
            switch(v72)
            {
              case 0:
                goto LABEL_127;
              case 4:
                goto LABEL_126;
              case 6:
                v73 = 128;
                goto LABEL_126;
              case 7:
                v73 = 32;
LABEL_126:
                *(_WORD *)(a1 + v77[346]) |= v73;
                break;
              default:
                continue;
            }
          }
        }
LABEL_127:
        if (v76)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if ((v82 & 1) != 0)
        {
          v74 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v79 & 1) == 0)
          goto LABEL_93;
        v64 = 0;
        v65 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          v66 = *v21;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v42 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v31 = v65++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          LODWORD(v42) = 0;
LABEL_110:
        v71 = 60;
LABEL_111:
        *(_DWORD *)(a1 + v71) = v42;
        goto LABEL_115;
      case 6:
        if (!v35 || (*(_WORD *)(a1 + 76) & 0x80) != 0)
          goto LABEL_93;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v62 = objc_alloc_init(GEOETAResultByType);
        if (!GEOETAResultByTypeReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
          goto LABEL_133;
        PBReaderRecallMark();
        -[GEOETAResult _addNoFlagsSortedETA:](a1, v62);
        goto LABEL_92;
      case 7:
        if (!v35 || (*(_WORD *)(a1 + 76) & 0x20) != 0)
          goto LABEL_93;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_134;
        v62 = objc_alloc_init(GEOETARouteIncident);
        if (!GEOETARouteIncidentReadAllFrom((uint64_t)v62, (void *)v3, v10 & 1))
          goto LABEL_133;
        PBReaderRecallMark();
        -[GEOETAResult _addNoFlagsEtaRouteIncident:](a1, v62);
LABEL_92:

        goto LABEL_114;
      default:
        if ((v78 & 1) == 0 || (*(_WORD *)(a1 + 76) & 0x10) != 0)
        {
LABEL_93:
          v70 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v70 & 1) == 0)
          {
            v76 = 0;
LABEL_117:
            v77 = &OBJC_IVAR___GEOTextItemContainer__textItems;
            goto LABEL_118;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v48 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v47;

          }
          v49 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v49)
          {
            v76 = 0;
            v77 = &OBJC_IVAR___GEOTextItemContainer__textItems;
            goto LABEL_119;
          }
        }
LABEL_115:
        if (!(v80 & 1 | (v7 != 0)))
          goto LABEL_116;
        continue;
    }
  }
}

void sub_189846B60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189846D34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189847554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETAResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[4], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOETAResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETAResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETAResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETAResultReadAllFrom_initialTag;
  Specified = GEOETAResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETAResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189847F50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETAResultByTypeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  char v62;
  unsigned int v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  int v70;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  _BOOL8 v78;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_137:
    v78 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v78;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_137;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = *v4;
        v15 = a1[v14];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = *v4;
    v15 = a1[v14];
    if (a1[v14])
      v8 = 0;
LABEL_14:
    v16 = v8 & 7;
    if (v15 || v16 == 4)
      goto LABEL_137;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0)
          {
            v23 = v18++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 2u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 3u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v29 = 0;
        while (1)
        {
          v30 = *v2;
          v31 = *(_QWORD *)&a1[v30];
          v32 = v31 + 1;
          if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
          *(_QWORD *)&a1[v30] = v32;
          if (v33 < 0)
          {
            v23 = v29++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 4u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v34 = 0;
        while (1)
        {
          v35 = *v2;
          v36 = *(_QWORD *)&a1[v35];
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
          *(_QWORD *)&a1[v35] = v37;
          if (v38 < 0)
          {
            v23 = v34++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 5u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v39 = 0;
        while (1)
        {
          v40 = *v2;
          v41 = *(_QWORD *)&a1[v40];
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
          *(_QWORD *)&a1[v40] = v42;
          if (v43 < 0)
          {
            v23 = v39++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 6u:
        if (v16 != 1)
          goto LABEL_140;
        v44 = *v2;
        v45 = *(_QWORD *)&a1[v44];
        if (v45 > 0xFFFFFFFFFFFFFFF7)
          goto LABEL_133;
        v46 = v45 + 8;
        if (v46 > *(_QWORD *)&a1[*v3])
          goto LABEL_133;
        *(_QWORD *)&a1[v44] = v46;
        goto LABEL_136;
      case 7u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v47 = 0;
        while (1)
        {
          v48 = *v2;
          v49 = *(_QWORD *)&a1[v48];
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
          *(_QWORD *)&a1[v48] = v50;
          if (v51 < 0)
          {
            v23 = v47++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 8u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v52 = 0;
        while (1)
        {
          v53 = *v2;
          v54 = *(_QWORD *)&a1[v53];
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
          *(_QWORD *)&a1[v53] = v55;
          if (v56 < 0)
          {
            v23 = v52++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 9u:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v57 = 0;
        while (1)
        {
          v58 = *v2;
          v59 = *(_QWORD *)&a1[v58];
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
            goto LABEL_132;
          v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
          *(_QWORD *)&a1[v58] = v60;
          if (v61 < 0)
          {
            v23 = v57++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
      case 0xAu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          goto LABEL_140;
        goto LABEL_135;
      case 0xBu:
        if (v16 == 2 && PBReaderPlaceMark() && GEORouteTrafficDetailIsValid(a1))
          goto LABEL_135;
        goto LABEL_140;
      case 0xCu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_140;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_100:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_134;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        while (1)
        {
          v65 = *v2;
          v66 = *(_QWORD *)&a1[v65];
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)&a1[*v3])
            break;
          v68 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v66);
          *(_QWORD *)&a1[v65] = v67;
          v64 |= (unint64_t)(v68 & 0x7F) << v62;
          if ((v68 & 0x80) == 0)
            goto LABEL_110;
          v62 += 7;
          v13 = v63++ >= 9;
          if (v13)
          {
            v64 = 0;
            v69 = a1[*v4];
            goto LABEL_112;
          }
        }
        a1[*v4] = 1;
LABEL_110:
        v69 = a1[*v4];
        if (a1[*v4])
          v64 = 0;
LABEL_112:
        v70 = v64 & 7;
        if (v69 || v70 == 4)
        {
LABEL_134:
          v77 = a1[*v4];
          PBReaderRecallMark();
          if (v77)
            goto LABEL_140;
LABEL_135:
          PBReaderRecallMark();
LABEL_136:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_137;
          continue;
        }
        if ((v64 >> 3) != 2 && (v64 >> 3) != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_139;
          goto LABEL_100;
        }
        if (v70 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1))
        {
          PBReaderRecallMark();
          goto LABEL_100;
        }
LABEL_139:
        PBReaderRecallMark();
LABEL_140:
        PBReaderRecallMark();
        return 0;
      case 0xDu:
        if ((v8 & 7) != 0)
          goto LABEL_140;
        v72 = 0;
        while (1)
        {
          v73 = *v2;
          v74 = *(_QWORD *)&a1[v73];
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
            break;
          v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
          *(_QWORD *)&a1[v73] = v75;
          if (v76 < 0)
          {
            v23 = v72++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_136;
        }
LABEL_132:
        v14 = *v4;
LABEL_133:
        a1[v14] = 1;
        goto LABEL_136;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_140;
        goto LABEL_136;
    }
  }
}

void sub_189848948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAResultIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_WORD *)(a1 + 76);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEOPlaceSearchResponseIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 76);
  }
  if ((v2 & 0xA0) != 0)
    return 1;
  if ((v2 & 0x80) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOETAResultByTypeIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOETAResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETAResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189848EA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189849B6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAResultByTypeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const __int16 *v12;
  uint16x4_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  GEOFormattedString *v97;
  uint64_t v98;
  void *v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  __int16 v108;
  int v109;
  int v110;
  BOOL v111;
  __int16 v112;
  void *v113;
  int v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const __int16 *)(a1 + 104);
  v13 = (uint16x4_t)vld1_dup_s16(v12);
  v14 = *(_QWORD *)&vshl_u16(v13, (uint16x4_t)0xFFF6FFF4FFF3FFF5) & 0xFFC1FFC1FFC1FFC1;
  LOWORD(v14) = vaddv_s16((int16x4_t)v14);
  v15 = v14;
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 1;
        v20 = v19 | v11;
        v116 = v19 & ~(_BYTE)v11 | v9;
        v119 = v19 | v11 | v116;
        if ((((v19 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v120 = (v21 == 0) | v20;
        v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v117 = v8;
        v118 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v23))
      goto LABEL_186;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v22;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_186:
      v115 = 1;
      goto LABEL_187;
    }
    v36 = v28 >> 3;
    v37 = v20;
    if ((v120 & 1) == 0)
    {
      v38 = v21;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 0x40u;
        while (1)
        {
          v45 = *v22;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_141;
          v42 += 7;
          v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_143;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_141:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_143:
        v107 = 88;
        goto LABEL_176;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v52 = 0;
        v53 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 0x20u;
        while (2)
        {
          v54 = *v22;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v44 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_147;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_147:
        v107 = 84;
        goto LABEL_176;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v58 = 0;
        v59 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 0x80u;
        while (2)
        {
          v60 = *v22;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v44 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              v33 = v59++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_151;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_151:
        v107 = 92;
        goto LABEL_176;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v64 = 0;
        v65 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 4u;
        while (2)
        {
          v66 = *v22;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v44 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v33 = v65++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_155:
        v107 = 72;
        goto LABEL_176;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v70 = 0;
        v71 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 2u;
        while (2)
        {
          v72 = *v22;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v44 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v33 = v71++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_159;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_159:
        v107 = 68;
        goto LABEL_176;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        *(_WORD *)(a1 + v24[207]) |= 1u;
        v76 = *v22;
        v77 = *(_QWORD *)(v3 + v76);
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v78 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v77);
          *(_QWORD *)(v3 + v76) = v77 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v23) = 1;
          v78 = 0;
        }
        *(_QWORD *)(a1 + 24) = v78;
        goto LABEL_177;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v79 = 0;
        v80 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 0x200u;
        while (2)
        {
          v81 = *v22;
          v82 = *(_QWORD *)(v3 + v81);
          v83 = v82 + 1;
          if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v44 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              v33 = v80++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_163;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_163:
        v107 = 100;
        goto LABEL_176;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v85 = 0;
        v86 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 0x100u;
        while (2)
        {
          v87 = *v22;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v44 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              v33 = v86++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_167;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_167:
        v107 = 96;
        goto LABEL_176;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v91 = 0;
        v92 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 0x10u;
        while (2)
        {
          v93 = *v22;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v44 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              v33 = v92++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_171:
        v107 = 80;
        goto LABEL_176;
      case 10:
        if (!v37 || (*(_WORD *)(a1 + v24[207]) & 0x2000) != 0)
          goto LABEL_138;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_209;
        v97 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v97, (void *)v3, v10 & 1))
          goto LABEL_208;
        PBReaderRecallMark();
        -[GEOETAResultByType _addNoFlagsSummaryForPredictedDestination:](a1, v97);

        goto LABEL_129;
      case 11:
        if (!v37)
          goto LABEL_138;
        if ((*(_WORD *)(a1 + v24[207]) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_209;
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          v108 = 16 * *(_WORD *)(a1 + 104);
          goto LABEL_183;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_209;
        v97 = objc_alloc_init(GEORouteTrafficDetail);
        if (!GEORouteTrafficDetailReadAllFrom((uint64_t)v97, (void *)v3, v10 & 1))
          goto LABEL_208;
        PBReaderRecallMark();
        v98 = 32;
        goto LABEL_128;
      case 12:
        if (!v37)
          goto LABEL_138;
        if ((*(_WORD *)(a1 + v24[207]) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_209;
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          v108 = 8 * *(_WORD *)(a1 + 104);
LABEL_183:
          v7 += v108 >> 15;
          v8 = v117;
          v20 = v118;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_177;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_209;
        v97 = objc_alloc_init(GEOShortTrafficSummary);
        if (GEOShortTrafficSummaryReadAllFrom((uint64_t)v97, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v98 = 40;
LABEL_128:
          v99 = *(void **)(a1 + v98);
          *(_QWORD *)(a1 + v98) = v97;

          --v7;
LABEL_129:
          v8 = v117;
          v20 = v118;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
LABEL_177:
          if (!(v119 & 1 | (v7 != 0)))
            goto LABEL_186;
          continue;
        }
LABEL_208:

LABEL_209:
        v115 = 0;
        v20 = v118;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
LABEL_187:
        if ((v116 & 1) != 0)
LABEL_188:
          *(_WORD *)(a1 + v24[207]) |= 0x400u;
        if (v20 & 1 | ((v115 & 1) == 0))
        {
          *(_WORD *)(a1 + v24[207]) |= 0x2000u;
          *(_WORD *)(a1 + v24[207]) |= 0x800u;
          *(_WORD *)(a1 + v24[207]) |= 0x1000u;
          goto LABEL_202;
        }
        if (v21)
        {
          while (2)
          {
            while (1)
            {
              v110 = *v21++;
              v109 = v110;
              v111 = v110 == 10;
              if (v110 > 10)
                break;
              if (v111)
              {
                v112 = 0x2000;
LABEL_200:
                *(_WORD *)(a1 + v24[207]) |= v112;
                continue;
              }
              if (!v109)
                goto LABEL_202;
            }
            if (v109 == 12)
            {
              v112 = 4096;
            }
            else
            {
              if (v109 != 11)
                continue;
              v112 = 2048;
            }
            goto LABEL_200;
          }
        }
LABEL_202:
        if (v115)
        {
          v3 = *(_BYTE *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_206:
          v113 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_206;
        }
        return v3;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_138;
        v100 = 0;
        v101 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[207]) |= 8u;
        while (2)
        {
          v102 = *v22;
          v103 = *(_QWORD *)(v3 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v44 |= (unint64_t)(v105 & 0x7F) << v100;
            if (v105 < 0)
            {
              v100 += 7;
              v33 = v101++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_175:
        v107 = 76;
LABEL_176:
        *(_DWORD *)(a1 + v107) = v44;
        goto LABEL_177;
      default:
        if ((v116 & 1) == 0 || (*(_WORD *)(a1 + v24[207]) & 0x400) != 0)
        {
LABEL_138:
          v106 = PBReaderSkipValueWithTag();
          v8 = v117;
          v20 = v118;
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v106 & 1) == 0)
          {
            v115 = 0;
            goto LABEL_187;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v50 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v49;

          }
          v51 = PBUnknownFieldAdd();
          v8 = v117;
          v20 = v118;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          if (!v51)
          {
            v115 = 0;
            goto LABEL_188;
          }
        }
        goto LABEL_177;
    }
  }
}

void sub_18984AB70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984ACB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984C340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETAResultByTypeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  -[GEOShortTrafficSummary readAll:](*(_QWORD *)(a1 + 40), 1);
}

unint64_t GEOETAResultByTypeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETAResultByTypeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETAResultByTypeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETAResultByTypeReadAllFrom_initialTag;
  Specified = GEOETAResultByTypeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETAResultByTypeCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18984C5F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAResultByTypeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETAResultByTypeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18984C658(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984CA14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAResultByTypeIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  os_unfair_lock_s *v5;
  char IsDirty;
  id v7;
  uint64_t v8;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x6000) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 104) & 0x800) != 0)
  {
    if (GEORouteTrafficDetailIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x1000) == 0)
    goto LABEL_11;
  v5 = *(os_unfair_lock_s **)(a1 + 40);
  if (v5)
  {
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOShortTrafficSummaryIsDirty((uint64_t)v5);
    os_unfair_lock_unlock(v5 + 12);
    if ((IsDirty & 1) != 0)
      return 1;
  }
  v2 = *(_WORD *)(a1 + 104);
LABEL_11:
  if ((v2 & 0x2000) == 0)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v7 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v8 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(v7);
        if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v10 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_23;
        }
      }
      v3 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_23:

  return v3;
}

os_unfair_lock_s *GEOETAResultByTypeIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETAResultByTypeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18984D2E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984DC64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984E140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETARouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const float *v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  GEOETAStep *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  int v54;
  int *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  int v64;
  int *v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  id v74;
  void *v75;
  int v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  int v84;
  int *v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  int v119;
  int *v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  void *v129;
  char v130;
  char v131;
  uint64_t v132;
  int v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  int v162;
  int v163;
  void *v164;
  char v166;
  int v167;
  char v168;
  char v169;
  char v170;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 280));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 276);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 272));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const float *)(a1 + 308);
  v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE4E80), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE4E90), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE4E60), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE4E70), v13))), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE4EA0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE4EB0), v13))));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v16 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 0x11;
        v19 = v18 & ~(_BYTE)v10 | v8;
        v20 = v18 | v10;
        if ((((v18 | v10) | v7) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BD8];
        v167 = 1;
        v24 = v19;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
          goto LABEL_345;
        v166 = v19;
        v168 = v20 | v19;
        v170 = (v21 == 0) | v20;
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v169 = v20;
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v8;
LABEL_8:
        v16 = v9;
        v17 = v10;
LABEL_10:
        ++v6;
        v8 = v15;
        v9 = v16;
        v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v25))
      goto LABEL_339;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v22;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v23))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_339:
      v167 = 1;
      goto LABEL_344;
    }
    v38 = v29 >> 3;
    v39 = v20;
    if ((v170 & 1) == 0)
    {
      v40 = v21;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if (!v39)
          goto LABEL_263;
        if ((*(_BYTE *)(a1 + 310) & 0x80) == 0)
        {
          PBReaderReadData();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 216;
          goto LABEL_228;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_342;
        v133 = (int)(*(_DWORD *)(a1 + 308) << 8) >> 31;
        goto LABEL_303;
      case 2:
        if (!v39 || (*(_BYTE *)(a1 + 311) & 4) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOETAStep);
        if (!GEOETAStepReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsStep:](a1, v46);
        goto LABEL_245;
      case 3:
        if (!v39 || (*(_BYTE *)(a1 + 311) & 0x20) != 0)
          goto LABEL_261;
        PBReaderReadData();
        v46 = (GEOETAStep *)objc_claimAutoreleasedReturnValue();
        if (v46)
          -[GEOETARoute _addNoFlagsZilchPoints:](a1, v46);
        goto LABEL_245;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_263;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_DWORD *)(a1 + 308) |= 0x20u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v50 = *v22;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v34 = v48++ >= 9;
              if (v34)
              {
                v49 = 0;
                goto LABEL_269;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v49 = 0;
LABEL_269:
        *(_BYTE *)(a1 + 304) = v49 != 0;
        goto LABEL_306;
      case 5:
        if (!v39 || (*(_BYTE *)(a1 + 310) & 0x40) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEORoute);
        if (!GEORouteReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsReroutedRoute:](a1, v46);
        goto LABEL_245;
      case 6:
        if (!v39 || (*(_BYTE *)(a1 + 310) & 4) != 0)
          goto LABEL_261;
        PBReaderReadData();
        v46 = (GEOETAStep *)objc_claimAutoreleasedReturnValue();
        if (v46)
          -[GEOETARoute _addNoFlagsInvalidSectionZilchPoints:](a1, v46);
        goto LABEL_245;
      case 7:
        if (!v39 || (*(_BYTE *)(a1 + 309) & 4) != 0)
          goto LABEL_263;
        if (v36 != 2)
        {
          v134 = 0;
          v135 = 0;
          v136 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v137 = *v22;
            v138 = *(_QWORD *)(v3 + v137);
            v139 = v138 + 1;
            if (v138 == -1 || v139 > *(_QWORD *)(v3 + *v23))
              goto LABEL_337;
            v140 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v138);
            *(_QWORD *)(v3 + v137) = v139;
            v136 |= (unint64_t)(v140 & 0x7F) << v134;
            if (v140 < 0)
            {
              v134 += 7;
              v34 = v135++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_338;
          }
        }
        v54 = PBReaderPlaceMark();
        v23 = (int *)MEMORY[0x1E0D82BD8];
        if (!v54)
          goto LABEL_342;
        while (1)
        {
          v55 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_265;
          v56 = 0;
          v57 = 0;
          v58 = 0;
          v59 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v60 = *v22;
            v61 = *(_QWORD *)(v3 + v60);
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v23))
              break;
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v59) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v58 |= (unint64_t)(v63 & 0x7F) << v56;
            if (v63 < 0)
            {
              v56 += 7;
              v34 = v57++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_82;
          }
          *(_BYTE *)(v3 + *v55) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
      case 8:
        if (!v39 || (*(_BYTE *)(a1 + 309) & 2) != 0)
          goto LABEL_263;
        if (v36 != 2)
        {
          v141 = 0;
          v142 = 0;
          v143 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v144 = *v22;
            v145 = *(_QWORD *)(v3 + v144);
            v146 = v145 + 1;
            if (v145 == -1 || v146 > *(_QWORD *)(v3 + *v23))
              goto LABEL_337;
            v147 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v145);
            *(_QWORD *)(v3 + v144) = v146;
            v143 |= (unint64_t)(v147 & 0x7F) << v141;
            if (v147 < 0)
            {
              v141 += 7;
              v34 = v142++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_338;
          }
        }
        v64 = PBReaderPlaceMark();
        v23 = (int *)MEMORY[0x1E0D82BD8];
        if (!v64)
          goto LABEL_342;
        while (1)
        {
          v65 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_265;
          v66 = 0;
          v67 = 0;
          v68 = 0;
          v69 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v70 = *v22;
            v71 = *(_QWORD *)(v3 + v70);
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v23))
              break;
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v69) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v68 |= (unint64_t)(v73 & 0x7F) << v66;
            if (v73 < 0)
            {
              v66 += 7;
              v34 = v67++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_97;
          }
          *(_BYTE *)(v3 + *v65) = 1;
LABEL_97:
          PBRepeatedUInt32Add();
        }
      case 10:
        if (!v39 || (*(_BYTE *)(a1 + 310) & 1) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentsOnETARoute:](a1, v46);
        goto LABEL_245;
      case 11:
        if (!v39 || (*(_BYTE *)(a1 + 310) & 2) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentsOnReRoutes:](a1, v46);
        goto LABEL_245;
      case 12:
        if (!v39 || (*(_BYTE *)(a1 + 309) & 0x80) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentsOffReRoutes:](a1, v46);
        goto LABEL_245;
      case 13:
        if ((v7 & 1) == 0)
          goto LABEL_263;
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 308) |= 1u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v80 = *v22;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v34 = v78++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_273;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v79) = 0;
LABEL_273:
        v132 = 284;
        goto LABEL_290;
      case 14:
        if (!v39 || (*(_BYTE *)(a1 + 308) & 0x80) != 0)
          goto LABEL_263;
        if (v36 != 2)
        {
          v148 = 0;
          v149 = 0;
          v150 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v151 = *v22;
            v152 = *(_QWORD *)(v3 + v151);
            v153 = v152 + 1;
            if (v152 == -1 || v153 > *(_QWORD *)(v3 + *v23))
              goto LABEL_337;
            v154 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v152);
            *(_QWORD *)(v3 + v151) = v153;
            v150 |= (unint64_t)(v154 & 0x7F) << v148;
            if (v154 < 0)
            {
              v148 += 7;
              v34 = v149++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_338;
          }
        }
        v84 = PBReaderPlaceMark();
        v23 = (int *)MEMORY[0x1E0D82BD8];
        if (!v84)
          goto LABEL_342;
        while (1)
        {
          v85 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_265;
          v86 = 0;
          v87 = 0;
          v88 = 0;
          v89 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v90 = *v22;
            v91 = *(_QWORD *)(v3 + v90);
            v92 = v91 + 1;
            if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v23))
              break;
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v89) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v88 |= (unint64_t)(v93 & 0x7F) << v86;
            if (v93 < 0)
            {
              v86 += 7;
              v34 = v87++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_141;
          }
          *(_BYTE *)(v3 + *v85) = 1;
LABEL_141:
          PBRepeatedUInt32Add();
        }
      case 15:
        if (!v39)
          goto LABEL_263;
        if ((*(_BYTE *)(a1 + 311) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_342;
          v133 = (16 * *(_DWORD *)(a1 + 308)) >> 31;
          goto LABEL_303;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOTrafficBannerText);
        if (!GEOTrafficBannerTextReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        v94 = 248;
        goto LABEL_224;
      case 16:
        if ((v7 & 1) == 0)
          goto LABEL_263;
        v95 = 0;
        v96 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 308) |= 4u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v97 = *v22;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v79 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              v34 = v96++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_277;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v79) = 0;
LABEL_277:
        v132 = 292;
        goto LABEL_290;
      case 17:
        if ((v7 & 1) == 0)
          goto LABEL_263;
        v101 = 0;
        v102 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 308) |= 8u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v103 = *v22;
          v104 = *(_QWORD *)(v3 + v103);
          v105 = v104 + 1;
          if (v104 == -1 || v105 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v104);
            *(_QWORD *)(v3 + v103) = v105;
            v79 |= (unint64_t)(v106 & 0x7F) << v101;
            if (v106 < 0)
            {
              v101 += 7;
              v34 = v102++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_281;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v79) = 0;
LABEL_281:
        v132 = 296;
        goto LABEL_290;
      case 18:
        if ((v7 & 1) == 0)
          goto LABEL_263;
        v107 = 0;
        v108 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 308) |= 0x10u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v109 = *v22;
          v110 = *(_QWORD *)(v3 + v109);
          v111 = v110 + 1;
          if (v110 == -1 || v111 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v112 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v110);
            *(_QWORD *)(v3 + v109) = v111;
            v79 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              v34 = v108++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_285;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v79) = 0;
LABEL_285:
        v132 = 300;
        goto LABEL_290;
      case 19:
        if ((v7 & 1) == 0)
          goto LABEL_263;
        v113 = 0;
        v114 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 308) |= 2u;
        v23 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v115 = *v22;
          v116 = *(_QWORD *)(v3 + v115);
          v117 = v116 + 1;
          if (v116 == -1 || v117 > *(_QWORD *)(v3 + *v23))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v118 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v116);
            *(_QWORD *)(v3 + v115) = v117;
            v79 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              v34 = v114++ >= 9;
              if (v34)
              {
                LODWORD(v79) = 0;
                goto LABEL_289;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v79) = 0;
LABEL_289:
        v132 = 288;
LABEL_290:
        *(_DWORD *)(a1 + v132) = v79;
        goto LABEL_306;
      case 20:
        if (!v39 || (*(_BYTE *)(a1 + 309) & 0x10) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOEnrouteNotice);
        if (!GEOEnrouteNoticeReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsEnrouteNotice:](a1, v46);
        goto LABEL_245;
      case 21:
        if (!v39 || (*(_BYTE *)(a1 + 311) & 0x10) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOTrafficColorInfo);
        if (!GEOTrafficColorInfoReadAllFrom(v46, (void *)v3))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsTrafficColorInfo:](a1, v46);
        goto LABEL_245;
      case 22:
        if (!v39 || (*(_BYTE *)(a1 + 309) & 0x40) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOIncidentOnRouteInfo);
        if (!GEOIncidentOnRouteInfoReadAllFrom(v46, (void *)v3))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsIncidentOnRouteInfo:](a1, v46);
        goto LABEL_245;
      case 23:
        if (!v39)
          goto LABEL_263;
        if ((*(_BYTE *)(a1 + 310) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_342;
          v133 = (int)(*(_DWORD *)(a1 + 308) << 11) >> 31;
          goto LABEL_303;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        v94 = 192;
        goto LABEL_224;
      case 24:
        if (!v39)
          goto LABEL_263;
        if ((*(_BYTE *)(a1 + 309) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_342;
          v133 = (int)(*(_DWORD *)(a1 + 308) << 20) >> 31;
          goto LABEL_303;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        v94 = 120;
        goto LABEL_224;
      case 25:
        if (!v39 || (*(_BYTE *)(a1 + 309) & 1) != 0)
          goto LABEL_263;
        if (v36 == 2)
        {
          v119 = PBReaderPlaceMark();
          v23 = (int *)MEMORY[0x1E0D82BD8];
          if (!v119)
            goto LABEL_342;
          while (1)
          {
            v120 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v121 = 0;
            v122 = 0;
            v123 = 0;
            v124 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v125 = *v22;
              v126 = *(_QWORD *)(v3 + v125);
              v127 = v126 + 1;
              if (v126 == -1 || v127 > *(_QWORD *)(v3 + *v23))
                break;
              v128 = *(_BYTE *)(*(_QWORD *)(v3 + *v124) + v126);
              *(_QWORD *)(v3 + v125) = v127;
              v123 |= (unint64_t)(v128 & 0x7F) << v121;
              if (v128 < 0)
              {
                v121 += 7;
                v34 = v122++ >= 9;
                if (!v34)
                  continue;
              }
              goto LABEL_218;
            }
            *(_BYTE *)(v3 + *v120) = 1;
LABEL_218:
            PBRepeatedUInt32Add();
          }
LABEL_265:
          PBReaderRecallMark();
        }
        else
        {
          v155 = 0;
          v156 = 0;
          v157 = 0;
          v23 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v158 = *v22;
            v159 = *(_QWORD *)(v3 + v158);
            v160 = v159 + 1;
            if (v159 == -1 || v160 > *(_QWORD *)(v3 + *v23))
              break;
            v161 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v159);
            *(_QWORD *)(v3 + v158) = v160;
            v157 |= (unint64_t)(v161 & 0x7F) << v155;
            if (v161 < 0)
            {
              v155 += 7;
              v34 = v156++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_338;
          }
LABEL_337:
          *(_BYTE *)(v3 + *v25) = 1;
LABEL_338:
          PBRepeatedUInt32Add();
        }
        goto LABEL_305;
      case 26:
        if (!v39)
          goto LABEL_263;
        if ((*(_BYTE *)(a1 + 310) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_342;
          v133 = (int)(*(_DWORD *)(a1 + 308) << 12) >> 31;
LABEL_303:
          v6 += v133;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_342;
          v46 = objc_alloc_init(GEONavigabilityInfo);
          if (!GEONavigabilityInfoReadAllFrom((uint64_t)v46, (void *)v3))
            goto LABEL_341;
          PBReaderRecallMark();
          v94 = 184;
LABEL_224:
          v129 = *(void **)(a1 + v94);
          *(_QWORD *)(a1 + v94) = v46;
LABEL_229:

          --v6;
        }
        goto LABEL_304;
      case 27:
        if (!v39)
          goto LABEL_263;
        if ((*(_BYTE *)(a1 + 310) & 0x20) == 0)
        {
          PBReaderReadData();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 200;
LABEL_228:
          v129 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;
          goto LABEL_229;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_342;
        v133 = (int)(*(_DWORD *)(a1 + 308) << 10) >> 31;
        goto LABEL_303;
      case 28:
        if (!v39 || (*(_BYTE *)(a1 + 311) & 2) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEORouteLineStyleInfo);
        if (!GEORouteLineStyleInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsRouteLineStyleInfo:](a1, v46);
        goto LABEL_245;
      case 29:
        if (!v39 || (*(_BYTE *)(a1 + 309) & 0x20) != 0)
          goto LABEL_261;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
          goto LABEL_341;
        PBReaderRecallMark();
        -[GEOETARoute _addNoFlagsGuidanceEvent:](a1, v46);
        goto LABEL_245;
      case 30:
        if (!v39 || (*(_BYTE *)(a1 + 311) & 1) != 0)
        {
LABEL_261:
          v130 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v130 & 1) == 0)
            goto LABEL_342;
          goto LABEL_306;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_342;
        v46 = objc_alloc_init(GEORouteLineStyleInfo);
        if (GEORouteLineStyleInfoReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOETARoute _addNoFlagsRouteCameraInputInfo:](a1, v46);
LABEL_245:

LABEL_304:
          v23 = (int *)MEMORY[0x1E0D82BD8];
LABEL_305:
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_306:
          if (!(v168 & 1 | (v6 != 0)))
          {
            v167 = 1;
            goto LABEL_343;
          }
          v20 = v169;
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v23))
            goto LABEL_339;
          continue;
        }
LABEL_341:

LABEL_342:
        v167 = 0;
LABEL_343:
        v20 = v169;
LABEL_344:
        v24 = v166;
LABEL_345:
        if ((v24 & 1) != 0)
LABEL_346:
          *(_DWORD *)(a1 + 308) |= 0x40u;
        if (v20 & 1 | ((v167 & 1) == 0))
        {
          *(_DWORD *)(a1 + 308) |= 0x800000u;
          *(_DWORD *)(a1 + 308) |= 0x4000000u;
          *(_DWORD *)(a1 + 308) |= 0x20000000u;
          *(_DWORD *)(a1 + 308) |= 0x200000u;
          *(_DWORD *)(a1 + 308) |= 0x400000u;
          *(_DWORD *)(a1 + 308) |= 0x40000u;
          *(_DWORD *)(a1 + 308) |= 0x400u;
          *(_DWORD *)(a1 + 308) |= 0x200u;
          *(_DWORD *)(a1 + 308) |= 0x2000000u;
          *(_DWORD *)(a1 + 308) |= 0x1000000u;
          *(_DWORD *)(a1 + 308) |= 0x10000u;
          *(_DWORD *)(a1 + 308) |= 0x20000u;
          *(_DWORD *)(a1 + 308) |= 0x8000u;
          *(_DWORD *)(a1 + 308) |= 0x100u;
          *(_DWORD *)(a1 + 308) |= 0x80u;
          *(_DWORD *)(a1 + 308) |= 0x8000000u;
          *(_DWORD *)(a1 + 308) |= 0x1000u;
          *(_DWORD *)(a1 + 308) |= 0x10000000u;
          *(_DWORD *)(a1 + 308) |= 0x4000u;
          *(_DWORD *)(a1 + 308) |= 0x100000u;
          *(_DWORD *)(a1 + 308) |= 0x800u;
          *(_DWORD *)(a1 + 308) |= 0x80000u;
          *(_DWORD *)(a1 + 308) |= 0x2000u;
        }
        else if (v21)
        {
          while (1)
          {
            v162 = *v21++;
            v163 = 0x800000;
            switch(v162)
            {
              case 0:
                goto LABEL_374;
              case 1:
                goto LABEL_373;
              case 2:
                v163 = 0x4000000;
                goto LABEL_373;
              case 3:
                v163 = 0x20000000;
                goto LABEL_373;
              case 5:
                v163 = 0x400000;
                goto LABEL_373;
              case 6:
                v163 = 0x40000;
                goto LABEL_373;
              case 7:
                v163 = 1024;
                goto LABEL_373;
              case 8:
                v163 = 512;
                goto LABEL_373;
              case 10:
                v163 = 0x10000;
                goto LABEL_373;
              case 11:
                v163 = 0x20000;
                goto LABEL_373;
              case 12:
                v163 = 0x8000;
                goto LABEL_373;
              case 14:
                v163 = 128;
                goto LABEL_373;
              case 15:
                v163 = 0x8000000;
                goto LABEL_373;
              case 20:
                v163 = 4096;
                goto LABEL_373;
              case 21:
                v163 = 0x10000000;
                goto LABEL_373;
              case 22:
                v163 = 0x4000;
                goto LABEL_373;
              case 23:
                v163 = 0x100000;
                goto LABEL_373;
              case 24:
                v163 = 2048;
                goto LABEL_373;
              case 25:
                v163 = 256;
                goto LABEL_373;
              case 26:
                v163 = 0x80000;
                goto LABEL_373;
              case 27:
                v163 = 0x200000;
                goto LABEL_373;
              case 28:
                v163 = 0x2000000;
                goto LABEL_373;
              case 29:
                v163 = 0x2000;
                goto LABEL_373;
              case 30:
                v163 = 0x1000000;
LABEL_373:
                *(_DWORD *)(a1 + 308) |= v163;
                break;
              default:
                continue;
            }
          }
        }
LABEL_374:
        if (v167)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_378:
          v164 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_378;
        }
        return v3;
      default:
        if ((v166 & 1) == 0 || (*(_BYTE *)(a1 + 308) & 0x40) != 0)
        {
LABEL_263:
          v131 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BD8];
          if ((v131 & 1) == 0)
            goto LABEL_342;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v74 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v75 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v74;

          }
          v76 = PBUnknownFieldAdd();
          v23 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v76)
          {
            v167 = 0;
            v20 = v169;
            goto LABEL_346;
          }
        }
        goto LABEL_306;
    }
  }
}

void sub_18984FCCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189850004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985033C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189850504(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985083C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189850B74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189850EB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898511FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189851534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985186C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189851BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189851EDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189852214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189852554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189852898(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189852C50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189852F88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898532C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898535F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189853740(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985388C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898539D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189856B00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETARouteCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _BYTE v101[128];
  _BYTE v102[128];
  _BYTE v103[128];
  _BYTE v104[128];
  _BYTE v105[128];
  _BYTE v106[128];
  _BYTE v107[128];
  _BYTE v108[128];
  _BYTE v109[128];
  _BYTE v110[128];
  _BYTE v111[128];
  uint64_t v112;

  v112 = *MEMORY[0x1E0C80C00];
  v97 = 0u;
  v98 = 0u;
  v99 = 0u;
  v100 = 0u;
  v2 = a1[30];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v97, v111, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v98;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v98 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v97 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v97, v111, 16);
    }
    while (v4);
  }

  v95 = 0u;
  v96 = 0u;
  v93 = 0u;
  v94 = 0u;
  v7 = a1[26];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v93, v110, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v94;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v94 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v93 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v93, v110, 16);
    }
    while (v9);
  }

  v91 = 0u;
  v92 = 0u;
  v89 = 0u;
  v90 = 0u;
  v12 = a1[29];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v89, v109, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v90;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v90 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v89 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v89, v109, 16);
    }
    while (v14);
  }

  v87 = 0u;
  v88 = 0u;
  v85 = 0u;
  v86 = 0u;
  v17 = a1[28];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v85, v108, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v86;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v86 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v85 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v85, v108, 16);
    }
    while (v19);
  }

  v83 = 0u;
  v84 = 0u;
  v81 = 0u;
  v82 = 0u;
  v22 = a1[20];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v81, v107, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v82;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v82 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v81 + 1) + 8 * v26++), "readAll:", 1);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v81, v107, 16);
    }
    while (v24);
  }

  v79 = 0u;
  v80 = 0u;
  v77 = 0u;
  v78 = 0u;
  v27 = a1[21];
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v77, v106, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v78;
    do
    {
      v31 = 0;
      do
      {
        if (*(_QWORD *)v78 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v77 + 1) + 8 * v31++), "readAll:", 1);
      }
      while (v29 != v31);
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v77, v106, 16);
    }
    while (v29);
  }

  v75 = 0u;
  v76 = 0u;
  v73 = 0u;
  v74 = 0u;
  v32 = a1[19];
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v73, v105, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v74;
    do
    {
      v36 = 0;
      do
      {
        if (*(_QWORD *)v74 != v35)
          objc_enumerationMutation(v32);
        objc_msgSend(*(id *)(*((_QWORD *)&v73 + 1) + 8 * v36++), "readAll:", 1);
      }
      while (v34 != v36);
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v73, v105, 16);
    }
    while (v34);
  }

  objc_msgSend(a1[31], "readAll:", 1);
  v71 = 0u;
  v72 = 0u;
  v69 = 0u;
  v70 = 0u;
  v37 = a1[16];
  v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v69, v104, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v70;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v70 != v40)
          objc_enumerationMutation(v37);
        objc_msgSend(*(id *)(*((_QWORD *)&v69 + 1) + 8 * v41++), "readAll:", 1);
      }
      while (v39 != v41);
      v39 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v69, v104, 16);
    }
    while (v39);
  }

  v67 = 0u;
  v68 = 0u;
  v65 = 0u;
  v66 = 0u;
  v42 = a1[32];
  v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v65, v103, 16);
  if (v43)
  {
    v44 = v43;
    v45 = *(_QWORD *)v66;
    do
    {
      v46 = 0;
      do
      {
        if (*(_QWORD *)v66 != v45)
          objc_enumerationMutation(v42);
        objc_msgSend(*(id *)(*((_QWORD *)&v65 + 1) + 8 * v46++), "readAll:", 1);
      }
      while (v44 != v46);
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v65, v103, 16);
    }
    while (v44);
  }

  v63 = 0u;
  v64 = 0u;
  v61 = 0u;
  v62 = 0u;
  v47 = a1[18];
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v61, v102, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v62;
    do
    {
      v51 = 0;
      do
      {
        if (*(_QWORD *)v62 != v50)
          objc_enumerationMutation(v47);
        objc_msgSend(*(id *)(*((_QWORD *)&v61 + 1) + 8 * v51++), "readAll:", 1);
      }
      while (v49 != v51);
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v61, v102, 16);
    }
    while (v49);
  }

  objc_msgSend(a1[24], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[23], "readAll:", 1);
  v59 = 0u;
  v60 = 0u;
  v57 = 0u;
  v58 = 0u;
  v52 = a1[17];
  v53 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v57, v101, 16);
  if (v53)
  {
    v54 = v53;
    v55 = *(_QWORD *)v58;
    do
    {
      v56 = 0;
      do
      {
        if (*(_QWORD *)v58 != v55)
          objc_enumerationMutation(v52);
        objc_msgSend(*(id *)(*((_QWORD *)&v57 + 1) + 8 * v56++), "readAll:", 1, (_QWORD)v57);
      }
      while (v54 != v56);
      v54 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v57, v101, 16);
    }
    while (v54);
  }

}

unint64_t GEOETARouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 276))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETARouteReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 280));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 272) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 276) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETARouteReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETARouteReadAllFrom_initialTag;
  Specified = GEOETARouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETARouteCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 280));
  return Specified;
}

void sub_1898573C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETARouteReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETARouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189857428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETARouteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  _BOOL8 v88;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_192;
          goto LABEL_143;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETAStepIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 3u:
          if (v15 == 2)
            goto LABEL_143;
          goto LABEL_192;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_137;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 6u:
          if (v15 == 2)
            goto LABEL_143;
          goto LABEL_192;
        case 7u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_192;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                goto LABEL_137;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_149;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_192;
LABEL_152:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v68 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v69 = *v2;
              v70 = *(_QWORD *)&a1[v69];
              v71 = v70 + 1;
              if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
                break;
              v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
              *(_QWORD *)&a1[v69] = v71;
              if (v72 < 0)
              {
                v13 = v68++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_152;
            }
            a1[*v4] = 1;
          }
          goto LABEL_148;
        case 8u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_192;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                goto LABEL_137;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_149;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_192;
LABEL_162:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v73 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v74 = *v2;
              v75 = *(_QWORD *)&a1[v74];
              v76 = v75 + 1;
              if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
                break;
              v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
              *(_QWORD *)&a1[v74] = v76;
              if (v77 < 0)
              {
                v13 = v73++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_162;
            }
            a1[*v4] = 1;
          }
          goto LABEL_148;
        case 0xAu:
        case 0xBu:
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_137;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0xEu:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_192;
            while (1)
            {
              v38 = *v2;
              v39 = *(_QWORD *)&a1[v38];
              v40 = v39 + 1;
              if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
                goto LABEL_137;
              v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
              *(_QWORD *)&a1[v38] = v40;
              if (v41 < 0)
              {
                v42 = v15++;
                if (v42 <= 8)
                  continue;
              }
              goto LABEL_149;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_192;
LABEL_172:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v78 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v79 = *v2;
              v80 = *(_QWORD *)&a1[v79];
              v81 = v80 + 1;
              if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
                break;
              v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
              *(_QWORD *)&a1[v79] = v81;
              if (v82 < 0)
              {
                v13 = v78++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_172;
            }
            a1[*v4] = 1;
          }
          goto LABEL_148;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficBannerTextIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_137;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_137;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_137;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_192;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_137;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEnrouteNoticeIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0x15u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficColorInfoIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0x16u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOIncidentOnRouteInfoIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0x17u:
        case 0x18u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0x19u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_192:
              PBReaderRecallMark();
              return 0;
            }
LABEL_182:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v83 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v84 = *v2;
                v85 = *(_QWORD *)&a1[v84];
                v86 = v85 + 1;
                if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
                  break;
                v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
                *(_QWORD *)&a1[v84] = v86;
                if (v87 < 0)
                {
                  v13 = v83++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_182;
              }
              a1[*v4] = 1;
            }
LABEL_148:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_192;
            while (1)
            {
              v63 = *v2;
              v64 = *(_QWORD *)&a1[v63];
              v65 = v64 + 1;
              if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
                break;
              v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
              *(_QWORD *)&a1[v63] = v65;
              if (v66 < 0)
              {
                v67 = v15++;
                if (v67 <= 8)
                  continue;
              }
              goto LABEL_149;
            }
LABEL_137:
            a1[*v4] = 1;
          }
LABEL_149:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_191;
          break;
        case 0x1Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigabilityInfoIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0x1Bu:
          if (v15 == 2)
            goto LABEL_143;
          goto LABEL_192;
        case 0x1Cu:
        case 0x1Eu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLineStyleInfoIsValid(a1))
            goto LABEL_192;
          goto LABEL_148;
        case 0x1Du:
          if (v15 == 2 && PBReaderPlaceMark() && GEOGuidanceEventIsValid(a1))
            goto LABEL_148;
          goto LABEL_192;
        default:
LABEL_143:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_192;
          goto LABEL_149;
      }
    }
  }
LABEL_191:
  v88 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v88;
}

BOOL GEOETAStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_77;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_74;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_77;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_74;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_77;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_74;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimeCheckpointsIsValid(a1))
            goto LABEL_77;
          goto LABEL_64;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_77;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_73;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_74;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStopStepEVInfoIsValid(a1))
            goto LABEL_77;
          goto LABEL_64;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVStateInfoIsValid(a1))
            goto LABEL_77;
LABEL_64:
          PBReaderRecallMark();
          continue;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_77;
          v38 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_77:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_74;
      }
LABEL_73:
      a1[*v4] = 1;
LABEL_74:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189858DE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETARouteIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _BYTE v76[128];
  _BYTE v77[128];
  _BYTE v78[128];
  _BYTE v79[128];
  _BYTE v80[128];
  _BYTE v81[128];
  _BYTE v82[128];
  _BYTE v83[128];
  _BYTE v84[128];
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 280));
  v2 = *(_DWORD *)(a1 + 308);
  if ((v2 & 0x67E78780) != 0)
    return 1;
  if ((v2 & 0x8000000) == 0)
  {
LABEL_5:
    if ((v2 & 0x10005000) != 0)
      return 1;
    if ((v2 & 0x100000) != 0)
    {
      if ((GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 192)) & 1) != 0)
        return 1;
      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x800) != 0)
    {
      if ((GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
        return 1;
      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x82000) != 0)
      return 1;
    if ((v2 & 0x4000000) != 0)
    {
      v74 = 0u;
      v75 = 0u;
      v72 = 0u;
      v73 = 0u;
      v5 = *(id *)(a1 + 240);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v72, v84, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v73;
LABEL_18:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v73 != v8)
            objc_enumerationMutation(v5);
          if ((GEOETAStepIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v72 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_106;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v72, v84, 16);
            if (v7)
              goto LABEL_18;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x400000) != 0)
    {
      v70 = 0u;
      v71 = 0u;
      v68 = 0u;
      v69 = 0u;
      v5 = *(id *)(a1 + 208);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v68, v83, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v69;
LABEL_28:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v69 != v12)
            objc_enumerationMutation(v5);
          if ((GEORouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v68 + 1) + 8 * v13)) & 1) != 0)
            goto LABEL_106;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v68, v83, 16);
            if (v11)
              goto LABEL_28;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x2000000) != 0)
    {
      v66 = 0u;
      v67 = 0u;
      v64 = 0u;
      v65 = 0u;
      v5 = *(id *)(a1 + 232);
      v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v82, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v65;
LABEL_38:
        v17 = 0;
        while (1)
        {
          if (*(_QWORD *)v65 != v16)
            objc_enumerationMutation(v5);
          if ((GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v64 + 1) + 8 * v17)) & 1) != 0)
            goto LABEL_106;
          if (v15 == ++v17)
          {
            v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v82, 16);
            if (v15)
              goto LABEL_38;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x1000000) != 0)
    {
      v62 = 0u;
      v63 = 0u;
      v60 = 0u;
      v61 = 0u;
      v5 = *(id *)(a1 + 224);
      v18 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v81, 16);
      if (v18)
      {
        v19 = v18;
        v20 = *(_QWORD *)v61;
LABEL_48:
        v21 = 0;
        while (1)
        {
          if (*(_QWORD *)v61 != v20)
            objc_enumerationMutation(v5);
          if ((GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v60 + 1) + 8 * v21)) & 1) != 0)
            goto LABEL_106;
          if (v19 == ++v21)
          {
            v19 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v81, 16);
            if (v19)
              goto LABEL_48;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x10000) != 0)
    {
      v58 = 0u;
      v59 = 0u;
      v56 = 0u;
      v57 = 0u;
      v5 = *(id *)(a1 + 160);
      v22 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v80, 16);
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)v57;
LABEL_58:
        v25 = 0;
        while (1)
        {
          if (*(_QWORD *)v57 != v24)
            objc_enumerationMutation(v5);
          if ((GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v56 + 1) + 8 * v25)) & 1) != 0)
            goto LABEL_106;
          if (v23 == ++v25)
          {
            v23 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v80, 16);
            if (v23)
              goto LABEL_58;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x20000) != 0)
    {
      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      v5 = *(id *)(a1 + 168);
      v26 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v79, 16);
      if (v26)
      {
        v27 = v26;
        v28 = *(_QWORD *)v53;
LABEL_68:
        v29 = 0;
        while (1)
        {
          if (*(_QWORD *)v53 != v28)
            objc_enumerationMutation(v5);
          if ((GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v52 + 1) + 8 * v29)) & 1) != 0)
            goto LABEL_106;
          if (v27 == ++v29)
          {
            v27 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v79, 16);
            if (v27)
              goto LABEL_68;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x8000) != 0)
    {
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      v5 = *(id *)(a1 + 152);
      v30 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v78, 16);
      if (v30)
      {
        v31 = v30;
        v32 = *(_QWORD *)v49;
LABEL_78:
        v33 = 0;
        while (1)
        {
          if (*(_QWORD *)v49 != v32)
            objc_enumerationMutation(v5);
          if ((GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v48 + 1) + 8 * v33)) & 1) != 0)
            goto LABEL_106;
          if (v31 == ++v33)
          {
            v31 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v78, 16);
            if (v31)
              goto LABEL_78;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x1000) != 0)
    {
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      v5 = *(id *)(a1 + 128);
      v34 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v77, 16);
      if (v34)
      {
        v35 = v34;
        v36 = *(_QWORD *)v45;
LABEL_88:
        v37 = 0;
        while (1)
        {
          if (*(_QWORD *)v45 != v36)
            objc_enumerationMutation(v5);
          if ((GEOEnrouteNoticeIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v44 + 1) + 8 * v37)) & 1) != 0)
            goto LABEL_106;
          if (v35 == ++v37)
          {
            v35 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v77, 16);
            if (v35)
              goto LABEL_88;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 308);
    }
    if ((v2 & 0x2000) == 0)
      return 0;
    v42 = 0u;
    v43 = 0u;
    v40 = 0u;
    v41 = 0u;
    v5 = *(id *)(a1 + 136);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v76, 16);
    if (!v3)
    {
LABEL_107:

      return v3;
    }
    v38 = *(_QWORD *)v41;
LABEL_99:
    v39 = 0;
    while (1)
    {
      if (*(_QWORD *)v41 != v38)
        objc_enumerationMutation(v5);
      if ((GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v40 + 1) + 8 * v39)) & 1) != 0)
        break;
      if (v3 == ++v39)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v40, v76, 16);
        if (v3)
          goto LABEL_99;
        goto LABEL_107;
      }
    }
LABEL_106:
    v3 = 1;
    goto LABEL_107;
  }
  if ((GEOTrafficBannerTextIsDirty(*(os_unfair_lock_s **)(a1 + 248)) & 1) == 0)
  {
    v2 = *(_DWORD *)(a1 + 308);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOETARouteIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETARouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 70);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18985ACC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985BFB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985CBE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAStepReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const __int16 *v12;
  uint16x4_t v13;
  int16x4_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  id v49;
  void *v50;
  int v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  GEOTimeCheckpoints *v64;
  uint64_t v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  void *v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  __int16 v81;
  int v82;
  __int16 v83;
  void *v84;
  int v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const __int16 *)(a1 + 80);
  v13 = (uint16x4_t)vld1_dup_s16(v12);
  v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFBFFF9FFF8FFFALL), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  v15 = v14.i32[0];
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 1;
        v20 = v19 | v11;
        v87 = v19 & ~(_BYTE)v11 | v9;
        v88 = v8;
        v90 = v19 | v11 | v87;
        if ((((v19 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v91 = (v21 == 0) | v20;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v89 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v23))
      goto LABEL_132;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v22;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_132:
      v86 = 1;
      goto LABEL_133;
    }
    v36 = v28 >> 3;
    v37 = v20;
    if ((v91 & 1) == 0)
    {
      v38 = v21;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v88 & 1) == 0)
          goto LABEL_101;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[262]) |= 4u;
        while (1)
        {
          v45 = *v22;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            break;
          v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
          *(_QWORD *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0)
            goto LABEL_104;
          v42 += 7;
          v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_106;
          }
        }
        *(_BYTE *)(v3 + *v23) = 1;
LABEL_104:
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_106:
        v80 = 68;
        goto LABEL_123;
      case 2:
        if ((v88 & 1) == 0)
          goto LABEL_101;
        v52 = 0;
        v53 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[262]) |= 2u;
        while (2)
        {
          v54 = *v22;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v44 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_110:
        v80 = 64;
        goto LABEL_123;
      case 3:
        if ((v88 & 1) == 0)
          goto LABEL_101;
        v58 = 0;
        v59 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[262]) |= 0x10u;
        while (2)
        {
          v60 = *v22;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v44 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              v33 = v59++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_114:
        v80 = 76;
        goto LABEL_123;
      case 4:
        if (!v37)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + v24[262]) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_149;
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          v81 = *(_WORD *)(a1 + 80) << 7;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_149;
        v64 = objc_alloc_init(GEOTimeCheckpoints);
        if (!GEOTimeCheckpointsReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1))
          goto LABEL_148;
        PBReaderRecallMark();
        v65 = 40;
        goto LABEL_92;
      case 5:
        if ((v88 & 1) == 0)
          goto LABEL_101;
        v66 = 0;
        v67 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[262]) |= 8u;
        while (2)
        {
          v68 = *v22;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v44 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v33 = v67++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_118:
        v80 = 72;
        goto LABEL_123;
      case 6:
        if (!v37)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + v24[262]) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_149;
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          v81 = *(_WORD *)(a1 + 80) << 9;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_149;
        v64 = objc_alloc_init(GEOStopStepEVInfo);
        if (!GEOStopStepEVInfoReadAllFrom((uint64_t)v64, (void *)v3))
          goto LABEL_148;
        PBReaderRecallMark();
        v65 = 24;
        goto LABEL_92;
      case 7:
        if (!v37)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + v24[262]) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_149;
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          v81 = *(_WORD *)(a1 + 80) << 8;
LABEL_130:
          v7 += v81 >> 15;
          v20 = v89;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_131;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_149;
        v64 = objc_alloc_init(GEOEVStateInfo);
        if (GEOEVStateInfoReadAllFrom((uint64_t)v64, (void *)v3))
        {
          PBReaderRecallMark();
          v65 = 32;
LABEL_92:
          v72 = *(void **)(a1 + v65);
          *(_QWORD *)(a1 + v65) = v64;

          --v7;
          v20 = v89;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
LABEL_131:
          if (!(v90 & 1 | (v7 != 0)))
            goto LABEL_132;
          continue;
        }
LABEL_148:

LABEL_149:
        v86 = 0;
        v20 = v89;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
LABEL_133:
        if ((v87 & 1) != 0)
LABEL_134:
          *(_WORD *)(a1 + v24[262]) |= 0x20u;
        if (v20 & 1 | ((v86 & 1) == 0))
        {
          *(_WORD *)(a1 + v24[262]) |= 0x100u;
          *(_WORD *)(a1 + v24[262]) |= 0x40u;
          *(_WORD *)(a1 + v24[262]) |= 0x80u;
        }
        else if (v21)
        {
          while (1)
          {
            v82 = *v21++;
            v83 = 256;
            switch(v82)
            {
              case 0:
                goto LABEL_142;
              case 4:
                goto LABEL_141;
              case 6:
                v83 = 64;
                goto LABEL_141;
              case 7:
                v83 = 128;
LABEL_141:
                *(_WORD *)(a1 + v24[262]) |= v83;
                break;
              default:
                continue;
            }
          }
        }
LABEL_142:
        if (v86)
        {
          v3 = *(_BYTE *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_146:
          v84 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_146;
        }
        return v3;
      case 8:
        if ((v88 & 1) == 0)
          goto LABEL_101;
        v73 = 0;
        v74 = 0;
        v44 = 0;
        *(_WORD *)(a1 + v24[262]) |= 1u;
        while (2)
        {
          v75 = *v22;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v44 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              v33 = v74++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_122:
        v80 = 60;
LABEL_123:
        *(_DWORD *)(a1 + v80) = v44;
        goto LABEL_131;
      default:
        if ((v87 & 1) == 0 || (*(_WORD *)(a1 + v24[262]) & 0x20) != 0)
        {
LABEL_101:
          v79 = PBReaderSkipValueWithTag();
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v20 = v89;
          if ((v79 & 1) == 0)
          {
            v86 = 0;
            goto LABEL_133;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v49 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v50 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v49;

          }
          v51 = PBUnknownFieldAdd();
          v20 = v89;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v24 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
          if (!v51)
          {
            v86 = 0;
            goto LABEL_134;
          }
        }
        goto LABEL_131;
    }
  }
}

void sub_18985D764(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985D8A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985E2DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETAStepReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETAStepReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETAStepReadAllFrom_initialTag;
  Specified = GEOETAStepReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18985E4A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETAStepReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETAStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18985E504(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985E764(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETAStepIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int16 *)(a1 + 80);
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x100) != 0)
  {
    if (GEOTimeCheckpointsIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 80);
  }
  if ((v2 & 0x40) == 0)
    return (v2 >> 7) & 1;
  return 1;
}

os_unfair_lock_s *GEOETAStepIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETAStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18985EC48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985F184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985F42C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateRequestReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint32x4_t v13;
  int8x16_t v14;
  int *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOLocation *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  int v102;
  uint64_t v103;
  void *v104;
  int v106;
  char v107;
  char v108;
  char v109;
  char v110;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 252);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 248));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a1 + 288);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = v6;
  v16 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE4EC0), v14))
      + ((v12 >> 9) & 1)
      + ((v12 >> 34) & 1)
      + ((v12 >> 28) & 1)
      + ((v12 >> 33) & 1)
      + ((v12 >> 12) & 1)
      + (BYTE4(v12) & 1)
      + (BYTE3(v12) & 1)
      + ((v12 >> 15) & 1)
      + ((v12 >> 23) & 1)
      + vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE4ED0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE4EE0), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE4EF0), v14)))+ (v12 >> 31);
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v18 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 0x13;
        v107 = v20 & ~(_BYTE)v11 | v9;
        v108 = v20 | v11 | v107;
        if ((((v20 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v109 = (v21 == 0) | v20 | v11;
        v110 = v20 | v11;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v9;
LABEL_8:
        v18 = v10;
        v19 = v11;
LABEL_10:
        ++v7;
        v9 = v17;
        v10 = v18;
        v11 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v15) || *(_BYTE *)(v3 + *v23))
      goto LABEL_299;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v15))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_299:
      v106 = 1;
      goto LABEL_300;
    }
    v35 = v27 >> 3;
    v36 = v110;
    if ((v109 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 289) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 48;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 80;
        goto LABEL_199;
      case 2:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 290) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 40;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEORouteAttributes);
        if (!GEORouteAttributesReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 144;
        goto LABEL_199;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_226;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_QWORD *)(a1 + 288) |= 0x100uLL;
        while (2)
        {
          v51 = *v22;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v15))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v32 = v49++ >= 9;
              if (v32)
              {
                v50 = 0;
                goto LABEL_231;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v50 = 0;
LABEL_231:
        *(_BYTE *)(a1 + 284) = v50 != 0;
        goto LABEL_295;
      case 4:
      case 15:
      case 16:
      case 17:
LABEL_54:
        if ((v107 & 1) == 0 || (*(_BYTE *)(a1 + 289) & 2) != 0)
          goto LABEL_226;
        if (!*(_QWORD *)(a1 + 16))
        {
          v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v46 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v45;

        }
        v47 = PBUnknownFieldAdd();
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v15 = (int *)MEMORY[0x1E0D82BD8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        if (v47)
          goto LABEL_295;
        v106 = 0;
        goto LABEL_301;
      case 5:
        if (!v36 || (*(_BYTE *)(a1 + 291) & 1) != 0)
          goto LABEL_226;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOETARoute);
        if (!GEOETARouteReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateRequest _addNoFlagsRoute:](a1, v41);
        goto LABEL_217;
      case 6:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 289) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 51;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOClientCapabilities);
        if (!GEOClientCapabilitiesReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 56;
        goto LABEL_199;
      case 7:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 290) & 2) == 0)
        {
          PBReaderReadData();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 96;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_323;
        v100 = *(_QWORD *)(a1 + 288) << 46;
        goto LABEL_293;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_226;
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((_QWORD *)(a1 + 24), v3) & 1) == 0)
          goto LABEL_323;
        PBReaderRecallMark();
        *(_QWORD *)(a1 + 288) |= 1uLL;
        goto LABEL_294;
      case 9:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 289) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 52;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOAdditionalEnabledMarkets);
        if (!GEOAdditionalEnabledMarketsReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 48;
        goto LABEL_199;
      case 10:
        if (!v36 || (*(_BYTE *)(a1 + 290) & 1) != 0)
          goto LABEL_226;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateRequest _addNoFlagsDestinationWaypointTyped:](a1, v41);
        goto LABEL_217;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_226;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_QWORD *)(a1 + 288) |= 0x10uLL;
        while (2)
        {
          v60 = *v22;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v15))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v32 = v58++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_235;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v59) = 0;
LABEL_235:
        v99 = 268;
        goto LABEL_290;
      case 12:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 291) & 4) == 0)
        {
          PBReaderReadData();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 176;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_323;
        v100 = *(_QWORD *)(a1 + 288) << 37;
        goto LABEL_293;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_226;
        v64 = 0;
        v65 = 0;
        v59 = 0;
        *(_QWORD *)(a1 + 288) |= 0x40uLL;
        while (2)
        {
          v66 = *v22;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v15))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v59 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              v32 = v65++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_239;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v59) = 0;
LABEL_239:
        v99 = 276;
        goto LABEL_290;
      case 14:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 289) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 49;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOCommonOptions);
        if (!GEOCommonOptionsReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 72;
        goto LABEL_199;
      case 18:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 289) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 53;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOPDABClientDatasetMetadata);
        if (!GEOPDABClientDatasetMetadataReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 40;
        goto LABEL_199;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_226;
        v70 = 0;
        v71 = 0;
        v59 = 0;
        *(_QWORD *)(a1 + 288) |= 8uLL;
        while (2)
        {
          v72 = *v22;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v15))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v59 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              v32 = v71++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_243;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v59) = 0;
LABEL_243:
        v99 = 264;
        goto LABEL_290;
      case 20:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 291) & 0x20) == 0)
        {
          PBReaderReadData();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 200;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_323;
        v100 = *(_QWORD *)(a1 + 288) << 34;
        goto LABEL_293;
      case 21:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 290) & 0x40) == 0)
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 136;
          goto LABEL_165;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_323;
        v100 = *(_QWORD *)(a1 + 288) << 41;
        goto LABEL_293;
      case 22:
        if ((v8 & 1) == 0)
          goto LABEL_226;
        *(_QWORD *)(a1 + 288) |= 2uLL;
        v76 = *v22;
        v77 = *(_QWORD *)(v3 + v76);
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(_QWORD *)(v3 + *v15))
        {
          v78 = *(_QWORD *)(*(_QWORD *)(v3 + *v24) + v77);
          *(_QWORD *)(v3 + v76) = v77 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v23) = 1;
          v78 = 0;
        }
        *(_QWORD *)(a1 + 168) = v78;
        goto LABEL_295;
      case 23:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 292) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 31;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOETATrafficUpdateWaypointRoute);
        if (!GEOETATrafficUpdateWaypointRouteReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 224;
        goto LABEL_199;
      case 24:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 291) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 32;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 216;
        goto LABEL_199;
      case 25:
        if (!v36 || (*(_BYTE *)(a1 + 290) & 4) != 0)
          goto LABEL_226;
        PBReaderReadString();
        v41 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
        if (v41)
          -[GEOETATrafficUpdateRequest _addNoFlagsDisplayedBannerId:](a1, v41);
        goto LABEL_217;
      case 26:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 290) & 8) == 0)
        {
          PBReaderReadData();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 112;
LABEL_165:
          v79 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;

          v24 = (int *)MEMORY[0x1E0D82BB8];
          v15 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          --v7;
          goto LABEL_295;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_323;
        v100 = *(_QWORD *)(a1 + 288) << 44;
        goto LABEL_293;
      case 27:
        if (!v36 || (*(_BYTE *)(a1 + 292) & 2) != 0)
          goto LABEL_226;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateRequest _addNoFlagsWaypointTyped:](a1, v41);
LABEL_217:

        goto LABEL_294;
      case 28:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 290) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 42;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEORecentLocationHistory);
        if (!GEORecentLocationHistoryReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 128;
        goto LABEL_199;
      case 29:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 290) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 43;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOPrivacyMetadata);
        if (!GEOPrivacyMetadataReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 120;
        goto LABEL_199;
      case 30:
        if ((v8 & 1) == 0)
          goto LABEL_226;
        v80 = 0;
        v81 = 0;
        v59 = 0;
        *(_QWORD *)(a1 + 288) |= 4uLL;
        while (2)
        {
          v82 = *v22;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v15))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v59 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              v32 = v81++ >= 9;
              if (v32)
              {
                LODWORD(v59) = 0;
                goto LABEL_247;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v59) = 0;
LABEL_247:
        v99 = 260;
        goto LABEL_290;
      case 31:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 291) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 33;
          goto LABEL_293;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOTripInfo);
        if (!GEOTripInfoReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_322;
        PBReaderRecallMark();
        v42 = 208;
        goto LABEL_199;
      case 32:
        if (!v36)
          goto LABEL_226;
        if ((*(_BYTE *)(a1 + 289) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_323;
          v100 = *(_QWORD *)(a1 + 288) << 50;
LABEL_293:
          v7 += v100 >> 63;
LABEL_294:
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v15 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_295:
          if (!(v108 & 1 | (v7 != 0)))
            goto LABEL_299;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_323;
        v41 = objc_alloc_init(GEOClientFeedbackInfo);
        if (GEOClientFeedbackInfoReadAllFrom(v41, (void *)v3))
        {
          PBReaderRecallMark();
          v42 = 64;
LABEL_199:
          v44 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;
LABEL_200:

          --v7;
          goto LABEL_294;
        }
LABEL_322:

LABEL_323:
        v106 = 0;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_300:
        if ((v107 & 1) != 0)
LABEL_301:
          *(_QWORD *)(a1 + 288) |= 0x200uLL;
        if (v110 & 1 | ((v106 & 1) == 0))
        {
          *(_QWORD *)(a1 + 288) |= 0x7FFFFFC00uLL;
          goto LABEL_316;
        }
        if (v21)
        {
          while (1)
          {
            do
            {
LABEL_305:
              v102 = *v21++;
              v101 = v102;
            }
            while (v102 <= 99);
            if (v101 > 101)
            {
              if (v101 == 102)
              {
                v103 = 0x10000000;
              }
              else
              {
                if (v101 != 1201)
                  goto LABEL_305;
                v103 = 0x400000000;
              }
            }
            else if (v101 == 100)
            {
              v103 = 0x2000000;
            }
            else
            {
              if (v101 != 101)
                goto LABEL_305;
              v103 = 0x8000000;
            }
            *(_QWORD *)(a1 + 288) |= v103;
          }
        }
LABEL_316:
        if (v106)
          v3 = *(_BYTE *)(v3 + *v23) == 0;
        else
          v3 = 0;
        if ((v110 & 1) != 0)
        {
          v104 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 33:
        if ((v8 & 1) != 0)
        {
          v86 = 0;
          v87 = 0;
          v59 = 0;
          *(_QWORD *)(a1 + 288) |= 0x20uLL;
          while (1)
          {
            v88 = *v22;
            v89 = *(_QWORD *)(v3 + v88);
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v15))
              break;
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v89);
            *(_QWORD *)(v3 + v88) = v90;
            v59 |= (unint64_t)(v91 & 0x7F) << v86;
            if ((v91 & 0x80) == 0)
              goto LABEL_249;
            v86 += 7;
            v32 = v87++ >= 9;
            if (v32)
            {
              LODWORD(v59) = 0;
              goto LABEL_251;
            }
          }
          *(_BYTE *)(v3 + *v23) = 1;
LABEL_249:
          if (*(_BYTE *)(v3 + *v23))
            LODWORD(v59) = 0;
LABEL_251:
          v99 = 272;
LABEL_290:
          *(_DWORD *)(a1 + v99) = v59;
        }
        else
        {
LABEL_226:
          v98 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v15 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v98 & 1) == 0)
          {
            v106 = 0;
            goto LABEL_300;
          }
        }
        goto LABEL_295;
      default:
        switch((int)v35)
        {
          case 'd':
            if (!v36 || (*(_BYTE *)(a1 + 291) & 2) != 0)
              goto LABEL_226;
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_323;
            v41 = objc_alloc_init(GEOGeoServiceTag);
            if (!GEOGeoServiceTagReadAllFrom((uint64_t)v41, (void *)v3))
              goto LABEL_322;
            PBReaderRecallMark();
            -[GEOETATrafficUpdateRequest _addNoFlagsServiceTag:](a1, v41);
            goto LABEL_217;
          case 'e':
            if (!v36 || (*(_BYTE *)(a1 + 291) & 8) != 0)
              goto LABEL_226;
            PBReaderReadData();
            v41 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
            if (v41)
              -[GEOETATrafficUpdateRequest _addNoFlagsTrafficApiResponses:](a1, v41);
            goto LABEL_217;
          case 'f':
            if (!v36 || (*(_BYTE *)(a1 + 291) & 0x10) != 0)
              goto LABEL_226;
            PBReaderReadString();
            v41 = (GEOLocation *)objc_claimAutoreleasedReturnValue();
            if (v41)
              -[GEOETATrafficUpdateRequest _addNoFlagsTrafficSnapshotIds:](a1, v41);
            goto LABEL_217;
          case 'g':
            if ((v8 & 1) == 0)
              goto LABEL_226;
            v92 = 0;
            v93 = 0;
            v59 = 0;
            *(_QWORD *)(a1 + 288) |= 0x80uLL;
            while (2)
            {
              v94 = *v22;
              v95 = *(_QWORD *)(v3 + v94);
              v96 = v95 + 1;
              if (v95 == -1 || v96 > *(_QWORD *)(v3 + *v15))
              {
                *(_BYTE *)(v3 + *v23) = 1;
              }
              else
              {
                v97 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v95);
                *(_QWORD *)(v3 + v94) = v96;
                v59 |= (unint64_t)(v97 & 0x7F) << v92;
                if (v97 < 0)
                {
                  v92 += 7;
                  v32 = v93++ >= 9;
                  if (v32)
                  {
                    LODWORD(v59) = 0;
                    goto LABEL_289;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(_BYTE *)(v3 + *v23))
              LODWORD(v59) = 0;
LABEL_289:
            v99 = 280;
            goto LABEL_290;
          default:
            if ((_DWORD)v35 != 1201)
              goto LABEL_54;
            if (!v36)
              goto LABEL_226;
            if ((*(_BYTE *)(a1 + 292) & 4) == 0)
            {
              PBReaderReadString();
              v43 = objc_claimAutoreleasedReturnValue();
              v44 = *(void **)(a1 + 240);
              *(_QWORD *)(a1 + 240) = v43;
              goto LABEL_200;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_323;
            v100 = *(_QWORD *)(a1 + 288) << 29;
            break;
        }
        goto LABEL_293;
    }
  }
}

void sub_189860CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189860F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189861250(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189861398(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898614E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189861630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189861878(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898619C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189861CFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898620B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898623DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189862528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898626E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189862834(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189862980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189862ACC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189862E04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189862F50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986309C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189863268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898635C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189863900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189863C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898666D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOETATrafficUpdateRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v2 = a1[19];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v35;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v35 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[28], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v7 = a1[11];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v31;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v31 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
    }
    while (v9);
  }

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v12 = a1[29];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v27;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v27 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[27], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[26], "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v17 = a1[20];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v23;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v23 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v22);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
    }
    while (v19);
  }

}

uint64_t GEOETATrafficUpdateRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 252))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETATrafficUpdateRequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 256));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 248) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 252) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETATrafficUpdateRequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETATrafficUpdateRequestReadAllFrom_initialTag;
  Specified = GEOETATrafficUpdateRequestReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETATrafficUpdateRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 256));
  return Specified;
}

void sub_189866BFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETATrafficUpdateRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189866C5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETATrafficUpdateRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  _BOOL8 v58;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
        case 0x18u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1))
            goto LABEL_139;
          goto LABEL_166;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteAttributesIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_166;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            if (v23 < 0)
            {
              v24 = v19++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_154;
          }
        case 4u:
        case 0xFu:
        case 0x10u:
        case 0x11u:
          goto LABEL_153;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETARouteIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientCapabilitiesIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 7u:
          if (v16 == 2)
            goto LABEL_153;
          goto LABEL_166;
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAdditionalEnabledMarketsIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0xAu:
        case 0x1Bu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_166;
          v25 = 0;
          while (1)
          {
            v26 = *v2;
            v27 = *(_QWORD *)&a1[v26];
            v28 = v27 + 1;
            if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v29 = *(char *)(*(_QWORD *)&a1[*v5] + v27);
            *(_QWORD *)&a1[v26] = v28;
            if (v29 < 0)
            {
              v24 = v25++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_154;
          }
        case 0xCu:
          if (v16 == 2)
            goto LABEL_153;
          goto LABEL_166;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_166;
          v30 = 0;
          while (1)
          {
            v31 = *v2;
            v32 = *(_QWORD *)&a1[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v34 = *(char *)(*(_QWORD *)&a1[*v5] + v32);
            *(_QWORD *)&a1[v31] = v33;
            if (v34 < 0)
            {
              v24 = v30++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_154;
          }
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCommonOptionsIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0x12u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDABClientDatasetMetadataIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_166;
          v35 = 0;
          while (1)
          {
            v36 = *v2;
            v37 = *(_QWORD *)&a1[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v39 = *(char *)(*(_QWORD *)&a1[*v5] + v37);
            *(_QWORD *)&a1[v36] = v38;
            if (v39 < 0)
            {
              v24 = v35++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_154;
          }
        case 0x14u:
          if (v16 == 2)
            goto LABEL_153;
          goto LABEL_166;
        case 0x15u:
          if (v16 == 2)
            goto LABEL_153;
          goto LABEL_166;
        case 0x16u:
          if (v16 != 1)
            goto LABEL_166;
          v40 = *v2;
          v41 = *(_QWORD *)&a1[v40];
          if (v41 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_149;
          v42 = v41 + 8;
          if (v42 > *(_QWORD *)&a1[*v3])
            goto LABEL_149;
          *(_QWORD *)&a1[v40] = v42;
          goto LABEL_154;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOETATrafficUpdateWaypointRouteIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0x19u:
          if (v16 == 2)
            goto LABEL_153;
          goto LABEL_166;
        case 0x1Au:
          if (v16 != 2)
            goto LABEL_166;
LABEL_153:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_154;
          goto LABEL_166;
        case 0x1Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORecentLocationHistoryIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0x1Du:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPrivacyMetadataIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0x1Eu:
          if ((v8 & 7) != 0)
            goto LABEL_166;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v24 = v43++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_154;
          }
        case 0x1Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTripInfoIsValid(a1))
            goto LABEL_166;
          goto LABEL_139;
        case 0x20u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientFeedbackInfoIsValid(a1))
            goto LABEL_166;
LABEL_139:
          PBReaderRecallMark();
          goto LABEL_154;
        case 0x21u:
          if ((v8 & 7) != 0)
          {
LABEL_166:
            PBReaderRecallMark();
            return 0;
          }
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              break;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v24 = v48++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_154;
          }
LABEL_148:
          v14 = *v4;
LABEL_149:
          a1[v14] = 1;
LABEL_154:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_165;
          break;
        default:
          switch((int)v18)
          {
            case 'd':
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOGeoServiceTagIsValid(a1))
                goto LABEL_166;
              goto LABEL_139;
            case 'e':
              if (v16 == 2)
                goto LABEL_153;
              goto LABEL_166;
            case 'f':
              if (v16 == 2)
                goto LABEL_153;
              goto LABEL_166;
            case 'g':
              if ((v8 & 7) != 0)
                goto LABEL_166;
              v53 = 0;
              break;
            default:
              if ((_DWORD)v18 != 1201 || v16 == 2)
                goto LABEL_153;
              goto LABEL_166;
          }
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              break;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v24 = v53++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_154;
          }
          a1[*v4] = 1;
          goto LABEL_154;
      }
    }
  }
LABEL_165:
  v58 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v58;
}

BOOL GEOETATrafficUpdateWaypointRouteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_53;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_53;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETARouteIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTraversalTimesIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficBannerTextIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteIsValid(a1))
            goto LABEL_57;
          goto LABEL_52;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigabilityInfoIsValid(a1))
            goto LABEL_57;
LABEL_52:
          PBReaderRecallMark();
          goto LABEL_53;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_57:
            PBReaderRecallMark();
            return 0;
          }
LABEL_53:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_56;
          break;
      }
    }
  }
LABEL_56:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18986804C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateRequestIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 256));
  v2 = *(_QWORD *)(a1 + 288);
  if ((v2 & 0x800000000) != 0)
    return 1;
  if ((v2 & 0x8000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 80)))
      return 1;
    v2 = *(_QWORD *)(a1 + 288);
  }
  if ((v2 & 0x800000) != 0)
  {
    if ((GEORouteAttributesIsDirty(*(os_unfair_lock_s **)(a1 + 144)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 288);
  }
  if ((v2 & 0x1000000) == 0)
  {
    if ((v2 & 0x100000000) != 0)
    {
      if ((GEOETATrafficUpdateWaypointRouteIsDirty(*(os_unfair_lock_s **)(a1 + 224)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 288);
    }
    if ((v2 & 0x1000) != 0)
    {
      if (GEOClientCapabilitiesIsDirty(*(_QWORD *)(a1 + 56)))
        return 1;
      v2 = *(_QWORD *)(a1 + 288);
    }
    if ((v2 & 0xA0000) == 0)
    {
      if ((v2 & 0x800) != 0)
      {
        if (GEOAdditionalEnabledMarketsIsDirty(*(_QWORD *)(a1 + 48)))
          return 1;
        v2 = *(_QWORD *)(a1 + 288);
      }
      if ((v2 & 0x224414400) == 0)
      {
        if ((v2 & 0x80000000) != 0)
        {
          if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 216)))
            return 1;
          v2 = *(_QWORD *)(a1 + 288);
        }
        if ((v2 & 0x42000) == 0)
        {
          if ((v2 & 0x200000) == 0)
            goto LABEL_27;
          if (!GEORecentLocationHistoryIsDirty(*(_QWORD *)(a1 + 128)))
          {
            v2 = *(_QWORD *)(a1 + 288);
LABEL_27:
            if ((v2 & 0x45A100000) != 0)
              return 1;
            if ((v2 & 0x1000000) != 0)
            {
              v26 = 0u;
              v27 = 0u;
              v24 = 0u;
              v25 = 0u;
              v5 = *(id *)(a1 + 152);
              v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
              if (v6)
              {
                v7 = v6;
                v8 = *(_QWORD *)v25;
LABEL_33:
                v9 = 0;
                while (1)
                {
                  if (*(_QWORD *)v25 != v8)
                    objc_enumerationMutation(v5);
                  if ((GEOETARouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v9)) & 1) != 0)
                    goto LABEL_61;
                  if (v7 == ++v9)
                  {
                    v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
                    if (v7)
                      goto LABEL_33;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 288);
            }
            if ((v2 & 0x10000) != 0)
            {
              v22 = 0u;
              v23 = 0u;
              v20 = 0u;
              v21 = 0u;
              v5 = *(id *)(a1 + 88);
              v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
              if (v10)
              {
                v11 = v10;
                v12 = *(_QWORD *)v21;
LABEL_43:
                v13 = 0;
                while (1)
                {
                  if (*(_QWORD *)v21 != v12)
                    objc_enumerationMutation(v5);
                  if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v13)) & 1) != 0)
                    goto LABEL_61;
                  if (v11 == ++v13)
                  {
                    v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
                    if (v11)
                      goto LABEL_43;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 288);
            }
            if ((v2 & 0x200000000) == 0)
              return 0;
            v18 = 0u;
            v19 = 0u;
            v16 = 0u;
            v17 = 0u;
            v5 = *(id *)(a1 + 232);
            v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
            if (!v3)
            {
LABEL_62:

              return v3;
            }
            v14 = *(_QWORD *)v17;
LABEL_54:
            v15 = 0;
            while (1)
            {
              if (*(_QWORD *)v17 != v14)
                objc_enumerationMutation(v5);
              if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v15)) & 1) != 0)
                break;
              if (v3 == ++v15)
              {
                v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
                if (v3)
                  goto LABEL_54;
                goto LABEL_62;
              }
            }
LABEL_61:
            v3 = 1;
            goto LABEL_62;
          }
        }
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEOETATrafficUpdateRequestIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETATrafficUpdateRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 64);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOETATrafficUpdateRequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  void *v6;
  int HasSensitiveFields;
  void *v8;
  _DWORD *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  _DWORD *v23;

  if (a3
    && objc_msgSend(a1, "hasCurrentUserLocation")
    && (objc_msgSend(a1, "currentUserLocation"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6),
        v6,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "currentUserLocation");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (_DWORD *)objc_msgSend(v8, "copy");

    GEOLocationClearSensitiveFields(v9);
    objc_msgSend(a1, "setCurrentUserLocation:", v9);
  }
  else
  {
    objc_msgSend(a1, "currentUserLocation");
    v9 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

  -[GEOETATrafficUpdateRequest _readDestinationWaypointTypeds]((uint64_t)a1);
  if (objc_msgSend(a1[11], "count"))
  {
    v10 = 0;
    do
    {
      objc_msgSend(a1[11], "objectAtIndexedSubscript:", v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v11))
      {
        v13 = (void *)objc_msgSend(v12, "copy");
        objc_msgSend(v13, "waypointLocation");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "clearSensitiveFields:", a2);

        objc_msgSend(a1[11], "replaceObjectAtIndex:withObject:", v10, v13);
      }
      else
      {
        objc_msgSend(v12, "clearSensitiveFields:", a2);
      }

      ++v10;
    }
    while (v10 < objc_msgSend(a1[11], "count"));
  }
  -[GEOETATrafficUpdateRequest _readWaypointTypeds]((uint64_t)a1);
  if (objc_msgSend(a1[29], "count"))
  {
    v15 = 0;
    do
    {
      objc_msgSend(a1[29], "objectAtIndexedSubscript:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = v16;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v16))
      {
        v18 = (void *)objc_msgSend(v17, "copy");
        objc_msgSend(v18, "waypointLocation");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "clearSensitiveFields:", a2);

        objc_msgSend(a1[29], "replaceObjectAtIndex:withObject:", v15, v18);
      }
      else
      {
        objc_msgSend(v17, "clearSensitiveFields:", a2);
      }

      ++v15;
    }
    while (v15 < objc_msgSend(a1[29], "count"));
  }
  if ((a3 & 1) != 0
    && objc_msgSend(a1, "hasTripOrigin")
    && (objc_msgSend(a1, "tripOrigin"),
        v20 = (void *)objc_claimAutoreleasedReturnValue(),
        v21 = GEOLocationHasSensitiveFields((uint64_t)v20),
        v20,
        v21))
  {
    objc_msgSend(a1, "tripOrigin");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (_DWORD *)objc_msgSend(v22, "copy");

    GEOLocationClearSensitiveFields(v23);
    objc_msgSend(a1, "setTripOrigin:", v23);
  }
  else
  {
    objc_msgSend(a1, "tripOrigin");
    v23 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "clearSensitiveFields:", a2);
  }

}

uint64_t GEOETATrafficUpdateRequestHasSensitiveFields(uint64_t result)
{
  void *v1;
  void *v2;
  void *v3;
  char HasSensitiveFields;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v1 = (void *)result;
    objc_msgSend((id)result, "currentUserLocation");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (GEOLocationHasSensitiveFields((uint64_t)v2))
    {
LABEL_3:

      return 1;
    }
    objc_msgSend(v1, "tripOrigin");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v3);

    if ((HasSensitiveFields & 1) != 0)
      return 1;
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    objc_msgSend(v1, "destinationWaypointTypeds");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v19;
LABEL_9:
      v8 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v7)
          objc_enumerationMutation(v2);
        if ((GEOWaypointTypedHasSensitiveFields(*(void **)(*((_QWORD *)&v18 + 1) + 8 * v8)) & 1) != 0)
          goto LABEL_3;
        if (v6 == ++v8)
        {
          v6 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
          if (v6)
            goto LABEL_9;
          break;
        }
      }
    }

    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    objc_msgSend(v1, "waypointTypeds", 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v15;
      while (2)
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v15 != v12)
            objc_enumerationMutation(v9);
          if ((GEOWaypointTypedHasSensitiveFields(*(void **)(*((_QWORD *)&v14 + 1) + 8 * v13)) & 1) != 0)
          {

            return 1;
          }
          ++v13;
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
        if (v11)
          continue;
        break;
      }
    }

    return 0;
  }
  return result;
}

void sub_189869C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986AF6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986B414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986BB0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateResponseReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint32x4_t v14;
  int8x16_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  unsigned __int8 v22;
  int *v23;
  int *v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  GEOETARoute *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  id v61;
  void *v62;
  int v63;
  char v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  int v69;
  void *v70;
  int v72;
  char v73;
  char v74;
  char v75;
  BOOL v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 156);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 152));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(_DWORD *)(a1 + 172);
  v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  v16 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CE4F00), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CE4F10), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CE4F20), v15)))+ ((v13 >> 10) & 1)+ ((v13 >> 6) & 1)+ ((v13 >> 2) & 1);
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 0xA;
        v21 = v20 & ~(_BYTE)v12 | v10;
        v22 = v20 | v12;
        v73 = v21;
        v74 = v22 | v21;
        if (((v22 | v9) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v75 = (v23 == 0) | v22;
        v76 = v22;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v10;
LABEL_8:
        v18 = v11;
        v19 = v12;
LABEL_10:
        ++v8;
        v10 = v17;
        v11 = v18;
        v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v25))
      goto LABEL_159;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v24;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v7))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_159:
      v72 = 1;
      goto LABEL_160;
    }
    v37 = v29 >> 3;
    v38 = v76;
    if ((v75 & 1) == 0)
    {
      v39 = v23;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_129;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_DWORD *)(a1 + 172) |= 2u;
        while (1)
        {
          v46 = *v24;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
            break;
          v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v47);
          *(_QWORD *)(v3 + v46) = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0)
            goto LABEL_132;
          v43 += 7;
          v34 = v44++ >= 9;
          if (v34)
          {
            LODWORD(v45) = 0;
            goto LABEL_134;
          }
        }
        *(_BYTE *)(v3 + *v25) = 1;
LABEL_132:
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v45) = 0;
LABEL_134:
        v65 = 168;
        goto LABEL_139;
      case 2:
        if (!v38 || (*(_BYTE *)(a1 + 173) & 0x10) != 0)
          goto LABEL_129;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOETARoute);
        if (!GEOETARouteReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsRoute:](a1, v50);
        goto LABEL_110;
      case 3:
        if (!v38)
          goto LABEL_129;
        if ((*(_BYTE *)(a1 + 173) & 0x20) == 0)
        {
          PBReaderReadData();
          v52 = objc_claimAutoreleasedReturnValue();
          v53 = 120;
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_188;
        v66 = (int)(*(_DWORD *)(a1 + 172) << 18) >> 31;
        goto LABEL_156;
      case 4:
        if (!v38)
          goto LABEL_129;
        if ((*(_BYTE *)(a1 + 172) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_188;
          v66 = (int)(*(_DWORD *)(a1 + 172) << 24) >> 31;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOPDDatasetABStatus);
        if (!GEOPDDatasetABStatusReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_187;
        PBReaderRecallMark();
        v51 = 72;
        goto LABEL_121;
      case 5:
        if (!v38 || (*(_BYTE *)(a1 + 172) & 0x20) != 0)
          goto LABEL_129;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOTrafficCamera);
        if (!GEOTrafficCameraReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsCamera:](a1, v50);
        goto LABEL_110;
      case 6:
        if (!v38)
          goto LABEL_129;
        if ((*(_BYTE *)(a1 + 173) & 8) == 0)
        {
          PBReaderReadData();
          v52 = objc_claimAutoreleasedReturnValue();
          v53 = 104;
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_188;
        v66 = (int)(*(_DWORD *)(a1 + 172) << 20) >> 31;
        goto LABEL_156;
      case 7:
        if (!v38)
          goto LABEL_129;
        if ((*(_BYTE *)(a1 + 173) & 1) == 0)
        {
          PBReaderReadString();
          v52 = objc_claimAutoreleasedReturnValue();
          v53 = 80;
LABEL_77:
          v54 = *(void **)(a1 + v53);
          *(_QWORD *)(a1 + v53) = v52;
          goto LABEL_122;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_188;
        v66 = (int)(*(_DWORD *)(a1 + 172) << 23) >> 31;
        goto LABEL_156;
      case 8:
        if (!v38 || (*(_BYTE *)(a1 + 173) & 0x40) != 0)
          goto LABEL_129;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOTrafficSignal);
        if (!GEOTrafficSignalReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsTrafficSignal:](a1, v50);
        goto LABEL_110;
      case 9:
        if (!v38 || (*(_BYTE *)(a1 + 172) & 0x10) != 0)
          goto LABEL_129;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOArrivalParameters);
        if (!GEOArrivalParametersReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateResponse _addNoFlagsArrivalParameters:](a1, v50);
LABEL_110:

        goto LABEL_157;
      case 10:
        if (!v38 || (*(_BYTE *)(a1 + 172) & 8) != 0)
          goto LABEL_129;
        if (!PBReaderPlaceMark())
          goto LABEL_188;
        -[GEOETATrafficUpdateResponse _reserveProblemDetails:](a1, 1uLL);
        if (!GEOProblemDetailReadAllFrom(*(_QWORD *)(a1 + 24) + 12 * *(_QWORD *)(a1 + 32), v3))
          goto LABEL_188;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 32);
        goto LABEL_157;
      case 11:
        if (!v38)
          goto LABEL_129;
        if ((*(_BYTE *)(a1 + 174) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_188;
          v66 = (int)(*(_DWORD *)(a1 + 172) << 15) >> 31;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOETATrafficUpdateWaypointRoute);
        if (!GEOETATrafficUpdateWaypointRouteReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v51 = 144;
        goto LABEL_121;
      case 12:
        if ((v9 & 1) == 0)
          goto LABEL_129;
        v55 = 0;
        v56 = 0;
        v45 = 0;
        *(_DWORD *)(a1 + 172) |= 1u;
        while (2)
        {
          v57 = *v24;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v45 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v34 = v56++ >= 9;
              if (v34)
              {
                LODWORD(v45) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v45) = 0;
LABEL_138:
        v65 = 164;
LABEL_139:
        *(_DWORD *)(a1 + v65) = v45;
        goto LABEL_158;
      case 13:
        if (!v38 || (*(_BYTE *)(a1 + 173) & 2) != 0)
          goto LABEL_129;
        PBReaderReadString();
        v50 = (GEOETARoute *)objc_claimAutoreleasedReturnValue();
        if (v50)
          -[GEOETATrafficUpdateResponse _addNoFlagsInternalError:](a1, v50);
        goto LABEL_110;
      case 14:
        if (!v38)
          goto LABEL_129;
        if ((*(_BYTE *)(a1 + 173) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_188;
          v66 = (int)(*(_DWORD *)(a1 + 172) << 16) >> 31;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOUUID);
        if (!GEOUUIDReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_187;
        PBReaderRecallMark();
        v51 = 136;
        goto LABEL_121;
      case 15:
        if (!v38)
          goto LABEL_129;
        if ((*(_BYTE *)(a1 + 173) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_188;
          v66 = (int)(*(_DWORD *)(a1 + 172) << 21) >> 31;
LABEL_156:
          v8 += v66;
LABEL_157:
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
LABEL_158:
          if (!(v74 & 1 | (v8 != 0)))
            goto LABEL_159;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v50 = objc_alloc_init(GEOCommonResponseAttributes);
        if (GEOCommonResponseAttributesReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          v51 = 96;
LABEL_121:
          v54 = *(void **)(a1 + v51);
          *(_QWORD *)(a1 + v51) = v50;
LABEL_122:

          --v8;
          goto LABEL_157;
        }
LABEL_187:

LABEL_188:
        v72 = 0;
        v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_160:
        if ((v73 & 1) != 0)
LABEL_161:
          *(_DWORD *)(a1 + 172) |= 4u;
        if (v76 || (v72 & 1) == 0)
        {
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 172) |= 0x80u;
          *(_DWORD *)(a1 + 172) |= 0x20u;
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 172) |= 0x8000u;
          *(_DWORD *)(a1 + 172) |= 0x100u;
          *(_DWORD *)(a1 + 172) |= 0x4000u;
          *(_DWORD *)(a1 + 172) |= 0x10u;
          *(_DWORD *)(a1 + 172) |= 8u;
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 172) |= 0x40u;
        }
        else if (v23)
        {
          while (1)
          {
            v68 = *v23++;
            v67 = v68;
            v69 = 4096;
            switch(v68)
            {
              case 0:
                goto LABEL_181;
              case 1:
              case 12:
                continue;
              case 2:
                goto LABEL_180;
              case 3:
                v69 = 0x2000;
                goto LABEL_180;
              case 4:
                v69 = 128;
                goto LABEL_180;
              case 5:
                v69 = 32;
                goto LABEL_180;
              case 6:
                v69 = 2048;
                goto LABEL_180;
              case 7:
                v69 = 256;
                goto LABEL_180;
              case 8:
                v69 = 0x4000;
                goto LABEL_180;
              case 9:
                v69 = 16;
                goto LABEL_180;
              case 10:
                v69 = 8;
                goto LABEL_180;
              case 11:
                v69 = 0x10000;
                goto LABEL_180;
              case 13:
                v69 = 512;
                goto LABEL_180;
              case 14:
                v69 = 0x8000;
                goto LABEL_180;
              case 15:
                v69 = 1024;
                goto LABEL_180;
              default:
                if (v67 != 1051)
                  continue;
                v69 = 64;
LABEL_180:
                *(_DWORD *)(a1 + 172) |= v69;
                break;
            }
          }
        }
LABEL_181:
        if (v72)
          v3 = *(_BYTE *)(v3 + *v25) == 0;
        else
          v3 = 0;
        if (v76)
        {
          v70 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((_DWORD)v37 == 1051)
        {
          if (!v38)
            goto LABEL_129;
          if ((*(_BYTE *)(a1 + 172) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_188;
            v66 = (int)(*(_DWORD *)(a1 + 172) << 25) >> 31;
            goto LABEL_156;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_188;
          v50 = objc_alloc_init(GEOClientMetrics);
          if (!GEOClientMetricsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
            goto LABEL_187;
          PBReaderRecallMark();
          v51 = 64;
          goto LABEL_121;
        }
        if ((v73 & 1) == 0 || (*(_BYTE *)(a1 + 172) & 4) != 0)
        {
LABEL_129:
          v64 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v64 & 1) == 0)
          {
            v72 = 0;
            goto LABEL_160;
          }
          goto LABEL_158;
        }
        if (!*(_QWORD *)(a1 + 16))
        {
          v61 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v62 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v61;

        }
        v63 = PBUnknownFieldAdd();
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        if (!v63)
        {
          v72 = 0;
          goto LABEL_161;
        }
        goto LABEL_158;
    }
  }
}

void sub_18986CC04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986CD44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986CE88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986CFCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986D308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986D450(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986D598(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986D6E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986DA18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986DD50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986E284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986E5C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986FFD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateResponseCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v2 = a1[14];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v36;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v36 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v7 = a1[7];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v32;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v32 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v31 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
    }
    while (v9);
  }

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v12 = a1[16];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v28;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v28 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
    }
    while (v14);
  }

  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v17 = a1[6];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v24;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v24 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v23);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
    }
    while (v19);
  }

  objc_msgSend(a1[12], "readAll:", 1);
  return objc_msgSend(a1[8], "readAll:", 1);
}

uint64_t GEOETATrafficUpdateResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 156))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETATrafficUpdateResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 156) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETATrafficUpdateResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETATrafficUpdateResponseReadAllFrom_initialTag;
  Specified = GEOETATrafficUpdateResponseReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETATrafficUpdateResponseCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_189870478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETATrafficUpdateResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETATrafficUpdateResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898704D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOETATrafficUpdateResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_86;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETARouteIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 3u:
          if (v15 == 2)
            goto LABEL_85;
          goto LABEL_88;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDatasetABStatusIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 6u:
          if (v15 == 2)
            goto LABEL_85;
          goto LABEL_88;
        case 7u:
          if (v15 == 2)
            goto LABEL_85;
          goto LABEL_88;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficSignalIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalParametersIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOProblemDetailIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOETATrafficUpdateWaypointRouteIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              break;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_86;
          }
LABEL_74:
          a1[*v4] = 1;
          goto LABEL_86;
        case 0xDu:
          if (v15 == 2)
            goto LABEL_85;
          goto LABEL_88;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
            goto LABEL_88;
          goto LABEL_84;
        case 0xFu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOCommonResponseAttributesIsValid(a1))
            goto LABEL_84;
          goto LABEL_88;
        default:
          if ((v8 >> 3) == 1051)
          {
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOClientMetricsIsValid(a1))
            {
LABEL_88:
              PBReaderRecallMark();
              return 0;
            }
LABEL_84:
            PBReaderRecallMark();
          }
          else
          {
LABEL_85:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_88;
          }
LABEL_86:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_87;
          break;
      }
    }
  }
LABEL_87:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_189870F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateResponseIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v2 = *(_DWORD *)(a1 + 172);
  if ((v2 & 0x21000) != 0)
    return 1;
  if ((v2 & 0x10000) == 0)
  {
LABEL_5:
    if ((v2 & 0xEFF8) != 0)
      return 1;
    if ((v2 & 0x1000) != 0)
    {
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v5 = *(id *)(a1 + 112);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v33;
LABEL_11:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v33 != v8)
            objc_enumerationMutation(v5);
          if ((GEOETARouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v32 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_49;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
            if (v7)
              goto LABEL_11;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 172);
    }
    if ((v2 & 0x20) != 0)
    {
      v30 = 0u;
      v31 = 0u;
      v28 = 0u;
      v29 = 0u;
      v5 = *(id *)(a1 + 56);
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v29;
LABEL_21:
        v13 = 0;
        while (1)
        {
          if (*(_QWORD *)v29 != v12)
            objc_enumerationMutation(v5);
          if ((GEOTrafficCameraIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v28 + 1) + 8 * v13)) & 1) != 0)
            goto LABEL_49;
          if (v11 == ++v13)
          {
            v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
            if (v11)
              goto LABEL_21;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 172);
    }
    if ((v2 & 0x4000) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v5 = *(id *)(a1 + 128);
      v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v25;
LABEL_31:
        v17 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v16)
            objc_enumerationMutation(v5);
          if (GEOTrafficSignalIsDirty(*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v17)))
            goto LABEL_49;
          if (v15 == ++v17)
          {
            v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
            if (v15)
              goto LABEL_31;
            break;
          }
        }
      }

      v2 = *(_DWORD *)(a1 + 172);
    }
    if ((v2 & 0x10) == 0)
      return 0;
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v5 = *(id *)(a1 + 48);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
    if (!v3)
    {
LABEL_50:

      return v3;
    }
    v18 = *(_QWORD *)v21;
LABEL_42:
    v19 = 0;
    while (1)
    {
      if (*(_QWORD *)v21 != v18)
        objc_enumerationMutation(v5);
      if (GEOArrivalParametersIsDirty(*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v19)))
        break;
      if (v3 == ++v19)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
        if (v3)
          goto LABEL_42;
        goto LABEL_50;
      }
    }
LABEL_49:
    v3 = 1;
    goto LABEL_50;
  }
  if ((GEOETATrafficUpdateWaypointRouteIsDirty(*(os_unfair_lock_s **)(a1 + 144)) & 1) == 0)
  {
    v2 = *(_DWORD *)(a1 + 172);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOETATrafficUpdateResponseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETATrafficUpdateResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18987207C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189872AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189872F38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898732B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETATrafficUpdateWaypointRouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  GEOETARoute *v45;
  id v46;
  void *v47;
  int v48;
  uint64_t v49;
  void *v50;
  char v51;
  __int16 v52;
  int v53;
  __int16 v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFAFFFEFFFBFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 4) & 1)+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 3;
        v59 = v17 & ~(_BYTE)v12 | v10;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_98;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_98:
      v57 = 1;
      goto LABEL_99;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_85;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_88;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_90;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_88:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_90:
        *(_DWORD *)(a1 + 84) = v40;
        goto LABEL_97;
      case 2:
        if (!v33 || (*(_WORD *)(a1 + 88) & 0x20) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v45 = objc_alloc_init(GEOETARoute);
        if (!GEOETARouteReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsRouteLeg:](a1, v45);
        goto LABEL_78;
      case 4:
        if (!v33)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v52 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v45 = objc_alloc_init(GEOTraversalTimes);
        if (!GEOTraversalTimesReadAllFrom((uint64_t)v45, (void *)v3))
          goto LABEL_117;
        PBReaderRecallMark();
        v49 = 64;
        goto LABEL_84;
      case 5:
        if (!v33 || (*(_WORD *)(a1 + 88) & 4) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v45 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsIncidentsOnUserWaypointRoute:](a1, v45);
        goto LABEL_78;
      case 6:
        if (!v33 || (*(_WORD *)(a1 + 88) & 0x40) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v45 = objc_alloc_init(GEOTrafficBannerText);
        if (!GEOTrafficBannerTextReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsTrafficBannerText:](a1, v45);
        goto LABEL_78;
      case 7:
        if (!v33 || (*(_WORD *)(a1 + 88) & 0x10) != 0)
          goto LABEL_85;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v45 = objc_alloc_init(GEOWaypointRoute);
        if (!GEOWaypointRouteReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        -[GEOETATrafficUpdateWaypointRoute _addNoFlagsNewWaypointRoutes:](a1, v45);
LABEL_78:

        goto LABEL_96;
      case 8:
        if (!v33)
          goto LABEL_85;
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v52 = *(_WORD *)(a1 + 88) << 12;
LABEL_95:
          v8 += v52 >> 15;
LABEL_96:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_97:
          if (!(v60 & 1 | (v8 != 0)))
            goto LABEL_98;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v45 = objc_alloc_init(GEONavigabilityInfo);
        if (GEONavigabilityInfoReadAllFrom((uint64_t)v45, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = 32;
LABEL_84:
          v50 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v45;

          --v8;
          goto LABEL_96;
        }
LABEL_117:

LABEL_118:
        v57 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
        v58 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
        if ((v59 & 1) != 0)
LABEL_100:
          *(_WORD *)(a1 + v58[339]) |= 2u;
        if (v62 & 1 | ((v57 & 1) == 0))
        {
          *(_WORD *)(a1 + v58[339]) |= 0x20u;
          *(_WORD *)(a1 + v58[339]) |= 0x80u;
          *(_WORD *)(a1 + v58[339]) |= 4u;
          *(_WORD *)(a1 + v58[339]) |= 0x40u;
          *(_WORD *)(a1 + v58[339]) |= 0x10u;
          *(_WORD *)(a1 + v58[339]) |= 8u;
        }
        else if (v18)
        {
          while (1)
          {
            v53 = *v18++;
            v54 = 32;
            switch(v53)
            {
              case 0:
                goto LABEL_111;
              case 2:
                goto LABEL_110;
              case 4:
                v54 = 128;
                goto LABEL_110;
              case 5:
                v54 = 4;
                goto LABEL_110;
              case 6:
                v54 = 64;
                goto LABEL_110;
              case 7:
                v54 = 16;
                goto LABEL_110;
              case 8:
                v54 = 8;
LABEL_110:
                *(_WORD *)(a1 + v58[339]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v62 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_85:
          v51 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
            goto LABEL_99;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v48)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
            goto LABEL_100;
          }
        }
        goto LABEL_97;
    }
  }
}

void sub_189873E6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189873FAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898742E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189874614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189874964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987594C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateWaypointRouteCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v36;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v36 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v42, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[8], "readAll:", 1);
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v32;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v32 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v31 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v31, v41, 16);
    }
    while (v9);
  }

  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v12 = a1[7];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v28;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v28 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v27, v40, 16);
    }
    while (v14);
  }

  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v17 = a1[5];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v24;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v24 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v23);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v39, 16);
    }
    while (v19);
  }

  return objc_msgSend(a1[4], "readAll:", 1);
}

unint64_t GEOETATrafficUpdateWaypointRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOETATrafficUpdateWaypointRouteReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOETATrafficUpdateWaypointRouteReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOETATrafficUpdateWaypointRouteReadAllFrom_initialTag;
  Specified = GEOETATrafficUpdateWaypointRouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOETATrafficUpdateWaypointRouteCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189875DCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOETATrafficUpdateWaypointRouteReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOETATrafficUpdateWaypointRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189875E2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189876278(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOETATrafficUpdateWaypointRouteIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x1FC) == 0)
  {
    if ((v2 & 4) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v4 = *(id *)(a1 + 24);
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v25;
LABEL_6:
        v8 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v7)
            objc_enumerationMutation(v4);
          if ((GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v24 + 1) + 8 * v8)) & 1) != 0)
            goto LABEL_34;
          if (v6 == ++v8)
          {
            v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
            if (v6)
              goto LABEL_6;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 88);
    }
    if ((v2 & 0x40) != 0)
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v4 = *(id *)(a1 + 56);
      v9 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v21;
LABEL_16:
        v12 = 0;
        while (1)
        {
          if (*(_QWORD *)v21 != v11)
            objc_enumerationMutation(v4);
          if ((GEOTrafficBannerTextIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v12)) & 1) != 0)
            goto LABEL_34;
          if (v10 == ++v12)
          {
            v10 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
            if (v10)
              goto LABEL_16;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 88);
    }
    if ((v2 & 0x10) == 0)
      return 0;
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v4 = *(id *)(a1 + 40);
    v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
    if (!v3)
    {
LABEL_35:

      return v3;
    }
    v13 = *(_QWORD *)v17;
LABEL_27:
    v14 = 0;
    while (1)
    {
      if (*(_QWORD *)v17 != v13)
        objc_enumerationMutation(v4);
      if ((GEOWaypointRouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v14)) & 1) != 0)
        break;
      if (v3 == ++v14)
      {
        v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
        if (v3)
          goto LABEL_27;
        goto LABEL_35;
      }
    }
LABEL_34:
    v3 = 1;
    goto LABEL_35;
  }
  return 1;
}

os_unfair_lock_s *GEOETATrafficUpdateWaypointRouteIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOETATrafficUpdateWaypointRouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189876F58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898775A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathComputationOptionsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189877EF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOShortTrafficSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOFormattedString *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v55 = v18;
        v53 = v19;
        v54 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v50 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v55;
    if ((v54 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
        goto LABEL_56;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_81;
      v40 = objc_alloc_init(GEOFormattedString);
      if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_80;
      PBReaderRecallMark();
      -[GEOShortTrafficSummary _addNoFlagsTitle:](a1, v40);

      goto LABEL_60;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_56:
      v45 = PBReaderSkipValueWithTag();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if ((v45 & 1) == 0)
      {
        v50 = 0;
        goto LABEL_63;
      }
      goto LABEL_61;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v50 = 0;
      v51 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_81;
    v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v40;

    --v8;
LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_80:

LABEL_81:
  v50 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_63:
  v51 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
  if ((v52 & 1) == 0)
    goto LABEL_65;
LABEL_64:
  *(_BYTE *)(a1 + v51[354]) |= 1u;
LABEL_65:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[354]) |= 4u;
    *(_BYTE *)(a1 + v51[354]) |= 2u;
    goto LABEL_74;
  }
  if (v20)
  {
    while (1)
    {
      v47 = *v20++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
LABEL_70:
        *(_BYTE *)(a1 + v51[354]) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1898787A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189878C64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189878D40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOShortTrafficSummaryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
}

unint64_t GEOShortTrafficSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOShortTrafficSummaryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOShortTrafficSummaryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOShortTrafficSummaryReadAllFrom_initialTag;
  Specified = GEOShortTrafficSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOShortTrafficSummaryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1898790AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898792D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOShortTrafficSummaryIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 0xC) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 4) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

void sub_189879680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987A2D0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_18987B328(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18987B51C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(`anonymous namespace'::KeyAndPriority const&,`anonymous namespace'::KeyAndPriority const&),`anonymous namespace'::KeyAndPriority*>(__int128 *a1, __int128 *a2, __int128 *a3, uint64_t (**a4)(__int128 *, __int128 *))
{
  char v8;
  uint64_t result;
  int v10;
  __int128 v11;
  int v12;
  int v13;
  __int128 v14;
  int v15;
  int v16;
  __int128 v17;
  int v18;
  int v19;
  __int128 v20;
  int v21;
  int v22;

  v8 = (*a4)(a2, a1);
  result = (*a4)(a3, a2);
  if ((v8 & 1) != 0)
  {
    if ((_DWORD)result)
    {
      v10 = *((_DWORD *)a1 + 4);
      v11 = *a1;
      v12 = *((_DWORD *)a3 + 4);
      *a1 = *a3;
      *((_DWORD *)a1 + 4) = v12;
    }
    else
    {
      v19 = *((_DWORD *)a1 + 4);
      v20 = *a1;
      v21 = *((_DWORD *)a2 + 4);
      *a1 = *a2;
      *((_DWORD *)a1 + 4) = v21;
      *a2 = v20;
      *((_DWORD *)a2 + 4) = v19;
      result = (*a4)(a3, a2);
      if (!(_DWORD)result)
        return result;
      v10 = *((_DWORD *)a2 + 4);
      v11 = *a2;
      v22 = *((_DWORD *)a3 + 4);
      *a2 = *a3;
      *((_DWORD *)a2 + 4) = v22;
    }
    *a3 = v11;
    *((_DWORD *)a3 + 4) = v10;
  }
  else if ((_DWORD)result)
  {
    v13 = *((_DWORD *)a2 + 4);
    v14 = *a2;
    v15 = *((_DWORD *)a3 + 4);
    *a2 = *a3;
    *((_DWORD *)a2 + 4) = v15;
    *a3 = v14;
    *((_DWORD *)a3 + 4) = v13;
    result = (*a4)(a2, a1);
    if ((_DWORD)result)
    {
      v16 = *((_DWORD *)a1 + 4);
      v17 = *a1;
      v18 = *((_DWORD *)a2 + 4);
      *a1 = *a2;
      *((_DWORD *)a1 + 4) = v18;
      *a2 = v17;
      *((_DWORD *)a2 + 4) = v16;
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(`anonymous namespace'::KeyAndPriority const&,`anonymous namespace'::KeyAndPriority const&),`anonymous namespace'::KeyAndPriority*>(uint64_t a1, uint64_t a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  unint64_t v6;
  _BOOL8 result;
  __int128 *v8;
  int v9;
  __int128 v10;
  int v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  __int128 *v20;
  __int128 *v21;
  uint64_t v22;
  __n128 v23;
  int v24;
  __int128 v25;
  int v26;
  int v27;
  __int128 v28;
  int v29;
  __int128 v30;
  int v31;
  __int128 v32;
  __int128 v33;
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v6 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 2);
  result = 1;
  switch(v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v8 = (__int128 *)(a2 - 20);
      if ((*a3)((__int128 *)(a2 - 20), (__int128 *)a1))
      {
        v9 = *(_DWORD *)(a1 + 16);
        v10 = *(_OWORD *)a1;
        v11 = *(_DWORD *)(a2 - 4);
        *(_OWORD *)a1 = *v8;
        *(_DWORD *)(a1 + 16) = v11;
        *v8 = v10;
        *(_DWORD *)(a2 - 4) = v9;
      }
      return 1;
    case 3uLL:
      return 1;
    case 4uLL:
      return 1;
    case 5uLL:
      v19 = (__int128 *)(a1 + 20);
      v20 = (__int128 *)(a1 + 40);
      v21 = (__int128 *)(a1 + 60);
      v22 = a2 - 20;
      if (((unsigned int (*)(uint64_t, uint64_t, __n128))*a3)(v22, a1 + 60, v23))
      {
        v24 = *(_DWORD *)(a1 + 76);
        v25 = *v21;
        v26 = *(_DWORD *)(v22 + 16);
        *v21 = *(_OWORD *)v22;
        *(_DWORD *)(a1 + 76) = v26;
        *(_OWORD *)v22 = v25;
        *(_DWORD *)(v22 + 16) = v24;
        if ((*a3)((__int128 *)(a1 + 60), (__int128 *)(a1 + 40)))
        {
          v27 = *(_DWORD *)(a1 + 56);
          v28 = *v20;
          *v20 = *v21;
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 76);
          *v21 = v28;
          *(_DWORD *)(a1 + 76) = v27;
          if ((*a3)((__int128 *)(a1 + 40), (__int128 *)(a1 + 20)))
          {
            v29 = *(_DWORD *)(a1 + 36);
            v30 = *v19;
            *v19 = *v20;
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(a1 + 56);
            *v20 = v30;
            *(_DWORD *)(a1 + 56) = v29;
            if ((*a3)((__int128 *)(a1 + 20), (__int128 *)a1))
            {
              v31 = *(_DWORD *)(a1 + 16);
              v32 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v19;
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(a1 + 36);
              *v19 = v32;
              *(_DWORD *)(a1 + 36) = v31;
            }
          }
        }
      }
      return 1;
    default:
      v12 = (__int128 *)(a1 + 40);
      v13 = a1 + 60;
      if (a1 + 60 == a2)
        return 1;
      v14 = 0;
      v15 = 0;
      break;
  }
  while (1)
  {
    if ((*a3)((__int128 *)v13, v12))
    {
      v33 = *(_OWORD *)v13;
      v34 = *(_DWORD *)(v13 + 16);
      v16 = v14;
      while (1)
      {
        v17 = a1 + v16;
        *(_OWORD *)(v17 + 60) = *(_OWORD *)(a1 + v16 + 40);
        *(_DWORD *)(v17 + 76) = *(_DWORD *)(a1 + v16 + 56);
        if (v16 == -40)
          break;
        v16 -= 20;
        if (((*a3)(&v33, (__int128 *)(v17 + 20)) & 1) == 0)
        {
          v18 = a1 + v16 + 60;
          goto LABEL_12;
        }
      }
      v18 = a1;
LABEL_12:
      *(_OWORD *)v18 = v33;
      *(_DWORD *)(v18 + 16) = v34;
      if (++v15 == 8)
        return v13 + 20 == a2;
    }
    v12 = (__int128 *)v13;
    v14 += 20;
    v13 += 20;
    if (v13 == a2)
      return 1;
  }
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(`anonymous namespace'::KeyAndPriority const&,`anonymous namespace'::KeyAndPriority const&),`anonymous namespace'::KeyAndPriority*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)(__int128 *, __int128 *))
{
  __n128 result;
  int v11;
  __int128 v12;
  int v13;
  int v14;
  __int128 v15;
  int v16;
  int v17;
  int v18;

  if ((*a5)((__int128 *)a4, (__int128 *)a3))
  {
    v11 = *(_DWORD *)(a3 + 16);
    v12 = *(_OWORD *)a3;
    v13 = *(_DWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_DWORD *)(a3 + 16) = v13;
    *(_OWORD *)a4 = v12;
    *(_DWORD *)(a4 + 16) = v11;
    if ((*a5)((__int128 *)a3, (__int128 *)a2))
    {
      v14 = *(_DWORD *)(a2 + 16);
      v15 = *(_OWORD *)a2;
      v16 = *(_DWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_DWORD *)(a2 + 16) = v16;
      *(_OWORD *)a3 = v15;
      *(_DWORD *)(a3 + 16) = v14;
      if ((*a5)((__int128 *)a2, (__int128 *)a1))
      {
        v17 = *(_DWORD *)(a1 + 16);
        result = *(__n128 *)a1;
        v18 = *(_DWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_DWORD *)(a1 + 16) = v18;
        *(__n128 *)a2 = result;
        *(_DWORD *)(a2 + 16) = v17;
      }
    }
  }
  return result;
}

uint64_t std::__inplace_merge<std::_ClassicAlgPolicy,BOOL (*&)(`anonymous namespace'::KeyAndPriority const&,`anonymous namespace'::KeyAndPriority const&),std::__wrap_iter<`anonymous namespace'::KeyAndPriority*>>(uint64_t result, char *a2, char *a3, uint64_t (**a4)(char *, char *), int64_t a5, unint64_t a6, char *a7, int64_t a8)
{
  char *v13;
  uint64_t v14;
  int64_t v15;
  char *v16;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (**v23)(char *, uint64_t);
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  uint64_t (*v28)(char *, char *);
  unint64_t v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  char *v36;
  __int128 v37;
  BOOL v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  int v47;
  char *v48;
  char *v49;
  char *v50;
  __int128 v51;
  unint64_t v52;
  BOOL v53;
  char v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  int64_t v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  __int128 v66;
  char *v67;
  char *v68;
  char *v69;
  int v70;
  unint64_t v71;
  char *v72;
  __int128 v73;
  char *v74;
  __int128 v75;
  __int128 v76;
  char *v77;
  __int128 v78;
  unint64_t v79;
  char *v80;
  __int128 v81;
  uint64_t (**v82)(char *, char *);
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *__src;
  char *__srca;
  void *__srcb;
  void *__srcc;
  char *v91;
  unint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;

  v93 = a6;
  if (a6)
  {
    v13 = (char *)result;
    while (a5 > a8 && (uint64_t)v93 > a8)
    {
      v14 = 0;
      v15 = -a5;
      while (1)
      {
        v16 = &v13[v14];
        result = (*a4)(a2, &v13[v14]);
        if ((result & 1) != 0)
          break;
        --a5;
        v14 += 20;
        if (__CFADD__(v15++, 1))
          return result;
      }
      v18 = -v15;
      v19 = v93;
      v91 = a3;
      if (-v15 >= (uint64_t)v93)
      {
        if (v15 == -1)
        {
          v77 = &v13[v14];
          v103 = *(_DWORD *)&v13[v14 + 16];
          v98 = *(_OWORD *)&v13[v14];
          v78 = *(_OWORD *)a2;
          *((_DWORD *)v77 + 4) = *((_DWORD *)a2 + 4);
          *(_OWORD *)v77 = v78;
          *(_OWORD *)a2 = v98;
          *((_DWORD *)a2 + 4) = v103;
          return result;
        }
        v27 = a3;
        v21 = &v13[20 * ((unint64_t)a5 >> 1) + v14];
        v26 = a2;
        if (a2 != v27)
        {
          v82 = a4;
          v84 = a7;
          v28 = *a4;
          v29 = 0xCCCCCCCCCCCCCCCDLL * ((v91 - a2) >> 2);
          __srca = a2;
          do
          {
            v30 = &a2[20 * (v29 >> 1)];
            v31 = v28(v30, v21);
            if (v31)
              v29 += ~(v29 >> 1);
            else
              v29 >>= 1;
            if (v31)
              a2 = v30 + 20;
          }
          while (v29);
          a7 = v84;
          v18 = -v15;
          a4 = v82;
          v26 = __srca;
          v19 = v93;
        }
        v25 = v18 >> 1;
        v20 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - v26) >> 2);
      }
      else
      {
        v20 = v93 >> 1;
        v21 = a2;
        a2 += 20 * (v93 >> 1);
        __src = v21;
        if (v21 - v13 != v14)
        {
          v83 = v13;
          v22 = (v21 - v13 - v14) >> 2;
          v23 = (unsigned int (**)(char *, uint64_t))a4;
          v24 = 0xCCCCCCCCCCCCCCCDLL * v22;
          v21 = v16;
          do
          {
            if ((*v23)(a2, (uint64_t)&v21[20 * (v24 >> 1)]))
            {
              v24 >>= 1;
            }
            else
            {
              v21 += 20 * (v24 >> 1) + 20;
              v24 += ~(v24 >> 1);
            }
          }
          while (v24);
          a4 = (uint64_t (**)(char *, char *))v23;
          v13 = v83;
          v19 = v93;
          v20 = v93 >> 1;
        }
        v25 = 0xCCCCCCCCCCCCCCCDLL * ((v21 - v13 - v14) >> 2);
        v26 = __src;
      }
      if (v21 == v26)
      {
        v36 = a2;
      }
      else
      {
        v32 = a2 - v26;
        if (a2 == v26)
        {
          v36 = v21;
        }
        else
        {
          v33 = v21 + 20;
          if (v21 + 20 == v26)
          {
            v100 = *((_DWORD *)v21 + 4);
            v95 = *(_OWORD *)v21;
            v85 = a7;
            __srcb = (void *)v25;
            v39 = v20;
            memmove(v21, v26, a2 - v26);
            v20 = v39;
            a7 = v85;
            v25 = (unint64_t)__srcb;
            v19 = v93;
            v40 = &v21[v32];
            *(_OWORD *)v40 = v95;
            v36 = &v21[v32];
            *((_DWORD *)v40 + 4) = v100;
          }
          else
          {
            v34 = v26 + 20;
            if (v26 + 20 == a2)
            {
              v101 = *((_DWORD *)a2 - 1);
              v96 = *(_OWORD *)(a2 - 20);
              if (a2 - 20 != v21)
              {
                v86 = a7;
                __srcc = (void *)v25;
                v41 = v20;
                memmove(v21 + 20, v21, a2 - 20 - v21);
                v20 = v41;
                a7 = v86;
                v25 = (unint64_t)__srcc;
                v19 = v93;
              }
              v36 = v21 + 20;
              *((_DWORD *)v21 + 4) = v101;
              *(_OWORD *)v21 = v96;
            }
            else
            {
              v35 = 0xCCCCCCCCCCCCCCCDLL * ((v26 - v21) >> 2);
              if (v35 == 0xCCCCCCCCCCCCCCCDLL * (v32 >> 2))
              {
                v36 = v26;
                do
                {
                  v99 = *((_DWORD *)v33 - 1);
                  v94 = *(_OWORD *)(v33 - 20);
                  v37 = *(_OWORD *)(v34 - 20);
                  *((_DWORD *)v33 - 1) = *((_DWORD *)v34 - 1);
                  *(_OWORD *)(v33 - 20) = v37;
                  *(_OWORD *)(v34 - 20) = v94;
                  *((_DWORD *)v34 - 1) = v99;
                  if (v33 == v26)
                    break;
                  v33 += 20;
                  v38 = v34 == a2;
                  v34 += 20;
                }
                while (!v38);
              }
              else
              {
                v42 = 0xCCCCCCCCCCCCCCCDLL * (v32 >> 2);
                v43 = 0xCCCCCCCCCCCCCCCDLL * ((v26 - v21) >> 2);
                do
                {
                  v44 = v43;
                  v43 = v42;
                  v42 = v44 % v42;
                }
                while (v42);
                if (v43)
                {
                  v45 = &v21[20 * v43];
                  do
                  {
                    v46 = *(_OWORD *)(v45 - 20);
                    v47 = *((_DWORD *)v45 - 1);
                    v45 -= 20;
                    v102 = v47;
                    v97 = v46;
                    v48 = &v45[4 * ((v26 - v21) >> 2)];
                    v49 = v45;
                    do
                    {
                      v50 = v48;
                      v51 = *(_OWORD *)v48;
                      *((_DWORD *)v49 + 4) = *((_DWORD *)v48 + 4);
                      *(_OWORD *)v49 = v51;
                      v52 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - v48) >> 2);
                      v48 += 4 * ((v26 - v21) >> 2);
                      v53 = __OFSUB__(v35, v52);
                      v55 = v35 - v52;
                      v54 = (v55 < 0) ^ v53;
                      v56 = &v21[20 * v55];
                      if (!v54)
                        v48 = v56;
                      v49 = v50;
                    }
                    while (v48 != v45);
                    *((_DWORD *)v50 + 4) = v102;
                    *(_OWORD *)v50 = v97;
                  }
                  while (v45 != v21);
                }
                v36 = &v21[4 * (v32 >> 2)];
              }
            }
          }
        }
      }
      a5 = -(uint64_t)v25 - v15;
      if ((uint64_t)(v25 + v20) >= (uint64_t)(v19 - (v25 + v20) - v15))
      {
        v59 = v36;
        v60 = v25;
        v61 = a5;
        v62 = a7;
        v63 = v20;
        a2 = v21;
        v58 = v63;
        a7 = v62;
        a5 = v60;
        a3 = v59;
      }
      else
      {
        v16 = v36;
        v57 = v19 - v20;
        v58 = v57;
        a3 = v91;
      }
      v93 = v58;
      v13 = v16;
      if (!v58)
        return result;
    }
    if (a5 <= (uint64_t)v93)
    {
      if (v13 != a2)
      {
        v71 = 0;
        do
        {
          v72 = &a7[v71];
          v73 = *(_OWORD *)&v13[v71];
          *((_DWORD *)v72 + 4) = *(_DWORD *)&v13[v71 + 16];
          *(_OWORD *)v72 = v73;
          v71 += 20;
        }
        while (&v13[v71] != a2);
        if (v71)
        {
          v74 = a7;
          while (a2 != a3)
          {
            result = (*a4)(a2, v74);
            if ((_DWORD)result)
            {
              v75 = *(_OWORD *)a2;
              *((_DWORD *)v13 + 4) = *((_DWORD *)a2 + 4);
              *(_OWORD *)v13 = v75;
              a2 += 20;
            }
            else
            {
              v76 = *(_OWORD *)v74;
              *((_DWORD *)v13 + 4) = *((_DWORD *)v74 + 4);
              *(_OWORD *)v13 = v76;
              v74 += 20;
            }
            v13 += 20;
            if (&a7[v71] == v74)
              return result;
          }
          return (uint64_t)memmove(v13, v74, a7 - v74 + v71);
        }
      }
    }
    else if (a3 != a2)
    {
      v64 = 0;
      do
      {
        v65 = &a7[v64];
        v66 = *(_OWORD *)&a2[v64];
        *((_DWORD *)v65 + 4) = *(_DWORD *)&a2[v64 + 16];
        *(_OWORD *)v65 = v66;
        v64 += 20;
      }
      while (&a2[v64] != a3);
      if (v64)
      {
        v67 = &a7[v64];
        v68 = a3 - 20;
        while (a2 != v13)
        {
          result = (*a4)(v67 - 20, a2 - 20);
          if ((_DWORD)result)
            v69 = a2 - 20;
          else
            v69 = v67 - 20;
          if ((_DWORD)result)
            a2 -= 20;
          v70 = *((_DWORD *)v69 + 4);
          if (!(_DWORD)result)
            v67 -= 20;
          *(_OWORD *)v68 = *(_OWORD *)v69;
          *((_DWORD *)v68 + 4) = v70;
          v68 -= 20;
          if (v67 == a7)
            return result;
        }
        v79 = 0;
        do
        {
          v80 = &v68[v79];
          v81 = *(_OWORD *)&v67[v79 - 20];
          *((_DWORD *)v80 + 4) = *(_DWORD *)&v67[v79 - 4];
          *(_OWORD *)v80 = v81;
          v79 -= 20;
        }
        while (&v67[v79] != a7);
      }
    }
  }
  return result;
}

BOOL GEOARElementDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  BOOL v40;
  uint64_t v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0)
              goto LABEL_50;
            v26 += 7;
            v15 = v27++ >= 9;
            if (v15)
            {
              v28 = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6])
            v28 = 0;
LABEL_52:
          v40 = v28 != 0;
          v41 = 12;
        }
        else
        {
          if ((_DWORD)v18 != 2)
          {
            if ((_DWORD)v18 == 1)
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              *(_BYTE *)(a1 + 16) |= 1u;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if ((v25 & 0x80) == 0)
                  goto LABEL_46;
                v19 += 7;
                v15 = v20++ >= 9;
                if (v15)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_48;
                }
              }
              v3[*v6] = 1;
LABEL_46:
              if (v3[*v6])
                LODWORD(v21) = 0;
LABEL_48:
              *(_DWORD *)(a1 + 8) = v21;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_60;
            }
            continue;
          }
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 16) |= 4u;
          while (1)
          {
            v36 = *v4;
            v37 = *(_QWORD *)&v3[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              break;
            v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
            *(_QWORD *)&v3[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0)
              goto LABEL_54;
            v33 += 7;
            v15 = v34++ >= 9;
            if (v15)
            {
              v35 = 0;
              goto LABEL_56;
            }
          }
          v3[*v6] = 1;
LABEL_54:
          if (v3[*v6])
            v35 = 0;
LABEL_56:
          v40 = v35 != 0;
          v41 = 13;
        }
        *(_BYTE *)(a1 + v41) = v40;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_18987DF10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARElementDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOARElementDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18987DF70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARElementDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOARPRatingReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18987EC24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARPRatingReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOARPRatingReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18987EC84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARPRatingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOARSessionThermalPressureReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _BOOL8 v41;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 8u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_47;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_49:
            v40 = 24;
            goto LABEL_58;
          case 2u:
            *(_BYTE *)(a1 + 28) |= 1u;
            v25 = *v4;
            v26 = *(_QWORD *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v27 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
              *(_QWORD *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v27 = 0;
            }
            *(_QWORD *)(a1 + 8) = v27;
            continue;
          case 3u:
            v28 = 0;
            v29 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v20 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_53:
            v40 = 16;
            goto LABEL_58;
          case 4u:
            v34 = 0;
            v35 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_63;
            continue;
        }
        while (1)
        {
          v36 = *v4;
          v37 = *(_QWORD *)&v3[v36];
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
            break;
          v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
          *(_QWORD *)&v3[v36] = v38;
          v20 |= (unint64_t)(v39 & 0x7F) << v34;
          if ((v39 & 0x80) == 0)
            goto LABEL_55;
          v34 += 7;
          v15 = v35++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_57;
          }
        }
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_57:
        v40 = 20;
LABEL_58:
        *(_DWORD *)(a1 + v40) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v41 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    v41 = 0;
  }
  objc_sync_exit(v3);

  return v41;
}

void sub_18987FF80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARSessionThermalPressureReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOARSessionThermalPressureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18987FFE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOARSessionThermalPressureIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_51;
          }
        case 2u:
          if (v16 != 1)
            goto LABEL_54;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_50;
          v26 = v25 + 8;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_50;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v23 = v27++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_54:
          v37 = 0;
          goto LABEL_53;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v23 = v32++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_51;
      }
LABEL_49:
      v14 = *v4;
LABEL_50:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_53:
  PBReaderRecallMark();
  return v37;
}

void sub_1898809DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOActionButtonDetailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  int v57;
  int v58;
  char v59;
  void *v60;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v62 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_85;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_85:
      if (v13)
      {
        v56 = 1;
        goto LABEL_96;
      }
      if (!v14)
        goto LABEL_97;
      while (1)
      {
        v58 = *v14++;
        v57 = v58;
        if (v58 == 1)
          break;
        if (v57 == 2)
        {
          v59 = 8;
LABEL_94:
          *(_BYTE *)(a1 + 52) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_97;
        }
      }
      v59 = 4;
      goto LABEL_94;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v62)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v54 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_80;
      case 2:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 52) & 8) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 24;
LABEL_49:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          v17 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v54 = 16 * *(_BYTE *)(a1 + 52);
LABEL_80:
          v9 += v54 >> 7;
          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
          if (v9)
            v55 = 1;
          else
            v55 = v13;
          if ((v55 & 1) == 0)
            goto LABEL_85;
          continue;
        }
LABEL_102:
        v56 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        *(_BYTE *)(a1 + 52) |= 4u;
        *(_BYTE *)(a1 + 52) |= 8u;
        if ((v56 & 1) != 0)
        {
LABEL_97:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_98;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_98:
            v60 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (2)
        {
          v42 = *v16;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                LODWORD(v41) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v41) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_81;
      case 4:
        if ((v8 & 1) != 0)
        {
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (1)
          {
            v49 = *v16;
            v50 = *(_QWORD *)(v3 + v49);
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
              break;
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0)
              goto LABEL_73;
            v46 += 7;
            v26 = v47++ >= 9;
            if (v26)
            {
              v48 = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v17))
            v48 = 0;
LABEL_75:
          *(_BYTE *)(a1 + 48) = v48 != 0;
        }
        else
        {
LABEL_66:
          v53 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
LABEL_95:
            v56 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_81;
      default:
        v37 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_95;
        goto LABEL_81;
    }
  }
}

void sub_189881088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189881888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOActionButtonDetailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOActionButtonDetailReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOActionButtonDetailReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOActionButtonDetailReadAllFrom_initialTag;
  Specified = GEOActionButtonDetailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189881A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOActionButtonDetailReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOActionButtonDetailReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189881A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActionButtonDetailIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_44;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_40;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v23 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_44:
          v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_189881EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOActionButtonDetailIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 52) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1898821DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutoCompleteResultInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_30;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189882D98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutoCompleteResultInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAutoCompleteResultInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189882DF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAutoCompleteResultInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOCacheHitReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _BOOL8 v45;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCacheHit__requestorType;
                goto LABEL_54;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                v26 = &OBJC_IVAR___GEOCacheHit__requestorType;
                goto LABEL_57;
              }
            }
            v26 = &OBJC_IVAR___GEOCacheHit__requestorType;
            goto LABEL_55;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 8u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCacheHit__tileSourceType;
                goto LABEL_54;
              }
              v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
              *(_QWORD *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOCacheHit__tileSourceType;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOCacheHit__tileSourceType;
            goto LABEL_55;
          case 3u:
            v33 = 0;
            v34 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 2u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOCacheHit__count;
                goto LABEL_54;
              }
              v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
              *(_QWORD *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  v26 = &OBJC_IVAR___GEOCacheHit__count;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOCacheHit__count;
            goto LABEL_55;
          case 4u:
            v39 = 0;
            v40 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_65;
            continue;
        }
        while (1)
        {
          v41 = *v4;
          v42 = *(_QWORD *)&v3[v41];
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)&v3[*v5])
            break;
          v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v42);
          *(_QWORD *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOCacheHit__bytes;
            goto LABEL_55;
          }
          v39 += 7;
          v25 = v40++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            v26 = &OBJC_IVAR___GEOCacheHit__bytes;
            goto LABEL_57;
          }
        }
        v26 = &OBJC_IVAR___GEOCacheHit__bytes;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_57:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_1898840EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheHitReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCacheHitReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18988414C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheHitIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOCacheMissReadAllFrom(_BYTE *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  GEOCacheMissLoadError *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  _BOOL8 v51;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            a1[36] |= 0x10u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_61;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_63:
            v50 = 32;
            goto LABEL_80;
          case 2u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            a1[36] |= 8u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_67:
            v50 = 28;
            goto LABEL_80;
          case 3u:
            v31 = 0;
            v32 = 0;
            v20 = 0;
            a1[36] |= 2u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_71:
            v50 = 20;
            goto LABEL_80;
          case 4u:
            v37 = 0;
            v38 = 0;
            v20 = 0;
            a1[36] |= 1u;
            while (2)
            {
              v39 = *v4;
              v40 = *(_QWORD *)&v3[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v42 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v40);
                *(_QWORD *)&v3[v39] = v41;
                v20 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  v15 = v38++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_75:
            v50 = 16;
            goto LABEL_80;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_84;
            v43 = objc_alloc_init(GEOCacheMissLoadError);
            if (!GEOCacheMissLoadErrorReadAllFrom((uint64_t)v43, v3))
            {

              goto LABEL_84;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addErrors:", v43, 0, 0);

LABEL_81:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_82;
            break;
          case 6u:
            v44 = 0;
            v45 = 0;
            v20 = 0;
            a1[36] |= 4u;
            while (2)
            {
              v46 = *v4;
              v47 = *(_QWORD *)&v3[v46];
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v49 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v47);
                *(_QWORD *)&v3[v46] = v48;
                v20 |= (unint64_t)(v49 & 0x7F) << v44;
                if (v49 < 0)
                {
                  v44 += 7;
                  v15 = v45++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_79:
            v50 = 24;
LABEL_80:
            *(_DWORD *)&a1[v50] = v20;
            goto LABEL_81;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_84;
            goto LABEL_81;
        }
      }
    }
LABEL_82:
    v51 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    v51 = 0;
  }
  objc_sync_exit(v3);

  return v51;
}

void sub_189885D0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheMissReadFrom(_BYTE *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCacheMissReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189885D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheMissIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCacheMissLoadErrorIsValid(a1))
            goto LABEL_69;
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v38 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOCacheMissLoadErrorIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_42;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_42;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_44;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_39;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_41;
        }
      }
      if ((_DWORD)v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_42;
    }
    if ((v8 & 7) != 0)
      goto LABEL_44;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOCacheMissLoadErrorReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v24 = *v4;
            v25 = *(_QWORD *)&v3[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
            *(_QWORD *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_40;
            v21 += 7;
            v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_42:
          v34 = 16;
        }
        else
        {
          if ((_DWORD)v18 != 2)
          {
            if ((_DWORD)v18 == 1)
            {
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v19;

            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_50;
            }
            continue;
          }
          v28 = 0;
          v29 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
              goto LABEL_44;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            LODWORD(v23) = 0;
LABEL_46:
          v34 = 20;
        }
        *(_DWORD *)(a1 + v34) = v23;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18988746C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCacheMissLoadErrorReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCacheMissLoadErrorReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898874CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargeLocationDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 12) |= 4u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOChargeLocationDetails__routeResumed;
              goto LABEL_49;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOChargeLocationDetails__routeResumed;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOChargeLocationDetails__routeResumed;
LABEL_48:
          v3[*v6] = 1;
        }
        else if ((_DWORD)v18 == 2)
        {
          v34 = 0;
          v35 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 12) |= 2u;
          while (1)
          {
            v36 = *v4;
            v37 = *(_QWORD *)&v3[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOChargeLocationDetails__routePaused;
              goto LABEL_48;
            }
            v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
            *(_QWORD *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0)
              break;
            v34 += 7;
            v26 = v35++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOChargeLocationDetails__routePaused;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOChargeLocationDetails__routePaused;
        }
        else
        {
          if ((_DWORD)v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_58;
            continue;
          }
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOChargeLocationDetails__arrivedAtChargeLocation;
              goto LABEL_48;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOChargeLocationDetails__arrivedAtChargeLocation;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOChargeLocationDetails__arrivedAtChargeLocation;
        }
LABEL_49:
        if (v3[*v6])
          v21 = 0;
LABEL_51:
        *(_BYTE *)(a1 + *v27) = v21 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189888178(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargeLocationDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOChargeLocationDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898881D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargeLocationDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189888AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCollectionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  int *v13;
  int *v14;
  int *v15;
  BOOL v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  int *v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  int v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  int v70;
  int v71;
  char v72;
  void *v73;
  BOOL v75;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 72) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_105:
    if (v12)
    {
      v69 = 1;
      goto LABEL_107;
    }
    if (!v13)
      goto LABEL_118;
    while (1)
    {
      v71 = *v13++;
      v70 = v71;
      if (v71 == 1)
        break;
      if (v70 == 2)
      {
        v72 = 8;
LABEL_117:
        *(_BYTE *)(a1 + 72) |= v72;
      }
      else if (!v70)
      {
        goto LABEL_118;
      }
    }
    v72 = 4;
    goto LABEL_117;
  }
  if (v13)
    v16 = (v7 & 1 | v10) != 0;
  else
    v16 = 1;
  v75 = v16;
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_105;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v14;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v20 = 0;
LABEL_29:
    v27 = v20 & 7;
    if (v26 || v27 == 4)
      goto LABEL_105;
    v29 = v20 >> 3;
    v30 = v12;
    if (!v75)
    {
      v31 = v13;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(_BYTE *)(a1 + 72) & 4) != 0)
          goto LABEL_77;
        if (v27 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_122;
          while (1)
          {
            v35 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            {
              PBReaderRecallMark();
              goto LABEL_104;
            }
            v36 = 0;
            v37 = 0;
            v38 = 0;
            while (1)
            {
              v39 = *v14;
              v40 = *(_QWORD *)(v3 + v39);
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
                break;
              v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v40);
              *(_QWORD *)(v3 + v39) = v41;
              v38 |= (unint64_t)(v42 & 0x7F) << v36;
              if (v42 < 0)
              {
                v36 += 7;
                v25 = v37++ >= 9;
                if (!v25)
                  continue;
              }
              goto LABEL_55;
            }
            *(_BYTE *)(v3 + *v35) = 1;
LABEL_55:
            PBRepeatedUInt64Add();
          }
        }
        v62 = 0;
        v63 = 0;
        v64 = 0;
        while (1)
        {
          v65 = *v14;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
            break;
          v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v66);
          *(_QWORD *)(v3 + v65) = v67;
          v64 |= (unint64_t)(v68 & 0x7F) << v62;
          if (v68 < 0)
          {
            v62 += 7;
            v25 = v63++ >= 9;
            if (!v25)
              continue;
          }
          goto LABEL_103;
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_103:
        PBRepeatedUInt64Add();
        goto LABEL_104;
      case 2:
        if (!v30)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v43;

          v15 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
LABEL_78:
          if (v9)
            v61 = 1;
          else
            v61 = v12;
          if (v61 != 1 || *(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_105;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v9 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
LABEL_104:
          v15 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_78;
        }
LABEL_122:
        v69 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        *(_BYTE *)(a1 + 72) |= 4u;
        *(_BYTE *)(a1 + 72) |= 8u;
        if ((v69 & 1) != 0)
        {
LABEL_118:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if (v12)
            goto LABEL_119;
          return v3;
        }
        v3 = 0;
        if (!v12)
          return v3;
LABEL_119:
        v73 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v48 = *v14;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v25 = v46++ >= 9;
              if (v25)
              {
                v47 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v47 = 0;
LABEL_87:
        *(_QWORD *)(a1 + 48) = v47;
        goto LABEL_78;
      case 5:
        if ((v8 & 1) != 0)
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          *(_BYTE *)(a1 + 72) |= 2u;
          while (1)
          {
            v56 = *v14;
            v57 = *(_QWORD *)(v3 + v56);
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if ((v59 & 0x80) == 0)
              goto LABEL_89;
            v53 += 7;
            v25 = v54++ >= 9;
            if (v25)
            {
              v55 = 0;
              goto LABEL_91;
            }
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_89:
          if (*(_BYTE *)(v3 + *v15))
            v55 = 0;
LABEL_91:
          *(_BYTE *)(a1 + 68) = v55 != 0;
        }
        else
        {
LABEL_77:
          v60 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v60 & 1) == 0)
          {
LABEL_121:
            v69 = 0;
            goto LABEL_107;
          }
        }
        goto LABEL_78;
      default:
        v52 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v52)
          goto LABEL_121;
        goto LABEL_78;
    }
  }
}

void sub_1898894C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189889BC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCollectionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOCollectionDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOCollectionDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOCollectionDetailsReadAllFrom_initialTag;
  Specified = GEOCollectionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189889D48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOCollectionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCollectionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189889DA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCollectionDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_61;
            while (1)
            {
LABEL_48:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v33 = a1[*v4], a1[*v4]))
              {
                PBReaderRecallMark();
                goto LABEL_58;
              }
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  break;
                v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v13 = v33++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_48;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0)
            goto LABEL_61;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_58;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_36;
          goto LABEL_61;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v28 = 0;
          break;
        default:
LABEL_36:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v27 = v28++ > 8;
          if (!v27)
            continue;
        }
        goto LABEL_58;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_18988A2F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCollectionDetailsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 72) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18988A66C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODailyUseSummaryUseEventReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _BOOL8 v47;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_52;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_54;
              }
            }
            v3[*v6] = 1;
LABEL_52:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_54:
            v46 = 24;
            goto LABEL_63;
          case 2u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_58;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_58:
            v46 = 16;
            goto LABEL_63;
          case 3u:
            v31 = 0;
            v32 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_62:
            v46 = 20;
LABEL_63:
            *(_DWORD *)(a1 + v46) = v20;
            continue;
          case 4u:
            v37 = 0;
            v38 = 0;
            v39 = 0;
            *(_BYTE *)(a1 + 32) |= 8u;
            break;
          case 5u:
            PBReaderReadString();
            v44 = objc_claimAutoreleasedReturnValue();
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v44;

            continue;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_70;
            continue;
        }
        while (1)
        {
          v40 = *v4;
          v41 = *(_QWORD *)&v3[v40];
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)&v3[*v5])
            break;
          v43 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v41);
          *(_QWORD *)&v3[v40] = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_65;
          v37 += 7;
          v15 = v38++ >= 9;
          if (v15)
          {
            v39 = 0;
            goto LABEL_67;
          }
        }
        v3[*v6] = 1;
LABEL_65:
        if (v3[*v6])
          v39 = 0;
LABEL_67:
        *(_BYTE *)(a1 + 28) = v39 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_70:
    v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_18988FDDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODailyUseSummaryUseEventReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODailyUseSummaryUseEventReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18988FE3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODailyUseSummaryUseEventIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_51;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_51;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_51;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v33 = 0;
          break;
        case 5u:
          if (v15 == 2)
            goto LABEL_53;
          goto LABEL_57;
        default:
LABEL_53:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v38 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_51:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v38;
}

BOOL GEODeviceSyncDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 32) |= 2u;
          v18 = *v4;
          v19 = *(_QWORD *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
            *(_QWORD *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v20 = 0;
          }
          *(_QWORD *)(a1 + 24) = v20;
        }
        else if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((_QWORD *)(a1 + 8), (uint64_t)v3) & 1) == 0)
            goto LABEL_33;
          PBReaderRecallMark();
          *(_BYTE *)(a1 + 32) |= 1u;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_33;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_33:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189890D84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODeviceSyncDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODeviceSyncDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189890DE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODeviceSyncDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1)
          goto LABEL_34;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEODodgeballDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_30;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189891A5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODodgeballDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODodgeballDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189891ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODodgeballDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEODurationInNavigationModeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 20) |= 1u;
          v25 = *v4;
          v26 = *(_QWORD *)&v3[v25];
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v27 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
            *(_QWORD *)&v3[v25] = v26 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v27 = 0;
          }
          *(_QWORD *)(a1 + 8) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_189892678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODurationInNavigationModeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODurationInNavigationModeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898926D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODurationInNavigationModeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1)
          goto LABEL_39;
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && (v26 = v25 + 8, v26 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v24] = v26;
        else
          a1[v14] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_39;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

BOOL GEODynamicContextHyperlinkDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189893B58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODynamicContextHyperlinkDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODynamicContextHyperlinkDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189893BB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODynamicContextHyperlinkDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOElementDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  _BOOL8 v52;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 4u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_58;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_60;
              }
            }
            v3[*v6] = 1;
LABEL_58:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_60:
            v51 = 20;
            goto LABEL_73;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_64:
            *(_QWORD *)(a1 + 8) = v27;
            continue;
          case 3u:
            v32 = 0;
            v33 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 8u;
            while (2)
            {
              v34 = *v4;
              v35 = *(_QWORD *)&v3[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v37 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v35);
                *(_QWORD *)&v3[v34] = v36;
                v20 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_68:
            v51 = 24;
            goto LABEL_73;
          case 4u:
            v38 = 0;
            v39 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (2)
            {
              v40 = *v4;
              v41 = *(_QWORD *)&v3[v40];
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v43 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v41);
                *(_QWORD *)&v3[v40] = v42;
                v20 |= (unint64_t)(v43 & 0x7F) << v38;
                if (v43 < 0)
                {
                  v38 += 7;
                  v15 = v39++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_72:
            v51 = 16;
LABEL_73:
            *(_DWORD *)(a1 + v51) = v20;
            continue;
          case 5u:
            v44 = 0;
            v45 = 0;
            v46 = 0;
            *(_BYTE *)(a1 + 32) |= 0x10u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_80;
            continue;
        }
        while (1)
        {
          v47 = *v4;
          v48 = *(_QWORD *)&v3[v47];
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)&v3[*v5])
            break;
          v50 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v48);
          *(_QWORD *)&v3[v47] = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0)
            goto LABEL_75;
          v44 += 7;
          v15 = v45++ >= 9;
          if (v15)
          {
            v46 = 0;
            goto LABEL_77;
          }
        }
        v3[*v6] = 1;
LABEL_75:
        if (v3[*v6])
          v46 = 0;
LABEL_77:
        *(_BYTE *)(a1 + 28) = v46 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v52 = v3[*v6] == 0;
  }
  else
  {
LABEL_80:
    v52 = 0;
  }
  objc_sync_exit(v3);

  return v52;
}

void sub_189895820(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElementDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOElementDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189895880(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOElementDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v37 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_65:
          v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v21 = v37++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOImpressionObjectIdReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEOImpressionObjectId__low;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEOImpressionObjectId__low;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEOImpressionObjectId__low;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOImpressionObjectId__high;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              v20 = 0;
              v26 = &OBJC_IVAR___GEOImpressionObjectId__high;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEOImpressionObjectId__high;
        }
LABEL_40:
        if (v3[*v6])
          v20 = 0;
LABEL_42:
        *(_QWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189896830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImpressionObjectIdReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOImpressionObjectIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189896890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImpressionObjectIdIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_189896FA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64x2_t v12;
  int8x16_t v13;
  uint32x4_t v14;
  int8x8_t v15;
  int32x2_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  int *v21;
  BOOL v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  GEOLogMsgEventUserAction *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  void *v60;
  BOOL v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 520));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 516);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 512));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_QWORD *)(a1 + 528);
  v12 = (uint64x2_t)vdupq_n_s64(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = (uint32x4_t)vdupq_n_s32(v11);
  v15.i32[0] = v11 >> 9;
  v15.i32[1] = v11 >> 47;
  v16 = vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFFDFFFFFFEELL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAB80)), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFEDFFFFFFEBLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8(v15, (int8x8_t)0x100000001)));
  *(int32x2_t *)v12.i8 = vadd_s32(vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFFBFFFFFFEALL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 42, v11 >> 27), (int8x8_t)0x100000001)), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAB90)), (int8x8_t)0x100000001), (int32x2_t)vand_s8(
                                                (int8x8_t)__PAIR64__(v11 >> 34, v11 >> 11),
                                                (int8x8_t)0x100000001)),
                                 vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFABA0)), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 17, HIBYTE(v11)), (int8x8_t)0x100000001)))), vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFF3FFFFFFE3), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12,
                                                                                 (uint64x2_t)xmmword_189CFABB0)),
                                                (int8x8_t)0x100000001)),
                                 vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFE9FFFFFFECLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFABC0)), (int8x8_t)0x100000001))), vadd_s32(vadd_s32((int32x2_t)(*(_QWORD *)&vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFE2FFFFFFE8) & 0xFFFFFF01FFFFFF01), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFABD0)),
                                                (int8x8_t)0x100000001)),
                                 vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFF8FFFFFFF0), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 25, v11 >> 51), (int8x8_t)0x100000001))))), vadd_s32((int32x2_t)__PAIR64__((v11 >> 4) & 1, vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAB20),
                                                                          (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAB10)), v13), (int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAB40), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAB30)), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CFAB50), v13), (int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(
                                                                                       v12,
                                                                                       (uint64x2_t)xmmword_189CFAB70),
                                                                          (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAB60)), v13))))), (int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFFAFFFFFFFELL), (int8x8_t)0x100000001)));
  v17 = vadd_s32(*(int32x2_t *)v12.i8, vdup_lane_s32(*(int32x2_t *)v12.i8, 1)).u32[0]
      + vadd_s32(v16, vdup_lane_s32(v16, 1)).u32[0]
      + ((v11 >> 36) & 1)
      + ((v11 >> 10) & 1)
      + ((v11 >> 28) & 1)
      + ((v11 >> 46) & 1)
      + ((v11 >> 26) & 1)
      + (v11 >> 31);
  while (2)
  {
    v18 = 1;
    v19 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v18 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v20 = v10 | (v17 > 0x2F);
        if (((v20 | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = v20;
        v63 = (v21 == 0) | v20;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        v62 = v20;
        break;
      default:
        ++v17;
LABEL_6:
        v18 = v9;
        v19 = v10;
LABEL_8:
        ++v7;
        v9 = v18;
        v10 = v19;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v24))
      goto LABEL_492;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_23;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_23:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_25:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_492:
      if (v22)
      {
        *(_QWORD *)(a1 + 528) |= 0x7FFFFFFFFFFFFFFCuLL;
      }
      else if (v21)
      {
        while (1)
        {
          v58 = *v21++;
          switch(v58)
          {
            case 101:
              v59 = 0x1000000000000000;
              goto LABEL_554;
            case 102:
              v59 = 0x1000000000000;
              goto LABEL_554;
            case 104:
              v59 = 0x80000000000000;
              goto LABEL_554;
            case 105:
              v59 = 0x2000000000;
              goto LABEL_554;
            case 106:
              v59 = 0x100000000;
              goto LABEL_554;
            case 108:
              v59 = 2048;
              goto LABEL_554;
            case 109:
              v59 = 0x400000000000000;
              goto LABEL_554;
            case 110:
              v59 = 0x100000000000000;
              goto LABEL_554;
            case 111:
              v59 = 0x200000000000000;
              goto LABEL_554;
            case 113:
              v59 = 0x20000000;
              goto LABEL_554;
            case 114:
              v59 = 0x100000;
              goto LABEL_554;
            case 115:
              v59 = 0x80000000000;
              goto LABEL_554;
            case 116:
              v59 = 0x20000000000;
              goto LABEL_554;
            case 117:
              v59 = 0x1000000;
              goto LABEL_554;
            case 118:
              v59 = 0x200000000000;
              goto LABEL_554;
            case 119:
              v59 = 0x100000000000;
              goto LABEL_554;
            case 120:
              v59 = 0x4000000000000;
              goto LABEL_554;
            case 121:
              v59 = 0x2000000000000;
              goto LABEL_554;
            case 123:
              v59 = 0x10000;
              goto LABEL_554;
            case 124:
              v59 = 0x8000000000000;
              goto LABEL_554;
            case 125:
              v59 = 32;
              goto LABEL_554;
            case 126:
              v59 = 0x40000000000;
              goto LABEL_554;
            case 127:
              v59 = 16;
              goto LABEL_554;
            case 129:
              v59 = 64;
              goto LABEL_554;
            case 131:
              v59 = 0x4000000000000000;
              goto LABEL_554;
            case 132:
              v59 = 0x400000000;
              goto LABEL_554;
            case 133:
              v59 = 0x40000000000000;
              goto LABEL_554;
            case 134:
              v59 = 0x20000;
              goto LABEL_554;
            case 135:
              v59 = 0x2000;
              goto LABEL_554;
            case 136:
              v59 = 0x20000000000000;
              goto LABEL_554;
            case 137:
              v59 = 0x800000;
              goto LABEL_554;
            case 138:
              v59 = 0x8000000000;
              goto LABEL_554;
            case 139:
              v59 = 0x40000000;
              goto LABEL_554;
            case 140:
              v59 = 0x800000000000000;
              goto LABEL_554;
            case 141:
              v59 = 4096;
              goto LABEL_554;
            case 142:
              v59 = 0x4000;
              goto LABEL_554;
            case 143:
              v59 = 0x8000;
              goto LABEL_554;
            case 144:
              v59 = 128;
              goto LABEL_554;
            case 145:
              v59 = 256;
              goto LABEL_554;
            case 146:
              v59 = 0x2000000;
              goto LABEL_554;
            case 147:
              v59 = 0x40000;
              goto LABEL_554;
            case 148:
              v59 = 0x2000000000000000;
              goto LABEL_554;
            case 149:
              v59 = 0x200000;
              goto LABEL_554;
            case 150:
              v59 = 512;
              goto LABEL_554;
            case 151:
              v59 = 0x10000000000;
              goto LABEL_554;
            case 152:
              v59 = 0x4000000000;
              goto LABEL_554;
            case 153:
              v59 = 0x800000000;
              goto LABEL_554;
            case 154:
              v59 = 0x10000000000000;
              goto LABEL_554;
            case 155:
              v59 = 8;
              goto LABEL_554;
            case 156:
              v59 = 0x200000000;
              goto LABEL_554;
            case 157:
              v59 = 0x80000;
              goto LABEL_554;
            case 158:
              v59 = 0x800000000000;
              goto LABEL_554;
            case 159:
              v59 = 0x1000000000;
              goto LABEL_554;
            case 160:
              v59 = 1024;
              goto LABEL_554;
            case 161:
              v59 = 0x10000000;
              goto LABEL_554;
            case 162:
              v59 = 0x80000000;
              goto LABEL_554;
            case 163:
              v59 = 0x400000000000;
              goto LABEL_554;
            case 164:
              v59 = 0x4000000;
LABEL_554:
              *(_QWORD *)(a1 + 528) |= v59;
              break;
            default:
              continue;
          }
        }
      }
      v3 = *(_BYTE *)(v3 + *v24) == 0;
      if (!v22)
        return v3;
      goto LABEL_556;
    }
    v36 = v28 >> 3;
    v37 = v22;
    if ((v63 & 1) == 0)
    {
      v38 = v21;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    if ((int)v36 > 99)
    {
      switch((int)v36)
      {
        case 100:
          if ((v8 & 1) == 0)
            goto LABEL_361;
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_QWORD *)(a1 + 528) |= 2uLL;
          while (2)
          {
            v45 = *v23;
            v46 = *(_QWORD *)(v3 + v45);
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v24) = 1;
            }
            else
            {
              v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v46);
              *(_QWORD *)(v3 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                v33 = v43++ >= 9;
                if (v33)
                {
                  LODWORD(v44) = 0;
                  goto LABEL_366;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v24))
            LODWORD(v44) = 0;
LABEL_366:
          *(_DWORD *)(a1 + 524) = v44;
          goto LABEL_488;
        case 101:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 535) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = 8 * *(_QWORD *)(a1 + 528);
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventUserAction);
          if (!GEOLogMsgEventUserActionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 488;
          break;
        case 102:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 15;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventStateTiming);
          if (!GEOLogMsgEventStateTimingReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 384;
          break;
        case 103:
        case 107:
        case 112:
        case 122:
        case 128:
        case 130:
          goto LABEL_57;
        case 104:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 0x80) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 8;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTileSetState);
          if (!GEOLogMsgEventTileSetStateReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 440;
          break;
        case 105:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 26;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventPlaceDataCache);
          if (!GEOLogMsgEventPlaceDataCacheReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 296;
          break;
        case 106:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 31;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventNetwork);
          if (!GEOLogMsgEventNetworkReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 256;
          break;
        case 108:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 52;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventDirections);
          if (!GEOLogMsgEventDirectionsReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 88;
          break;
        case 109:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 535) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = 32 * *(_QWORD *)(a1 + 528);
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTransitAppLaunch);
          if (!GEOLogMsgEventTransitAppLaunchReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 464;
          break;
        case 110:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 535) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 7;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTimeToLeaveHypothesis);
          if (!GEOLogMsgEventTimeToLeaveHypothesisReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 448;
          break;
        case 111:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 535) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 6;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTimeToLeaveInitialTravelTime);
          if (!GEOLogMsgEventTimeToLeaveInitialTravelTimeReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 456;
          break;
        case 113:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 531) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 34;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventMapsWidgetsInteractionSession);
          if (!GEOLogMsgEventMapsWidgetsInteractionSessionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 232;
          break;
        case 114:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 530) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 43;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventListInteractionSession);
          if (!GEOLogMsgEventListInteractionSessionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 160;
          break;
        case 115:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 20;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventRefineSearchSession);
          if (!GEOLogMsgEventRefineSearchSessionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 344;
          break;
        case 116:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 22;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventProactiveSuggestionInteractionSession);
          if (!GEOLogMsgEventProactiveSuggestionInteractionSessionReadAllFrom(v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 328;
          break;
        case 117:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 531) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 39;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventMapLaunch);
          if (!GEOLogMsgEventMapLaunchReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 192;
          break;
        case 118:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 18;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventRideBookingSession);
          if (!GEOLogMsgEventRideBookingSessionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 360;
          break;
        case 119:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 19;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventRideBookedSession);
          if (!GEOLogMsgEventRideBookedSessionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 352;
          break;
        case 120:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 13;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTableBookingSession);
          if (!GEOLogMsgEventTableBookingSessionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 400;
          break;
        case 121:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 14;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTableBookedSession);
          if (!GEOLogMsgEventTableBookedSessionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 392;
          break;
        case 123:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 530) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 47;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventFullNavTrace);
          if (!GEOLogMsgEventFullNavTraceReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 128;
          break;
        case 124:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 12;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTelemetric);
          if (!GEOLogMsgEventTelemetricReadAllFrom(v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 408;
          break;
        case 125:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 528) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 58;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventClientACSuggestions);
          if (!GEOLogMsgEventClientACSuggestionsReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 40;
          break;
        case 126:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 21;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventRealtimeTrafficProbe);
          if (!GEOLogMsgEventRealtimeTrafficProbeReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 336;
          break;
        case 127:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 528) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 59;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventBatchTrafficProbe);
          if (!GEOLogMsgEventBatchTrafficProbeReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 32;
          break;
        case 129:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 528) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 57;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventCommuteWindow);
          if (!GEOLogMsgEventCommuteWindowReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 48;
          break;
        case 131:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 535) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = 2 * *(_QWORD *)(a1 + 528);
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventWifiConnectionQualityProbe);
          if (!GEOLogMsgEventWifiConnectionQualityProbeReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 504;
          break;
        case 132:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 29;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventParkedCar);
          if (!GEOLogMsgEventParkedCarReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 272;
          break;
        case 133:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 9;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTileCacheAnalytic);
          if (!GEOLogMsgEventTileCacheAnalyticReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 432;
          break;
        case 134:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 530) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 46;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventGridDuration);
          if (!GEOLogMsgEventGridDurationReadAllFrom(v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 136;
          break;
        case 135:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 50;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventDisplayAnalytic);
          if (!GEOLogMsgEventDisplayAnalyticReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 104;
          break;
        case 136:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 10;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventThrottle);
          if (!GEOLogMsgEventThrottleReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 424;
          break;
        case 137:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 530) & 0x80) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 40;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventMapKitCounts);
          if (!GEOLogMsgEventMapKitCountsReadAllFrom(v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 184;
          break;
        case 138:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 0x80) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 24;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventPredExTrainingData);
          if (!GEOLogMsgEventPredExTrainingDataReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 312;
          break;
        case 139:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 531) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 33;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventMarcoLiteUsage);
          if (!GEOLogMsgEventMarcoLiteUsageReadAllFrom(v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 240;
          break;
        case 140:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 535) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = 16 * *(_QWORD *)(a1 + 528);
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventTripDepartureFeedback);
          if (!GEOLogMsgEventTripDepartureFeedbackReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 472;
          break;
        case 141:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 51;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventDirectionsRequestDetails);
          if (!GEOLogMsgEventDirectionsRequestDetailsReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 96;
          break;
        case 142:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 49;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventEVRoutingVehicleDetails);
          if (!GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 112;
          break;
        case 143:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 0x80) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 48;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventEVTrip);
          if (!GEOLogMsgEventEVTripReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 120;
          break;
        case 144:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 528) & 0x80) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 56;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventCuratedCollectionStats);
          if (!GEOLogMsgEventCuratedCollectionStatsReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 56;
          break;
        case 145:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 55;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventCuratedCollectionUsage);
          if (!GEOLogMsgEventCuratedCollectionUsageReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 64;
          break;
        case 146:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 531) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 38;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventMapsDeviceSettings);
          if (!GEOLogMsgEventMapsDeviceSettingsReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 200;
          break;
        case 147:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 530) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 45;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventHardStop);
          if (!GEOLogMsgEventHardStopReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 144;
          break;
        case 148:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 535) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = 4 * *(_QWORD *)(a1 + 528);
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventVLFUsage);
          if (!GEOLogMsgEventVLFUsageReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 496;
          break;
        case 149:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 530) & 0x20) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 42;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventLogDiscard);
          if (!GEOLogMsgEventLogDiscardReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 168;
          break;
        case 150:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 54;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventDailyUseSummary);
          if (!GEOLogMsgEventDailyUseSummaryReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 72;
          break;
        case 151:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 23;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventPressureData);
          if (!GEOLogMsgEventPressureDataReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 320;
          break;
        case 152:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 25;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventPOIBusynessData);
          if (!GEOLogMsgEventPOIBusynessDataReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 304;
          break;
        case 153:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 28;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventPeriodicSettingsSummary);
          if (!GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 280;
          break;
        case 154:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 534) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 11;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventThermalPressure);
          if (!GEOLogMsgEventThermalPressureReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 416;
          break;
        case 155:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 528) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 60;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventARSessionUsage);
          if (!GEOLogMsgEventARSessionUsageReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 24;
          break;
        case 156:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 30;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventNetworkSelectionHarvest);
          if (!GEOLogMsgEventNetworkSelectionHarvestReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 264;
          break;
        case 157:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 530) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 44;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventImpressionEvent);
          if (!GEOLogMsgEventImpressionEventReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 152;
          break;
        case 158:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 0x80) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 16;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventShowcaseSuppression);
          if (!GEOLogMsgEventShowcaseSuppressionReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 376;
          break;
        case 159:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 532) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 27;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventPlaceCacheLookup);
          if (!GEOLogMsgEventPlaceCacheLookupReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 288;
          break;
        case 160:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 529) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 53;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventDeviceSyncStatus);
          if (!GEOLogMsgEventDeviceSyncStatusReadAllFrom(v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 80;
          break;
        case 161:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 531) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 35;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventMapsInteraction);
          if (!GEOLogMsgEventMapsInteractionReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 224;
          break;
        case 162:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 531) & 0x80) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 32;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventNetworkEventSummary);
          if (!GEOLogMsgEventNetworkEventSummaryReadAllFrom(v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 248;
          break;
        case 163:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 533) & 0x40) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 17;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventServiceMetadata);
          if (!GEOLogMsgEventServiceMetadataReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 368;
          break;
        case 164:
          if (!v37)
            goto LABEL_361;
          if ((*(_BYTE *)(a1 + 531) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_559;
            v57 = *(_QWORD *)(a1 + 528) << 37;
            goto LABEL_487;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_559;
          v54 = objc_alloc_init(GEOLogMsgEventMapsEngagement);
          if (!GEOLogMsgEventMapsEngagementReadAllFrom((uint64_t)v54, (void *)v3))
            goto LABEL_558;
          PBReaderRecallMark();
          v55 = 208;
          break;
        default:
          if ((_DWORD)v36 != 2000)
            goto LABEL_57;
          if ((v8 & 1) == 0)
            goto LABEL_361;
          *(_QWORD *)(a1 + 528) |= 1uLL;
          v51 = *v23;
          v52 = *(_QWORD *)(v3 + v51);
          if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(_QWORD *)(v3 + *v6))
          {
            v53 = *(_QWORD *)(*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BB8]) + v52);
            *(_QWORD *)(v3 + v51) = v52 + 8;
          }
          else
          {
            *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) = 1;
            v53 = 0;
          }
          *(_QWORD *)(a1 + 480) = v53;
          goto LABEL_488;
      }
LABEL_359:
      v56 = *(void **)(a1 + v55);
      *(_QWORD *)(a1 + v55) = v54;

      --v7;
LABEL_360:
      v22 = v62;
      goto LABEL_488;
    }
    if ((_DWORD)v36 == 1)
    {
      if (!v37 || (*(_BYTE *)(a1 + 530) & 0x40) != 0)
      {
LABEL_361:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_559;
        goto LABEL_488;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_559;
      v54 = objc_alloc_init(GEOLogMsgState);
      if (!GEOLogMsgStateReadAllFrom((uint64_t)v54, (void *)v3, v9 & 1))
        goto LABEL_558;
      PBReaderRecallMark();
      -[GEOLogMsgEvent _addNoFlagsLogMsgState:](a1, v54);

      goto LABEL_360;
    }
    if ((_DWORD)v36 == 2)
      break;
    if ((_DWORD)v36 != 3)
    {
LABEL_57:
      if (!PBReaderSkipValueWithTag())
        goto LABEL_559;
      goto LABEL_488;
    }
    if (!v37)
      goto LABEL_361;
    if ((*(_BYTE *)(a1 + 531) & 8) != 0)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_559;
      v57 = *(_QWORD *)(a1 + 528) << 36;
LABEL_487:
      v7 += v57 >> 63;
      goto LABEL_488;
    }
    PBReaderReadString();
    v49 = objc_claimAutoreleasedReturnValue();
    v50 = *(void **)(a1 + 216);
    *(_QWORD *)(a1 + 216) = v49;

    --v7;
LABEL_488:
    v24 = (int *)MEMORY[0x1E0D82BC8];
    v25 = (int *)MEMORY[0x1E0D82BB8];
    if (!v22 && v7 == 0)
      goto LABEL_492;
  }
  if (!v37)
    goto LABEL_361;
  if ((*(_BYTE *)(a1 + 528) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_559;
    v57 = *(_QWORD *)(a1 + 528) << 61;
    goto LABEL_487;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_559;
  v54 = objc_alloc_init(GEOLogMsgEventId);
  if (GEOLogMsgEventIdReadAllFrom((uint64_t)v54, (void *)v3))
  {
    PBReaderRecallMark();
    v55 = 16;
    goto LABEL_359;
  }
LABEL_558:

  v22 = v62;
LABEL_559:
  v3 = 0;
  *(_QWORD *)(a1 + 528) |= 0x7FFFFFFFFFFFFFFCuLL;
  if (v22)
  {
LABEL_556:
    v60 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189899D18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189899E60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989AB04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989AC48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989AD8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989AED0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B018(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B160(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B2A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B3EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B674(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B7BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989B904(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989BA4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989BB94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989BCDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989BE24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989BF6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C0B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C1F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C33C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C47C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C5C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C84C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989C994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989CAD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989CC1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989CD60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989CEA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989CFF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989D134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989D27C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989D3C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989D50C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989D650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989D798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989D8E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989DA24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989DB6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989DCB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989DDFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989DF44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E1D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E5A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E6F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989EAC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989EC08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989ED50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989EE98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989EFE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989F128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989F268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989F3B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A3838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[22];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[2], "readAll:", 1);
  objc_msgSend(a1[61], "readAll:", 1);
  objc_msgSend(a1[48], "readAll:", 1);
  objc_msgSend(a1[55], "readAll:", 1);
  objc_msgSend(a1[37], "readAll:", 1);
  objc_msgSend(a1[32], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[58], "readAll:", 1);
  objc_msgSend(a1[56], "readAll:", 1);
  objc_msgSend(a1[57], "readAll:", 1);
  objc_msgSend(a1[29], "readAll:", 1);
  objc_msgSend(a1[20], "readAll:", 1);
  objc_msgSend(a1[43], "readAll:", 1);
  objc_msgSend(a1[41], "readAll:", 1);
  objc_msgSend(a1[24], "readAll:", 1);
  objc_msgSend(a1[45], "readAll:", 1);
  objc_msgSend(a1[44], "readAll:", 1);
  objc_msgSend(a1[50], "readAll:", 1);
  objc_msgSend(a1[49], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[51], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[42], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[63], "readAll:", 1);
  objc_msgSend(a1[34], "readAll:", 1);
  objc_msgSend(a1[54], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[53], "readAll:", 1);
  objc_msgSend(a1[23], "readAll:", 1);
  objc_msgSend(a1[39], "readAll:", 1);
  objc_msgSend(a1[30], "readAll:", 1);
  objc_msgSend(a1[59], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[25], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[62], "readAll:", 1);
  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[40], "readAll:", 1);
  objc_msgSend(a1[38], "readAll:", 1);
  objc_msgSend(a1[35], "readAll:", 1);
  objc_msgSend(a1[52], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[33], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[47], "readAll:", 1);
  objc_msgSend(a1[36], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[28], "readAll:", 1);
  objc_msgSend(a1[31], "readAll:", 1);
  objc_msgSend(a1[46], "readAll:", 1);
  return objc_msgSend(a1[26], "readAll:", 1);
}

unint64_t GEOLogMsgEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 516))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 520));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 512) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 516) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventReadAllFrom_initialTag;
  Specified = GEOLogMsgEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 520));
  return Specified;
}

void sub_1898A3E7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898A3EDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_284;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_284;
      v18 = v8 >> 3;
      if ((int)(v8 >> 3) > 99)
      {
        switch((int)v18)
        {
          case 100:
            if ((v8 & 7) != 0)
              goto LABEL_285;
            v19 = 0;
            break;
          case 101:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventUserActionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 102:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventStateTimingIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 103:
          case 107:
          case 112:
          case 122:
          case 128:
          case 130:
            goto LABEL_38;
          case 104:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTileSetStateIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 105:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPlaceDataCacheIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 106:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventNetworkIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 108:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDirectionsIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 109:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTransitAppLaunchIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 110:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTimeToLeaveHypothesisIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 111:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventTimeToLeaveInitialTravelTimeIsValid(a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 113:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventMapsWidgetsInteractionSessionIsValid(a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 114:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventListInteractionSessionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 115:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRefineSearchSessionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 116:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventProactiveSuggestionInteractionSessionIsValid(a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 117:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapLaunchIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 118:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRideBookingSessionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 119:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRideBookedSessionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 120:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTableBookingSessionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 121:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTableBookedSessionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 123:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventFullNavTraceIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 124:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTelemetricIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 125:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventClientACSuggestionsIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 126:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventRealtimeTrafficProbeIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 127:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventBatchTrafficProbeIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 129:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventCommuteWindowIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 131:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventWifiConnectionQualityProbeIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 132:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventParkedCarIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 133:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTileCacheAnalyticIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 134:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventGridDurationIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 135:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDisplayAnalyticIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 136:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventThrottleIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 137:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapKitCountsIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 138:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPredExTrainingDataIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 139:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMarcoLiteUsageIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 140:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventTripDepartureFeedbackIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 141:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDirectionsRequestDetailsIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 142:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventEVRoutingVehicleDetailsIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 143:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventEVTripIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 144:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventCuratedCollectionStatsIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 145:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventCuratedCollectionUsageIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 146:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventMapsDeviceSettingsIsValid((unsigned __int8 *)a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 147:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventHardStopIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 148:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventVLFUsageIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 149:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventLogDiscardIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 150:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDailyUseSummaryIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 151:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPressureDataIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 152:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPOIBusynessDataIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 153:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPeriodicSettingsSummaryIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 154:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventThermalPressureIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 155:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventARSessionUsageIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 156:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventNetworkSelectionHarvestIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 157:
            if (v16 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgEventImpressionEventIsValid((unsigned __int8 *)a1))
            {
              goto LABEL_285;
            }
            goto LABEL_279;
          case 158:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventShowcaseSuppressionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 159:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPlaceCacheLookupIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 160:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventDeviceSyncStatusIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 161:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapsInteractionIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 162:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventNetworkEventSummaryIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 163:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventServiceMetadataIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          case 164:
            if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventMapsEngagementIsValid(a1))
              goto LABEL_285;
            goto LABEL_279;
          default:
            if ((_DWORD)v18 != 2000)
              goto LABEL_38;
            if (v16 != 1)
              goto LABEL_285;
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && (v27 = v26 + 8, v27 <= *(_QWORD *)&a1[*v3]))
              *(_QWORD *)&a1[v25] = v27;
            else
              a1[v14] = 1;
            goto LABEL_280;
        }
        while (1)
        {
          v20 = *v2;
          v21 = *(_QWORD *)&a1[v20];
          v22 = v21 + 1;
          if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
            break;
          v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
          *(_QWORD *)&a1[v20] = v22;
          if (v23 < 0 && v19++ <= 8)
            continue;
          goto LABEL_280;
        }
        a1[*v4] = 1;
        goto LABEL_280;
      }
      if ((_DWORD)v18 == 1)
        break;
      if ((_DWORD)v18 == 2)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventIdIsValid(a1))
          goto LABEL_285;
LABEL_279:
        PBReaderRecallMark();
        goto LABEL_280;
      }
      if ((_DWORD)v18 == 3 && v16 != 2)
        goto LABEL_285;
LABEL_38:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_285;
LABEL_280:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_284;
    }
    if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateIsValid(a1))
    {
LABEL_285:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_279;
  }
LABEL_284:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((int)(v8 >> 3) > 600)
      {
        switch((int)v17)
        {
          case 702:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceCardIsValid(a1))
              goto LABEL_270;
            break;
          case 703:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRouteIsValid(a1))
              goto LABEL_270;
            break;
          case 704:
          case 711:
          case 712:
            goto LABEL_56;
          case 705:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsServerIsValid(a1))
              goto LABEL_270;
            break;
          case 706:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTileSetIsValid(a1))
              goto LABEL_270;
            break;
          case 707:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceRequestIsValid(a1))
              goto LABEL_270;
            break;
          case 708:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateNavigationIsValid(a1))
              goto LABEL_270;
            break;
          case 709:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapRestoreIsValid(a1))
              goto LABEL_270;
            break;
          case 710:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSuggestionsIsValid(a1))
              goto LABEL_270;
            break;
          case 713:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateOfflineIsValid(a1))
              goto LABEL_270;
            break;
          case 714:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSummaryLookAroundLogIsValid(a1))
              goto LABEL_270;
            break;
          case 715:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDetailLookAroundLogIsValid(a1))
              goto LABEL_270;
            break;
          case 716:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateLookAroundViewIsValid(a1))
              goto LABEL_270;
            break;
          case 717:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMuninResourceIsValid(a1))
              goto LABEL_270;
            break;
          case 718:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapLaunchIsValid(a1))
              goto LABEL_270;
            break;
          case 719:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateCuratedCollectionIsValid(a1))
              goto LABEL_270;
            break;
          case 720:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUGCPhotoIsValid(a1))
              goto LABEL_270;
            break;
          case 721:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDirectionsDetailIsValid(a1))
              goto LABEL_270;
            break;
          case 722:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMarketIsValid(a1))
              goto LABEL_270;
            break;
          case 723:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRoutingSettingsIsValid(a1))
              goto LABEL_270;
            break;
          case 724:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsFeaturesIsValid(a1))
              goto LABEL_270;
            break;
          case 725:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsUserSettingsIsValid(a1))
              goto LABEL_270;
            break;
          case 726:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPPhotoSubmissionIsValid(a1))
              goto LABEL_270;
            break;
          case 727:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingSubmissionIsValid(a1))
              goto LABEL_270;
            break;
          case 728:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingPhotoSubmissionIsValid(a1))
              goto LABEL_270;
            break;
          case 729:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsPlaceIdsIsValid(a1))
              goto LABEL_270;
            break;
          case 730:
            if (v15 != 2
              || !PBReaderPlaceMark()
              || !GEOLogMsgStatePlaceCardRapIsValid((unsigned __int8 *)a1))
            {
              goto LABEL_270;
            }
            break;
          case 731:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateOfflineDownloadIsValid(a1))
              goto LABEL_270;
            break;
          default:
            if ((_DWORD)v17 == 601)
            {
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUserSessionIsValid(a1))
              {
LABEL_270:
                PBReaderRecallMark();
                return 0;
              }
            }
            else
            {
              if ((_DWORD)v17 != 602)
              {
LABEL_56:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_270;
                continue;
              }
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateExperimentsIsValid(a1))
                goto LABEL_270;
            }
            break;
        }
      }
      else
      {
        if ((int)v17 > 300)
        {
          switch((int)v17)
          {
            case 401:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceBaseIsValid(a1))
                goto LABEL_270;
              goto LABEL_265;
            case 402:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceLocaleIsValid(a1))
                goto LABEL_270;
              goto LABEL_265;
            case 403:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceConnectionIsValid(a1))
                goto LABEL_270;
              goto LABEL_265;
            case 404:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateCarPlayIsValid(a1))
                goto LABEL_270;
              goto LABEL_265;
            case 405:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePairedDeviceIsValid(a1))
                goto LABEL_270;
              goto LABEL_265;
            case 406:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateExtensionIsValid(a1))
                goto LABEL_270;
              goto LABEL_265;
            case 407:
              if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceSettingsIsValid(a1))
                goto LABEL_270;
              goto LABEL_265;
            default:
              switch((int)v17)
              {
                case 501:
                  if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapViewIsValid(a1))
                    goto LABEL_270;
                  goto LABEL_265;
                case 502:
                  if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapViewLocationIsValid(a1))
                    goto LABEL_270;
                  goto LABEL_265;
                case 503:
                  if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTransitIsValid(a1))
                    goto LABEL_270;
                  goto LABEL_265;
                case 504:
                  if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapSettingsIsValid(a1))
                    goto LABEL_270;
                  goto LABEL_265;
                case 505:
                  if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapUIIsValid(a1))
                    goto LABEL_270;
                  goto LABEL_265;
                case 506:
                  if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapUIShownIsValid(a1))
                    goto LABEL_270;
                  goto LABEL_265;
                default:
                  if ((_DWORD)v17 != 301)
                    goto LABEL_56;
                  if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateApplicationIdentifierIsValid(a1))
                    goto LABEL_270;
                  goto LABEL_265;
              }
          }
        }
        switch((int)v17)
        {
          case 1:
            if (v15 == 2)
              goto LABEL_56;
            goto LABEL_270;
          case 2:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUserIsValid(a1))
              goto LABEL_270;
            break;
          case 3:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateAccountIsValid(a1))
              goto LABEL_270;
            break;
          case 4:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRAPIsValid(a1))
              goto LABEL_270;
            break;
          case 5:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceSummaryLayoutIsValid(a1))
              goto LABEL_270;
            break;
          case 6:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTransitStepIsValid(a1))
              goto LABEL_270;
            break;
          case 7:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateNearbyTransitIsValid(a1))
              goto LABEL_270;
            break;
          case 8:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSearchResultsIsValid(a1))
              goto LABEL_270;
            break;
          case 9:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateElementImpressionIsValid(a1))
              goto LABEL_270;
            break;
          case 10:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateImpressionObjectIsValid(a1))
              goto LABEL_270;
            break;
          case 11:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTapEventIsValid(a1))
              goto LABEL_270;
            break;
          case 12:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateActionButtonDetailsIsValid(a1))
              goto LABEL_270;
            break;
          case 13:
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRoutingWaypointsIsValid(a1))
              goto LABEL_270;
            break;
          default:
            if ((_DWORD)v17 == 99)
            {
              if ((v8 & 7) != 0)
                goto LABEL_270;
              v18 = 0;
              while (1)
              {
                v19 = *v2;
                v20 = *(_QWORD *)&a1[v19];
                v21 = v20 + 1;
                if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
                  break;
                v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
                *(_QWORD *)&a1[v19] = v21;
                if (v22 < 0 && v18++ <= 8)
                  continue;
                goto LABEL_266;
              }
              a1[*v4] = 1;
              continue;
            }
            if ((_DWORD)v17 != 201)
              goto LABEL_56;
            if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceIdentifierIsValid(a1))
              goto LABEL_270;
            break;
        }
      }
LABEL_265:
      PBReaderRecallMark();
LABEL_266:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgEventIdIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventUserActionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_57;
          goto LABEL_53;
        case 2u:
          if (v15 == 2)
            goto LABEL_53;
          goto LABEL_57;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_51;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_51;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_54;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventUserActionModuleInfoIsValid(a1))
            goto LABEL_57;
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v28 = 0;
          break;
        case 7u:
          if (v15 == 2)
            goto LABEL_53;
          goto LABEL_57;
        default:
LABEL_53:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_54;
      }
LABEL_51:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventStateTimingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1)
          goto LABEL_34;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOStateTransitionFeedbackIsValid(a1))
        {
LABEL_34:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_34;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOLogMsgEventTileSetStateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 3u:
        case 4u:
          if (v16 != 1)
            goto LABEL_38;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_34;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_34;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_38;
          v21 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_38:
          v27 = 0;
          goto LABEL_37;
      }
      while (1)
      {
        v22 = *v2;
        v23 = *(_QWORD *)&a1[v22];
        v24 = v23 + 1;
        if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
          break;
        v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
        *(_QWORD *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8)
          continue;
        goto LABEL_35;
      }
      v14 = *v4;
LABEL_34:
      a1[v14] = 1;
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
LABEL_37:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgEventPlaceDataCacheIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventNetworkIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  _BOOL8 v97;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 4u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x21u:
        case 0x22u:
        case 0x23u:
        case 0x24u:
        case 0x25u:
        case 0x26u:
        case 0x27u:
        case 0x28u:
        case 0x29u:
        case 0x2Au:
        case 0x2Bu:
        case 0x2Cu:
        case 0x2Du:
        case 0x2Eu:
        case 0x2Fu:
        case 0x30u:
        case 0x31u:
          goto LABEL_154;
        case 5u:
          if (v16 == 2)
            goto LABEL_154;
          goto LABEL_169;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 7u:
          if (v16 == 2)
            goto LABEL_154;
          goto LABEL_169;
        case 8u:
          if (v16 == 2)
            goto LABEL_154;
          goto LABEL_169;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x13u:
        case 0x14u:
          if (v16 != 1)
            goto LABEL_169;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_165;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_165;
          *(_QWORD *)&a1[v18] = v20;
          goto LABEL_166;
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x16u:
          if (v16 == 2)
            goto LABEL_154;
          goto LABEL_169;
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v26 = v67++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v26 = v72++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x19u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v26 = v77++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v82 = 0;
          while (1)
          {
            v83 = *v2;
            v84 = *(_QWORD *)&a1[v83];
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
            *(_QWORD *)&a1[v83] = v85;
            if (v86 < 0)
            {
              v26 = v82++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x32u:
          if (v16 == 2)
            goto LABEL_154;
          goto LABEL_169;
        case 0x33u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v87 = 0;
          while (1)
          {
            v88 = *v2;
            v89 = *(_QWORD *)&a1[v88];
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
              goto LABEL_164;
            v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
            *(_QWORD *)&a1[v88] = v90;
            if (v91 < 0)
            {
              v26 = v87++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
        case 0x34u:
          if (v16 == 2)
            goto LABEL_154;
          goto LABEL_169;
        case 0x35u:
          if (v16 == 2)
            goto LABEL_154;
          goto LABEL_169;
        case 0x36u:
          if ((v8 & 7) != 0)
            goto LABEL_169;
          v92 = 0;
          while (1)
          {
            v93 = *v2;
            v94 = *(_QWORD *)&a1[v93];
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
              break;
            v96 = *(char *)(*(_QWORD *)&a1[*v5] + v94);
            *(_QWORD *)&a1[v93] = v95;
            if (v96 < 0)
            {
              v26 = v92++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_166;
          }
LABEL_164:
          v14 = *v4;
LABEL_165:
          a1[v14] = 1;
          goto LABEL_166;
        default:
          if ((v8 >> 3) == 100)
          {
            if (v16 != 2 || !PBReaderPlaceMark() || !GEONetworkSessionTaskTransactionMetricsIsValid(a1))
            {
LABEL_169:
              PBReaderRecallMark();
              return 0;
            }
            PBReaderRecallMark();
          }
          else
          {
LABEL_154:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_169;
          }
LABEL_166:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_167;
          break;
      }
    }
  }
LABEL_167:
  v97 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v97;
}

BOOL GEOLogMsgEventDirectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  int v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  int v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  int v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  int v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  int v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  int v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  int v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  int v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  int v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  int v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  int v171;
  unsigned int v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  int v176;
  unsigned int v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  int v181;
  _BOOL8 v182;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEODirectionsFeedbackIsValid(a1))
            goto LABEL_178;
          goto LABEL_317;
        case 2u:
        case 0x29u:
        case 0x2Du:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_317;
          goto LABEL_178;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavigationAudioFeedbackIsValid(a1))
            goto LABEL_317;
          goto LABEL_178;
        case 5u:
        case 0x2Au:
          if (v16 != 1)
            goto LABEL_317;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_313;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_313;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
            goto LABEL_317;
          goto LABEL_178;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODurationInNavigationModeIsValid(a1))
            goto LABEL_317;
          goto LABEL_178;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v26 = v67++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_317;
          goto LABEL_178;
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v26 = v72++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v26 = v77++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v82 = 0;
          while (1)
          {
            v83 = *v2;
            v84 = *(_QWORD *)&a1[v83];
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
            *(_QWORD *)&a1[v83] = v85;
            if (v86 < 0)
            {
              v26 = v82++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v87 = 0;
          while (1)
          {
            v88 = *v2;
            v89 = *(_QWORD *)&a1[v88];
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
            *(_QWORD *)&a1[v88] = v90;
            if (v91 < 0)
            {
              v26 = v87++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v92 = 0;
          while (1)
          {
            v93 = *v2;
            v94 = *(_QWORD *)&a1[v93];
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v96 = *(char *)(*(_QWORD *)&a1[*v5] + v94);
            *(_QWORD *)&a1[v93] = v95;
            if (v96 < 0)
            {
              v26 = v92++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v97 = 0;
          while (1)
          {
            v98 = *v2;
            v99 = *(_QWORD *)&a1[v98];
            v100 = v99 + 1;
            if (v99 == -1 || v100 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v101 = *(char *)(*(_QWORD *)&a1[*v5] + v99);
            *(_QWORD *)&a1[v98] = v100;
            if (v101 < 0)
            {
              v26 = v97++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x18u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1))
            goto LABEL_317;
LABEL_178:
          PBReaderRecallMark();
          continue;
        case 0x19u:
          if (v16 == 2)
            goto LABEL_182;
          goto LABEL_317;
        case 0x1Au:
          if (v16 == 2)
            goto LABEL_182;
          goto LABEL_317;
        case 0x1Bu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v102 = 0;
          while (1)
          {
            v103 = *v2;
            v104 = *(_QWORD *)&a1[v103];
            v105 = v104 + 1;
            if (v104 == -1 || v105 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v106 = *(char *)(*(_QWORD *)&a1[*v5] + v104);
            *(_QWORD *)&a1[v103] = v105;
            if (v106 < 0)
            {
              v26 = v102++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v107 = 0;
          while (1)
          {
            v108 = *v2;
            v109 = *(_QWORD *)&a1[v108];
            v110 = v109 + 1;
            if (v109 == -1 || v110 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v111 = *(char *)(*(_QWORD *)&a1[*v5] + v109);
            *(_QWORD *)&a1[v108] = v110;
            if (v111 < 0)
            {
              v26 = v107++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v112 = 0;
          while (1)
          {
            v113 = *v2;
            v114 = *(_QWORD *)&a1[v113];
            v115 = v114 + 1;
            if (v114 == -1 || v115 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v116 = *(char *)(*(_QWORD *)&a1[*v5] + v114);
            *(_QWORD *)&a1[v113] = v115;
            if (v116 < 0)
            {
              v26 = v112++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v117 = 0;
          while (1)
          {
            v118 = *v2;
            v119 = *(_QWORD *)&a1[v118];
            v120 = v119 + 1;
            if (v119 == -1 || v120 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v121 = *(char *)(*(_QWORD *)&a1[*v5] + v119);
            *(_QWORD *)&a1[v118] = v120;
            if (v121 < 0)
            {
              v26 = v117++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v122 = 0;
          while (1)
          {
            v123 = *v2;
            v124 = *(_QWORD *)&a1[v123];
            v125 = v124 + 1;
            if (v124 == -1 || v125 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v126 = *(char *)(*(_QWORD *)&a1[*v5] + v124);
            *(_QWORD *)&a1[v123] = v125;
            if (v126 < 0)
            {
              v26 = v122++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v127 = 0;
          while (1)
          {
            v128 = *v2;
            v129 = *(_QWORD *)&a1[v128];
            v130 = v129 + 1;
            if (v129 == -1 || v130 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v131 = *(char *)(*(_QWORD *)&a1[*v5] + v129);
            *(_QWORD *)&a1[v128] = v130;
            if (v131 < 0)
            {
              v26 = v127++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x21u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v132 = 0;
          while (1)
          {
            v133 = *v2;
            v134 = *(_QWORD *)&a1[v133];
            v135 = v134 + 1;
            if (v134 == -1 || v135 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v136 = *(char *)(*(_QWORD *)&a1[*v5] + v134);
            *(_QWORD *)&a1[v133] = v135;
            if (v136 < 0)
            {
              v26 = v132++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x22u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v137 = 0;
          while (1)
          {
            v138 = *v2;
            v139 = *(_QWORD *)&a1[v138];
            v140 = v139 + 1;
            if (v139 == -1 || v140 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v141 = *(char *)(*(_QWORD *)&a1[*v5] + v139);
            *(_QWORD *)&a1[v138] = v140;
            if (v141 < 0)
            {
              v26 = v137++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x23u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v142 = 0;
          while (1)
          {
            v143 = *v2;
            v144 = *(_QWORD *)&a1[v143];
            v145 = v144 + 1;
            if (v144 == -1 || v145 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v146 = *(char *)(*(_QWORD *)&a1[*v5] + v144);
            *(_QWORD *)&a1[v143] = v145;
            if (v146 < 0)
            {
              v26 = v142++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x24u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v147 = 0;
          while (1)
          {
            v148 = *v2;
            v149 = *(_QWORD *)&a1[v148];
            v150 = v149 + 1;
            if (v149 == -1 || v150 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v151 = *(char *)(*(_QWORD *)&a1[*v5] + v149);
            *(_QWORD *)&a1[v148] = v150;
            if (v151 < 0)
            {
              v26 = v147++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x25u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v152 = 0;
          while (1)
          {
            v153 = *v2;
            v154 = *(_QWORD *)&a1[v153];
            v155 = v154 + 1;
            if (v154 == -1 || v155 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v156 = *(char *)(*(_QWORD *)&a1[*v5] + v154);
            *(_QWORD *)&a1[v153] = v155;
            if (v156 < 0)
            {
              v26 = v152++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x26u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v157 = 0;
          while (1)
          {
            v158 = *v2;
            v159 = *(_QWORD *)&a1[v158];
            v160 = v159 + 1;
            if (v159 == -1 || v160 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v161 = *(char *)(*(_QWORD *)&a1[*v5] + v159);
            *(_QWORD *)&a1[v158] = v160;
            if (v161 < 0)
            {
              v26 = v157++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x27u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v162 = 0;
          while (1)
          {
            v163 = *v2;
            v164 = *(_QWORD *)&a1[v163];
            v165 = v164 + 1;
            if (v164 == -1 || v165 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v166 = *(char *)(*(_QWORD *)&a1[*v5] + v164);
            *(_QWORD *)&a1[v163] = v165;
            if (v166 < 0)
            {
              v26 = v162++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x28u:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v167 = 0;
          while (1)
          {
            v168 = *v2;
            v169 = *(_QWORD *)&a1[v168];
            v170 = v169 + 1;
            if (v169 == -1 || v170 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v171 = *(char *)(*(_QWORD *)&a1[*v5] + v169);
            *(_QWORD *)&a1[v168] = v170;
            if (v171 < 0)
            {
              v26 = v167++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v172 = 0;
          while (1)
          {
            v173 = *v2;
            v174 = *(_QWORD *)&a1[v173];
            v175 = v174 + 1;
            if (v174 == -1 || v175 > *(_QWORD *)&a1[*v3])
              goto LABEL_312;
            v176 = *(char *)(*(_QWORD *)&a1[*v5] + v174);
            *(_QWORD *)&a1[v173] = v175;
            if (v176 < 0)
            {
              v26 = v172++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_314;
          }
        case 0x2Cu:
          if ((v8 & 7) != 0)
            goto LABEL_317;
          v177 = 0;
          break;
        default:
LABEL_182:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_317:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v178 = *v2;
        v179 = *(_QWORD *)&a1[v178];
        v180 = v179 + 1;
        if (v179 == -1 || v180 > *(_QWORD *)&a1[*v3])
          break;
        v181 = *(char *)(*(_QWORD *)&a1[*v5] + v179);
        *(_QWORD *)&a1[v178] = v180;
        if (v181 < 0)
        {
          v26 = v177++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_314;
      }
LABEL_312:
      v14 = *v4;
LABEL_313:
      a1[v14] = 1;
LABEL_314:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v182 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v182;
}

BOOL GEOLogMsgEventTransitAppLaunchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_34;
          goto LABEL_24;
        case 2u:
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_34;
          PBReaderRecallMark();
          goto LABEL_31;
        case 4u:
          if (v16 != 1)
            goto LABEL_34;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v18] = v20;
          else
            a1[v14] = 1;
          goto LABEL_31;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_34:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_32;
          break;
      }
    }
  }
LABEL_32:
  v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOLogMsgEventTimeToLeaveHypothesisIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v37 = 0;
          break;
        case 5u:
        case 6u:
        case 7u:
        case 8u:
          if (v16 != 1)
            goto LABEL_62;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_58;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_58;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_62:
          v42 = 0;
          goto LABEL_61;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v26 = v37++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_59;
      }
LABEL_57:
      v14 = *v4;
LABEL_58:
      a1[v14] = 1;
LABEL_59:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOLogMsgEventTimeToLeaveInitialTravelTimeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgEventMapLaunchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimeToLeaveMapLaunchIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if (v15 != 2)
            goto LABEL_31;
        }
        else if ((_DWORD)v17 == 1 && v15 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_31;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEOLogMsgEventFullNavTraceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventTelemetricIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTelemetricEntityIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventRealtimeTrafficProbeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventBatchTrafficProbeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventCommuteWindowIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  _BOOL8 v47;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1)
            goto LABEL_74;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_70;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_70;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPredictedCommuteDestinationIsValid(a1))
            goto LABEL_74;
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v42 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_74:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v43 = *v2;
        v44 = *(_QWORD *)&a1[v43];
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
          break;
        v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
        *(_QWORD *)&a1[v43] = v45;
        if (v46 < 0)
        {
          v26 = v42++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_71;
      }
LABEL_69:
      v14 = *v4;
LABEL_70:
      a1[v14] = 1;
LABEL_71:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgEventWifiConnectionQualityProbeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOWiFiConnectionQualityIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventParkedCarIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || (_DWORD)v18 == 2)
      {
        if (v16 != 1)
          goto LABEL_35;
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (v21 = v20 + 8, v21 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v19] = v21;
        else
          a1[v14] = 1;
      }
      else if ((_DWORD)v18 == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_35:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_35;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgEventTileCacheAnalyticIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCacheHitIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOCacheMissIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventGridDurationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventGridDurationEndStateErrorInfoIsValid(a1))
            goto LABEL_61;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v33 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOLogMsgEventDisplayAnalyticIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  _BOOL8 v57;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_81;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_83;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_81;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_83;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_81;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_83;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_81;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_83;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_81;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_83;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v44 = 0;
          while (1)
          {
            v45 = *v2;
            v46 = *(_QWORD *)&a1[v45];
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
              goto LABEL_81;
            v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
            *(_QWORD *)&a1[v45] = v47;
            if (v48 < 0)
            {
              v23 = v44++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_83;
          }
        case 7u:
          if (v16 != 1)
            goto LABEL_86;
          v49 = *v2;
          v50 = *(_QWORD *)&a1[v49];
          if (v50 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_82;
          v51 = v50 + 8;
          if (v51 > *(_QWORD *)&a1[*v3])
            goto LABEL_82;
          *(_QWORD *)&a1[v49] = v51;
          continue;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_86;
          v52 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_86:
          v57 = 0;
          goto LABEL_85;
      }
      while (1)
      {
        v53 = *v2;
        v54 = *(_QWORD *)&a1[v53];
        v55 = v54 + 1;
        if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
          break;
        v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
        *(_QWORD *)&a1[v53] = v55;
        if (v56 < 0)
        {
          v23 = v52++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_83;
      }
LABEL_81:
      v14 = *v4;
LABEL_82:
      a1[v14] = 1;
LABEL_83:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v57 = a1[*v4] == 0;
LABEL_85:
  PBReaderRecallMark();
  return v57;
}

BOOL GEOLogMsgEventThrottleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _BOOL8 v57;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_94;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_86;
          }
        case 2u:
          if (v16 == 2)
            goto LABEL_58;
          goto LABEL_94;
        case 3u:
          if (v16 == 2)
            goto LABEL_58;
          goto LABEL_94;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_94;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_86;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_94;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_86;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_94;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_86;
          }
        case 8u:
          if (v16 != 2)
            goto LABEL_94;
LABEL_58:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_94:
          v57 = 0;
          goto LABEL_93;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_94;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_86;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_94;
          v44 = 0;
          while (1)
          {
            v45 = *v2;
            v46 = *(_QWORD *)&a1[v45];
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
              goto LABEL_84;
            v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
            *(_QWORD *)&a1[v45] = v47;
            if (v48 < 0)
            {
              v23 = v44++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_86;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_94;
          v49 = 0;
          break;
        case 0xCu:
          if (v16 != 1)
            goto LABEL_94;
          v54 = *v2;
          v55 = *(_QWORD *)&a1[v54];
          if (v55 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_85;
          v56 = v55 + 8;
          if (v56 > *(_QWORD *)&a1[*v3])
            goto LABEL_85;
          *(_QWORD *)&a1[v54] = v56;
          continue;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_94;
          continue;
      }
      while (1)
      {
        v50 = *v2;
        v51 = *(_QWORD *)&a1[v50];
        v52 = v51 + 1;
        if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
          break;
        v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
        *(_QWORD *)&a1[v50] = v52;
        if (v53 < 0)
        {
          v23 = v49++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_86;
      }
LABEL_84:
      v14 = *v4;
LABEL_85:
      a1[v14] = 1;
LABEL_86:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v57 = a1[*v4] == 0;
LABEL_93:
  PBReaderRecallMark();
  return v57;
}

BOOL GEOLogMsgEventMapKitCountsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapKitCountIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventPredExTrainingDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  int v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  int v111;
  _BOOL8 v112;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0x11u:
          if (v16 != 1)
            goto LABEL_179;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_175;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_175;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v26 = v67++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v26 = v72++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v26 = v77++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x19u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v82 = 0;
          while (1)
          {
            v83 = *v2;
            v84 = *(_QWORD *)&a1[v83];
            v85 = v84 + 1;
            if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
            *(_QWORD *)&a1[v83] = v85;
            if (v86 < 0)
            {
              v26 = v82++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v87 = 0;
          while (1)
          {
            v88 = *v2;
            v89 = *(_QWORD *)&a1[v88];
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v91 = *(char *)(*(_QWORD *)&a1[*v5] + v89);
            *(_QWORD *)&a1[v88] = v90;
            if (v91 < 0)
            {
              v26 = v87++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x1Bu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_179;
          PBReaderRecallMark();
          continue;
        case 0x1Cu:
          if (v16 == 2)
            goto LABEL_140;
          goto LABEL_179;
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v92 = 0;
          while (1)
          {
            v93 = *v2;
            v94 = *(_QWORD *)&a1[v93];
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v96 = *(char *)(*(_QWORD *)&a1[*v5] + v94);
            *(_QWORD *)&a1[v93] = v95;
            if (v96 < 0)
            {
              v26 = v92++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v97 = 0;
          while (1)
          {
            v98 = *v2;
            v99 = *(_QWORD *)&a1[v98];
            v100 = v99 + 1;
            if (v99 == -1 || v100 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v101 = *(char *)(*(_QWORD *)&a1[*v5] + v99);
            *(_QWORD *)&a1[v98] = v100;
            if (v101 < 0)
            {
              v26 = v97++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v102 = 0;
          while (1)
          {
            v103 = *v2;
            v104 = *(_QWORD *)&a1[v103];
            v105 = v104 + 1;
            if (v104 == -1 || v105 > *(_QWORD *)&a1[*v3])
              goto LABEL_174;
            v106 = *(char *)(*(_QWORD *)&a1[*v5] + v104);
            *(_QWORD *)&a1[v103] = v105;
            if (v106 < 0)
            {
              v26 = v102++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_176;
          }
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_179;
          v107 = 0;
          break;
        default:
LABEL_140:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_179:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v108 = *v2;
        v109 = *(_QWORD *)&a1[v108];
        v110 = v109 + 1;
        if (v109 == -1 || v110 > *(_QWORD *)&a1[*v3])
          break;
        v111 = *(char *)(*(_QWORD *)&a1[*v5] + v109);
        *(_QWORD *)&a1[v108] = v110;
        if (v111 < 0)
        {
          v26 = v107++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_176;
      }
LABEL_174:
      v14 = *v4;
LABEL_175:
      a1[v14] = 1;
LABEL_176:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v112 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v112;
}

BOOL GEOLogMsgEventMarcoLiteUsageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_44;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMarcoLiteUsageStateIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v24 = 0;
    while (1)
    {
      v25 = *v2;
      v26 = *(_QWORD *)&a1[v25];
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
        goto LABEL_37;
      v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
      *(_QWORD *)&a1[v25] = v27;
      if (v28 < 0)
      {
        v23 = v24++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_43;
    }
  }
LABEL_44:
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOLogMsgEventTripDepartureFeedbackIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || (_DWORD)v18 == 2)
      {
        if (v16 != 1)
          goto LABEL_40;
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        if (v26 > 0xFFFFFFFFFFFFFFF7)
          goto LABEL_36;
        v27 = v26 + 8;
        if (v27 > *(_QWORD *)&a1[*v3])
          goto LABEL_36;
        *(_QWORD *)&a1[v25] = v27;
      }
      else
      {
        if ((_DWORD)v18 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_40;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            if (v23 < 0 && v19++ <= 8)
              continue;
            goto LABEL_37;
          }
          v14 = *v4;
LABEL_36:
          a1[v14] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_40:
          v28 = 0;
          goto LABEL_39;
        }
      }
LABEL_37:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgEventDirectionsRequestDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgEventEVRoutingVehicleDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_44;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_40;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v23 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_44:
          v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgEventEVTripIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargeLocationDetailsIsValid(a1))
            goto LABEL_78;
          goto LABEL_46;
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOStopAddedDetailsIsValid(a1))
            goto LABEL_46;
          goto LABEL_78;
        case 5u:
          if (v15 == 2)
            goto LABEL_48;
          goto LABEL_78;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_74;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_78;
          v38 = 0;
          break;
        case 9u:
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODodgeballDetailsIsValid(a1))
            goto LABEL_78;
LABEL_46:
          PBReaderRecallMark();
          continue;
        default:
LABEL_48:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_78:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_75;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_75:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOLogMsgEventCuratedCollectionStatsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v13 = v22++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0)
            goto LABEL_43;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              break;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgEventCuratedCollectionUsageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_39;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_49;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v27 = 0;
          break;
        case 3u:
        case 4u:
          if (v16 != 1)
            goto LABEL_52;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_40;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_40;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTouristInfoIsValid(a1))
            goto LABEL_52;
          PBReaderRecallMark();
          continue;
        case 6u:
          if (v16 == 2)
            goto LABEL_48;
          goto LABEL_52;
        case 7u:
          if (v16 == 2)
            goto LABEL_48;
          goto LABEL_52;
        default:
LABEL_48:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_49;
      }
LABEL_39:
      v14 = *v4;
LABEL_40:
      a1[v14] = 1;
LABEL_49:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgEventMapsDeviceSettingsIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOLogMsgEventHardStopIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_49;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_49;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1)
          goto LABEL_51;
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && (v26 = v25 + 8, v26 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v24] = v26;
        else
          a1[v14] = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v18 == 2)
        break;
      if ((_DWORD)v18 != 1)
        goto LABEL_33;
      if (v16 == 2)
      {
        if (!PBReaderPlaceMark())
        {
LABEL_51:
          PBReaderRecallMark();
          return 0;
        }
LABEL_36:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v27 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              break;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v13 = v27++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_36;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 & 7) != 0)
          goto LABEL_51;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0)
          {
            v23 = v16++;
            if (v23 <= 8)
              continue;
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
LABEL_48:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_49;
    }
    if (v16 != 2)
      goto LABEL_51;
LABEL_33:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_51;
    goto LABEL_48;
  }
LABEL_49:
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgEventVLFUsageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFEntryPointIsValid(a1))
            goto LABEL_85;
          goto LABEL_88;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_86;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFLocalizationDetailsIsValid(a1))
            goto LABEL_88;
          goto LABEL_85;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_86;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFCorrectionIsValid(a1))
            goto LABEL_88;
          goto LABEL_85;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_88;
          v28 = 0;
          break;
        case 7u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOVLFPositionContextClassificationIsValid(a1))
          {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFInitializationFailureDetailsIsValid(a1))
            goto LABEL_88;
          goto LABEL_85;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFARStateIsValid(a1))
            goto LABEL_88;
          goto LABEL_85;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFDeviceOrientationIsValid(a1))
            goto LABEL_88;
          goto LABEL_85;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFCrowdsourcingDetailsIsValid(a1))
            goto LABEL_88;
          goto LABEL_85;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFLocationIsValid(a1))
            goto LABEL_88;
          goto LABEL_85;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFARFailureTypesIsValid(a1))
            goto LABEL_88;
LABEL_85:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_88:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_86;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_86:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventLogDiscardIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_38;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
        goto LABEL_37;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2)
          goto LABEL_40;
        goto LABEL_32;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v15 != 2)
      goto LABEL_40;
LABEL_32:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_38:
  v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgEventDailyUseSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODailyUseSummaryUseEventIsValid(a1))
            goto LABEL_50;
          PBReaderRecallMark();
          continue;
        case 2u:
          if (v16 != 1)
            goto LABEL_50;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_44;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_44;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v27 = 0;
          break;
        case 5u:
          if (v16 == 2)
            goto LABEL_46;
          goto LABEL_50;
        default:
LABEL_46:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_47;
      }
LABEL_43:
      v14 = *v4;
LABEL_44:
      a1[v14] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgEventPressureDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventPOIBusynessDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 3u:
        case 4u:
        case 5u:
          if (v16 != 1)
            goto LABEL_37;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v18] = v20;
          else
            a1[v14] = 1;
          goto LABEL_34;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_37;
          goto LABEL_32;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPOIPredictionDataIsValid(a1))
            goto LABEL_37;
LABEL_32:
          PBReaderRecallMark();
          goto LABEL_34;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_37:
            PBReaderRecallMark();
            return 0;
          }
LABEL_34:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_35;
          break;
      }
    }
  }
LABEL_35:
  v21 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v21;
}

BOOL GEOLogMsgEventPeriodicSettingsSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  _BOOL8 v63;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLogMsgStateMapSettingsIsValid(a1))
            goto LABEL_125;
          goto LABEL_129;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapUIShownIsValid(a1))
            goto LABEL_129;
          goto LABEL_125;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_101;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_126;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_129;
          v58 = 0;
          break;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateAccountIsValid(a1))
            goto LABEL_129;
          goto LABEL_125;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceConnectionIsValid(a1))
            goto LABEL_129;
          goto LABEL_125;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsUserSettingsIsValid(a1))
            goto LABEL_129;
          goto LABEL_125;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRoutingSettingsIsValid(a1))
            goto LABEL_129;
          goto LABEL_125;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsFeaturesIsValid(a1))
            goto LABEL_129;
          goto LABEL_125;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceSettingsIsValid(a1))
            goto LABEL_129;
LABEL_125:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_129:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v59 = *v2;
        v60 = *(_QWORD *)&a1[v59];
        v61 = v60 + 1;
        if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
          break;
        v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
        *(_QWORD *)&a1[v59] = v61;
        if (v62 < 0)
        {
          v22 = v58++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_126;
      }
LABEL_101:
      a1[*v4] = 1;
LABEL_126:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEOLogMsgEventThermalPressureIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_60;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_61;
          }
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_76:
              PBReaderRecallMark();
              return 0;
            }
LABEL_64:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v43 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v44 = *v2;
                v45 = *(_QWORD *)&a1[v44];
                v46 = v45 + 1;
                if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
                  break;
                v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
                *(_QWORD *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  v13 = v43++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_64;
              }
              a1[*v4] = 1;
            }
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_76;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_61;
            }
LABEL_60:
            a1[*v4] = 1;
          }
LABEL_61:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_74;
          break;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_60;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_61;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_60;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_61;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_76;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_60;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_61;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_76;
          goto LABEL_61;
      }
    }
  }
LABEL_74:
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOLogMsgEventARSessionUsageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFLocalizationResultsIsValid(a1))
            goto LABEL_57;
          goto LABEL_60;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARElementDetailsIsValid(a1))
            goto LABEL_60;
          goto LABEL_57;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v28 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARSessionThermalPressureIsValid(a1))
            goto LABEL_60;
LABEL_57:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_58;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventNetworkSelectionHarvestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventImpressionEventIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOLogMsgEventShowcaseSuppressionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_48;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_48;
          }
        case 3u:
          if (v15 == 2)
            goto LABEL_47;
          goto LABEL_51;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_51;
          v28 = 0;
          break;
        case 5u:
          if (v15 == 2)
            goto LABEL_47;
          goto LABEL_51;
        default:
LABEL_47:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_51:
          v33 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_48;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_50:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventPlaceCacheLookupIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_58;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_55;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_55;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_55;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v33 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_58:
          v38 = 0;
          goto LABEL_57;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_55;
      }
LABEL_54:
      a1[*v4] = 1;
LABEL_55:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
LABEL_57:
  PBReaderRecallMark();
  return v38;
}

BOOL GEOLogMsgEventDeviceSyncStatusIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEODeviceSyncDataIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventMapsInteractionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgEventNetworkEventSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONetEventDimensionalGroupingIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventServiceMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_41;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2
          || !PBReaderPlaceMark()
          || !GEODirectionsRequestResponseAnalyticsDataIsValid((unsigned __int8 *)a1))
        {
          goto LABEL_43;
        }
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if ((_DWORD)v17 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_41;
    }
    if (v15 != 2
      || !PBReaderPlaceMark()
      || !GEOPDPlacesRequestResponseAnalyticsDataIsValid((unsigned __int8 *)a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgEventMapsEngagementIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_1898AF4B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 520));
  v2 = *(_QWORD *)(a1 + 528);
  if ((v2 & 0x8000000008400004) != 0)
    return 1;
  if ((v2 & 0x1000000000000000) != 0)
  {
    if (GEOLogMsgEventUserActionIsDirty(*(_QWORD *)(a1 + 488)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x81002000000000) != 0)
    return 1;
  if ((v2 & 0x100000000) != 0)
  {
    if (GEOLogMsgEventNetworkIsDirty(*(os_unfair_lock_s **)(a1 + 256)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x800) != 0)
  {
    if ((GEOLogMsgEventDirectionsIsDirty(*(os_unfair_lock_s **)(a1 + 88)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x400000000000000) != 0)
  {
    if (GEOLogMsgEventTransitAppLaunchIsDirty(*(_QWORD *)(a1 + 464)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x300000000000000) != 0)
    return 1;
  if ((v2 & 0x20000000) != 0)
  {
    if (GEOLogMsgEventMapsWidgetsInteractionSessionIsDirty(*(_QWORD *)(a1 + 232)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOLogMsgEventListInteractionSessionIsDirty(*(_QWORD *)(a1 + 160)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x80000000000) != 0)
  {
    if (GEOLogMsgEventRefineSearchSessionIsDirty(*(_QWORD *)(a1 + 344)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x20000000000) != 0)
    return 1;
  if ((v2 & 0x1000000) != 0)
  {
    if (GEOLogMsgEventMapLaunchIsDirty(*(_QWORD *)(a1 + 192)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x200000000000) != 0)
  {
    if (GEOLogMsgEventRideBookingSessionIsDirty(*(os_unfair_lock_s **)(a1 + 360)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x100000000000) != 0)
  {
    if (GEOLogMsgEventRideBookedSessionIsDirty(*(_QWORD *)(a1 + 352)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x4000000000000) != 0)
  {
    if (GEOLogMsgEventTableBookingSessionIsDirty(*(os_unfair_lock_s **)(a1 + 400)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x2000000000000) != 0)
  {
    if (GEOLogMsgEventTableBookedSessionIsDirty(*(_QWORD *)(a1 + 392)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x8000000010000) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOLogMsgEventClientACSuggestionsIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x4000040400000050) != 0)
    return 1;
  if ((v2 & 0x40000000000000) != 0)
  {
    if (GEOLogMsgEventTileCacheAnalyticIsDirty(*(_QWORD *)(a1 + 432)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x22000) != 0)
    return 1;
  if ((v2 & 0x20000000000000) != 0)
  {
    if (GEOLogMsgEventThrottleIsDirty(*(_QWORD *)(a1 + 424)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x800000) != 0)
    return 1;
  if ((v2 & 0x8000000000) != 0)
  {
    if (GEOLogMsgEventPredExTrainingDataIsDirty(*(_QWORD *)(a1 + 312)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x800000040001000) != 0)
    return 1;
  if ((v2 & 0x4000) != 0)
  {
    if (GEOLogMsgEventEVRoutingVehicleDetailsIsDirty(*(_QWORD *)(a1 + 112)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEOLogMsgEventEVTripIsDirty(*(_QWORD *)(a1 + 120)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x80) != 0)
    return 1;
  if ((v2 & 0x100) != 0)
  {
    if (GEOLogMsgEventCuratedCollectionUsageIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x2000000) != 0)
    return 1;
  if ((v2 & 0x40000) != 0)
  {
    if (GEOLogMsgEventHardStopIsDirty(*(_QWORD *)(a1 + 144)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x2000000000000000) != 0)
  {
    if ((GEOLogMsgEventVLFUsageIsDirty(*(os_unfair_lock_s **)(a1 + 496)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEOLogMsgEventLogDiscardIsDirty(*(_QWORD *)(a1 + 168)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOLogMsgEventDailyUseSummaryIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x10000000000) != 0)
    return 1;
  if ((v2 & 0x4000000000) != 0)
  {
    if (GEOLogMsgEventPOIBusynessDataIsDirty(*(_QWORD *)(a1 + 304)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x800000000) != 0)
  {
    if ((GEOLogMsgEventPeriodicSettingsSummaryIsDirty(*(os_unfair_lock_s **)(a1 + 280)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x10000000000000) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if (GEOLogMsgEventARSessionUsageIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x200080000) != 0)
    return 1;
  if ((v2 & 0x800000000000) != 0)
  {
    if (GEOLogMsgEventShowcaseSuppressionIsDirty(*(_QWORD *)(a1 + 376)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x1090000400) != 0)
    return 1;
  if ((v2 & 0x400000000000) != 0)
  {
    if (GEOLogMsgEventServiceMetadataIsDirty(*(_QWORD *)(a1 + 368)))
      return 1;
    v2 = *(_QWORD *)(a1 + 528);
  }
  if ((v2 & 0x4000000) != 0)
    return 1;
  if ((v2 & 0x400000) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 176);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOLogMsgStateIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_115;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_115:

  return v3;
}

os_unfair_lock_s *GEOLogMsgEventIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgEventIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 130);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOLogMsgEventClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int HasSensitiveFields;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unsigned int v16;
  void *v17;
  void *v18;
  id v19;

  -[GEOLogMsgEvent _readLogMsgStates]((uint64_t)a1);
  if (objc_msgSend(a1[22], "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(a1[22], "objectAtIndexedSubscript:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (a3 && GEOLogMsgStateHasSensitiveFields(v7, a2))
      {
        v9 = (void *)objc_msgSend(v8, "copy");
        GEOLogMsgStateClearSensitiveFields(v9, a2, 0);
        objc_msgSend(a1[22], "replaceObjectAtIndex:withObject:", v6, v9);

      }
      else
      {
        objc_msgSend(v8, "clearSensitiveFields:", a2);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(a1[22], "count"));
  }
  if ((a3 & 1) == 0)
  {
    objc_msgSend(a1, "directionsEvent");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "clearSensitiveFields:", a2);

LABEL_17:
    objc_msgSend(a1, "wifiConnectionQualityProbeEvent");
    v19 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "clearSensitiveFields:", a2);
    goto LABEL_18;
  }
  if (objc_msgSend(a1, "hasDirectionsEvent")
    && (objc_msgSend(a1, "directionsEvent"),
        v10 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLogMsgEventDirectionsHasSensitiveFields(v10),
        v10,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "directionsEvent");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v12, "copy");

    GEOLogMsgEventDirectionsClearSensitiveFields(v13, a2, 0);
    objc_msgSend(a1, "setDirectionsEvent:", v13);
  }
  else
  {
    objc_msgSend(a1, "directionsEvent");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasWifiConnectionQualityProbeEvent"))
    goto LABEL_17;
  objc_msgSend(a1, "wifiConnectionQualityProbeEvent");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = GEOLogMsgEventWifiConnectionQualityProbeHasSensitiveFields(v15);

  if (!v16)
    goto LABEL_17;
  objc_msgSend(a1, "wifiConnectionQualityProbeEvent");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (id)objc_msgSend(v17, "copy");

  objc_msgSend(v19, "wifiConnectionQuality");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "clearSensitiveFields:", a2);

  objc_msgSend(a1, "setWifiConnectionQualityProbeEvent:", v19);
LABEL_18:

}

uint64_t GEOLogMsgEventHasSensitiveFields(uint64_t result, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v3 = (void *)result;
    objc_msgSend((id)result, "directionsEvent");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (GEOLogMsgEventDirectionsHasSensitiveFields(v4))
    {

      return 1;
    }
    objc_msgSend(v3, "wifiConnectionQualityProbeEvent");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = GEOLogMsgEventWifiConnectionQualityProbeHasSensitiveFields(v5);

    if ((v6 & 1) != 0)
      return 1;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    objc_msgSend(v3, "logMsgStates", 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v13;
      while (2)
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v13 != v10)
            objc_enumerationMutation(v7);
          if ((GEOLogMsgStateHasSensitiveFields(*(void **)(*((_QWORD *)&v12 + 1) + 8 * v11), a2) & 1) != 0)
          {

            return 1;
          }
          ++v11;
        }
        while (v9 != v11);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
        if (v9)
          continue;
        break;
      }
    }

    return 0;
  }
  return result;
}

uint64_t GEOLogMsgEventDirectionsHasSensitiveFields(void *a1)
{
  void *v2;
  uint64_t HasSensitiveFields;
  void *v4;
  void *v5;

  if (!a1)
    return 0;
  objc_msgSend(a1, "finalLocation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOLocationHasSensitiveFields((uint64_t)v2) & 1) != 0)
  {
    HasSensitiveFields = 1;
  }
  else
  {
    objc_msgSend(a1, "parkingDetectionLocation");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if ((GEOLocationHasSensitiveFields((uint64_t)v4) & 1) != 0)
    {
      HasSensitiveFields = 1;
    }
    else
    {
      objc_msgSend(a1, "arrivalLocation");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5);

    }
  }

  return HasSensitiveFields;
}

void *GEOLogMsgEventWifiConnectionQualityProbeHasSensitiveFields(void *result)
{
  void *v1;
  void *v2;

  if (result)
  {
    objc_msgSend(result, "wifiConnectionQuality");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = GEOWiFiConnectionQualityHasSensitiveFields(v1);

    return v2;
  }
  return result;
}

uint64_t GEOLogMsgStateHasSensitiveFields(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  if (!a1)
    return 0;
  objc_msgSend(a1, "placeRequest");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((GEOLogMsgStatePlaceRequestHasSensitiveFields(v4, a2) & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    objc_msgSend(a1, "lookAroundView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (uint64_t)GEOLogMsgStateLookAroundViewHasSensitiveFields(v6);

  }
  return v5;
}

void GEOLogMsgStateClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  id v15;

  if (!a3)
  {
    objc_msgSend(a1, "placeRequest");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "clearSensitiveFields:", a2);

LABEL_10:
    objc_msgSend(a1, "lookAroundView");
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "clearSensitiveFields:", a2);
    goto LABEL_11;
  }
  if (objc_msgSend(a1, "hasPlaceRequest")
    && (objc_msgSend(a1, "placeRequest"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEOLogMsgStatePlaceRequestHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    objc_msgSend(a1, "placeRequest");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)objc_msgSend(v7, "copy");

    objc_msgSend(v8, "placeDataRequest");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setPlaceRequest:", v8);
  }
  else
  {
    objc_msgSend(a1, "placeRequest");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

  if (!objc_msgSend(a1, "hasLookAroundView"))
    goto LABEL_10;
  objc_msgSend(a1, "lookAroundView");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = GEOLogMsgStateLookAroundViewHasSensitiveFields(v11);

  if (!v12)
    goto LABEL_10;
  objc_msgSend(a1, "lookAroundView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = (id)objc_msgSend(v13, "copy");

  objc_msgSend(v15, "location");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "clearSensitiveFields:", a2);

  objc_msgSend(a1, "setLookAroundView:", v15);
LABEL_11:

}

void GEOLogMsgEventDirectionsClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v6;
  int HasSensitiveFields;
  void *v8;
  _DWORD *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  _DWORD *v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  _DWORD *v19;

  if (a3)
  {
    if (objc_msgSend(a1, "hasFinalLocation")
      && (objc_msgSend(a1, "finalLocation"),
          v6 = (void *)objc_claimAutoreleasedReturnValue(),
          HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6),
          v6,
          HasSensitiveFields))
    {
      objc_msgSend(a1, "finalLocation");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (_DWORD *)objc_msgSend(v8, "copy");

      GEOLocationClearSensitiveFields(v9);
      objc_msgSend(a1, "setFinalLocation:", v9);
    }
    else
    {
      objc_msgSend(a1, "finalLocation");
      v9 = (_DWORD *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasParkingDetectionLocation"))
    {
      objc_msgSend(a1, "parkingDetectionLocation");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = GEOLocationHasSensitiveFields((uint64_t)v11);

      if (v12)
      {
        objc_msgSend(a1, "parkingDetectionLocation");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = (_DWORD *)objc_msgSend(v13, "copy");

        GEOLocationClearSensitiveFields(v14);
        objc_msgSend(a1, "setParkingDetectionLocation:", v14);

        goto LABEL_11;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "finalLocation");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "parkingDetectionLocation");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "clearSensitiveFields:", a2);

  if (!a3)
  {
LABEL_14:
    objc_msgSend(a1, "arrivalLocation");
    v19 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "clearSensitiveFields:", a2);
    goto LABEL_15;
  }
LABEL_11:
  if (!objc_msgSend(a1, "hasArrivalLocation"))
    goto LABEL_14;
  objc_msgSend(a1, "arrivalLocation");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = GEOLocationHasSensitiveFields((uint64_t)v16);

  if (!v17)
    goto LABEL_14;
  objc_msgSend(a1, "arrivalLocation");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (_DWORD *)objc_msgSend(v18, "copy");

  GEOLocationClearSensitiveFields(v19);
  objc_msgSend(a1, "setArrivalLocation:", v19);
LABEL_15:

}

void GEOLogMsgEventWifiConnectionQualityProbeClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  void *v8;
  id v9;

  if (a3
    && objc_msgSend(a1, "hasWifiConnectionQuality")
    && (objc_msgSend(a1, "wifiConnectionQuality"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEOWiFiConnectionQualityHasSensitiveFields(v5),
        v5,
        v6))
  {
    objc_msgSend(a1, "wifiConnectionQuality");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v7, "copy");

    objc_msgSend(v9, "location");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);

    objc_msgSend(a1, "setWifiConnectionQuality:", v9);
  }
  else
  {
    objc_msgSend(a1, "wifiConnectionQuality");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

}

void sub_1898B17A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898B3850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventARSessionUsageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char v15;
  int *v16;
  GEOARElementDetails *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  int v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 64) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        LODWORD(v17) = v10 | v14;
        v66 = (v7 != 0) | v15;
        v67 = (v16 == 0) | v15;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_95;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_95:
      if ((v17 & 1) != 0)
      {
        v60 = 1;
        goto LABEL_106;
      }
      if (v16)
      {
        while (1)
        {
          v61 = *v16++;
          v62 = 32;
          switch(v61)
          {
            case 0:
              goto LABEL_107;
            case 1:
              goto LABEL_101;
            case 2:
              v62 = 8;
              goto LABEL_101;
            case 6:
              v62 = 16;
LABEL_101:
              *(_BYTE *)(a1 + 64) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_107;
    }
    v31 = v23 >> 3;
    v32 = (char)v17;
    if ((v67 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_BYTE *)(a1 + 64) & 0x20) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v65 = (int)v17;
        v17 = objc_alloc_init(GEOVLFLocalizationResults);
        if (!GEOVLFLocalizationResultsReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
          goto LABEL_104;
        PBReaderRecallMark();
        -[GEOLogMsgEventARSessionUsage _addNoFlagsVlfLocalizationResults:](a1, v17);
        goto LABEL_78;
      case 2:
        if (!v32 || (*(_BYTE *)(a1 + 64) & 8) != 0)
          goto LABEL_79;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v65 = (int)v17;
        v17 = objc_alloc_init(GEOARElementDetails);
        if (!GEOARElementDetailsReadAllFrom((uint64_t)v17, (void *)v3))
          goto LABEL_104;
        PBReaderRecallMark();
        -[GEOLogMsgEventARSessionUsage _addNoFlagsArElementDetails:](a1, v17);
        goto LABEL_78;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v41 = *v18;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v28 = v39++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_84:
        v59 = 52;
        goto LABEL_93;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 64) |= 4u;
        while (2)
        {
          v48 = *v18;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v28 = v46++ >= 9;
              if (v28)
              {
                v47 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v47 = 0;
LABEL_88:
        *(_BYTE *)(a1 + 60) = v47 != 0;
        goto LABEL_94;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v52 = 0;
        v53 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v40 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v28 = v53++ >= 9;
              if (v28)
              {
                LODWORD(v40) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v40) = 0;
LABEL_92:
        v59 = 56;
LABEL_93:
        *(_DWORD *)(a1 + v59) = v40;
        goto LABEL_94;
      case 6:
        if (!v32 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
        {
LABEL_79:
          v58 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
LABEL_102:
            v60 = 0;
            goto LABEL_106;
          }
          goto LABEL_94;
        }
        if ((PBReaderPlaceMark() & 1) != 0)
        {
          v65 = (int)v17;
          v17 = objc_alloc_init(GEOARSessionThermalPressure);
          if (!GEOARSessionThermalPressureReadAllFrom((uint64_t)v17, (void *)v3))
          {
LABEL_104:

            v60 = 0;
            LOBYTE(v17) = v65;
            goto LABEL_105;
          }
          PBReaderRecallMark();
          -[GEOLogMsgEventARSessionUsage _addNoFlagsThermalPressure:](a1, v17);
LABEL_78:

          LODWORD(v17) = v65;
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
          if ((v66 & 1) == 0)
            goto LABEL_95;
          continue;
        }
LABEL_103:
        v60 = 0;
LABEL_105:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        *(_BYTE *)(a1 + 64) |= 0x20u;
        *(_BYTE *)(a1 + 64) |= 8u;
        *(_BYTE *)(a1 + 64) |= 0x10u;
        if ((v60 & 1) != 0)
        {
LABEL_107:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v17 & 1) != 0)
            goto LABEL_108;
        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
          {
LABEL_108:
            v63 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_102;
        goto LABEL_94;
    }
  }
}

void sub_1898B428C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898B4718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898B5504(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventARSessionUsageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[2];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[3];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOLogMsgEventARSessionUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventARSessionUsageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventARSessionUsageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventARSessionUsageReadAllFrom_initialTag;
  Specified = GEOLogMsgEventARSessionUsageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventARSessionUsageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1898B58C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventARSessionUsageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventARSessionUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898B5924(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFLocalizationResultsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFCorrectionIsValid(a1))
            goto LABEL_40;
          goto LABEL_46;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          break;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFLocalizationDetailsIsValid(a1))
            goto LABEL_46;
          goto LABEL_40;
        case 4u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOVLFPositionContextClassificationIsValid(a1))
          {
            goto LABEL_46;
          }
LABEL_40:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_41;
      }
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1898B5F74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventARSessionUsageIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 64) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1898B6704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventBatchTrafficProbeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_1898B708C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventBatchTrafficProbeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventBatchTrafficProbeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898B70EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCommuteWindowReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  GEOPredictedCommuteDestination *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  _BOOL8 v54;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 44) |= 1u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            *(_QWORD *)(a1 + 16) = v20;
            goto LABEL_84;
          case 2u:
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 44) |= 2u;
            while (2)
            {
              v24 = *v4;
              v25 = *(_QWORD *)&v3[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
                *(_QWORD *)&v3[v24] = v26;
                v23 |= (unint64_t)(v27 & 0x7F) << v21;
                if (v27 < 0)
                {
                  v21 += 7;
                  v15 = v22++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_66;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_66:
            v53 = 24;
            goto LABEL_83;
          case 3u:
            v28 = 0;
            v29 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 44) |= 0x20u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v23 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_70:
            v53 = 40;
            goto LABEL_83;
          case 4u:
            v34 = 0;
            v35 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 44) |= 4u;
            while (2)
            {
              v36 = *v4;
              v37 = *(_QWORD *)&v3[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
                *(_QWORD *)&v3[v36] = v38;
                v23 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  v15 = v35++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_74;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_74:
            v53 = 28;
            goto LABEL_83;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_90;
            v40 = objc_alloc_init(GEOPredictedCommuteDestination);
            if (!GEOPredictedCommuteDestinationReadAllFrom((uint64_t)v40, v3))
            {

              goto LABEL_90;
            }
            PBReaderRecallMark();
            objc_msgSend((id)a1, "addPredictedDestination:", v40, 0, 0);

LABEL_84:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_88;
            break;
          case 6u:
            v41 = 0;
            v42 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 44) |= 0x10u;
            while (2)
            {
              v43 = *v4;
              v44 = *(_QWORD *)&v3[v43];
              v45 = v44 + 1;
              if (v44 == -1 || v45 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v46 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v44);
                *(_QWORD *)&v3[v43] = v45;
                v23 |= (unint64_t)(v46 & 0x7F) << v41;
                if (v46 < 0)
                {
                  v41 += 7;
                  v15 = v42++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_78;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_78:
            v53 = 36;
            goto LABEL_83;
          case 7u:
            v47 = 0;
            v48 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            while (2)
            {
              v49 = *v4;
              v50 = *(_QWORD *)&v3[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
                *(_QWORD *)&v3[v49] = v51;
                v23 |= (unint64_t)(v52 & 0x7F) << v47;
                if (v52 < 0)
                {
                  v47 += 7;
                  v15 = v48++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_82;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_82:
            v53 = 32;
LABEL_83:
            *(_DWORD *)(a1 + v53) = v23;
            goto LABEL_84;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_90;
            goto LABEL_84;
        }
      }
    }
LABEL_88:
    v54 = v3[*v6] == 0;
  }
  else
  {
LABEL_90:
    v54 = 0;
  }
  objc_sync_exit(v3);

  return v54;
}

void sub_1898B85B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCommuteWindowReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventCommuteWindowReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898B8614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPredictedCommuteDestinationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_46;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        goto LABEL_46;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v18 == 2)
      {
        if (v16 != 1)
          goto LABEL_48;
        v30 = *v2;
        v31 = *(_QWORD *)&a1[v30];
        if (v31 <= 0xFFFFFFFFFFFFFFF7)
        {
          v32 = v31 + 8;
          if (v32 <= *(_QWORD *)&a1[*v3])
          {
            *(_QWORD *)&a1[v30] = v32;
            goto LABEL_43;
          }
        }
        goto LABEL_41;
      }
      if ((_DWORD)v18 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_48;
        v19 = 0;
        while (1)
        {
          v20 = *v2;
          v21 = *(_QWORD *)&a1[v20];
          v22 = v21 + 1;
          if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
            goto LABEL_37;
          v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
          *(_QWORD *)&a1[v20] = v22;
          if (v23 < 0)
          {
            v24 = v19++ > 8;
            if (!v24)
              continue;
          }
          goto LABEL_43;
        }
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_48:
        v33 = 0;
        goto LABEL_47;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_46;
    }
    if ((v8 & 7) != 0)
      goto LABEL_48;
    v25 = 0;
    while (1)
    {
      v26 = *v2;
      v27 = *(_QWORD *)&a1[v26];
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
        break;
      v29 = *(char *)(*(_QWORD *)&a1[*v5] + v27);
      *(_QWORD *)&a1[v26] = v28;
      if (v29 < 0)
      {
        v24 = v25++ > 8;
        if (!v24)
          continue;
      }
      goto LABEL_43;
    }
LABEL_37:
    v14 = *v4;
LABEL_41:
    a1[v14] = 1;
    goto LABEL_43;
  }
LABEL_46:
  v33 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventCuratedCollectionStatsReadAllFrom(uint64_t a1, void *a2)
{
  char *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  _BOOL8 v32;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v2[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v2[*MEMORY[0x1E0D82BD8]])
    {
      v6 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v2[*v5])
          break;
        v7 = 0;
        v8 = 0;
        v9 = 0;
        while (1)
        {
          v10 = *v3;
          v11 = *(_QWORD *)&v2[v10];
          v12 = v11 + 1;
          if (v11 == -1 || v12 > *(_QWORD *)&v2[*v4])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v11);
          *(_QWORD *)&v2[v10] = v12;
          v9 |= (unint64_t)(v13 & 0x7F) << v7;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v7 += 7;
          v14 = v8++ >= 9;
          if (v14)
          {
            v9 = 0;
            v15 = v2[*v5];
            goto LABEL_15;
          }
        }
        v2[*v5] = 1;
LABEL_13:
        v15 = v2[*v5];
        if (v2[*v5])
          v9 = 0;
LABEL_15:
        v16 = v9 & 7;
        if (v15 || v16 == 4)
          break;
        if ((v9 >> 3) == 1)
        {
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_47;
            while (*(_QWORD *)&v2[*v3] < *(_QWORD *)&v2[*v4] && !v2[*v5])
            {
              v18 = 0;
              v19 = 0;
              v20 = 0;
              while (1)
              {
                v21 = *v3;
                v22 = *(_QWORD *)&v2[v21];
                v23 = v22 + 1;
                if (v22 == -1 || v23 > *(_QWORD *)&v2[*v4])
                  break;
                v24 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v22);
                *(_QWORD *)&v2[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  v14 = v19++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_32;
              }
              v2[*v5] = 1;
LABEL_32:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v25 = 0;
            v26 = 0;
            v27 = 0;
            while (1)
            {
              v28 = *v3;
              v29 = *(_QWORD *)&v2[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v2[*v4])
                break;
              v31 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v29);
              *(_QWORD *)&v2[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_44;
            }
            v2[*v5] = 1;
LABEL_44:
            PBRepeatedUInt64Add();
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(_QWORD *)&v2[*v3] < *(_QWORD *)&v2[*v4]);
    }
    v32 = v2[*v5] == 0;
  }
  else
  {
LABEL_47:
    v32 = 0;
  }
  objc_sync_exit(v2);

  return v32;
}

void sub_1898B9AD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCuratedCollectionStatsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventCuratedCollectionStatsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898B9B3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BA0EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventCuratedCollectionUsageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  GEOTouristInfo *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  char v61;
  void *v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 80) >> 6) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 5) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_99;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_99:
      if ((v12 & 1) != 0)
      {
        v59 = 1;
        goto LABEL_107;
      }
      if (v13)
      {
        while (1)
        {
          v60 = *v13++;
          v61 = 64;
          switch(v60)
          {
            case 0:
              goto LABEL_108;
            case 5:
              goto LABEL_105;
            case 6:
              v61 = 16;
              goto LABEL_105;
            case 7:
              v61 = 32;
LABEL_105:
              *(_BYTE *)(a1 + 80) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_108;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_76;
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 80) |= 4u;
        while (1)
        {
          v36 = *v14;
          v37 = *(_QWORD *)(v3 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(v3 + *v6))
            break;
          v39 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v37);
          *(_QWORD *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0)
            goto LABEL_79;
          v33 += 7;
          v24 = v34++ >= 9;
          if (v24)
          {
            v35 = 0;
            goto LABEL_81;
          }
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_79:
        if (*(_BYTE *)(v3 + *v15))
          v35 = 0;
LABEL_81:
        *(_QWORD *)(a1 + 32) = v35;
        goto LABEL_98;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_76;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 80) |= 8u;
        while (2)
        {
          v43 = *v14;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v24 = v41++ >= 9;
              if (v24)
              {
                LODWORD(v42) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v42) = 0;
LABEL_85:
        *(_DWORD *)(a1 + 76) = v42;
        goto LABEL_98;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_76;
        *(_BYTE *)(a1 + 80) |= 1u;
        v47 = *v14;
        v48 = *(_QWORD *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v49 = *(_QWORD *)(*(_QWORD *)(v3 + *v16) + v48);
          *(_QWORD *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v49 = 0;
        }
        v58 = 16;
        goto LABEL_97;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_76;
        *(_BYTE *)(a1 + 80) |= 2u;
        v50 = *v14;
        v51 = *(_QWORD *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v49 = *(_QWORD *)(*(_QWORD *)(v3 + *v16) + v51);
          *(_QWORD *)(v3 + v50) = v51 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v49 = 0;
        }
        v58 = 24;
LABEL_97:
        *(_QWORD *)(a1 + v58) = v49;
        goto LABEL_98;
      case 5:
        if (!v28)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v57 = 2 * *(_BYTE *)(a1 + 80);
LABEL_92:
          v8 += v57 >> 7;
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v52 = objc_alloc_init(GEOTouristInfo);
        if (GEOTouristInfoReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          v53 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v52;

          --v8;
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_98:
          if (!(v12 & 1 | (v8 != 0)))
            goto LABEL_99;
          continue;
        }

        v59 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        *(_BYTE *)(a1 + 80) |= 0x40u;
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        if ((v59 & 1) != 0)
        {
LABEL_108:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_109;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_109:
            v62 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 6:
        if (!v28)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v54 = objc_claimAutoreleasedReturnValue();
          v55 = 40;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v57 = 8 * *(_BYTE *)(a1 + 80);
        goto LABEL_92;
      case 7:
        if (!v28)
        {
LABEL_76:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          goto LABEL_98;
        }
        if ((*(_BYTE *)(a1 + 80) & 0x20) == 0)
        {
          PBReaderReadString();
          v54 = objc_claimAutoreleasedReturnValue();
          v55 = 48;
LABEL_75:
          v56 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v54;

          --v8;
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_106:
          v59 = 0;
          goto LABEL_107;
        }
        v57 = 4 * *(_BYTE *)(a1 + 80);
        goto LABEL_92;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_106;
        goto LABEL_98;
    }
  }
}

void sub_1898BA948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BAA8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BB220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventCuratedCollectionUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventCuratedCollectionUsageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventCuratedCollectionUsageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventCuratedCollectionUsageReadAllFrom_initialTag;
  Specified = GEOLogMsgEventCuratedCollectionUsageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1898BB3C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventCuratedCollectionUsageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventCuratedCollectionUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898BB424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTouristInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1)
          goto LABEL_39;
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && (v26 = v25 + 8, v26 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v24] = v26;
        else
          a1[v14] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_39;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

void sub_1898BB870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCuratedCollectionUsageIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(unsigned __int8 *)(a1 + 80) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1898BBCA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BC2EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventDailyUseSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  int *v15;
  int *v16;
  BOOL v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  GEODailyUseSummaryUseEvent *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  int v57;
  int v58;
  char v59;
  void *v60;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  if (v12)
    v17 = 1;
  else
    v17 = v14 == 0;
  v62 = v17;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_89;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v15;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_89:
      if (v13)
      {
        v56 = 1;
        goto LABEL_100;
      }
      if (!v14)
      {
LABEL_101:
        v3 = *(_BYTE *)(v3 + *v16) == 0;
        if (!v13)
          return v3;
LABEL_102:
        v60 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        v58 = *v14++;
        v57 = v58;
        if (v58 == 1)
          break;
        if (v57 == 5)
        {
          v59 = 8;
LABEL_98:
          *(_BYTE *)(a1 + 64) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_101;
        }
      }
      v59 = 16;
      goto LABEL_98;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v62)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
          goto LABEL_71;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v35 = objc_alloc_init(GEODailyUseSummaryUseEvent);
        if (GEODailyUseSummaryUseEventReadAllFrom((uint64_t)v35, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventDailyUseSummary _addNoFlagsUseEvents:](a1, v35);

          v16 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_72;
        }

        v56 = 0;
        v16 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_100;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_71;
        *(_BYTE *)(a1 + 64) |= 1u;
        v36 = *v15;
        v37 = *(_QWORD *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v38 = *(_QWORD *)(*(_QWORD *)(v3 + *v18) + v37);
          *(_QWORD *)(v3 + v36) = v37 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v16) = 1;
          v38 = 0;
        }
        *(_QWORD *)(a1 + 16) = v38;
        goto LABEL_72;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_71;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v42 = *v15;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                v41 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v41 = 0;
LABEL_80:
        *(_QWORD *)(a1 + 24) = v41;
        goto LABEL_72;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_71;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_BYTE *)(a1 + 64) |= 4u;
        while (2)
        {
          v49 = *v15;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v26 = v47++ >= 9;
              if (v26)
              {
                LODWORD(v48) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v48) = 0;
LABEL_84:
        *(_DWORD *)(a1 + 60) = v48;
        goto LABEL_72;
      case 5:
        if (!v30)
        {
LABEL_71:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_99;
LABEL_72:
          if (v8)
            v55 = 1;
          else
            v55 = v13;
          if ((v55 & 1) == 0)
            goto LABEL_89;
          continue;
        }
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v53 = objc_claimAutoreleasedReturnValue();
          v54 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v53;

          --v8;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v8 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
          goto LABEL_72;
        }
LABEL_99:
        v56 = 0;
LABEL_100:
        *(_BYTE *)(a1 + 64) |= 0x10u;
        *(_BYTE *)(a1 + 64) |= 8u;
        if ((v56 & 1) != 0)
          goto LABEL_101;
        v3 = 0;
        if (v13)
          goto LABEL_102;
        return v3;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_99;
        goto LABEL_72;
    }
  }
}

void sub_1898BCE9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BD760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventDailyUseSummaryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 40);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLogMsgEventDailyUseSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventDailyUseSummaryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventDailyUseSummaryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventDailyUseSummaryReadAllFrom_initialTag;
  Specified = GEOLogMsgEventDailyUseSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventDailyUseSummaryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1898BD9EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventDailyUseSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventDailyUseSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898BDA4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BDCE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDailyUseSummaryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1898BE18C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDeviceSyncStatusReadAllFrom(void *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEODeviceSyncData *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEODeviceSyncData);
          if (!GEODeviceSyncDataReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addSyncData:", v18, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_1898BECF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDeviceSyncStatusReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventDeviceSyncStatusReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898BED50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BF39C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgEventDirectionsReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64x2_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  int v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  unsigned int v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  char v155;
  unsigned int v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  char v181;
  unsigned int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  char v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  char v195;
  unsigned int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  char v201;
  char v202;
  unsigned int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  char v208;
  char v209;
  unsigned int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  char v216;
  unsigned int v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  char v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  char v229;
  char v230;
  unsigned int v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  char v236;
  char v237;
  unsigned int v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  char v243;
  char v244;
  unsigned int v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  char v250;
  uint64_t v251;
  unint64_t v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  char v258;
  char v259;
  unsigned int v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  char v264;
  char v265;
  BOOL v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  char v271;
  char v272;
  char v273;
  char v274;
  char v275;
  uint64_t v276;
  int v277;
  int v278;
  uint64_t v279;
  void *v280;
  GEODirectionsFeedback *v282;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 172);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 168));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_QWORD *)(a1 + 240);
  v12 = (uint64x2_t)vdupq_n_s64(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAC10), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAC00)), v13), (int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFABF0), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFABE0)), v13)))+ ((v11 >> 36) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v10 | (v14 > 6);
        if (v10 & 1 | (v14 > 6) | v8 & 1)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_509;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_509:
      if ((v17 & 1) != 0)
      {
        *(_QWORD *)(a1 + 240) |= 0x1FF000000000uLL;
      }
      else if (v18)
      {
        while (2)
        {
          while (1)
          {
            v278 = *v18++;
            v277 = v278;
            if (v278 <= 16)
              break;
            switch(v277)
            {
              case 17:
                v279 = 0x80000000000;
                break;
              case 18:
              case 19:
              case 20:
              case 21:
              case 22:
              case 23:
                continue;
              case 24:
                v279 = 0x100000000000;
                break;
              case 25:
                v279 = 0x10000000000;
                break;
              case 26:
                v279 = 0x8000000000;
                break;
              default:
                if (v277 == 41)
                {
                  v279 = 0x40000000000;
                }
                else
                {
                  if (v277 != 45)
                    continue;
                  v279 = 0x1000000000;
                }
                break;
            }
LABEL_525:
            *(_QWORD *)(a1 + 240) |= v279;
          }
          v279 = 0x2000000000;
          switch(v277)
          {
            case 0:
              break;
            case 1:
              goto LABEL_525;
            case 2:
              v279 = 0x20000000000;
              goto LABEL_525;
            case 7:
              v279 = 0x4000000000;
              goto LABEL_525;
            default:
              continue;
          }
          break;
        }
      }
      v3 = *(_BYTE *)(v3 + *v20) == 0;
      if ((v17 & 1) == 0)
        return v3;
LABEL_527:
      v280 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

      return v3;
    }
    v32 = v24 >> 3;
    v33 = v17;
    if (!((v18 == 0) | v17 & 1))
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(_BYTE *)(a1 + 244) & 0x20) != 0)
          goto LABEL_358;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_530;
        v282 = objc_alloc_init(GEODirectionsFeedback);
        if (!GEODirectionsFeedbackReadAllFrom((uint64_t)v282, (void *)v3, v9 & 1))
          goto LABEL_529;
        PBReaderRecallMark();
        -[GEOLogMsgEventDirections _addNoFlagsDirectionsFeedback:](a1, v282);
        goto LABEL_205;
      case 2:
        if (!v33)
          goto LABEL_358;
        if ((*(_BYTE *)(a1 + 245) & 2) != 0)
        {
          v269 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v269 & 1) == 0)
            goto LABEL_530;
          v270 = *(_QWORD *)(a1 + 240) << 22;
          goto LABEL_502;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_530;
        v282 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v282, (void *)v3, v9 & 1))
          goto LABEL_529;
        PBReaderRecallMark();
        v39 = 128;
        goto LABEL_355;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_QWORD *)(a1 + 240) |= 0x20000uLL;
        while (2)
        {
          v43 = *v19;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v29 = v41++ >= 9;
              if (v29)
              {
                v42 = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v42 = 0;
LABEL_363:
        v266 = v42 != 0;
        v267 = 220;
        goto LABEL_480;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        if (!PBReaderPlaceMark() || (GEONavigationAudioFeedbackReadAllFrom(a1 + 16, v3) & 1) == 0)
          goto LABEL_530;
        PBReaderRecallMark();
        v47 = *(_QWORD *)(a1 + 240) | 1;
        goto LABEL_69;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        *(_QWORD *)(a1 + 240) |= 4uLL;
        v48 = *v19;
        v49 = *(_QWORD *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v50 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v49);
          *(_QWORD *)(v3 + v48) = v49 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v50 = 0;
        }
        v276 = 104;
        goto LABEL_507;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((_QWORD *)(a1 + 64), v3) & 1) == 0)
          goto LABEL_530;
        PBReaderRecallMark();
        v47 = *(_QWORD *)(a1 + 240) | 2;
LABEL_69:
        *(_QWORD *)(a1 + 240) = v47;
        goto LABEL_357;
      case 7:
        if (!v33 || (*(_BYTE *)(a1 + 244) & 0x40) != 0)
          goto LABEL_358;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_530;
        v282 = objc_alloc_init(GEODurationInNavigationMode);
        if (!GEODurationInNavigationModeReadAllFrom((uint64_t)v282, (void *)v3))
          goto LABEL_529;
        PBReaderRecallMark();
        -[GEOLogMsgEventDirections _addNoFlagsDurationInNavigationMode:](a1, v282);
        goto LABEL_205;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x80uLL;
        while (2)
        {
          v54 = *v19;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v29 = v52++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_367:
        v268 = 192;
        goto LABEL_489;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_QWORD *)(a1 + 240) |= 0x800000000uLL;
        while (2)
        {
          v61 = *v19;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v29 = v59++ >= 9;
              if (v29)
              {
                v60 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v60 = 0;
LABEL_371:
        v266 = v60 != 0;
        v267 = 238;
        goto LABEL_480;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_QWORD *)(a1 + 240) |= 0x400000uLL;
        while (2)
        {
          v68 = *v19;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v29 = v66++ >= 9;
              if (v29)
              {
                v67 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v67 = 0;
LABEL_375:
        v266 = v67 != 0;
        v267 = 225;
        goto LABEL_480;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v72 = 0;
        v73 = 0;
        v74 = 0;
        *(_QWORD *)(a1 + 240) |= 0x200000uLL;
        while (2)
        {
          v75 = *v19;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v29 = v73++ >= 9;
              if (v29)
              {
                v74 = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v74 = 0;
LABEL_379:
        v266 = v74 != 0;
        v267 = 224;
        goto LABEL_480;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_QWORD *)(a1 + 240) |= 0x400000000uLL;
        while (2)
        {
          v82 = *v19;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v29 = v80++ >= 9;
              if (v29)
              {
                v81 = 0;
                goto LABEL_383;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v81 = 0;
LABEL_383:
        v266 = v81 != 0;
        v267 = 237;
        goto LABEL_480;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_QWORD *)(a1 + 240) |= 0x4000uLL;
        while (2)
        {
          v89 = *v19;
          v90 = *(_QWORD *)(v3 + v89);
          v91 = v90 + 1;
          if (v90 == -1 || v91 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v90);
            *(_QWORD *)(v3 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              v29 = v87++ >= 9;
              if (v29)
              {
                v88 = 0;
                goto LABEL_387;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v88 = 0;
LABEL_387:
        v266 = v88 != 0;
        v267 = 217;
        goto LABEL_480;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v93 = 0;
        v94 = 0;
        v95 = 0;
        *(_QWORD *)(a1 + 240) |= 0x40000uLL;
        while (2)
        {
          v96 = *v19;
          v97 = *(_QWORD *)(v3 + v96);
          v98 = v97 + 1;
          if (v97 == -1 || v98 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v97);
            *(_QWORD *)(v3 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if (v99 < 0)
            {
              v93 += 7;
              v29 = v94++ >= 9;
              if (v29)
              {
                v95 = 0;
                goto LABEL_391;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v95 = 0;
LABEL_391:
        v266 = v95 != 0;
        v267 = 221;
        goto LABEL_480;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v100 = 0;
        v101 = 0;
        v102 = 0;
        *(_QWORD *)(a1 + 240) |= 0x80000uLL;
        while (2)
        {
          v103 = *v19;
          v104 = *(_QWORD *)(v3 + v103);
          v105 = v104 + 1;
          if (v104 == -1 || v105 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v104);
            *(_QWORD *)(v3 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              v29 = v101++ >= 9;
              if (v29)
              {
                v102 = 0;
                goto LABEL_395;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v102 = 0;
LABEL_395:
        v266 = v102 != 0;
        v267 = 222;
        goto LABEL_480;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v107 = 0;
        v108 = 0;
        v109 = 0;
        *(_QWORD *)(a1 + 240) |= 0x8000000uLL;
        while (2)
        {
          v110 = *v19;
          v111 = *(_QWORD *)(v3 + v110);
          v112 = v111 + 1;
          if (v111 == -1 || v112 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v111);
            *(_QWORD *)(v3 + v110) = v112;
            v109 |= (unint64_t)(v113 & 0x7F) << v107;
            if (v113 < 0)
            {
              v107 += 7;
              v29 = v108++ >= 9;
              if (v29)
              {
                v109 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v109 = 0;
LABEL_399:
        v266 = v109 != 0;
        v267 = 230;
        goto LABEL_480;
      case 17:
        if (!v33)
          goto LABEL_358;
        if ((*(_BYTE *)(a1 + 245) & 8) != 0)
        {
          v271 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v271 & 1) == 0)
            goto LABEL_530;
          v270 = *(_QWORD *)(a1 + 240) << 20;
          goto LABEL_502;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_530;
        v282 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v282, (void *)v3))
          goto LABEL_529;
        PBReaderRecallMark();
        v39 = 152;
        goto LABEL_355;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v114 = 0;
        v115 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 240) |= 0x100000uLL;
        while (2)
        {
          v117 = *v19;
          v118 = *(_QWORD *)(v3 + v117);
          v119 = v118 + 1;
          if (v118 == -1 || v119 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v118);
            *(_QWORD *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              v29 = v115++ >= 9;
              if (v29)
              {
                v116 = 0;
                goto LABEL_403;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v116 = 0;
LABEL_403:
        v266 = v116 != 0;
        v267 = 223;
        goto LABEL_480;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v121 = 0;
        v122 = 0;
        v123 = 0;
        *(_QWORD *)(a1 + 240) |= 0x1000000uLL;
        while (2)
        {
          v124 = *v19;
          v125 = *(_QWORD *)(v3 + v124);
          v126 = v125 + 1;
          if (v125 == -1 || v126 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v125);
            *(_QWORD *)(v3 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              v29 = v122++ >= 9;
              if (v29)
              {
                v123 = 0;
                goto LABEL_407;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v123 = 0;
LABEL_407:
        v266 = v123 != 0;
        v267 = 227;
        goto LABEL_480;
      case 20:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v128 = 0;
        v129 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x400uLL;
        while (2)
        {
          v130 = *v19;
          v131 = *(_QWORD *)(v3 + v130);
          v132 = v131 + 1;
          if (v131 == -1 || v132 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v133 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v131);
            *(_QWORD *)(v3 + v130) = v132;
            v53 |= (unint64_t)(v133 & 0x7F) << v128;
            if (v133 < 0)
            {
              v128 += 7;
              v29 = v129++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_411;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_411:
        v268 = 204;
        goto LABEL_489;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v134 = 0;
        v135 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x200uLL;
        while (2)
        {
          v136 = *v19;
          v137 = *(_QWORD *)(v3 + v136);
          v138 = v137 + 1;
          if (v137 == -1 || v138 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v139 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v137);
            *(_QWORD *)(v3 + v136) = v138;
            v53 |= (unint64_t)(v139 & 0x7F) << v134;
            if (v139 < 0)
            {
              v134 += 7;
              v29 = v135++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_415;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_415:
        v268 = 200;
        goto LABEL_489;
      case 22:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v140 = 0;
        v141 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x100uLL;
        while (2)
        {
          v142 = *v19;
          v143 = *(_QWORD *)(v3 + v142);
          v144 = v143 + 1;
          if (v143 == -1 || v144 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v145 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v143);
            *(_QWORD *)(v3 + v142) = v144;
            v53 |= (unint64_t)(v145 & 0x7F) << v140;
            if (v145 < 0)
            {
              v140 += 7;
              v29 = v141++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_419;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_419:
        v268 = 196;
        goto LABEL_489;
      case 23:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v146 = 0;
        v147 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x800uLL;
        while (2)
        {
          v148 = *v19;
          v149 = *(_QWORD *)(v3 + v148);
          v150 = v149 + 1;
          if (v149 == -1 || v150 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v151 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v149);
            *(_QWORD *)(v3 + v148) = v150;
            v53 |= (unint64_t)(v151 & 0x7F) << v146;
            if (v151 < 0)
            {
              v146 += 7;
              v29 = v147++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_423;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_423:
        v268 = 208;
        goto LABEL_489;
      case 24:
        if (!v33 || (*(_BYTE *)(a1 + 245) & 0x10) != 0)
          goto LABEL_358;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_530;
        v282 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v282, (void *)v3, v9 & 1))
          goto LABEL_529;
        PBReaderRecallMark();
        -[GEOLogMsgEventDirections _addNoFlagsWaypoints:](a1, v282);
LABEL_205:

        goto LABEL_357;
      case 25:
        if (!v33)
          goto LABEL_358;
        if ((*(_BYTE *)(a1 + 245) & 1) == 0)
        {
          PBReaderReadString();
          v152 = objc_claimAutoreleasedReturnValue();
          v153 = 120;
          goto LABEL_212;
        }
        v272 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v272 & 1) == 0)
          goto LABEL_530;
        v270 = *(_QWORD *)(a1 + 240) << 23;
        goto LABEL_502;
      case 26:
        if (!v33)
          goto LABEL_358;
        if ((*(_BYTE *)(a1 + 244) & 0x80) == 0)
        {
          PBReaderReadString();
          v152 = objc_claimAutoreleasedReturnValue();
          v153 = 112;
LABEL_212:
          v154 = *(void **)(a1 + v153);
          *(_QWORD *)(a1 + v153) = v152;
          goto LABEL_356;
        }
        v273 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v273 & 1) == 0)
          goto LABEL_530;
        v270 = *(_QWORD *)(a1 + 240) << 24;
        goto LABEL_502;
      case 27:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v155 = 0;
        v156 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x10uLL;
        while (2)
        {
          v157 = *v19;
          v158 = *(_QWORD *)(v3 + v157);
          v159 = v158 + 1;
          if (v158 == -1 || v159 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v160 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v158);
            *(_QWORD *)(v3 + v157) = v159;
            v53 |= (unint64_t)(v160 & 0x7F) << v155;
            if (v160 < 0)
            {
              v155 += 7;
              v29 = v156++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_427;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_427:
        v268 = 180;
        goto LABEL_489;
      case 28:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v161 = 0;
        v162 = 0;
        v163 = 0;
        *(_QWORD *)(a1 + 240) |= 0x10000uLL;
        while (2)
        {
          v164 = *v19;
          v165 = *(_QWORD *)(v3 + v164);
          v166 = v165 + 1;
          if (v165 == -1 || v166 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v167 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v165);
            *(_QWORD *)(v3 + v164) = v166;
            v163 |= (unint64_t)(v167 & 0x7F) << v161;
            if (v167 < 0)
            {
              v161 += 7;
              v29 = v162++ >= 9;
              if (v29)
              {
                v163 = 0;
                goto LABEL_431;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v163 = 0;
LABEL_431:
        v266 = v163 != 0;
        v267 = 219;
        goto LABEL_480;
      case 29:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v168 = 0;
        v169 = 0;
        v170 = 0;
        *(_QWORD *)(a1 + 240) |= 0x8000uLL;
        while (2)
        {
          v171 = *v19;
          v172 = *(_QWORD *)(v3 + v171);
          v173 = v172 + 1;
          if (v172 == -1 || v173 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v174 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v172);
            *(_QWORD *)(v3 + v171) = v173;
            v170 |= (unint64_t)(v174 & 0x7F) << v168;
            if (v174 < 0)
            {
              v168 += 7;
              v29 = v169++ >= 9;
              if (v29)
              {
                v170 = 0;
                goto LABEL_435;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v170 = 0;
LABEL_435:
        v266 = v170 != 0;
        v267 = 218;
        goto LABEL_480;
      case 30:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v175 = 0;
        v176 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x1000uLL;
        while (2)
        {
          v177 = *v19;
          v178 = *(_QWORD *)(v3 + v177);
          v179 = v178 + 1;
          if (v178 == -1 || v179 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v180 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v178);
            *(_QWORD *)(v3 + v177) = v179;
            v53 |= (unint64_t)(v180 & 0x7F) << v175;
            if (v180 < 0)
            {
              v175 += 7;
              v29 = v176++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_439;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_439:
        v268 = 212;
        goto LABEL_489;
      case 31:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v181 = 0;
        v182 = 0;
        v183 = 0;
        *(_QWORD *)(a1 + 240) |= 0x2000uLL;
        while (2)
        {
          v184 = *v19;
          v185 = *(_QWORD *)(v3 + v184);
          v186 = v185 + 1;
          if (v185 == -1 || v186 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v187 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v185);
            *(_QWORD *)(v3 + v184) = v186;
            v183 |= (unint64_t)(v187 & 0x7F) << v181;
            if (v187 < 0)
            {
              v181 += 7;
              v29 = v182++ >= 9;
              if (v29)
              {
                v183 = 0;
                goto LABEL_443;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v183 = 0;
LABEL_443:
        v266 = v183 != 0;
        v267 = 216;
        goto LABEL_480;
      case 32:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v188 = 0;
        v189 = 0;
        v190 = 0;
        *(_QWORD *)(a1 + 240) |= 0x2000000uLL;
        while (2)
        {
          v191 = *v19;
          v192 = *(_QWORD *)(v3 + v191);
          v193 = v192 + 1;
          if (v192 == -1 || v193 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v194 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v192);
            *(_QWORD *)(v3 + v191) = v193;
            v190 |= (unint64_t)(v194 & 0x7F) << v188;
            if (v194 < 0)
            {
              v188 += 7;
              v29 = v189++ >= 9;
              if (v29)
              {
                v190 = 0;
                goto LABEL_447;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v190 = 0;
LABEL_447:
        v266 = v190 != 0;
        v267 = 228;
        goto LABEL_480;
      case 33:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v195 = 0;
        v196 = 0;
        v197 = 0;
        *(_QWORD *)(a1 + 240) |= 0x20000000uLL;
        while (2)
        {
          v198 = *v19;
          v199 = *(_QWORD *)(v3 + v198);
          v200 = v199 + 1;
          if (v199 == -1 || v200 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v201 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v199);
            *(_QWORD *)(v3 + v198) = v200;
            v197 |= (unint64_t)(v201 & 0x7F) << v195;
            if (v201 < 0)
            {
              v195 += 7;
              v29 = v196++ >= 9;
              if (v29)
              {
                v197 = 0;
                goto LABEL_451;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v197 = 0;
LABEL_451:
        v266 = v197 != 0;
        v267 = 232;
        goto LABEL_480;
      case 34:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v202 = 0;
        v203 = 0;
        v204 = 0;
        *(_QWORD *)(a1 + 240) |= 0x80000000uLL;
        while (2)
        {
          v205 = *v19;
          v206 = *(_QWORD *)(v3 + v205);
          v207 = v206 + 1;
          if (v206 == -1 || v207 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v208 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v206);
            *(_QWORD *)(v3 + v205) = v207;
            v204 |= (unint64_t)(v208 & 0x7F) << v202;
            if (v208 < 0)
            {
              v202 += 7;
              v29 = v203++ >= 9;
              if (v29)
              {
                v204 = 0;
                goto LABEL_455;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v204 = 0;
LABEL_455:
        v266 = v204 != 0;
        v267 = 234;
        goto LABEL_480;
      case 35:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v209 = 0;
        v210 = 0;
        v211 = 0;
        *(_QWORD *)(a1 + 240) |= 0x10000000uLL;
        while (2)
        {
          v212 = *v19;
          v213 = *(_QWORD *)(v3 + v212);
          v214 = v213 + 1;
          if (v213 == -1 || v214 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v215 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v213);
            *(_QWORD *)(v3 + v212) = v214;
            v211 |= (unint64_t)(v215 & 0x7F) << v209;
            if (v215 < 0)
            {
              v209 += 7;
              v29 = v210++ >= 9;
              if (v29)
              {
                v211 = 0;
                goto LABEL_459;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v211 = 0;
LABEL_459:
        v266 = v211 != 0;
        v267 = 231;
        goto LABEL_480;
      case 36:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v216 = 0;
        v217 = 0;
        v218 = 0;
        *(_QWORD *)(a1 + 240) |= 0x40000000uLL;
        while (2)
        {
          v219 = *v19;
          v220 = *(_QWORD *)(v3 + v219);
          v221 = v220 + 1;
          if (v220 == -1 || v221 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v222 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v220);
            *(_QWORD *)(v3 + v219) = v221;
            v218 |= (unint64_t)(v222 & 0x7F) << v216;
            if (v222 < 0)
            {
              v216 += 7;
              v29 = v217++ >= 9;
              if (v29)
              {
                v218 = 0;
                goto LABEL_463;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v218 = 0;
LABEL_463:
        v266 = v218 != 0;
        v267 = 233;
        goto LABEL_480;
      case 37:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v223 = 0;
        v224 = 0;
        v225 = 0;
        *(_QWORD *)(a1 + 240) |= 0x800000uLL;
        while (2)
        {
          v226 = *v19;
          v227 = *(_QWORD *)(v3 + v226);
          v228 = v227 + 1;
          if (v227 == -1 || v228 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v229 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v227);
            *(_QWORD *)(v3 + v226) = v228;
            v225 |= (unint64_t)(v229 & 0x7F) << v223;
            if (v229 < 0)
            {
              v223 += 7;
              v29 = v224++ >= 9;
              if (v29)
              {
                v225 = 0;
                goto LABEL_467;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v225 = 0;
LABEL_467:
        v266 = v225 != 0;
        v267 = 226;
        goto LABEL_480;
      case 38:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v230 = 0;
        v231 = 0;
        v232 = 0;
        *(_QWORD *)(a1 + 240) |= 0x4000000uLL;
        while (2)
        {
          v233 = *v19;
          v234 = *(_QWORD *)(v3 + v233);
          v235 = v234 + 1;
          if (v234 == -1 || v235 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v236 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v234);
            *(_QWORD *)(v3 + v233) = v235;
            v232 |= (unint64_t)(v236 & 0x7F) << v230;
            if (v236 < 0)
            {
              v230 += 7;
              v29 = v231++ >= 9;
              if (v29)
              {
                v232 = 0;
                goto LABEL_471;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v232 = 0;
LABEL_471:
        v266 = v232 != 0;
        v267 = 229;
        goto LABEL_480;
      case 39:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v237 = 0;
        v238 = 0;
        v239 = 0;
        *(_QWORD *)(a1 + 240) |= 0x200000000uLL;
        while (2)
        {
          v240 = *v19;
          v241 = *(_QWORD *)(v3 + v240);
          v242 = v241 + 1;
          if (v241 == -1 || v242 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v243 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v241);
            *(_QWORD *)(v3 + v240) = v242;
            v239 |= (unint64_t)(v243 & 0x7F) << v237;
            if (v243 < 0)
            {
              v237 += 7;
              v29 = v238++ >= 9;
              if (v29)
              {
                v239 = 0;
                goto LABEL_475;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v239 = 0;
LABEL_475:
        v266 = v239 != 0;
        v267 = 236;
        goto LABEL_480;
      case 40:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v244 = 0;
        v245 = 0;
        v246 = 0;
        *(_QWORD *)(a1 + 240) |= 0x100000000uLL;
        while (2)
        {
          v247 = *v19;
          v248 = *(_QWORD *)(v3 + v247);
          v249 = v248 + 1;
          if (v248 == -1 || v249 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v250 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v248);
            *(_QWORD *)(v3 + v247) = v249;
            v246 |= (unint64_t)(v250 & 0x7F) << v244;
            if (v250 < 0)
            {
              v244 += 7;
              v29 = v245++ >= 9;
              if (v29)
              {
                v246 = 0;
                goto LABEL_479;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v246 = 0;
LABEL_479:
        v266 = v246 != 0;
        v267 = 235;
LABEL_480:
        *(_BYTE *)(a1 + v267) = v266;
        goto LABEL_508;
      case 41:
        if (!v33)
          goto LABEL_358;
        if ((*(_BYTE *)(a1 + 245) & 4) != 0)
        {
          v274 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v274 & 1) == 0)
            goto LABEL_530;
          v270 = *(_QWORD *)(a1 + 240) << 21;
          goto LABEL_502;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_530;
        v282 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v282, (void *)v3, v9 & 1))
          goto LABEL_529;
        PBReaderRecallMark();
        v39 = 136;
        goto LABEL_355;
      case 42:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        *(_QWORD *)(a1 + 240) |= 8uLL;
        v251 = *v19;
        v252 = *(_QWORD *)(v3 + v251);
        if (v252 <= 0xFFFFFFFFFFFFFFF7 && v252 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v50 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v252);
          *(_QWORD *)(v3 + v251) = v252 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v50 = 0;
        }
        v276 = 144;
LABEL_507:
        *(_QWORD *)(a1 + v276) = v50;
        goto LABEL_508;
      case 43:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v253 = 0;
        v254 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x20uLL;
        while (2)
        {
          v255 = *v19;
          v256 = *(_QWORD *)(v3 + v255);
          v257 = v256 + 1;
          if (v256 == -1 || v257 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v258 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v256);
            *(_QWORD *)(v3 + v255) = v257;
            v53 |= (unint64_t)(v258 & 0x7F) << v253;
            if (v258 < 0)
            {
              v253 += 7;
              v29 = v254++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_484;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_484:
        v268 = 184;
        goto LABEL_489;
      case 44:
        if ((v8 & 1) == 0)
          goto LABEL_358;
        v259 = 0;
        v260 = 0;
        v53 = 0;
        *(_QWORD *)(a1 + 240) |= 0x40uLL;
        while (2)
        {
          v261 = *v19;
          v262 = *(_QWORD *)(v3 + v261);
          v263 = v262 + 1;
          if (v262 == -1 || v263 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v264 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v262);
            *(_QWORD *)(v3 + v261) = v263;
            v53 |= (unint64_t)(v264 & 0x7F) << v259;
            if (v264 < 0)
            {
              v259 += 7;
              v29 = v260++ >= 9;
              if (v29)
              {
                LODWORD(v53) = 0;
                goto LABEL_488;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v53) = 0;
LABEL_488:
        v268 = 188;
LABEL_489:
        *(_DWORD *)(a1 + v268) = v53;
        goto LABEL_508;
      case 45:
        if (!v33)
        {
LABEL_358:
          v265 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v265 & 1) == 0)
            goto LABEL_530;
          goto LABEL_508;
        }
        if ((*(_BYTE *)(a1 + 244) & 0x10) != 0)
        {
          v275 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v275 & 1) == 0)
            goto LABEL_530;
          v270 = *(_QWORD *)(a1 + 240) << 27;
LABEL_502:
          v7 += v270 >> 63;
          goto LABEL_508;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_530;
        v282 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v282, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v39 = 80;
LABEL_355:
          v154 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v282;
LABEL_356:

          --v7;
LABEL_357:
          v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_508:
          if (!(v17 & 1 | (v7 != 0)))
            goto LABEL_509;
          continue;
        }
LABEL_529:

LABEL_530:
        v3 = 0;
        *(_QWORD *)(a1 + 240) |= 0x1FF000000000uLL;
        if ((v17 & 1) != 0)
          goto LABEL_527;
        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_530;
        goto LABEL_508;
    }
  }
}

void sub_1898C18A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C1C08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C23D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C2830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C2B68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C2CB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C37E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C3AAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C6354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventDirectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v2 = a1[11];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v27;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v27 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[16], "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v7 = a1[12];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[19], "readAll:", 1);
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v12 = a1[20];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v19;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v19 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v18);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[17], "readAll:", 1);
  return objc_msgSend(a1[10], "readAll:", 1);
}

uint64_t GEOLogMsgEventDirectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 172))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventDirectionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 176));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 168) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 172) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventDirectionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventDirectionsReadAllFrom_initialTag;
  Specified = GEOLogMsgEventDirectionsReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventDirectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 176));
  return Specified;
}

void sub_1898C6764(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgEventDirectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventDirectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898C67C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C7080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventDirectionsIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  v2 = *(_QWORD *)(a1 + 240);
  if ((v2 & 0x202000000000) != 0)
    return 1;
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_5:
    if ((v2 & 0x19C000000000) != 0)
      return 1;
    if ((v2 & 0x40000000000) != 0)
    {
      if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 136)))
        return 1;
      v2 = *(_QWORD *)(a1 + 240);
    }
    if ((v2 & 0x1000000000) != 0)
    {
      if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 80)))
        return 1;
      v2 = *(_QWORD *)(a1 + 240);
    }
    if ((v2 & 0x2000000000) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 88);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v17;
LABEL_17:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          if (GEODirectionsFeedbackIsDirty(*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v9)))
            goto LABEL_35;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v7)
              goto LABEL_17;
            break;
          }
        }
      }

      v2 = *(_QWORD *)(a1 + 240);
    }
    if ((v2 & 0x100000000000) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 160);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_36:

      return v3;
    }
    v10 = *(_QWORD *)v13;
LABEL_28:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v10)
        objc_enumerationMutation(v5);
      if ((GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)) & 1) != 0)
        break;
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_28;
        goto LABEL_36;
      }
    }
LABEL_35:
    v3 = 1;
    goto LABEL_36;
  }
  if (!GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 128)))
  {
    v2 = *(_QWORD *)(a1 + 240);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOLogMsgEventDirectionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgEventDirectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 44);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898C8784(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDirectionsRequestDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  _BOOL8 v45;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 24) |= 8u;
            while (2)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
                *(_QWORD *)&v3[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  v15 = v19++ >= 9;
                  if (v15)
                  {
                    v20 = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v20 = 0;
LABEL_53:
            *(_BYTE *)(a1 + 20) = v20 != 0;
            continue;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 24) |= 4u;
            while (1)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
                break;
              v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
              *(_QWORD *)&v3[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if ((v31 & 0x80) == 0)
                goto LABEL_55;
              v25 += 7;
              v15 = v26++ >= 9;
              if (v15)
              {
                LODWORD(v27) = 0;
                goto LABEL_57;
              }
            }
            v3[*v6] = 1;
LABEL_55:
            if (v3[*v6])
              LODWORD(v27) = 0;
LABEL_57:
            v44 = 16;
            goto LABEL_66;
          case 3u:
            v32 = 0;
            v33 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 24) |= 2u;
            while (2)
            {
              v34 = *v4;
              v35 = *(_QWORD *)&v3[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v37 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v35);
                *(_QWORD *)&v3[v34] = v36;
                v27 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_61;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v27) = 0;
LABEL_61:
            v44 = 12;
            goto LABEL_66;
          case 4u:
            v38 = 0;
            v39 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 24) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_69;
            continue;
        }
        while (1)
        {
          v40 = *v4;
          v41 = *(_QWORD *)&v3[v40];
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)&v3[*v5])
            break;
          v43 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v41);
          *(_QWORD *)&v3[v40] = v42;
          v27 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0)
            goto LABEL_63;
          v38 += 7;
          v15 = v39++ >= 9;
          if (v15)
          {
            LODWORD(v27) = 0;
            goto LABEL_65;
          }
        }
        v3[*v6] = 1;
LABEL_63:
        if (v3[*v6])
          LODWORD(v27) = 0;
LABEL_65:
        v44 = 8;
LABEL_66:
        *(_DWORD *)(a1 + v44) = v27;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_1898CB1C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDirectionsRequestDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventDirectionsRequestDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898CB224(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1898CF7F0: too complex function (funcsize=7799)"

#error "1898DCDA0: too complex function (funcsize=8003)"

BOOL GEOLogMsgEventDisplayAnalyticReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  _BOOL8 v65;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_75;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_77;
              }
            }
            v3[*v6] = 1;
LABEL_75:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_77:
            v64 = 16;
            goto LABEL_102;
          case 2u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 0x40u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_81;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_81:
            v64 = 36;
            goto LABEL_102;
          case 3u:
            v31 = 0;
            v32 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 0x80u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_85;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_85:
            v64 = 40;
            goto LABEL_102;
          case 4u:
            v37 = 0;
            v38 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 0x20u;
            while (2)
            {
              v39 = *v4;
              v40 = *(_QWORD *)&v3[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v42 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v40);
                *(_QWORD *)&v3[v39] = v41;
                v20 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  v15 = v38++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_89;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_89:
            v64 = 32;
            goto LABEL_102;
          case 5u:
            v43 = 0;
            v44 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 0x10u;
            while (2)
            {
              v45 = *v4;
              v46 = *(_QWORD *)&v3[v45];
              v47 = v46 + 1;
              if (v46 == -1 || v47 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v48 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v46);
                *(_QWORD *)&v3[v45] = v47;
                v20 |= (unint64_t)(v48 & 0x7F) << v43;
                if (v48 < 0)
                {
                  v43 += 7;
                  v15 = v44++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_93;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_93:
            v64 = 28;
            goto LABEL_102;
          case 6u:
            v49 = 0;
            v50 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            while (2)
            {
              v51 = *v4;
              v52 = *(_QWORD *)&v3[v51];
              v53 = v52 + 1;
              if (v52 == -1 || v53 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v54 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v52);
                *(_QWORD *)&v3[v51] = v53;
                v20 |= (unint64_t)(v54 & 0x7F) << v49;
                if (v54 < 0)
                {
                  v49 += 7;
                  v15 = v50++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_97;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_97:
            v64 = 24;
            goto LABEL_102;
          case 7u:
            *(_BYTE *)(a1 + 44) |= 1u;
            v55 = *v4;
            v56 = *(_QWORD *)&v3[v55];
            if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v57 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v56);
              *(_QWORD *)&v3[v55] = v56 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v57 = 0;
            }
            *(_QWORD *)(a1 + 8) = v57;
            continue;
          case 8u:
            v58 = 0;
            v59 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_108;
            continue;
        }
        while (1)
        {
          v60 = *v4;
          v61 = *(_QWORD *)&v3[v60];
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)&v3[*v5])
            break;
          v63 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v61);
          *(_QWORD *)&v3[v60] = v62;
          v20 |= (unint64_t)(v63 & 0x7F) << v58;
          if ((v63 & 0x80) == 0)
            goto LABEL_99;
          v58 += 7;
          v15 = v59++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_101;
          }
        }
        v3[*v6] = 1;
LABEL_99:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_101:
        v64 = 20;
LABEL_102:
        *(_DWORD *)(a1 + v64) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v65 = v3[*v6] == 0;
  }
  else
  {
LABEL_108:
    v65 = 0;
  }
  objc_sync_exit(v3);

  return v65;
}

void sub_1898E65A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDisplayAnalyticReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventDisplayAnalyticReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898E6604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E70D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVRoutingVehicleDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  int v57;
  int v58;
  char v59;
  void *v60;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v62 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_85;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_85:
      if (v13)
      {
        v56 = 1;
        goto LABEL_96;
      }
      if (!v14)
        goto LABEL_97;
      while (1)
      {
        v58 = *v14++;
        v57 = v58;
        if (v58 == 1)
          break;
        if (v57 == 2)
        {
          v59 = 8;
LABEL_94:
          *(_BYTE *)(a1 + 52) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_97;
        }
      }
      v59 = 4;
      goto LABEL_94;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v62)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_102;
        v54 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_80;
      case 2:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 52) & 8) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 24;
LABEL_49:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          v17 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v54 = 16 * *(_BYTE *)(a1 + 52);
LABEL_80:
          v9 += v54 >> 7;
          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
          if (v9)
            v55 = 1;
          else
            v55 = v13;
          if ((v55 & 1) == 0)
            goto LABEL_85;
          continue;
        }
LABEL_102:
        v56 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        *(_BYTE *)(a1 + 52) |= 4u;
        *(_BYTE *)(a1 + 52) |= 8u;
        if ((v56 & 1) != 0)
        {
LABEL_97:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_98;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_98:
            v60 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (2)
        {
          v42 = *v16;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                LODWORD(v41) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v41) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_81;
      case 4:
        if ((v8 & 1) != 0)
        {
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (1)
          {
            v49 = *v16;
            v50 = *(_QWORD *)(v3 + v49);
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
              break;
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0)
              goto LABEL_73;
            v46 += 7;
            v26 = v47++ >= 9;
            if (v26)
            {
              v48 = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v17))
            v48 = 0;
LABEL_75:
          *(_BYTE *)(a1 + 48) = v48 != 0;
        }
        else
        {
LABEL_66:
          v53 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
LABEL_95:
            v56 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_81;
      default:
        v37 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_95;
        goto LABEL_81;
    }
  }
}

void sub_1898E7780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E7D54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom_initialTag;
  Specified = GEOLogMsgEventEVRoutingVehicleDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1898E7EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVRoutingVehicleDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898E7F40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E8100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventEVRoutingVehicleDetailsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 52) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1898E8430(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E8960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVTripReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int *v13;
  GEOStopAddedDetails *v14;
  int *v15;
  int *v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  int v76;
  __int16 v77;
  void *v78;
  int v80;
  char v81;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 76)), (uint16x4_t)0xFFF7FFFAFFFBFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 76) >> 7) & 1));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 3);
  if (((v12 | v8) & 1) != 0)
    v13 = 0;
  else
    v13 = a3;
  LODWORD(v14) = v12;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v81 = (v13 == 0) | v12;
  v16 = (int *)MEMORY[0x1E0D82BC8];
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_131;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v15;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v20 = 0;
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_131:
      if ((v14 & 1) != 0)
      {
        v75 = 1;
        goto LABEL_144;
      }
      if (v13)
      {
        while (1)
        {
          v76 = *v13++;
          v77 = 32;
          switch(v76)
          {
            case 0:
              goto LABEL_145;
            case 3:
              goto LABEL_139;
            case 4:
              v77 = 256;
              goto LABEL_139;
            case 5:
              v77 = 64;
              goto LABEL_139;
            case 9:
              v77 = 512;
              goto LABEL_139;
            case 10:
              v77 = 128;
LABEL_139:
              *(_WORD *)(a1 + 76) |= v77;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_145;
    }
    v28 = v20 >> 3;
    v29 = (char)v14;
    if ((v81 & 1) == 0)
    {
      v30 = v13;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v34 = 0;
        v35 = 0;
        v36 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (1)
        {
          v37 = *v15;
          v38 = *(_QWORD *)(v3 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(v3 + *v6))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v38);
          *(_QWORD *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0)
            goto LABEL_107;
          v34 += 7;
          v25 = v35++ >= 9;
          if (v25)
          {
            v36 = 0;
            goto LABEL_109;
          }
        }
        *(_BYTE *)(v3 + *v16) = 1;
LABEL_107:
        if (*(_BYTE *)(v3 + *v16))
          v36 = 0;
LABEL_109:
        v73 = v36 != 0;
        v74 = 70;
        goto LABEL_126;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          v45 = *v15;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v25 = v43++ >= 9;
              if (v25)
              {
                v44 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v44 = 0;
LABEL_113:
        v73 = v44 != 0;
        v74 = 71;
        goto LABEL_126;
      case 3:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x20) != 0)
          goto LABEL_104;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v80 = (int)v14;
        v14 = objc_alloc_init(GEOChargeLocationDetails);
        if (!GEOChargeLocationDetailsReadAllFrom((uint64_t)v14, (void *)v3))
          goto LABEL_142;
        PBReaderRecallMark();
        -[GEOLogMsgEventEVTrip _addNoFlagsChargeLocationDetails:](a1, v14);
        goto LABEL_103;
      case 4:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x100) != 0)
          goto LABEL_104;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v80 = (int)v14;
        v14 = objc_alloc_init(GEOStopAddedDetails);
        if (!GEOStopAddedDetailsReadAllFrom((uint64_t)v14, (void *)v3))
          goto LABEL_142;
        PBReaderRecallMark();
        -[GEOLogMsgEventEVTrip _addNoFlagsStopAddedDetails:](a1, v14);
        goto LABEL_103;
      case 5:
        if (!v29)
          goto LABEL_104;
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_141:
            v75 = 0;
            goto LABEL_143;
          }
          v7 += *(unsigned __int16 *)(a1 + 76) << 25 >> 31;
        }
        else
        {
          PBReaderReadString();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v49;

          --v7;
        }
        goto LABEL_129;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          v54 = *v15;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v25 = v52++ >= 9;
              if (v25)
              {
                v53 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v53 = 0;
LABEL_117:
        v73 = v53 != 0;
        v74 = 69;
        goto LABEL_126;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v58 = 0;
        v59 = 0;
        v60 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          v61 = *v15;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              v25 = v59++ >= 9;
              if (v25)
              {
                v60 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v60 = 0;
LABEL_121:
        v73 = v60 != 0;
        v74 = 68;
        goto LABEL_126;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_104;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_WORD *)(a1 + 76) |= 0x10u;
        while (2)
        {
          v68 = *v15;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v25 = v66++ >= 9;
              if (v25)
              {
                v67 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v67 = 0;
LABEL_125:
        v73 = v67 != 0;
        v74 = 72;
LABEL_126:
        *(_BYTE *)(a1 + v74) = v73;
        goto LABEL_130;
      case 9:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x200) != 0)
          goto LABEL_104;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v80 = (int)v14;
        v14 = objc_alloc_init(GEODodgeballDetails);
        if (!GEODodgeballDetailsReadAllFrom((uint64_t)v14, (void *)v3))
          goto LABEL_142;
        PBReaderRecallMark();
        -[GEOLogMsgEventEVTrip _addNoFlagsStopRemovedDetails:](a1, v14);
        goto LABEL_103;
      case 10:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
LABEL_104:
          v72 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v72 & 1) == 0)
          {
LABEL_140:
            v75 = 0;
            goto LABEL_144;
          }
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v80 = (int)v14;
        v14 = objc_alloc_init(GEODodgeballDetails);
        if (GEODodgeballDetailsReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventEVTrip _addNoFlagsRealtimeDodgeball:](a1, v14);
LABEL_103:

          LODWORD(v14) = v80;
LABEL_129:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_130:
          if (!(v14 & 1 | (v7 != 0)))
            goto LABEL_131;
          continue;
        }
LABEL_142:

        v75 = 0;
        LOBYTE(v14) = v80;
LABEL_143:
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_144:
        *(_WORD *)(a1 + 76) |= 0x20u;
        *(_WORD *)(a1 + 76) |= 0x100u;
        *(_WORD *)(a1 + 76) |= 0x40u;
        *(_WORD *)(a1 + 76) |= 0x200u;
        *(_WORD *)(a1 + 76) |= 0x80u;
        if ((v75 & 1) != 0)
        {
LABEL_145:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if ((v14 & 1) != 0)
            goto LABEL_146;
        }
        else
        {
          v3 = 0;
          if ((v14 & 1) != 0)
          {
LABEL_146:
            v78 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v41 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v41)
          goto LABEL_140;
        goto LABEL_130;
    }
  }
}

void sub_1898E9610(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E9944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E9BE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E9F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898EB138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventEVTripCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v2 = a1[2];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v35;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v35 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    }
    while (v4);
  }

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v7 = a1[5];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v31;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v31 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
    }
    while (v9);
  }

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v12 = a1[6];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v27;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v27 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
    }
    while (v14);
  }

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v17 = a1[4];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v23;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v23 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v22);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
    }
    while (v19);
  }

}

unint64_t GEOLogMsgEventEVTripReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventEVTripReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventEVTripReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventEVTripReadAllFrom_initialTag;
  Specified = GEOLogMsgEventEVTripReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventEVTripCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1898EB590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVTripReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventEVTripReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898EB5F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopAddedDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1898EBC74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventEVTripIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_WORD *)(a1 + 76) & 0x7E0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1898EC4D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventFullNavTraceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_1898ED0B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventFullNavTraceReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventFullNavTraceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898ED114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationReadAllFrom(_BYTE *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  GEOLogMsgEventGridDurationEndStateErrorInfo *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  _BOOL8 v45;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            a1[32] |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_54;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_56:
            v44 = 20;
            goto LABEL_69;
          case 2u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            a1[32] |= 4u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_60;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_60:
            v44 = 24;
            goto LABEL_69;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_73;
            v31 = objc_alloc_init(GEOLogMsgEventGridDurationEndStateErrorInfo);
            if (!GEOLogMsgEventGridDurationEndStateErrorInfoReadAllFrom((uint64_t)v31, v3))
            {

              goto LABEL_73;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addEndStateErrorReason:", v31, 0, 0);

LABEL_70:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_71;
            break;
          case 4u:
            v32 = 0;
            v33 = 0;
            v20 = 0;
            a1[32] |= 8u;
            while (2)
            {
              v34 = *v4;
              v35 = *(_QWORD *)&v3[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v37 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v35);
                *(_QWORD *)&v3[v34] = v36;
                v20 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_64:
            v44 = 28;
            goto LABEL_69;
          case 5u:
            v38 = 0;
            v39 = 0;
            v20 = 0;
            a1[32] |= 1u;
            while (2)
            {
              v40 = *v4;
              v41 = *(_QWORD *)&v3[v40];
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v43 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v41);
                *(_QWORD *)&v3[v40] = v42;
                v20 |= (unint64_t)(v43 & 0x7F) << v38;
                if (v43 < 0)
                {
                  v38 += 7;
                  v15 = v39++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_68:
            v44 = 16;
LABEL_69:
            *(_DWORD *)&a1[v44] = v20;
            goto LABEL_70;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_73;
            goto LABEL_70;
        }
      }
    }
LABEL_71:
    v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_73:
    v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_1898EE5E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationReadFrom(_BYTE *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventGridDurationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898EE640(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationEndStateErrorInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgEventGridDurationEndStateErrorInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__type;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__type;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__type;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__count;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__count;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__count;
        }
LABEL_40:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_1898EF924(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationEndStateErrorInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventGridDurationEndStateErrorInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898EF984(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898EFEB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventHardStopReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  int *v13;
  int *v14;
  int *v15;
  BOOL v16;
  int v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  char v55;
  int v56;
  int v57;
  void *v58;
  int v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_89:
    if (v12)
    {
      v54 = 1;
      goto LABEL_91;
    }
    if (!v13)
      goto LABEL_102;
    while (1)
    {
      v57 = *v13++;
      v56 = v57;
      if (v57 == 1)
        break;
      if (v56 == 2)
      {
        v55 = 4;
LABEL_98:
        *(_BYTE *)(a1 + 68) |= v55;
      }
      else if (!v56)
      {
        goto LABEL_102;
      }
    }
    v55 = 2;
    goto LABEL_98;
  }
  if (v13)
    v16 = (v7 & 1 | v10) != 0;
  else
    v16 = 1;
  if (v9)
    v17 = 1;
  else
    v17 = v12;
  v60 = v17;
  v61 = v16;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_89;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v14;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_30;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_32;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_30:
    v27 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v21 = 0;
LABEL_32:
    v28 = v21 & 7;
    if (v27 || v28 == 4)
      goto LABEL_89;
    v30 = v21 >> 3;
    v31 = v12;
    if (!v61)
    {
      v32 = v13;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
      break;
    if ((_DWORD)v30 == 2)
    {
      if (v31 && (*(_BYTE *)(a1 + 68) & 4) == 0)
      {
        PBReaderReadString();
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        if (v46)
          -[GEOLogMsgEventHardStop _addNoFlagsCities:](a1, v46);

        v15 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_87;
      }
      goto LABEL_72;
    }
    if ((_DWORD)v30 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_105;
LABEL_87:
      if (!v60)
        goto LABEL_89;
      goto LABEL_88;
    }
    if (!v31 || (*(_BYTE *)(a1 + 68) & 2) != 0)
      goto LABEL_72;
    if (v28 != 2)
    {
      v47 = 0;
      v48 = 0;
      v49 = 0;
      while (1)
      {
        v50 = *v14;
        v51 = *(_QWORD *)(v3 + v50);
        v52 = v51 + 1;
        if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          break;
        v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v51);
        *(_QWORD *)(v3 + v50) = v52;
        v49 |= (unint64_t)(v53 & 0x7F) << v47;
        if (v53 < 0)
        {
          v47 += 7;
          v26 = v48++ >= 9;
          if (!v26)
            continue;
        }
        goto LABEL_86;
      }
      *(_BYTE *)(v3 + *v15) = 1;
LABEL_86:
      PBRepeatedUInt32Add();
      goto LABEL_87;
    }
    if (!PBReaderPlaceMark())
      goto LABEL_105;
    while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
    {
      v36 = 0;
      v37 = 0;
      v38 = 0;
      while (1)
      {
        v39 = *v14;
        v40 = *(_QWORD *)(v3 + v39);
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v40);
        *(_QWORD *)(v3 + v39) = v41;
        v38 |= (unint64_t)(v42 & 0x7F) << v36;
        if (v42 < 0)
        {
          v36 += 7;
          v26 = v37++ >= 9;
          if (!v26)
            continue;
        }
        goto LABEL_60;
      }
      *(_BYTE *)(v3 + *v15) = 1;
LABEL_60:
      PBRepeatedUInt32Add();
    }
    PBReaderRecallMark();
    if ((v60 & 1) == 0)
      goto LABEL_89;
LABEL_88:
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_89;
  }
  if ((v8 & 1) != 0)
  {
    *(_BYTE *)(a1 + 68) |= 1u;
    v43 = *v14;
    v44 = *(_QWORD *)(v3 + v43);
    if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(v3 + *v6))
    {
      v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v18) + v44);
      *(_QWORD *)(v3 + v43) = v44 + 8;
    }
    else
    {
      *(_BYTE *)(v3 + *v15) = 1;
      v45 = 0;
    }
    *(_QWORD *)(a1 + 48) = v45;
    goto LABEL_87;
  }
LABEL_72:
  if ((PBReaderSkipValueWithTag() & 1) != 0)
    goto LABEL_87;
LABEL_105:
  v54 = 0;
LABEL_91:
  *(_BYTE *)(a1 + 68) |= 2u;
  *(_BYTE *)(a1 + 68) |= 4u;
  if ((v54 & 1) != 0)
  {
LABEL_102:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if (v12)
      goto LABEL_103;
    return v3;
  }
  v3 = 0;
  if (!v12)
    return v3;
LABEL_103:
  v58 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_1898F0768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F0F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventHardStopReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventHardStopReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventHardStopReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventHardStopReadAllFrom_initialTag;
  Specified = GEOLogMsgEventHardStopReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1898F10E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventHardStopReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventHardStopReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F1148(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F13BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventHardStopIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1898F17F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventIdReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0)
              goto LABEL_50;
            v26 += 7;
            v15 = v27++ >= 9;
            if (v15)
            {
              LODWORD(v28) = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6])
            LODWORD(v28) = 0;
LABEL_52:
          *(_DWORD *)(a1 + 24) = v28;
        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            v33 = 0;
            v34 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (1)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
                break;
              v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
              *(_QWORD *)&v3[v35] = v37;
              v21 |= (unint64_t)(v38 & 0x7F) << v33;
              if ((v38 & 0x80) == 0)
                goto LABEL_54;
              v33 += 7;
              v15 = v34++ >= 9;
              if (v15)
              {
                v21 = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6])
              v21 = 0;
LABEL_56:
            v39 = 16;
          }
          else
          {
            if ((_DWORD)v18 != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_60;
              continue;
            }
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_46;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                v21 = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6])
              v21 = 0;
LABEL_48:
            v39 = 8;
          }
          *(_QWORD *)(a1 + v39) = v21;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_1898F2390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventIdReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F23F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventImpressionEventReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v16;
  _BOOL8 v17;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)&v2[*v4])
          break;
        v14 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v16 = 1;
      else
        v16 = (v10 & 7) == 4;
      if (v16)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v17 = v7 == 0;
  }
  else
  {
LABEL_20:
    v17 = 0;
  }
  objc_sync_exit(v2);

  return v17;
}

void sub_1898F2A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventImpressionEventReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOLogMsgEventImpressionEventReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_1898F2ACC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F2D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventLogDiscardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  void *v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  char v45;
  char v46;
  int v47;
  int v48;
  char v49;
  void *v50;
  BOOL v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v52 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_73;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_73:
      if (v13)
      {
        v46 = 1;
        goto LABEL_84;
      }
      if (!v14)
      {
LABEL_85:
        v3 = *(_BYTE *)(v3 + *v17) == 0;
        if (!v13)
          return v3;
        goto LABEL_86;
      }
      while (1)
      {
        v48 = *v14++;
        v47 = v48;
        if (v48 == 1)
          break;
        if (v47 == 2)
        {
          v49 = 4;
LABEL_82:
          *(_BYTE *)(a1 + 48) |= v49;
        }
        else if (!v47)
        {
          goto LABEL_85;
        }
      }
      v49 = 2;
      goto LABEL_82;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v52)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 3)
    {
      if ((v8 & 1) == 0)
        goto LABEL_61;
      v36 = 0;
      v37 = 0;
      v38 = 0;
      *(_BYTE *)(a1 + 48) |= 1u;
      while (1)
      {
        v39 = *v16;
        v40 = *(_QWORD *)(v3 + v39);
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v40);
        *(_QWORD *)(v3 + v39) = v41;
        v38 |= (unint64_t)(v42 & 0x7F) << v36;
        if ((v42 & 0x80) == 0)
          goto LABEL_64;
        v36 += 7;
        v26 = v37++ >= 9;
        if (v26)
        {
          LODWORD(v38) = 0;
          goto LABEL_66;
        }
      }
      *(_BYTE *)(v3 + *v17) = 1;
LABEL_64:
      if (*(_BYTE *)(v3 + *v17))
        LODWORD(v38) = 0;
LABEL_66:
      *(_DWORD *)(a1 + 44) = v38;
LABEL_69:
      if (v9)
        v45 = 1;
      else
        v45 = v13;
      if ((v45 & 1) == 0)
        goto LABEL_73;
      continue;
    }
    break;
  }
  if ((_DWORD)v29 != 2)
  {
    if ((_DWORD)v29 == 1)
    {
      if (v30 && (*(_BYTE *)(a1 + 48) & 2) == 0)
      {
        PBReaderReadData();
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        if (v35)
          -[GEOLogMsgEventLogDiscard _addNoFlagsCertificates:](a1, v35);

        v17 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_69;
      }
LABEL_61:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_83;
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_83;
    }
    goto LABEL_69;
  }
  if (!v30)
    goto LABEL_61;
  if ((*(_BYTE *)(a1 + 48) & 4) == 0)
  {
    PBReaderReadData();
    v43 = objc_claimAutoreleasedReturnValue();
    v44 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v43;

    --v9;
    goto LABEL_69;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 48) << 29 >> 31;
    goto LABEL_69;
  }
LABEL_83:
  v46 = 0;
LABEL_84:
  *(_BYTE *)(a1 + 48) |= 2u;
  *(_BYTE *)(a1 + 48) |= 4u;
  if ((v46 & 1) != 0)
    goto LABEL_85;
  v3 = 0;
  if (v13)
  {
LABEL_86:
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1898F34C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F3D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventLogDiscardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventLogDiscardReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventLogDiscardReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventLogDiscardReadAllFrom_initialTag;
  Specified = GEOLogMsgEventLogDiscardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1898F3F0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventLogDiscardReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventLogDiscardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F3F6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F41C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventLogDiscardIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1898F45C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapKitCountsReadAllFrom(void *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOMapKitCount *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEOMapKitCount);
          if (!GEOMapKitCountReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addMapKitCounts:", v18, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_1898F4FE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapKitCountsReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventMapKitCountsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F5044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapKitCountIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_1898F597C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventMapLaunchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  GEOTimeToLeaveMapLaunch *v35;
  void *v36;
  void *v37;
  char v38;
  char v39;
  int v40;
  char v41;
  void *v42;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_64;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_64:
      if ((v12 & 1) != 0)
      {
        v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          v40 = *v13++;
          v41 = 2;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_70;
            case 2:
              v41 = 1;
              goto LABEL_70;
            case 3:
              v41 = 4;
LABEL_70:
              *(_BYTE *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    if ((_DWORD)v27 != 3)
    {
      if ((_DWORD)v27 == 2)
      {
        if (v28)
        {
          if ((*(_BYTE *)(a1 + 52) & 1) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_71:
              v39 = 0;
              goto LABEL_72;
            }
            v8 -= *(_BYTE *)(a1 + 52) & 1;
          }
          else
          {
            PBReaderReadString();
            v33 = objc_claimAutoreleasedReturnValue();
            v34 = 16;
LABEL_51:
            v37 = *(void **)(a1 + v34);
            *(_QWORD *)(a1 + v34) = v33;

            --v8;
          }
          goto LABEL_63;
        }
      }
      else
      {
        if ((_DWORD)v27 != 1)
        {
          if (!PBReaderSkipValueWithTag())
            goto LABEL_71;
          goto LABEL_63;
        }
        if (v28)
        {
          if ((*(_BYTE *)(a1 + 52) & 2) == 0)
          {
            PBReaderReadString();
            v33 = objc_claimAutoreleasedReturnValue();
            v34 = 24;
            goto LABEL_51;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_71;
          v38 = *(_BYTE *)(a1 + 52) << 6;
LABEL_60:
          v8 += v38 >> 7;
LABEL_63:
          if (!(v12 & 1 | (v8 != 0)))
            goto LABEL_64;
          continue;
        }
      }
LABEL_54:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_71;
      goto LABEL_63;
    }
    break;
  }
  if (!v28)
    goto LABEL_54;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_71;
    v38 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v35 = objc_alloc_init(GEOTimeToLeaveMapLaunch);
  if (GEOTimeToLeaveMapLaunchReadAllFrom((uint64_t)v35, (void *)v3))
  {
    PBReaderRecallMark();
    v36 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v35;

    --v8;
    v15 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_63;
  }

  v39 = 0;
  v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v39 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if ((v12 & 1) != 0)
  {
LABEL_74:
    v42 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1898F5F54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F6098(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F6554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventMapLaunchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventMapLaunchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventMapLaunchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventMapLaunchReadAllFrom_initialTag;
  Specified = GEOLogMsgEventMapLaunchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1898F66F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventMapLaunchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventMapLaunchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F6758(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeToLeaveMapLaunchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v16 != 1)
          goto LABEL_29;
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v18] = v20;
        else
          a1[v14] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v21 = 0;
        goto LABEL_28;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

void sub_1898F6AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapLaunchIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1898F6D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsDeviceSettingsReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v16;
  _BOOL8 v17;

  v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    v3 = (int *)MEMORY[0x1E0D82BF0];
    v4 = (int *)MEMORY[0x1E0D82BD8];
    v5 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v7 = v2[*v5];
      if (*(_QWORD *)&v2[*v3] >= *(_QWORD *)&v2[*v4])
        break;
      if (v2[*v5])
      {
        v7 = 1;
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)&v2[v11];
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)&v2[*v4])
          break;
        v14 = *(_BYTE *)(*(_QWORD *)&v2[*v6] + v12);
        *(_QWORD *)&v2[v11] = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_13;
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      v7 = v2[*v5];
      if (v2[*v5])
        LOBYTE(v10) = 0;
LABEL_15:
      if (v7)
        v16 = 1;
      else
        v16 = (v10 & 7) == 4;
      if (v16)
        break;
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_20;
    }
    v17 = v7 == 0;
  }
  else
  {
LABEL_20:
    v17 = 0;
  }
  objc_sync_exit(v2);

  return v17;
}

void sub_1898F71B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsDeviceSettingsReadFrom(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  _BOOL8 AllFrom;

  v2 = a2;
  v3 = objc_sync_enter(v2);
  AllFrom = GEOLogMsgEventMapsDeviceSettingsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_1898F7208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsEngagementReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1898F7A34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsEngagementReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventMapsEngagementReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F7A94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsInteractionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_30;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_1898F8408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsInteractionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventMapsInteractionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F8468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMarcoLiteUsageReadAllFrom(_BYTE *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  GEOMarcoLiteUsageState *v32;
  uint64_t v33;
  _BOOL8 v34;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_51;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_51;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 != 2)
        {
          if ((_DWORD)v18 != 1)
          {
            if (!PBReaderSkipValueWithTag())
              goto LABEL_53;
            goto LABEL_50;
          }
          v19 = 0;
          v20 = 0;
          v21 = 0;
          a1[24] |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_42;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_44:
          v33 = 16;
          goto LABEL_49;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_53;
        v32 = objc_alloc_init(GEOMarcoLiteUsageState);
        if (!GEOMarcoLiteUsageStateReadAllFrom((uint64_t)v32, v3))
        {

          goto LABEL_53;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "addUsageStates:", v32, 0, 0);

LABEL_50:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_51;
      }
      v26 = 0;
      v27 = 0;
      v21 = 0;
      a1[24] |= 2u;
      while (1)
      {
        v28 = *v4;
        v29 = *(_QWORD *)&v3[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
          break;
        v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
        *(_QWORD *)&v3[v28] = v30;
        v21 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_46;
        v26 += 7;
        v15 = v27++ >= 9;
        if (v15)
        {
          LODWORD(v21) = 0;
          goto LABEL_48;
        }
      }
      v3[*v6] = 1;
LABEL_46:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_48:
      v33 = 20;
LABEL_49:
      *(_DWORD *)&a1[v33] = v21;
      goto LABEL_50;
    }
LABEL_51:
    v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_1898F92A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMarcoLiteUsageReadFrom(_BYTE *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventMarcoLiteUsageReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F9308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMarcoLiteUsageStateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_1898FA3D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventNetworkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  const float *v10;
  uint32x4_t v11;
  int8x16_t v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  void *v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  uint64_t v142;
  BOOL v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  char v147;
  int v148;
  int v149;
  int v150;
  void *v151;
  GEONetworkSessionTaskTransactionMetrics *v153;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (const float *)(a1 + 164);
  v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  v13 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_189CFAC20), v12), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_189CFAC30), v12)));
  while (1)
  {
    v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  v15 = v9 | (v13 > 5);
  if (v9 & 1 | (v13 > 5) | v8 & 1)
    v16 = 0;
  else
    v16 = a3;
  v17 = (int *)MEMORY[0x1E0D82BF0];
  v18 = (int *)MEMORY[0x1E0D82BC8];
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_284;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_284:
      if ((v15 & 1) != 0)
      {
        v147 = 1;
        goto LABEL_304;
      }
      if (!v16)
        goto LABEL_305;
      while (1)
      {
        while (1)
        {
          v149 = *v16++;
          v148 = v149;
          if (v149 <= 49)
          {
            v150 = 0x400000;
            switch(v148)
            {
              case 0:
                goto LABEL_305;
              case 1:
              case 2:
              case 3:
              case 4:
              case 6:
                continue;
              case 5:
                goto LABEL_302;
              case 7:
                v150 = 0x200000;
                goto LABEL_302;
              case 8:
                v150 = 0x100000;
                goto LABEL_302;
              default:
                if (v148 != 22)
                  continue;
                v150 = 0x20000;
                goto LABEL_302;
            }
          }
          if (v148 <= 52)
            break;
          if (v148 == 53)
          {
            v150 = 0x80000;
LABEL_302:
            *(_DWORD *)(a1 + 164) |= v150;
          }
          else if (v148 == 100)
          {
            v150 = 0x1000000;
            goto LABEL_302;
          }
        }
        if (v148 == 50)
        {
          v150 = 0x800000;
          goto LABEL_302;
        }
        if (v148 == 52)
        {
          v150 = 0x40000;
          goto LABEL_302;
        }
      }
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x40u;
        while (2)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
            *(_QWORD *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v27 = v37++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_201:
        v142 = 128;
        goto LABEL_259;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v45 = 0;
        v46 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x200u;
        while (2)
        {
          v47 = *v17;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v38 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_205;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_205:
        v142 = 140;
        goto LABEL_259;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v51 = 0;
        v52 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x400u;
        while (2)
        {
          v53 = *v17;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v38 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v27 = v52++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_209:
        v142 = 144;
        goto LABEL_259;
      case 4:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
        goto LABEL_52;
      case 5:
        if (!v31)
          goto LABEL_196;
        if ((*(_BYTE *)(a1 + 166) & 0x40) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 72;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_311;
        v145 = (int)(*(_DWORD *)(a1 + 164) << 9) >> 31;
        goto LABEL_276;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v59 = 0;
        v60 = 0;
        v61 = 0;
        *(_DWORD *)(a1 + 164) |= 2u;
        while (2)
        {
          v62 = *v17;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v27 = v60++ >= 9;
              if (v27)
              {
                v61 = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v61 = 0;
LABEL_213:
        *(_QWORD *)(a1 + 56) = v61;
        goto LABEL_283;
      case 7:
        if (!v31)
          goto LABEL_196;
        if ((*(_BYTE *)(a1 + 166) & 0x20) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 64;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_311;
        v145 = (int)(*(_DWORD *)(a1 + 164) << 10) >> 31;
        goto LABEL_276;
      case 8:
        if (!v31)
          goto LABEL_196;
        if ((*(_BYTE *)(a1 + 166) & 0x10) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 40;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_311;
        v145 = (int)(*(_DWORD *)(a1 + 164) << 11) >> 31;
        goto LABEL_276;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v66 = 0;
        v67 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x80u;
        while (2)
        {
          v68 = *v17;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v38 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v27 = v67++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_217:
        v142 = 132;
        goto LABEL_259;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v72 = 0;
        v73 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x2000u;
        while (2)
        {
          v74 = *v17;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v38 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v27 = v73++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_221;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_221:
        v142 = 156;
        goto LABEL_259;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v78 = 0;
        v79 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x10u;
        while (2)
        {
          v80 = *v17;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v38 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              v27 = v79++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_225;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_225:
        v142 = 120;
        goto LABEL_259;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v84 = 0;
        v85 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 8u;
        while (2)
        {
          v86 = *v17;
          v87 = *(_QWORD *)(v3 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v87);
            *(_QWORD *)(v3 + v86) = v88;
            v38 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              v27 = v85++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_229;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_229:
        v142 = 116;
        goto LABEL_259;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        *(_DWORD *)(a1 + 164) |= 4u;
        v90 = *v17;
        v91 = *(_QWORD *)(v3 + v90);
        if (v91 <= 0xFFFFFFFFFFFFFFF7 && v91 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v92 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v91);
          *(_QWORD *)(v3 + v90) = v91 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v92 = 0;
        }
        v146 = 80;
        goto LABEL_282;
      case 20:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        *(_DWORD *)(a1 + 164) |= 1u;
        v93 = *v17;
        v94 = *(_QWORD *)(v3 + v93);
        if (v94 <= 0xFFFFFFFFFFFFFFF7 && v94 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v92 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v94);
          *(_QWORD *)(v3 + v93) = v94 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v92 = 0;
        }
        v146 = 48;
LABEL_282:
        *(_QWORD *)(a1 + v146) = v92;
        goto LABEL_283;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v95 = 0;
        v96 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x100u;
        while (2)
        {
          v97 = *v17;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v38 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              v27 = v96++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_233;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_233:
        v142 = 136;
        goto LABEL_259;
      case 22:
        if (!v31)
          goto LABEL_196;
        if ((*(_BYTE *)(a1 + 166) & 2) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 16;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_311;
        v145 = (int)(*(_DWORD *)(a1 + 164) << 14) >> 31;
        goto LABEL_276;
      case 23:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v101 = 0;
        v102 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x1000u;
        while (2)
        {
          v103 = *v17;
          v104 = *(_QWORD *)(v3 + v103);
          v105 = v104 + 1;
          if (v104 == -1 || v105 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v106 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v104);
            *(_QWORD *)(v3 + v103) = v105;
            v38 |= (unint64_t)(v106 & 0x7F) << v101;
            if (v106 < 0)
            {
              v101 += 7;
              v27 = v102++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_237;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_237:
        v142 = 152;
        goto LABEL_259;
      case 24:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v107 = 0;
        v108 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x20u;
        while (2)
        {
          v109 = *v17;
          v110 = *(_QWORD *)(v3 + v109);
          v111 = v110 + 1;
          if (v110 == -1 || v111 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v112 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v110);
            *(_QWORD *)(v3 + v109) = v111;
            v38 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              v27 = v108++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_241;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_241:
        v142 = 124;
        goto LABEL_259;
      case 25:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v113 = 0;
        v114 = 0;
        v115 = 0;
        *(_DWORD *)(a1 + 164) |= 0x4000u;
        while (2)
        {
          v116 = *v17;
          v117 = *(_QWORD *)(v3 + v116);
          v118 = v117 + 1;
          if (v117 == -1 || v118 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v119 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v117);
            *(_QWORD *)(v3 + v116) = v118;
            v115 |= (unint64_t)(v119 & 0x7F) << v113;
            if (v119 < 0)
            {
              v113 += 7;
              v27 = v114++ >= 9;
              if (v27)
              {
                v115 = 0;
                goto LABEL_245;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v115 = 0;
LABEL_245:
        v143 = v115 != 0;
        v144 = 160;
        goto LABEL_254;
      case 26:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v120 = 0;
        v121 = 0;
        v122 = 0;
        *(_DWORD *)(a1 + 164) |= 0x10000u;
        while (2)
        {
          v123 = *v17;
          v124 = *(_QWORD *)(v3 + v123);
          v125 = v124 + 1;
          if (v124 == -1 || v125 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v126 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v124);
            *(_QWORD *)(v3 + v123) = v125;
            v122 |= (unint64_t)(v126 & 0x7F) << v120;
            if (v126 < 0)
            {
              v120 += 7;
              v27 = v121++ >= 9;
              if (v27)
              {
                v122 = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v122 = 0;
LABEL_249:
        v143 = v122 != 0;
        v144 = 162;
        goto LABEL_254;
      case 50:
        if (!v31)
          goto LABEL_196;
        if ((*(_BYTE *)(a1 + 166) & 0x80) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 88;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_311;
        v145 = (int)(*(_DWORD *)(a1 + 164) << 8) >> 31;
        goto LABEL_276;
      case 51:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v127 = 0;
        v128 = 0;
        v129 = 0;
        *(_DWORD *)(a1 + 164) |= 0x8000u;
        while (2)
        {
          v130 = *v17;
          v131 = *(_QWORD *)(v3 + v130);
          v132 = v131 + 1;
          if (v131 == -1 || v132 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v133 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v131);
            *(_QWORD *)(v3 + v130) = v132;
            v129 |= (unint64_t)(v133 & 0x7F) << v127;
            if (v133 < 0)
            {
              v127 += 7;
              v27 = v128++ >= 9;
              if (v27)
              {
                v129 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v129 = 0;
LABEL_253:
        v143 = v129 != 0;
        v144 = 161;
LABEL_254:
        *(_BYTE *)(a1 + v144) = v143;
        goto LABEL_283;
      case 52:
        if (!v31)
          goto LABEL_196;
        if ((*(_BYTE *)(a1 + 166) & 4) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 24;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_311;
        v145 = (int)(*(_DWORD *)(a1 + 164) << 13) >> 31;
        goto LABEL_276;
      case 53:
        if (!v31)
          goto LABEL_196;
        if ((*(_BYTE *)(a1 + 166) & 8) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 32;
LABEL_187:
          v134 = *(void **)(a1 + v58);
          *(_QWORD *)(a1 + v58) = v57;

          v18 = (int *)MEMORY[0x1E0D82BC8];
          --v7;
          goto LABEL_283;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_311;
        v145 = (int)(*(_DWORD *)(a1 + 164) << 12) >> 31;
        goto LABEL_276;
      case 54:
        if ((v8 & 1) == 0)
          goto LABEL_196;
        v135 = 0;
        v136 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x800u;
        while (2)
        {
          v137 = *v17;
          v138 = *(_QWORD *)(v3 + v137);
          v139 = v138 + 1;
          if (v138 == -1 || v139 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v140 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v138);
            *(_QWORD *)(v3 + v137) = v139;
            v38 |= (unint64_t)(v140 & 0x7F) << v135;
            if (v140 < 0)
            {
              v135 += 7;
              v27 = v136++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_258:
        v142 = 148;
LABEL_259:
        *(_DWORD *)(a1 + v142) = v38;
        goto LABEL_283;
      default:
        if ((_DWORD)v30 != 100)
        {
LABEL_52:
          v44 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
            goto LABEL_303;
LABEL_283:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_284;
          continue;
        }
        if (!v31)
        {
LABEL_196:
          v141 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v141 & 1) == 0)
          {
LABEL_303:
            v147 = 0;
            goto LABEL_304;
          }
          goto LABEL_283;
        }
        if ((*(_BYTE *)(a1 + 167) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_311;
          v145 = (int)(*(_DWORD *)(a1 + 164) << 7) >> 31;
LABEL_276:
          v7 += v145;
          goto LABEL_277;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_311;
        v153 = objc_alloc_init(GEONetworkSessionTaskTransactionMetrics);
        if (GEONetworkSessionTaskTransactionMetricsReadAllFrom((uint64_t)v153, (void *)v3))
        {
          PBReaderRecallMark();
          v43 = *(void **)(a1 + 96);
          *(_QWORD *)(a1 + 96) = v153;

          --v7;
LABEL_277:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_283;
        }

LABEL_311:
        v147 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_304:
        *(_DWORD *)(a1 + 164) |= 0x400000u;
        *(_DWORD *)(a1 + 164) |= 0x200000u;
        *(_DWORD *)(a1 + 164) |= 0x100000u;
        *(_DWORD *)(a1 + 164) |= 0x20000u;
        *(_DWORD *)(a1 + 164) |= 0x800000u;
        *(_DWORD *)(a1 + 164) |= 0x40000u;
        *(_DWORD *)(a1 + 164) |= 0x80000u;
        *(_DWORD *)(a1 + 164) |= 0x1000000u;
        if ((v147 & 1) != 0)
        {
LABEL_305:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_306;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_306:
            v151 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
    }
  }
}

void sub_1898FB84C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FB994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FBE54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FC2E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FC4AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FC5F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FC7C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FDF1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventNetworkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventNetworkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventNetworkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventNetworkReadAllFrom_initialTag;
  Specified = GEOLogMsgEventNetworkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 96), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_1898FE0C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventNetworkReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventNetworkReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898FE120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONetworkSessionTaskTransactionMetricsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
          if (v16 != 1)
            goto LABEL_62;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_58;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_58;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_59;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_62:
          v42 = 0;
          goto LABEL_61;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v26 = v32++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_59;
      }
LABEL_57:
      v14 = *v4;
LABEL_58:
      a1[v14] = 1;
LABEL_59:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v42;
}

void sub_1898FE8D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 28);
  v2 = (a1[41]._os_unfair_lock_opaque & 0x3FE0000) != 0;
  os_unfair_lock_unlock(a1 + 28);
  return v2;
}

void sub_1898FF22C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkEventSummaryReadAllFrom(void *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEONetEventDimensionalGrouping *v20;
  _BOOL8 v21;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEONetEventDimensionalGrouping);
          if (!GEONetEventDimensionalGroupingReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addGroups:", v20, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_189900688(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkEventSummaryReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventNetworkEventSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899006E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONetEventDimensionalGroupingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  _BOOL8 v88;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 5u:
          if (v15 == 2)
            goto LABEL_114;
          goto LABEL_152;
        case 6u:
          if (v15 == 2)
            goto LABEL_114;
          goto LABEL_152;
        case 7u:
          if (v15 == 2)
            goto LABEL_114;
          goto LABEL_152;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0xDu:
          if (v15 == 2)
            goto LABEL_114;
          goto LABEL_152;
        case 0xEu:
          if (v15 == 2)
            goto LABEL_114;
          goto LABEL_152;
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x10u:
          if (v15 == 2)
            goto LABEL_114;
          goto LABEL_152;
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v22 = v73++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v78 = 0;
          while (1)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
              goto LABEL_148;
            v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
            *(_QWORD *)&a1[v79] = v81;
            if (v82 < 0)
            {
              v22 = v78++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_149;
          }
        case 0x14u:
        case 0x15u:
        case 0x16u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONetEventAggregateStatsIsValid(a1))
            goto LABEL_152;
          PBReaderRecallMark();
          continue;
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_152;
          v83 = 0;
          break;
        default:
LABEL_114:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_152:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v84 = *v2;
        v85 = *(_QWORD *)&a1[v84];
        v86 = v85 + 1;
        if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
          break;
        v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
        *(_QWORD *)&a1[v84] = v86;
        if (v87 < 0)
        {
          v22 = v83++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_149;
      }
LABEL_148:
      a1[*v4] = 1;
LABEL_149:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v88 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v88;
}

BOOL GEOLogMsgEventNetworkSelectionHarvestReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_1899016AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkSelectionHarvestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventNetworkSelectionHarvestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18990170C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189901B14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPOIBusynessDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  GEOLatLng *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  int v54;
  char v55;
  void *v56;
  _BOOL4 v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 76) >> 5) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v59 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      if (v16)
      {
        v52 = 1;
        goto LABEL_101;
      }
      if (!v15)
        goto LABEL_102;
      while (1)
      {
        v54 = *v15++;
        v53 = v54;
        if (v54 == 2)
          break;
        if (v53 == 6)
        {
          v55 = 32;
LABEL_96:
          *(_BYTE *)(a1 + 76) |= v55;
        }
        else if (!v53)
        {
          goto LABEL_102;
        }
      }
      v55 = 16;
      goto LABEL_96;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v59)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 76) |= 4u;
        v37 = *v18;
        v38 = *(_QWORD *)(v3 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v39 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v38);
          *(_QWORD *)(v3 + v37) = v38 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v39 = 0;
        }
        v50 = 48;
        goto LABEL_82;
      case 2:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_98;
          v58 = v16;
          v41 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3))
            goto LABEL_99;
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v41;

          --v7;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_98:
          v52 = 0;
          goto LABEL_100;
        }
        v7 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
        goto LABEL_73;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 76) |= 2u;
        v43 = *v18;
        v44 = *(_QWORD *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v39 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v39 = 0;
        }
        v50 = 24;
        goto LABEL_82;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 76) |= 8u;
        v45 = *v18;
        v46 = *(_QWORD *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v39 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v46);
          *(_QWORD *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v39 = 0;
        }
        v50 = 56;
        goto LABEL_82;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 76) |= 1u;
        v47 = *v18;
        v48 = *(_QWORD *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v39 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v48);
          *(_QWORD *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v19) = 1;
          v39 = 0;
        }
        v50 = 16;
LABEL_82:
        *(_QWORD *)(a1 + v50) = v39;
        goto LABEL_83;
      case 6:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
LABEL_69:
          v49 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v49 & 1) == 0)
          {
LABEL_97:
            v52 = 0;
            goto LABEL_101;
          }
LABEL_83:
          if (v7)
            v51 = 1;
          else
            v51 = v16;
          if ((v51 & 1) == 0)
            goto LABEL_87;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v58 = v16;
        v41 = objc_alloc_init(GEOLogMsgEventPOIPredictionData);
        if (GEOLogMsgEventPOIPredictionDataReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventPOIBusynessData _addNoFlagsPoiPredictions:](a1, v41);

LABEL_68:
          v16 = v58;
LABEL_73:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_83;
        }
LABEL_99:

        v52 = 0;
        v16 = v58;
LABEL_100:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_101:
        *(_BYTE *)(a1 + 76) |= 0x10u;
        *(_BYTE *)(a1 + 76) |= 0x20u;
        if ((v52 & 1) != 0)
        {
LABEL_102:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if (v16)
            goto LABEL_103;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_103:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v40 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v40)
          goto LABEL_97;
        goto LABEL_83;
    }
  }
}

void sub_189902430(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189902E54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventPOIBusynessDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOLogMsgEventPOIBusynessDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventPOIBusynessDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventPOIBusynessDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventPOIBusynessDataReadAllFrom_initialTag;
  Specified = GEOLogMsgEventPOIBusynessDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventPOIBusynessDataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1899030F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPOIBusynessDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventPOIBusynessDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189903158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIPredictionDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1)
          goto LABEL_39;
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && (v26 = v25 + 8, v26 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v24] = v26;
        else
          a1[v14] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_39;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

void sub_189903638(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIBusynessDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189903B64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIPredictionDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 24) |= 1u;
          v25 = *v4;
          v26 = *(_QWORD *)&v3[v25];
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v27 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
            *(_QWORD *)&v3[v25] = v26 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v27 = 0;
          }
          *(_QWORD *)(a1 + 8) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            v20 = 0;
LABEL_36:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_18990474C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIPredictionDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventPOIPredictionDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899047AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventParkedCarReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  GEOLatLng *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_39;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_39;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
          break;
        if ((_DWORD)v18 == 2)
        {
          *(_BYTE *)(a1 + 32) |= 1u;
          v24 = *v4;
          v25 = *(_QWORD *)&v3[v24];
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v23 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v25);
            *(_QWORD *)&v3[v24] = v25 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v23 = 0;
          }
          v26 = 8;
LABEL_37:
          *(_QWORD *)(a1 + v26) = v23;
          goto LABEL_38;
        }
        if ((_DWORD)v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_41;
          v19 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_41;
          }
          PBReaderRecallMark();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
LABEL_38:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_39;
      }
      *(_BYTE *)(a1 + 32) |= 2u;
      v21 = *v4;
      v22 = *(_QWORD *)&v3[v21];
      if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
      {
        v23 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
        *(_QWORD *)&v3[v21] = v22 + 8;
      }
      else
      {
        v3[*v6] = 1;
        v23 = 0;
      }
      v26 = 24;
      goto LABEL_37;
    }
LABEL_39:
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1899052CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventParkedCarReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventParkedCarReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18990532C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899059CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPeriodicSettingsSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const float *v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  void *v101;
  char v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char v107;
  int v108;
  int v109;
  void *v110;
  GEOLogMsgStateMapSettings *v112;
  char v113;
  char v114;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const float *)(a1 + 116);
  v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CFAC40), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CFAC50), v13)));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 5;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v114 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v113 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_211;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_211:
      if ((v18 & 1) != 0)
      {
        v107 = 1;
        goto LABEL_213;
      }
      if (v19)
      {
        while (1)
        {
          v108 = *v19++;
          v109 = 4096;
          switch(v108)
          {
            case 0:
              goto LABEL_226;
            case 1:
              goto LABEL_225;
            case 2:
              v109 = 0x2000;
              goto LABEL_225;
            case 12:
              v109 = 512;
              goto LABEL_225;
            case 13:
              v109 = 1024;
              goto LABEL_225;
            case 14:
              v109 = 0x8000;
              goto LABEL_225;
            case 15:
              v109 = 0x10000;
              goto LABEL_225;
            case 16:
              v109 = 0x4000;
              goto LABEL_225;
            case 17:
              v109 = 2048;
LABEL_225:
              *(_DWORD *)(a1 + 116) |= v109;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_226;
    }
    v33 = v25 >> 3;
    v34 = v18;
    if ((v114 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_152;
        if ((*(_BYTE *)(a1 + 117) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_231;
          v112 = objc_alloc_init(GEOLogMsgStateMapSettings);
          if (GEOLogMsgStateMapSettingsReadAllFrom(v112, (void *)v3))
          {
            PBReaderRecallMark();
            v39 = 40;
            goto LABEL_151;
          }
          goto LABEL_230;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_231;
        v106 = (int)(*(_DWORD *)(a1 + 116) << 19) >> 31;
        goto LABEL_208;
      case 2:
        if (!v34)
          goto LABEL_152;
        if ((*(_BYTE *)(a1 + 117) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v106 = (int)(*(_DWORD *)(a1 + 116) << 18) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v112 = objc_alloc_init(GEOLogMsgStateMapUIShown);
        if (!GEOLogMsgStateMapUIShownReadAllFrom((uint64_t)v112, (void *)v3))
          goto LABEL_230;
        PBReaderRecallMark();
        v39 = 48;
        goto LABEL_151;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_DWORD *)(a1 + 116) |= 0x40u;
        while (2)
        {
          v44 = *v20;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v30 = v42++ >= 9;
              if (v30)
              {
                v43 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v43 = 0;
LABEL_157:
        v103 = v43 != 0;
        v104 = 110;
        goto LABEL_191;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_DWORD *)(a1 + 116) |= 0x10u;
        while (2)
        {
          v51 = *v20;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v30 = v49++ >= 9;
              if (v30)
              {
                v50 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v50 = 0;
LABEL_161:
        v103 = v50 != 0;
        v104 = 108;
        goto LABEL_191;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_DWORD *)(a1 + 116) |= 0x100u;
        while (2)
        {
          v58 = *v20;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v30 = v56++ >= 9;
              if (v30)
              {
                v57 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v57 = 0;
LABEL_165:
        v103 = v57 != 0;
        v104 = 112;
        goto LABEL_191;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + 116) |= 2u;
        while (2)
        {
          v65 = *v20;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v30 = v63++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v64) = 0;
LABEL_169:
        v105 = 96;
        goto LABEL_182;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v69 = 0;
        v70 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + 116) |= 8u;
        while (2)
        {
          v71 = *v20;
          v72 = *(_QWORD *)(v3 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v64 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v30 = v70++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v64) = 0;
LABEL_173:
        v105 = 104;
        goto LABEL_182;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v75 = 0;
        v76 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + 116) |= 1u;
        while (2)
        {
          v77 = *v20;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v64 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              v30 = v76++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v64) = 0;
LABEL_177:
        v105 = 92;
        goto LABEL_182;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v81 = 0;
        v82 = 0;
        v64 = 0;
        *(_DWORD *)(a1 + 116) |= 4u;
        while (2)
        {
          v83 = *v20;
          v84 = *(_QWORD *)(v3 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v64 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v30 = v82++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v64) = 0;
LABEL_181:
        v105 = 100;
LABEL_182:
        *(_DWORD *)(a1 + v105) = v64;
        goto LABEL_210;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v87 = 0;
        v88 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + 116) |= 0x80u;
        while (2)
        {
          v90 = *v20;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              v30 = v88++ >= 9;
              if (v30)
              {
                v89 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v89 = 0;
LABEL_186:
        v103 = v89 != 0;
        v104 = 111;
        goto LABEL_191;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_152;
        v94 = 0;
        v95 = 0;
        v96 = 0;
        *(_DWORD *)(a1 + 116) |= 0x20u;
        while (2)
        {
          v97 = *v20;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              v30 = v95++ >= 9;
              if (v30)
              {
                v96 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v96 = 0;
LABEL_190:
        v103 = v96 != 0;
        v104 = 109;
LABEL_191:
        *(_BYTE *)(a1 + v104) = v103;
        goto LABEL_210;
      case 12:
        if (!v34)
          goto LABEL_152;
        if ((*(_BYTE *)(a1 + 117) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v106 = (int)(*(_DWORD *)(a1 + 116) << 22) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v112 = objc_alloc_init(GEOLogMsgStateAccount);
        if (!GEOLogMsgStateAccountReadAllFrom((uint64_t)v112, (void *)v3))
          goto LABEL_230;
        PBReaderRecallMark();
        v39 = 16;
        goto LABEL_151;
      case 13:
        if (!v34)
          goto LABEL_152;
        if ((*(_BYTE *)(a1 + 117) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v106 = (int)(*(_DWORD *)(a1 + 116) << 21) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v112 = objc_alloc_init(GEOLogMsgStateDeviceConnection);
        if (!GEOLogMsgStateDeviceConnectionReadAllFrom((uint64_t)v112, (void *)v3, v9 & 1))
          goto LABEL_230;
        PBReaderRecallMark();
        v39 = 24;
        goto LABEL_151;
      case 14:
        if (!v34)
          goto LABEL_152;
        if ((*(_BYTE *)(a1 + 117) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v106 = (int)(*(_DWORD *)(a1 + 116) << 16) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v112 = objc_alloc_init(GEOLogMsgStateMapsUserSettings);
        if (!GEOLogMsgStateMapsUserSettingsReadAllFrom((uint64_t)v112, (void *)v3))
          goto LABEL_230;
        PBReaderRecallMark();
        v39 = 64;
        goto LABEL_151;
      case 15:
        if (!v34)
          goto LABEL_152;
        if ((*(_BYTE *)(a1 + 118) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v106 = (int)(*(_DWORD *)(a1 + 116) << 15) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v112 = objc_alloc_init(GEOLogMsgStateRoutingSettings);
        if (!GEOLogMsgStateRoutingSettingsReadAllFrom((uint64_t)v112, (void *)v3, v9 & 1))
          goto LABEL_230;
        PBReaderRecallMark();
        v39 = 72;
        goto LABEL_151;
      case 16:
        if (!v34)
          goto LABEL_152;
        if ((*(_BYTE *)(a1 + 117) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v106 = (int)(*(_DWORD *)(a1 + 116) << 17) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v112 = objc_alloc_init(GEOLogMsgStateMapsFeatures);
        if (!GEOLogMsgStateMapsFeaturesReadAllFrom((uint64_t)v112, (void *)v3))
          goto LABEL_230;
        PBReaderRecallMark();
        v39 = 56;
        goto LABEL_151;
      case 17:
        if (!v34)
        {
LABEL_152:
          v102 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v113;
          if ((v102 & 1) == 0)
          {
LABEL_229:
            v107 = 0;
            goto LABEL_213;
          }
LABEL_210:
          if (!(v18 & 1 | (v7 != 0)))
            goto LABEL_211;
          continue;
        }
        if ((*(_BYTE *)(a1 + 117) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_231;
          v106 = (int)(*(_DWORD *)(a1 + 116) << 20) >> 31;
LABEL_208:
          v7 += v106;
LABEL_209:
          v18 = v113;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_210;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_231;
        v112 = objc_alloc_init(GEOLogMsgStateDeviceSettings);
        if (GEOLogMsgStateDeviceSettingsReadAllFrom((uint64_t)v112, (void *)v3))
        {
          PBReaderRecallMark();
          v39 = 32;
LABEL_151:
          v101 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v112;

          --v7;
          goto LABEL_209;
        }
LABEL_230:

LABEL_231:
        v107 = 0;
        v18 = v113;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_213:
        *(_DWORD *)(a1 + 116) |= 0x1000u;
        *(_DWORD *)(a1 + 116) |= 0x2000u;
        *(_DWORD *)(a1 + 116) |= 0x200u;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        *(_DWORD *)(a1 + 116) |= 0x8000u;
        *(_DWORD *)(a1 + 116) |= 0x10000u;
        *(_DWORD *)(a1 + 116) |= 0x4000u;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        if ((v107 & 1) != 0)
        {
LABEL_226:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_227;
          return v3;
        }
        v3 = 0;
        if ((v18 & 1) == 0)
          return v3;
LABEL_227:
        v110 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v40 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v113;
        if (!v40)
          goto LABEL_229;
        goto LABEL_210;
    }
  }
}

void sub_189906A1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189906FD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18990711C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189907268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899073B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899074F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189907644(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899085D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventPeriodicSettingsSummaryCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  return objc_msgSend(a1[4], "readAll:", 1);
}

unint64_t GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom_initialTag;
  Specified = GEOLogMsgEventPeriodicSettingsSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventPeriodicSettingsSummaryCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189908808(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPeriodicSettingsSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189908868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapSettingsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  int v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  int v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  int v147;
  _BOOL8 v148;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v22 = v73++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v78 = 0;
          while (1)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
            *(_QWORD *)&a1[v79] = v81;
            if (v82 < 0)
            {
              v22 = v78++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v83 = 0;
          while (1)
          {
            v84 = *v2;
            v85 = *(_QWORD *)&a1[v84];
            v86 = v85 + 1;
            if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
            *(_QWORD *)&a1[v84] = v86;
            if (v87 < 0)
            {
              v22 = v83++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v88 = 0;
          while (1)
          {
            v89 = *v2;
            v90 = *(_QWORD *)&a1[v89];
            v91 = v90 + 1;
            if (v90 == -1 || v91 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v92 = *(char *)(*(_QWORD *)&a1[*v5] + v90);
            *(_QWORD *)&a1[v89] = v91;
            if (v92 < 0)
            {
              v22 = v88++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONavVoiceGuidanceSettingsIsValid(a1))
            goto LABEL_237;
          PBReaderRecallMark();
          continue;
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v93 = 0;
          while (1)
          {
            v94 = *v2;
            v95 = *(_QWORD *)&a1[v94];
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
            *(_QWORD *)&a1[v94] = v96;
            if (v97 < 0)
            {
              v22 = v93++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v98 = 0;
          while (1)
          {
            v99 = *v2;
            v100 = *(_QWORD *)&a1[v99];
            v101 = v100 + 1;
            if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
            *(_QWORD *)&a1[v99] = v101;
            if (v102 < 0)
            {
              v22 = v98++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v103 = 0;
          while (1)
          {
            v104 = *v2;
            v105 = *(_QWORD *)&a1[v104];
            v106 = v105 + 1;
            if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
            *(_QWORD *)&a1[v104] = v106;
            if (v107 < 0)
            {
              v22 = v103++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v108 = 0;
          while (1)
          {
            v109 = *v2;
            v110 = *(_QWORD *)&a1[v109];
            v111 = v110 + 1;
            if (v110 == -1 || v111 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v112 = *(char *)(*(_QWORD *)&a1[*v5] + v110);
            *(_QWORD *)&a1[v109] = v111;
            if (v112 < 0)
            {
              v22 = v108++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v113 = 0;
          while (1)
          {
            v114 = *v2;
            v115 = *(_QWORD *)&a1[v114];
            v116 = v115 + 1;
            if (v115 == -1 || v116 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v117 = *(char *)(*(_QWORD *)&a1[*v5] + v115);
            *(_QWORD *)&a1[v114] = v116;
            if (v117 < 0)
            {
              v22 = v113++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v118 = 0;
          while (1)
          {
            v119 = *v2;
            v120 = *(_QWORD *)&a1[v119];
            v121 = v120 + 1;
            if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v122 = *(char *)(*(_QWORD *)&a1[*v5] + v120);
            *(_QWORD *)&a1[v119] = v121;
            if (v122 < 0)
            {
              v22 = v118++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v123 = 0;
          while (1)
          {
            v124 = *v2;
            v125 = *(_QWORD *)&a1[v124];
            v126 = v125 + 1;
            if (v125 == -1 || v126 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v127 = *(char *)(*(_QWORD *)&a1[*v5] + v125);
            *(_QWORD *)&a1[v124] = v126;
            if (v127 < 0)
            {
              v22 = v123++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v128 = 0;
          while (1)
          {
            v129 = *v2;
            v130 = *(_QWORD *)&a1[v129];
            v131 = v130 + 1;
            if (v130 == -1 || v131 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v132 = *(char *)(*(_QWORD *)&a1[*v5] + v130);
            *(_QWORD *)&a1[v129] = v131;
            if (v132 < 0)
            {
              v22 = v128++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x19u:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v133 = 0;
          while (1)
          {
            v134 = *v2;
            v135 = *(_QWORD *)&a1[v134];
            v136 = v135 + 1;
            if (v135 == -1 || v136 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v137 = *(char *)(*(_QWORD *)&a1[*v5] + v135);
            *(_QWORD *)&a1[v134] = v136;
            if (v137 < 0)
            {
              v22 = v133++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v138 = 0;
          while (1)
          {
            v139 = *v2;
            v140 = *(_QWORD *)&a1[v139];
            v141 = v140 + 1;
            if (v140 == -1 || v141 > *(_QWORD *)&a1[*v3])
              goto LABEL_233;
            v142 = *(char *)(*(_QWORD *)&a1[*v5] + v140);
            *(_QWORD *)&a1[v139] = v141;
            if (v142 < 0)
            {
              v22 = v138++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_234;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0)
            goto LABEL_237;
          v143 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_237:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v144 = *v2;
        v145 = *(_QWORD *)&a1[v144];
        v146 = v145 + 1;
        if (v145 == -1 || v146 > *(_QWORD *)&a1[*v3])
          break;
        v147 = *(char *)(*(_QWORD *)&a1[*v5] + v145);
        *(_QWORD *)&a1[v144] = v146;
        if (v147 < 0)
        {
          v22 = v143++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_234;
      }
LABEL_233:
      a1[*v4] = 1;
LABEL_234:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v148 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v148;
}

BOOL GEOLogMsgStateMapUIShownIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_65;
          v37 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_65:
          v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v21 = v37++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOLogMsgStateAccountIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_52;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v15++;
              if (v27 <= 8)
                continue;
            }
            goto LABEL_49;
          }
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v28 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              break;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v13 = v28++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              break;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8)
              continue;
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_52;
      }
LABEL_49:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateDeviceConnectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_40;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_41;
          }
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_44;
        case 3u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_44;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v23 = 0;
          break;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_44:
          v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateMapsUserSettingsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  _BOOL8 v57;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_85;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_86;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_85;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_86;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_85;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_86;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_85;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_86;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_85;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_86;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_85;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v21 = v42++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_86;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_85;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v21 = v47++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_86;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v52 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_89:
          v57 = 0;
          goto LABEL_88;
      }
      while (1)
      {
        v53 = *v2;
        v54 = *(_QWORD *)&a1[v53];
        v55 = v54 + 1;
        if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
          break;
        v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
        *(_QWORD *)&a1[v53] = v55;
        if (v56 < 0)
        {
          v21 = v52++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_86;
      }
LABEL_85:
      a1[*v4] = 1;
LABEL_86:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v57 = a1[*v4] == 0;
LABEL_88:
  PBReaderRecallMark();
  return v57;
}

BOOL GEOLogMsgStateRoutingSettingsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_35;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_35;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutingSettingsDrivingPrefsIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutingSettingsVirtualGarageSetttingsIsValid(a1))
          goto LABEL_36;
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_36;
LABEL_34:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_35;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutingSettingsCyclingPrefsIsValid(a1))
      goto LABEL_36;
    goto LABEL_32;
  }
LABEL_35:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEOLogMsgStateMapsFeaturesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  _BOOL8 v87;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v21 = v42++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v21 = v47++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v21 = v52++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v21 = v57++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v21 = v62++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v21 = v67++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v21 = v72++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_133;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v21 = v77++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_134;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_137;
          v82 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_137:
          v87 = 0;
          goto LABEL_136;
      }
      while (1)
      {
        v83 = *v2;
        v84 = *(_QWORD *)&a1[v83];
        v85 = v84 + 1;
        if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
          break;
        v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
        *(_QWORD *)&a1[v83] = v85;
        if (v86 < 0)
        {
          v21 = v82++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_134;
      }
LABEL_133:
      a1[*v4] = 1;
LABEL_134:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v87 = a1[*v4] == 0;
LABEL_136:
  PBReaderRecallMark();
  return v87;
}

BOOL GEOLogMsgStateDeviceSettingsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 4)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_18990AD70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventPeriodicSettingsSummaryIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_DWORD *)(a1 + 116);
  if ((v2 & 0x23200) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if (GEOLogMsgStateDeviceConnectionIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(_DWORD *)(a1 + 116);
  }
  if ((v2 & 0x8000) != 0)
    return 1;
  if ((v2 & 0x10000) == 0)
    goto LABEL_10;
  if (GEOLogMsgStateRoutingSettingsIsDirty(*(_QWORD *)(a1 + 72)))
    return 1;
  v2 = *(_DWORD *)(a1 + 116);
LABEL_10:
  if ((v2 & 0x4000) != 0)
    return 1;
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOLogMsgEventPeriodicSettingsSummaryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgEventPeriodicSettingsSummaryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18990B4CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceCacheLookupReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  _BOOL8 v47;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = objc_claimAutoreleasedReturnValue();
            v19 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v18;

            continue;
          case 2u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (2)
            {
              v23 = *v4;
              v24 = *(_QWORD *)&v3[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
                *(_QWORD *)&v3[v23] = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  v15 = v21++ >= 9;
                  if (v15)
                  {
                    v22 = 0;
                    goto LABEL_54;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v22 = 0;
LABEL_54:
            *(_QWORD *)(a1 + 8) = v22;
            continue;
          case 3u:
            v27 = 0;
            v28 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (1)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
                break;
              v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if ((v33 & 0x80) == 0)
                goto LABEL_56;
              v27 += 7;
              v15 = v28++ >= 9;
              if (v15)
              {
                LODWORD(v29) = 0;
                goto LABEL_58;
              }
            }
            v3[*v6] = 1;
LABEL_56:
            if (v3[*v6])
              LODWORD(v29) = 0;
LABEL_58:
            v46 = 28;
            goto LABEL_67;
          case 4u:
            v34 = 0;
            v35 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v36 = *v4;
              v37 = *(_QWORD *)&v3[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
                *(_QWORD *)&v3[v36] = v38;
                v29 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  v15 = v35++ >= 9;
                  if (v15)
                  {
                    LODWORD(v29) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v29) = 0;
LABEL_62:
            v46 = 24;
            goto LABEL_67;
          case 5u:
            v40 = 0;
            v41 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_70;
            continue;
        }
        while (1)
        {
          v42 = *v4;
          v43 = *(_QWORD *)&v3[v42];
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
            break;
          v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
          *(_QWORD *)&v3[v42] = v44;
          v29 |= (unint64_t)(v45 & 0x7F) << v40;
          if ((v45 & 0x80) == 0)
            goto LABEL_64;
          v40 += 7;
          v15 = v41++ >= 9;
          if (v15)
          {
            LODWORD(v29) = 0;
            goto LABEL_66;
          }
        }
        v3[*v6] = 1;
LABEL_64:
        if (v3[*v6])
          LODWORD(v29) = 0;
LABEL_66:
        v46 = 32;
LABEL_67:
        *(_DWORD *)(a1 + v46) = v29;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_70:
    v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_18990CA40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceCacheLookupReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventPlaceCacheLookupReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18990CAA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceDataCacheReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18990D4C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceDataCacheReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventPlaceDataCacheReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18990D528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18990F618(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPredExTrainingDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  int *v17;
  int *v18;
  BOOL v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  char v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  char v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  void *v151;
  uint64_t v152;
  char v153;
  unsigned int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  char v159;
  char v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  char v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  char v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  char v179;
  uint64_t v180;
  BOOL v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  int v189;
  int v190;
  void *v191;
  GEOLatLng *v193;
  BOOL v194;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 132);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 128));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(_DWORD *)(a1 + 200) >> 30) & 1) + (*(_DWORD *)(a1 + 200) >> 31);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (v14)
          v19 = 1;
        else
          v19 = v16 == 0;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v194 = v19;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_353;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_353:
      if (v15)
      {
        *(_QWORD *)(a1 + 200) |= 0xC0000000uLL;
        goto LABEL_363;
      }
      if (!v16)
      {
LABEL_363:
        v3 = *(_BYTE *)(v3 + *v18) == 0;
        if (!v15)
          return v3;
LABEL_364:
        v191 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        v190 = *v16++;
        v189 = v190;
        if (v190 == 27)
          break;
        if (v189 == 28)
        {
          v188 = 0x40000000;
LABEL_359:
          *(_QWORD *)(a1 + 200) |= v188;
        }
        else if (!v189)
        {
          goto LABEL_363;
        }
      }
      v188 = 0x80000000;
      goto LABEL_359;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v19)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x80000uLL;
        while (1)
        {
          v40 = *v17;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_246;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_248;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_246:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_248:
        v180 = 168;
        goto LABEL_313;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x20uLL;
        v45 = *v17;
        v46 = *(_QWORD *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v46);
          *(_QWORD *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 56;
        goto LABEL_348;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x10uLL;
        v48 = *v17;
        v49 = *(_QWORD *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v49);
          *(_QWORD *)(v3 + v48) = v49 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 48;
        goto LABEL_348;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x100uLL;
        v50 = *v17;
        v51 = *(_QWORD *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v51);
          *(_QWORD *)(v3 + v50) = v51 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 80;
        goto LABEL_348;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x40uLL;
        v52 = *v17;
        v53 = *(_QWORD *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v53);
          *(_QWORD *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 64;
        goto LABEL_348;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x200uLL;
        v54 = *v17;
        v55 = *(_QWORD *)(v3 + v54);
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v55);
          *(_QWORD *)(v3 + v54) = v55 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 88;
        goto LABEL_348;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 1uLL;
        v56 = *v17;
        v57 = *(_QWORD *)(v3 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v57);
          *(_QWORD *)(v3 + v56) = v57 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 16;
        goto LABEL_348;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 2uLL;
        v58 = *v17;
        v59 = *(_QWORD *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v59);
          *(_QWORD *)(v3 + v58) = v59 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 24;
        goto LABEL_348;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 4uLL;
        v60 = *v17;
        v61 = *(_QWORD *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && v61 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v61);
          *(_QWORD *)(v3 + v60) = v61 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 32;
        goto LABEL_348;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x400uLL;
        v62 = *v17;
        v63 = *(_QWORD *)(v3 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v63);
          *(_QWORD *)(v3 + v62) = v63 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 96;
        goto LABEL_348;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 8uLL;
        v64 = *v17;
        v65 = *(_QWORD *)(v3 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v65);
          *(_QWORD *)(v3 + v64) = v65 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 40;
        goto LABEL_348;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x80uLL;
        v66 = *v17;
        v67 = *(_QWORD *)(v3 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v67);
          *(_QWORD *)(v3 + v66) = v67 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 72;
        goto LABEL_348;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v68 = 0;
        v69 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x400000uLL;
        while (2)
        {
          v70 = *v17;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v39 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v28 = v69++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_252:
        v180 = 180;
        goto LABEL_313;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v74 = 0;
        v75 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x100000uLL;
        while (2)
        {
          v76 = *v17;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v39 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              v28 = v75++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_256:
        v180 = 172;
        goto LABEL_313;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v80 = 0;
        v81 = 0;
        v82 = 0;
        *(_QWORD *)(a1 + 200) |= 0x8000000uLL;
        while (2)
        {
          v83 = *v17;
          v84 = *(_QWORD *)(v3 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              v28 = v81++ >= 9;
              if (v28)
              {
                v82 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v82 = 0;
LABEL_260:
        v181 = v82 != 0;
        v182 = 194;
        goto LABEL_318;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v87 = 0;
        v88 = 0;
        v89 = 0;
        *(_QWORD *)(a1 + 200) |= 0x4000000uLL;
        while (2)
        {
          v90 = *v17;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              v28 = v88++ >= 9;
              if (v28)
              {
                v89 = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v89 = 0;
LABEL_264:
        v181 = v89 != 0;
        v182 = 193;
        goto LABEL_318;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        *(_QWORD *)(a1 + 200) |= 0x800uLL;
        v94 = *v17;
        v95 = *(_QWORD *)(v3 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFF7 && v95 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v95);
          *(_QWORD *)(v3 + v94) = v95 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        v186 = 104;
LABEL_348:
        *(_QWORD *)(a1 + v186) = v47;
        goto LABEL_349;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v96 = 0;
        v97 = 0;
        v98 = 0;
        *(_QWORD *)(a1 + 200) |= 0x20000000uLL;
        while (2)
        {
          v99 = *v17;
          v100 = *(_QWORD *)(v3 + v99);
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v100);
            *(_QWORD *)(v3 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              v28 = v97++ >= 9;
              if (v28)
              {
                v98 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v98 = 0;
LABEL_268:
        v181 = v98 != 0;
        v182 = 196;
        goto LABEL_318;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v103 = 0;
        v104 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x200000uLL;
        while (2)
        {
          v105 = *v17;
          v106 = *(_QWORD *)(v3 + v105);
          v107 = v106 + 1;
          if (v106 == -1 || v107 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v108 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v106);
            *(_QWORD *)(v3 + v105) = v107;
            v39 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              v28 = v104++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_272:
        v180 = 176;
        goto LABEL_313;
      case 20:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v109 = 0;
        v110 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x1000uLL;
        while (2)
        {
          v111 = *v17;
          v112 = *(_QWORD *)(v3 + v111);
          v113 = v112 + 1;
          if (v112 == -1 || v113 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v114 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v112);
            *(_QWORD *)(v3 + v111) = v113;
            v39 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              v28 = v110++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_276:
        v180 = 140;
        goto LABEL_313;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v115 = 0;
        v116 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x20000uLL;
        while (2)
        {
          v117 = *v17;
          v118 = *(_QWORD *)(v3 + v117);
          v119 = v118 + 1;
          if (v118 == -1 || v119 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v118);
            *(_QWORD *)(v3 + v117) = v119;
            v39 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              v28 = v116++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_280:
        v180 = 160;
        goto LABEL_313;
      case 22:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v121 = 0;
        v122 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x4000uLL;
        while (2)
        {
          v123 = *v17;
          v124 = *(_QWORD *)(v3 + v123);
          v125 = v124 + 1;
          if (v124 == -1 || v125 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v126 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v124);
            *(_QWORD *)(v3 + v123) = v125;
            v39 |= (unint64_t)(v126 & 0x7F) << v121;
            if (v126 < 0)
            {
              v121 += 7;
              v28 = v122++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_284:
        v180 = 148;
        goto LABEL_313;
      case 23:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v127 = 0;
        v128 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x40000uLL;
        while (2)
        {
          v129 = *v17;
          v130 = *(_QWORD *)(v3 + v129);
          v131 = v130 + 1;
          if (v130 == -1 || v131 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v132 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v130);
            *(_QWORD *)(v3 + v129) = v131;
            v39 |= (unint64_t)(v132 & 0x7F) << v127;
            if (v132 < 0)
            {
              v127 += 7;
              v28 = v128++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_288:
        v180 = 164;
        goto LABEL_313;
      case 24:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v133 = 0;
        v134 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x2000uLL;
        while (2)
        {
          v135 = *v17;
          v136 = *(_QWORD *)(v3 + v135);
          v137 = v136 + 1;
          if (v136 == -1 || v137 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v138 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v136);
            *(_QWORD *)(v3 + v135) = v137;
            v39 |= (unint64_t)(v138 & 0x7F) << v133;
            if (v138 < 0)
            {
              v133 += 7;
              v28 = v134++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_292:
        v180 = 144;
        goto LABEL_313;
      case 25:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v139 = 0;
        v140 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x10000uLL;
        while (2)
        {
          v141 = *v17;
          v142 = *(_QWORD *)(v3 + v141);
          v143 = v142 + 1;
          if (v142 == -1 || v143 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v144 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v142);
            *(_QWORD *)(v3 + v141) = v143;
            v39 |= (unint64_t)(v144 & 0x7F) << v139;
            if (v144 < 0)
            {
              v139 += 7;
              v28 = v140++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_296:
        v180 = 156;
        goto LABEL_313;
      case 26:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v145 = 0;
        v146 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x8000uLL;
        while (2)
        {
          v147 = *v17;
          v148 = *(_QWORD *)(v3 + v147);
          v149 = v148 + 1;
          if (v148 == -1 || v149 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v150 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v148);
            *(_QWORD *)(v3 + v147) = v149;
            v39 |= (unint64_t)(v150 & 0x7F) << v145;
            if (v150 < 0)
            {
              v145 += 7;
              v28 = v146++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_300:
        v180 = 152;
        goto LABEL_313;
      case 27:
        if (!v32)
          goto LABEL_243;
        if ((*(_BYTE *)(a1 + 203) & 0x80) != 0)
        {
          v183 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v19 = v194;
          if ((v183 & 1) == 0)
            goto LABEL_367;
          v184 = *(_QWORD *)(a1 + 200) << 32;
LABEL_323:
          v9 += v184 >> 63;
          goto LABEL_349;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_367;
        v193 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v193, (void *)v3))
        {
          PBReaderRecallMark();
          v151 = *(void **)(a1 + 120);
          *(_QWORD *)(a1 + 120) = v193;
LABEL_210:

          --v9;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v19 = v194;
LABEL_349:
          if (v9)
            v187 = 1;
          else
            v187 = v15;
          if ((v187 & 1) == 0)
            goto LABEL_353;
          continue;
        }

LABEL_367:
        v3 = 0;
        *(_QWORD *)(a1 + 200) |= 0xC0000000uLL;
        if (v15)
          goto LABEL_364;
        return v3;
      case 28:
        if (!v32)
          goto LABEL_243;
        if ((*(_BYTE *)(a1 + 203) & 0x40) == 0)
        {
          PBReaderReadString();
          v152 = objc_claimAutoreleasedReturnValue();
          v151 = *(void **)(a1 + 112);
          *(_QWORD *)(a1 + 112) = v152;
          goto LABEL_210;
        }
        v185 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = v194;
        if ((v185 & 1) == 0)
          goto LABEL_367;
        v184 = *(_QWORD *)(a1 + 200) << 33;
        goto LABEL_323;
      case 29:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v153 = 0;
        v154 = 0;
        v155 = 0;
        *(_QWORD *)(a1 + 200) |= 0x2000000uLL;
        while (2)
        {
          v156 = *v17;
          v157 = *(_QWORD *)(v3 + v156);
          v158 = v157 + 1;
          if (v157 == -1 || v158 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v159 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v157);
            *(_QWORD *)(v3 + v156) = v158;
            v155 |= (unint64_t)(v159 & 0x7F) << v153;
            if (v159 < 0)
            {
              v153 += 7;
              v28 = v154++ >= 9;
              if (v28)
              {
                v155 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v155 = 0;
LABEL_304:
        v181 = v155 != 0;
        v182 = 192;
        goto LABEL_318;
      case 30:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v160 = 0;
        v161 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x1000000uLL;
        while (2)
        {
          v162 = *v17;
          v163 = *(_QWORD *)(v3 + v162);
          v164 = v163 + 1;
          if (v163 == -1 || v164 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v165 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v163);
            *(_QWORD *)(v3 + v162) = v164;
            v39 |= (unint64_t)(v165 & 0x7F) << v160;
            if (v165 < 0)
            {
              v160 += 7;
              v28 = v161++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_308:
        v180 = 188;
        goto LABEL_313;
      case 31:
        if ((v8 & 1) == 0)
          goto LABEL_243;
        v166 = 0;
        v167 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + 200) |= 0x800000uLL;
        while (2)
        {
          v168 = *v17;
          v169 = *(_QWORD *)(v3 + v168);
          v170 = v169 + 1;
          if (v169 == -1 || v170 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v171 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v169);
            *(_QWORD *)(v3 + v168) = v170;
            v39 |= (unint64_t)(v171 & 0x7F) << v166;
            if (v171 < 0)
            {
              v166 += 7;
              v28 = v167++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_312:
        v180 = 184;
LABEL_313:
        *(_DWORD *)(a1 + v180) = v39;
        goto LABEL_349;
      case 32:
        if ((v8 & 1) != 0)
        {
          v172 = 0;
          v173 = 0;
          v174 = 0;
          *(_QWORD *)(a1 + 200) |= 0x10000000uLL;
          while (1)
          {
            v175 = *v17;
            v176 = *(_QWORD *)(v3 + v175);
            v177 = v176 + 1;
            if (v176 == -1 || v177 > *(_QWORD *)(v3 + *v6))
              break;
            v178 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v176);
            *(_QWORD *)(v3 + v175) = v177;
            v174 |= (unint64_t)(v178 & 0x7F) << v172;
            if ((v178 & 0x80) == 0)
              goto LABEL_315;
            v172 += 7;
            v28 = v173++ >= 9;
            if (v28)
            {
              v174 = 0;
              goto LABEL_317;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_315:
          if (*(_BYTE *)(v3 + *v18))
            v174 = 0;
LABEL_317:
          v181 = v174 != 0;
          v182 = 195;
LABEL_318:
          *(_BYTE *)(a1 + v182) = v181;
        }
        else
        {
LABEL_243:
          v179 = PBReaderSkipValueWithTag();
          v19 = v194;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v179 & 1) == 0)
            goto LABEL_367;
        }
        goto LABEL_349;
      default:
        v44 = PBReaderSkipValueWithTag();
        v19 = v194;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_367;
        goto LABEL_349;
    }
  }
}

void sub_189910E7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189913E00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPredExTrainingDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 132))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventPredExTrainingDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 132) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventPredExTrainingDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventPredExTrainingDataReadAllFrom_initialTag;
  Specified = GEOLogMsgEventPredExTrainingDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 120), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_189913FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPredExTrainingDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventPredExTrainingDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189914000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899145B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPredExTrainingDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v2 = (*(_QWORD *)(a1 + 200) & 0x1C0000000) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return v2;
}

void sub_189915214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPressureDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189916A8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPressureDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventPressureDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189916AEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRealtimeTrafficProbeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189916FBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRealtimeTrafficProbeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventRealtimeTrafficProbeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18991701C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18991753C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventServiceMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  GEOPDPlacesRequestResponseAnalyticsData *v45;
  uint64_t v46;
  void *v47;
  int v48;
  char v49;
  char v50;
  char v51;
  char v52;
  int v53;
  int v54;
  void *v55;
  _BOOL4 v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        if (v14)
          v17 = 1;
        else
          v17 = v16 == 0;
        v58 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        v57 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_26;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_28:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      if (v15)
      {
        v52 = 1;
        goto LABEL_93;
      }
      if (!v16)
        goto LABEL_94;
      while (1)
      {
        while (1)
        {
          v54 = *v16++;
          v53 = v54;
          if (v54 != 2)
            break;
LABEL_84:
          *(_BYTE *)(a1 + v21[401]) |= v53;
        }
        if (v53 == 3)
        {
          LOBYTE(v53) = 4;
          goto LABEL_84;
        }
        if (!v53)
          goto LABEL_94;
      }
    }
    v32 = v24 >> 3;
    v33 = v15;
    if (!v58)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 != 3)
      break;
    if (v33)
    {
      if ((*(_BYTE *)(a1 + v21[401]) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_90;
        v45 = objc_alloc_init(GEOPDPlacesRequestResponseAnalyticsData);
        if (!GEOPDPlacesRequestResponseAnalyticsDataReadAllFrom((uint64_t)v45, (void *)v3))
          goto LABEL_91;
        PBReaderRecallMark();
        v46 = 24;
LABEL_60:
        v47 = *(void **)(a1 + v46);
        *(_QWORD *)(a1 + v46) = v45;

        --v7;
        v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_74:
        v15 = v57;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_75;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_90;
      v50 = 32 * *(_BYTE *)(a1 + v21[401]);
LABEL_73:
      v7 += v50 >> 7;
      goto LABEL_74;
    }
LABEL_63:
    v49 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    v15 = v57;
    if ((v49 & 1) == 0)
    {
LABEL_89:
      v52 = 0;
      goto LABEL_93;
    }
LABEL_75:
    if (v7)
      v51 = 1;
    else
      v51 = v15;
    if ((v51 & 1) == 0)
      goto LABEL_79;
  }
  if ((_DWORD)v32 != 2)
  {
    if ((_DWORD)v32 != 1)
    {
      v48 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v15 = v57;
      if (!v48)
        goto LABEL_89;
      goto LABEL_75;
    }
    if ((v8 & 1) != 0)
    {
      v38 = 0;
      v39 = 0;
      v40 = 0;
      *(_BYTE *)(a1 + v21[401]) |= 1u;
      while (1)
      {
        v41 = *v18;
        v42 = *(_QWORD *)(v3 + v41);
        v43 = v42 + 1;
        if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v42);
        *(_QWORD *)(v3 + v41) = v43;
        v40 |= (unint64_t)(v44 & 0x7F) << v38;
        if ((v44 & 0x80) == 0)
          goto LABEL_66;
        v38 += 7;
        v29 = v39++ >= 9;
        if (v29)
        {
          LODWORD(v40) = 0;
          goto LABEL_68;
        }
      }
      *(_BYTE *)(v3 + *v19) = 1;
LABEL_66:
      if (*(_BYTE *)(v3 + *v19))
        LODWORD(v40) = 0;
LABEL_68:
      *(_DWORD *)(a1 + 44) = v40;
      goto LABEL_75;
    }
    goto LABEL_63;
  }
  if (!v33)
    goto LABEL_63;
  if ((*(_BYTE *)(a1 + v21[401]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_90:
      v52 = 0;
      goto LABEL_92;
    }
    v50 = *(_BYTE *)(a1 + v21[401]) << 6;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_90;
  v45 = objc_alloc_init(GEODirectionsRequestResponseAnalyticsData);
  if (GEODirectionsRequestResponseAnalyticsDataReadAllFrom((uint64_t)v45, (void *)v3))
  {
    PBReaderRecallMark();
    v46 = 16;
    goto LABEL_60;
  }
LABEL_91:

  v52 = 0;
  v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_92:
  v15 = v57;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_93:
  *(_BYTE *)(a1 + v21[401]) |= 2u;
  *(_BYTE *)(a1 + v21[401]) |= 4u;
  if ((v52 & 1) != 0)
  {
LABEL_94:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_95;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_95:
      v55 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_189917BCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18991819C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventServiceMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventServiceMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventServiceMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventServiceMetadataReadAllFrom_initialTag;
  Specified = GEOLogMsgEventServiceMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189918350(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventServiceMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventServiceMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899183B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189918550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventServiceMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189918858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189918D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventShowcaseSuppressionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  int *v15;
  int *v16;
  BOOL v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  int v64;
  int v65;
  char v66;
  void *v67;
  BOOL v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  if (v12)
    v17 = 1;
  else
    v17 = v14 == 0;
  v69 = v17;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_99;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v15;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        v63 = 1;
        goto LABEL_110;
      }
      if (!v14)
        goto LABEL_111;
      while (1)
      {
        v65 = *v14++;
        v64 = v65;
        if (v65 == 3)
          break;
        if (v64 == 5)
        {
          v66 = 8;
LABEL_108:
          *(_BYTE *)(a1 + 60) |= v66;
        }
        else if (!v64)
        {
          goto LABEL_111;
        }
      }
      v66 = 16;
      goto LABEL_108;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v69)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v38 = *v15;
          v39 = *(_QWORD *)(v3 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
          *(_QWORD *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_77;
          v35 += 7;
          v26 = v36++ >= 9;
          if (v26)
          {
            v37 = 0;
            goto LABEL_79;
          }
        }
        *(_BYTE *)(v3 + *v16) = 1;
LABEL_77:
        if (*(_BYTE *)(v3 + *v16))
          v37 = 0;
LABEL_79:
        *(_QWORD *)(a1 + 24) = v37;
        goto LABEL_95;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v46 = *v15;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v45) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v45) = 0;
LABEL_83:
        v60 = 52;
        goto LABEL_88;
      case 3:
        if (!v30)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 60) & 0x10) == 0)
        {
          PBReaderReadString();
          v50 = objc_claimAutoreleasedReturnValue();
          v51 = 32;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_116;
        v61 = 8 * *(_BYTE *)(a1 + 60);
        goto LABEL_93;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v52 = 0;
        v53 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 4u;
        while (2)
        {
          v54 = *v15;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v45 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v26 = v53++ >= 9;
              if (v26)
              {
                LODWORD(v45) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v45) = 0;
LABEL_87:
        v60 = 56;
LABEL_88:
        *(_DWORD *)(a1 + v60) = v45;
        goto LABEL_95;
      case 5:
        if (!v30)
        {
LABEL_74:
          v59 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v59 & 1) == 0)
          {
LABEL_109:
            v63 = 0;
            goto LABEL_110;
          }
          goto LABEL_95;
        }
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v50 = objc_claimAutoreleasedReturnValue();
          v51 = 16;
LABEL_73:
          v58 = *(void **)(a1 + v51);
          *(_QWORD *)(a1 + v51) = v50;

          --v9;
LABEL_94:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
          if (v9)
            v62 = 1;
          else
            v62 = v13;
          if ((v62 & 1) == 0)
            goto LABEL_99;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v61 = 16 * *(_BYTE *)(a1 + 60);
LABEL_93:
          v9 += v61 >> 7;
          goto LABEL_94;
        }
LABEL_116:
        v63 = 0;
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_110:
        *(_BYTE *)(a1 + 60) |= 0x10u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v63 & 1) != 0)
        {
LABEL_111:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if (v13)
            goto LABEL_112;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_112:
            v67 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v42 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v42)
          goto LABEL_109;
        goto LABEL_95;
    }
  }
}

void sub_1899196D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189919E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventShowcaseSuppressionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventShowcaseSuppressionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventShowcaseSuppressionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventShowcaseSuppressionReadAllFrom_initialTag;
  Specified = GEOLogMsgEventShowcaseSuppressionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189919FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventShowcaseSuppressionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventShowcaseSuppressionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18991A000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18991A1E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventShowcaseSuppressionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18991A570(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventStateTimingReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOStateTransitionFeedback *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 24) |= 1u;
          v19 = *v4;
          v20 = *(_QWORD *)&v3[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v21 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v20);
            *(_QWORD *)&v3[v19] = v20 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v21 = 0;
          }
          *(_QWORD *)(a1 + 8) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_34;
          v18 = objc_alloc_init(GEOStateTransitionFeedback);
          if (!GEOStateTransitionFeedbackReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_34;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addStateTransitionFeedback:", v18, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_34;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_34:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18991B144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventStateTimingReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventStateTimingReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18991B1A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTelemetricReadAllFrom(void *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOTelemetricEntity *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEOTelemetricEntity);
          if (!GEOTelemetricEntityReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addTelemetricEntity:", v18, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18991BF0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTelemetricReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTelemetricReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18991BF6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTelemetricEntityIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2)
          goto LABEL_44;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_39;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_41;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_41;
          }
LABEL_39:
          a1[*v4] = 1;
          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOLogMsgEventThermalPressureReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  _BOOL8 v59;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (2)
      {
        if (!v3[*v6])
        {
          v8 = 0;
          v9 = 0;
          v10 = 0;
          while (1)
          {
            v11 = *v4;
            v12 = *(_QWORD *)&v3[v11];
            v13 = v12 + 1;
            if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
              break;
            v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
            *(_QWORD *)&v3[v11] = v13;
            v10 |= (unint64_t)(v14 & 0x7F) << v8;
            if ((v14 & 0x80) == 0)
              goto LABEL_13;
            v8 += 7;
            v15 = v9++ >= 9;
            if (v15)
            {
              v10 = 0;
              v16 = v3[*v6];
              goto LABEL_15;
            }
          }
          v3[*v6] = 1;
LABEL_13:
          v16 = v3[*v6];
          if (v3[*v6])
            v10 = 0;
LABEL_15:
          v17 = v10 & 7;
          if (!v16 && v17 != 4)
          {
            switch((v10 >> 3))
            {
              case 1u:
                v19 = 0;
                v20 = 0;
                v21 = 0;
                *(_BYTE *)(a1 + 48) |= 8u;
                while (1)
                {
                  v22 = *v4;
                  v23 = *(_QWORD *)&v3[v22];
                  v24 = v23 + 1;
                  if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                    break;
                  v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                  *(_QWORD *)&v3[v22] = v24;
                  v21 |= (unint64_t)(v25 & 0x7F) << v19;
                  if ((v25 & 0x80) == 0)
                    goto LABEL_64;
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (v15)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_66;
                  }
                }
                v3[*v6] = 1;
LABEL_64:
                if (v3[*v6])
                  LODWORD(v21) = 0;
LABEL_66:
                v51 = 44;
                goto LABEL_79;
              case 2u:
                if (v17 == 2)
                {
                  if (!PBReaderPlaceMark())
                    goto LABEL_93;
                  while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
                  {
                    v26 = 0;
                    v27 = 0;
                    v28 = 0;
                    while (1)
                    {
                      v29 = *v4;
                      v30 = *(_QWORD *)&v3[v29];
                      v31 = v30 + 1;
                      if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
                        break;
                      v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                      *(_QWORD *)&v3[v29] = v31;
                      v28 |= (unint64_t)(v32 & 0x7F) << v26;
                      if (v32 < 0)
                      {
                        v26 += 7;
                        v15 = v27++ >= 9;
                        if (!v15)
                          continue;
                      }
                      goto LABEL_41;
                    }
                    v3[*v6] = 1;
LABEL_41:
                    PBRepeatedInt32Add();
                  }
                  PBReaderRecallMark();
                }
                else
                {
                  v52 = 0;
                  v53 = 0;
                  v54 = 0;
                  while (1)
                  {
                    v55 = *v4;
                    v56 = *(_QWORD *)&v3[v55];
                    v57 = v56 + 1;
                    if (v56 == -1 || v57 > *(_QWORD *)&v3[*v5])
                      break;
                    v58 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v56);
                    *(_QWORD *)&v3[v55] = v57;
                    v54 |= (unint64_t)(v58 & 0x7F) << v52;
                    if (v58 < 0)
                    {
                      v52 += 7;
                      v15 = v53++ >= 9;
                      if (!v15)
                        continue;
                    }
                    goto LABEL_91;
                  }
                  v3[*v6] = 1;
LABEL_91:
                  PBRepeatedInt32Add();
                }
LABEL_80:
                if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
                  break;
                continue;
              case 3u:
                v33 = 0;
                v34 = 0;
                v21 = 0;
                *(_BYTE *)(a1 + 48) |= 4u;
                while (2)
                {
                  v35 = *v4;
                  v36 = *(_QWORD *)&v3[v35];
                  v37 = v36 + 1;
                  if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
                  {
                    v3[*v6] = 1;
                  }
                  else
                  {
                    v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                    *(_QWORD *)&v3[v35] = v37;
                    v21 |= (unint64_t)(v38 & 0x7F) << v33;
                    if (v38 < 0)
                    {
                      v33 += 7;
                      v15 = v34++ >= 9;
                      if (v15)
                      {
                        LODWORD(v21) = 0;
                        goto LABEL_70;
                      }
                      continue;
                    }
                  }
                  break;
                }
                if (v3[*v6])
                  LODWORD(v21) = 0;
LABEL_70:
                v51 = 40;
                goto LABEL_79;
              case 4u:
                v39 = 0;
                v40 = 0;
                v21 = 0;
                *(_BYTE *)(a1 + 48) |= 2u;
                while (2)
                {
                  v41 = *v4;
                  v42 = *(_QWORD *)&v3[v41];
                  v43 = v42 + 1;
                  if (v42 == -1 || v43 > *(_QWORD *)&v3[*v5])
                  {
                    v3[*v6] = 1;
                  }
                  else
                  {
                    v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v42);
                    *(_QWORD *)&v3[v41] = v43;
                    v21 |= (unint64_t)(v44 & 0x7F) << v39;
                    if (v44 < 0)
                    {
                      v39 += 7;
                      v15 = v40++ >= 9;
                      if (v15)
                      {
                        LODWORD(v21) = 0;
                        goto LABEL_74;
                      }
                      continue;
                    }
                  }
                  break;
                }
                if (v3[*v6])
                  LODWORD(v21) = 0;
LABEL_74:
                v51 = 36;
                goto LABEL_79;
              case 5u:
                v45 = 0;
                v46 = 0;
                v21 = 0;
                *(_BYTE *)(a1 + 48) |= 1u;
                while (2)
                {
                  v47 = *v4;
                  v48 = *(_QWORD *)&v3[v47];
                  v49 = v48 + 1;
                  if (v48 == -1 || v49 > *(_QWORD *)&v3[*v5])
                  {
                    v3[*v6] = 1;
                  }
                  else
                  {
                    v50 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v48);
                    *(_QWORD *)&v3[v47] = v49;
                    v21 |= (unint64_t)(v50 & 0x7F) << v45;
                    if (v50 < 0)
                    {
                      v45 += 7;
                      v15 = v46++ >= 9;
                      if (v15)
                      {
                        LODWORD(v21) = 0;
                        goto LABEL_78;
                      }
                      continue;
                    }
                  }
                  break;
                }
                if (v3[*v6])
                  LODWORD(v21) = 0;
LABEL_78:
                v51 = 32;
LABEL_79:
                *(_DWORD *)(a1 + v51) = v21;
                goto LABEL_80;
              default:
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_93;
                goto LABEL_80;
            }
          }
        }
        break;
      }
    }
    v59 = v3[*v6] == 0;
  }
  else
  {
LABEL_93:
    v59 = 0;
  }
  objc_sync_exit(v3);

  return v59;
}

void sub_18991DC94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventThermalPressureReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventThermalPressureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18991DCF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18991E964(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventThrottleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  void *v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  __int16 v85;
  char v86;
  int v87;
  __int16 v88;
  void *v89;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int16 *)(a1 + 88) >> 9) & 1)
      + (HIBYTE(*(unsigned __int16 *)(a1 + 88)) & 1)
      + ((*(unsigned __int16 *)(a1 + 88) >> 10) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_152;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_152:
      if ((v12 & 1) != 0)
      {
        v86 = 1;
        goto LABEL_154;
      }
      if (v13)
      {
        while (1)
        {
          v87 = *v13++;
          v88 = 512;
          switch(v87)
          {
            case 0:
              goto LABEL_162;
            case 2:
              goto LABEL_161;
            case 3:
              v88 = 256;
              goto LABEL_161;
            case 8:
              v88 = 1024;
LABEL_161:
              *(_WORD *)(a1 + 88) |= v88;
              break;
            default:
              continue;
          }
        }
      }
LABEL_162:
      v3 = *(_BYTE *)(v3 + *v15) == 0;
      if ((v12 & 1) != 0)
        goto LABEL_163;
      return v3;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (1)
        {
          v36 = *v14;
          v37 = *(_QWORD *)(v3 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(v3 + *v6))
            break;
          v39 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v37);
          *(_QWORD *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0)
            goto LABEL_113;
          v33 += 7;
          v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_115;
          }
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_113:
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_115:
        v84 = 60;
        goto LABEL_140;
      case 2:
        if (!v28)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 88) & 0x200) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 24;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_166;
        v85 = *(_WORD *)(a1 + 88) << 6;
        goto LABEL_149;
      case 3:
        if (!v28)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 88) & 0x100) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 16;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_166;
        v85 = *(_WORD *)(a1 + 88) << 7;
        goto LABEL_149;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v42 = 0;
        v43 = 0;
        v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x80u;
        while (2)
        {
          v44 = *v14;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v35 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              v24 = v43++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_119:
        v84 = 84;
        goto LABEL_140;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v49 = 0;
        v50 = 0;
        v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x40u;
        while (2)
        {
          v51 = *v14;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v35 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v24 = v50++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_123:
        v84 = 80;
        goto LABEL_140;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v55 = 0;
        v56 = 0;
        v35 = 0;
        *(_WORD *)(a1 + 88) |= 8u;
        while (2)
        {
          v57 = *v14;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v35 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v24 = v56++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_127:
        v84 = 68;
        goto LABEL_140;
      case 8:
        if (!v28)
          goto LABEL_110;
        if ((*(_WORD *)(a1 + 88) & 0x400) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 40;
LABEL_81:
          v61 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          v15 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
LABEL_141:
          if (!(v12 & 1 | (v9 != 0)))
            goto LABEL_152;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v85 = 32 * *(_WORD *)(a1 + 88);
LABEL_149:
          v9 += v85 >> 15;
          v15 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_141;
        }
LABEL_166:
        v86 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_154:
        *(_WORD *)(a1 + 88) |= 0x200u;
        *(_WORD *)(a1 + 88) |= 0x100u;
        *(_WORD *)(a1 + 88) |= 0x400u;
        if ((v86 & 1) != 0)
          goto LABEL_162;
        v3 = 0;
        if ((v12 & 1) == 0)
          return v3;
LABEL_163:
        v89 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v62 = 0;
        v63 = 0;
        v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x10u;
        while (2)
        {
          v64 = *v14;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v35 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              v24 = v63++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_131:
        v84 = 72;
        goto LABEL_140;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v68 = 0;
        v69 = 0;
        v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x20u;
        while (2)
        {
          v70 = *v14;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v35 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v24 = v69++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_135:
        v84 = 76;
        goto LABEL_140;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_110;
        v74 = 0;
        v75 = 0;
        v35 = 0;
        *(_WORD *)(a1 + 88) |= 4u;
        while (2)
        {
          v76 = *v14;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v35 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              v24 = v75++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_139:
        v84 = 64;
LABEL_140:
        *(_DWORD *)(a1 + v84) = v35;
        goto LABEL_141;
      case 12:
        if ((v8 & 1) != 0)
        {
          *(_WORD *)(a1 + 88) |= 1u;
          v80 = *v14;
          v81 = *(_QWORD *)(v3 + v80);
          if (v81 <= 0xFFFFFFFFFFFFFFF7 && v81 + 8 <= *(_QWORD *)(v3 + *v6))
          {
            v82 = *(_QWORD *)(*(_QWORD *)(v3 + *v16) + v81);
            *(_QWORD *)(v3 + v80) = v81 + 8;
          }
          else
          {
            *(_BYTE *)(v3 + *v15) = 1;
            v82 = 0;
          }
          *(_QWORD *)(a1 + 32) = v82;
        }
        else
        {
LABEL_110:
          v83 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v83 & 1) == 0)
          {
LABEL_165:
            v86 = 0;
            goto LABEL_154;
          }
        }
        goto LABEL_141;
      default:
        v48 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v48)
          goto LABEL_165;
        goto LABEL_141;
    }
  }
}

void sub_18991F464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18991F954(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899209C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventThrottleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventThrottleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventThrottleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventThrottleReadAllFrom_initialTag;
  Specified = GEOLogMsgEventThrottleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189920B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventThrottleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventThrottleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189920BB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189920E68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventThrottleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_WORD *)(a1 + 88) & 0xF00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1899213CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189921BB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTileCacheAnalyticReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  int *v36;
  GEOCacheHit *v37;
  uint64_t v38;
  void *v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;
  BOOL v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = v14 == 0;
  if (v12)
    v15 = 1;
  v46 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_64;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v22 = 0;
LABEL_28:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_64:
      if (v13)
      {
        v41 = 1;
        goto LABEL_73;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v43 = *v14++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + v18[829]) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_74;
    }
    v30 = v22 >> 3;
    v31 = v13;
    if (!v46)
    {
      v32 = v14;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 != 2)
    {
      if ((_DWORD)v30 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_72;
        goto LABEL_55;
      }
      if (v31)
      {
        if ((*(_BYTE *)(a1 + v18[829]) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_72;
          v7 -= *(_BYTE *)(a1 + v18[829]) & 1;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_72;
          v36 = v17;
          v37 = objc_alloc_init(GEOCacheHit);
          if (!GEOCacheHitReadAllFrom((uint64_t)v37, (void *)v3))
            goto LABEL_79;
          PBReaderRecallMark();
          v38 = 16;
LABEL_51:
          v39 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v7;
          v17 = v36;
          v18 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
        }
LABEL_55:
        if (v7)
          v40 = 1;
        else
          v40 = v13;
        if ((v40 & 1) == 0)
          goto LABEL_64;
        continue;
      }
LABEL_54:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_72;
      goto LABEL_55;
    }
    break;
  }
  if (!v31)
    goto LABEL_54;
  if ((*(_BYTE *)(a1 + v18[829]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_72:
      v41 = 0;
      goto LABEL_73;
    }
    v7 += *(unsigned __int8 *)(a1 + v18[829]) << 30 >> 31;
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_72;
  v36 = v17;
  v37 = objc_alloc_init(GEOCacheMiss);
  if (GEOCacheMissReadAllFrom(v37, (void *)v3))
  {
    PBReaderRecallMark();
    v38 = 24;
    goto LABEL_51;
  }
LABEL_79:

  v41 = 0;
  v17 = v36;
  v18 = &OBJC_IVAR___GEORPRapResponse__displayDetails;
LABEL_73:
  *(_BYTE *)(a1 + v18[829]) |= 1u;
  *(_BYTE *)(a1 + v18[829]) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_74:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (!v13)
      return v3;
    goto LABEL_75;
  }
  v3 = 0;
  if (v13)
  {
LABEL_75:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189922134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899225A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTileCacheAnalyticReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventTileCacheAnalyticReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventTileCacheAnalyticReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventTileCacheAnalyticReadAllFrom_initialTag;
  Specified = GEOLogMsgEventTileCacheAnalyticReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18992275C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTileCacheAnalyticReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTileCacheAnalyticReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899227BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189922938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTileCacheAnalyticIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189922BBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTileSetStateReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            *(_BYTE *)(a1 + 36) |= 1u;
            v18 = *v4;
            v19 = *(_QWORD *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v19);
              *(_QWORD *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v32 = 8;
            goto LABEL_48;
          case 2u:
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            break;
          case 3u:
            *(_BYTE *)(a1 + 36) |= 4u;
            v28 = *v4;
            v29 = *(_QWORD *)&v3[v28];
            if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v29);
              *(_QWORD *)&v3[v28] = v29 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v32 = 24;
            goto LABEL_48;
          case 4u:
            *(_BYTE *)(a1 + 36) |= 2u;
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v20 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v20 = 0;
            }
            v32 = 16;
LABEL_48:
            *(_QWORD *)(a1 + v32) = v20;
            continue;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_51;
            continue;
        }
        while (1)
        {
          v24 = *v4;
          v25 = *(_QWORD *)&v3[v24];
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
            break;
          v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
          *(_QWORD *)&v3[v24] = v26;
          v23 |= (unint64_t)(v27 & 0x7F) << v21;
          if ((v27 & 0x80) == 0)
            goto LABEL_39;
          v21 += 7;
          v15 = v22++ >= 9;
          if (v15)
          {
            LODWORD(v23) = 0;
            goto LABEL_41;
          }
        }
        v3[*v6] = 1;
LABEL_39:
        if (v3[*v6])
          LODWORD(v23) = 0;
LABEL_41:
        *(_DWORD *)(a1 + 32) = v23;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_51:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_1899238A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTileSetStateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTileSetStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189923904(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveHypothesisReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BOOL8 v54;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 0x20u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_63;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_65;
              }
            }
            v3[*v6] = 1;
LABEL_63:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_65:
            v52 = 44;
            goto LABEL_78;
          case 2u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 0x10u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_69:
            v52 = 40;
            goto LABEL_78;
          case 3u:
            v31 = 0;
            v32 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 0x40u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_73:
            v52 = 48;
            goto LABEL_78;
          case 4u:
            v37 = 0;
            v38 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 56) |= 0x80u;
            break;
          case 5u:
            *(_BYTE *)(a1 + 56) |= 2u;
            v43 = *v4;
            v44 = *(_QWORD *)&v3[v43];
            if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v45 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v44);
              *(_QWORD *)&v3[v43] = v44 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v45 = 0;
            }
            v53 = 16;
            goto LABEL_87;
          case 6u:
            *(_BYTE *)(a1 + 56) |= 8u;
            v46 = *v4;
            v47 = *(_QWORD *)&v3[v46];
            if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v45 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v47);
              *(_QWORD *)&v3[v46] = v47 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v45 = 0;
            }
            v53 = 32;
            goto LABEL_87;
          case 7u:
            *(_BYTE *)(a1 + 56) |= 1u;
            v48 = *v4;
            v49 = *(_QWORD *)&v3[v48];
            if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v45 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v49);
              *(_QWORD *)&v3[v48] = v49 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v45 = 0;
            }
            v53 = 8;
            goto LABEL_87;
          case 8u:
            *(_BYTE *)(a1 + 56) |= 4u;
            v50 = *v4;
            v51 = *(_QWORD *)&v3[v50];
            if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v45 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v51);
              *(_QWORD *)&v3[v50] = v51 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v45 = 0;
            }
            v53 = 24;
LABEL_87:
            *(_QWORD *)(a1 + v53) = v45;
            continue;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_90;
            continue;
        }
        while (1)
        {
          v39 = *v4;
          v40 = *(_QWORD *)&v3[v39];
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)&v3[*v5])
            break;
          v42 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v40);
          *(_QWORD *)&v3[v39] = v41;
          v20 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0)
            goto LABEL_75;
          v37 += 7;
          v15 = v38++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_77;
          }
        }
        v3[*v6] = 1;
LABEL_75:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_77:
        v52 = 52;
LABEL_78:
        *(_DWORD *)(a1 + v52) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v54 = v3[*v6] == 0;
  }
  else
  {
LABEL_90:
    v54 = 0;
  }
  objc_sync_exit(v3);

  return v54;
}

void sub_189925620(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveHypothesisReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTimeToLeaveHypothesisReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189925680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveInitialTravelTimeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_30;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189926804(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveInitialTravelTimeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTimeToLeaveInitialTravelTimeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189926864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189926C40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTransitAppLaunchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOLatLng *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  int v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  char v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v52 = (v15 == 0) | v10 | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_70;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_70:
      if ((v16 & 1) != 0)
      {
        v46 = 1;
        goto LABEL_81;
      }
      if (v15)
      {
        while (1)
        {
          v47 = *v15++;
          v48 = 2;
          switch(v47)
          {
            case 0:
              goto LABEL_82;
            case 1:
              goto LABEL_76;
            case 2:
              v48 = 8;
              goto LABEL_76;
            case 3:
              v48 = 4;
LABEL_76:
              *(_BYTE *)(a1 + 60) |= v48;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_82;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v52 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v36;

          --v7;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_78;
        v45 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_65;
      case 2:
        if (!v31)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_78;
          v45 = 16 * *(_BYTE *)(a1 + 60);
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_78;
        v51 = (int)v16;
        v16 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3))
          goto LABEL_79;
        PBReaderRecallMark();
        v39 = 32;
        goto LABEL_52;
      case 3:
        if (!v31)
          goto LABEL_57;
        if ((*(_BYTE *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_78:
            v46 = 0;
            goto LABEL_80;
          }
          v45 = 32 * *(_BYTE *)(a1 + 60);
LABEL_65:
          v7 += v45 >> 7;
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_78;
        v51 = (int)v16;
        v16 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          v39 = 24;
LABEL_52:
          v40 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v16;

          --v7;
          LODWORD(v16) = v51;
LABEL_66:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_69:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_70;
          continue;
        }
LABEL_79:

        v46 = 0;
        LOBYTE(v16) = v51;
LABEL_80:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 4u;
        if ((v46 & 1) != 0)
        {
LABEL_82:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_83;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_83:
            v49 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v8 & 1) != 0)
        {
          *(_BYTE *)(a1 + 60) |= 1u;
          v41 = *v17;
          v42 = *(_QWORD *)(v3 + v41);
          if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(_QWORD *)(v3 + *v6))
          {
            v43 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v42);
            *(_QWORD *)(v3 + v41) = v42 + 8;
          }
          else
          {
            *(_BYTE *)(v3 + *v18) = 1;
            v43 = 0;
          }
          *(_QWORD *)(a1 + 40) = v43;
        }
        else
        {
LABEL_57:
          v44 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v44 & 1) == 0)
          {
LABEL_77:
            v46 = 0;
            goto LABEL_81;
          }
        }
        goto LABEL_69;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_77;
        goto LABEL_69;
    }
  }
}

void sub_189927340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189927480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189927A58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTransitAppLaunchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventTransitAppLaunchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventTransitAppLaunchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventTransitAppLaunchReadAllFrom_initialTag;
  Specified = GEOLogMsgEventTransitAppLaunchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189927C10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTransitAppLaunchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTransitAppLaunchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189927C70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189927E2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTransitAppLaunchIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1899281B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTripDepartureFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(_BYTE *)(a1 + 28) |= 2u;
          v26 = *v4;
          v27 = *(_QWORD *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v28 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v27);
            *(_QWORD *)&v3[v26] = v27 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v28 = 0;
          }
          v31 = 16;
        }
        else
        {
          if ((_DWORD)v18 != 2)
          {
            if ((_DWORD)v18 == 1)
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              *(_BYTE *)(a1 + 28) |= 4u;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if ((v25 & 0x80) == 0)
                  goto LABEL_38;
                v19 += 7;
                v15 = v20++ >= 9;
                if (v15)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_40;
                }
              }
              v3[*v6] = 1;
LABEL_38:
              if (v3[*v6])
                LODWORD(v21) = 0;
LABEL_40:
              *(_DWORD *)(a1 + 24) = v21;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_48;
            }
            continue;
          }
          *(_BYTE *)(a1 + 28) |= 1u;
          v29 = *v4;
          v30 = *(_QWORD *)&v3[v29];
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v28 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v30 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v28 = 0;
          }
          v31 = 8;
        }
        *(_QWORD *)(a1 + v31) = v28;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_189928F04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTripDepartureFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTripDepartureFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189928F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18992960C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventUserActionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int *v13;
  GEOLogMsgEventUserActionModuleInfo *v14;
  int *v15;
  int *v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  void *v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  int v62;
  char v63;
  void *v64;
  int v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFCFFFBFFFALL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (((v12 | v8) & 1) != 0)
    v13 = 0;
  else
    v13 = a3;
  LODWORD(v14) = v12;
  v67 = (v13 == 0) | v12;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_105;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v15;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v20 = 0;
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_105:
      if ((v14 & 1) != 0)
      {
        v61 = 1;
        goto LABEL_116;
      }
      if (v13)
      {
        while (1)
        {
          v62 = *v13++;
          v63 = 32;
          switch(v62)
          {
            case 0:
              goto LABEL_117;
            case 1:
              goto LABEL_112;
            case 2:
              v63 = 64;
              goto LABEL_112;
            case 5:
              v63 = 16;
              goto LABEL_112;
            case 7:
              v63 = 8;
LABEL_112:
              *(_BYTE *)(a1 + 72) |= v63;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_117;
    }
    v28 = v20 >> 3;
    v29 = (char)v14;
    if ((v67 & 1) == 0)
    {
      v30 = v13;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 32;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v60 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_102;
      case 2:
        if (!v29)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 72) & 0x40) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 40;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v60 = 2 * *(_BYTE *)(a1 + 72);
        goto LABEL_102;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 72) |= 4u;
        while (2)
        {
          v40 = *v15;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v41);
            *(_QWORD *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              v25 = v38++ >= 9;
              if (v25)
              {
                LODWORD(v39) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v39) = 0;
LABEL_84:
        v59 = 68;
        goto LABEL_93;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v44 = 0;
        v45 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 72) |= 2u;
        while (2)
        {
          v46 = *v15;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v39 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              v25 = v45++ >= 9;
              if (v25)
              {
                LODWORD(v39) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v39) = 0;
LABEL_88:
        v59 = 64;
        goto LABEL_93;
      case 5:
        if (!v29)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_114;
          v60 = 8 * *(_BYTE *)(a1 + 72);
LABEL_102:
          v7 += v60 >> 7;
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v66 = (int)v14;
        v14 = objc_alloc_init(GEOLogMsgEventUserActionModuleInfo);
        if (GEOLogMsgEventUserActionModuleInfoReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          v50 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v14;

          --v7;
          LODWORD(v14) = v66;
LABEL_103:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_104:
          if (!(v14 & 1 | (v7 != 0)))
            goto LABEL_105;
          continue;
        }

        v61 = 0;
        LOBYTE(v14) = v66;
LABEL_115:
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_116:
        *(_BYTE *)(a1 + 72) |= 0x20u;
        *(_BYTE *)(a1 + 72) |= 0x40u;
        *(_BYTE *)(a1 + 72) |= 0x10u;
        *(_BYTE *)(a1 + 72) |= 8u;
        if ((v61 & 1) != 0)
        {
LABEL_117:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if ((v14 & 1) != 0)
            goto LABEL_118;
        }
        else
        {
          v3 = 0;
          if ((v14 & 1) != 0)
          {
LABEL_118:
            v64 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v51 = 0;
        v52 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v53 = *v15;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v39 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v25 = v52++ >= 9;
              if (v25)
              {
                LODWORD(v39) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          LODWORD(v39) = 0;
LABEL_92:
        v59 = 60;
LABEL_93:
        *(_DWORD *)(a1 + v59) = v39;
        goto LABEL_104;
      case 7:
        if (!v29)
        {
LABEL_79:
          v58 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & 1) == 0)
          {
LABEL_113:
            v61 = 0;
            goto LABEL_116;
          }
          goto LABEL_104;
        }
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
LABEL_78:
          v57 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          --v7;
          goto LABEL_103;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_114:
          v61 = 0;
          goto LABEL_115;
        }
        v60 = 16 * *(_BYTE *)(a1 + 72);
        goto LABEL_102;
      default:
        v36 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_113;
        goto LABEL_104;
    }
  }
}

void sub_189929EA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1899330C8: too complex function (funcsize=7799)"

void sub_18993BF94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18993C3D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "189941FF4: too complex function (funcsize=11119)"

void sub_18994EB0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventUserActionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventUserActionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventUserActionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventUserActionReadAllFrom_initialTag;
  Specified = GEOLogMsgEventUserActionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18994ECB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventUserActionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventUserActionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18994ED10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventUserActionModuleInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_18994F128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventUserActionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 72) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18994F514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventUserActionModuleInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189950A00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventUserActionModuleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventUserActionModuleInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189950A60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189950F34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgEventVLFUsageReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  int v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  char v59;
  uint64_t v60;
  __int16 v61;
  char v62;
  int v63;
  __int16 v64;
  void *v65;
  GEOVLFEntryPoint *v67;
  char v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 116);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 112));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(unsigned __int16 *)(a1 + 136);
  v12 = ((v11 >> 4) & 1)
      + ((v11 >> 9) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFF6FFF4FFF8FFF5) & 0xFF01FF01FF01FF01))+ ((v11 >> 5) & 1)+ ((v11 >> 7) & 1)+ ((v11 >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v15 = v12 > 6;
        v16 = v10 | v15;
        if ((((v10 | v15) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v69 = (v17 == 0) | v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v68 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        v13 = v9;
        v14 = v10;
LABEL_8:
        ++v7;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_144;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_144:
      if ((v16 & 1) != 0)
      {
        v62 = 1;
        goto LABEL_160;
      }
      if (v17)
      {
        while (1)
        {
          v63 = *v17++;
          v64 = 256;
          switch(v63)
          {
            case 0:
              goto LABEL_161;
            case 1:
              goto LABEL_156;
            case 3:
              v64 = 2048;
              goto LABEL_156;
            case 5:
              v64 = 4096;
              goto LABEL_156;
            case 8:
              v64 = 1024;
              goto LABEL_156;
            case 9:
              v64 = 32;
              goto LABEL_156;
            case 10:
              v64 = 128;
              goto LABEL_156;
            case 11:
              v64 = 64;
              goto LABEL_156;
            case 12:
              v64 = 512;
              goto LABEL_156;
            case 13:
              v64 = 16;
LABEL_156:
              *(_WORD *)(a1 + 136) |= v64;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_161;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if ((v69 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 136) & 0x100) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_159;
          v67 = objc_alloc_init(GEOVLFEntryPoint);
          if (GEOVLFEntryPointReadAllFrom((uint64_t)v67, (void *)v3))
          {
            PBReaderRecallMark();
            v37 = 72;
            goto LABEL_113;
          }
          goto LABEL_158;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_159;
        v61 = *(_WORD *)(a1 + 136) << 7;
        goto LABEL_141;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_114;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 136) |= 4u;
        while (2)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v28 = v40++ >= 9;
              if (v28)
              {
                LODWORD(v41) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_119:
        v60 = 128;
        goto LABEL_128;
      case 3:
        if (!v32 || (*(_WORD *)(a1 + 136) & 0x800) != 0)
          goto LABEL_114;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFLocalizationDetails);
        if (!GEOVLFLocalizationDetailsReadAllFrom((uint64_t)v67, (void *)v3, v9 & 1))
          goto LABEL_158;
        PBReaderRecallMark();
        -[GEOLogMsgEventVLFUsage _addNoFlagsLocalizationDetails:](a1, v67);
        goto LABEL_97;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_114;
        v46 = 0;
        v47 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 136) |= 2u;
        while (2)
        {
          v48 = *v18;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v41 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v28 = v47++ >= 9;
              if (v28)
              {
                LODWORD(v41) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_123:
        v60 = 124;
        goto LABEL_128;
      case 5:
        if (!v32)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 136) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_159;
          v61 = 8 * *(_WORD *)(a1 + 136);
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFCorrection);
        if (!GEOVLFCorrectionReadAllFrom((uint64_t)v67, (void *)v3))
          goto LABEL_158;
        PBReaderRecallMark();
        v37 = 104;
        goto LABEL_113;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_114;
        v52 = 0;
        v53 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 136) |= 8u;
        while (2)
        {
          v54 = *v18;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v41 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v28 = v53++ >= 9;
              if (v28)
              {
                LODWORD(v41) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_127:
        v60 = 132;
LABEL_128:
        *(_DWORD *)(a1 + v60) = v41;
        goto LABEL_143;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_114;
        if (!PBReaderPlaceMark()
          || (GEOVLFPositionContextClassificationReadAllFrom(a1 + 16, v3) & 1) == 0)
        {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        *(_WORD *)(a1 + 136) |= 1u;
        goto LABEL_142;
      case 8:
        if (!v32)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 136) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_159;
          v61 = 32 * *(_WORD *)(a1 + 136);
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFInitializationFailureDetails);
        if (!GEOVLFInitializationFailureDetailsReadAllFrom((uint64_t)v67, (void *)v3))
          goto LABEL_158;
        PBReaderRecallMark();
        v37 = 88;
        goto LABEL_113;
      case 9:
        if (!v32 || (*(_WORD *)(a1 + 136) & 0x20) != 0)
          goto LABEL_114;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFARState);
        if (!GEOVLFARStateReadAllFrom((uint64_t)v67, (void *)v3))
          goto LABEL_158;
        PBReaderRecallMark();
        -[GEOLogMsgEventVLFUsage _addNoFlagsArState:](a1, v67);
        goto LABEL_97;
      case 10:
        if (!v32 || (*(_WORD *)(a1 + 136) & 0x80) != 0)
          goto LABEL_114;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFDeviceOrientation);
        if (!GEOVLFDeviceOrientationReadAllFrom((uint64_t)v67, (void *)v3))
          goto LABEL_158;
        PBReaderRecallMark();
        -[GEOLogMsgEventVLFUsage _addNoFlagsDeviceOrientation:](a1, v67);
LABEL_97:

        goto LABEL_142;
      case 11:
        if (!v32)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 136) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_159;
          v61 = *(_WORD *)(a1 + 136) << 9;
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFCrowdsourcingDetails);
        if (!GEOVLFCrowdsourcingDetailsReadAllFrom((uint64_t)v67, (void *)v3, v9 & 1))
          goto LABEL_158;
        PBReaderRecallMark();
        v37 = 56;
        goto LABEL_113;
      case 12:
        if (!v32)
          goto LABEL_114;
        if ((*(_WORD *)(a1 + 136) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_159;
          v61 = *(_WORD *)(a1 + 136) << 6;
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFLocation);
        if (!GEOVLFLocationReadAllFrom((uint64_t)v67, (void *)v3))
          goto LABEL_158;
        PBReaderRecallMark();
        v37 = 80;
        goto LABEL_113;
      case 13:
        if (!v32)
        {
LABEL_114:
          v59 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v16 = v68;
          if ((v59 & 1) == 0)
          {
LABEL_157:
            v62 = 0;
            goto LABEL_160;
          }
LABEL_143:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_144;
          continue;
        }
        if ((*(_WORD *)(a1 + 136) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_159;
          v61 = *(_WORD *)(a1 + 136) << 11;
LABEL_141:
          v7 += v61 >> 15;
LABEL_142:
          v16 = v68;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_143;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_159;
        v67 = objc_alloc_init(GEOVLFARFailureTypes);
        if (GEOVLFARFailureTypesReadAllFrom((uint64_t)v67, (void *)v3))
        {
          PBReaderRecallMark();
          v37 = 40;
LABEL_113:
          v58 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v67;

          --v7;
          goto LABEL_142;
        }
LABEL_158:

LABEL_159:
        v62 = 0;
        v16 = v68;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_160:
        *(_WORD *)(a1 + 136) |= 0x100u;
        *(_WORD *)(a1 + 136) |= 0x800u;
        *(_WORD *)(a1 + 136) |= 0x1000u;
        *(_WORD *)(a1 + 136) |= 0x400u;
        *(_WORD *)(a1 + 136) |= 0x20u;
        *(_WORD *)(a1 + 136) |= 0x80u;
        *(_WORD *)(a1 + 136) |= 0x40u;
        *(_WORD *)(a1 + 136) |= 0x200u;
        *(_WORD *)(a1 + 136) |= 0x10u;
        if ((v62 & 1) != 0)
        {
LABEL_161:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_162;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_162:
            v65 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v16 = v68;
        if (!v38)
          goto LABEL_157;
        goto LABEL_143;
    }
  }
}

void sub_189951C50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189952158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995239C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899524E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189952814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189952B48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189952C8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189952DD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189954058(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventVLFUsageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[9], "readAll:", 1);
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v2 = a1[12];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v27;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v27 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v7 = a1[6];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v23;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v23 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v22, v31, 16);
    }
    while (v9);
  }

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v12 = a1[8];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v19;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v19 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v18);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v18, v30, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  return objc_msgSend(a1[5], "readAll:", 1);
}

uint64_t GEOLogMsgEventVLFUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 116))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventVLFUsageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 116) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventVLFUsageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventVLFUsageReadAllFrom_initialTag;
  Specified = GEOLogMsgEventVLFUsageReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventVLFUsageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_189954488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgEventVLFUsageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventVLFUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899544E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFEntryPointIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOVLFLocalizationDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOVLFTileDetailsIsValid(a1))
            goto LABEL_69;
          goto LABEL_74;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v24 = 0;
          break;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFLocalizationAlgorithmDetailsIsValid(a1))
            goto LABEL_74;
          goto LABEL_69;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFSuccessDetailsIsValid(a1))
            goto LABEL_74;
          goto LABEL_69;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFFailureDetailsIsValid(a1))
            goto LABEL_74;
          goto LABEL_69;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFGravityVectorIsValid(a1))
            goto LABEL_74;
          goto LABEL_69;
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFLocationIsValid(a1))
            goto LABEL_74;
          goto LABEL_69;
        case 9u:
          if (v16 != 1)
            goto LABEL_74;
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_65;
          v31 = v30 + 8;
          if (v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_65;
          *(_QWORD *)&a1[v29] = v31;
          continue;
        case 0xAu:
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOVLFPositionContextClassificationIsValid(a1))
          {
            goto LABEL_74;
          }
LABEL_69:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_74:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        v27 = v26 + 1;
        if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
          break;
        v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
        *(_QWORD *)&a1[v25] = v27;
        if (v28 < 0)
        {
          v23 = v24++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_70;
      }
LABEL_41:
      v14 = *v4;
LABEL_65:
      a1[v14] = 1;
LABEL_70:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOVLFCorrectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

uint64_t GEOVLFPositionContextClassificationIsValid(void *a1)
{
  uint64_t AllFrom;
  _QWORD v4[5];

  v4[3] = objc_msgSend(a1, "position");
  v4[4] = objc_msgSend(a1, "length");
  memset(v4, 0, 24);
  AllFrom = GEOVLFPositionContextClassificationReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOVLFInitializationFailureDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2)
          goto LABEL_44;
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_39;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_41;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_44;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_41;
          }
LABEL_39:
          a1[*v4] = 1;
          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOVLFARStateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOVLFDeviceOrientationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOVLFCrowdsourcingDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  unint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  _BOOL8 v63;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 1)
            goto LABEL_20;
          if (v16 != 2 || !PBReaderPlaceMark())
            goto LABEL_112;
          while (1)
          {
            v21 = (unint64_t *)&a1[*v2];
            v22 = *v21;
            v23 = *(_QWORD *)&a1[*v3];
            if (*v21 >= v23)
              break;
            v24 = *v4;
            if (a1[v24])
              break;
            if (v22 > 0xFFFFFFFFFFFFFFF7 || (v25 = v22 + 8, v25 > v23))
              a1[v24] = 1;
            else
              *v21 = v25;
          }
          goto LABEL_51;
        case 2u:
          if (v16 == 1)
            goto LABEL_20;
          if (v16 != 2 || !PBReaderPlaceMark())
            goto LABEL_112;
          while (1)
          {
            v26 = (unint64_t *)&a1[*v2];
            v27 = *v26;
            v28 = *(_QWORD *)&a1[*v3];
            if (*v26 >= v28)
              break;
            v29 = *v4;
            if (a1[v29])
              break;
            if (v27 > 0xFFFFFFFFFFFFFFF7 || (v30 = v27 + 8, v30 > v28))
              a1[v29] = 1;
            else
              *v26 = v30;
          }
          goto LABEL_51;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFSLAMTrackIsValid(a1))
            goto LABEL_112;
          goto LABEL_51;
        case 4u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOVLFFrameDetailsIsValid(a1))
            goto LABEL_51;
          goto LABEL_112;
        case 5u:
          if (v16 == 1)
            goto LABEL_20;
          if (v16 != 2 || !PBReaderPlaceMark())
            goto LABEL_112;
          while (1)
          {
            v31 = (unint64_t *)&a1[*v2];
            v32 = *v31;
            v33 = *(_QWORD *)&a1[*v3];
            if (*v31 >= v33)
              break;
            v34 = *v4;
            if (a1[v34])
              break;
            if (v32 > 0xFFFFFFFFFFFFFFF7 || (v35 = v32 + 8, v35 > v33))
              a1[v34] = 1;
            else
              *v31 = v35;
          }
          goto LABEL_51;
        case 6u:
        case 7u:
        case 8u:
          if (v16 == 1)
            goto LABEL_20;
          goto LABEL_112;
        case 9u:
          if (v16 != 1)
          {
            if (v16 != 2 || !PBReaderPlaceMark())
              goto LABEL_112;
            while (1)
            {
              v36 = (unint64_t *)&a1[*v2];
              v37 = *v36;
              v38 = *(_QWORD *)&a1[*v3];
              if (*v36 >= v38)
                break;
              v39 = *v4;
              if (a1[v39])
                break;
              if (v37 > 0xFFFFFFFFFFFFFFF7 || (v40 = v37 + 8, v40 > v38))
                a1[v39] = 1;
              else
                *v36 = v40;
            }
            goto LABEL_51;
          }
LABEL_20:
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_96;
          v20 = v19 + 8;
          goto LABEL_22;
        case 0xAu:
          if (v16 == 5)
          {
            v18 = *v2;
            v57 = *(_QWORD *)&a1[v18];
            if (v57 > 0xFFFFFFFFFFFFFFFBLL)
              goto LABEL_96;
            v20 = v57 + 4;
LABEL_22:
            if (v20 > *(_QWORD *)&a1[*v3])
LABEL_96:
              a1[v14] = 1;
            else
              *(_QWORD *)&a1[v18] = v20;
          }
          else
          {
            if (v16 != 2 || !PBReaderPlaceMark())
            {
LABEL_112:
              PBReaderRecallMark();
              return 0;
            }
            while (1)
            {
              v41 = (unint64_t *)&a1[*v2];
              v42 = *v41;
              v43 = *(_QWORD *)&a1[*v3];
              if (*v41 >= v43)
                break;
              v44 = *v4;
              if (a1[v44])
                break;
              if (v42 > 0xFFFFFFFFFFFFFFFBLL || (v45 = v42 + 4, v45 > v43))
                a1[v44] = 1;
              else
                *v41 = v45;
            }
LABEL_51:
            PBReaderRecallMark();
          }
LABEL_97:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_110;
          break;
        case 0xBu:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_112;
            while (1)
            {
              v46 = *v2;
              v47 = *(_QWORD *)&a1[v46];
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
                break;
              v49 = *(char *)(*(_QWORD *)&a1[*v5] + v47);
              *(_QWORD *)&a1[v46] = v48;
              if (v49 < 0)
              {
                v50 = v16++;
                if (v50 <= 8)
                  continue;
              }
              goto LABEL_97;
            }
LABEL_94:
            v14 = *v4;
            goto LABEL_96;
          }
          if (!PBReaderPlaceMark())
            goto LABEL_112;
LABEL_100:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v58 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v59 = *v2;
              v60 = *(_QWORD *)&a1[v59];
              v61 = v60 + 1;
              if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                break;
              v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
              *(_QWORD *)&a1[v59] = v61;
              if (v62 < 0)
              {
                v13 = v58++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_100;
            }
            a1[*v4] = 1;
          }
          goto LABEL_51;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v51 = 0;
          while (1)
          {
            v52 = *v2;
            v53 = *(_QWORD *)&a1[v52];
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)&a1[*v3])
              goto LABEL_94;
            v55 = *(char *)(*(_QWORD *)&a1[*v5] + v53);
            *(_QWORD *)&a1[v52] = v54;
            if (v55 < 0 && v51++ <= 8)
              continue;
            goto LABEL_97;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_112;
          goto LABEL_97;
      }
    }
  }
LABEL_110:
  v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEOVLFLocationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
            goto LABEL_32;
          goto LABEL_54;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOECEFCoordinateIsValid(a1))
            goto LABEL_54;
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 3u:
        case 4u:
        case 5u:
          if (v16 != 1)
            goto LABEL_54;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_50;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_50;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_51;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v27 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_51;
      }
LABEL_49:
      v14 = *v4;
LABEL_50:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOVLFARFailureTypesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_189956420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventVLFUsageIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  v2 = *(_WORD *)(a1 + 136);
  if ((v2 & 0x3DA0) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if ((GEOVLFCrowdsourcingDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 136);
  }
  if ((v2 & 0x210) != 0)
    return 1;
  if ((v2 & 0x800) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 96);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOVLFLocalizationDetailsIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

uint64_t GEOVLFPositionContextClassificationWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 20);
  if ((v2 & 4) != 0)
  {
    result = PBDataWriterWriteInt32Field();
    v2 = *(_BYTE *)(v1 + 20);
    if ((v2 & 1) == 0)
    {
LABEL_3:
      if ((v2 & 2) == 0)
        return result;
      return PBDataWriterWriteDoubleField();
    }
  }
  else if ((*(_BYTE *)(result + 20) & 1) == 0)
  {
    goto LABEL_3;
  }
  result = PBDataWriterWriteDoubleField();
  if ((*(_BYTE *)(v1 + 20) & 2) != 0)
    return PBDataWriterWriteDoubleField();
  return result;
}

os_unfair_lock_s *GEOLogMsgEventVLFUsageIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgEventVLFUsageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189956F68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFPositionContextClassificationEquals(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL GEOLogMsgEventWifiConnectionQualityProbeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOWiFiConnectionQuality *v20;
  void *v21;
  _BOOL8 v22;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOWiFiConnectionQuality);
          if (!GEOWiFiConnectionQualityReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v20;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_189957CB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventWifiConnectionQualityProbeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventWifiConnectionQualityProbeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189957D18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189958094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64x2_t v12;
  int8x16_t v13;
  uint32x4_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  int *v19;
  BOOL v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOLogMsgStateDeviceBase *v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  void *v56;
  BOOL v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 480));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 476);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 472));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_QWORD *)(a1 + 488);
  v12 = (uint64x2_t)vdupq_n_s64(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = (uint32x4_t)vdupq_n_s32(v11);
  *(int32x2_t *)v14.i8 = vadd_s32(vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFE8FFFFFFFFLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFACB0)), (int8x8_t)0x100000001)), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFACD0)),
                                                (int8x8_t)0x100000001),
                                   (int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFE2FFFFFFF0), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFACE0)), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 41, v11 >> 19), (int8x8_t)0x100000001)))), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CCD150)),
                                              (int8x8_t)0x100000001),
                                 vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFEAFFFFFFFELL), (int8x8_t)0x100000001), vadd_s32((int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 49, v11 >> 11), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 37, v11 >> 7), (int8x8_t)0x100000001)))), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFACF0)), (int8x8_t)0x100000001),
                                   (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 9, v11 >> 54), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFECFFFFFFE9), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 33, v11 >> 25), (int8x8_t)0x100000001))))), vadd_s32((int32x2_t)__PAIR64__((v11 >> 17) & 1, vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32(
                                                                          (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAC70), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFAC60)), v13), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CFAC80), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CFAC90), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CFACA0), v13)))), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_189CFACC0)), (int8x8_t)0x100000001)));
  v15 = vadd_s32(*(int32x2_t *)v14.i8, vdup_lane_s32(*(int32x2_t *)v14.i8, 1)).u32[0]
      + ((v11 >> 21) & 1)
      + ((v11 >> 8) & 1)
      + ((v11 >> 55) & 1)
      + ((v11 >> 15) & 1)
      + (BYTE4(v11) & 1)
      + ((v11 >> 46) & 1)
      + ((v11 >> 29) & 1)
      + ((v11 >> 39) & 1)
      + ((v11 >> 36) & 1)
      + (v11 >> 31);
  while (2)
  {
    v16 = 1;
    v17 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v16 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v18 = v10 | (v15 > 0x2C);
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = v18;
        v59 = (v19 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v58 = v18;
        break;
      default:
        ++v15;
LABEL_6:
        v16 = v9;
        v17 = v10;
LABEL_8:
        ++v7;
        v9 = v16;
        v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_464;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_23;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_23:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_25:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_464:
      if (v20)
      {
        *(_QWORD *)(a1 + 488) |= 0x3FFFFFFFFFFFFFEuLL;
      }
      else if (v19)
      {
        while (1)
        {
          v54 = *v19++;
          v53 = v54;
          if (v54 <= 600)
          {
            if (v53 <= 300)
            {
              v55 = 0x1000000000000;
              switch(v53)
              {
                case 0:
                  goto LABEL_535;
                case 1:
                  goto LABEL_534;
                case 2:
                  v55 = 0x200000000000000;
                  goto LABEL_534;
                case 3:
                  v55 = 2;
                  goto LABEL_534;
                case 4:
                  v55 = 0x80000000000;
                  goto LABEL_534;
                case 5:
                  v55 = 0x40000000000;
                  goto LABEL_534;
                case 6:
                  v55 = 0x20000000000000;
                  goto LABEL_534;
                case 7:
                  v55 = 0x800000000;
                  goto LABEL_534;
                case 8:
                  v55 = 0x800000000000;
                  goto LABEL_534;
                case 9:
                  v55 = 0x10000;
                  goto LABEL_534;
                case 10:
                  v55 = 0x80000;
                  goto LABEL_534;
                case 11:
                  v55 = 0x8000000000000;
                  goto LABEL_534;
                case 12:
                  v55 = 4;
                  goto LABEL_534;
                case 13:
                  v55 = 0x200000000000;
                  goto LABEL_534;
                default:
                  if (v53 != 201)
                    continue;
                  v55 = 4096;
                  goto LABEL_534;
              }
            }
            switch(v53)
            {
              case 401:
                v55 = 1024;
                break;
              case 402:
                v55 = 0x2000;
                break;
              case 403:
                v55 = 2048;
                break;
              case 404:
                v55 = 128;
                break;
              case 405:
                v55 = 0x4000000000;
                break;
              case 406:
                v55 = 0x40000;
                break;
              case 407:
                v55 = 0x4000;
                break;
              default:
                switch(v53)
                {
                  case 501:
                    v55 = 0x8000000;
                    goto LABEL_534;
                  case 502:
                    v55 = 0x4000000;
                    goto LABEL_534;
                  case 503:
                    v55 = 0x40000000000000;
                    goto LABEL_534;
                  case 504:
                    v55 = 0x800000;
                    goto LABEL_534;
                  case 505:
                    v55 = 0x2000000;
                    goto LABEL_534;
                  case 506:
                    v55 = 0x1000000;
                    goto LABEL_534;
                  default:
                    if (v53 != 301)
                      continue;
                    v55 = 8;
                    break;
                }
                break;
            }
          }
          else
          {
            switch(v53)
            {
              case 702:
                v55 = 0x10000000000;
                break;
              case 703:
                v55 = 0x100000000000;
                break;
              case 704:
              case 711:
              case 712:
                continue;
              case 705:
                v55 = 0x40000000;
                break;
              case 706:
                v55 = 0x10000000000000;
                break;
              case 707:
                v55 = 0x20000000000;
                break;
              case 708:
                v55 = 0x400000000;
                break;
              case 709:
                v55 = 0x400000;
                break;
              case 710:
                v55 = 0x2000000000000;
                break;
              case 713:
                v55 = 0x2000000000;
                break;
              case 714:
                v55 = 0x4000000000000;
                break;
              case 715:
                v55 = 512;
                break;
              case 716:
                v55 = 0x100000;
                break;
              case 717:
                v55 = 0x200000000;
                break;
              case 718:
                v55 = 0x200000;
                break;
              case 719:
                v55 = 256;
                break;
              case 720:
                v55 = 0x80000000000000;
                break;
              case 721:
                v55 = 0x8000;
                break;
              case 722:
                v55 = 0x100000000;
                break;
              case 723:
                v55 = 0x400000000000;
                break;
              case 724:
                v55 = 0x10000000;
                break;
              case 725:
                v55 = 0x80000000;
                break;
              case 726:
                v55 = 16;
                break;
              case 727:
                v55 = 64;
                break;
              case 728:
                v55 = 32;
                break;
              case 729:
                v55 = 0x20000000;
                break;
              case 730:
                v55 = 0x8000000000;
                break;
              case 731:
                v55 = 0x1000000000;
                break;
              default:
                if (v53 == 601)
                {
                  v55 = 0x100000000000000;
                }
                else
                {
                  if (v53 != 602)
                    continue;
                  v55 = 0x20000;
                }
                break;
            }
          }
LABEL_534:
          *(_QWORD *)(a1 + 488) |= v55;
        }
      }
LABEL_535:
      v3 = *(_BYTE *)(v3 + *v22) == 0;
      if (!v20)
        return v3;
      goto LABEL_536;
    }
    v34 = v26 >> 3;
    v35 = v20;
    if ((v59 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((int)v34 <= 600)
    {
      if ((int)v34 > 300)
      {
        switch((int)v34)
        {
          case 401:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 489) & 4) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 53;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateDeviceBase);
            if (!GEOLogMsgStateDeviceBaseReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 88;
            goto LABEL_341;
          case 402:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 489) & 0x20) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 50;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateDeviceLocale);
            if (!GEOLogMsgStateDeviceLocaleReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 112;
            goto LABEL_341;
          case 403:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 489) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 52;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateDeviceConnection);
            if (!GEOLogMsgStateDeviceConnectionReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 96;
            goto LABEL_341;
          case 404:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 488) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 56;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateCarPlay);
            if (!GEOLogMsgStateCarPlayReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 64;
            goto LABEL_341;
          case 405:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 492) & 0x40) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 25;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStatePairedDevice);
            if (!GEOLogMsgStatePairedDeviceReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 312;
            goto LABEL_341;
          case 406:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 490) & 4) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 45;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateExtension);
            if (!GEOLogMsgStateExtensionReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 152;
            goto LABEL_341;
          case 407:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 489) & 0x40) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 49;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateDeviceSettings);
            if (!GEOLogMsgStateDeviceSettingsReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 120;
            break;
          default:
            switch((int)v34)
            {
              case 501:
                if (!v35)
                  goto LABEL_342;
                if ((*(_BYTE *)(a1 + 491) & 8) != 0)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_539;
                  v52 = *(_QWORD *)(a1 + 488) << 36;
                  goto LABEL_462;
                }
                if ((PBReaderPlaceMark() & 1) == 0)
                  goto LABEL_539;
                v42 = objc_alloc_init(GEOLogMsgStateMapView);
                if (!GEOLogMsgStateMapViewReadAllFrom((uint64_t)v42, (void *)v3))
                  goto LABEL_538;
                PBReaderRecallMark();
                v43 = 224;
                goto LABEL_341;
              case 502:
                if (!v35)
                  goto LABEL_342;
                if ((*(_BYTE *)(a1 + 491) & 4) != 0)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_539;
                  v52 = *(_QWORD *)(a1 + 488) << 37;
                  goto LABEL_462;
                }
                if ((PBReaderPlaceMark() & 1) == 0)
                  goto LABEL_539;
                v42 = objc_alloc_init(GEOLogMsgStateMapViewLocation);
                if (!GEOLogMsgStateMapViewLocationReadAllFrom((uint64_t)v42, (void *)v3))
                  goto LABEL_538;
                PBReaderRecallMark();
                v43 = 216;
                goto LABEL_341;
              case 503:
                if (!v35)
                  goto LABEL_342;
                if ((*(_BYTE *)(a1 + 494) & 0x40) != 0)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_539;
                  v52 = *(_QWORD *)(a1 + 488) << 9;
                  goto LABEL_462;
                }
                if ((PBReaderPlaceMark() & 1) == 0)
                  goto LABEL_539;
                v42 = objc_alloc_init(GEOLogMsgStateTransit);
                if (!GEOLogMsgStateTransitReadAllFrom((uint64_t)v42, (void *)v3))
                  goto LABEL_538;
                PBReaderRecallMark();
                v43 = 440;
                goto LABEL_341;
              case 504:
                if (!v35)
                  goto LABEL_342;
                if ((*(_BYTE *)(a1 + 490) & 0x80) != 0)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_539;
                  v52 = *(_QWORD *)(a1 + 488) << 40;
                  goto LABEL_462;
                }
                if ((PBReaderPlaceMark() & 1) == 0)
                  goto LABEL_539;
                v42 = objc_alloc_init(GEOLogMsgStateMapSettings);
                if (!GEOLogMsgStateMapSettingsReadAllFrom(v42, (void *)v3))
                  goto LABEL_538;
                PBReaderRecallMark();
                v43 = 192;
                goto LABEL_341;
              case 505:
                if (!v35)
                  goto LABEL_342;
                if ((*(_BYTE *)(a1 + 491) & 2) != 0)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_539;
                  v52 = *(_QWORD *)(a1 + 488) << 38;
                  goto LABEL_462;
                }
                if ((PBReaderPlaceMark() & 1) == 0)
                  goto LABEL_539;
                v42 = objc_alloc_init(GEOLogMsgStateMapUI);
                if (!GEOLogMsgStateMapUIReadAllFrom((uint64_t)v42, (void *)v3))
                  goto LABEL_538;
                PBReaderRecallMark();
                v43 = 208;
                goto LABEL_341;
              case 506:
                if (!v35)
                  goto LABEL_342;
                if ((*(_BYTE *)(a1 + 491) & 1) != 0)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_539;
                  v52 = *(_QWORD *)(a1 + 488) << 39;
                  goto LABEL_462;
                }
                if ((PBReaderPlaceMark() & 1) == 0)
                  goto LABEL_539;
                v42 = objc_alloc_init(GEOLogMsgStateMapUIShown);
                if (!GEOLogMsgStateMapUIShownReadAllFrom((uint64_t)v42, (void *)v3))
                  goto LABEL_538;
                PBReaderRecallMark();
                v43 = 200;
                break;
              default:
                if ((_DWORD)v34 != 301)
                  goto LABEL_81;
                if (!v35)
                  goto LABEL_342;
                if ((*(_BYTE *)(a1 + 488) & 8) != 0)
                {
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_539;
                  v52 = *(_QWORD *)(a1 + 488) << 60;
                  goto LABEL_462;
                }
                if ((PBReaderPlaceMark() & 1) == 0)
                  goto LABEL_539;
                v42 = objc_alloc_init(GEOLogMsgStateApplicationIdentifier);
                if (!GEOLogMsgStateApplicationIdentifierReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
                  goto LABEL_538;
                PBReaderRecallMark();
                v43 = 32;
                goto LABEL_341;
            }
            goto LABEL_341;
        }
      }
      else
      {
        switch((int)v34)
        {
          case 1:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 494) & 1) == 0)
            {
              PBReaderReadString();
              v40 = objc_claimAutoreleasedReturnValue();
              v41 = *(void **)(a1 + 392);
              *(_QWORD *)(a1 + 392) = v40;

              --v7;
              goto LABEL_463;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_539;
            v52 = *(_QWORD *)(a1 + 488) << 15;
            goto LABEL_462;
          case 2:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 495) & 2) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 6;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateUser);
            if (!GEOLogMsgStateUserReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 464;
            goto LABEL_341;
          case 3:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 488) & 2) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 62;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateAccount);
            if (!GEOLogMsgStateAccountReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 16;
            goto LABEL_341;
          case 4:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 493) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 20;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateRAP);
            if (!GEOLogMsgStateRAPReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 352;
            goto LABEL_341;
          case 5:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 493) & 4) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 21;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStatePlaceSummaryLayout);
            if (!GEOLogMsgStatePlaceSummaryLayoutReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 344;
            goto LABEL_341;
          case 6:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 494) & 0x20) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 10;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateTransitStep);
            if (!GEOLogMsgStateTransitStepReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 432;
            goto LABEL_341;
          case 7:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 492) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 28;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateNearbyTransit);
            if (!GEOLogMsgStateNearbyTransitReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 288;
            goto LABEL_341;
          case 8:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 493) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 16;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateSearchResults);
            if (!GEOLogMsgStateSearchResultsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 384;
            goto LABEL_341;
          case 9:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 490) & 1) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 47;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateElementImpression);
            if (!GEOLogMsgStateElementImpressionReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 136;
            goto LABEL_341;
          case 10:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 490) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 44;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateImpressionObject);
            if (!GEOLogMsgStateImpressionObjectReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 160;
            goto LABEL_341;
          case 11:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 494) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 12;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateTapEvent);
            if (!GEOLogMsgStateTapEventReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 416;
            goto LABEL_341;
          case 12:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 488) & 4) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 61;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateActionButtonDetails);
            if (!GEOLogMsgStateActionButtonDetailsReadAllFrom(v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 24;
            goto LABEL_341;
          case 13:
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 493) & 0x20) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 18;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateRoutingWaypoints);
            if (!GEOLogMsgStateRoutingWaypointsReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 368;
            break;
          default:
            if ((_DWORD)v34 == 99)
            {
              if ((v8 & 1) == 0)
                goto LABEL_342;
              v44 = 0;
              v45 = 0;
              v46 = 0;
              *(_QWORD *)(a1 + 488) |= 1uLL;
              while (1)
              {
                v47 = *v21;
                v48 = *(_QWORD *)(v3 + v47);
                v49 = v48 + 1;
                if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                  break;
                v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v48);
                *(_QWORD *)(v3 + v47) = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if ((v50 & 0x80) == 0)
                  goto LABEL_345;
                v44 += 7;
                v31 = v45++ >= 9;
                if (v31)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_347;
                }
              }
              *(_BYTE *)(v3 + *v22) = 1;
LABEL_345:
              if (*(_BYTE *)(v3 + *v22))
                LODWORD(v46) = 0;
LABEL_347:
              *(_DWORD *)(a1 + 484) = v46;
              goto LABEL_463;
            }
            if ((_DWORD)v34 != 201)
              goto LABEL_81;
            if (!v35)
              goto LABEL_342;
            if ((*(_BYTE *)(a1 + 489) & 0x10) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_539;
              v52 = *(_QWORD *)(a1 + 488) << 51;
              goto LABEL_462;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_539;
            v42 = objc_alloc_init(GEOLogMsgStateDeviceIdentifier);
            if (!GEOLogMsgStateDeviceIdentifierReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
              goto LABEL_538;
            PBReaderRecallMark();
            v43 = 104;
            goto LABEL_341;
        }
      }
      goto LABEL_341;
    }
    switch((int)v34)
    {
      case 702:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 493) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 23;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStatePlaceCard);
        if (!GEOLogMsgStatePlaceCardReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 328;
        goto LABEL_341;
      case 703:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 493) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 19;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateRoute);
        if (!GEOLogMsgStateRouteReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 360;
        goto LABEL_341;
      case 704:
      case 711:
      case 712:
        goto LABEL_81;
      case 705:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 491) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 33;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMapsServer);
        if (!GEOLogMsgStateMapsServerReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 248;
        goto LABEL_341;
      case 706:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 494) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 11;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateTileSet);
        if (!GEOLogMsgStateTileSetReadAllFrom(v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 424;
        goto LABEL_341;
      case 707:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 493) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 22;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStatePlaceRequest);
        if (!GEOLogMsgStatePlaceRequestReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 336;
        goto LABEL_341;
      case 708:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 492) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 29;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateNavigation);
        if (!GEOLogMsgStateNavigationReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 280;
        goto LABEL_341;
      case 709:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 490) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 41;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMapRestore);
        if (!GEOLogMsgStateMapRestoreReadAllFrom(v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 184;
        goto LABEL_341;
      case 710:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 494) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 14;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateSuggestions);
        if (!GEOLogMsgStateSuggestionsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 400;
        goto LABEL_341;
      case 713:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 492) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 26;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateOffline);
        if (!GEOLogMsgStateOfflineReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 304;
        goto LABEL_341;
      case 714:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 494) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 13;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateSummaryLookAroundLog);
        if (!GEOLogMsgStateSummaryLookAroundLogReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 408;
        goto LABEL_341;
      case 715:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 489) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 54;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateDetailLookAroundLog);
        if (!GEOLogMsgStateDetailLookAroundLogReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 80;
        goto LABEL_341;
      case 716:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 490) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 43;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateLookAroundView);
        if (!GEOLogMsgStateLookAroundViewReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 168;
        goto LABEL_341;
      case 717:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 492) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 30;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMuninResource);
        if (!GEOLogMsgStateMuninResourceReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 272;
        goto LABEL_341;
      case 718:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 490) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 42;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMapLaunch);
        if (!GEOLogMsgStateMapLaunchReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 176;
        goto LABEL_341;
      case 719:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 489) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 55;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateCuratedCollection);
        if (!GEOLogMsgStateCuratedCollectionReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 72;
        goto LABEL_341;
      case 720:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 494) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 8;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateUGCPhoto);
        if (!GEOLogMsgStateUGCPhotoReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 448;
        goto LABEL_341;
      case 721:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 489) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 48;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateDirectionsDetail);
        if (!GEOLogMsgStateDirectionsDetailReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 128;
        goto LABEL_341;
      case 722:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 492) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 31;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMarket);
        if (!GEOLogMsgStateMarketReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 264;
        goto LABEL_341;
      case 723:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 493) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 17;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateRoutingSettings);
        if (!GEOLogMsgStateRoutingSettingsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 376;
        goto LABEL_341;
      case 724:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 491) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 35;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMapsFeatures);
        if (!GEOLogMsgStateMapsFeaturesReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 232;
        goto LABEL_341;
      case 725:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 491) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 32;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMapsUserSettings);
        if (!GEOLogMsgStateMapsUserSettingsReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 256;
        goto LABEL_341;
      case 726:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 488) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 59;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateARPPhotoSubmission);
        if (!GEOLogMsgStateARPPhotoSubmissionReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 40;
        goto LABEL_341;
      case 727:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 488) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 57;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateARPRatingSubmission);
        if (!GEOLogMsgStateARPRatingSubmissionReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 56;
        goto LABEL_341;
      case 728:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 488) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 58;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateARPRatingPhotoSubmission);
        if (!GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 48;
        goto LABEL_341;
      case 729:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 491) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 34;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateMapsPlaceIds);
        if (!GEOLogMsgStateMapsPlaceIdsReadAllFrom(v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 240;
        goto LABEL_341;
      case 730:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 492) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 24;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStatePlaceCardRap);
        if (!GEOLogMsgStatePlaceCardRapReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 320;
        goto LABEL_341;
      case 731:
        if (!v35)
          goto LABEL_342;
        if ((*(_BYTE *)(a1 + 492) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 27;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateOfflineDownload);
        if (!GEOLogMsgStateOfflineDownloadReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_538;
        PBReaderRecallMark();
        v43 = 296;
        goto LABEL_341;
      default:
        if ((_DWORD)v34 != 601)
        {
          if ((_DWORD)v34 != 602)
          {
LABEL_81:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_539;
            goto LABEL_463;
          }
          if (!v35)
            goto LABEL_342;
          if ((*(_BYTE *)(a1 + 490) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_539;
            v52 = *(_QWORD *)(a1 + 488) << 46;
LABEL_462:
            v7 += v52 >> 63;
            goto LABEL_463;
          }
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_539;
          v42 = objc_alloc_init(GEOLogMsgStateExperiments);
          if (!GEOLogMsgStateExperimentsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1))
            goto LABEL_538;
          PBReaderRecallMark();
          v43 = 144;
LABEL_341:
          v51 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;

          --v7;
          v20 = v58;
LABEL_463:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v20 && v7 == 0)
            goto LABEL_464;
          continue;
        }
        if (!v35)
        {
LABEL_342:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          goto LABEL_463;
        }
        if ((*(_BYTE *)(a1 + 495) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_539;
          v52 = *(_QWORD *)(a1 + 488) << 7;
          goto LABEL_462;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_539;
        v42 = objc_alloc_init(GEOLogMsgStateUserSession);
        if (GEOLogMsgStateUserSessionReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          v43 = 456;
          goto LABEL_341;
        }
LABEL_538:

        v20 = v58;
LABEL_539:
        v3 = 0;
        *(_QWORD *)(a1 + 488) |= 0x3FFFFFFFFFFFFFEuLL;
        if (v20)
        {
LABEL_536:
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
    }
  }
}

void sub_18995A9EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995AB2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995AC78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995ADC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995AF10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B058(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B1A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B43C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B6CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995C480(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995C5C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995C714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995C860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995C9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995CAF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995CC40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995CD8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995CED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D2B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D548(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D694(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D7E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995DA74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995DBC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995DD0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995DE58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995DFD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E26C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E3B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E500(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E8E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995EA2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995EB78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995ECC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995EE0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995EF58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F0A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F1F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F33C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F5CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995FAF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[58], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  objc_msgSend(a1[44], "readAll:", 1);
  objc_msgSend(a1[43], "readAll:", 1);
  objc_msgSend(a1[54], "readAll:", 1);
  objc_msgSend(a1[36], "readAll:", 1);
  objc_msgSend(a1[48], "readAll:", 1);
  objc_msgSend(a1[17], "readAll:", 1);
  objc_msgSend(a1[20], "readAll:", 1);
  objc_msgSend(a1[52], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[46], "readAll:", 1);
  objc_msgSend(a1[13], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[12], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[39], "readAll:", 1);
  objc_msgSend(a1[19], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[28], "readAll:", 1);
  objc_msgSend(a1[27], "readAll:", 1);
  objc_msgSend(a1[55], "readAll:", 1);
  objc_msgSend(a1[24], "readAll:", 1);
  objc_msgSend(a1[26], "readAll:", 1);
  objc_msgSend(a1[25], "readAll:", 1);
  objc_msgSend(a1[57], "readAll:", 1);
  objc_msgSend(a1[18], "readAll:", 1);
  objc_msgSend(a1[41], "readAll:", 1);
  objc_msgSend(a1[45], "readAll:", 1);
  objc_msgSend(a1[31], "readAll:", 1);
  objc_msgSend(a1[53], "readAll:", 1);
  objc_msgSend(a1[42], "readAll:", 1);
  objc_msgSend(a1[35], "readAll:", 1);
  objc_msgSend(a1[23], "readAll:", 1);
  objc_msgSend(a1[50], "readAll:", 1);
  objc_msgSend(a1[38], "readAll:", 1);
  objc_msgSend(a1[51], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[34], "readAll:", 1);
  objc_msgSend(a1[22], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[56], "readAll:", 1);
  objc_msgSend(a1[16], "readAll:", 1);
  objc_msgSend(a1[33], "readAll:", 1);
  objc_msgSend(a1[47], "readAll:", 1);
  objc_msgSend(a1[29], "readAll:", 1);
  objc_msgSend(a1[32], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[30], "readAll:", 1);
  objc_msgSend(a1[40], "readAll:", 1);
  return objc_msgSend(a1[37], "readAll:", 1);
}

unint64_t GEOLogMsgStateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 476))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 480));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 472) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 476) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateReadAllFrom_initialTag;
  Specified = GEOLogMsgStateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgStateCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 480));
  return Specified;
}

void sub_189963CB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189963D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateUserIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 0xAu:
          if (v16 != 1)
            goto LABEL_53;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_49;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_49;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 5u:
          if (v16 == 2)
            goto LABEL_26;
          goto LABEL_53;
        case 6u:
          if (v16 == 2)
            goto LABEL_26;
          goto LABEL_53;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_50;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v27 = 0;
          break;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_50;
      }
LABEL_48:
      v14 = *v4;
LABEL_49:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgStateRAPIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL8 v32;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_55;
          v24 = 0;
          break;
        case 3u:
          if (v16 == 2)
            goto LABEL_49;
          goto LABEL_55;
        case 4u:
          if (v16 == 2)
            goto LABEL_49;
          goto LABEL_55;
        case 5u:
          if (v16 != 1)
            goto LABEL_55;
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_45;
          v31 = v30 + 8;
          if (v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          *(_QWORD *)&a1[v29] = v31;
          continue;
        case 6u:
          if (v16 == 2)
            goto LABEL_49;
          goto LABEL_55;
        case 7u:
          if (v16 != 2)
            goto LABEL_55;
LABEL_49:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_55:
          v32 = 0;
          goto LABEL_54;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_55;
          continue;
      }
      while (1)
      {
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        v27 = v26 + 1;
        if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
          break;
        v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
        *(_QWORD *)&a1[v25] = v27;
        if (v28 < 0)
        {
          v23 = v24++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_50;
      }
LABEL_37:
      v14 = *v4;
LABEL_45:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
LABEL_54:
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgStatePlaceSummaryLayoutIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_50;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_50;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEODynamicContextHyperlinkDetailsIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_52;
LABEL_39:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v23 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v13 = v23++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0)
          goto LABEL_52;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v15++;
            if (v22 <= 8)
              continue;
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_50;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrailingEntityActionDetailsIsValid(a1))
      goto LABEL_52;
    goto LABEL_35;
  }
LABEL_50:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateTransitStepIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgStateNearbyTransitIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONearbyTransitGroupIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateSearchResultsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_39;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_38;
        }
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((_DWORD)v17 != 1)
        goto LABEL_35;
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOSearchResultIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if (v15 != 2)
      goto LABEL_41;
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_41;
    goto LABEL_38;
  }
LABEL_39:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgStateElementImpressionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOElementDetailsIsValid(a1))
            goto LABEL_26;
          goto LABEL_66;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOImpressionObjectIdIsValid(a1))
            goto LABEL_66;
LABEL_26:
          PBReaderRecallMark();
          continue;
        case 3u:
          if (v15 == 2)
            goto LABEL_28;
          goto LABEL_66;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v33 = 0;
          break;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_66:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOLogMsgStateImpressionObjectIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOImpressionObjectIdIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateTapEventIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOSearchResultIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateActionButtonDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOActionButtonDetailIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateRoutingWaypointsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateDeviceIdentifierIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_52;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_52;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_49;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_48;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_49;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v28 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_52:
          v33 = 0;
          goto LABEL_51;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_49;
      }
LABEL_48:
      a1[*v4] = 1;
LABEL_49:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_51:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateApplicationIdentifierIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_48;
          goto LABEL_34;
        case 2u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_48;
        case 3u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_48;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_44;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_45;
          }
        case 5u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_48;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v23 = 0;
          break;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_48:
          v28 = 0;
          goto LABEL_47;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_45;
      }
LABEL_44:
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateDeviceBaseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateDeviceLocaleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_30;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2)
          goto LABEL_32;
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_32;
        goto LABEL_29;
      }
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2)
          goto LABEL_32;
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v15 != 2)
      goto LABEL_32;
    goto LABEL_26;
  }
LABEL_30:
  v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

BOOL GEOLogMsgStateCarPlayIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCarInfoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStatePairedDeviceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceIdentifierIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v28 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateExtensionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgStateMapViewIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  _BOOL8 v47;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_74;
          PBReaderRecallMark();
          continue;
        case 2u:
        case 4u:
        case 5u:
          if (v16 != 1)
            goto LABEL_74;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_70;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_70;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_71;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_74;
          v42 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_74:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v43 = *v2;
        v44 = *(_QWORD *)&a1[v43];
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
          break;
        v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
        *(_QWORD *)&a1[v43] = v45;
        if (v46 < 0)
        {
          v26 = v42++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_71;
      }
LABEL_69:
      v14 = *v4;
LABEL_70:
      a1[v14] = 1;
LABEL_71:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgStateMapViewLocationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTouristInfoIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOLogMsgStateTransitIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgStateMapUIIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMultiTabsStateIsValid(a1))
            goto LABEL_69;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v38 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOLogMsgStateUserSessionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 4u:
        case 9u:
        case 0xAu:
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1))
            goto LABEL_70;
          goto LABEL_22;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_67;
          }
        case 3u:
        case 5u:
        case 8u:
        case 0xBu:
          if (v16 != 1)
            goto LABEL_70;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_66;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_66;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocalTimeIsValid(a1))
            goto LABEL_70;
LABEL_22:
          PBReaderRecallMark();
          continue;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_67;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_67;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_70;
          v37 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_70:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v26 = v37++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_67;
      }
LABEL_65:
      v14 = *v4;
LABEL_66:
      a1[v14] = 1;
LABEL_67:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

BOOL GEOLogMsgStateExperimentsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOABExperimentAssignmentIsValid(a1))
            goto LABEL_36;
          goto LABEL_39;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOABClientConfigIsValid(a1))
            goto LABEL_39;
          goto LABEL_36;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDatasetABStatusIsValid(a1))
            goto LABEL_39;
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAbAssignInfoIsValid(a1))
            goto LABEL_39;
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_39:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_38;
          break;
      }
    }
  }
LABEL_38:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStatePlaceCardIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  _BOOL8 v73;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPlaceActionDetailsIsValid(a1))
            goto LABEL_69;
          goto LABEL_132;
        case 2u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_132;
            while (1)
            {
              v17 = *v2;
              v18 = *(_QWORD *)&a1[v17];
              v19 = v18 + 1;
              if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
                goto LABEL_97;
              v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
              *(_QWORD *)&a1[v17] = v19;
              if (v20 < 0)
              {
                v21 = v15++;
                if (v21 <= 8)
                  continue;
              }
              goto LABEL_98;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_132;
LABEL_101:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v58 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v59 = *v2;
              v60 = *(_QWORD *)&a1[v59];
              v61 = v60 + 1;
              if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                break;
              v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
              *(_QWORD *)&a1[v59] = v61;
              if (v62 < 0)
              {
                v13 = v58++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_101;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 3u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_132;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
                goto LABEL_97;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0)
              {
                v26 = v15++;
                if (v26 <= 8)
                  continue;
              }
              goto LABEL_98;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_132;
LABEL_111:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v63 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v64 = *v2;
              v65 = *(_QWORD *)&a1[v64];
              v66 = v65 + 1;
              if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
                break;
              v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
              *(_QWORD *)&a1[v64] = v66;
              if (v67 < 0)
              {
                v13 = v63++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_111;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 4u:
          if (v15 == 2)
            goto LABEL_71;
          goto LABEL_132;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_132;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_97;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v32 = v27++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_98;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_132;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_97;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v32 = v33++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_98;
          }
        case 7u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_132:
              PBReaderRecallMark();
              return 0;
            }
LABEL_121:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v68 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v69 = *v2;
                v70 = *(_QWORD *)&a1[v69];
                v71 = v70 + 1;
                if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
                  break;
                v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
                *(_QWORD *)&a1[v69] = v71;
                if (v72 < 0)
                {
                  v13 = v68++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_121;
              }
              a1[*v4] = 1;
            }
LABEL_69:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_132;
            while (1)
            {
              v38 = *v2;
              v39 = *(_QWORD *)&a1[v38];
              v40 = v39 + 1;
              if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
                break;
              v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
              *(_QWORD *)&a1[v38] = v40;
              if (v41 < 0)
              {
                v42 = v15++;
                if (v42 <= 8)
                  continue;
              }
              goto LABEL_98;
            }
LABEL_97:
            a1[*v4] = 1;
          }
LABEL_98:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_130;
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceCardModuleIsValid(a1))
            goto LABEL_132;
          goto LABEL_69;
        case 9u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORevealedPlaceCardModuleIsValid(a1))
            goto LABEL_69;
          goto LABEL_132;
        case 0xAu:
          if (v15 == 2)
            goto LABEL_71;
          goto LABEL_132;
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_132;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_97;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v32 = v43++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_98;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_132;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_97;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v32 = v48++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_98;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_132;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_97;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v32 = v53++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_98;
          }
        default:
LABEL_71:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_132;
          goto LABEL_98;
      }
    }
  }
LABEL_130:
  v73 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v73;
}

BOOL GEOLogMsgStateRouteIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteDetailsIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateMapsServerIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapsServerMetadataIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateTileSetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTileSetInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStatePlaceRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateNavigationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_37;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_47;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v24 = 0;
          break;
        case 3u:
          if (v16 != 1)
            goto LABEL_50;
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_41;
          v31 = v30 + 8;
          if (v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          *(_QWORD *)&a1[v29] = v31;
          continue;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavCameraStateIsValid(a1))
            goto LABEL_50;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        v27 = v26 + 1;
        if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
          break;
        v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
        *(_QWORD *)&a1[v25] = v27;
        if (v28 < 0)
        {
          v23 = v24++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_47;
      }
LABEL_37:
      v14 = *v4;
LABEL_41:
      a1[v14] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgStateMapRestoreIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTargetLayoutIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateSuggestionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_54;
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutoCompleteResultInfoIsValid(a1))
            goto LABEL_54;
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_51;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v28 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_51;
      }
LABEL_50:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateOfflineIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  _BOOL8 v47;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v42 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_73:
          v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        v43 = *v2;
        v44 = *(_QWORD *)&a1[v43];
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
          break;
        v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
        *(_QWORD *)&a1[v43] = v45;
        if (v46 < 0)
        {
          v21 = v42++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgStateSummaryLookAroundLogIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  _BOOL8 v47;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v42 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_73:
          v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        v43 = *v2;
        v44 = *(_QWORD *)&a1[v43];
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
          break;
        v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
        *(_QWORD *)&a1[v43] = v45;
        if (v46 < 0)
        {
          v21 = v42++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgStateDetailLookAroundLogIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1)
            goto LABEL_42;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_38;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_38;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_42;
          v21 = 0;
          break;
        case 3u:
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDetailLookAroundLogRecordIsValid(a1))
            goto LABEL_42;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_42:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v22 = *v2;
        v23 = *(_QWORD *)&a1[v22];
        v24 = v23 + 1;
        if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
          break;
        v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
        *(_QWORD *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8)
          continue;
        goto LABEL_39;
      }
      v14 = *v4;
LABEL_38:
      a1[v14] = 1;
LABEL_39:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateLookAroundViewIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_58;
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_55;
          }
        case 3u:
          if (v16 != 1)
            goto LABEL_58;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_54;
          v26 = v25 + 8;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_54;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v23 = v27++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_55;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_58;
          v32 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_58:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v23 = v32++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_55;
      }
LABEL_53:
      v14 = *v4;
LABEL_54:
      a1[v14] = 1;
LABEL_55:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgStateMuninResourceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateMapLaunchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_56;
          goto LABEL_34;
        case 2u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_56;
        case 3u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_56;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_52;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_53;
          }
        case 5u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_56;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_52;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_53;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_56;
          v28 = 0;
          break;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_56:
          v33 = 0;
          goto LABEL_55;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_53;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_55:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateCuratedCollectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  _BOOL8 v63;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPublisherDetailsIsValid(a1))
            goto LABEL_28;
          goto LABEL_108;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOCollectionDetailsIsValid(a1))
            goto LABEL_28;
          goto LABEL_108;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_108;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_83;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_84;
          }
        case 4u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_108;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                goto LABEL_83;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_84;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_108;
LABEL_87:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v53 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v54 = *v2;
              v55 = *(_QWORD *)&a1[v54];
              v56 = v55 + 1;
              if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
                break;
              v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
              *(_QWORD *)&a1[v54] = v56;
              if (v57 < 0)
              {
                v13 = v53++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_87;
            }
            a1[*v4] = 1;
          }
          goto LABEL_28;
        case 5u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_108:
              PBReaderRecallMark();
              return 0;
            }
LABEL_97:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v58 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v59 = *v2;
                v60 = *(_QWORD *)&a1[v59];
                v61 = v60 + 1;
                if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                  break;
                v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
                *(_QWORD *)&a1[v59] = v61;
                if (v62 < 0)
                {
                  v13 = v58++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_97;
              }
              a1[*v4] = 1;
            }
LABEL_28:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_108;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                break;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_84;
            }
LABEL_83:
            a1[*v4] = 1;
          }
LABEL_84:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_106;
          break;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_108;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_83;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_84;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_108;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_83;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_84;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_108;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_83;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_84;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_108;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_83;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_84;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          goto LABEL_84;
      }
    }
  }
LABEL_106:
  v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEOLogMsgStateUGCPhotoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                break;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v13 = v22++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0)
            goto LABEL_43;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              break;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateDirectionsDetailIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateMarketIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateARPPhotoSubmissionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_66;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v38 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_66:
          v43 = 0;
          goto LABEL_65;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
LABEL_65:
  PBReaderRecallMark();
  return v43;
}

BOOL GEOLogMsgStateARPRatingSubmissionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_54;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_51;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v28 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARPRatingIsValid(a1))
            goto LABEL_54;
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_51;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateARPRatingPhotoSubmissionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_50;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v28 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          v33 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateMapsPlaceIdsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceIdDetailsIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStatePlaceCardRapIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOLogMsgStateOfflineDownloadIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  _BOOL8 v58;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_90;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_86;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_87;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_90;
          v53 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_90:
          v58 = 0;
          goto LABEL_89;
      }
      while (1)
      {
        v54 = *v2;
        v55 = *(_QWORD *)&a1[v54];
        v56 = v55 + 1;
        if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
          break;
        v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
        *(_QWORD *)&a1[v54] = v56;
        if (v57 < 0)
        {
          v22 = v53++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_87;
      }
LABEL_86:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v58 = a1[*v4] == 0;
LABEL_89:
  PBReaderRecallMark();
  return v58;
}

uint64_t _GEOLogMsgStateIsDirty(uint64_t a1)
{
  unint64_t v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 480));
  v2 = *(_QWORD *)(a1 + 488);
  if ((v2 & 0x401000000000000) != 0)
    return 1;
  if ((v2 & 0x200000000000000) != 0)
  {
    if (GEOLogMsgStateUserIsDirty(*(_QWORD *)(a1 + 464)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 2) != 0)
    return 1;
  if ((v2 & 0x80000000000) != 0)
  {
    if (GEOLogMsgStateRAPIsDirty(*(_QWORD *)(a1 + 352)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x40000000000) != 0)
  {
    if (GEOLogMsgStatePlaceSummaryLayoutIsDirty(*(_QWORD *)(a1 + 344)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x20000800000000) != 0)
    return 1;
  if ((v2 & 0x800000000000) != 0)
  {
    if (GEOLogMsgStateSearchResultsIsDirty(*(_QWORD *)(a1 + 384)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEOLogMsgStateElementImpressionIsDirty(*(_QWORD *)(a1 + 136)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x8200000080004) != 0)
    return 1;
  if ((v2 & 0x1000) != 0)
  {
    if (GEOLogMsgStateDeviceIdentifierIsDirty(*(_QWORD *)(a1 + 104)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOLogMsgStateApplicationIdentifierIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x400) != 0)
    return 1;
  if ((v2 & 0x2000) != 0)
  {
    if (GEOLogMsgStateDeviceLocaleIsDirty(*(_QWORD *)(a1 + 112)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEOLogMsgStateDeviceConnectionIsDirty(*(_QWORD *)(a1 + 96)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x14000400F844080) != 0)
    return 1;
  if ((v2 & 0x20000) != 0)
  {
    if ((GEOLogMsgStateExperimentsIsDirty(*(os_unfair_lock_s **)(a1 + 144)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x10000000000) != 0)
  {
    if ((GEOLogMsgStatePlaceCardIsDirty(*(os_unfair_lock_s **)(a1 + 328)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x10120440400000) != 0)
    return 1;
  if ((v2 & 0x2000000000000) != 0)
  {
    if (GEOLogMsgStateSuggestionsIsDirty(*(_QWORD *)(a1 + 400)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x4002000000000) != 0)
    return 1;
  if ((v2 & 0x200) != 0)
  {
    if (GEOLogMsgStateDetailLookAroundLogIsDirty(*(_QWORD *)(a1 + 80)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x200100000) != 0)
    return 1;
  if ((v2 & 0x200000) != 0)
  {
    if (GEOLogMsgStateMapLaunchIsDirty(*(_QWORD *)(a1 + 176)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x100) != 0)
  {
    if ((GEOLogMsgStateCuratedCollectionIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x80000100008000) != 0)
    return 1;
  if ((v2 & 0x400000000000) != 0)
  {
    if (GEOLogMsgStateRoutingSettingsIsDirty(*(_QWORD *)(a1 + 376)))
      return 1;
    v2 = *(_QWORD *)(a1 + 488);
  }
  if ((v2 & 0x90000010) != 0)
    return 1;
  if ((v2 & 0x40) == 0)
    goto LABEL_64;
  if (GEOLogMsgStateARPRatingSubmissionIsDirty(*(_QWORD *)(a1 + 56)))
    return 1;
  v2 = *(_QWORD *)(a1 + 488);
LABEL_64:
  if ((v2 & 0x8020000020) != 0)
    return 1;
  return (v2 >> 36) & 1;
}

os_unfair_lock_s *GEOLogMsgStateIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgStateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 120);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void *GEOLogMsgStatePlaceRequestHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "placeDataRequest");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v3, a2);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void *GEOLogMsgStateLookAroundViewHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "location");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void GEOLogMsgStatePlaceRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasPlaceDataRequest")
    && (objc_msgSend(a1, "placeDataRequest"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "placeDataRequest");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setPlaceDataRequest:", v8);
  }
  else
  {
    objc_msgSend(a1, "placeDataRequest");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void GEOLogMsgStateLookAroundViewClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLocation")
    && (objc_msgSend(a1, "location"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "location");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "location");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_18996D3A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPPhotoSubmissionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  _BOOL8 v57;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = objc_claimAutoreleasedReturnValue();
            v19 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v18;

            continue;
          case 2u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 28) |= 8u;
            while (1)
            {
              v23 = *v4;
              v24 = *(_QWORD *)&v3[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_59;
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                v22 = 0;
                goto LABEL_61;
              }
            }
            v3[*v6] = 1;
LABEL_59:
            if (v3[*v6])
              v22 = 0;
LABEL_61:
            v54 = v22 != 0;
            v55 = 25;
            goto LABEL_70;
          case 3u:
            v27 = 0;
            v28 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 28) |= 4u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    v29 = 0;
                    goto LABEL_65;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v29 = 0;
LABEL_65:
            v54 = v29 != 0;
            v55 = 24;
            goto LABEL_70;
          case 4u:
            v34 = 0;
            v35 = 0;
            v36 = 0;
            *(_BYTE *)(a1 + 28) |= 0x10u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
                *(_QWORD *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  v15 = v35++ >= 9;
                  if (v15)
                  {
                    v36 = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v36 = 0;
LABEL_69:
            v54 = v36 != 0;
            v55 = 26;
LABEL_70:
            *(_BYTE *)(a1 + v55) = v54;
            continue;
          case 5u:
            v41 = 0;
            v42 = 0;
            v43 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (2)
            {
              v44 = *v4;
              v45 = *(_QWORD *)&v3[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v47 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v45);
                *(_QWORD *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  v15 = v42++ >= 9;
                  if (v15)
                  {
                    LODWORD(v43) = 0;
                    goto LABEL_74;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v43) = 0;
LABEL_74:
            v56 = 20;
            goto LABEL_79;
          case 6u:
            v48 = 0;
            v49 = 0;
            v43 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_82;
            continue;
        }
        while (1)
        {
          v50 = *v4;
          v51 = *(_QWORD *)&v3[v50];
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)&v3[*v5])
            break;
          v53 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v51);
          *(_QWORD *)&v3[v50] = v52;
          v43 |= (unint64_t)(v53 & 0x7F) << v48;
          if ((v53 & 0x80) == 0)
            goto LABEL_76;
          v48 += 7;
          v15 = v49++ >= 9;
          if (v15)
          {
            LODWORD(v43) = 0;
            goto LABEL_78;
          }
        }
        v3[*v6] = 1;
LABEL_76:
        if (v3[*v6])
          LODWORD(v43) = 0;
LABEL_78:
        v56 = 16;
LABEL_79:
        *(_DWORD *)(a1 + v56) = v43;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v57 = v3[*v6] == 0;
  }
  else
  {
LABEL_82:
    v57 = 0;
  }
  objc_sync_exit(v3);

  return v57;
}

void sub_18996F7AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPPhotoSubmissionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateARPPhotoSubmissionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18996F80C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  BOOL v41;
  uint64_t v42;
  _BOOL8 v43;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = objc_claimAutoreleasedReturnValue();
            v19 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v18;

            continue;
          case 2u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 20) |= 2u;
            while (1)
            {
              v23 = *v4;
              v24 = *(_QWORD *)&v3[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_45;
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                v22 = 0;
                goto LABEL_47;
              }
            }
            v3[*v6] = 1;
LABEL_45:
            if (v3[*v6])
              v22 = 0;
LABEL_47:
            v41 = v22 != 0;
            v42 = 17;
            goto LABEL_56;
          case 3u:
            v27 = 0;
            v28 = 0;
            v29 = 0;
            *(_BYTE *)(a1 + 20) |= 1u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    v29 = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v29 = 0;
LABEL_51:
            v41 = v29 != 0;
            v42 = 16;
            goto LABEL_56;
          case 4u:
            v34 = 0;
            v35 = 0;
            v36 = 0;
            *(_BYTE *)(a1 + 20) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_59;
            continue;
        }
        while (1)
        {
          v37 = *v4;
          v38 = *(_QWORD *)&v3[v37];
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
            break;
          v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
          *(_QWORD *)&v3[v37] = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0)
            goto LABEL_53;
          v34 += 7;
          v15 = v35++ >= 9;
          if (v15)
          {
            v36 = 0;
            goto LABEL_55;
          }
        }
        v3[*v6] = 1;
LABEL_53:
        if (v3[*v6])
          v36 = 0;
LABEL_55:
        v41 = v36 != 0;
        v42 = 18;
LABEL_56:
        *(_BYTE *)(a1 + v42) = v41;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_1899708B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPRatingPhotoSubmissionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189970918(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189970FF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateARPRatingSubmissionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  int v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  GEOARPRating *v60;
  char v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char v65;
  int v66;
  int v67;
  char v68;
  void *v69;
  BOOL v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 4) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v71 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  v19 = &OBJC_IVAR___GEOTextItemContainer__textItems;
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_97;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v16;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_27;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v22 = 0;
LABEL_29:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_97:
      if (v13)
      {
        v65 = 1;
        goto LABEL_108;
      }
      if (!v14)
        goto LABEL_109;
      while (1)
      {
        v67 = *v14++;
        v66 = v67;
        if (v67 == 1)
          break;
        if (v66 == 5)
        {
          v68 = 16;
LABEL_106:
          *(_BYTE *)(a1 + v19[405]) |= v68;
        }
        else if (!v66)
        {
          goto LABEL_109;
        }
      }
      v68 = 8;
      goto LABEL_106;
    }
    v30 = v22 >> 3;
    v31 = v13;
    if (!v71)
    {
      v32 = v14;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + v19[405]) & 8) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v36;

          --v8;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v8 += *(unsigned __int8 *)(a1 + v19[405]) << 28 >> 31;
        goto LABEL_92;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_75;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + v19[405]) |= 2u;
        while (2)
        {
          v42 = *v16;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v27 = v40++ >= 9;
              if (v27)
              {
                v41 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          v41 = 0;
LABEL_80:
        v62 = v41 != 0;
        v63 = 45;
        goto LABEL_89;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_75;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_BYTE *)(a1 + v19[405]) |= 1u;
        while (2)
        {
          v49 = *v16;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v27 = v47++ >= 9;
              if (v27)
              {
                v48 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          v48 = 0;
LABEL_84:
        v62 = v48 != 0;
        v63 = 44;
        goto LABEL_89;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_75;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_BYTE *)(a1 + v19[405]) |= 4u;
        while (2)
        {
          v56 = *v16;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v27 = v54++ >= 9;
              if (v27)
              {
                v55 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          v55 = 0;
LABEL_88:
        v62 = v55 != 0;
        v63 = 46;
LABEL_89:
        *(_BYTE *)(a1 + v63) = v62;
        goto LABEL_93;
      case 5:
        if (!v31 || (*(_BYTE *)(a1 + v19[405]) & 0x10) != 0)
        {
LABEL_75:
          v61 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v61 & 1) == 0)
          {
LABEL_107:
            v65 = 0;
            goto LABEL_108;
          }
LABEL_93:
          if (v8)
            v64 = 1;
          else
            v64 = v13;
          if ((v64 & 1) == 0)
            goto LABEL_97;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) != 0)
        {
          v60 = objc_alloc_init(GEOARPRating);
          if (!GEOARPRatingReadAllFrom((uint64_t)v60, (void *)v3))
          {

            v65 = 0;
            v19 = &OBJC_IVAR___GEOTextItemContainer__textItems;
            goto LABEL_116;
          }
          PBReaderRecallMark();
          -[GEOLogMsgStateARPRatingSubmission _addNoFlagsRatings:](a1, v60);

          v19 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_92:
          v17 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_93;
        }
LABEL_114:
        v65 = 0;
LABEL_116:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
        *(_BYTE *)(a1 + v19[405]) |= 8u;
        *(_BYTE *)(a1 + v19[405]) |= 0x10u;
        if ((v65 & 1) != 0)
        {
LABEL_109:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_110;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_110:
            v69 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_107;
        goto LABEL_93;
    }
  }
}

void sub_1899718DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899722D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStateARPRatingSubmissionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLogMsgStateARPRatingSubmissionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateARPRatingSubmissionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateARPRatingSubmissionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateARPRatingSubmissionReadAllFrom_initialTag;
  Specified = GEOLogMsgStateARPRatingSubmissionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgStateARPRatingSubmissionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189972558(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateARPRatingSubmissionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateARPRatingSubmissionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899725B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189972858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPRatingSubmissionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 48) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189972D08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1899772D0: too complex function (funcsize=7799)"

#error "1899842C4: too complex function (funcsize=7923)"

BOOL GEOLogMsgStateAccountReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_59;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v26 = 0;
              v27 = 0;
              v28 = 0;
              while (1)
              {
                v29 = *v4;
                v30 = *(_QWORD *)&v3[v29];
                v31 = v30 + 1;
                if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
                  break;
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v28 |= (unint64_t)(v32 & 0x7F) << v26;
                if (v32 < 0)
                {
                  v26 += 7;
                  v15 = v27++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_40;
              }
              v3[*v6] = 1;
LABEL_40:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v33 = 0;
            v34 = 0;
            v35 = 0;
            while (1)
            {
              v36 = *v4;
              v37 = *(_QWORD *)&v3[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
                break;
              v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
              *(_QWORD *)&v3[v36] = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if (v39 < 0)
              {
                v33 += 7;
                v15 = v34++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_56;
            }
            v3[*v6] = 1;
LABEL_56:
            PBRepeatedInt32Add();
          }
        }
        else if ((v10 >> 3) == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_44;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            v21 = 0;
LABEL_46:
          *(_BYTE *)(a1 + 32) = v21 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_59;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18998D6B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateAccountReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateAccountReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18998D714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateActionButtonDetailsReadAllFrom(void *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOActionButtonDetail *v20;
  _BOOL8 v21;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOActionButtonDetail);
          if (!GEOActionButtonDetailReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addActionButtonDetails:", v20, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18998E1C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateActionButtonDetailsReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateActionButtonDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18998E228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998E870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateApplicationIdentifierReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_90;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_90:
      if ((v12 & 1) != 0)
      {
        v53 = 1;
        goto LABEL_100;
      }
      if (v13)
      {
        while (1)
        {
          v54 = *v13++;
          v55 = 4;
          switch(v54)
          {
            case 0:
              goto LABEL_101;
            case 1:
              goto LABEL_97;
            case 2:
              v55 = 8;
              goto LABEL_97;
            case 3:
              v55 = 16;
              goto LABEL_97;
            case 5:
              v55 = 32;
LABEL_97:
              *(_BYTE *)(a1 + 68) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 16;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_87;
      case 2:
        if (!v28)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_87;
      case 3:
        if (!v28)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 32;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v52 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_87;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_69;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v39 = *v14;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v40);
            *(_QWORD *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v24 = v37++ >= 9;
              if (v24)
              {
                v38 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v38 = 0;
LABEL_74:
        *(_BYTE *)(a1 + 64) = v38 != 0;
        goto LABEL_89;
      case 5:
        if (!v28)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 68) & 0x20) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 40;
LABEL_60:
          v43 = *(void **)(a1 + v34);
          *(_QWORD *)(a1 + v34) = v33;

          --v8;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v52 = 4 * *(_BYTE *)(a1 + 68);
LABEL_87:
          v8 += v52 >> 7;
LABEL_88:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_89:
          if (!(v12 & 1 | (v8 != 0)))
            goto LABEL_90;
          continue;
        }
LABEL_99:
        v53 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_100:
        *(_BYTE *)(a1 + 68) |= 4u;
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 0x20u;
        if ((v53 & 1) != 0)
        {
LABEL_101:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_102;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_102:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 6:
        if ((v7 & 1) != 0)
        {
          v44 = 0;
          v45 = 0;
          v46 = 0;
          *(_BYTE *)(a1 + 68) |= 1u;
          while (1)
          {
            v47 = *v14;
            v48 = *(_QWORD *)(v3 + v47);
            v49 = v48 + 1;
            if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
              break;
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if ((v50 & 0x80) == 0)
              goto LABEL_76;
            v44 += 7;
            v24 = v45++ >= 9;
            if (v24)
            {
              LODWORD(v46) = 0;
              goto LABEL_78;
            }
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_76:
          if (*(_BYTE *)(v3 + *v15))
            LODWORD(v46) = 0;
LABEL_78:
          *(_DWORD *)(a1 + 60) = v46;
        }
        else
        {
LABEL_69:
          v51 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
LABEL_98:
            v53 = 0;
            goto LABEL_100;
          }
        }
        goto LABEL_89;
      default:
        v35 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v35)
          goto LABEL_98;
        goto LABEL_89;
    }
  }
}

void sub_18998F000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998F144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998F300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998FC1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateApplicationIdentifierReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateApplicationIdentifierReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateApplicationIdentifierReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateApplicationIdentifierReadAllFrom_initialTag;
  Specified = GEOLogMsgStateApplicationIdentifierReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18998FDA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateApplicationIdentifierReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateApplicationIdentifierReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18998FE08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189990000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateApplicationIdentifierIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 68) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1899903A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateCarPlayReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOCarInfo *v27;
  void *v28;
  _BOOL8 v29;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v27 = objc_alloc_init(GEOCarInfo);
          if (!GEOCarInfoReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          v28 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v27;

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_34;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              v22 = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8])
            v22 = 0;
LABEL_36:
          *(_BYTE *)(a1 + 16) = v22 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v29 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    v29 = 0;
  }
  objc_sync_exit(v5);

  return v29;
}

void sub_189990D94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateCarPlayReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateCarPlayReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189990DF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189991340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateCuratedCollectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const __int16 *v11;
  uint16x4_t v12;
  int16x4_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  int *v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  __int16 v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  char v107;
  int v108;
  __int16 v109;
  void *v110;
  GEOPublisherDetails *v112;
  char v113;
  char v114;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const __int16 *)(a1 + 112);
  v12 = (uint16x4_t)vld1_dup_s16(v11);
  v13 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFBFFFAFFF8FFF9), (int8x8_t)0x1000100010001);
  v13.i16[0] = vaddv_s16(v13);
  v14 = v13.i32[0];
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 2;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_168;
        v114 = (v19 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v113 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_168;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_168:
      if ((v18 & 1) != 0)
      {
        v107 = 1;
        goto LABEL_170;
      }
      if (v19)
      {
        while (1)
        {
          v108 = *v19++;
          v109 = 256;
          switch(v108)
          {
            case 0:
              goto LABEL_179;
            case 1:
              goto LABEL_178;
            case 2:
              v109 = 128;
              goto LABEL_178;
            case 4:
              v109 = 64;
              goto LABEL_178;
            case 5:
              v109 = 32;
LABEL_178:
              *(_WORD *)(a1 + 112) |= v109;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_179;
    }
    v34 = v25 >> 3;
    v35 = v18;
    if ((v114 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 112) & 0x100) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_184;
          v112 = objc_alloc_init(GEOPublisherDetails);
          if (GEOPublisherDetailsReadAllFrom((uint64_t)v112, (void *)v3))
          {
            PBReaderRecallMark();
            v40 = 72;
            goto LABEL_49;
          }
          goto LABEL_183;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_184;
        v92 = *(_WORD *)(a1 + 112) << 7;
        goto LABEL_147;
      case 2:
        if (!v35)
          goto LABEL_120;
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_184;
          v92 = *(_WORD *)(a1 + 112) << 8;
LABEL_147:
          v7 += v92 >> 15;
          goto LABEL_165;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_184;
        v112 = objc_alloc_init(GEOCollectionDetails);
        if (GEOCollectionDetailsReadAllFrom((uint64_t)v112, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v40 = 64;
LABEL_49:
          v42 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v112;

          --v7;
LABEL_165:
          v18 = v113;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_166:
          if (!(v18 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_168;
          continue;
        }
LABEL_183:

LABEL_184:
        v107 = 0;
        v18 = v113;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_170:
        *(_WORD *)(a1 + 112) |= 0x100u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x40u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        if ((v107 & 1) != 0)
        {
LABEL_179:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_180;
          return v3;
        }
        v3 = 0;
        if ((v18 & 1) == 0)
          return v3;
LABEL_180:
        v110 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          v46 = *v20;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v30 = v44++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v45) = 0;
LABEL_125:
        v91 = 100;
        goto LABEL_142;
      case 4:
        if (!v35 || (*(_WORD *)(a1 + 112) & 0x40) != 0)
          goto LABEL_120;
        if (v32 != 2)
        {
          v93 = 0;
          v94 = 0;
          v95 = 0;
          while (1)
          {
            v96 = *v20;
            v97 = *(_QWORD *)(v3 + v96);
            v98 = v97 + 1;
            if (v97 == -1 || v98 > *(_QWORD *)(v3 + *v6))
              goto LABEL_163;
            v99 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v97);
            *(_QWORD *)(v3 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if (v99 < 0)
            {
              v93 += 7;
              v30 = v94++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_164;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_184;
        while (1)
        {
          v50 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_148;
          v51 = 0;
          v52 = 0;
          v53 = 0;
          while (1)
          {
            v54 = *v20;
            v55 = *(_QWORD *)(v3 + v54);
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
              break;
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v30 = v52++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_72;
          }
          *(_BYTE *)(v3 + *v50) = 1;
LABEL_72:
          PBRepeatedInt32Add();
        }
      case 5:
        if (!v35 || (*(_WORD *)(a1 + 112) & 0x20) != 0)
          goto LABEL_120;
        if (v32 != 2)
        {
          v100 = 0;
          v101 = 0;
          v102 = 0;
          while (1)
          {
            v103 = *v20;
            v104 = *(_QWORD *)(v3 + v103);
            v105 = v104 + 1;
            if (v104 == -1 || v105 > *(_QWORD *)(v3 + *v6))
              break;
            v106 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v104);
            *(_QWORD *)(v3 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              v30 = v101++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_164;
          }
LABEL_163:
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_164:
          PBRepeatedInt32Add();
          goto LABEL_165;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_184;
        while (1)
        {
          v58 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v59 = 0;
          v60 = 0;
          v61 = 0;
          while (1)
          {
            v62 = *v20;
            v63 = *(_QWORD *)(v3 + v62);
            v64 = v63 + 1;
            if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
              break;
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v30 = v60++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_87;
          }
          *(_BYTE *)(v3 + *v58) = 1;
LABEL_87:
          PBRepeatedInt32Add();
        }
LABEL_148:
        PBReaderRecallMark();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v113;
        goto LABEL_166;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v66 = 0;
        v67 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          v68 = *v20;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v45 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v30 = v67++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v45) = 0;
LABEL_129:
        v91 = 108;
        goto LABEL_142;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v72 = 0;
        v73 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v74 = *v20;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v45 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              v30 = v73++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v45) = 0;
LABEL_133:
        v91 = 92;
        goto LABEL_142;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_120;
        v78 = 0;
        v79 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v80 = *v20;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v45 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              v30 = v79++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v45) = 0;
LABEL_137:
        v91 = 96;
        goto LABEL_142;
      case 9:
        if ((v8 & 1) != 0)
        {
          v84 = 0;
          v85 = 0;
          v45 = 0;
          *(_WORD *)(a1 + 112) |= 8u;
          while (1)
          {
            v86 = *v20;
            v87 = *(_QWORD *)(v3 + v86);
            v88 = v87 + 1;
            if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v6))
              break;
            v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v87);
            *(_QWORD *)(v3 + v86) = v88;
            v45 |= (unint64_t)(v89 & 0x7F) << v84;
            if ((v89 & 0x80) == 0)
              goto LABEL_139;
            v84 += 7;
            v30 = v85++ >= 9;
            if (v30)
            {
              LODWORD(v45) = 0;
              goto LABEL_141;
            }
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_139:
          if (*(_BYTE *)(v3 + *v21))
            LODWORD(v45) = 0;
LABEL_141:
          v91 = 104;
LABEL_142:
          *(_DWORD *)(a1 + v91) = v45;
        }
        else
        {
LABEL_120:
          v90 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v113;
          if ((v90 & 1) == 0)
          {
LABEL_182:
            v107 = 0;
            goto LABEL_170;
          }
        }
        goto LABEL_166;
      default:
        v41 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v113;
        if (!v41)
          goto LABEL_182;
        goto LABEL_166;
    }
  }
}

void sub_18999200C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999247C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1899966F4: too complex function (funcsize=7799)"

void sub_18999F5BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1899A3834: too complex function (funcsize=7799)"

#error "1899B4C68: too big function (funcsize=0)"

void sub_1899C70E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateCuratedCollectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateCuratedCollectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateCuratedCollectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateCuratedCollectionReadAllFrom_initialTag;
  Specified = GEOLogMsgStateCuratedCollectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 64), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1899C7298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateCuratedCollectionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateCuratedCollectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899C72F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_50;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_50;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_52;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              break;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_49;
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v28 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              break;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v13 = v28++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_50;
    }
    if ((v8 & 7) != 0)
      goto LABEL_52;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_37;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0 && v22++ <= 8)
        continue;
      goto LABEL_49;
    }
  }
LABEL_50:
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_1899C7894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateCuratedCollectionIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0x300) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEOCollectionDetailsIsDirty(*(_QWORD *)(a1 + 64)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 112);
  }
  if ((v2 & 0x40) != 0)
    return 1;
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEOLogMsgStateCuratedCollectionIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgStateCuratedCollectionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1899C7DEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C8584(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDetailLookAroundLogReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  BOOL v13;
  int *v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  GEOLogMsgStateDetailLookAroundLogRecord *v46;
  char v47;
  int v48;
  int v49;
  char v50;
  void *v51;
  BOOL v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v7 != 0;
  if (v12)
    v13 = 1;
  v53 = v13;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = v12 != 0;
  v16 = v14 == 0;
  v17 = (int *)MEMORY[0x1E0D82BF0];
  if (v12)
    v16 = 1;
  v54 = v16;
  v18 = (int *)MEMORY[0x1E0D82BC8];
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_76;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_28;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_30;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_28:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_30:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_76:
      if ((v15 & 1) != 0)
      {
        v47 = 1;
        goto LABEL_87;
      }
      if (!v14)
        goto LABEL_88;
      while (1)
      {
        v49 = *v14++;
        v48 = v49;
        if (v49 == 3)
          break;
        if (v48 == 4)
        {
          v50 = 8;
LABEL_85:
          *(_BYTE *)(a1 + 56) |= v50;
        }
        else if (!v48)
        {
          goto LABEL_88;
        }
      }
      v50 = 4;
      goto LABEL_85;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!v54)
    {
      v32 = v14;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_67;
        *(_BYTE *)(a1 + 56) |= 1u;
        v36 = *v17;
        v37 = *(_QWORD *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v38 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v37);
          *(_QWORD *)(v3 + v36) = v37 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v38 = 0;
        }
        *(_QWORD *)(a1 + 16) = v38;
        goto LABEL_68;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_67;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 56) |= 2u;
        while (2)
        {
          v42 = *v17;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v27 = v40++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v41) = 0;
LABEL_73:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_68;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 56) & 4) != 0)
          goto LABEL_67;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v46 = (GEOLogMsgStateDetailLookAroundLogRecord *)v15;
        v15 = objc_alloc_init(GEOLogMsgStateDetailLookAroundLogRecord);
        if (!GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(v15, (void *)v3))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOLogMsgStateDetailLookAroundLog _addNoFlagsLookAroundPipRecords:](a1, (void *)v15);
        goto LABEL_66;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 56) & 8) != 0)
        {
LABEL_67:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_86:
            v47 = 0;
            goto LABEL_87;
          }
          goto LABEL_68;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_86;
        v46 = (GEOLogMsgStateDetailLookAroundLogRecord *)v15;
        v15 = objc_alloc_init(GEOLogMsgStateDetailLookAroundLogRecord);
        if (GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(v15, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgStateDetailLookAroundLog _addNoFlagsLookAroundViewRecords:](a1, (void *)v15);
LABEL_66:

          v15 = (uint64_t)v46;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
          if (!v53)
            goto LABEL_76;
          continue;
        }
LABEL_93:

        v47 = 0;
        LODWORD(v15) = (_DWORD)v46;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
        *(_BYTE *)(a1 + 56) |= 4u;
        *(_BYTE *)(a1 + 56) |= 8u;
        if ((v47 & 1) != 0)
        {
LABEL_88:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((_DWORD)v15)
            goto LABEL_89;
        }
        else
        {
          v3 = 0;
          if ((_DWORD)v15)
          {
LABEL_89:
            v51 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_86;
        goto LABEL_68;
    }
  }
}

void sub_1899C8E08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C9904(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStateDetailLookAroundLogCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOLogMsgStateDetailLookAroundLogReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateDetailLookAroundLogReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateDetailLookAroundLogReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateDetailLookAroundLogReadAllFrom_initialTag;
  Specified = GEOLogMsgStateDetailLookAroundLogReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgStateDetailLookAroundLogCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899C9C2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDetailLookAroundLogReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDetailLookAroundLogReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899C9C8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDetailLookAroundLogRecordIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1)
          goto LABEL_48;
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && (v27 = v26 + 8, v27 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v25] = v27;
        else
          a1[v14] = 1;
      }
      else
      {
        if ((_DWORD)v18 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v24 = v28++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v18 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_48;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            if (v23 < 0)
            {
              v24 = v19++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_48:
          v33 = 0;
          goto LABEL_47;
        }
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v33;
}

void sub_1899CA1FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDetailLookAroundLogIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1899CA720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "1899CEBF8: too complex function (funcsize=7799)"

#error "1899E2560: too complex function (funcsize=10911)"

BOOL GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(_BYTE *)(a1 + 24) |= 1u;
          v26 = *v4;
          v27 = *(_QWORD *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v28 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v27);
            *(_QWORD *)&v3[v26] = v27 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v28 = 0;
          }
          *(_QWORD *)(a1 + 8) = v28;
        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            v29 = 0;
            v30 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 24) |= 4u;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v21 |= (unint64_t)(v34 & 0x7F) << v29;
              if ((v34 & 0x80) == 0)
                goto LABEL_46;
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_48:
            v35 = 20;
          }
          else
          {
            if ((_DWORD)v18 != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_54;
              continue;
            }
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 24) |= 2u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_42;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_44;
              }
            }
            v3[*v6] = 1;
LABEL_42:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_44:
            v35 = 16;
          }
          *(_DWORD *)(a1 + v35) = v21;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_1899EEF60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDetailLookAroundLogRecordReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899EEFC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceBaseReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 20) |= 4u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0)
              goto LABEL_50;
            v26 += 7;
            v15 = v27++ >= 9;
            if (v15)
            {
              v28 = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6])
            v28 = 0;
LABEL_52:
          *(_BYTE *)(a1 + 16) = v28 != 0;
        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            v33 = 0;
            v34 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 20) |= 1u;
            while (1)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
                break;
              v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
              *(_QWORD *)&v3[v35] = v37;
              v21 |= (unint64_t)(v38 & 0x7F) << v33;
              if ((v38 & 0x80) == 0)
                goto LABEL_54;
              v33 += 7;
              v15 = v34++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_56:
            v39 = 8;
          }
          else
          {
            if ((_DWORD)v18 != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_60;
              continue;
            }
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 20) |= 2u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_46;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_48:
            v39 = 12;
          }
          *(_DWORD *)(a1 + v39) = v21;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_1899F00B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceBaseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDeviceBaseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899F0118(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F08C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceConnectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  int v57;
  int v58;
  char v59;
  void *v60;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v62 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_86;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        v56 = 1;
        goto LABEL_97;
      }
      if (!v14)
        goto LABEL_98;
      while (1)
      {
        v58 = *v14++;
        v57 = v58;
        if (v58 == 2)
          break;
        if (v57 == 3)
        {
          v59 = 4;
LABEL_95:
          *(_BYTE *)(a1 + 52) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_98;
        }
      }
      v59 = 8;
      goto LABEL_95;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v62)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 52) |= 2u;
        while (1)
        {
          v38 = *v16;
          v39 = *(_QWORD *)(v3 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
          *(_QWORD *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_69;
          v35 += 7;
          v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v17) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_71:
        v53 = 48;
        goto LABEL_76;
      case 2:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 52) & 8) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 24;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v54 = 16 * *(_BYTE *)(a1 + 52);
        goto LABEL_81;
      case 3:
        if (!v30)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 16;
LABEL_57:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;

          v17 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v54 = 32 * *(_BYTE *)(a1 + 52);
LABEL_81:
          v9 += v54 >> 7;
          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
          if (v9)
            v55 = 1;
          else
            v55 = v13;
          if ((v55 & 1) == 0)
            goto LABEL_86;
          continue;
        }
LABEL_103:
        v56 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        *(_BYTE *)(a1 + 52) |= 8u;
        *(_BYTE *)(a1 + 52) |= 4u;
        if ((v56 & 1) != 0)
        {
LABEL_98:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_99;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_99:
            v60 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v8 & 1) != 0)
        {
          v46 = 0;
          v47 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          while (1)
          {
            v48 = *v16;
            v49 = *(_QWORD *)(v3 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
              break;
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v37 |= (unint64_t)(v51 & 0x7F) << v46;
            if ((v51 & 0x80) == 0)
              goto LABEL_73;
            v46 += 7;
            v26 = v47++ >= 9;
            if (v26)
            {
              LODWORD(v37) = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v17))
            LODWORD(v37) = 0;
LABEL_75:
          v53 = 44;
LABEL_76:
          *(_DWORD *)(a1 + v53) = v37;
        }
        else
        {
LABEL_66:
          v52 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
LABEL_96:
            v56 = 0;
            goto LABEL_97;
          }
        }
        goto LABEL_82;
      default:
        v42 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v42)
          goto LABEL_96;
        goto LABEL_82;
    }
  }
}

void sub_1899F0F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F1800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceConnectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateDeviceConnectionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateDeviceConnectionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateDeviceConnectionReadAllFrom_initialTag;
  Specified = GEOLogMsgStateDeviceConnectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1899F198C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceConnectionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDeviceConnectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899F19EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F1BAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceConnectionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 52) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1899F1EEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F2340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceIdentifierReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  int *v15;
  int *v16;
  BOOL v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  int v66;
  int v67;
  char v68;
  void *v69;
  BOOL v71;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 48) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  if (v12)
    v17 = 1;
  else
    v17 = v14 == 0;
  v71 = v17;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_99;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v15;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        v65 = 1;
        goto LABEL_110;
      }
      if (!v14)
        goto LABEL_111;
      while (1)
      {
        v67 = *v14++;
        v66 = v67;
        if (v67 == 1)
          break;
        if (v66 == 2)
        {
          v68 = 8;
LABEL_108:
          *(_BYTE *)(a1 + 48) |= v68;
        }
        else if (!v66)
        {
          goto LABEL_111;
        }
      }
      v68 = 16;
      goto LABEL_108;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v71)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 48) & 0x10) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_116;
        v63 = 8 * *(_BYTE *)(a1 + 48);
        goto LABEL_93;
      case 2:
        if (!v30)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + 48) & 8) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
LABEL_49:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          --v9;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v63 = 16 * *(_BYTE *)(a1 + 48);
LABEL_93:
          v9 += v63 >> 7;
LABEL_94:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
          if (v9)
            v64 = 1;
          else
            v64 = v13;
          if ((v64 & 1) == 0)
            goto LABEL_99;
          continue;
        }
LABEL_116:
        v65 = 0;
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_110:
        *(_BYTE *)(a1 + 48) |= 0x10u;
        *(_BYTE *)(a1 + 48) |= 8u;
        if ((v65 & 1) != 0)
        {
LABEL_111:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if (v13)
            goto LABEL_112;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_112:
            v69 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 48) |= 4u;
        while (2)
        {
          v42 = *v15;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                v41 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v41 = 0;
LABEL_79:
        v61 = v41 != 0;
        v62 = 46;
        goto LABEL_88;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_BYTE *)(a1 + 48) |= 2u;
        while (2)
        {
          v49 = *v15;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v26 = v47++ >= 9;
              if (v26)
              {
                v48 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v48 = 0;
LABEL_83:
        v61 = v48 != 0;
        v62 = 45;
        goto LABEL_88;
      case 5:
        if ((v8 & 1) != 0)
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          *(_BYTE *)(a1 + 48) |= 1u;
          while (1)
          {
            v56 = *v15;
            v57 = *(_QWORD *)(v3 + v56);
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if ((v59 & 0x80) == 0)
              goto LABEL_85;
            v53 += 7;
            v26 = v54++ >= 9;
            if (v26)
            {
              v55 = 0;
              goto LABEL_87;
            }
          }
          *(_BYTE *)(v3 + *v16) = 1;
LABEL_85:
          if (*(_BYTE *)(v3 + *v16))
            v55 = 0;
LABEL_87:
          v61 = v55 != 0;
          v62 = 44;
LABEL_88:
          *(_BYTE *)(a1 + v62) = v61;
        }
        else
        {
LABEL_74:
          v60 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v60 & 1) == 0)
          {
LABEL_109:
            v65 = 0;
            goto LABEL_110;
          }
        }
        goto LABEL_95;
      default:
        v37 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_109;
        goto LABEL_95;
    }
  }
}

void sub_1899F2A9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F31DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceIdentifierReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateDeviceIdentifierReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateDeviceIdentifierReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateDeviceIdentifierReadAllFrom_initialTag;
  Specified = GEOLogMsgStateDeviceIdentifierReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1899F3368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceIdentifierReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDeviceIdentifierReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899F33C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F35B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceIdentifierIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 48) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1899F3944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F3E10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceLocaleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  char v37;
  char v38;
  char v39;
  int v40;
  char v41;
  void *v42;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_63;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_63:
      if ((v12 & 1) != 0)
      {
        v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          v40 = *v13++;
          v41 = 4;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 2:
              v41 = 1;
              goto LABEL_69;
            case 3:
              v41 = 2;
LABEL_69:
              *(_BYTE *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    if ((_DWORD)v27 == 3)
    {
      if (!v28)
        goto LABEL_52;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v38 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_58;
      }
      PBReaderReadString();
      v33 = objc_claimAutoreleasedReturnValue();
      v34 = 24;
LABEL_49:
      v35 = *(void **)(a1 + v34);
      *(_QWORD *)(a1 + v34) = v33;

      --v9;
      goto LABEL_61;
    }
    if ((_DWORD)v27 != 2)
    {
      if ((_DWORD)v27 != 1)
      {
        v36 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_70;
        goto LABEL_62;
      }
      if (v28)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 32;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v38 = 32 * *(_BYTE *)(a1 + 52);
LABEL_58:
        v9 += v38 >> 7;
LABEL_61:
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_62:
        if (!(v12 & 1 | (v9 != 0)))
          goto LABEL_63;
        continue;
      }
LABEL_52:
      v37 = PBReaderSkipValueWithTag();
      v15 = (int *)MEMORY[0x1E0D82BC8];
      if ((v37 & 1) == 0)
      {
LABEL_70:
        v39 = 0;
        goto LABEL_72;
      }
      goto LABEL_62;
    }
    break;
  }
  if (!v28)
    goto LABEL_52;
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    PBReaderReadString();
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = 16;
    goto LABEL_49;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 -= *(_BYTE *)(a1 + 52) & 1;
    goto LABEL_61;
  }
LABEL_71:
  v39 = 0;
  v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v39 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if ((v12 & 1) != 0)
  {
LABEL_74:
    v42 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1899F439C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F44E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F494C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceLocaleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateDeviceLocaleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateDeviceLocaleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateDeviceLocaleReadAllFrom_initialTag;
  Specified = GEOLogMsgStateDeviceLocaleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899F4AD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceLocaleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDeviceLocaleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899F4B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F4CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceLocaleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1899F4F8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceSettingsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 12) |= 4u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__supportsAdvancedMap;
              goto LABEL_49;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__supportsAdvancedMap;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__supportsAdvancedMap;
LABEL_48:
          v3[*v6] = 1;
        }
        else if ((_DWORD)v18 == 2)
        {
          v34 = 0;
          v35 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 12) |= 2u;
          while (1)
          {
            v36 = *v4;
            v37 = *(_QWORD *)&v3[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__isAltAccountPairedDevice;
              goto LABEL_48;
            }
            v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
            *(_QWORD *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0)
              break;
            v34 += 7;
            v26 = v35++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__isAltAccountPairedDevice;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__isAltAccountPairedDevice;
        }
        else
        {
          if ((_DWORD)v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_58;
            continue;
          }
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 12) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__deviceDarkMode;
              goto LABEL_48;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              v21 = 0;
              v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__deviceDarkMode;
              goto LABEL_51;
            }
          }
          v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__deviceDarkMode;
        }
LABEL_49:
        if (v3[*v6])
          v21 = 0;
LABEL_51:
        *(_BYTE *)(a1 + *v27) = v21 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_1899F5A10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDeviceSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899F5A70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDirectionsDetailReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  _BOOL8 v32;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v28 = *v4;
            v29 = *(_QWORD *)&v3[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              break;
            v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
            *(_QWORD *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0)
              goto LABEL_42;
            v25 += 7;
            v15 = v26++ >= 9;
            if (v15)
            {
              v27 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            v27 = 0;
LABEL_44:
          *(_BYTE *)(a1 + 12) = v27 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_38;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_40:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_1899F6804(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDirectionsDetailReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateDirectionsDetailReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899F6864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F6D4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateElementImpressionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  GEOElementDetails *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  int v68;
  char v69;
  void *v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 6) & 1);
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_114;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_114:
      if ((v12 & 1) != 0)
      {
        v67 = 1;
        goto LABEL_122;
      }
      if (v13)
      {
        while (1)
        {
          v68 = *v13++;
          v69 = 16;
          switch(v68)
          {
            case 0:
              goto LABEL_123;
            case 1:
              goto LABEL_120;
            case 2:
              v69 = 32;
              goto LABEL_120;
            case 3:
              v69 = 64;
LABEL_120:
              *(_BYTE *)(a1 + 76) |= v69;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_123;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28)
          goto LABEL_86;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_121;
          v33 = objc_alloc_init(GEOElementDetails);
          if (GEOElementDetailsReadAllFrom((uint64_t)v33, (void *)v3))
          {
            PBReaderRecallMark();
            v34 = 16;
            goto LABEL_50;
          }
          goto LABEL_128;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_121;
        v66 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_112;
      case 2:
        if (!v28)
          goto LABEL_86;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v66 = 4 * *(_BYTE *)(a1 + 76);
LABEL_112:
          v7 += v66 >> 7;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v33 = objc_alloc_init(GEOImpressionObjectId);
        if (GEOImpressionObjectIdReadAllFrom((uint64_t)v33, (void *)v3))
        {
          PBReaderRecallMark();
          v34 = 40;
LABEL_50:
          v35 = *(void **)(a1 + v34);
          *(_QWORD *)(a1 + v34) = v33;

          --v7;
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_113:
          if (!(v12 & 1 | (v7 != 0)))
            goto LABEL_114;
          continue;
        }
LABEL_128:

        v67 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
        *(_BYTE *)(a1 + 76) |= 0x10u;
        *(_BYTE *)(a1 + 76) |= 0x20u;
        *(_BYTE *)(a1 + 76) |= 0x40u;
        if ((v67 & 1) != 0)
        {
LABEL_123:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_124;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_124:
            v70 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if (!v28)
          goto LABEL_86;
        if ((*(_BYTE *)(a1 + 76) & 0x40) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v36;

          --v7;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_121:
          v67 = 0;
          goto LABEL_122;
        }
        v66 = 2 * *(_BYTE *)(a1 + 76);
        goto LABEL_112;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_86;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 76) |= 8u;
        while (2)
        {
          v41 = *v14;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v24 = v39++ >= 9;
              if (v24)
              {
                LODWORD(v40) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v40) = 0;
LABEL_91:
        v64 = 72;
        goto LABEL_105;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_86;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v48 = *v14;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v24 = v46++ >= 9;
              if (v24)
              {
                v47 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v47 = 0;
LABEL_95:
        v65 = 32;
        goto LABEL_100;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_86;
        v52 = 0;
        v53 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v54 = *v14;
          v55 = *(_QWORD *)(v3 + v54);
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              v24 = v53++ >= 9;
              if (v24)
              {
                v47 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v47 = 0;
LABEL_99:
        v65 = 24;
LABEL_100:
        *(_QWORD *)(a1 + v65) = v47;
        goto LABEL_113;
      case 7:
        if ((v8 & 1) != 0)
        {
          v58 = 0;
          v59 = 0;
          v40 = 0;
          *(_BYTE *)(a1 + 76) |= 4u;
          while (1)
          {
            v60 = *v14;
            v61 = *(_QWORD *)(v3 + v60);
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
              break;
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v40 |= (unint64_t)(v63 & 0x7F) << v58;
            if ((v63 & 0x80) == 0)
              goto LABEL_102;
            v58 += 7;
            v24 = v59++ >= 9;
            if (v24)
            {
              LODWORD(v40) = 0;
              goto LABEL_104;
            }
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_102:
          if (*(_BYTE *)(v3 + *v15))
            LODWORD(v40) = 0;
LABEL_104:
          v64 = 68;
LABEL_105:
          *(_DWORD *)(a1 + v64) = v40;
        }
        else
        {
LABEL_86:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
        }
        goto LABEL_113;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_121;
        goto LABEL_113;
    }
  }
}

void sub_1899F7654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F7798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F8490(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateElementImpressionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateElementImpressionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateElementImpressionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateElementImpressionReadAllFrom_initialTag;
  Specified = GEOLogMsgStateElementImpressionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1899F8648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateElementImpressionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateElementImpressionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899F86A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F88D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateElementImpressionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 76) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1899F8CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F92A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateExperimentsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int *v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOABExperimentAssignment *v36;
  uint64_t v37;
  int v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  char v44;
  void *v45;
  BOOL v47;
  char v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 2);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14;
        v48 = (v15 == 0) | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v47 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_73;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        v42 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          v43 = *v15++;
          v44 = 8;
          switch(v43)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              v44 = 2;
              goto LABEL_80;
            case 3:
              v44 = 4;
              goto LABEL_80;
            case 4:
              v44 = 1;
LABEL_80:
              *(_BYTE *)(a1 + 60) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    v30 = v22 >> 3;
    v31 = v16;
    if ((v48 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_82;
          v36 = objc_alloc_init(GEOABExperimentAssignment);
          if (GEOABExperimentAssignmentReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v37 = 40;
            goto LABEL_59;
          }
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v41 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_68;
      case 2:
        if (!v31)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_82;
          v41 = *(_BYTE *)(a1 + 60) << 6;
          goto LABEL_68;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v36 = objc_alloc_init(GEOABClientConfig);
        if (!GEOABClientConfigReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          goto LABEL_83;
        PBReaderRecallMark();
        v37 = 24;
        goto LABEL_59;
      case 3:
        if (!v31)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_82;
          v41 = 32 * *(_BYTE *)(a1 + 60);
LABEL_68:
          v7 += v41 >> 7;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v36 = objc_alloc_init(GEOPDDatasetABStatus);
        if (!GEOPDDatasetABStatusReadAllFrom((uint64_t)v36, (void *)v3))
          goto LABEL_83;
        PBReaderRecallMark();
        v37 = 32;
        goto LABEL_59;
      case 4:
        if (!v31)
        {
LABEL_60:
          v40 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v40 & 1) == 0)
          {
LABEL_81:
            v42 = 0;
            goto LABEL_85;
          }
LABEL_72:
          if (!v16 && v7 == 0)
            goto LABEL_73;
          continue;
        }
        if ((*(_BYTE *)(a1 + 60) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_82:
            v42 = 0;
            goto LABEL_84;
          }
          v7 -= *(_BYTE *)(a1 + 60) & 1;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v36 = objc_alloc_init(GEOAbAssignInfo);
        if (GEOAbAssignInfoReadAllFrom((uint64_t)v36, (void *)v3))
        {
          PBReaderRecallMark();
          v37 = 16;
LABEL_59:
          v39 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;

          --v7;
          v16 = v47;
LABEL_71:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_72;
        }
LABEL_83:

        v42 = 0;
        v16 = v47;
LABEL_84:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 1u;
        if ((v42 & 1) != 0)
        {
LABEL_86:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v16)
            goto LABEL_87;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_87:
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_81;
        goto LABEL_72;
    }
  }
}

void sub_1899F99D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F9B14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F9C58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FA250(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateExperimentsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  return objc_msgSend(a1[2], "readAll:", 1);
}

unint64_t GEOLogMsgStateExperimentsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateExperimentsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateExperimentsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateExperimentsReadAllFrom_initialTag;
  Specified = GEOLogMsgStateExperimentsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgStateExperimentsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1899FA448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateExperimentsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateExperimentsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899FA4A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FA64C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateExperimentsIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 60);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((GEOABExperimentAssignmentIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  if ((v2 & 2) != 0)
  {
    if ((GEOABClientConfigIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) != 0)
      return 1;
    v2 = *(_BYTE *)(a1 + 60);
  }
  if ((v2 & 4) == 0)
    return v2 & 1;
  return 1;
}

os_unfair_lock_s *GEOLogMsgStateExperimentsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgStateExperimentsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1899FA9C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateExtensionReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _BOOL8 v45;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 12) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppInstalled;
                goto LABEL_54;
              }
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                break;
              v18 += 7;
              v25 = v19++ > 8;
              if (v25)
              {
                v20 = 0;
                v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppInstalled;
                goto LABEL_57;
              }
            }
            v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppInstalled;
            goto LABEL_55;
          case 2u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 12) |= 1u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppEnabled;
                goto LABEL_54;
              }
              v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
              *(_QWORD *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                v25 = v28++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppEnabled;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppEnabled;
            goto LABEL_55;
          case 3u:
            v33 = 0;
            v34 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 12) |= 8u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppInstalled;
                goto LABEL_54;
              }
              v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
              *(_QWORD *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                v25 = v34++ > 8;
                if (v25)
                {
                  v20 = 0;
                  v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppInstalled;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppInstalled;
            goto LABEL_55;
          case 4u:
            v39 = 0;
            v40 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 12) |= 4u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_65;
            continue;
        }
        while (1)
        {
          v41 = *v4;
          v42 = *(_QWORD *)&v3[v41];
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)&v3[*v5])
            break;
          v44 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v42);
          *(_QWORD *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppEnabled;
            goto LABEL_55;
          }
          v39 += 7;
          v25 = v40++ > 8;
          if (v25)
          {
            v20 = 0;
            v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppEnabled;
            goto LABEL_57;
          }
        }
        v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppEnabled;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6])
          v20 = 0;
LABEL_57:
        *(_BYTE *)(a1 + *v26) = v20 != 0;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_1899FB6B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateExtensionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateExtensionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899FB714(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateImpressionObjectReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOImpressionObjectId *v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEOImpressionObjectId);
          if (!GEOImpressionObjectIdReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_1899FC0F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateImpressionObjectReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateImpressionObjectReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899FC154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateLookAroundViewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  GEOLocation *v20;
  void *v21;
  char v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  _BOOL8 v46;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_67;
            v20 = objc_alloc_init(GEOLocation);
            if (GEOLocationReadAllFrom((uint64_t)v20, v5, a3))
            {
              PBReaderRecallMark();
              v21 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v20;

              continue;
            }

            goto LABEL_67;
          case 2u:
            v22 = 0;
            v23 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v25 = *v6;
              v26 = *(_QWORD *)&v5[v25];
              v27 = v26 + 1;
              if (v26 == -1 || v27 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v28 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v26);
                *(_QWORD *)&v5[v25] = v27;
                v24 |= (unint64_t)(v28 & 0x7F) << v22;
                if (v28 < 0)
                {
                  v22 += 7;
                  v17 = v23++ >= 9;
                  if (v17)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_52;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v24) = 0;
LABEL_52:
            v45 = 24;
            goto LABEL_57;
          case 3u:
            *(_BYTE *)(a1 + 36) |= 1u;
            v29 = *v6;
            v30 = *(_QWORD *)&v5[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)&v5[*v7])
            {
              v31 = *(_QWORD *)(*(_QWORD *)&v5[*v9] + v30);
              *(_QWORD *)&v5[v29] = v30 + 8;
            }
            else
            {
              v5[*v8] = 1;
              v31 = 0;
            }
            *(_QWORD *)(a1 + 16) = v31;
            continue;
          case 4u:
            v32 = 0;
            v33 = 0;
            v24 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (2)
            {
              v34 = *v6;
              v35 = *(_QWORD *)&v5[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v37 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v35);
                *(_QWORD *)&v5[v34] = v36;
                v24 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  v17 = v33++ >= 9;
                  if (v17)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_56;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v24) = 0;
LABEL_56:
            v45 = 28;
LABEL_57:
            *(_DWORD *)(a1 + v45) = v24;
            continue;
          case 5u:
            v38 = 0;
            v39 = 0;
            v40 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_67;
            continue;
        }
        while (1)
        {
          v41 = *v6;
          v42 = *(_QWORD *)&v5[v41];
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)&v5[*v7])
            break;
          v44 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v42);
          *(_QWORD *)&v5[v41] = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_59;
          v38 += 7;
          v17 = v39++ >= 9;
          if (v17)
          {
            v40 = 0;
            goto LABEL_61;
          }
        }
        v5[*v8] = 1;
LABEL_59:
        if (v5[*v8])
          v40 = 0;
LABEL_61:
        *(_BYTE *)(a1 + 32) = v40 != 0;
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v46 = v5[*v8] == 0;
  }
  else
  {
LABEL_67:
    v46 = 0;
  }
  objc_sync_exit(v5);

  return v46;
}

void sub_1899FCED8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateLookAroundViewReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateLookAroundViewReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899FCF38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FD784(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateMapLaunchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  char v60;
  int v61;
  char v62;
  void *v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFBFFFDLL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_103;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_103:
      if ((v12 & 1) != 0)
      {
        v60 = 1;
        goto LABEL_112;
      }
      if (v13)
      {
        while (1)
        {
          v61 = *v13++;
          v62 = 32;
          switch(v61)
          {
            case 0:
              goto LABEL_113;
            case 1:
              goto LABEL_110;
            case 2:
              v62 = 8;
              goto LABEL_110;
            case 3:
              v62 = 16;
              goto LABEL_110;
            case 5:
              v62 = 64;
LABEL_110:
              *(_BYTE *)(a1 + 72) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_113;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 0x20) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 32;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v59 = 4 * *(_BYTE *)(a1 + 72);
        goto LABEL_100;
      case 2:
        if (!v28)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 16;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v59 = 16 * *(_BYTE *)(a1 + 72);
        goto LABEL_100;
      case 3:
        if (!v28)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_118;
        v59 = 8 * *(_BYTE *)(a1 + 72);
        goto LABEL_100;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_77;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 72) |= 4u;
        while (2)
        {
          v39 = *v14;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v40);
            *(_QWORD *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              v24 = v37++ >= 9;
              if (v24)
              {
                v38 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          v38 = 0;
LABEL_82:
        *(_BYTE *)(a1 + 68) = v38 != 0;
        goto LABEL_102;
      case 5:
        if (!v28)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 72) & 0x40) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 40;
LABEL_60:
          v43 = *(void **)(a1 + v34);
          *(_QWORD *)(a1 + v34) = v33;

          --v8;
          goto LABEL_101;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v59 = 2 * *(_BYTE *)(a1 + 72);
LABEL_100:
          v8 += v59 >> 7;
LABEL_101:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_102:
          if (!(v12 & 1 | (v8 != 0)))
            goto LABEL_103;
          continue;
        }
LABEL_118:
        v60 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_112:
        *(_BYTE *)(a1 + 72) |= 0x20u;
        *(_BYTE *)(a1 + 72) |= 8u;
        *(_BYTE *)(a1 + 72) |= 0x10u;
        *(_BYTE *)(a1 + 72) |= 0x40u;
        if ((v60 & 1) != 0)
        {
LABEL_113:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_114;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_114:
            v63 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 6:
        if ((v7 & 1) == 0)
          goto LABEL_77;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 72) |= 2u;
        while (2)
        {
          v47 = *v14;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v24 = v45++ >= 9;
              if (v24)
              {
                LODWORD(v46) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v46) = 0;
LABEL_86:
        v58 = 64;
        goto LABEL_91;
      case 7:
        if ((v7 & 1) != 0)
        {
          v51 = 0;
          v52 = 0;
          v46 = 0;
          *(_BYTE *)(a1 + 72) |= 1u;
          while (1)
          {
            v53 = *v14;
            v54 = *(_QWORD *)(v3 + v53);
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
              break;
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if ((v56 & 0x80) == 0)
              goto LABEL_88;
            v51 += 7;
            v24 = v52++ >= 9;
            if (v24)
            {
              LODWORD(v46) = 0;
              goto LABEL_90;
            }
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_88:
          if (*(_BYTE *)(v3 + *v15))
            LODWORD(v46) = 0;
LABEL_90:
          v58 = 60;
LABEL_91:
          *(_DWORD *)(a1 + v58) = v46;
        }
        else
        {
LABEL_77:
          v57 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
LABEL_111:
            v60 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_102;
      default:
        v35 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v35)
          goto LABEL_111;
        goto LABEL_102;
    }
  }
}

void sub_1899FDFC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FE108(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FE2C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FFF64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateMapLaunchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgStateMapLaunchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgStateMapLaunchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgStateMapLaunchReadAllFrom_initialTag;
  Specified = GEOLogMsgStateMapLaunchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189A000F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateMapLaunchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateMapLaunchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A00150(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A00368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapLaunchIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 72) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189A00754(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapRestoreReadAllFrom(void *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOTargetLayout *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEOTargetLayout);
          if (!GEOTargetLayoutReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addTargetLayout:", v18, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189A01270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapRestoreReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateMapRestoreReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A012D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTargetLayoutIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_48;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_48;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v28 = 0;
        while (1)
        {
          v29 = *v2;
          v30 = *(_QWORD *)&a1[v29];
          v31 = v30 + 1;
          if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
            goto LABEL_45;
          v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
          *(_QWORD *)&a1[v29] = v31;
          if (v32 < 0)
          {
            v22 = v28++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_50;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_48;
    }
    if ((v8 & 7) != 0)
      goto LABEL_50;
    v23 = 0;
    while (1)
    {
      v24 = *v2;
      v25 = *(_QWORD *)&a1[v24];
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
      *(_QWORD *)&a1[v24] = v26;
      if (v27 < 0)
      {
        v22 = v23++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateMapSettingsReadAllFrom(_DWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  GEONavVoiceGuidanceSettings *v121;
  char v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  char v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  char v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  char v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  char v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  char v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  uint64_t v196;
  BOOL v197;
  uint64_t v198;
  _BOOL8 v199;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            a1[15] |= 0x10u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_208;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_210;
              }
            }
            v3[*v6] = 1;
LABEL_208:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_210:
            v196 = 8;
            goto LABEL_283;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            a1[15] |= 0x800u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_214;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_214:
            v197 = v27 != 0;
            v198 = 45;
            goto LABEL_312;
          case 3u:
            v32 = 0;
            v33 = 0;
            v34 = 0;
            a1[15] |= 0x100u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_218;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_218:
            v197 = v34 != 0;
            v198 = 42;
            goto LABEL_312;
          case 4u:
            v39 = 0;
            v40 = 0;
            v41 = 0;
            a1[15] |= 0x40000u;
            while (2)
            {
              v42 = *v4;
              v43 = *(_QWORD *)&v3[v42];
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
                *(_QWORD *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  v15 = v40++ >= 9;
                  if (v15)
                  {
                    v41 = 0;
                    goto LABEL_222;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v41 = 0;
LABEL_222:
            v197 = v41 != 0;
            v198 = 52;
            goto LABEL_312;
          case 5u:
            v46 = 0;
            v47 = 0;
            v48 = 0;
            a1[15] |= 0x200000u;
            while (2)
            {
              v49 = *v4;
              v50 = *(_QWORD *)&v3[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
                *(_QWORD *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  v15 = v47++ >= 9;
                  if (v15)
                  {
                    v48 = 0;
                    goto LABEL_226;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v48 = 0;
LABEL_226:
            v197 = v48 != 0;
            v198 = 55;
            goto LABEL_312;
          case 6u:
            v53 = 0;
            v54 = 0;
            v20 = 0;
            a1[15] |= 8u;
            while (2)
            {
              v55 = *v4;
              v56 = *(_QWORD *)&v3[v55];
              v57 = v56 + 1;
              if (v56 == -1 || v57 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v58 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v56);
                *(_QWORD *)&v3[v55] = v57;
                v20 |= (unint64_t)(v58 & 0x7F) << v53;
                if (v58 < 0)
                {
                  v53 += 7;
                  v15 = v54++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_230;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_230:
            v196 = 7;
            goto LABEL_283;
          case 7u:
            v59 = 0;
            v60 = 0;
            v61 = 0;
            a1[15] |= 0x100000u;
            while (2)
            {
              v62 = *v4;
              v63 = *(_QWORD *)&v3[v62];
              v64 = v63 + 1;
              if (v63 == -1 || v64 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v65 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v63);
                *(_QWORD *)&v3[v62] = v64;
                v61 |= (unint64_t)(v65 & 0x7F) << v59;
                if (v65 < 0)
                {
                  v59 += 7;
                  v15 = v60++ >= 9;
                  if (v15)
                  {
                    v61 = 0;
                    goto LABEL_234;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v61 = 0;
LABEL_234:
            v197 = v61 != 0;
            v198 = 54;
            goto LABEL_312;
          case 8u:
            v66 = 0;
            v67 = 0;
            v68 = 0;
            a1[15] |= 0x20000u;
            while (2)
            {
              v69 = *v4;
              v70 = *(_QWORD *)&v3[v69];
              v71 = v70 + 1;
              if (v70 == -1 || v71 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v72 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v70);
                *(_QWORD *)&v3[v69] = v71;
                v68 |= (unint64_t)(v72 & 0x7F) << v66;
                if (v72 < 0)
                {
                  v66 += 7;
                  v15 = v67++ >= 9;
                  if (v15)
                  {
                    v68 = 0;
                    goto LABEL_238;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v68 = 0;
LABEL_238:
            v197 = v68 != 0;
            v198 = 51;
            goto LABEL_312;
          case 9u:
            v73 = 0;
            v74 = 0;
            v75 = 0;
            a1[15] |= 0x400000u;
            while (2)
            {
              v76 = *v4;
              v77 = *(_QWORD *)&v3[v76];
              v78 = v77 + 1;
              if (v77 == -1 || v78 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v79 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v77);
                *(_QWORD *)&v3[v76] = v78;
                v75 |= (unint64_t)(v79 & 0x7F) << v73;
                if (v79 < 0)
                {
                  v73 += 7;
                  v15 = v74++ >= 9;
                  if (v15)
                  {
                    v75 = 0;
                    goto LABEL_242;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v75 = 0;
LABEL_242:
            v197 = v75 != 0;
            v198 = 56;
            goto LABEL_312;
          case 0xAu:
            v80 = 0;
            v81 = 0;
            v82 = 0;
            a1[15] |= 0x80000u;
            while (2)
            {
              v83 = *v4;
              v84 = *(_QWORD *)&v3[v83];
              v85 = v84 + 1;
              if (v84 == -1 || v85 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v86 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v84);
                *(_QWORD *)&v3[v83] = v85;
                v82 |= (unint64_t)(v86 & 0x7F) << v80;
                if (v86 < 0)
                {
                  v80 += 7;
                  v15 = v81++ >= 9;
                  if (v15)
                  {
                    v82 = 0;
                    goto LABEL_246;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v82 = 0;
LABEL_246:
            v197 = v82 != 0;
            v198 = 53;
            goto LABEL_312;
          case 0xBu:
            v87 = 0;
            v88 = 0;
            v89 = 0;
            a1[15] |= 0x200u;
            while (2)
            {
              v90 = *v4;
              v91 = *(_QWORD *)&v3[v90];
              v92 = v91 + 1;
              if (v91 == -1 || v92 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v93 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v91);
                *(_QWORD *)&v3[v90] = v92;
                v89 |= (unint64_t)(v93 & 0x7F) << v87;
                if (v93 < 0)
                {
                  v87 += 7;
                  v15 = v88++ >= 9;
                  if (v15)
                  {
                    v89 = 0;
                    goto LABEL_250;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v89 = 0;
LABEL_250:
            v197 = v89 != 0;
            v198 = 43;
            goto LABEL_312;
          case 0xCu:
            v94 = 0;
            v95 = 0;
            v96 = 0;
            a1[15] |= 0x400u;
            while (2)
            {
              v97 = *v4;
              v98 = *(_QWORD *)&v3[v97];
              v99 = v98 + 1;
              if (v98 == -1 || v99 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v100 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v98);
                *(_QWORD *)&v3[v97] = v99;
                v96 |= (unint64_t)(v100 & 0x7F) << v94;
                if (v100 < 0)
                {
                  v94 += 7;
                  v15 = v95++ >= 9;
                  if (v15)
                  {
                    v96 = 0;
                    goto LABEL_254;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v96 = 0;
LABEL_254:
            v197 = v96 != 0;
            v198 = 44;
            goto LABEL_312;
          case 0xDu:
            v101 = 0;
            v102 = 0;
            v103 = 0;
            a1[15] |= 0x80u;
            while (2)
            {
              v104 = *v4;
              v105 = *(_QWORD *)&v3[v104];
              v106 = v105 + 1;
              if (v105 == -1 || v106 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v107 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v105);
                *(_QWORD *)&v3[v104] = v106;
                v103 |= (unint64_t)(v107 & 0x7F) << v101;
                if (v107 < 0)
                {
                  v101 += 7;
                  v15 = v102++ >= 9;
                  if (v15)
                  {
                    v103 = 0;
                    goto LABEL_258;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v103 = 0;
LABEL_258:
            v197 = v103 != 0;
            v198 = 41;
            goto LABEL_312;
          case 0xEu:
            v108 = 0;
            v109 = 0;
            v20 = 0;
            a1[15] |= 4u;
            while (2)
            {
              v110 = *v4;
              v111 = *(_QWORD *)&v3[v110];
              v112 = v111 + 1;
              if (v111 == -1 || v112 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v113 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v111);
                *(_QWORD *)&v3[v110] = v112;
                v20 |= (unint64_t)(v113 & 0x7F) << v108;
                if (v113 < 0)
                {
                  v108 += 7;
                  v15 = v109++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_262;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_262:
            v196 = 6;
            goto LABEL_283;
          case 0xFu:
            v114 = 0;
            v115 = 0;
            v116 = 0;
            a1[15] |= 0x10000u;
            while (2)
            {
              v117 = *v4;
              v118 = *(_QWORD *)&v3[v117];
              v119 = v118 + 1;
              if (v118 == -1 || v119 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v120 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v118);
                *(_QWORD *)&v3[v117] = v119;
                v116 |= (unint64_t)(v120 & 0x7F) << v114;
                if (v120 < 0)
                {
                  v114 += 7;
                  v15 = v115++ >= 9;
                  if (v15)
                  {
                    v116 = 0;
                    goto LABEL_266;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v116 = 0;
LABEL_266:
            v197 = v116 != 0;
            v198 = 50;
            goto LABEL_312;
          case 0x10u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_316;
            v121 = objc_alloc_init(GEONavVoiceGuidanceSettings);
            if (!GEONavVoiceGuidanceSettingsReadAllFrom((uint64_t)v121, v3))
            {

              goto LABEL_316;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addNavVoiceSettings:", v121, 0, 0);

LABEL_313:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_314;
            break;
          case 0x11u:
            v122 = 0;
            v123 = 0;
            v124 = 0;
            a1[15] |= 0x40u;
            while (2)
            {
              v125 = *v4;
              v126 = *(_QWORD *)&v3[v125];
              v127 = v126 + 1;
              if (v126 == -1 || v127 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v128 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v126);
                *(_QWORD *)&v3[v125] = v127;
                v124 |= (unint64_t)(v128 & 0x7F) << v122;
                if (v128 < 0)
                {
                  v122 += 7;
                  v15 = v123++ >= 9;
                  if (v15)
                  {
                    v124 = 0;
                    goto LABEL_270;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v124 = 0;
LABEL_270:
            v197 = v124 != 0;
            v198 = 40;
            goto LABEL_312;
          case 0x12u:
            v129 = 0;
            v130 = 0;
            v20 = 0;
            a1[15] |= 2u;
            while (2)
            {
              v131 = *v4;
              v132 = *(_QWORD *)&v3[v131];
              v133 = v132 + 1;
              if (v132 == -1 || v133 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v134 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v132);
                *(_QWORD *)&v3[v131] = v133;
                v20 |= (unint64_t)(v134 & 0x7F) << v129;
                if (v134 < 0)
                {
                  v129 += 7;
                  v15 = v130++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_274;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_274:
            v196 = 5;
            goto LABEL_283;
          case 0x13u:
            v135 = 0;
            v136 = 0;
            v20 = 0;
            a1[15] |= 0x20u;
            while (2)
            {
              v137 = *v4;
              v138 = *(_QWORD *)&v3[v137];
              v139 = v138 + 1;
              if (v138 == -1 || v139 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v140 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v138);
                *(_QWORD *)&v3[v137] = v139;
                v20 |= (unint64_t)(v140 & 0x7F) << v135;
                if (v140 < 0)
                {
                  v135 += 7;
                  v15 = v136++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_278;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_278:
            v196 = 9;
            goto LABEL_283;
          case 0x14u:
            v141 = 0;
            v142 = 0;
            v20 = 0;
            a1[15] |= 1u;
            while (2)
            {
              v143 = *v4;
              v144 = *(_QWORD *)&v3[v143];
              v145 = v144 + 1;
              if (v144 == -1 || v145 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v146 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v144);
                *(_QWORD *)&v3[v143] = v145;
                v20 |= (unint64_t)(v146 & 0x7F) << v141;
                if (v146 < 0)
                {
                  v141 += 7;
                  v15 = v142++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_282;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_282:
            v196 = 4;
LABEL_283:
            a1[v196] = v20;
            goto LABEL_313;
          case 0x15u:
            v147 = 0;
            v148 = 0;
            v149 = 0;
            a1[15] |= 0x1000000u;
            while (2)
            {
              v150 = *v4;
              v151 = *(_QWORD *)&v3[v150];
              v152 = v151 + 1;
              if (v151 == -1 || v152 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v153 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v151);
                *(_QWORD *)&v3[v150] = v152;
                v149 |= (unint64_t)(v153 & 0x7F) << v147;
                if (v153 < 0)
                {
                  v147 += 7;
                  v15 = v148++ >= 9;
                  if (v15)
                  {
                    v149 = 0;
                    goto LABEL_287;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v149 = 0;
LABEL_287:
            v197 = v149 != 0;
            v198 = 58;
            goto LABEL_312;
          case 0x16u:
            v154 = 0;
            v155 = 0;
            v156 = 0;
            a1[15] |= 0x800000u;
            while (2)
            {
              v157 = *v4;
              v158 = *(_QWORD *)&v3[v157];
              v159 = v158 + 1;
              if (v158 == -1 || v159 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v160 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v158);
                *(_QWORD *)&v3[v157] = v159;
                v156 |= (unint64_t)(v160 & 0x7F) << v154;
                if (v160 < 0)
                {
                  v154 += 7;
                  v15 = v155++ >= 9;
                  if (v15)
                  {
                    v156 = 0;
                    goto LABEL_291;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v156 = 0;
LABEL_291:
            v197 = v156 != 0;
            v198 = 57;
            goto LABEL_312;
          case 0x17u:
            v161 = 0;
            v162 = 0;
            v163 = 0;
            a1[15] |= 0x2000000u;
            while (2)
            {
              v164 = *v4;
              v165 = *(_QWORD *)&v3[v164];
              v166 = v165 + 1;
              if (v165 == -1 || v166 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v167 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v165);
                *(_QWORD *)&v3[v164] = v166;
                v163 |= (unint64_t)(v167 & 0x7F) << v161;
                if (v167 < 0)
                {
                  v161 += 7;
                  v15 = v162++ >= 9;
                  if (v15)
                  {
                    v163 = 0;
                    goto LABEL_295;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v163 = 0;
LABEL_295:
            v197 = v163 != 0;
            v198 = 59;
            goto LABEL_312;
          case 0x18u:
            v168 = 0;
            v169 = 0;
            v170 = 0;
            a1[15] |= 0x2000u;
            while (2)
            {
              v171 = *v4;
              v172 = *(_QWORD *)&v3[v171];
              v173 = v172 + 1;
              if (v172 == -1 || v173 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v174 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v172);
                *(_QWORD *)&v3[v171] = v173;
                v170 |= (unint64_t)(v174 & 0x7F) << v168;
                if (v174 < 0)
                {
                  v168 += 7;
                  v15 = v169++ >= 9;
                  if (v15)
                  {
                    v170 = 0;
                    goto LABEL_299;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v170 = 0;
LABEL_299:
            v197 = v170 != 0;
            v198 = 47;
            goto LABEL_312;
          case 0x19u:
            v175 = 0;
            v176 = 0;
            v177 = 0;
            a1[15] |= 0x4000u;
            while (2)
            {
              v178 = *v4;
              v179 = *(_QWORD *)&v3[v178];
              v180 = v179 + 1;
              if (v179 == -1 || v180 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v181 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v179);
                *(_QWORD *)&v3[v178] = v180;
                v177 |= (unint64_t)(v181 & 0x7F) << v175;
                if (v181 < 0)
                {
                  v175 += 7;
                  v15 = v176++ >= 9;
                  if (v15)
                  {
                    v177 = 0;
                    goto LABEL_303;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v177 = 0;
LABEL_303:
            v197 = v177 != 0;
            v198 = 48;
            goto LABEL_312;
          case 0x1Au:
            v182 = 0;
            v183 = 0;
            v184 = 0;
            a1[15] |= 0x1000u;
            while (2)
            {
              v185 = *v4;
              v186 = *(_QWORD *)&v3[v185];
              v187 = v186 + 1;
              if (v186 == -1 || v187 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v188 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v186);
                *(_QWORD *)&v3[v185] = v187;
                v184 |= (unint64_t)(v188 & 0x7F) << v182;
                if (v188 < 0)
                {
                  v182 += 7;
                  v15 = v183++ >= 9;
                  if (v15)
                  {
                    v184 = 0;
                    goto LABEL_307;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v184 = 0;
LABEL_307:
            v197 = v184 != 0;
            v198 = 46;
            goto LABEL_312;
          case 0x1Bu:
            v189 = 0;
            v190 = 0;
            v191 = 0;
            a1[15] |= 0x8000u;
            while (2)
            {
              v192 = *v4;
              v193 = *(_QWORD *)&v3[v192];
              v194 = v193 + 1;
              if (v193 == -1 || v194 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v195 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v193);
                *(_QWORD *)&v3[v192] = v194;
                v191 |= (unint64_t)(v195 & 0x7F) << v189;
                if (v195 < 0)
                {
                  v189 += 7;
                  v15 = v190++ >= 9;
                  if (v15)
                  {
                    v191 = 0;
                    goto LABEL_311;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v191 = 0;
LABEL_311:
            v197 = v191 != 0;
            v198 = 49;
LABEL_312:
            *((_BYTE *)a1 + v198) = v197;
            goto LABEL_313;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_316;
            goto LABEL_313;
        }
      }
    }
LABEL_314:
    v199 = v3[*v6] == 0;
  }
  else
  {
LABEL_316:
    v199 = 0;
  }
  objc_sync_exit(v3);

  return v199;
}

void sub_189A05AE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapSettingsReadFrom(_DWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateMapSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A05B40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavVoiceGuidanceSettingsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateMapUIReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  GEOMultiTabsState *v25;
  void *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  _BOOL8 v53;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (!v3[*v6])
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_61;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_63:
            v52 = 16;
            goto LABEL_80;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_84;
            v25 = objc_alloc_init(GEOMultiTabsState);
            if (!GEOMultiTabsStateReadAllFrom((uint64_t)v25, v3))
            {

              goto LABEL_84;
            }
            PBReaderRecallMark();
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

LABEL_81:
            if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
              goto LABEL_82;
            break;
          case 3u:
            v27 = 0;
            v28 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_67:
            v52 = 20;
            goto LABEL_80;
          case 4u:
            v33 = 0;
            v34 = 0;
            v35 = 0;
            *(_BYTE *)(a1 + 36) |= 0x10u;
            while (2)
            {
              v36 = *v4;
              v37 = *(_QWORD *)&v3[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
                *(_QWORD *)&v3[v36] = v38;
                v35 |= (unint64_t)(v39 & 0x7F) << v33;
                if (v39 < 0)
                {
                  v33 += 7;
                  v15 = v34++ >= 9;
                  if (v15)
                  {
                    v35 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v35 = 0;
LABEL_71:
            *(_BYTE *)(a1 + 32) = v35 != 0;
            goto LABEL_81;
          case 5u:
            v40 = 0;
            v41 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            while (2)
            {
              v42 = *v4;
              v43 = *(_QWORD *)&v3[v42];
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
                *(_QWORD *)&v3[v42] = v44;
                v20 |= (unint64_t)(v45 & 0x7F) << v40;
                if (v45 < 0)
                {
                  v40 += 7;
                  v15 = v41++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_75:
            v52 = 24;
            goto LABEL_80;
          case 6u:
            v46 = 0;
            v47 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            while (2)
            {
              v48 = *v4;
              v49 = *(_QWORD *)&v3[v48];
              v50 = v49 + 1;
              if (v49 == -1 || v50 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v51 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v49);
                *(_QWORD *)&v3[v48] = v50;
                v20 |= (unint64_t)(v51 & 0x7F) << v46;
                if (v51 < 0)
                {
                  v46 += 7;
                  v15 = v47++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_79:
            v52 = 28;
LABEL_80:
            *(_DWORD *)(a1 + v52) = v20;
            goto LABEL_81;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_84;
            goto LABEL_81;
        }
      }
    }
LABEL_82:
    v53 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    v53 = 0;
  }
  objc_sync_exit(v3);

  return v53;
}

void sub_189A08DD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapUIReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 v4;

  v3 = a2;
  objc_sync_enter(v3);
  v4 = GEOLogMsgStateMapUIReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return v4;
}

void sub_189A08E38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMultiTabsStateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateMapUIShownReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  BOOL v53;
  uint64_t v54;
  _BOOL8 v55;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 16) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_58;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_60;
              }
            }
            v3[*v6] = 1;
LABEL_58:
            if (v3[*v6])
              v20 = 0;
LABEL_60:
            v53 = v20 != 0;
            v54 = 12;
            goto LABEL_73;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 16) |= 0x10u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_64:
            v53 = v27 != 0;
            v54 = 15;
            goto LABEL_73;
          case 3u:
            v32 = 0;
            v33 = 0;
            v34 = 0;
            *(_BYTE *)(a1 + 16) |= 8u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_68:
            v53 = v34 != 0;
            v54 = 14;
            goto LABEL_73;
          case 4u:
            v39 = 0;
            v40 = 0;
            v41 = 0;
            *(_BYTE *)(a1 + 16) |= 4u;
            while (2)
            {
              v42 = *v4;
              v43 = *(_QWORD *)&v3[v42];
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
                *(_QWORD *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  v15 = v40++ >= 9;
                  if (v15)
                  {
                    v41 = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v41 = 0;
LABEL_72:
            v53 = v41 != 0;
            v54 = 13;
LABEL_73:
            *(_BYTE *)(a1 + v54) = v53;
            continue;
          case 5u:
            v46 = 0;
            v47 = 0;
            v48 = 0;
            *(_BYTE *)(a1 + 16) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_81;
            continue;
        }
        while (1)
        {
          v49 = *v4;
          v50 = *(_QWORD *)&v3[v49];
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
            break;
          v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
          *(_QWORD *)&v3[v49] = v51;
          v48 |= (unint64_t)(v52 & 0x7F) << v46;
          if ((v52 & 0x80) == 0)
            goto LABEL_77;
          v46 += 7;
          v15 = v47++ >= 9;
          if (v15)
          {
            LODWORD(v48) = 0;
            goto LABEL_79;
          }
        }
        v3[*v6] = 1;
LABEL_77:
        if (v3[*v6])
          LODWORD(v48) = 0;
LABEL_79:
        *(_DWORD *)(a1 + 8) = v48;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v55 = v3[*v6] == 0;
  }
  else
  {
LABEL_81:
    v55 = 0;
  }
  objc_sync_exit(v3);

  return v55;
}

void sub_189A0A5F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapUIShownReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateMapUIShownReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A0A650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  GEOMapRegion *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  _BOOL8 v65;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_101;
            v18 = objc_alloc_init(GEOMapRegion);
            if (GEOMapRegionReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              v19 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v18;

              continue;
            }

            goto LABEL_101;
          case 2u:
            *(_BYTE *)(a1 + 52) |= 4u;
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v22 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v21);
              *(_QWORD *)&v3[v20] = v21 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v22 = 0;
            }
            v64 = 32;
            goto LABEL_97;
          case 3u:
            v23 = 0;
            v24 = 0;
            v25 = 0;
            *(_BYTE *)(a1 + 52) |= 8u;
            while (2)
            {
              v26 = *v4;
              v27 = *(_QWORD *)&v3[v26];
              v28 = v27 + 1;
              if (v27 == -1 || v28 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v27);
                *(_QWORD *)&v3[v26] = v28;
                v25 |= (unint64_t)(v29 & 0x7F) << v23;
                if (v29 < 0)
                {
                  v23 += 7;
                  v15 = v24++ >= 9;
                  if (v15)
                  {
                    LODWORD(v25) = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v25) = 0;
LABEL_72:
            v61 = 40;
            goto LABEL_85;
          case 4u:
            *(_BYTE *)(a1 + 52) |= 2u;
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v22 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v31);
              *(_QWORD *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v22 = 0;
            }
            v64 = 24;
            goto LABEL_97;
          case 5u:
            *(_BYTE *)(a1 + 52) |= 1u;
            v32 = *v4;
            v33 = *(_QWORD *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v22 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v33);
              *(_QWORD *)&v3[v32] = v33 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v22 = 0;
            }
            v64 = 16;
LABEL_97:
            *(_QWORD *)(a1 + v64) = v22;
            continue;
          case 6u:
            v34 = 0;
            v35 = 0;
            v36 = 0;
            *(_BYTE *)(a1 + 52) |= 0x20u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
                *(_QWORD *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  v15 = v35++ >= 9;
                  if (v15)
                  {
                    v36 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v36 = 0;
LABEL_76:
            v62 = v36 != 0;
            v63 = 48;
            goto LABEL_90;
          case 7u:
            v41 = 0;
            v42 = 0;
            v43 = 0;
            *(_BYTE *)(a1 + 52) |= 0x40u;
            while (2)
            {
              v44 = *v4;
              v45 = *(_QWORD *)&v3[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v47 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v45);
                *(_QWORD *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  v15 = v42++ >= 9;
                  if (v15)
                  {
                    v43 = 0;
                    goto LABEL_80;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v43 = 0;
LABEL_80:
            v62 = v43 != 0;
            v63 = 49;
            goto LABEL_90;
          case 8u:
            v48 = 0;
            v49 = 0;
            v25 = 0;
            *(_BYTE *)(a1 + 52) |= 0x10u;
            while (2)
            {
              v50 = *v4;
              v51 = *(_QWORD *)&v3[v50];
              v52 = v51 + 1;
              if (v51 == -1 || v52 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v53 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v51);
                *(_QWORD *)&v3[v50] = v52;
                v25 |= (unint64_t)(v53 & 0x7F) << v48;
                if (v53 < 0)
                {
                  v48 += 7;
                  v15 = v49++ >= 9;
                  if (v15)
                  {
                    LODWORD(v25) = 0;
                    goto LABEL_84;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v25) = 0;
LABEL_84:
            v61 = 44;
LABEL_85:
            *(_DWORD *)(a1 + v61) = v25;
            continue;
          case 9u:
            v54 = 0;
            v55 = 0;
            v56 = 0;
            *(_BYTE *)(a1 + 52) |= 0x80u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_101;
            continue;
        }
        while (1)
        {
          v57 = *v4;
          v58 = *(_QWORD *)&v3[v57];
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)&v3[*v5])
            break;
          v60 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v58);
          *(_QWORD *)&v3[v57] = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if ((v60 & 0x80) == 0)
            goto LABEL_87;
          v54 += 7;
          v15 = v55++ >= 9;
          if (v15)
          {
            v56 = 0;
            goto LABEL_89;
          }
        }
        v3[*v6] = 1;
LABEL_87:
        if (v3[*v6])
          v56 = 0;
LABEL_89:
        v62 = v56 != 0;
        v63 = 50;
LABEL_90:
        *(_BYTE *)(a1 + v63) = v62;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v65 = v3[*v6] == 0;
  }
  else
  {
LABEL_101:
    v65 = 0;
  }
  objc_sync_exit(v3);

  return v65;
}

void sub_189A0C32C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateMapViewReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A0C38C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewLocationReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOTouristInfo *v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_52;
          v26 = objc_alloc_init(GEOTouristInfo);
          if (!GEOTouristInfoReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_52;
          }
          PBReaderRecallMark();
          v27 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v26;

        }
        else if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_46;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              v30 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            v30 = 0;
LABEL_48:
          *(_BYTE *)(a1 + 20) = v30 != 0;
        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_42;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_44:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_52;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189A0D864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewLocationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgStateMapViewLocationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A0D8C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsFeaturesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  _BOOL8 v110;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_WORD *)(a1 + 52) |= 0x400u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_121;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_123;
              }
            }
            v3[*v6] = 1;
LABEL_121:
            if (v3[*v6])
              v20 = 0;
LABEL_123:
            v107 = v20 != 0;
            v108 = 48;
            goto LABEL_160;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_WORD *)(a1 + 52) |= 0x2000u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_127;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_127:
            v107 = v27 != 0;
            v108 = 51;
            goto LABEL_160;
          case 3u:
            v32 = 0;
            v33 = 0;
            v34 = 0;
            *(_WORD *)(a1 + 52) |= 0x800u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_131;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_131:
            v107 = v34 != 0;
            v108 = 49;
            goto LABEL_160;
          case 4u:
            v39 = 0;
            v40 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 1u;
            while (2)
            {
              v42 = *v4;
              v43 = *(_QWORD *)&v3[v42];
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
                *(_QWORD *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  v15 = v40++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_135;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_135:
            v109 = 8;
            goto LABEL_177;
          case 5u:
            v46 = 0;
            v47 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x40u;
            while (2)
            {
              v48 = *v4;
              v49 = *(_QWORD *)&v3[v48];
              v50 = v49 + 1;
              if (v49 == -1 || v50 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v51 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v49);
                *(_QWORD *)&v3[v48] = v50;
                v41 |= (unint64_t)(v51 & 0x7F) << v46;
                if (v51 < 0)
                {
                  v46 += 7;
                  v15 = v47++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_139;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_139:
            v109 = 32;
            goto LABEL_177;
          case 6u:
            v52 = 0;
            v53 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x80u;
            while (2)
            {
              v54 = *v4;
              v55 = *(_QWORD *)&v3[v54];
              v56 = v55 + 1;
              if (v55 == -1 || v56 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v57 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v55);
                *(_QWORD *)&v3[v54] = v56;
                v41 |= (unint64_t)(v57 & 0x7F) << v52;
                if (v57 < 0)
                {
                  v52 += 7;
                  v15 = v53++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_143;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_143:
            v109 = 36;
            goto LABEL_177;
          case 7u:
            v58 = 0;
            v59 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 2u;
            while (2)
            {
              v60 = *v4;
              v61 = *(_QWORD *)&v3[v60];
              v62 = v61 + 1;
              if (v61 == -1 || v62 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v63 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v61);
                *(_QWORD *)&v3[v60] = v62;
                v41 |= (unint64_t)(v63 & 0x7F) << v58;
                if (v63 < 0)
                {
                  v58 += 7;
                  v15 = v59++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_147;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_147:
            v109 = 12;
            goto LABEL_177;
          case 8u:
            v64 = 0;
            v65 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x200u;
            while (2)
            {
              v66 = *v4;
              v67 = *(_QWORD *)&v3[v66];
              v68 = v67 + 1;
              if (v67 == -1 || v68 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v69 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v67);
                *(_QWORD *)&v3[v66] = v68;
                v41 |= (unint64_t)(v69 & 0x7F) << v64;
                if (v69 < 0)
                {
                  v64 += 7;
                  v15 = v65++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_151;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_151:
            v109 = 44;
            goto LABEL_177;
          case 9u:
            v70 = 0;
            v71 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x100u;
            while (2)
            {
              v72 = *v4;
              v73 = *(_QWORD *)&v3[v72];
              v74 = v73 + 1;
              if (v73 == -1 || v74 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v75 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v73);
                *(_QWORD *)&v3[v72] = v74;
                v41 |= (unint64_t)(v75 & 0x7F) << v70;
                if (v75 < 0)
                {
                  v70 += 7;
                  v15 = v71++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_155;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_155:
            v109 = 40;
            goto LABEL_177;
          case 0xAu:
            v76 = 0;
            v77 = 0;
            v78 = 0;
            *(_WORD *)(a1 + 52) |= 0x1000u;
            while (2)
            {
              v79 = *v4;
              v80 = *(_QWORD *)&v3[v79];
              v81 = v80 + 1;
              if (v80 == -1 || v81 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v82 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v80);
                *(_QWORD *)&v3[v79] = v81;
                v78 |= (unint64_t)(v82 & 0x7F) << v76;
                if (v82 < 0)
                {
                  v76 += 7;
                  v15 = v77++ >= 9;
                  if (v15)
                  {
                    v78 = 0;
                    goto LABEL_159;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v78 = 0;
LABEL_159:
            v107 = v78 != 0;
            v108 = 50;
LABEL_160:
            *(_BYTE *)(a1 + v108) = v107;
            continue;
          case 0xBu:
            v83 = 0;
            v84 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x20u;
            while (2)
            {
              v85 = *v4;
              v86 = *(_QWORD *)&v3[v85];
              v87 = v86 + 1;
              if (v86 == -1 || v87 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v88 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v86);
                *(_QWORD *)&v3[v85] = v87;
                v41 |= (unint64_t)(v88 & 0x7F) << v83;
                if (v88 < 0)
                {
                  v83 += 7;
                  v15 = v84++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_164;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_164:
            v109 = 28;
            goto LABEL_177;
          case 0xCu:
            v89 = 0;
            v90 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x10u;
            while (2)
            {
              v91 = *v4;
              v92 = *(_QWORD *)&v3[v91];
              v93 = v92 + 1;
              if (v92 == -1 || v93 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v94 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v92);
                *(_QWORD *)&v3[v91] = v93;
                v41 |= (unint64_t)(v94 & 0x7F) << v89;
                if (v94 < 0)
                {
                  v89 += 7;
                  v15 = v90++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_168;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_168:
            v109 = 24;
            goto LABEL_177;
          case 0xDu:
            v95 = 0;
            v96 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 8u;
            while (2)
            {
              v97 = *v4;
              v98 = *(_QWORD *)&v3[v97];
              v99 = v98 + 1;
              if (v98 == -1 || v99 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v100 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v98);
                *(_QWORD *)&v3[v97] = v99;
                v41 |= (unint64_t)(v100 & 0x7F) << v95;
                if (v100 < 0)
                {
                  v95 += 7;
                  v15 = v96++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_172;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v41) = 0;
LABEL_172:
            v109 = 20;
            goto LABEL_177;
          case 0xEu:
            v101 = 0;
            v102 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 52) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_180;
            continue;
        }
        while (1)
        {
          v103 = *v4;
          v104 = *(_QWORD *)&v3[v103];
          v105 = v104 + 1;
          if (v104 == -1 || v105 > *(_QWORD *)&v3[*v5])
            break;
          v106 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v104);
          *(_QWORD *)&v3[v103] = v105;
          v41 |= (unint64_t)(v106 & 0x7F) << v101;
          if ((v106 & 0x80) == 0)
            goto LABEL_174;
          v101 += 7;
          v15 = v102++ >= 9;
          if (v15)
          {
            LODWORD(v41) = 0;
            goto LABEL_176;
          }
        }
        v3[*v6] = 1;
LABEL_174:
        if (v3[*v6])
          LODWORD(v41) = 0;
LABEL_176:
        v109 = 16;
LABEL_177:
        *(_DWORD *)(a1 + v109) = v41;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v110 = v3[*v6] == 0;
  }
  else
  {
LABEL_180:
    v110 = 0;
  }
  objc_sync_exit(v3);

  return v110;
}

