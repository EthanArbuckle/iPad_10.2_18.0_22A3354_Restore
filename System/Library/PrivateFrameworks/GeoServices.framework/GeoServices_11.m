void sub_188FC6464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FC6798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FC7374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityLocationSearchResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[3], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[2];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[5];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOWiFiQualityLocationSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualityLocationSearchResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualityLocationSearchResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualityLocationSearchResultReadAllFrom_initialTag;
  Specified = GEOWiFiQualityLocationSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiQualityLocationSearchResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188FC76B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityLocationSearchResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FC7710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityLocationSearchResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1))
            goto LABEL_49;
          goto LABEL_53;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v22 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1))
            goto LABEL_53;
          goto LABEL_49;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualitySearchResultTileIsValid(a1))
            goto LABEL_53;
LABEL_49:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_50;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOWiFiQualitySearchResultTileIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1))
        {
LABEL_40:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2)
            goto LABEL_40;
        }
        else if ((_DWORD)v16 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_40;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
              break;
            v20 = v19 + 1;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8)
              continue;
            goto LABEL_37;
          }
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_40;
      }
LABEL_37:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188FC7F58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityLocationSearchResultIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(_BYTE *)(a1 + 64);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 64) & 8) == 0)
  {
LABEL_5:
    if ((v2 & 0x14) != 0)
      return 1;
    if ((v2 & 4) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 16);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v17;
LABEL_11:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          if ((GEOWiFiESSIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v9)) & 1) != 0)
            goto LABEL_29;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v7)
              goto LABEL_11;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 64);
    }
    if ((v2 & 0x10) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 40);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_30:

      return v3;
    }
    v10 = *(_QWORD *)v13;
LABEL_22:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v10)
        objc_enumerationMutation(v5);
      if ((GEOWiFiQualitySearchResultTileIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)) & 1) != 0)
        break;
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_22;
        goto LABEL_30;
      }
    }
LABEL_29:
    v3 = 1;
    goto LABEL_30;
  }
  if (!GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24)))
  {
    v2 = *(_BYTE *)(a1 + 64);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOWiFiQualityLocationSearchResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWiFiQualityLocationSearchResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOWiFiQualityLocationSearchResultClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLocation")
    && (objc_msgSend(a1, "location"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "location");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "location");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEOWiFiQualityLocationSearchResultHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "location");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188FC8998(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FC8F84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityNetworkSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOWiFiESS *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  char v47;
  char v48;
  int v49;
  int v50;
  void *v51;
  _BOOL4 v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v54 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_76;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        v47 = 1;
        goto LABEL_91;
      }
      if (!v15)
        goto LABEL_92;
      while (1)
      {
        v50 = *v15++;
        v49 = v50;
        if (v50 == 1)
          break;
        if (v49 == 2)
        {
          v48 = 4;
LABEL_82:
          *(_BYTE *)(a1 + 52) |= v48;
        }
        else if (!v49)
        {
          goto LABEL_92;
        }
      }
      v48 = 2;
      goto LABEL_82;
    }
    v30 = v23 >> 3;
    v31 = v16;
    if (!v54)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
    {
      if ((v8 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0)
            goto LABEL_66;
          v37 += 7;
          v27 = v38++ >= 9;
          if (v27)
          {
            v39 = 0;
            goto LABEL_68;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_66:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_68:
        *(_QWORD *)(a1 + 32) = v39;
        goto LABEL_72;
      }
      goto LABEL_63;
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 != 1)
    {
      v44 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
        goto LABEL_87;
      goto LABEL_72;
    }
    if (v31 && (*(_BYTE *)(a1 + 52) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_88;
      v53 = v16;
      v36 = objc_alloc_init(GEOWiFiESS);
      if (!GEOWiFiESSReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
        goto LABEL_89;
      PBReaderRecallMark();
      -[GEOWiFiQualityNetworkSearch _addNoFlagsEss:](a1, v36);

LABEL_60:
      v16 = v53;
LABEL_71:
      v19 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_72;
    }
LABEL_63:
    v45 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
LABEL_87:
      v47 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v7)
      v46 = 1;
    else
      v46 = v16;
    if ((v46 & 1) == 0)
      goto LABEL_76;
  }
  if (!v31)
    goto LABEL_63;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_88:
      v47 = 0;
      goto LABEL_90;
    }
    v7 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_88;
  v53 = v16;
  v36 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    v43 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v36;

    --v7;
    goto LABEL_60;
  }
LABEL_89:

  v47 = 0;
  v16 = v53;
LABEL_90:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v47 & 1) != 0)
  {
LABEL_92:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_93;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_93:
      v51 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188FC9804(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FC9F0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityNetworkSearchCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
}

unint64_t GEOWiFiQualityNetworkSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualityNetworkSearchReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualityNetworkSearchReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualityNetworkSearchReadAllFrom_initialTag;
  Specified = GEOWiFiQualityNetworkSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiQualityNetworkSearchCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188FCA1B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityNetworkSearchReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityNetworkSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FCA210(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if ((_DWORD)v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1))
            goto LABEL_43;
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188FCA6BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityNetworkSearchIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 0xA) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24)))
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  if ((v2 & 2) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOWiFiESSIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_19;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOWiFiQualityNetworkSearchIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWiFiQualityNetworkSearchIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOWiFiQualityNetworkSearchClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLocation")
    && (objc_msgSend(a1, "location"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "location");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "location");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEOWiFiQualityNetworkSearchHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "location");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_188FCAE50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchResultReadAllFrom(void *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  GEOWiFiESSMatch *v19;
  _BOOL8 v20;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v19 = objc_alloc_init(GEOWiFiESSMatch);
          if (!GEOWiFiESSMatchReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addMatches:", v19, 0, 0);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_188FCB86C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchResultReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityNetworkSearchResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FCB8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSMatchIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_188FCC1E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityProfileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOWiFiQualityHours *v36;
  void *v37;
  char v38;
  char v39;
  int v40;
  int v41;
  void *v42;
  BOOL v44;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v44 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_61;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_61:
      if (v15)
      {
        v39 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v41 = *v16++;
            v40 = v41;
            if (v41 != 1 && v40 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v40;
          }
        }
        while (v40);
      }
      goto LABEL_71;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v44)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_69;
      goto LABEL_54;
    }
    if (!v31)
      goto LABEL_53;
    if ((*(_BYTE *)(a1 + 44) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_69;
      v36 = objc_alloc_init(GEOWiFiQualityHours);
      if (!GEOWiFiQualityHoursReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
        goto LABEL_76;
      PBReaderRecallMark();
      v37 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v36;

      --v7;
      goto LABEL_50;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      v39 = 0;
      goto LABEL_70;
    }
    v7 -= *(_BYTE *)(a1 + 44) & 1;
LABEL_54:
    if (v7)
      v38 = 1;
    else
      v38 = v15;
    if ((v38 & 1) == 0)
      goto LABEL_61;
  }
  if (!v31 || (*(_BYTE *)(a1 + 44) & 2) != 0)
  {
LABEL_53:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_69;
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v36 = objc_alloc_init(GEOWiFiQualityIndex);
  if (GEOWiFiQualityIndexReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityProfile _addNoFlagsQualities:](a1, v36);

LABEL_50:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_54;
  }
LABEL_76:

  v39 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v39 & 1) != 0)
  {
LABEL_71:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_72;
  }
  v3 = 0;
  if (v15)
  {
LABEL_72:
    v42 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188FCC77C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FCCF78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityProfileCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOWiFiQualityProfileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualityProfileReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualityProfileReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualityProfileReadAllFrom_initialTag;
  Specified = GEOWiFiQualityProfileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiQualityProfileCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188FCD21C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityProfileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityProfileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FCD27C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FCD49C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityProfileIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(unsigned __int8 *)(a1 + 44);
  if ((v2 & 4) != 0)
    return 1;
  if ((v2 & 1) != 0)
  {
    if (GEOWiFiQualityHoursIsDirty(*(_QWORD *)(a1 + 16)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 44);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOWiFiQualityProfileIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWiFiQualityProfileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188FCD890(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FCDD0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualitySearchResultTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  GEOWiFiESS *v42;
  uint64_t v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  char v48;
  char v49;
  int v50;
  int v51;
  void *v52;
  _BOOL4 v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v55 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        v48 = 1;
        goto LABEL_88;
      }
      if (!v15)
        goto LABEL_89;
      while (1)
      {
        v51 = *v15++;
        v50 = v51;
        if (v51 == 2)
          break;
        if (v50 == 3)
        {
          v49 = 2;
LABEL_79:
          *(_BYTE *)(a1 + 52) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_89;
        }
      }
      v49 = 4;
      goto LABEL_79;
    }
    v30 = v23 >> 3;
    v31 = v16;
    if (!v55)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
      break;
    if ((_DWORD)v30 == 2)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_85:
            v48 = 0;
            goto LABEL_87;
          }
          v9 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v43;

          --v9;
        }
        goto LABEL_68;
      }
    }
    else
    {
      if ((_DWORD)v30 != 1)
      {
        v45 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v45)
          goto LABEL_84;
        goto LABEL_69;
      }
      if ((v8 & 1) != 0)
      {
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (1)
        {
          v39 = *v18;
          v40 = *(_QWORD *)(v3 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0)
            goto LABEL_63;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            v38 = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          v38 = 0;
LABEL_65:
        *(_QWORD *)(a1 + 32) = v38;
        goto LABEL_69;
      }
    }
LABEL_60:
    v46 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
LABEL_84:
      v48 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v9)
      v47 = 1;
    else
      v47 = v16;
    if ((v47 & 1) == 0)
      goto LABEL_73;
  }
  if (!v31 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_60;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v54 = v16;
  v42 = objc_alloc_init(GEOWiFiESS);
  if (GEOWiFiESSReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualitySearchResultTile _addNoFlagsEss:](a1, v42);

    v16 = v54;
LABEL_68:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_69;
  }

  v48 = 0;
  v16 = v54;
LABEL_87:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v48 & 1) != 0)
  {
LABEL_89:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_90;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_90:
      v52 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188FCE360(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FCEBB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualitySearchResultTileCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOWiFiQualitySearchResultTileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualitySearchResultTileReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualitySearchResultTileReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualitySearchResultTileReadAllFrom_initialTag;
  Specified = GEOWiFiQualitySearchResultTileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiQualitySearchResultTileCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188FCEE44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualitySearchResultTileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualitySearchResultTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FCEEA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FCF0EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualitySearchResultTileIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOWiFiESSIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOWiFiQualitySearchResultTileIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWiFiQualitySearchResultTileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_188FCF724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualitySearchTileReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v26 = *v4;
            v27 = *(_QWORD *)&v3[v26];
            if (v27 == -1 || v27 >= *(_QWORD *)&v3[*v5])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v27);
            *(_QWORD *)&v3[v26] = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if ((v28 & 0x80) == 0)
              goto LABEL_42;
            v23 += 7;
            v14 = v24++ >= 9;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            LODWORD(v25) = 0;
LABEL_44:
          *(_DWORD *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_38;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6])
            v19 = 0;
LABEL_40:
          *(_QWORD *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_188FD0208(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualitySearchTileReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualitySearchTileReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FD0268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FD0748(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  GEOWiFiQualityNetworkSearch *v34;
  void *v35;
  char v36;
  int v37;
  char v38;
  void *v39;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_63;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_23;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_63:
      if ((v14 & 1) != 0)
      {
        v36 = 1;
        goto LABEL_71;
      }
      if (v15)
      {
        while (1)
        {
          v37 = *v15++;
          v38 = 1;
          switch(v37)
          {
            case 0:
              goto LABEL_72;
            case 1:
              goto LABEL_69;
            case 3:
              v38 = 2;
              goto LABEL_69;
            case 4:
              v38 = 4;
LABEL_69:
              *(_BYTE *)(a1 + 52) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_72;
    }
    v28 = v21 >> 3;
    v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v30 = v15;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 == 4)
    {
      if (!v29 || (*(_BYTE *)(a1 + 52) & 4) != 0)
      {
LABEL_58:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_70;
        goto LABEL_59;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_70;
      v34 = objc_alloc_init(GEOWiFiQualityNetworkSearch);
      if (!GEOWiFiQualityNetworkSearchReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
        goto LABEL_77;
      PBReaderRecallMark();
      -[GEOWiFiQualityServiceRequest _addNoFlagsNetworkSearches:](a1, v34);
      goto LABEL_54;
    }
    if ((_DWORD)v28 == 3)
      break;
    if ((_DWORD)v28 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_70;
      goto LABEL_59;
    }
    if (!v29)
      goto LABEL_58;
    if ((*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_70;
      v34 = objc_alloc_init(GEOPDClientMetadata);
      if (!GEOPDClientMetadataReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
        goto LABEL_77;
      PBReaderRecallMark();
      v35 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v34;

      --v7;
      goto LABEL_55;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_70:
      v36 = 0;
      goto LABEL_71;
    }
    v7 -= *(_BYTE *)(a1 + 52) & 1;
LABEL_59:
    if (!(v14 & 1 | (v7 != 0)))
      goto LABEL_63;
  }
  if (!v29 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_58;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_70;
  v34 = objc_alloc_init(GEOWiFiQualityLocationSearch);
  if (GEOWiFiQualityLocationSearchReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityServiceRequest _addNoFlagsLocationSearches:](a1, v34);
LABEL_54:

LABEL_55:
    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_59;
  }
LABEL_77:

  v36 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v36 & 1) != 0)
  {
LABEL_72:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0)
      return v3;
    goto LABEL_73;
  }
  v3 = 0;
  if ((v14 & 1) != 0)
  {
LABEL_73:
    v39 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_188FD0D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FD10B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FD1AE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityServiceRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[2], "readAll:", 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOWiFiQualityServiceRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualityServiceRequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualityServiceRequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualityServiceRequestReadAllFrom_initialTag;
  Specified = GEOWiFiQualityServiceRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiQualityServiceRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188FD1E20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityServiceRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FD1E80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityServiceRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_35;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_35;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 4)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityNetworkSearchIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if ((_DWORD)v16 == 3)
        break;
      if ((_DWORD)v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1))
          goto LABEL_36;
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_36;
LABEL_34:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_35;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityLocationSearchIsValid(a1))
      goto LABEL_36;
    goto LABEL_32;
  }
LABEL_35:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_188FD236C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityServiceRequestIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
LABEL_5:
    if ((v2 & 6) != 0)
      return 1;
    if ((v2 & 2) != 0)
    {
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v5 = *(id *)(a1 + 24);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v17;
LABEL_11:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          if ((GEOWiFiQualityLocationSearchIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1)
                                                                                          + 8 * v9)) & 1) != 0)
            goto LABEL_29;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
            if (v7)
              goto LABEL_11;
            break;
          }
        }
      }

      v2 = *(_BYTE *)(a1 + 52);
    }
    if ((v2 & 4) == 0)
      return 0;
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 32);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    if (!v3)
    {
LABEL_30:

      return v3;
    }
    v10 = *(_QWORD *)v13;
LABEL_22:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v10)
        objc_enumerationMutation(v5);
      if ((GEOWiFiQualityNetworkSearchIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)) & 1) != 0)
        break;
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
        if (v3)
          goto LABEL_22;
        goto LABEL_30;
      }
    }
LABEL_29:
    v3 = 1;
    goto LABEL_30;
  }
  if ((GEOPDClientMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 16)) & 1) == 0)
  {
    v2 = *(_BYTE *)(a1 + 52);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOWiFiQualityServiceRequestIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOWiFiQualityServiceRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOWiFiQualityServiceRequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  void *v6;
  int HasSensitiveFields;
  void *v8;
  id *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unint64_t result;
  unint64_t i;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  if (a3
    && objc_msgSend(a1, "hasClientMetadata")
    && (objc_msgSend(a1, "clientMetadata"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v6),
        v6,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "clientMetadata");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id *)objc_msgSend(v8, "copy");

    GEOPDClientMetadataClearSensitiveFields(v9, a2, 0);
    objc_msgSend(a1, "setClientMetadata:", v9);
  }
  else
  {
    objc_msgSend(a1, "clientMetadata");
    v9 = (id *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

  -[GEOWiFiQualityServiceRequest _readLocationSearches]((uint64_t)a1);
  if (objc_msgSend(a1[3], "count"))
  {
    v10 = 0;
    do
    {
      objc_msgSend(a1[3], "objectAtIndexedSubscript:", v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (a3 && GEOWiFiQualityLocationSearchHasSensitiveFields(v11))
      {
        v13 = (void *)objc_msgSend(v12, "copy");
        objc_msgSend(v13, "location");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "clearSensitiveFields:", a2);

        objc_msgSend(a1[3], "replaceObjectAtIndex:withObject:", v10, v13);
      }
      else
      {
        objc_msgSend(v12, "clearSensitiveFields:", a2);
      }

      ++v10;
    }
    while (v10 < objc_msgSend(a1[3], "count"));
  }
  -[GEOWiFiQualityServiceRequest _readNetworkSearches]((uint64_t)a1);
  result = objc_msgSend(a1[4], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[4], "objectAtIndexedSubscript:", i);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = v17;
      if (a3 && GEOWiFiQualityNetworkSearchHasSensitiveFields(v17))
      {
        v19 = (void *)objc_msgSend(v18, "copy");
        objc_msgSend(v19, "location");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "clearSensitiveFields:", a2);

        objc_msgSend(a1[4], "replaceObjectAtIndex:withObject:", i, v19);
      }
      else
      {
        objc_msgSend(v18, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(a1[4], "count");
    }
  }
  return result;
}

uint64_t GEOWiFiQualityServiceRequestHasSensitiveFields(void *a1)
{
  void *v2;
  char HasSensitiveFields;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  objc_msgSend(a1, "clientMetadata");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v2);

  if ((HasSensitiveFields & 1) == 0)
  {
    v21 = 0u;
    v22 = 0u;
    v19 = 0u;
    v20 = 0u;
    objc_msgSend(a1, "locationSearches");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v20;
LABEL_7:
      v9 = 0;
      while (1)
      {
        if (*(_QWORD *)v20 != v8)
          objc_enumerationMutation(v5);
        if ((GEOWiFiQualityLocationSearchHasSensitiveFields(*(void **)(*((_QWORD *)&v19 + 1) + 8 * v9)) & 1) != 0)
          break;
        if (v7 == ++v9)
        {
          v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
          if (v7)
            goto LABEL_7;
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      v17 = 0u;
      v18 = 0u;
      v15 = 0u;
      v16 = 0u;
      objc_msgSend(a1, "networkSearches", 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
      if (!v10)
      {
LABEL_21:
        v4 = 0;
LABEL_23:

        return v4;
      }
      v11 = v10;
      v12 = *(_QWORD *)v16;
LABEL_15:
      v13 = 0;
      while (1)
      {
        if (*(_QWORD *)v16 != v12)
          objc_enumerationMutation(v5);
        if ((GEOWiFiQualityNetworkSearchHasSensitiveFields(*(void **)(*((_QWORD *)&v15 + 1) + 8 * v13)) & 1) != 0)
          break;
        if (v11 == ++v13)
        {
          v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
          if (v11)
            goto LABEL_15;
          goto LABEL_21;
        }
      }
    }
    v4 = 1;
    goto LABEL_23;
  }
  return 1;
}

void sub_188FD3024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FD37F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  int *v16;
  GEOWiFiQualityNetworkSearchResult *v17;
  BOOL v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  GEOWiFiQualityNetworkSearchResult *v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  BOOL v49;
  BOOL v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v7 != 0;
        if (v14)
          v15 = 1;
        v49 = v15;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = (GEOWiFiQualityNetworkSearchResult *)(v14 != 0);
        v18 = v16 == 0;
        if (v14)
          v18 = 1;
        v50 = v18;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_71;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      if (v26 == -1 || v26 >= *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0)
        goto LABEL_27;
      v22 += 7;
      v28 = v23++ >= 9;
      if (v28)
      {
        v24 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_27:
    v29 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_29:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_71:
      if ((v17 & 1) != 0)
      {
        v44 = 1;
        goto LABEL_82;
      }
      if (!v16)
        goto LABEL_83;
      while (1)
      {
        while (1)
        {
          v46 = *v16++;
          v45 = v46;
          if (v46 != 2)
            break;
LABEL_76:
          *(_BYTE *)(a1 + 48) |= v45;
        }
        if (v45 == 3)
        {
          LOBYTE(v45) = 4;
          goto LABEL_76;
        }
        if (!v45)
          goto LABEL_83;
      }
    }
    v31 = v24 >> 3;
    v32 = (int)v17;
    if (!v50)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (v32 && (*(_BYTE *)(a1 + 48) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_81;
        v43 = v17;
        v17 = objc_alloc_init(GEOWiFiQualityNetworkSearchResult);
        if (!GEOWiFiQualityNetworkSearchResultReadAllFrom(v17, (void *)v3, v9 & 1))
          goto LABEL_88;
        PBReaderRecallMark();
        -[GEOWiFiQualityServiceResponse _addNoFlagsNetworkResults:](a1, v17);
        goto LABEL_61;
      }
      goto LABEL_64;
    }
    if ((_DWORD)v31 != 2)
    {
      if ((_DWORD)v31 != 1)
      {
        if (!PBReaderSkipValueWithTag())
          goto LABEL_81;
        goto LABEL_70;
      }
      if ((v8 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v40 = *v19;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v41);
          *(_QWORD *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0)
            goto LABEL_67;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_69;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_67:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v39) = 0;
LABEL_69:
        *(_DWORD *)(a1 + 44) = v39;
        goto LABEL_70;
      }
      goto LABEL_64;
    }
    if (v32 && (*(_BYTE *)(a1 + 48) & 2) == 0)
      break;
LABEL_64:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_81:
      v44 = 0;
      goto LABEL_82;
    }
LABEL_70:
    if (!v49)
      goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v43 = v17;
  v17 = objc_alloc_init(GEOWiFiQualityLocationSearchResult);
  if (GEOWiFiQualityLocationSearchResultReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityServiceResponse _addNoFlagsLocationResults:](a1, v17);
LABEL_61:

    v17 = v43;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_70;
  }
LABEL_88:

  v44 = 0;
  LODWORD(v17) = (_DWORD)v43;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
  *(_BYTE *)(a1 + 48) |= 2u;
  *(_BYTE *)(a1 + 48) |= 4u;
  if ((v44 & 1) != 0)
  {
LABEL_83:
    v3 = *(_BYTE *)(v3 + *v20) == 0;
    if ((_DWORD)v17)
      goto LABEL_84;
  }
  else
  {
    v3 = 0;
    if ((_DWORD)v17)
    {
LABEL_84:
      v47 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188FD4024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FD4C2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityServiceResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOWiFiQualityServiceResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOWiFiQualityServiceResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOWiFiQualityServiceResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOWiFiQualityServiceResponseReadAllFrom_initialTag;
  Specified = GEOWiFiQualityServiceResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOWiFiQualityServiceResponseCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188FD4F54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOWiFiQualityServiceResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_188FD4FB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityServiceResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_41;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityLocationSearchResultIsValid(a1))
          goto LABEL_43;
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_41;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityNetworkSearchResultIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188FD54EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityServiceResponseIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

unint64_t GEOWiFiQualityServiceResponseClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  -[GEOWiFiQualityServiceResponse _readLocationResults](a1);
  result = objc_msgSend(*(id *)(a1 + 16), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 16), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOWiFiQualityLocationSearchResultHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "location");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 16), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 16), "count");
    }
  }
  return result;
}

uint64_t GEOWiFiQualityServiceResponseHasSensitiveFields(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(a1, "locationResults", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEOWiFiQualityLocationSearchResultHasSensitiveFields(*(void **)(*((_QWORD *)&v8 + 1)
                                                                                             + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

void sub_188FD5D80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOWiFiQualityTimeRangeDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOWiFiQualityTimeRangeDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOWiFiQualityTimeRange<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOWiFiQualityTimeRangeDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  char v3;
  void *v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *((_BYTE *)a1 + 8);
  if ((v3 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *a1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v4, CFSTR("from"));

    v3 = *((_BYTE *)a1 + 8);
  }
  if ((v3 & 2) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[1]);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v5, CFSTR("to"));

  }
  return v2;
}

void _GEOWiFiQualityTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a1;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("from"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 1u;
    *(_DWORD *)a2 = objc_msgSend(v4, "unsignedIntValue");
  }

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("to"));
  v5 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = objc_msgSend(v5, "unsignedIntValue");
  }

}

BOOL GEOWiFiQualityTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOWiFiQualityTimeRangeReadAllFrom(a1, a2);
}

BOOL GEOWiFiQualityTimeRangeReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  _DWORD *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (_DWORD *)(a1 + 4);
    v8 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v3;
        v13 = *(_QWORD *)(a2 + v12);
        if (v13 == -1 || v13 >= *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v13);
        *(_QWORD *)(a2 + v12) = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v9 += 7;
        if (v10++ >= 9)
        {
          v11 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v11 = 0;
LABEL_14:
      if (v16 || (v11 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v11 >> 3) == 2)
        break;
      if ((v11 >> 3) == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 8) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = (_DWORD *)a1;
            goto LABEL_38;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = (_DWORD *)a1;
            goto LABEL_41;
          }
        }
        v25 = (_DWORD *)a1;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_41:
        *v25 = v20;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v26 = 0;
    v27 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 8) |= 2u;
    while (1)
    {
      v28 = *v3;
      v29 = *(_QWORD *)(a2 + v28);
      if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v8) + v29);
      *(_QWORD *)(a2 + v28) = v29 + 1;
      v20 |= (unint64_t)(v30 & 0x7F) << v26;
      if ((v30 & 0x80) == 0)
      {
        v25 = v7;
        goto LABEL_39;
      }
      v26 += 7;
      v24 = v27++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = v7;
        goto LABEL_41;
      }
    }
    v25 = v7;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL GEOWiFiQualityTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOWiFiQualityTimeRangeHash()
{
  return PBHashBytes();
}

void sub_188FD6D38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODefaultsGetUseTestDefaults()
{
  return 0;
}

uint64_t GEOCanUserMakeLagunaBeachContributions()
{
  return GEOConfigGetBOOL(GeoServicesConfig_LagunaBeachAllowMakingContributionsToMaps, (uint64_t)off_1EDF4CBF8);
}

uint64_t GEOIsBAASupported()
{
  return 1;
}

void GEOSetCanUserMakeLagunaBeachContributions()
{
  GEOConfigSetBOOL(GeoServicesConfig_LagunaBeachAllowMakingContributionsToMaps, (uint64_t)off_1EDF4CBF8);
}

uint64_t GEOAreLagunaBeachSiriSuggestionsEnabled()
{
  return GEOConfigGetBOOL(GeoServicesConfig_LagunaBeachEnableSiriSuggestions, (uint64_t)off_1EDF4CBE8);
}

void GEOSetAreLagunaBeachSiriSuggestionsEnabled()
{
  GEOConfigSetBOOL(GeoServicesConfig_LagunaBeachEnableSiriSuggestions, (uint64_t)off_1EDF4CBE8);
}

BOOL GEODoesUserHaveValidAccountForMakingContributions()
{
  return +[GEOUserAccountInfo hasValidICloudAccountForAddingRatingsAndPhotos](GEOUserAccountInfo, "hasValidICloudAccountForAddingRatingsAndPhotos");
}

id GEOGetGEOComposedStringLog_0()
{
  if (qword_1ECDBBE88 != -1)
    dispatch_once(&qword_1ECDBBE88, &__block_literal_global_207);
  return (id)_MergedGlobals_230;
}

id GEOSpatialLookupAllCategories()
{
  void *v0;
  uint64_t i;
  void *v2;

  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 22);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  for (i = 0; i != 22; ++i)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", i);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "addObject:", v2);

  }
  return v0;
}

id _mapItemFromHandleContents(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = a1;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___mapItemFromHandleContents_block_invoke;
  v7[3] = &unk_1E1C0A348;
  v2 = v1;
  v8 = v2;
  +[GEOMapItemBuilder buildWithSetterBlock:](GEOMapItemBuilder, "buildWithSetterBlock:", v7);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    +[GEOMapItemStorage mapItemStorageForGEOMapItem:](GEOMapItemStorage, "mapItemStorageForGEOMapItem:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "clientAttributes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setClientAttributes:", v5);

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void ___mapItemFromHandleContents_block_invoke(uint64_t a1, void *a2)
{
  id *v3;
  void *v4;
  void *v5;
  void *v6;
  GEOAddress *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  objc_msgSend(*(id *)(a1 + 32), "placeRefinementParameters");
  v3 = (id *)objc_claimAutoreleasedReturnValue();
  -[GEOPDPlaceRefinementParameters locationHint](v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setLatlng:", v4);

  -[GEOPDPlaceRefinementParameters formattedAddressLineHints](v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {

LABEL_4:
    v7 = objc_alloc_init(GEOAddress);
    objc_msgSend(v13, "setAddress:", v7);

    -[GEOPDPlaceRefinementParameters formattedAddressLineHints](v3);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "address");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setFormattedAddressLines:", v8);

    -[GEOPDPlaceRefinementParameters addressHint](v3);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "address");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "setStructuredAddress:", v10);

    goto LABEL_5;
  }
  -[GEOPDPlaceRefinementParameters addressHint](v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
    goto LABEL_4;
LABEL_5:
  -[GEOPDPlaceRefinementParameters placeNameHint](v3);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "setName:", v12);

}

void sub_188FE30A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_188FE34DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  void *v17;
  void *v18;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_188FE3744(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_188FE39D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_188FE3BD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  va_list va;

  va_start(va, a2);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);

  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::MapEdgeRoad(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id *v20;
  id *v21;
  BOOL v22;
  id v23;
  int v24;
  int v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  id *v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  float *v65;
  float v66;
  long double v67;
  double v68;
  void *v69;
  void *v70;
  void *v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  void *v75;
  uint64_t v76;
  id v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  __int128 v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  float *v92;
  float v93;
  long double v94;
  double v95;
  void *v96;
  void *v97;
  void *v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  uint64_t v103;
  uint64_t *v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  _QWORD *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v112 = *MEMORY[0x1E0C80C00];
  *(_OWORD *)(a1 + 8) = 0u;
  v103 = a1 + 8;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)a1 = &off_1E1BF6328;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)&v108 = a1 + 40;
  BYTE8(v108) = 0;
  v5 = v4 - v3;
  if (v4 == v3)
  {
    v9 = 0;
    v8 = 0;
  }
  else
  {
    std::vector<unsigned long long>::__vallocate[abi:ne180100]((_QWORD *)(a1 + 40), v5 >> 3);
    v6 = 0;
    v7 = *(_QWORD *)(a1 + 48);
    do
    {
      *(_QWORD *)(v7 + v6) = *(id *)(v3 + v6);
      v6 += 8;
    }
    while (v3 + v6 != v4);
    v5 = v7 + v6;
    *(_QWORD *)(a1 + 48) = v7 + v6;
    v8 = *(_QWORD *)(a1 + 56);
    v9 = *(_QWORD *)(a1 + 40);
  }
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0xBFF0000000000000;
  v104 = (uint64_t *)(a1 + 64);
  *(_QWORD *)(a1 + 96) = 0;
  v10 = (v5 - v9) >> 3;
  if (v10 < (v8 - v9) >> 3)
  {
    v111 = a1 + 56;
    if (v5 == v9)
    {
      v15 = 0;
      v13 = 8 * v10;
    }
    else
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a1 + 56, (v5 - v9) >> 3);
      v12 = *(_QWORD *)(a1 + 40);
      v5 = *(_QWORD *)(a1 + 48);
      v13 = (uint64_t)&v11[8 * v10];
      v15 = &v11[8 * v14];
      if (v5 != v12)
      {
        v16 = &v11[8 * v10];
        do
        {
          v17 = *(_QWORD *)(v5 - 8);
          v5 -= 8;
          *(_QWORD *)v5 = 0;
          *((_QWORD *)v16 - 1) = v17;
          v16 -= 8;
        }
        while (v5 != v12);
        v18 = *(_QWORD *)(a1 + 40);
        v5 = *(_QWORD *)(a1 + 48);
        goto LABEL_14;
      }
    }
    v18 = v5;
    v16 = (char *)v13;
LABEL_14:
    *(_QWORD *)(a1 + 40) = v16;
    *(_QWORD *)(a1 + 48) = v13;
    v19 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v15;
    v109 = (_QWORD *)v5;
    v110 = v19;
    *(_QWORD *)&v108 = v18;
    *((_QWORD *)&v108 + 1) = v18;
    std::__split_buffer<GEORoadEdge * {__strong}>::~__split_buffer((uint64_t)&v108);
  }
  v20 = *(id **)(a1 + 40);
  v21 = *(id **)(a1 + 48);
  if (v20 == v21)
  {
    v27 = *(id **)(a1 + 40);
  }
  else
  {
    v22 = 0;
    do
    {
      v23 = *v20;
      v24 = objc_msgSend(v23, "vertexIndexA");
      v25 = v24 - objc_msgSend(v23, "vertexIndexB");
      if (v25 < 0)
        v25 = -v25;
      v26 = *(_QWORD *)(a1 + 96) + v25 + v22;
      *(_QWORD *)(a1 + 96) = v26;
      v22 = v26 != 0;

      ++v20;
    }
    while (v20 != v21);
    v27 = *(id **)(a1 + 40);
    v20 = *(id **)(a1 + 48);
  }
  v28 = (char *)v20 - (char *)v27;
  v29 = *(_QWORD *)(a1 + 64);
  if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 80) - v29) >> 3) < v20 - v27)
  {
    if ((unint64_t)v28 >= 0x5555555555555551)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v30 = *(_QWORD *)(a1 + 72);
    v111 = a1 + 80;
    *(_QWORD *)&v108 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(v28 >> 3);
    *((_QWORD *)&v108 + 1) = v108 + v30 - v29;
    v109 = (_QWORD *)*((_QWORD *)&v108 + 1);
    v110 = v108 + 24 * v31;
    std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__swap_out_circular_buffer(v104, &v108);
    std::__split_buffer<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::~__split_buffer((uint64_t)&v108);
    v27 = *(id **)(a1 + 40);
    v20 = *(id **)(a1 + 48);
  }
  if (v27 != v20)
  {
    do
    {
      v32 = *v27;
      objc_msgSend(v32, "road");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "feature");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "containingTile");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v36 = *(_QWORD **)(a1 + 72);
      v37 = *(_QWORD *)(a1 + 80);
      if ((unint64_t)v36 >= v37)
      {
        v39 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v36 - *v104) >> 3);
        v40 = v39 + 1;
        if (v39 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v41 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v37 - *v104) >> 3);
        if (2 * v41 > v40)
          v40 = 2 * v41;
        if (v41 >= 0x555555555555555)
          v42 = 0xAAAAAAAAAAAAAAALL;
        else
          v42 = v40;
        v111 = a1 + 80;
        if (v42)
          v42 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(v42);
        else
          v43 = 0;
        v44 = (_QWORD *)(v42 + 24 * v39);
        *(_QWORD *)&v108 = v42;
        *((_QWORD *)&v108 + 1) = v44;
        v110 = v42 + 24 * v43;
        geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr(v44, v35);
        v109 = v44 + 3;
        std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__swap_out_circular_buffer(v104, &v108);
        v38 = *(_QWORD **)(a1 + 72);
        std::__split_buffer<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::~__split_buffer((uint64_t)&v108);
      }
      else
      {
        v38 = geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr(v36, v35)+ 3;
      }
      *(_QWORD *)(a1 + 72) = v38;

      ++v27;
    }
    while (v27 != v20);
    v45 = *(id **)(a1 + 40);
    if (v45 != *(id **)(a1 + 48))
    {
      v46 = *v45;
      v47 = *(id *)(*(_QWORD *)(a1 + 48) - 8);
      objc_msgSend(v46, "road");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      v49 = objc_msgSend(v46, "vertexIndexA");
      v50 = v48;
      v106 = 0;
      v107 = 0;
      objc_msgSend(v50, "feature");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v51, "containingTile");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      v53 = objc_msgSend(v52, "tileKey");
      v54 = *(_QWORD *)v53;
      v55 = *(_QWORD *)v53 << 32;
      v56 = BYTE4(*(_QWORD *)v53) | ((((*(_QWORD *)v53 >> 40) | (*(unsigned __int16 *)(v53 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v53 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v53 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v53 + 10) >> 4) << 52);
      *(_QWORD *)((char *)&v108 + 1) = v55 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v53 >> 8) & 0x3F) << 40);
      LOBYTE(v108) = v54;
      *((_QWORD *)&v57 + 1) = v56;
      *(_QWORD *)&v57 = v55;
      v106 = v108;
      v107 = v57 >> 56;

      v58 = GEOMapRectForGEOTileKey((uint64_t)&v106);
      v60 = v59;
      v62 = v61;
      v64 = v63;
      v65 = (float *)&geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v50, "get"), 0, &v108)[v49];
      v66 = *v65;
      v67 = exp(((v60 + (float)(1.0 - v65[1]) * v64) * 0.0078125 + -1048576.0) / 333772.107);
      v68 = atan(v67);

      objc_msgSend(v46, "road");
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v69, "feature");
      v70 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v70, "containingTile");
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      std::allocate_shared[abi:ne180100]<geo::MapNodeRoad,std::allocator<geo::MapNodeRoad>,GEOLocationCoordinate2D,GEOVectorTile * {__strong},GeoCodecsConnectivityJunction *,void>((uint64_t *)&v105, v71, objc_msgSend(v46, "junctionA"), (v68 * -2.0 + 1.57079633) * 57.2957795, (v58 + v66 * v62) * 0.0078125 * 0.000171661377 + -180.0);
      std::shared_ptr<zilch::TrafficDynamicTile::Incident>::operator=[abi:ne180100](v103, &v105);
      v72 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
      if (*((_QWORD *)&v105 + 1))
      {
        v73 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
        do
          v74 = __ldaxr(v73);
        while (__stlxr(v74 - 1, v73));
        if (!v74)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
      }

      objc_msgSend(v47, "road");
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      v76 = objc_msgSend(v47, "vertexIndexB");
      v77 = v75;
      objc_msgSend(v77, "feature");
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v78, "containingTile");
      v79 = (void *)objc_claimAutoreleasedReturnValue();
      v80 = objc_msgSend(v79, "tileKey");
      v81 = *(_QWORD *)v80;
      v82 = *(_QWORD *)v80 << 32;
      v83 = BYTE4(*(_QWORD *)v80) | ((((*(_QWORD *)v80 >> 40) | (*(unsigned __int16 *)(v80 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v80 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v80 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v80 + 10) >> 4) << 52);
      *(_QWORD *)((char *)&v108 + 1) = v82 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v80 >> 8) & 0x3F) << 40);
      LOBYTE(v108) = v81;
      *((_QWORD *)&v84 + 1) = v83;
      *(_QWORD *)&v84 = v82;
      v106 = v108;
      v107 = v84 >> 56;

      v85 = GEOMapRectForGEOTileKey((uint64_t)&v106);
      v87 = v86;
      v89 = v88;
      v91 = v90;
      v92 = (float *)&geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v77, "get"), 0, &v108)[v76];
      v93 = *v92;
      v94 = exp(((v87 + (float)(1.0 - v92[1]) * v91) * 0.0078125 + -1048576.0) / 333772.107);
      v95 = atan(v94);

      objc_msgSend(v47, "road");
      v96 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v96, "feature");
      v97 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v97, "containingTile");
      v98 = (void *)objc_claimAutoreleasedReturnValue();
      std::allocate_shared[abi:ne180100]<geo::MapNodeRoad,std::allocator<geo::MapNodeRoad>,GEOLocationCoordinate2D,GEOVectorTile * {__strong},GeoCodecsConnectivityJunction *,void>((uint64_t *)&v105, v98, objc_msgSend(v47, "junctionB"), (v95 * -2.0 + 1.57079633) * 57.2957795, (v85 + v93 * v89) * 0.0078125 * 0.000171661377 + -180.0);
      std::shared_ptr<zilch::TrafficDynamicTile::Incident>::operator=[abi:ne180100](a1 + 24, &v105);
      v99 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
      if (*((_QWORD *)&v105 + 1))
      {
        v100 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
        do
          v101 = __ldaxr(v100);
        while (__stlxr(v101 - 1, v100));
        if (!v101)
        {
          ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
          std::__shared_weak_count::__release_weak(v99);
        }
      }

    }
  }
  return a1;
}

void sub_188FE43E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x188FE3D8CLL);
  }
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::~MapEdgeRoad(geo::MapEdgeRoad *this)
{
  char *v2;
  void **v3;

  *(_QWORD *)this = &off_1E1BF6328;
  v2 = (char *)this + 24;
  v3 = (void **)((char *)this + 64);
  std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__destroy_vector::operator()[abi:ne180100](&v3);
  v3 = (void **)((char *)this + 40);
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100](&v3);
  *(_QWORD *)this = &unk_1E1BF68B8;
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)v2);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  geo::MapEdgeRoad::~MapEdgeRoad(this);
  JUMPOUT(0x18D76437CLL);
}

BOOL geo::MapEdgeRoad::operator==(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  id *v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[11];
  _BYTE v25[11];

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
    return 0;
  v5 = *(id **)(a1 + 40);
  v6 = *(id **)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v4 = v7 == v8 && v5 == v6;
  if (v5 != v6 && v7 != v8)
  {
    v10 = *v5;
    v11 = **(id **)(a2 + 40);
    objc_msgSend(v10, "road");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "feature");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "containingTile");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "tileKey");
    *(_QWORD *)v25 = *(_QWORD *)v15;
    *(_DWORD *)&v25[7] = *(_DWORD *)(v15 + 7);

    objc_msgSend(v11, "road");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "feature");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "containingTile");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "tileKey");
    *(_QWORD *)v24 = *(_QWORD *)v19;
    *(_DWORD *)&v24[7] = *(_DWORD *)(v19 + 7);

    v20 = *(_QWORD *)v25 == *(_QWORD *)v24 && *(_QWORD *)&v25[3] == *(_QWORD *)&v24[3];
    if (v20 && (v21 = objc_msgSend(v10, "vertexIndexA"), v21 == objc_msgSend(v11, "vertexIndexA")))
    {
      v22 = objc_msgSend(v10, "vertexIndexB");
      v4 = v22 == objc_msgSend(v11, "vertexIndexB");
    }
    else
    {
      v4 = 0;
    }

  }
  return v4;
}

void sub_188FE47C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::flip(geo::MapEdgeRoad *this@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v2;
  void *v4;
  id v5;
  GEORoadEdge *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t *v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int64x2_t v21;
  char *v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64x2_t v30;
  char *v31;
  uint64_t v32;
  int64x2_t v33;
  char *v34;
  char **v35;

  v30 = 0uLL;
  v31 = 0;
  v2 = *((_QWORD *)this + 6);
  while (*((_QWORD *)this + 5) < v2)
  {
    v4 = *(void **)(v2 - 8);
    v2 -= 8;
    v5 = v4;
    *((_QWORD *)&v24 + 1) = objc_msgSend(v5, "vertexIndexB");
    v25 = objc_msgSend(v5, "vertexIndexA");
    v26 = objc_msgSend(v5, "junctionIndexB");
    v27 = objc_msgSend(v5, "junctionIndexA");
    v28 = objc_msgSend(v5, "junctionB");
    v29 = objc_msgSend(v5, "junctionA");
    v6 = [GEORoadEdge alloc];
    objc_msgSend(v5, "road");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[GEORoadEdge init:withMultiSectionFeatureInterface:](v6, "init:withMultiSectionFeatureInterface:", &v24, v7);
    v9 = v8;
    v10 = v30.i64[1];
    if (v30.i64[1] >= (unint64_t)v31)
    {
      v12 = (v30.i64[1] - v30.i64[0]) >> 3;
      if ((unint64_t)(v12 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v13 = (uint64_t)&v31[-v30.i64[0]] >> 2;
      if (v13 <= v12 + 1)
        v13 = v12 + 1;
      if ((unint64_t)&v31[-v30.i64[0]] >= 0x7FFFFFFFFFFFFFF8)
        v14 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v14 = v13;
      v35 = &v31;
      if (v14)
        v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v31, v14);
      else
        v15 = 0;
      v16 = (uint64_t *)&v15[8 * v12];
      v17 = &v15[8 * v14];
      v34 = v17;
      *v16 = v9;
      v11 = v16 + 1;
      v33.i64[1] = (uint64_t)(v16 + 1);
      v18 = (_QWORD *)v30.i64[1];
      v19 = (_QWORD *)v30.i64[0];
      if (v30.i64[1] == v30.i64[0])
      {
        v21 = vdupq_n_s64(v30.u64[1]);
      }
      else
      {
        do
        {
          v20 = *--v18;
          *v18 = 0;
          *--v16 = v20;
        }
        while (v18 != v19);
        v21 = v30;
        v11 = (_QWORD *)v33.i64[1];
        v17 = v34;
      }
      v30.i64[0] = (uint64_t)v16;
      v30.i64[1] = (uint64_t)v11;
      v33 = v21;
      v22 = v31;
      v31 = v17;
      v34 = v22;
      v32 = v21.i64[0];
      std::__split_buffer<GEORoadEdge * {__strong}>::~__split_buffer((uint64_t)&v32);
    }
    else
    {
      *(_QWORD *)v30.i64[1] = v8;
      v11 = (_QWORD *)(v10 + 8);
    }
    v30.i64[1] = (uint64_t)v11;

  }
  std::allocate_shared[abi:ne180100]<geo::MapEdgeRoad,std::allocator<geo::MapEdgeRoad>,std::vector<GEORoadEdge * {__strong}> &,void>(v30.i64, &v24);
  *a2 = v24;
  *(_QWORD *)&v24 = &v30;
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
}

void sub_188FE4A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  a11 = (void **)&a19;
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100](&a11);
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::coordinates(geo::MapEdgeRoad *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  _QWORD *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  float *v35;
  double v36;
  long double v37;
  double v38;
  double v39;
  double *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  double *v46;
  double *v47;
  BOOL v48;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[4];

  v54[2] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v3 = *((_QWORD *)this + 5);
  if (*((_QWORD *)this + 6) != v3)
  {
    v4 = 0;
    v5 = 0;
    v6 = (_QWORD *)(a2 + 16);
    do
    {
      v7 = *(id *)(v3 + 8 * v5);
      v52 = 0;
      v53 = 0;
      v51 = v7;
      objc_msgSend(v7, "road");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "feature");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "containingTile");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "tileKey");
      v12 = *(_QWORD *)v11;
      v13 = *(_QWORD *)v11 << 32;
      v14 = BYTE4(*(_QWORD *)v11) | ((((*(_QWORD *)v11 >> 40) | (*(unsigned __int16 *)(v11 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v11 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v11 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v11 + 10) >> 4) << 52);
      *(_QWORD *)((char *)v54 + 1) = v13 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v11 >> 8) & 0x3F) << 40);
      LOBYTE(v54[0]) = v12;
      *((_QWORD *)&v15 + 1) = v14;
      *(_QWORD *)&v15 = v13;
      v52 = v54[0];
      v53 = v15 >> 56;

      v16 = GEOMapRectForGEOTileKey((uint64_t)&v52);
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v54[0] = 0;
      objc_msgSend(v51, "road");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v23, "get"), 0, v54);

      v25 = objc_msgSend(v51, "vertexIndexA");
      v26 = objc_msgSend(v51, "vertexIndexB");
      v27 = v26;
      v50 = v5;
      if (v25 > v26)
        v28 = -1;
      else
        v28 = 1;
      if ((v4 & 1) != 0)
        v29 = v28;
      else
        v29 = 0;
      v30 = v29 + v25;
      v31 = v30 - v26;
      if (v30 - v26 < 0)
        v31 = v26 - v30;
      std::vector<GEOLocationCoordinate2D>::reserve((void **)a2, (v31 + 1) + ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 4));
      v32 = v30;
      v33 = v28;
      v34 = *(double **)(a2 + 8);
      do
      {
        v35 = (float *)&v24[v32];
        v36 = v16 + *v35 * v20;
        v37 = exp(((v18 + (float)(1.0 - v35[1]) * v22) * 0.0078125 + -1048576.0) / 333772.107);
        v38 = (atan(v37) * -2.0 + 1.57079633) * 57.2957795;
        v39 = v36 * 0.0078125 * 0.000171661377 + -180.0;
        if ((unint64_t)v34 >= *v6)
        {
          v40 = *(double **)a2;
          v41 = ((uint64_t)v34 - *(_QWORD *)a2) >> 4;
          v42 = v41 + 1;
          if ((unint64_t)(v41 + 1) >> 60)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v43 = *v6 - (_QWORD)v40;
          if (v43 >> 3 > v42)
            v42 = v43 >> 3;
          if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF0)
            v44 = 0xFFFFFFFFFFFFFFFLL;
          else
            v44 = v42;
          if (v44)
          {
            v45 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(a2 + 16, v44);
            v40 = *(double **)a2;
            v34 = *(double **)(a2 + 8);
          }
          else
          {
            v45 = 0;
          }
          v46 = (double *)&v45[16 * v41];
          *v46 = v38;
          v46[1] = v39;
          v47 = v46;
          if (v34 != v40)
          {
            do
            {
              *((_OWORD *)v47 - 1) = *((_OWORD *)v34 - 1);
              v47 -= 2;
              v34 -= 2;
            }
            while (v34 != v40);
            v40 = *(double **)a2;
          }
          v34 = v46 + 2;
          *(_QWORD *)a2 = v47;
          *(_QWORD *)(a2 + 8) = v46 + 2;
          *(_QWORD *)(a2 + 16) = &v45[16 * v44];
          if (v40)
            operator delete(v40);
        }
        else
        {
          *v34 = v38;
          v34[1] = v39;
          v34 += 2;
        }
        *(_QWORD *)(a2 + 8) = v34;
        v48 = v32 == v27;
        v32 += v33;
      }
      while (!v48);

      v5 = v50 + 1;
      v3 = *((_QWORD *)this + 5);
      v4 = 1;
    }
    while (v50 + 1 < (unint64_t)((*((_QWORD *)this + 6) - v3) >> 3));
  }
}

void sub_188FE4DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v12;
  void *v14;

  v14 = *(void **)v12;
  if (*(_QWORD *)v12)
  {
    *(_QWORD *)(v12 + 8) = v14;
    operator delete(v14);
  }
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::coordinateIn(geo::MapEdgeRoad *this)
{
  id *v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  double v13;
  double v14;
  double v15;
  double v16;
  float *v17;
  long double v18;
  _QWORD v19[2];
  _QWORD v20[3];

  v20[2] = *MEMORY[0x1E0C80C00];
  v1 = (id *)*((_QWORD *)this + 5);
  if (v1 != *((id **)this + 6))
  {
    v2 = *v1;
    objc_msgSend(v2, "road");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v2, "vertexIndexA");
    v5 = v3;
    objc_msgSend(v5, "feature");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "containingTile");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "tileKey");
    v9 = *(_QWORD *)v8;
    v10 = *(_QWORD *)v8 << 32;
    v11 = BYTE4(*(_QWORD *)v8) | ((((*(_QWORD *)v8 >> 40) | (*(unsigned __int16 *)(v8 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v8 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v8 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v8 + 10) >> 4) << 52);
    *(_QWORD *)((char *)v20 + 1) = v10 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v8 >> 8) & 0x3F) << 40);
    LOBYTE(v20[0]) = v9;
    *((_QWORD *)&v12 + 1) = v11;
    *(_QWORD *)&v12 = v10;
    v19[0] = v20[0];
    v19[1] = v12 >> 56;

    GEOMapRectForGEOTileKey((uint64_t)v19);
    v14 = v13;
    v16 = v15;
    v17 = (float *)&geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v5, "get"), 0, v20)[v4];
    v18 = exp(((v14 + (float)(1.0 - v17[1]) * v16) * 0.0078125 + -1048576.0) / 333772.107);
    atan(v18);

  }
}

void sub_188FE5064(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::coordinateOut(geo::MapEdgeRoad *this)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  double v13;
  double v14;
  double v15;
  double v16;
  float *v17;
  long double v18;
  _QWORD v19[2];
  _QWORD v20[3];

  v20[2] = *MEMORY[0x1E0C80C00];
  v1 = *((_QWORD *)this + 6);
  if (*((_QWORD *)this + 5) != v1)
  {
    v2 = *(id *)(v1 - 8);
    objc_msgSend(v2, "road");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v2, "vertexIndexB");
    v5 = v3;
    objc_msgSend(v5, "feature");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "containingTile");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "tileKey");
    v9 = *(_QWORD *)v8;
    v10 = *(_QWORD *)v8 << 32;
    v11 = BYTE4(*(_QWORD *)v8) | ((((*(_QWORD *)v8 >> 40) | (*(unsigned __int16 *)(v8 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v8 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v8 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v8 + 10) >> 4) << 52);
    *(_QWORD *)((char *)v20 + 1) = v10 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v8 >> 8) & 0x3F) << 40);
    LOBYTE(v20[0]) = v9;
    *((_QWORD *)&v12 + 1) = v11;
    *(_QWORD *)&v12 = v10;
    v19[0] = v20[0];
    v19[1] = v12 >> 56;

    GEOMapRectForGEOTileKey((uint64_t)v19);
    v14 = v13;
    v16 = v15;
    v17 = (float *)&geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v5, "get"), 0, v20)[v4];
    v18 = exp(((v14 + (float)(1.0 - v17[1]) * v16) * 0.0078125 + -1048576.0) / 333772.107);
    atan(v18);

  }
}

void sub_188FE52AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::length(geo::MapEdgeRoad *this)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  _QWORD *v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  float *v30;
  double v31;
  double v32;
  double v33;
  long double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];

  v38[2] = *MEMORY[0x1E0C80C00];
  if (*((double *)this + 11) < 0.0)
  {
    *((_QWORD *)this + 11) = 0;
    v2 = *((_QWORD *)this + 5);
    if (*((_QWORD *)this + 6) != v2)
    {
      v3 = 0;
      v4 = 0;
      v5 = -180.0;
      v6 = -180.0;
      do
      {
        v7 = *(id *)(v2 + 8 * v4);
        v36 = 0;
        v37 = 0;
        objc_msgSend(v7, "road");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "feature");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "containingTile");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "tileKey");
        v12 = *(_QWORD *)v11;
        v13 = *(_QWORD *)v11 << 32;
        v14 = BYTE4(*(_QWORD *)v11) | ((((*(_QWORD *)v11 >> 40) | (*(unsigned __int16 *)(v11 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v11 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v11 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v11 + 10) >> 4) << 52);
        *(_QWORD *)((char *)v38 + 1) = v13 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v11 >> 8) & 0x3F) << 40);
        LOBYTE(v38[0]) = v12;
        *((_QWORD *)&v15 + 1) = v14;
        *(_QWORD *)&v15 = v13;
        v36 = v38[0];
        v37 = v15 >> 56;

        v35 = GEOMapRectForGEOTileKey((uint64_t)&v36);
        v17 = v16;
        v19 = v18;
        v21 = v20;
        objc_msgSend(v7, "road");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = geo::codec::multiSectionFeaturePoints((_QWORD *)objc_msgSend(v22, "get"), 0, v38);

        v24 = objc_msgSend(v7, "vertexIndexA");
        v25 = objc_msgSend(v7, "vertexIndexB");
        if (v24 > v25)
          v26 = -1;
        else
          v26 = 1;
        if (v24 > v25)
          v27 = -1;
        else
          v27 = 1;
        if ((v3 & 1) == 0)
          v26 = 0;
        v28 = v26 + v24;
        v29 = v27 + v25 - v28;
        v30 = (float *)&v23[v28] + 1;
        v31 = v5;
        v32 = v6;
        do
        {
          v33 = v35 + *(v30 - 1) * v19;
          v34 = exp(((v17 + (float)(1.0 - *v30) * v21) * 0.0078125 + -1048576.0) / 333772.107);
          v5 = (atan(v34) * -2.0 + 1.57079633) * 57.2957795;
          v6 = v33 * 0.0078125 * 0.000171661377 + -180.0;
          if ((v3 & 1) != 0)
            *((long double *)this + 11) = GEOCalculateDistanceRadius(v5, v6, v31, v32, 6367000.0)
                                        + *((double *)this + 11);
          v30 += 2 * v27;
          v3 = 1;
          v31 = v5;
          v32 = v6;
          v29 -= v27;
        }
        while (v29);

        ++v4;
        v2 = *((_QWORD *)this + 5);
      }
      while (v4 < (*((_QWORD *)this + 6) - v2) >> 3);
    }
  }
}

void sub_188FE55F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::travelDirection(id **this)
{
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unsigned int v7;

  v1 = *this[5];
  objc_msgSend(v1, "road");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v3) = objc_msgSend(v2, "travelDirection");

  v4 = objc_msgSend(v1, "vertexIndexB");
  v5 = objc_msgSend(v1, "vertexIndexA");
  if ((_DWORD)v3 == 2)
    v6 = 1;
  else
    v6 = v3;
  if ((_DWORD)v3 == 1)
    v7 = 2;
  else
    v7 = v6;
  if (v4 < v5)
    v3 = v7;
  else
    v3 = v3;

  return v3;
}

void sub_188FE56D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::roadFeature(geo::MapEdgeRoad *this)
{
  id *v1;
  void *v2;

  v1 = (id *)*((_QWORD *)this + 5);
  if (v1 == *((id **)this + 6))
  {
    v2 = 0;
  }
  else
  {
    objc_msgSend(*v1, "road");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

uint64_t geo::MapEdgeRoad::toString(id **this)
{
  uint64_t v2;
  const char *v3;
  size_t v4;
  _QWORD *v5;
  const std::locale::facet *v6;
  char *v7;
  char *v8;
  std::locale::id *v9;
  _QWORD *v10;
  _QWORD *v11;
  const std::locale::facet *v12;
  _QWORD *v13;
  const std::locale::facet *v14;
  id *v15;
  id *v16;
  std::locale::id *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  const std::locale::facet *v30;
  _QWORD v32[11];
  char v33;
  uint64_t v34;
  std::locale v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v32);
  v2 = geo::MapEdge::debugName((geo::MapEdge *)this);
  if (v2)
    v3 = (const char *)v2;
  else
    v3 = "unnamed";
  v4 = strlen(v3);
  v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v32, (uint64_t)v3, v4);
  std::ios_base::getloc((const std::ios_base *)((char *)v5 + *(_QWORD *)(*v5 - 24)));
  v6 = std::locale::use_facet((const std::locale *)&v37, MEMORY[0x1E0DE4A90]);
  ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 10);
  std::locale::~locale((std::locale *)&v37);
  std::ostream::put();
  std::ostream::flush();
  *(_QWORD *)((char *)&v32[2] + *(_QWORD *)(v32[0] - 24)) = 10;
  ((void (*)(__int128 *__return_ptr, id **))(*this)[6])(&v37, this);
  v8 = (char *)*((_QWORD *)&v37 + 1);
  v7 = (char *)v37;
  if ((_QWORD)v37 != *((_QWORD *)&v37 + 1))
  {
    v9 = (std::locale::id *)MEMORY[0x1E0DE4A90];
    do
    {
      v10 = (_QWORD *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)",", 1);
      v11 = (_QWORD *)std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(_QWORD *)(*v11 - 24)));
      v12 = std::locale::use_facet(&v35, v9);
      ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
      std::locale::~locale(&v35);
      std::ostream::put();
      std::ostream::flush();
      v7 += 16;
    }
    while (v7 != v8);
    v7 = (char *)v37;
  }
  if (v7)
  {
    *((_QWORD *)&v37 + 1) = v7;
    operator delete(v7);
  }
  v13 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v32, (uint64_t)"tiles:", 6);
  std::ios_base::getloc((const std::ios_base *)((char *)v13 + *(_QWORD *)(*v13 - 24)));
  v14 = std::locale::use_facet((const std::locale *)&v37, MEMORY[0x1E0DE4A90]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale((std::locale *)&v37);
  std::ostream::put();
  std::ostream::flush();
  v15 = this[5];
  v16 = this[6];
  if (v15 != v16)
  {
    v17 = (std::locale::id *)MEMORY[0x1E0DE4A90];
    do
    {
      v18 = *v15;
      v35.__locale_ = 0;
      v36 = 0;
      objc_msgSend(v18, "road");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "feature");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "containingTile");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "tileKey");
      v23 = *(_QWORD *)v22;
      v24 = *(_QWORD *)v22 << 32;
      v25 = BYTE4(*(_QWORD *)v22) | ((((*(_QWORD *)v22 >> 40) | (*(unsigned __int16 *)(v22 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v22 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v22 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(_BYTE *)(v22 + 10) >> 4) << 52);
      *(_QWORD *)((char *)&v37 + 1) = v24 & 0xFFFFC00000000000 | ((unint64_t)((*(_QWORD *)v22 >> 8) & 0x3F) << 40);
      LOBYTE(v37) = v23;
      *((_QWORD *)&v26 + 1) = v25;
      *(_QWORD *)&v26 = v24;
      v35.__locale_ = (std::locale::__imp *)v37;
      v36 = v26 >> 56;

      GEOTileKeyAssertIsStandard((uint64_t)&v35);
      v27 = (_QWORD *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v27, (uint64_t)",", 1);
      v28 = (_QWORD *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v28, (uint64_t)",", 1);
      v29 = (_QWORD *)std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)v29 + *(_QWORD *)(*v29 - 24)));
      v30 = std::locale::use_facet((const std::locale *)&v37, v17);
      ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
      std::locale::~locale((std::locale *)&v37);
      std::ostream::put();
      std::ostream::flush();

      ++v15;
    }
    while (v15 != v16);
  }
  std::stringbuf::str();
  v32[0] = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)((char *)v32 + *(_QWORD *)(v32[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
  v32[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v33 < 0)
    operator delete((void *)v32[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D764310](&v34);
}

void sub_188FE5B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::ostringstream::~ostringstream((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::zAtPoint(geo::MapEdgeRoad *this, uint64_t a2)
{
  id *v2;
  id *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  void *v15;
  std::__shared_weak_count **v16;
  unint64_t *v17;
  geo::codec *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v2 = (id *)*((_QWORD *)this + 5);
  v3 = (id *)*((_QWORD *)this + 6);
  if (v2 == v3)
  {
LABEL_10:
    LOBYTE(v14) = 0;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    while (1)
    {
      v8 = *v2;
      v9 = objc_msgSend(v8, "vertexIndexA");
      if (v9 >= objc_msgSend(v8, "vertexIndexB"))
      {
        v10 = objc_msgSend(v8, "vertexIndexA");
        v11 = objc_msgSend(v8, "vertexIndexB");
      }
      else
      {
        v10 = objc_msgSend(v8, "vertexIndexB");
        v11 = objc_msgSend(v8, "vertexIndexA");
      }
      v12 = v10 - v11;
      if (v7 == ((uint64_t)(*((_QWORD *)this + 6) - *((_QWORD *)this + 5)) >> 3) - 1)
        ++v12;
      v13 = a2 - v6;
      if (a2 - v6 < v12)
        break;
      ++v7;
      v6 += v12;

      if (++v2 == v3)
        goto LABEL_10;
    }
    v26 = 0;
    objc_msgSend(v8, "road");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (std::__shared_weak_count **)objc_msgSend(v15, "getRoad");
    v18 = geo::codec::multiSectionFeatureCharacteristicPoints(v16, (GeoCodecsRoadFeature *)&v26, v17);

    if (v26
      && ((v19 = objc_msgSend(v8, "vertexIndexA"), v19 >= objc_msgSend(v8, "vertexIndexB"))
       && (v20 = objc_msgSend(v8, "vertexIndexA"),
           v13 = ~v13,
           v20 + v13 <= (unint64_t)objc_msgSend(v8, "vertexIndexB"))
        ? (v21 = objc_msgSend(v8, "vertexIndexB"))
        : (v21 = objc_msgSend(v8, "vertexIndexA") + v13),
          (v22 = v26) != 0 && v21 >= *((unsigned int *)v18 + 3)))
    {
      v24 = (unsigned int *)((char *)v18 + 112);
      do
      {
        v25 = v24;
        if (!--v22)
          break;
        v24 += 25;
      }
      while (v21 >= *v25);
      v14 = *(v25 - 23);
    }
    else
    {
      LOBYTE(v14) = 0;
    }

  }
  return v14;
}

void sub_188FE5DB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesOut(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[4];
  id v14;
  _QWORD *v15;
  _QWORD v16[5];
  id v17;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (*(_QWORD *)(a1 + 24))
  {
    v16[0] = 0;
    v16[1] = v16;
    v16[2] = 0x3032000000;
    v16[3] = __Block_byref_object_copy__39;
    v16[4] = __Block_byref_object_dispose__39;
    v17 = *(id *)(*(_QWORD *)(a1 + 48) - 8);
    v10 = *(_QWORD *)(a1 + 24);
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = ___ZNK3geo11MapEdgeRoad12findEdgesOutEP12GEOMapAccessU13block_pointerFvNSt3__110shared_ptrINS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke;
    v13[3] = &unk_1E1C00560;
    v15 = v16;
    v14 = v8;
    (*(void (**)(uint64_t, id, _QWORD *, id))(*(_QWORD *)v10 + 48))(v10, v7, v13, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    _Block_object_dispose(v16, 8);
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void sub_188FE5F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void ___ZNK3geo11MapEdgeRoad12findEdgesOutEP12GEOMapAccessU13block_pointerFvNSt3__110shared_ptrINS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke(uint64_t a1, _QWORD *a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  v4 = **(id **)(*a2 + 40);
  v5 = objc_msgSend(v4, "vertexIndexB");
  if (v5 != objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "vertexIndexA")
    || (objc_msgSend(v4, "road"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "road"),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        v7,
        v6,
        v6 != v7))
  {
    v8 = *(_QWORD *)(a1 + 32);
    v9 = (std::__shared_weak_count *)a2[1];
    v15 = *a2;
    v16 = v9;
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
    }
    (*(void (**)(uint64_t, uint64_t *))(v8 + 16))(v8, &v15);
    v12 = v16;
    if (v16)
    {
      v13 = (unint64_t *)&v16->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }

}

void sub_188FE604C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesFromStartNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 8);
  v19 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v18, 0, v8, v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v19;
  if (v19)
  {
    v15 = (unint64_t *)&v19->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  return v13;
}

void sub_188FE6158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  void *v11;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesForNode(uint64_t a1, void *a2, _QWORD *a3, int a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[4];
  id v19;
  uint64_t v20;

  v11 = a2;
  v12 = a5;
  v13 = a6;
  if (*a3)
  {
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = ___ZNK3geo11MapEdgeRoad16findEdgesForNodeEP12GEOMapAccessNSt3__110shared_ptrINS_7MapNodeEEEbU13block_pointerFvNS4_INS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke;
    v18[3] = &unk_1E1C0A398;
    v20 = a1;
    v19 = v12;
    v14 = (void *)MEMORY[0x18D765024](v18);
    v15 = 48;
    if (a4)
      v15 = 40;
    (*(void (**)(_QWORD, id, void *, id))(*(_QWORD *)*a3 + v15))(*a3, v11, v14, v13);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v16 = 0;
  }

  return v16;
}

void sub_188FE6284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesToStartNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 8);
  v19 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v18, 1, v8, v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v19;
  if (v19)
  {
    v15 = (unint64_t *)&v19->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  return v13;
}

void sub_188FE6388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  void *v11;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesFromEndNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = *(std::__shared_weak_count **)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 24);
  v19 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v18, 0, v8, v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v19;
  if (v19)
  {
    v15 = (unint64_t *)&v19->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  return v13;
}

void sub_188FE6488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  void *v11;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesToEndNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = *(std::__shared_weak_count **)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 24);
  v19 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v18, 1, v8, v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v19;
  if (v19)
  {
    v15 = (unint64_t *)&v19->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  return v13;
}

void sub_188FE6588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  void *v11;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void ___ZNK3geo11MapEdgeRoad16findEdgesForNodeEP12GEOMapAccessNSt3__110shared_ptrINS_7MapNodeEEEbU13block_pointerFvNS4_INS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  objc_msgSend(**(id **)(*(_QWORD *)(a1 + 40) + 40), "road");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(*a2 + 48) - 8), "road");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4 != v5)
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = (std::__shared_weak_count *)a2[1];
    v13 = *a2;
    v14 = v7;
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    (*(void (**)(uint64_t, uint64_t *))(v6 + 16))(v6, &v13);
    v10 = v14;
    if (v14)
    {
      v11 = (unint64_t *)&v14->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }

}

void sub_188FE6680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);

  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::type(geo::MapEdgeRoad *this)
{
  return 0;
}

uint64_t geo::MapEdgeRoad::coordinateCount(geo::MapEdgeRoad *this)
{
  return *((_QWORD *)this + 12);
}

id geo::MapEdgeRoad::feature(geo::MapEdgeRoad *this)
{
  void *v1;
  void *v2;

  geo::MapEdgeRoad::roadFeature(this);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "feature");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_188FE66EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::roadClass(geo::MapEdgeRoad *this)
{
  void *v1;
  uint64_t v2;

  geo::MapEdgeRoad::roadFeature(this);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "roadClass");

  return v2;
}

void sub_188FE6730(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::formOfWay(geo::MapEdgeRoad *this)
{
  void *v1;
  uint64_t v2;

  geo::MapEdgeRoad::roadFeature(this);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "formOfWay");

  return v2;
}

void sub_188FE6774(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  void (**v8)(char *);
  BOOL v9;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = v4 - 24;
      v7 = v4 - 24;
      do
      {
        v8 = *(void (***)(char *))v7;
        v7 -= 24;
        (*v8)(v6);
        v9 = v6 == v2;
        v6 = v7;
      }
      while (!v9);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *a1;
  v4 = a1[1];
  v6 = a2[1];
  if (v4 != *a1)
  {
    do
    {
      *(_QWORD *)(v6 - 24) = &off_1E1BF6440;
      *(_QWORD *)(v6 - 16) = 0;
      v6 -= 24;
      v7 = v4 - 24;
      v8 = *(id *)(v4 - 16);
      v9 = *(void **)(v6 + 8);
      *(_QWORD *)(v6 + 8) = v8;

      v4 = v7;
    }
    while (v7 != v5);
  }
  a2[1] = v6;
  v10 = *a1;
  *a1 = v6;
  a2[1] = v10;
  v11 = a1[1];
  a1[1] = a2[2];
  a2[2] = v11;
  v12 = a1[2];
  a1[2] = a2[3];
  a2[3] = v12;
  *a2 = a2[1];
}

uint64_t geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::~_retain_ptr(uint64_t a1)
{
  *(_QWORD *)a1 = &off_1E1BF6440;

  return a1;
}

void geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::~_retain_ptr(uint64_t a1)
{
  *(_QWORD *)a1 = &off_1E1BF6440;

  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__split_buffer<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void (**v4)(void);

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = *(void (***)(void))(i - 24);
    *(_QWORD *)(a1 + 16) = i - 24;
    (*v4)();
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

_QWORD *geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr(_QWORD *a1, void *a2)
{
  id v3;

  v3 = a2;
  *a1 = &off_1E1BF6440;
  a1[1] = v3;
  return a1;
}

uint64_t std::allocate_shared[abi:ne180100]<geo::MapNodeRoad,std::allocator<geo::MapNodeRoad>,GEOLocationCoordinate2D,GEOVectorTile * {__strong},GeoCodecsConnectivityJunction *,void>(uint64_t *a1, void *a2, uint64_t a3, double a4, double a5)
{
  _QWORD *v10;
  uint64_t result;
  __int128 v12;

  v10 = operator new(0x40uLL);
  v10[1] = 0;
  v10[2] = 0;
  *v10 = &off_1E1BFB368;
  *(double *)&v12 = a4;
  *((double *)&v12 + 1) = a5;
  result = geo::MapNode::MapNode((uint64_t)(v10 + 3), &v12, a2, a3);
  v10[3] = &off_1E1BF63B8;
  *a1 = result;
  a1[1] = (uint64_t)v10;
  return result;
}

void sub_188FE6A34(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<geo::MapNodeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB368;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapNodeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB368;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__shared_ptr_emplace<geo::MapNodeRoad>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_QWORD *std::allocate_shared[abi:ne180100]<geo::MapEdgeRoad,std::allocator<geo::MapEdgeRoad>,std::vector<GEORoadEdge * {__strong}> &,void>@<X0>(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x80uLL);
  result = std::__shared_ptr_emplace<geo::MapEdgeRoad>::__shared_ptr_emplace[abi:ne180100]<std::vector<GEORoadEdge * {__strong}> &,std::allocator<geo::MapEdgeRoad>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_188FE6AE0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__shared_ptr_emplace<geo::MapEdgeRoad>::__shared_ptr_emplace[abi:ne180100]<std::vector<GEORoadEdge * {__strong}> &,std::allocator<geo::MapEdgeRoad>,0>(_QWORD *a1, uint64_t *a2)
{
  a1[2] = 0;
  *a1 = &unk_1E1BFB330;
  a1[1] = 0;
  geo::MapEdgeRoad::MapEdgeRoad((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_188FE6B2C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<geo::MapEdgeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E1BFB330;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapEdgeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1E1BFB330;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__shared_ptr_emplace<geo::MapEdgeRoad>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_188FE72A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t GEOMapItemIdentifierArrayToData(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", a1, 1, 0);
}

id GEOMapItemIdentifierDataToArray(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v1 = (void *)MEMORY[0x1E0CB3710];
  v2 = (void *)MEMORY[0x1E0C99E60];
  v3 = a1;
  v8[0] = objc_opt_class();
  v8[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setWithArray:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "unarchivedObjectOfClasses:fromData:error:", v5, v3, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

uint64_t _GEOPDSpatialPlaceLookupCategoryForCategory(__CFString *a1)
{
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryEntertainment"))
    return 1;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryAmusementPark"))
    return 2;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryAquarium"))
    return 3;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryZoo"))
    return 4;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryStadium"))
    return 5;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategorySkatePark"))
    return 6;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryCulture"))
    return 7;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryLandmark"))
    return 8;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryMuseum"))
    return 9;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryRestaurant"))
    return 10;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryNightlife"))
    return 11;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryPark"))
    return 12;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryAirport"))
    return 13;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryShopping"))
    return 14;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryBeach"))
    return 15;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryMountain"))
    return 16;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryFitness"))
    return 17;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryActivity"))
    return 18;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryDiving"))
    return 19;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryHiking"))
    return 20;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryPerformance"))
    return 21;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryHospital"))
    return 22;
  if (a1 == CFSTR("GEOSpatialPlaceLookupCategoryAmusementParkRide"))
    return 23;
  return 0;
}

uint64_t _GEOPDSpatialEventLookupCategoryForCategory(__CFString *a1)
{
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryArtsAndMuseums"))
    return 1;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryBusinessAndTechnology"))
    return 2;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryCommunity"))
    return 3;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryDance"))
    return 4;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryEducational"))
    return 5;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryFamilyEvents"))
    return 6;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryFestivalsAndFairs"))
    return 7;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryMusicConcerts"))
    return 8;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryNightLife"))
    return 9;
  if (a1 == CFSTR("GEOSpatialEventLookupCategorySports"))
    return 10;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryTheater"))
    return 11;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryTours"))
    return 12;
  if (a1 == CFSTR("GEOSpatialEventLookupCategoryAppleEvent"))
    return 13;
  return 0;
}

const __CFString *_GEOSpatialEventLookupCategoryForPDCategory(unsigned int a1)
{
  if (a1 > 0xD)
    return CFSTR("GEOSpatialEventLookupCategoryUnknown");
  else
    return off_1E1C0A510[a1];
}

void sub_188FE940C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,char a22)
{
  void *v22;
  void *v23;

  if (v23)
    operator delete(v23);
  if (__p)
    operator delete(__p);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a22);

  _Unwind_Resume(a1);
}

float gm::Matrix<float,2,1>::distanceSquaredToPolyline<int,void>(float *a1, unint64_t a2, uint64_t a3, _QWORD *a4, float *a5)
{
  uint64_t v8;
  unint64_t v9;
  float *v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;

  *a4 = 0;
  *a5 = 0.0;
  if (a2 < 2)
    return 3.4028e38;
  v8 = 0;
  v9 = a2 - 1;
  v10 = (float *)(a3 + 8);
  v11 = 3.4028e38;
  do
  {
    v12 = gm::Matrix<float,2,1>::nearestPointOffsetAlongLineSegment<int,void>(a1, v10 - 2, v10);
    v13 = *a1 - (float)(*(v10 - 2) + (float)((float)(*v10 - *(v10 - 2)) * v12));
    v14 = a1[1] - (float)(*(v10 - 1) + (float)((float)(v10[1] - *(v10 - 1)) * v12));
    v15 = (float)((float)(v13 * v13) + 0.0) + (float)(v14 * v14);
    if (v15 < v11)
    {
      *a4 = v8;
      *a5 = v12;
      v11 = v15;
    }
    ++v8;
    v10 += 2;
  }
  while (v9 != v8);
  return v11;
}

void sub_188FE99C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  if (v12)
    operator delete(v12);

  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchACHintMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  GEOPDSearchKeyValueFloatPair *v35;
  char v36;
  int v37;
  char v38;
  void *v39;
  char v41;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 2);
        if (v10 & 1 | (v11 > 2) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v41 = (v7 != 0) | v14;
        v16 = (int *)MEMORY[0x1E0D82BF0];
        v17 = (int *)MEMORY[0x1E0D82BC8];
        v18 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_25:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if ((v14 & 1) != 0)
      {
        v36 = 1;
        goto LABEL_71;
      }
      if (v15)
      {
        while (1)
        {
          v37 = *v15++;
          v38 = 8;
          switch(v37)
          {
            case 0:
              goto LABEL_72;
            case 1:
              goto LABEL_69;
            case 2:
              v38 = 2;
              goto LABEL_69;
            case 3:
              v38 = 1;
              goto LABEL_69;
            case 4:
              v38 = 4;
LABEL_69:
              *(_BYTE *)(a1 + 60) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_72;
    }
    v29 = v21 >> 3;
    v30 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      v31 = v15;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(_BYTE *)(a1 + 60) & 8) != 0)
          goto LABEL_60;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_70;
        v35 = objc_alloc_init(GEOPDSearchKeyValueFloatPair);
        if (!GEOPDSearchKeyValueFloatPairReadAllFrom((uint64_t)v35, (void *)v3))
          goto LABEL_77;
        PBReaderRecallMark();
        -[GEOPDSearchACHintMetadata _addNoFlagsFeature:](a1, v35);
        goto LABEL_59;
      case 2:
        if (!v30 || (*(_BYTE *)(a1 + 60) & 2) != 0)
          goto LABEL_60;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_70;
        v35 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1))
          goto LABEL_77;
        PBReaderRecallMark();
        -[GEOPDSearchACHintMetadata _addNoFlagsBrooklynEntry:](a1, v35);
        goto LABEL_59;
      case 3:
        if (!v30 || (*(_BYTE *)(a1 + 60) & 1) != 0)
          goto LABEL_60;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_70;
        v35 = objc_alloc_init(GEOPDSearchAddressEntry);
        if (!GEOPDSearchAddressEntryReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1))
          goto LABEL_77;
        PBReaderRecallMark();
        -[GEOPDSearchACHintMetadata _addNoFlagsAddressEntry:](a1, v35);
        goto LABEL_59;
      case 4:
        if (!v30 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_60:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_70:
            v36 = 0;
            goto LABEL_71;
          }
LABEL_61:
          if ((v41 & 1) == 0)
            goto LABEL_62;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_70;
        v35 = objc_alloc_init(GEOPDSearchBusinessEntry);
        if (GEOPDSearchBusinessEntryReadAllFrom((uint64_t)v35, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchACHintMetadata _addNoFlagsBusinessEntry:](a1, v35);
LABEL_59:

          v17 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_61;
        }
LABEL_77:

        v36 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 1u;
        *(_BYTE *)(a1 + 60) |= 4u;
        if ((v36 & 1) != 0)
        {
LABEL_72:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if ((v14 & 1) != 0)
            goto LABEL_73;
        }
        else
        {
          v3 = 0;
          if ((v14 & 1) != 0)
          {
LABEL_73:
            v39 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_70;
        goto LABEL_61;
    }
  }
}

void sub_188FEA268(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEA394(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEA564(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEA760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEAE44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchACHintMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v2 = a1[5];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v33;
    while (1)
    {
      if (*(_QWORD *)v33 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
        if (!v4)
          break;
      }
    }
  }

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v6 = a1[3];
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v29;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v29 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * v10++), "readAll:", 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
    }
    while (v8);
  }

  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v11 = a1[2];
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v25;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v25 != v14)
          objc_enumerationMutation(v11);
        -[GEOPDSearchAddressEntry readAll:](*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v15++), 1);
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
    }
    while (v13);
  }

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v16 = a1[4];
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v21;
    while (1)
    {
      if (*(_QWORD *)v21 != v19)
        objc_enumerationMutation(v16);
      if (!--v18)
      {
        v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
        if (!v18)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchACHintMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchACHintMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchACHintMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchACHintMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchACHintMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchACHintMetadataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188FEB26C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEB63C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchACHintMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  int v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x1F) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 1) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v3);
        v6 = *(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 40));
          v7 = *(_BYTE *)(v6 + 44) & 7;
          os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 40));
          if (v7)
          {
            v2 = 1;
            goto LABEL_16;
          }
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_16:

  return v2;
}

os_unfair_lock_s *GEOPDSearchACHintMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchACHintMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOPDSearchACHintMetadataClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  -[GEOPDSearchACHintMetadata _readBrooklynEntrys](a1);
  result = objc_msgSend(*(id *)(a1 + 24), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 24), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPDAutocompleteEntryHasSensitiveFields(v8, a2))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        objc_msgSend(v10, "business");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 24), "replaceObjectAtIndex:withObject:", i, v10);
      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 24), "count");
    }
  }
  return result;
}

uint64_t GEOPDSearchACHintMetadataHasSensitiveFields(id *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[GEOPDSearchACHintMetadata brooklynEntrys](a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        if ((GEOPDAutocompleteEntryHasSensitiveFields(*(void **)(*((_QWORD *)&v10 + 1) + 8 * v7), a2) & 1) != 0)
        {
          v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v5)
        continue;
      break;
    }
  }
  v8 = 0;
LABEL_12:

  return v8;
}

void sub_188FEC0DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEC424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAddressEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDSearchEntry *v37;
  void *v38;
  char v39;
  char v40;
  int v41;
  int v42;
  char v43;
  void *v44;
  BOOL v46;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v46 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_61;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_61:
      if (v15)
      {
        v40 = 1;
        goto LABEL_72;
      }
      if (!v16)
        goto LABEL_73;
      while (1)
      {
        v42 = *v16++;
        v41 = v42;
        if (v42 == 1)
          break;
        if (v41 == 2)
        {
          v43 = 1;
LABEL_70:
          *(_BYTE *)(a1 + 44) |= v43;
        }
        else if (!v41)
        {
          goto LABEL_73;
        }
      }
      v43 = 2;
      goto LABEL_70;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v46)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 != 1)
    {
      if (!PBReaderSkipValueWithTag())
        goto LABEL_71;
      goto LABEL_54;
    }
    if (!v32)
      goto LABEL_53;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_71;
      v37 = objc_alloc_init(GEOPDSearchEntry);
      if (!GEOPDSearchEntryReadAllFrom((uint64_t)v37, (void *)v3))
        goto LABEL_78;
      PBReaderRecallMark();
      v38 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v37;

      --v7;
      goto LABEL_50;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      v40 = 0;
      goto LABEL_72;
    }
    v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_54:
    if (v7)
      v39 = 1;
    else
      v39 = v15;
    if ((v39 & 1) == 0)
      goto LABEL_61;
  }
  if (!v32 || (*(_BYTE *)(a1 + 44) & 1) != 0)
  {
LABEL_53:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_71;
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v37 = objc_alloc_init(GEOPDSearchEntry);
  if (GEOPDSearchEntryReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSearchAddressEntry _addNoFlagsCandidates:](a1, v37);

LABEL_50:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_54;
  }
LABEL_78:

  v40 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 44) |= 1u;
  if ((v40 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_74;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_74:
      v44 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188FEC924(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FECDA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchAddressEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchAddressEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchAddressEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchAddressEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchAddressEntryReadAllFrom_initialTag;
  Specified = GEOPDSearchAddressEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchAddressEntryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188FED00C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchEntryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_188FED4B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FED6E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAddressLabeledTokenReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  GEOPDSearchStringStringPair *v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  GEOPDSearchStringStringPair *v56;
  char v57;
  char v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 80)), (uint16x4_t)0xFFFBFFFEFFFFFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 80) & 1)+ ((*(_BYTE *)(a1 + 80) & 8) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v58 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v57 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_94;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_94:
      if ((v15 & 1) != 0)
      {
        v51 = 1;
        goto LABEL_107;
      }
      if (v16)
      {
        while (1)
        {
          v52 = *v16++;
          v53 = 2;
          switch(v52)
          {
            case 0:
              goto LABEL_108;
            case 2:
              goto LABEL_103;
            case 3:
              v53 = 16;
              goto LABEL_103;
            case 4:
              v53 = 4;
              goto LABEL_103;
            case 5:
              v53 = 32;
              goto LABEL_103;
            case 6:
              v53 = 1;
              goto LABEL_103;
            case 7:
              v53 = 8;
LABEL_103:
              *(_BYTE *)(a1 + 80) |= v53;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_108;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v58 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_80;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_82;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_80:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_82:
        *(_DWORD *)(a1 + 76) = v38;
        goto LABEL_93;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 2) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v56 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v56, (void *)v3, v9 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        -[GEOPDSearchAddressLabeledToken _addNoFlagsGeoDecoration:](a1, v56);
LABEL_63:
        v47 = v56;
LABEL_64:

        goto LABEL_92;
      case 3:
        if (!v31)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 0x10) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 48;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v50 = 8 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 4:
        if (!v31)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 4) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 32;
LABEL_58:
          v46 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v50 = 32 * *(_BYTE *)(a1 + 80);
        goto LABEL_91;
      case 5:
        if (!v31 || (*(_BYTE *)(a1 + 80) & 0x20) != 0)
          goto LABEL_77;
        PBReaderReadString();
        v47 = (GEOPDSearchStringStringPair *)objc_claimAutoreleasedReturnValue();
        if (!v47)
          goto LABEL_64;
        v56 = v47;
        -[GEOPDSearchAddressLabeledToken _addNoFlagsUnPaddedDoorNumbers:](a1, v47);
        goto LABEL_63;
      case 6:
        if (!v31)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v7 -= *(_BYTE *)(a1 + 80) & 1;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v56 = objc_alloc_init(GEOPDSearchGeoDecoration);
        if (!GEOPDSearchGeoDecorationReadAllFrom((uint64_t)v56, (void *)v3, v9 & 1))
          goto LABEL_105;
        PBReaderRecallMark();
        v48 = 16;
        goto LABEL_75;
      case 7:
        if (!v31)
        {
LABEL_77:
          v49 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v57;
          if ((v49 & 1) == 0)
          {
LABEL_104:
            v51 = 0;
            goto LABEL_107;
          }
LABEL_93:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_94;
          continue;
        }
        if ((*(_BYTE *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_106;
          v50 = 16 * *(_BYTE *)(a1 + 80);
LABEL_91:
          v7 += v50 >> 7;
LABEL_92:
          v15 = v57;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v56 = objc_alloc_init(GEOPDSearchGeoDecoration);
        if (GEOPDSearchGeoDecorationReadAllFrom((uint64_t)v56, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v48 = 40;
LABEL_75:
          v46 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v56;
LABEL_76:

          --v7;
          goto LABEL_92;
        }
LABEL_105:

LABEL_106:
        v51 = 0;
        v15 = v57;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_107:
        *(_BYTE *)(a1 + 80) |= 2u;
        *(_BYTE *)(a1 + 80) |= 0x10u;
        *(_BYTE *)(a1 + 80) |= 4u;
        *(_BYTE *)(a1 + 80) |= 0x20u;
        *(_BYTE *)(a1 + 80) |= 1u;
        *(_BYTE *)(a1 + 80) |= 8u;
        if ((v51 & 1) != 0)
        {
LABEL_108:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_109;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_109:
            v54 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v57;
        if (!v43)
          goto LABEL_104;
        goto LABEL_93;
    }
  }
}

void sub_188FEE130(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEE248(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEE8F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FEE9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchAddressLabeledTokenCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchStringStringPair readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  -[GEOPDSearchGeoDecoration readAll:](*(_QWORD *)(a1 + 16), 1);
  -[GEOPDSearchGeoDecoration readAll:](*(_QWORD *)(a1 + 40), 1);
}

unint64_t GEOPDSearchAddressLabeledTokenReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchAddressLabeledTokenReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchAddressLabeledTokenReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchAddressLabeledTokenReadAllFrom_initialTag;
  Specified = GEOPDSearchAddressLabeledTokenReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchAddressLabeledTokenCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188FEF234(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchAddressLabeledTokenIsValid(char *a1)
{
  _BOOL4 v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v27;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = 0;
  v30 = 0;
  v3 = (int *)MEMORY[0x1E0D82BF0];
  v29 = 0;
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v5])
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v3;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v4])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v15 = a1[*v5];
          goto LABEL_14;
        }
      }
      a1[*v5] = 1;
LABEL_12:
      v15 = a1[*v5];
      if (a1[*v5])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v9 >> 3))
      {
        case 1u:
          v18 = v29;
          if ((_DWORD)v29)
          {
            if ((_DWORD)v29 == 1)
              goto LABEL_69;
            if (HIDWORD(v29))
            {
              if (HIDWORD(v29) == 1 || v30)
                goto LABEL_69;
              v18 = 2;
            }
            else
            {
              v18 = 1;
            }
          }
          *((_DWORD *)&v29 + v18) = 1;
          if (v16)
            goto LABEL_69;
          v21 = 0;
          do
          {
            v22 = *v3;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v4])
            {
              a1[*v5] = 1;
              goto LABEL_63;
            }
            v25 = *(char *)(*(_QWORD *)&a1[*v6] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0)
              break;
          }
          while (v21++ <= 8);
          goto LABEL_63;
        case 2u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchStringStringPairIsValid(a1))
            goto LABEL_32;
          goto LABEL_69;
        case 3u:
          v19 = v29;
          if (!(_DWORD)v29)
            goto LABEL_58;
          if ((_DWORD)v29 == 3)
            goto LABEL_69;
          if (HIDWORD(v29))
          {
            if (HIDWORD(v29) == 3 || v30)
              goto LABEL_69;
            v19 = 2;
          }
          else
          {
            v19 = 1;
          }
LABEL_58:
          *((_DWORD *)&v29 + v19) = 3;
          if (v16 != 2)
            goto LABEL_69;
          goto LABEL_62;
        case 4u:
          v20 = v29;
          if (!(_DWORD)v29)
            goto LABEL_61;
          if ((_DWORD)v29 == 4)
            goto LABEL_69;
          if (HIDWORD(v29))
          {
            if (HIDWORD(v29) == 4 || v30)
            {
LABEL_69:
              PBReaderRecallMark();
              return 0;
            }
            v20 = 2;
          }
          else
          {
            v20 = 1;
          }
LABEL_61:
          *((_DWORD *)&v29 + v20) = 4;
          if (v16 != 2)
            goto LABEL_69;
LABEL_62:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_69;
LABEL_63:
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4])
            goto LABEL_64;
          break;
        case 5u:
          if (v16 == 2)
            goto LABEL_62;
          goto LABEL_69;
        case 6u:
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchGeoDecorationIsValid(a1))
            goto LABEL_69;
LABEL_32:
          PBReaderRecallMark();
          goto LABEL_63;
        default:
          goto LABEL_62;
      }
    }
LABEL_64:
    v2 = v30 != 0;
  }
  if (a1[*v5])
    v27 = 0;
  else
    v27 = v2;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOPDSearchStringStringPairIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  char v22;
  char v23;
  int v24;
  _BOOL4 v25;
  _BOOL8 v26;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v28[0] = 0;
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_36;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
      {
LABEL_36:
        v25 = HIDWORD(v28[0]) != 0;
        goto LABEL_38;
      }
      if ((v8 >> 3) == 1)
      {
        v21 = 0;
        v22 = 1;
        while (1)
        {
          v23 = v22;
          v24 = *((_DWORD *)v28 + v21);
          if (!v24)
            break;
          if (v24 != 1)
          {
            v22 = 0;
            v21 = 1;
            if ((v23 & 1) != 0)
              continue;
          }
          goto LABEL_42;
        }
        *((_DWORD *)v28 + v21) = 1;
        if (v15 != 2)
        {
LABEL_42:
          PBReaderRecallMark();
          return 0;
        }
      }
      else if ((v8 >> 3) == 2)
      {
        v17 = 0;
        v18 = 1;
        while (1)
        {
          v19 = v18;
          v20 = *((_DWORD *)v28 + v17);
          if (!v20)
            break;
          if (v20 != 2)
          {
            v18 = 0;
            v17 = 1;
            if ((v19 & 1) != 0)
              continue;
          }
          goto LABEL_42;
        }
        *((_DWORD *)v28 + v17) = 2;
        if (v15 != 2)
          goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_42;
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
    }
  }
  v25 = 0;
LABEL_38:
  if (a1[*v4])
    v26 = 0;
  else
    v26 = v25;
  PBReaderRecallMark();
  return v26;
}

BOOL GEOPDSearchGeoDecorationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  _BOOL8 v78;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_127;
          goto LABEL_123;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 9u:
          if (v15 == 2)
            goto LABEL_123;
          goto LABEL_127;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 0xBu:
          if (v15 == 2)
            goto LABEL_123;
          goto LABEL_127;
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_121;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_124;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_127;
          v73 = 0;
          break;
        case 0x10u:
          if (v15 == 2)
            goto LABEL_123;
          goto LABEL_127;
        default:
LABEL_123:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_127:
          v78 = 0;
          goto LABEL_126;
      }
      while (1)
      {
        v74 = *v2;
        v75 = *(_QWORD *)&a1[v74];
        v76 = v75 + 1;
        if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
          break;
        v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
        *(_QWORD *)&a1[v74] = v76;
        if (v77 < 0)
        {
          v22 = v73++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_124;
      }
LABEL_121:
      a1[*v4] = 1;
LABEL_124:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v78 = a1[*v4] == 0;
LABEL_126:
  PBReaderRecallMark();
  return v78;
}

void sub_188FF0128(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchAddressLabeledTokenIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 80);
  if ((v2 & 0x76) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 80) & 1) != 0)
  {
    if (GEOPDSearchGeoDecorationIsDirty(*(os_unfair_lock_s **)(a1 + 16)))
      return 1;
    v2 = *(_BYTE *)(a1 + 80);
  }
  if ((v2 & 8) == 0)
    goto LABEL_10;
  if (GEOPDSearchGeoDecorationIsDirty(*(os_unfair_lock_s **)(a1 + 40)))
    return 1;
  v2 = *(_BYTE *)(a1 + 80);
LABEL_10:
  if ((v2 & 2) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEOPDSearchStringStringPairIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_22;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_22:

  return v3;
}

void sub_188FF0600(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const __int16 *v11;
  uint16x4_t v12;
  int16x4_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  BOOL v72;
  uint64_t v73;
  __int16 v74;
  char v75;
  int v76;
  __int16 v77;
  void *v78;
  GEOPDSearchTokenSet *v80;
  char v81;
  char v82;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const __int16 *)(a1 + 68);
  v12 = (uint16x4_t)vld1_dup_s16(v11);
  v13 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFBFFF9FFFAFFFCLL), (int8x8_t)0x1000100010001);
  v13.i16[0] = vaddv_s16(v13);
  v14 = v13.i32[0];
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 2;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v82 = (v19 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v81 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_117;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_117:
      if ((v18 & 1) != 0)
      {
        v75 = 1;
        goto LABEL_128;
      }
      if (v19)
      {
        while (1)
        {
          v76 = *v19++;
          v77 = 64;
          switch(v76)
          {
            case 0:
              goto LABEL_129;
            case 1:
              goto LABEL_124;
            case 2:
              v77 = 16;
              goto LABEL_124;
            case 3:
              v77 = 128;
              goto LABEL_124;
            case 4:
              v77 = 32;
LABEL_124:
              *(_WORD *)(a1 + 68) |= v77;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_129;
    }
    v33 = v25 >> 3;
    v34 = v18;
    if ((v82 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 68) & 0x40) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 32;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_127;
        v74 = *(_WORD *)(a1 + 68) << 9;
        goto LABEL_114;
      case 2:
        if (!v34)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 16;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_127;
        v74 = *(_WORD *)(a1 + 68) << 11;
        goto LABEL_114;
      case 3:
        if (!v34)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 68) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_127;
          v74 = *(_WORD *)(a1 + 68) << 8;
LABEL_114:
          v7 += v74 >> 15;
          goto LABEL_115;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_127;
        v80 = objc_alloc_init(GEOPDSearchTokenSet);
        if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v80, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v80;
LABEL_54:

          --v7;
LABEL_115:
          v18 = v81;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_116:
          if (!(v18 & 1 | (v7 != 0)))
            goto LABEL_117;
          continue;
        }

LABEL_127:
        v75 = 0;
        v18 = v81;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_128:
        *(_WORD *)(a1 + 68) |= 0x40u;
        *(_WORD *)(a1 + 68) |= 0x10u;
        *(_WORD *)(a1 + 68) |= 0x80u;
        *(_WORD *)(a1 + 68) |= 0x20u;
        if ((v75 & 1) != 0)
        {
LABEL_129:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_130;
        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
          {
LABEL_130:
            v78 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if (!v34)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 68) & 0x20) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 24;
LABEL_53:
          v42 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_127;
        v74 = *(_WORD *)(a1 + 68) << 10;
        goto LABEL_114;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_87;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 68) |= 2u;
        while (2)
        {
          v46 = *v20;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v30 = v44++ >= 9;
              if (v30)
              {
                v45 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v45 = 0;
LABEL_92:
        v72 = v45 != 0;
        v73 = 64;
        goto LABEL_105;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_87;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_WORD *)(a1 + 68) |= 8u;
        while (2)
        {
          v53 = *v20;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v30 = v51++ >= 9;
              if (v30)
              {
                v52 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v52 = 0;
LABEL_96:
        v72 = v52 != 0;
        v73 = 66;
        goto LABEL_105;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_87;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_WORD *)(a1 + 68) |= 1u;
        while (2)
        {
          v60 = *v20;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v30 = v58++ >= 9;
              if (v30)
              {
                LODWORD(v59) = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v59) = 0;
LABEL_100:
        *(_DWORD *)(a1 + 60) = v59;
        goto LABEL_116;
      case 8:
        if ((v8 & 1) != 0)
        {
          v64 = 0;
          v65 = 0;
          v66 = 0;
          *(_WORD *)(a1 + 68) |= 4u;
          while (1)
          {
            v67 = *v20;
            v68 = *(_QWORD *)(v3 + v67);
            v69 = v68 + 1;
            if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
              break;
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if ((v70 & 0x80) == 0)
              goto LABEL_102;
            v64 += 7;
            v30 = v65++ >= 9;
            if (v30)
            {
              v66 = 0;
              goto LABEL_104;
            }
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_102:
          if (*(_BYTE *)(v3 + *v21))
            v66 = 0;
LABEL_104:
          v72 = v66 != 0;
          v73 = 65;
LABEL_105:
          *(_BYTE *)(a1 + v73) = v72;
        }
        else
        {
LABEL_87:
          v71 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v81;
          if ((v71 & 1) == 0)
          {
LABEL_125:
            v75 = 0;
            goto LABEL_128;
          }
        }
        goto LABEL_116;
      default:
        v41 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v81;
        if (!v41)
          goto LABEL_125;
        goto LABEL_116;
    }
  }
}

void sub_188FF16C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF17AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchAttributeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchAttributeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchAttributeReadAllFrom_initialTag;
  Specified = GEOPDSearchAttributeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 40), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_188FF1950(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF1B84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchAttributeIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int16 *)(a1 + 68);
  if ((v2 & 0x150) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 68);
  }
  return (v2 >> 5) & 1;
}

void sub_188FF1E3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  void *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  GEOPDSearchTokenSet *v55;
  char v56;
  char v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFFLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 0x10) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v57 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v56 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_88;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_88:
      if ((v15 & 1) != 0)
      {
        v50 = 1;
        goto LABEL_100;
      }
      if (v16)
      {
        while (1)
        {
          v51 = *v16++;
          v52 = 8;
          switch(v51)
          {
            case 0:
              goto LABEL_101;
            case 1:
              goto LABEL_96;
            case 2:
              v52 = 2;
              goto LABEL_96;
            case 3:
              v52 = 32;
              goto LABEL_96;
            case 4:
              v52 = 4;
              goto LABEL_96;
            case 6:
              v52 = 16;
LABEL_96:
              *(_BYTE *)(a1 + 72) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v57 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 8) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 32;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v49 = 16 * *(_BYTE *)(a1 + 72);
        goto LABEL_85;
      case 2:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 2) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 16;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v49 = *(_BYTE *)(a1 + 72) << 6;
        goto LABEL_85;
      case 3:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_99;
          v49 = 4 * *(_BYTE *)(a1 + 72);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v55 = objc_alloc_init(GEOPDSearchTokenSet);
        if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
          goto LABEL_98;
        PBReaderRecallMark();
        v39 = 48;
        goto LABEL_67;
      case 4:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 72) & 4) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 24;
LABEL_53:
          v40 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v49 = 32 * *(_BYTE *)(a1 + 72);
        goto LABEL_85;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v44 = *v17;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v27 = v42++ >= 9;
              if (v27)
              {
                v43 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v43 = 0;
LABEL_74:
        *(_BYTE *)(a1 + 68) = v43 != 0;
        goto LABEL_87;
      case 6:
        if (!v31)
        {
LABEL_69:
          v48 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v56;
          if ((v48 & 1) == 0)
          {
LABEL_97:
            v50 = 0;
            goto LABEL_100;
          }
LABEL_87:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_88;
          continue;
        }
        if ((*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_99;
          v49 = 8 * *(_BYTE *)(a1 + 72);
LABEL_85:
          v7 += v49 >> 7;
LABEL_86:
          v15 = v56;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v55 = objc_alloc_init(GEOPDSearchStructuredAttribute);
        if (GEOPDSearchStructuredAttributeReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v39 = 40;
LABEL_67:
          v40 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v55;
LABEL_68:

          --v7;
          goto LABEL_86;
        }
LABEL_98:

LABEL_99:
        v50 = 0;
        v15 = v56;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_100:
        *(_BYTE *)(a1 + 72) |= 8u;
        *(_BYTE *)(a1 + 72) |= 2u;
        *(_BYTE *)(a1 + 72) |= 0x20u;
        *(_BYTE *)(a1 + 72) |= 4u;
        *(_BYTE *)(a1 + 72) |= 0x10u;
        if ((v50 & 1) != 0)
        {
LABEL_101:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_102;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_102:
            v53 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v56;
        if (!v38)
          goto LABEL_97;
        goto LABEL_87;
    }
  }
}

void sub_188FF2DB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF2EBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchAttributeIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchAttributeIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchAttributeIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchAttributeIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 48), 1);
    -[GEOPDSearchStructuredAttribute readAll:](*(_QWORD *)(a1 + 40), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_188FF3074(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchStructuredAttributeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  int v26;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  BOOL v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  int v54;
  _BOOL8 v55;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_103;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_103;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_105;
        v49 = 0;
        while (1)
        {
          v50 = *v2;
          v51 = *(_QWORD *)&a1[v50];
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
            break;
          v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
          *(_QWORD *)&a1[v50] = v52;
          if (v53 < 0)
          {
            v33 = v49++ > 8;
            if (!v33)
              continue;
          }
          goto LABEL_102;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((_DWORD)v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark())
            goto LABEL_105;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
LABEL_24:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v18 = 0;
            v19 = 0;
            v20 = 0;
            while (1)
            {
              v21 = *v2;
              v22 = *(_QWORD *)&a1[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&a1[*v3])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v22);
              *(_QWORD *)&a1[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_34;
              v18 += 7;
              v13 = v19++ >= 9;
              if (v13)
              {
                v20 = 0;
                v25 = a1[*v4];
                goto LABEL_36;
              }
            }
            a1[*v4] = 1;
LABEL_34:
            v25 = a1[*v4];
            if (a1[*v4])
              v20 = 0;
LABEL_36:
            v26 = v20 & 7;
            if (v25 || v26 == 4)
              break;
            switch((v20 >> 3))
            {
              case 1u:
                if (v26 != 2)
                  goto LABEL_104;
                goto LABEL_50;
              case 2u:
                if (v26 == 2)
                  goto LABEL_50;
                goto LABEL_104;
              case 3u:
                if (v26 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
                  goto LABEL_104;
                PBReaderRecallMark();
                continue;
              case 4u:
                if (v26 == 2)
                  goto LABEL_50;
                goto LABEL_104;
              case 5u:
                if ((v20 & 7) != 0)
                  goto LABEL_104;
                v28 = 0;
                while (1)
                {
                  v29 = *v2;
                  v30 = *(_QWORD *)&a1[v29];
                  v31 = v30 + 1;
                  if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
                    goto LABEL_84;
                  v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
                  *(_QWORD *)&a1[v29] = v31;
                  if (v32 < 0)
                  {
                    v33 = v28++ > 8;
                    if (!v33)
                      continue;
                  }
                  goto LABEL_24;
                }
              case 6u:
                if ((v20 & 7) != 0)
                  goto LABEL_104;
                v34 = 0;
                while (1)
                {
                  v35 = *v2;
                  v36 = *(_QWORD *)&a1[v35];
                  v37 = v36 + 1;
                  if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
                    goto LABEL_84;
                  v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
                  *(_QWORD *)&a1[v35] = v37;
                  if (v38 < 0)
                  {
                    v33 = v34++ > 8;
                    if (!v33)
                      continue;
                  }
                  goto LABEL_24;
                }
              case 7u:
                if ((v20 & 7) != 0)
                  goto LABEL_104;
                v39 = 0;
                while (1)
                {
                  v40 = *v2;
                  v41 = *(_QWORD *)&a1[v40];
                  v42 = v41 + 1;
                  if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
                    goto LABEL_84;
                  v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
                  *(_QWORD *)&a1[v40] = v42;
                  if (v43 < 0)
                  {
                    v33 = v39++ > 8;
                    if (!v33)
                      continue;
                  }
                  goto LABEL_24;
                }
              case 8u:
                if ((v20 & 7) != 0)
                  goto LABEL_104;
                v44 = 0;
                break;
              default:
LABEL_50:
                if ((PBReaderSkipValueWithTag() & 1) != 0)
                  continue;
LABEL_104:
                PBReaderRecallMark();
                goto LABEL_105;
            }
            while (1)
            {
              v45 = *v2;
              v46 = *(_QWORD *)&a1[v45];
              v47 = v46 + 1;
              if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
                break;
              v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
              *(_QWORD *)&a1[v45] = v47;
              if (v48 < 0)
              {
                v33 = v44++ > 8;
                if (!v33)
                  continue;
              }
              goto LABEL_24;
            }
LABEL_84:
            a1[*v4] = 1;
          }
          v54 = a1[*v4];
          PBReaderRecallMark();
          if (v54)
          {
LABEL_105:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_105;
      }
LABEL_102:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_103;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStructuredAttributeIsValid(a1))
      goto LABEL_105;
LABEL_100:
    PBReaderRecallMark();
    goto LABEL_102;
  }
LABEL_103:
  v55 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v55;
}

void sub_188FF37A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchAttributeIntentIsDirty(uint64_t a1)
{
  char v2;
  os_unfair_lock_s *v4;
  uint64_t IsDirty;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(_BYTE *)(a1 + 72);
  if ((v2 & 0x4A) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 48)))
      return 1;
    v2 = *(_BYTE *)(a1 + 72);
  }
  if ((v2 & 4) != 0)
    return 1;
  if ((v2 & 0x10) == 0)
    return 0;
  v4 = *(os_unfair_lock_s **)(a1 + 40);
  if (!v4)
    return 0;
  os_unfair_lock_lock_with_options();
  IsDirty = _GEOPDSearchStructuredAttributeIsDirty((uint64_t)v4);
  os_unfair_lock_unlock(v4 + 10);
  return IsDirty;
}

void sub_188FF3A4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandDensityReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  _BOOL8 v31;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          PBReaderReadString();
          v26 = objc_claimAutoreleasedReturnValue();
          v27 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v26;

        }
        else if ((_DWORD)v18 == 2)
        {
          *(_BYTE *)(a1 + 28) |= 2u;
          v28 = *v4;
          v29 = *(_QWORD *)&v3[v28];
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v30 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v29);
            *(_QWORD *)&v3[v28] = v29 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v30 = 0;
          }
          *(_DWORD *)(a1 + 24) = v30;
        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_36;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            v21 = 0;
LABEL_38:
          *(_QWORD *)(a1 + 8) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_43;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v31 = v3[*v6] == 0;
  }
  else
  {
LABEL_43:
    v31 = 0;
  }
  objc_sync_exit(v3);

  return v31;
}

void sub_188FF42C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandDensityIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_43:
          v28 = 0;
          goto LABEL_42;
        }
      }
      else if ((_DWORD)v18 == 2)
      {
        if (v16 != 5)
          goto LABEL_43;
        v25 = *v2;
        v26 = *(_QWORD *)&a1[v25];
        if (v26 > 0xFFFFFFFFFFFFFFFBLL)
          goto LABEL_39;
        v27 = v26 + 4;
        if (v27 > *(_QWORD *)&a1[*v3])
          goto LABEL_39;
        *(_QWORD *)&a1[v25] = v27;
      }
      else
      {
        if ((_DWORD)v18 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_43;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(char *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            if (v23 < 0 && v19++ <= 8)
              continue;
            goto LABEL_40;
          }
          v14 = *v4;
LABEL_39:
          a1[v14] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag())
          goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDSearchBusinessEntryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_30;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6])
            v20 = 0;
LABEL_32:
          *(_QWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_188FF4BAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBusinessIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  int v39;
  uint64_t v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  int *v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  int v74;
  char v75;
  void *v76;
  GEOPDSearchTokenSet *v78;
  char v79;
  char v80;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 96)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFALL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 96) & 0x10) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_124;
        v80 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v79 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_124;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_124:
      if ((v15 & 1) != 0)
      {
        v73 = 1;
        goto LABEL_126;
      }
      if (v16)
      {
        while (1)
        {
          v74 = *v16++;
          v75 = 32;
          switch(v74)
          {
            case 0:
              goto LABEL_136;
            case 1:
              goto LABEL_135;
            case 2:
              v75 = 64;
              goto LABEL_135;
            case 4:
              v75 = 8;
              goto LABEL_135;
            case 6:
              v75 = 4;
              goto LABEL_135;
            case 7:
              v75 = 16;
LABEL_135:
              *(_BYTE *)(a1 + 96) |= v75;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_136;
    }
    v31 = v22 >> 3;
    v32 = v15;
    if ((v80 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_93;
        if ((*(_BYTE *)(a1 + 96) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v37;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_141;
        v65 = 4 * *(_BYTE *)(a1 + 96);
        goto LABEL_109;
      case 2:
        if (!v32)
          goto LABEL_93;
        if ((*(_BYTE *)(a1 + 96) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v65 = 2 * *(_BYTE *)(a1 + 96);
          goto LABEL_109;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v78 = objc_alloc_init(GEOPDSearchTokenSet);
        if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v78, (void *)v3, v9 & 1))
          goto LABEL_140;
        PBReaderRecallMark();
        v40 = 72;
        goto LABEL_60;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_93;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 96) |= 1u;
        while (2)
        {
          v44 = *v17;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v27 = v42++ >= 9;
              if (v27)
              {
                v43 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v43 = 0;
LABEL_98:
        *(_QWORD *)(a1 + 40) = v43;
        goto LABEL_111;
      case 4:
        if (!v32)
          goto LABEL_93;
        if ((*(_BYTE *)(a1 + 96) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_141;
          v65 = 16 * *(_BYTE *)(a1 + 96);
LABEL_109:
          v7 += v65 >> 7;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_141;
          v78 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v78, (void *)v3))
            goto LABEL_140;
          PBReaderRecallMark();
          v40 = 48;
LABEL_60:
          v38 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v78;
LABEL_61:

          --v7;
        }
        goto LABEL_110;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_93;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_BYTE *)(a1 + 96) |= 2u;
        while (2)
        {
          v51 = *v17;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v27 = v49++ >= 9;
              if (v27)
              {
                LODWORD(v50) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v50) = 0;
LABEL_102:
        *(_DWORD *)(a1 + 92) = v50;
        goto LABEL_111;
      case 6:
        if (!v32 || (*(_BYTE *)(a1 + 96) & 4) != 0)
        {
LABEL_93:
          v64 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v79;
          if ((v64 & 1) == 0)
          {
LABEL_139:
            v73 = 0;
            goto LABEL_126;
          }
        }
        else
        {
          if (v29 != 2)
          {
            v66 = 0;
            v67 = 0;
            v68 = 0;
            while (1)
            {
              v69 = *v17;
              v70 = *(_QWORD *)(v3 + v69);
              v71 = v70 + 1;
              if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
                break;
              v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v70);
              *(_QWORD *)(v3 + v69) = v71;
              v68 |= (unint64_t)(v72 & 0x7F) << v66;
              if (v72 < 0)
              {
                v66 += 7;
                v27 = v67++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_123;
            }
            *(_BYTE *)(v3 + *v18) = 1;
LABEL_123:
            PBRepeatedUInt64Add();
            goto LABEL_110;
          }
          if (!PBReaderPlaceMark())
            goto LABEL_141;
          while (1)
          {
            v55 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v56 = 0;
            v57 = 0;
            v58 = 0;
            while (1)
            {
              v59 = *v17;
              v60 = *(_QWORD *)(v3 + v59);
              v61 = v60 + 1;
              if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
                break;
              v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v60);
              *(_QWORD *)(v3 + v59) = v61;
              v58 |= (unint64_t)(v62 & 0x7F) << v56;
              if (v62 < 0)
              {
                v56 += 7;
                v27 = v57++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_84;
            }
            *(_BYTE *)(v3 + *v55) = 1;
LABEL_84:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v79;
        }
        goto LABEL_111;
      case 7:
        if (!v32 || (*(_BYTE *)(a1 + 96) & 0x10) != 0)
        {
          v63 = PBReaderSkipValueWithTag();
          v15 = v79;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v63 & 1) == 0)
            goto LABEL_139;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_141;
        v78 = objc_alloc_init(GEOPDSearchKeywordMapping);
        if (GEOPDSearchKeywordMappingReadAllFrom((uint64_t)v78, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchBusinessIntent _addNoFlagsKeywordMapping:](a1, v78);

LABEL_110:
          v15 = v79;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_111:
          if (!(v15 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_124;
          continue;
        }
LABEL_140:

LABEL_141:
        v73 = 0;
        v15 = v79;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_126:
        *(_BYTE *)(a1 + 96) |= 0x20u;
        *(_BYTE *)(a1 + 96) |= 0x40u;
        *(_BYTE *)(a1 + 96) |= 8u;
        *(_BYTE *)(a1 + 96) |= 4u;
        *(_BYTE *)(a1 + 96) |= 0x10u;
        if ((v73 & 1) != 0)
        {
LABEL_136:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_137;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_137:
        v76 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v79;
        if (!v39)
          goto LABEL_139;
        goto LABEL_111;
    }
  }
}

void sub_188FF57E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF58EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF5E94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF5F78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchBusinessIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 72), 1);
  objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v2 = *(id *)(a1 + 56);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v7;
    while (1)
    {
      if (*(_QWORD *)v7 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
        if (!v4)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchBusinessIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchBusinessIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchBusinessIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchBusinessIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchBusinessIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchBusinessIntentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_188FF620C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeywordMappingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_188FF6708(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchBusinessIntentIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(unsigned __int8 *)(a1 + 96);
  if ((v2 & 0xA0) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 96);
  }
  if ((v2 & 0xC) != 0)
    return 1;
  return (v2 >> 4) & 1;
}

void sub_188FF6A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCTRStoreKeyValuePairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  char v78;
  char v79;
  char v80;
  char v81;
  int v82;
  int v83;
  void *v84;
  BOOL v86;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 68) >> 6) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v86 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_135;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_135:
      if (v13)
      {
        v80 = 1;
        goto LABEL_147;
      }
      if (!v14)
        goto LABEL_148;
      while (1)
      {
        v83 = *v14++;
        v82 = v83;
        if (v83 == 6)
          break;
        if (v82 == 7)
        {
          v81 = 32;
LABEL_141:
          *(_BYTE *)(a1 + 68) |= v81;
        }
        else if (!v82)
        {
          goto LABEL_148;
        }
      }
      v81 = 64;
      goto LABEL_141;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v86)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_98;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 68) |= 0x10u;
        while (1)
        {
          v38 = *v16;
          v39 = *(_QWORD *)(v3 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v39);
          *(_QWORD *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_101;
          v35 += 7;
          v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_103;
          }
        }
        *(_BYTE *)(v3 + *v17) = 1;
LABEL_101:
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_103:
        v77 = 60;
        goto LABEL_124;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_98;
        v43 = 0;
        v44 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 68) |= 4u;
        while (2)
        {
          v45 = *v16;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v37 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_107:
        v77 = 52;
        goto LABEL_124;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_98;
        v49 = 0;
        v50 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 68) |= 8u;
        while (2)
        {
          v51 = *v16;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v37 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v26 = v50++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_111:
        v77 = 56;
        goto LABEL_124;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_98;
        v55 = 0;
        v56 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v57 = *v16;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v37 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v26 = v56++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_115:
        v77 = 48;
        goto LABEL_124;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_98;
        v61 = 0;
        v62 = 0;
        v37 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v63 = *v16;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v37 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              v26 = v62++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v37) = 0;
LABEL_119:
        v77 = 44;
        goto LABEL_124;
      case 6:
        if (!v30)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 68) & 0x40) == 0)
        {
          PBReaderReadString();
          v67 = objc_claimAutoreleasedReturnValue();
          v68 = 24;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_153;
        v79 = 2 * *(_BYTE *)(a1 + 68);
        goto LABEL_134;
      case 7:
        if (!v30)
          goto LABEL_98;
        if ((*(_BYTE *)(a1 + 68) & 0x20) == 0)
        {
          PBReaderReadString();
          v67 = objc_claimAutoreleasedReturnValue();
          v68 = 16;
LABEL_89:
          v69 = *(void **)(a1 + v68);
          *(_QWORD *)(a1 + v68) = v67;

          v17 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_125;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v79 = 4 * *(_BYTE *)(a1 + 68);
LABEL_134:
          v9 += v79 >> 7;
          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_125:
          if (v9)
            v78 = 1;
          else
            v78 = v13;
          if ((v78 & 1) == 0)
            goto LABEL_135;
          continue;
        }
LABEL_153:
        v80 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_147:
        *(_BYTE *)(a1 + 68) |= 0x40u;
        *(_BYTE *)(a1 + 68) |= 0x20u;
        if ((v80 & 1) != 0)
        {
LABEL_148:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_149;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_149:
            v84 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 8:
        if ((v8 & 1) != 0)
        {
          v70 = 0;
          v71 = 0;
          v37 = 0;
          while (1)
          {
            v72 = *v16;
            v73 = *(_QWORD *)(v3 + v72);
            v74 = v73 + 1;
            if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
              break;
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v37 |= (unint64_t)(v75 & 0x7F) << v70;
            if ((v75 & 0x80) == 0)
              goto LABEL_121;
            v70 += 7;
            v26 = v71++ >= 9;
            if (v26)
            {
              LODWORD(v37) = 0;
              goto LABEL_123;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_121:
          if (*(_BYTE *)(v3 + *v17))
            LODWORD(v37) = 0;
LABEL_123:
          v77 = 64;
LABEL_124:
          *(_DWORD *)(a1 + v77) = v37;
        }
        else
        {
LABEL_98:
          v76 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v76 & 1) == 0)
          {
LABEL_146:
            v80 = 0;
            goto LABEL_147;
          }
        }
        goto LABEL_125;
      default:
        v42 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v42)
          goto LABEL_146;
        goto LABEL_125;
    }
  }
}

void sub_188FF7A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF7B40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCTRStoreKeyValuePairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchCTRStoreKeyValuePairReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchCTRStoreKeyValuePairReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchCTRStoreKeyValuePairReadAllFrom_initialTag;
  Specified = GEOPDSearchCTRStoreKeyValuePairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_188FF7CCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF7F18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF8160(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCategoryIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint16x4_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  int v40;
  GEOPDSearchTokenSet *v41;
  void *v42;
  int *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  __int16 v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  int v61;
  __int16 v62;
  void *v63;
  BOOL v65;
  char v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 132);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 128));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 140));
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFFFFFF6FFF5FFFELL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 140) >> 5) & 1)+ ((*(_WORD *)(a1 + 140) >> 4) & 1)+ ((*(_WORD *)(a1 + 140) >> 9) & 1))+ (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFFAFFFDFFF9FFF8), (int8x8_t)0x1000100010001))+ (*(_WORD *)(a1 + 140) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v15 = v10 | (v12 > 8);
        if (((v15 | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = v15;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_124;
        v66 = (v16 == 0) | v15;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v65 = v15;
        break;
      default:
        ++v12;
LABEL_6:
        v13 = v9;
        v14 = v10;
LABEL_8:
        ++v7;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_124;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_124:
      if (v17)
      {
        v60 = 1;
        goto LABEL_126;
      }
      if (v16)
      {
        while (1)
        {
          v61 = *v16++;
          v62 = 2048;
          switch(v61)
          {
            case 0:
              goto LABEL_143;
            case 1:
              goto LABEL_142;
            case 2:
              v62 = 4;
              goto LABEL_142;
            case 3:
              v62 = 1024;
              goto LABEL_142;
            case 4:
              v62 = 2;
              goto LABEL_142;
            case 5:
              v62 = 32;
              goto LABEL_142;
            case 6:
              v62 = 16;
              goto LABEL_142;
            case 7:
              v62 = 512;
              goto LABEL_142;
            case 8:
              v62 = 256;
              goto LABEL_142;
            case 9:
              v62 = 1;
              goto LABEL_142;
            case 10:
              v62 = 128;
              goto LABEL_142;
            case 11:
              v62 = 8;
              goto LABEL_142;
            case 12:
              v62 = 64;
LABEL_142:
              *(_WORD *)(a1 + 140) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_143;
    }
    v32 = v23 >> 3;
    v33 = v17;
    if ((v66 & 1) == 0)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_105;
        if ((*(_WORD *)(a1 + 140) & 0x800) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = *(void **)(a1 + 120);
          *(_QWORD *)(a1 + 120) = v38;

          --v7;
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_147;
        v52 = 16 * *(_WORD *)(a1 + 140);
        goto LABEL_113;
      case 2:
        if (!v33 || (*(_WORD *)(a1 + 140) & 4) != 0)
          goto LABEL_105;
        PBReaderReadString();
        v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41)
          -[GEOPDSearchCategoryIntent _addNoFlagsCategoryId:](a1, v41);
        goto LABEL_102;
      case 3:
        if (!v33)
          goto LABEL_105;
        if ((*(_WORD *)(a1 + 140) & 0x400) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_147;
          v41 = objc_alloc_init(GEOPDSearchTokenSet);
          if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1))
            goto LABEL_148;
          PBReaderRecallMark();
          v42 = *(void **)(a1 + 112);
          *(_QWORD *)(a1 + 112) = v41;

          --v7;
          goto LABEL_103;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_147:
          v60 = 0;
          goto LABEL_149;
        }
        v52 = 32 * *(_WORD *)(a1 + 140);
LABEL_113:
        v7 += v52 >> 15;
        goto LABEL_104;
      case 4:
        if (!v33 || (*(_WORD *)(a1 + 140) & 2) != 0)
          goto LABEL_105;
        PBReaderReadString();
        v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41)
          -[GEOPDSearchCategoryIntent _addNoFlagsCanonicalName:](a1, v41);
        goto LABEL_102;
      case 5:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x20) != 0)
          goto LABEL_105;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v41 = objc_alloc_init(GEOPDSearchKeyValueDoublePair);
        if (!GEOPDSearchKeyValueDoublePairReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_148;
        PBReaderRecallMark();
        -[GEOPDSearchCategoryIntent _addNoFlagsFeatureMap:](a1, v41);
        goto LABEL_102;
      case 6:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x10) != 0)
          goto LABEL_105;
        PBReaderReadString();
        v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41)
          -[GEOPDSearchCategoryIntent _addNoFlagsExpandedCategoryId:](a1, v41);
        goto LABEL_102;
      case 7:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x200) != 0)
          goto LABEL_105;
        PBReaderReadString();
        v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41)
          -[GEOPDSearchCategoryIntent _addNoFlagsNegativeCategory:](a1, v41);
        goto LABEL_102;
      case 8:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x100) != 0)
          goto LABEL_105;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v41 = objc_alloc_init(GEOPDSearchKeyValuePair);
        if (!GEOPDSearchKeyValuePairReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1))
          goto LABEL_148;
        PBReaderRecallMark();
        -[GEOPDSearchCategoryIntent _addNoFlagsModernToLegacyIdMapping:](a1, v41);
        goto LABEL_102;
      case 9:
        if (!v33 || (*(_WORD *)(a1 + 140) & 1) != 0)
          goto LABEL_105;
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_147;
          while (1)
          {
            v43 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v44 = 0;
            v45 = 0;
            v46 = 0;
            while (1)
            {
              v47 = *v18;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                break;
              v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
              *(_QWORD *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                v28 = v45++ >= 9;
                if (!v28)
                  continue;
              }
              goto LABEL_87;
            }
            *(_BYTE *)(v3 + *v43) = 1;
LABEL_87:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          while (1)
          {
            v56 = *v18;
            v57 = *(_QWORD *)(v3 + v56);
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v28 = v54++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_123;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_123:
          PBRepeatedUInt64Add();
        }
        goto LABEL_104;
      case 10:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x80) != 0)
          goto LABEL_105;
        PBReaderReadString();
        v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41)
          -[GEOPDSearchCategoryIntent _addNoFlagsLegacyCategoryId:](a1, v41);
        goto LABEL_102;
      case 11:
        if (!v33 || (*(_WORD *)(a1 + 140) & 8) != 0)
          goto LABEL_105;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v41 = objc_alloc_init(GEOPDSearchCategoryMapping);
        if (!GEOPDSearchCategoryMappingReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1))
          goto LABEL_148;
        PBReaderRecallMark();
        -[GEOPDSearchCategoryIntent _addNoFlagsCategoryMappings:](a1, v41);
        goto LABEL_102;
      case 12:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x40) != 0)
        {
LABEL_105:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
LABEL_146:
            v60 = 0;
            goto LABEL_126;
          }
LABEL_106:
          if (!v17 && v7 == 0 || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_124;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v41 = objc_alloc_init(GEOPDSearchKeywordMapping);
        if (GEOPDSearchKeywordMappingReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchCategoryIntent _addNoFlagsKeywordMapping:](a1, v41);
LABEL_102:

LABEL_103:
          v17 = v65;
LABEL_104:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_106;
        }
LABEL_148:

        v60 = 0;
        v17 = v65;
LABEL_149:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_126:
        *(_WORD *)(a1 + 140) |= 0x800u;
        *(_WORD *)(a1 + 140) |= 4u;
        *(_WORD *)(a1 + 140) |= 0x400u;
        *(_WORD *)(a1 + 140) |= 2u;
        *(_WORD *)(a1 + 140) |= 0x20u;
        *(_WORD *)(a1 + 140) |= 0x10u;
        *(_WORD *)(a1 + 140) |= 0x200u;
        *(_WORD *)(a1 + 140) |= 0x100u;
        *(_WORD *)(a1 + 140) |= 1u;
        *(_WORD *)(a1 + 140) |= 0x80u;
        *(_WORD *)(a1 + 140) |= 8u;
        *(_WORD *)(a1 + 140) |= 0x40u;
        if ((v60 & 1) != 0)
        {
LABEL_143:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if (v17)
            goto LABEL_144;
          return v3;
        }
        v3 = 0;
        if (!v17)
          return v3;
LABEL_144:
        v63 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v40 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v40)
          goto LABEL_146;
        goto LABEL_106;
    }
  }
}

void sub_188FF907C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF9218(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF9414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF952C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF96C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF98C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF99DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF9BD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FF9D50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFA6B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFA798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchCategoryIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 112), 1);
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v2 = *(id *)(a1 + 72);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v33;
    while (1)
    {
      if (*(_QWORD *)v33 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
        if (!v4)
          break;
      }
    }
  }

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v6 = *(id *)(a1 + 96);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v29;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v29 != v9)
          objc_enumerationMutation(v6);
        -[GEOPDSearchKeyValuePair readAll:](*(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v28, v38, 16);
    }
    while (v8);
  }

  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v11 = *(id *)(a1 + 56);
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v25;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v25 != v14)
          objc_enumerationMutation(v11);
        -[GEOPDSearchCategoryMapping readAll:](*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v15++), 1);
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v24, v37, 16);
    }
    while (v13);
  }

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v16 = *(id *)(a1 + 80);
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v21;
    while (1)
    {
      if (*(_QWORD *)v21 != v19)
        objc_enumerationMutation(v16);
      if (!--v18)
      {
        v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v20, v36, 16);
        if (!v18)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchCategoryIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 132))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchCategoryIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 132) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchCategoryIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchCategoryIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchCategoryIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchCategoryIntentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_188FFABD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFB324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchCategoryIntentIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v2 = *(_WORD *)(a1 + 140);
  if ((v2 & 0x1804) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 140) & 0x400) == 0)
  {
LABEL_5:
    if ((v2 & 0x3FB) != 0)
      return 1;
    if ((v2 & 0x100) != 0)
    {
      v20 = 0u;
      v21 = 0u;
      v18 = 0u;
      v19 = 0u;
      v5 = *(id *)(a1 + 96);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v19;
LABEL_11:
        v9 = 0;
        while (1)
        {
          if (*(_QWORD *)v19 != v8)
            objc_enumerationMutation(v5);
          if (GEOPDSearchKeyValuePairIsDirty(*(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v9)))
            goto LABEL_30;
          if (v7 == ++v9)
          {
            v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
            if (v7)
              goto LABEL_11;
            break;
          }
        }
      }

      v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 8) == 0)
      return 0;
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v5 = *(id *)(a1 + 56);
    v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    if (!v3)
    {
LABEL_31:

      return v3;
    }
    v10 = *(_QWORD *)v15;
LABEL_22:
    v11 = 0;
    while (1)
    {
      if (*(_QWORD *)v15 != v10)
        objc_enumerationMutation(v5);
      v12 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v11);
      if (v12)
      {
        os_unfair_lock_lock_with_options();
        os_unfair_lock_assert_owner((const os_unfair_lock *)(v12 + 48));
        v13 = *(_BYTE *)(v12 + 52) & 0xE;
        os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 48));
        if (v13)
          break;
      }
      if (v3 == ++v11)
      {
        v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
        if (v3)
          goto LABEL_22;
        goto LABEL_31;
      }
    }
LABEL_30:
    v3 = 1;
    goto LABEL_31;
  }
  if (!GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 112)))
  {
    v2 = *(_WORD *)(a1 + 140);
    goto LABEL_5;
  }
  return 1;
}

void sub_188FFBD44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCategoryMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  GEOPDSearchRelatedCategory *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  BOOL v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v52 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_73;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_73:
      if (v13)
      {
        v46 = 1;
        goto LABEL_85;
      }
      if (!v14)
        goto LABEL_86;
      while (1)
      {
        v49 = *v14++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 3)
        {
          v47 = 4;
LABEL_79:
          *(_BYTE *)(a1 + 52) |= v47;
        }
        else if (!v48)
        {
          goto LABEL_86;
        }
      }
      v47 = 2;
      goto LABEL_79;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v52)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 != 3)
    {
      if ((_DWORD)v29 == 2)
      {
        if ((v7 & 1) == 0)
          goto LABEL_61;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 52) |= 1u;
        while (1)
        {
          v41 = *v16;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_64;
          v38 += 7;
          v26 = v39++ >= 9;
          if (v26)
          {
            v40 = 0;
            goto LABEL_66;
          }
        }
        *(_BYTE *)(v3 + *v17) = 1;
LABEL_64:
        if (*(_BYTE *)(v3 + *v17))
          v40 = 0;
LABEL_66:
        *(_QWORD *)(a1 + 24) = v40;
      }
      else if ((_DWORD)v29 == 1)
      {
        if (v30)
        {
          if ((*(_BYTE *)(a1 + 52) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_84:
              v46 = 0;
              goto LABEL_85;
            }
            v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
          }
          else
          {
            PBReaderReadString();
            v35 = objc_claimAutoreleasedReturnValue();
            v36 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v35;

            --v8;
          }
          goto LABEL_69;
        }
LABEL_61:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_84;
      }
LABEL_69:
      if (v8)
        v45 = 1;
      else
        v45 = v13;
      if ((v45 & 1) == 0)
        goto LABEL_73;
      continue;
    }
    break;
  }
  if (!v30 || (*(_BYTE *)(a1 + 52) & 4) != 0)
    goto LABEL_61;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_84;
  v37 = objc_alloc_init(GEOPDSearchRelatedCategory);
  if (GEOPDSearchRelatedCategoryReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSearchCategoryMapping _addNoFlagsRelatedCategories:](a1, v37);

    v17 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_69;
  }

  v46 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
  *(_BYTE *)(a1 + 52) |= 2u;
  *(_BYTE *)(a1 + 52) |= 4u;
  if ((v46 & 1) != 0)
  {
LABEL_86:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (v13)
      goto LABEL_87;
  }
  else
  {
    v3 = 0;
    if (v13)
    {
LABEL_87:
      v50 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_188FFC78C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFCB6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFCC48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchCategoryMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchCategoryMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchCategoryMappingReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchCategoryMappingReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchCategoryMappingReadAllFrom_initialTag;
  Specified = GEOPDSearchCategoryMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchCategoryMappingCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_188FFCEB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRelatedCategoryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_42;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_42;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_44;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_39;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_41;
        }
      }
      if ((_DWORD)v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_42;
    }
    if ((v8 & 7) != 0)
      goto LABEL_44;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

void sub_188FFD350(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFD5B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchChainInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int *v13;
  GEOPDSearchBrandDensity *v14;
  int *v15;
  int *v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  int *v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  void *v53;
  char v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  int v64;
  char v65;
  void *v66;
  int v68;
  char v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(_BYTE *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 1);
  if (((v12 | v8) & 1) != 0)
    v13 = 0;
  else
    v13 = a3;
  LODWORD(v14) = v12;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_95:
    if ((v14 & 1) != 0)
    {
      v63 = 1;
      goto LABEL_97;
    }
    if (v13)
    {
      while (1)
      {
        v64 = *v13++;
        v65 = 1;
        switch(v64)
        {
          case 0:
            goto LABEL_105;
          case 2:
            goto LABEL_104;
          case 3:
            v65 = 4;
            goto LABEL_104;
          case 4:
            v65 = 2;
LABEL_104:
            *(_BYTE *)(a1 + 76) |= v65;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_105;
  }
  v69 = (v13 == 0) | v12;
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(v3 + *v16))
      goto LABEL_95;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v15;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v20 = 0;
LABEL_26:
    v27 = v20 & 7;
    if (v26 || v27 == 4)
      goto LABEL_95;
    v29 = v20 >> 3;
    v30 = (char)v14;
    if ((v69 & 1) == 0)
    {
      v31 = v13;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_71;
        v35 = 0;
        v36 = 0;
        v37 = 0;
        while (1)
        {
          v38 = *v15;
          v39 = *(_QWORD *)(v3 + v38);
          v40 = v39 + 1;
          if (v39 == -1 || v40 > *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v39);
          *(_QWORD *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0)
            goto LABEL_74;
          v35 += 7;
          v25 = v36++ >= 9;
          if (v25)
          {
            v37 = 0;
            goto LABEL_76;
          }
        }
        *(_BYTE *)(v3 + *v16) = 1;
LABEL_74:
        if (*(_BYTE *)(v3 + *v16))
          v37 = 0;
LABEL_76:
        *(_QWORD *)(a1 + 56) = v37;
        goto LABEL_93;
      case 2:
        if (!v30 || (*(_BYTE *)(a1 + 76) & 1) != 0)
          goto LABEL_71;
        if (v27 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_109;
          while (1)
          {
            v43 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v44 = 0;
            v45 = 0;
            v46 = 0;
            while (1)
            {
              v47 = *v15;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                break;
              v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v48);
              *(_QWORD *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                v25 = v45++ >= 9;
                if (!v25)
                  continue;
              }
              goto LABEL_62;
            }
            *(_BYTE *)(v3 + *v43) = 1;
LABEL_62:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v56 = 0;
          v57 = 0;
          v58 = 0;
          while (1)
          {
            v59 = *v15;
            v60 = *(_QWORD *)(v3 + v59);
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
              break;
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v25 = v57++ >= 9;
              if (!v25)
                continue;
            }
            goto LABEL_91;
          }
          *(_BYTE *)(v3 + *v16) = 1;
LABEL_91:
          PBRepeatedInt32Add();
        }
        goto LABEL_92;
      case 3:
        if (!v30)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 76) & 4) == 0)
        {
          PBReaderReadString();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v51;

          v16 = (int *)MEMORY[0x1E0D82BC8];
          --v7;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_109;
        v55 = 32 * *(_BYTE *)(a1 + 76);
        goto LABEL_81;
      case 4:
        if (!v30)
        {
LABEL_71:
          v54 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v54 & 1) == 0)
          {
LABEL_108:
            v63 = 0;
            goto LABEL_97;
          }
LABEL_93:
          if (!(v14 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_95;
          continue;
        }
        if ((*(_BYTE *)(a1 + 76) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_109:
            v63 = 0;
            goto LABEL_111;
          }
          v55 = *(_BYTE *)(a1 + 76) << 6;
LABEL_81:
          v7 += v55 >> 7;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_109;
        v68 = (int)v14;
        v14 = objc_alloc_init(GEOPDSearchBrandDensity);
        if (GEOPDSearchBrandDensityReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          v53 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v14;

          --v7;
          LODWORD(v14) = v68;
LABEL_92:
          v16 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_93;
        }

        v63 = 0;
        LOBYTE(v14) = v68;
LABEL_111:
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        *(_BYTE *)(a1 + 76) |= 1u;
        *(_BYTE *)(a1 + 76) |= 4u;
        *(_BYTE *)(a1 + 76) |= 2u;
        if ((v63 & 1) != 0)
        {
LABEL_105:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if ((v14 & 1) != 0)
            goto LABEL_106;
          return v3;
        }
        v3 = 0;
        if ((v14 & 1) == 0)
          return v3;
LABEL_106:
        v66 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v42 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v42)
          goto LABEL_108;
        goto LABEL_93;
    }
  }
}

void sub_188FFE2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFE3BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFE900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchChainInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchChainInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchChainInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchChainInfoReadAllFrom_initialTag;
  Specified = GEOPDSearchChainInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_188FFEA94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDSearchChainInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v35;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_57;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        v14 = v8++ >= 9;
        if (v14)
        {
          v9 = 0;
          v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v15 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        goto LABEL_57;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0)
            goto LABEL_65;
          v18 = 0;
          do
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            {
              v5 = 1;
              a1[*v4] = 1;
              goto LABEL_54;
            }
            v22 = *(char *)(*(_QWORD *)&a1[*v6] + v20);
            *(_QWORD *)&a1[v19] = v21;
            v5 = 1;
            if ((v22 & 0x80000000) == 0)
              break;
          }
          while (v18++ <= 8);
          goto LABEL_54;
        case 2u:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_65:
              PBReaderRecallMark();
              return 0;
            }
LABEL_44:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v29 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v30 = *v2;
                v31 = *(_QWORD *)&a1[v30];
                v32 = v31 + 1;
                if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
                  break;
                v33 = *(char *)(*(_QWORD *)&a1[*v6] + v31);
                *(_QWORD *)&a1[v30] = v32;
                if (v33 < 0)
                {
                  v14 = v29++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_44;
              }
              a1[*v4] = 1;
            }
LABEL_41:
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0)
              goto LABEL_65;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v6] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v28 = v16++;
                if (v28 <= 8)
                  continue;
              }
              goto LABEL_54;
            }
            a1[*v4] = 1;
          }
LABEL_54:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_57;
          break;
        case 3u:
          if (v16 == 2)
            goto LABEL_36;
          goto LABEL_65;
        case 4u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchBrandDensityIsValid(a1))
            goto LABEL_41;
          goto LABEL_65;
        default:
LABEL_36:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_65;
          goto LABEL_54;
      }
    }
  }
  v5 = 0;
LABEL_57:
  if (a1[*v4])
    v34 = 1;
  else
    v34 = v5 == 0;
  v35 = !v34;
  PBReaderRecallMark();
  return v35;
}

void sub_188FFEFC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_188FFF134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchChainIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void *v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  GEOPDSearchTokenSet *v70;
  int *v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  char v80;
  BOOL v81;
  uint64_t v82;
  __int16 v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  int v92;
  __int16 v93;
  void *v94;
  GEOPDSearchTokenSet *v96;
  char v97;
  char v98;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 124);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 120));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(unsigned __int16 *)(a1 + 136);
  v12 = ((v11 >> 5) & 1)
      + ((v11 >> 11) & 1)
      + ((v11 >> 10) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFF4FFF7FFF3FFF9), (int8x8_t)0x1000100010001))+ ((v11 >> 6) & 1)+ ((v11 >> 8) & 1)+ ((v11 >> 4) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v15 = v12 > 7;
        v16 = v10 | v15;
        if ((((v10 | v15) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_174;
        v98 = (v17 == 0) | v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v97 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        v13 = v9;
        v14 = v10;
LABEL_8:
        ++v7;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_174;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_174:
      if ((v16 & 1) != 0)
      {
        v91 = 1;
        goto LABEL_176;
      }
      if (v17)
      {
        while (1)
        {
          v92 = *v17++;
          v93 = 0x2000;
          switch(v92)
          {
            case 0:
              goto LABEL_191;
            case 1:
              goto LABEL_190;
            case 2:
              v93 = 128;
              goto LABEL_190;
            case 3:
              v93 = 512;
              goto LABEL_190;
            case 4:
              v93 = 4096;
              goto LABEL_190;
            case 9:
              v93 = 64;
              goto LABEL_190;
            case 10:
              v93 = 256;
              goto LABEL_190;
            case 11:
              v93 = 16;
              goto LABEL_190;
            case 12:
              v93 = 2048;
              goto LABEL_190;
            case 13:
              v93 = 32;
              goto LABEL_190;
            case 14:
              v93 = 1024;
LABEL_190:
              *(_WORD *)(a1 + 136) |= v93;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_191;
    }
    v32 = v23 >> 3;
    v33 = v16;
    if ((v98 & 1) == 0)
    {
      v34 = v17;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_132;
        if ((*(_WORD *)(a1 + 136) & 0x2000) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 112;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v83 = 4 * *(_WORD *)(a1 + 136);
        goto LABEL_159;
      case 2:
        if (!v33)
          goto LABEL_132;
        if ((*(_WORD *)(a1 + 136) & 0x80) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 64;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v83 = *(_WORD *)(a1 + 136) << 8;
        goto LABEL_159;
      case 3:
        if (!v33)
          goto LABEL_132;
        if ((*(_WORD *)(a1 + 136) & 0x200) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 80;
LABEL_48:
          v41 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_196;
        v83 = *(_WORD *)(a1 + 136) << 6;
        goto LABEL_159;
      case 4:
        if (!v33)
          goto LABEL_132;
        if ((*(_WORD *)(a1 + 136) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_196;
          v83 = 8 * *(_WORD *)(a1 + 136);
LABEL_159:
          v7 += v83 >> 15;
          goto LABEL_160;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v96 = objc_alloc_init(GEOPDSearchTokenSet);
        if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v96, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v41 = *(void **)(a1 + 104);
          *(_QWORD *)(a1 + 104) = v96;
LABEL_54:

          --v7;
LABEL_160:
          v16 = v97;
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_161:
          if (!(v16 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_174;
          continue;
        }
LABEL_195:

LABEL_196:
        v91 = 0;
        v16 = v97;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_176:
        *(_WORD *)(a1 + 136) |= 0x2000u;
        *(_WORD *)(a1 + 136) |= 0x80u;
        *(_WORD *)(a1 + 136) |= 0x200u;
        *(_WORD *)(a1 + 136) |= 0x1000u;
        *(_WORD *)(a1 + 136) |= 0x40u;
        *(_WORD *)(a1 + 136) |= 0x100u;
        *(_WORD *)(a1 + 136) |= 0x10u;
        *(_WORD *)(a1 + 136) |= 0x800u;
        *(_WORD *)(a1 + 136) |= 0x20u;
        *(_WORD *)(a1 + 136) |= 0x400u;
        if ((v91 & 1) != 0)
        {
LABEL_191:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_192;
          return v3;
        }
        v3 = 0;
        if ((v16 & 1) == 0)
          return v3;
LABEL_192:
        v94 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_132;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 136) |= 4u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                v44 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v44 = 0;
LABEL_137:
        v81 = v44 != 0;
        v82 = 133;
        goto LABEL_150;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_132;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_WORD *)(a1 + 136) |= 2u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                v51 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v51 = 0;
LABEL_141:
        v81 = v51 != 0;
        v82 = 132;
        goto LABEL_150;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_132;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_WORD *)(a1 + 136) |= 1u;
        while (2)
        {
          v59 = *v18;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v28 = v57++ >= 9;
              if (v28)
              {
                v58 = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v58 = 0;
LABEL_145:
        *(_QWORD *)(a1 + 40) = v58;
        goto LABEL_161;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_132;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_WORD *)(a1 + 136) |= 8u;
        while (2)
        {
          v66 = *v18;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v28 = v64++ >= 9;
              if (v28)
              {
                v65 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v65 = 0;
LABEL_149:
        v81 = v65 != 0;
        v82 = 134;
LABEL_150:
        *(_BYTE *)(a1 + v82) = v81;
        goto LABEL_161;
      case 9:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x40) != 0)
          goto LABEL_130;
        PBReaderReadString();
        v70 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (!v70)
          goto LABEL_126;
        v96 = v70;
        -[GEOPDSearchChainIntent _addNoFlagsCategoryId:](a1, v70);
        goto LABEL_125;
      case 10:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x100) != 0)
          goto LABEL_130;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v96 = objc_alloc_init(GEOPDSearchKeyValueDoublePair);
        if (!GEOPDSearchKeyValueDoublePairReadAllFrom((uint64_t)v96, (void *)v3))
          goto LABEL_195;
        PBReaderRecallMark();
        -[GEOPDSearchChainIntent _addNoFlagsFeatureMap:](a1, v96);
        goto LABEL_125;
      case 11:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x10) != 0)
        {
LABEL_132:
          v80 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v16 = v97;
          if ((v80 & 1) == 0)
          {
LABEL_194:
            v91 = 0;
            goto LABEL_176;
          }
        }
        else
        {
          if (v30 != 2)
          {
            v84 = 0;
            v85 = 0;
            v86 = 0;
            while (1)
            {
              v87 = *v18;
              v88 = *(_QWORD *)(v3 + v87);
              v89 = v88 + 1;
              if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
                break;
              v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v88);
              *(_QWORD *)(v3 + v87) = v89;
              v86 |= (unint64_t)(v90 & 0x7F) << v84;
              if (v90 < 0)
              {
                v84 += 7;
                v28 = v85++ >= 9;
                if (!v28)
                  continue;
              }
              goto LABEL_173;
            }
            *(_BYTE *)(v3 + *v19) = 1;
LABEL_173:
            PBRepeatedUInt64Add();
            goto LABEL_160;
          }
          if (!PBReaderPlaceMark())
            goto LABEL_196;
          while (1)
          {
            v71 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v72 = 0;
            v73 = 0;
            v74 = 0;
            while (1)
            {
              v75 = *v18;
              v76 = *(_QWORD *)(v3 + v75);
              v77 = v76 + 1;
              if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
                break;
              v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v76);
              *(_QWORD *)(v3 + v75) = v77;
              v74 |= (unint64_t)(v78 & 0x7F) << v72;
              if (v78 < 0)
              {
                v72 += 7;
                v28 = v73++ >= 9;
                if (!v28)
                  continue;
              }
              goto LABEL_110;
            }
            *(_BYTE *)(v3 + *v71) = 1;
LABEL_110:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v16 = v97;
        }
        goto LABEL_161;
      case 12:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x800) != 0)
          goto LABEL_130;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v96 = objc_alloc_init(GEOPDSearchBrandRelationship);
        if (!GEOPDSearchBrandRelationshipReadAllFrom((uint64_t)v96, (void *)v3))
          goto LABEL_195;
        PBReaderRecallMark();
        -[GEOPDSearchChainIntent _addNoFlagsRelatedBrand:](a1, v96);
        goto LABEL_125;
      case 13:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x20) != 0)
          goto LABEL_130;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_196;
        v96 = objc_alloc_init(GEOPDSearchChainInfo);
        if (!GEOPDSearchChainInfoReadAllFrom((uint64_t)v96, (void *)v3, v9 & 1))
          goto LABEL_195;
        PBReaderRecallMark();
        -[GEOPDSearchChainIntent _addNoFlagsBrandRelationshipInfo:](a1, v96);
        goto LABEL_125;
      case 14:
        if (v33 && (*(_WORD *)(a1 + 136) & 0x400) == 0)
        {
          PBReaderReadString();
          v70 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
          if (v70)
          {
            v96 = v70;
            -[GEOPDSearchChainIntent _addNoFlagsPrefCategoryId:](a1, v70);
LABEL_125:
            v70 = v96;
          }
LABEL_126:

          goto LABEL_160;
        }
LABEL_130:
        v79 = PBReaderSkipValueWithTag();
        v16 = v97;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if ((v79 & 1) == 0)
          goto LABEL_194;
        goto LABEL_161;
      default:
        v40 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v16 = v97;
        if (!v40)
          goto LABEL_194;
        goto LABEL_161;
    }
  }
}

void sub_189000140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900033C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890004B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900062C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189000744(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189001198(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189001280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchChainIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  _BYTE v28[128];
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 104), 1);
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v2 = *(id *)(a1 + 72);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v24;
    while (1)
    {
      if (*(_QWORD *)v24 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
        if (!v4)
          break;
      }
    }
  }

  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v6 = *(id *)(a1 + 96);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v28, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v20;
    while (1)
    {
      if (*(_QWORD *)v20 != v9)
        objc_enumerationMutation(v6);
      if (!--v8)
      {
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v28, 16);
        if (!v8)
          break;
      }
    }
  }

  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v10 = *(id *)(a1 + 48);
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v27, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v16;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v16 != v13)
          objc_enumerationMutation(v10);
        -[GEOPDSearchChainInfo readAll:](*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v14++), 1);
      }
      while (v12 != v14);
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v27, 16);
    }
    while (v12);
  }

}

unint64_t GEOPDSearchChainIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 124))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchChainIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 124) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchChainIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchChainIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchChainIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchChainIntentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_189001624(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189001BD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchChainIntentIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  v2 = *(_WORD *)(a1 + 136);
  if ((v2 & 0x6280) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 136) & 0x1000) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 104)))
      return 1;
    v2 = *(_WORD *)(a1 + 136);
  }
  if ((v2 & 0xD70) != 0)
    return 1;
  if ((v2 & 0x20) == 0)
    return 0;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v5 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v5);
        v8 = *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * i);
        if (v8)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v8 + 72));
          v9 = *(_BYTE *)(v8 + 76) & 0xF;
          os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 72));
          if (v9)
          {
            v3 = 1;
            goto LABEL_21;
          }
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_21:

  return v3;
}

void sub_189002384(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchClientResolvedIntentReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_32;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189002C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchDirectionIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDDirectionIntent *v20;
  void *v21;
  _BOOL8 v22;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOPDDirectionIntent);
          if (!GEOPDDirectionIntentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v20;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_1890031C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchEntryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEOLatLng *v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_52;
          v26 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_52;
          }
          PBReaderRecallMark();
          v27 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v26;

        }
        else if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_46;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v30) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            LODWORD(v30) = 0;
LABEL_48:
          *(_DWORD *)(a1 + 24) = v30;
        }
        else if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_42;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              v21 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            v21 = 0;
LABEL_44:
          *(_QWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_52;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1890039E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoDecorationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  const float *v10;
  uint32x4_t v11;
  int8x16_t v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  void *v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  void *v124;
  char v125;
  BOOL v126;
  uint64_t v127;
  int v128;
  char v129;
  int v130;
  int v131;
  int v132;
  void *v133;
  void *v135;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (const float *)(a1 + 72);
  v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  v13 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_189CD4020), v12));
  while (1)
  {
    v14 = a3[v8];
    if (v14 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  v15 = v9 | (v13 > 2);
  if (v9 & 1 | (v13 > 2) | v7 & 1)
    v16 = 0;
  else
    v16 = a3;
  v17 = (int *)MEMORY[0x1E0D82BF0];
  v18 = (int *)MEMORY[0x1E0D82BC8];
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_211;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_211:
      if ((v15 & 1) != 0)
      {
        v129 = 1;
        goto LABEL_227;
      }
      if (!v16)
        goto LABEL_228;
      while (1)
      {
        while (1)
        {
          v131 = *v16++;
          v130 = v131;
          if (v131 <= 10)
            break;
          if (v130 == 11)
          {
            v132 = 0x8000;
LABEL_223:
            *(_DWORD *)(a1 + 72) |= v132;
          }
          else if (v130 == 16)
          {
            v132 = 4096;
            goto LABEL_223;
          }
        }
        switch(v130)
        {
          case 1:
            v132 = 0x2000;
            goto LABEL_223;
          case 9:
            v132 = 0x4000;
            goto LABEL_223;
          case 0:
            goto LABEL_228;
        }
      }
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_151;
        if ((*(_BYTE *)(a1 + 73) & 0x20) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 24;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_233;
        v128 = (int)(*(_DWORD *)(a1 + 72) << 18) >> 31;
        goto LABEL_208;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 72) |= 0x200u;
        while (2)
        {
          v42 = *v17;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v27 = v40++ >= 9;
              if (v27)
              {
                v41 = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v41 = 0;
LABEL_156:
        v126 = v41 != 0;
        v127 = 69;
        goto LABEL_201;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v46 = 0;
        v47 = 0;
        v48 = 0;
        *(_DWORD *)(a1 + 72) |= 1u;
        while (2)
        {
          v49 = *v17;
          v50 = *(_QWORD *)(v3 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              v27 = v47++ >= 9;
              if (v27)
              {
                v48 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v48 = 0;
LABEL_160:
        v126 = v48 != 0;
        v127 = 60;
        goto LABEL_201;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_DWORD *)(a1 + 72) |= 4u;
        while (2)
        {
          v56 = *v17;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v27 = v54++ >= 9;
              if (v27)
              {
                v55 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v55 = 0;
LABEL_164:
        v126 = v55 != 0;
        v127 = 62;
        goto LABEL_201;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v60 = 0;
        v61 = 0;
        v62 = 0;
        *(_DWORD *)(a1 + 72) |= 0x800u;
        while (2)
        {
          v63 = *v17;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v27 = v61++ >= 9;
              if (v27)
              {
                v62 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v62 = 0;
LABEL_168:
        v126 = v62 != 0;
        v127 = 71;
        goto LABEL_201;
      case 6:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_DWORD *)(a1 + 72) |= 0x400u;
        while (2)
        {
          v70 = *v17;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v27 = v68++ >= 9;
              if (v27)
              {
                v69 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v69 = 0;
LABEL_172:
        v126 = v69 != 0;
        v127 = 70;
        goto LABEL_201;
      case 7:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_DWORD *)(a1 + 72) |= 8u;
        while (2)
        {
          v77 = *v17;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v27 = v75++ >= 9;
              if (v27)
              {
                v76 = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v76 = 0;
LABEL_176:
        v126 = v76 != 0;
        v127 = 63;
        goto LABEL_201;
      case 8:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v81 = 0;
        v82 = 0;
        v83 = 0;
        *(_DWORD *)(a1 + 72) |= 2u;
        while (2)
        {
          v84 = *v17;
          v85 = *(_QWORD *)(v3 + v84);
          v86 = v85 + 1;
          if (v85 == -1 || v86 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v85);
            *(_QWORD *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              v27 = v82++ >= 9;
              if (v27)
              {
                v83 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v83 = 0;
LABEL_180:
        v126 = v83 != 0;
        v127 = 61;
        goto LABEL_201;
      case 9:
        if (!v31)
          goto LABEL_151;
        if ((*(_BYTE *)(a1 + 73) & 0x40) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 32;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_233;
        v128 = (int)(*(_DWORD *)(a1 + 72) << 17) >> 31;
        goto LABEL_208;
      case 10:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v88 = 0;
        v89 = 0;
        v90 = 0;
        *(_DWORD *)(a1 + 72) |= 0x80u;
        while (2)
        {
          v91 = *v17;
          v92 = *(_QWORD *)(v3 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              v27 = v89++ >= 9;
              if (v27)
              {
                v90 = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v90 = 0;
LABEL_184:
        v126 = v90 != 0;
        v127 = 67;
        goto LABEL_201;
      case 11:
        if (!v31)
          goto LABEL_151;
        if ((*(_BYTE *)(a1 + 73) & 0x80) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 40;
LABEL_113:
          v95 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;

          --v8;
          goto LABEL_209;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v128 = (int)(*(_DWORD *)(a1 + 72) << 16) >> 31;
LABEL_208:
          v8 += v128;
LABEL_209:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_210:
          if (!(v15 & 1 | (v8 != 0)))
            goto LABEL_211;
          continue;
        }
LABEL_233:
        v129 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_227:
        *(_DWORD *)(a1 + 72) |= 0x2000u;
        *(_DWORD *)(a1 + 72) |= 0x4000u;
        *(_DWORD *)(a1 + 72) |= 0x8000u;
        *(_DWORD *)(a1 + 72) |= 0x1000u;
        if ((v129 & 1) != 0)
        {
LABEL_228:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_229;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_229:
            v133 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 12:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v96 = 0;
        v97 = 0;
        v98 = 0;
        *(_DWORD *)(a1 + 72) |= 0x40u;
        while (2)
        {
          v99 = *v17;
          v100 = *(_QWORD *)(v3 + v99);
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v100);
            *(_QWORD *)(v3 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              v27 = v97++ >= 9;
              if (v27)
              {
                v98 = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v98 = 0;
LABEL_188:
        v126 = v98 != 0;
        v127 = 66;
        goto LABEL_201;
      case 13:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v103 = 0;
        v104 = 0;
        v105 = 0;
        *(_DWORD *)(a1 + 72) |= 0x10u;
        while (2)
        {
          v106 = *v17;
          v107 = *(_QWORD *)(v3 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v107);
            *(_QWORD *)(v3 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              v27 = v104++ >= 9;
              if (v27)
              {
                v105 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v105 = 0;
LABEL_192:
        v126 = v105 != 0;
        v127 = 64;
        goto LABEL_201;
      case 14:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v110 = 0;
        v111 = 0;
        v112 = 0;
        *(_DWORD *)(a1 + 72) |= 0x20u;
        while (2)
        {
          v113 = *v17;
          v114 = *(_QWORD *)(v3 + v113);
          v115 = v114 + 1;
          if (v114 == -1 || v115 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v114);
            *(_QWORD *)(v3 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              v27 = v111++ >= 9;
              if (v27)
              {
                v112 = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v112 = 0;
LABEL_196:
        v126 = v112 != 0;
        v127 = 65;
        goto LABEL_201;
      case 15:
        if ((v7 & 1) == 0)
          goto LABEL_151;
        v117 = 0;
        v118 = 0;
        v119 = 0;
        *(_DWORD *)(a1 + 72) |= 0x100u;
        while (2)
        {
          v120 = *v17;
          v121 = *(_QWORD *)(v3 + v120);
          v122 = v121 + 1;
          if (v121 == -1 || v122 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v121);
            *(_QWORD *)(v3 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              v27 = v118++ >= 9;
              if (v27)
              {
                v119 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v119 = 0;
LABEL_200:
        v126 = v119 != 0;
        v127 = 68;
LABEL_201:
        *(_BYTE *)(a1 + v127) = v126;
        goto LABEL_210;
      case 16:
        if (v31 && (*(_BYTE *)(a1 + 73) & 0x10) == 0)
        {
          PBReaderReadString();
          v124 = (void *)objc_claimAutoreleasedReturnValue();
          if (v124)
          {
            v135 = v124;
            -[GEOPDSearchGeoDecoration _addNoFlagsAlternative:](a1, v124);
            v124 = v135;
          }

          goto LABEL_209;
        }
LABEL_151:
        v125 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v125 & 1) == 0)
        {
LABEL_226:
          v129 = 0;
          goto LABEL_227;
        }
        goto LABEL_210;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_226;
        goto LABEL_210;
    }
  }
}

void sub_189004BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189005424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890054F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoDecorationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchGeoDecorationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchGeoDecorationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchGeoDecorationReadAllFrom_initialTag;
  Specified = GEOPDSearchGeoDecorationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189005F40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189006350(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchGeoDecorationIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 14);
  v2 = (a1[18]._os_unfair_lock_opaque & 0x1F000) != 0;
  os_unfair_lock_unlock(a1 + 14);
  return v2;
}

void sub_189006814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  char v56;
  __int16 v57;
  char v58;
  int v59;
  __int16 v60;
  void *v61;
  GEOPDSearchTokenSet *v63;
  char v64;
  char v65;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(unsigned __int16 *)(a1 + 112);
  v12 = ((v11 >> 2) & 1)
      + ((v11 >> 5) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFFDFFFCFFF7FFF6), (int8x8_t)0x1000100010001))+ ((v11 >> 8) & 1)+ ((v11 >> 7) & 1)+ ((v11 >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v15 = v12 > 6;
        v16 = v10 | v15;
        if ((((v10 | v15) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v65 = (v17 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v64 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        v13 = v9;
        v14 = v10;
LABEL_8:
        ++v7;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_126;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_126:
      if ((v16 & 1) != 0)
      {
        v58 = 1;
        goto LABEL_128;
      }
      if (v17)
      {
        while (1)
        {
          v59 = *v17++;
          v60 = 512;
          switch(v59)
          {
            case 0:
              goto LABEL_142;
            case 1:
              goto LABEL_141;
            case 2:
              v60 = 1024;
              goto LABEL_141;
            case 5:
              v60 = 16;
              goto LABEL_141;
            case 6:
              v60 = 8;
              goto LABEL_141;
            case 7:
              v60 = 256;
              goto LABEL_141;
            case 8:
              v60 = 128;
              goto LABEL_141;
            case 9:
              v60 = 64;
              goto LABEL_141;
            case 10:
              v60 = 32;
              goto LABEL_141;
            case 11:
              v60 = 4;
LABEL_141:
              *(_WORD *)(a1 + 112) |= v60;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_142;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if ((v65 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 0x200) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 80;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_147;
        v57 = *(_WORD *)(a1 + 112) << 6;
        goto LABEL_123;
      case 2:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v57 = 32 * *(_WORD *)(a1 + 112);
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v63 = objc_alloc_init(GEOPDSearchTokenSet);
        if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v63, (void *)v3, v9 & 1))
          goto LABEL_146;
        PBReaderRecallMark();
        v40 = 88;
        goto LABEL_93;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_95;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v44 = *v18;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v28 = v42++ >= 9;
              if (v28)
              {
                v43 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v43 = 0;
LABEL_100:
        *(_QWORD *)(a1 + 64) = v43;
        goto LABEL_125;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_95;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v28 = v49++ >= 9;
              if (v28)
              {
                LODWORD(v50) = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v50) = 0;
LABEL_104:
        *(_DWORD *)(a1 + 108) = v50;
        goto LABEL_125;
      case 5:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_147;
        v57 = *(_WORD *)(a1 + 112) << 11;
        goto LABEL_123;
      case 6:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 112) << 12;
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v63 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v63, (void *)v3))
          goto LABEL_146;
        PBReaderRecallMark();
        v40 = 24;
        goto LABEL_93;
      case 7:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 112) << 7;
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v63 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v63, (void *)v3))
          goto LABEL_146;
        PBReaderRecallMark();
        v40 = 72;
        goto LABEL_93;
      case 8:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 0x80) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_147;
        v57 = *(_WORD *)(a1 + 112) << 8;
        goto LABEL_123;
      case 9:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
LABEL_82:
          v55 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_147;
        v57 = *(_WORD *)(a1 + 112) << 9;
        goto LABEL_123;
      case 10:
        if (!v32)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 112) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 112) << 10;
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v63 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v63, (void *)v3))
          goto LABEL_146;
        PBReaderRecallMark();
        v40 = 40;
        goto LABEL_93;
      case 11:
        if (!v32)
        {
LABEL_95:
          v56 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          v16 = v64;
          if ((v56 & 1) == 0)
          {
LABEL_145:
            v58 = 0;
            goto LABEL_128;
          }
LABEL_125:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_126;
          continue;
        }
        if ((*(_WORD *)(a1 + 112) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_147;
          v57 = *(_WORD *)(a1 + 112) << 13;
LABEL_123:
          v7 += v57 >> 15;
LABEL_124:
          v16 = v64;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_147;
        v63 = objc_alloc_init(GEOStructuredAddress);
        if (GEOStructuredAddressReadAllFrom(v63, (void *)v3))
        {
          PBReaderRecallMark();
          v40 = 16;
LABEL_93:
          v55 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v63;
LABEL_94:

          --v7;
          goto LABEL_124;
        }
LABEL_146:

LABEL_147:
        v58 = 0;
        v16 = v64;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_128:
        *(_WORD *)(a1 + 112) |= 0x200u;
        *(_WORD *)(a1 + 112) |= 0x400u;
        *(_WORD *)(a1 + 112) |= 0x10u;
        *(_WORD *)(a1 + 112) |= 8u;
        *(_WORD *)(a1 + 112) |= 0x100u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x40u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        *(_WORD *)(a1 + 112) |= 4u;
        if ((v58 & 1) != 0)
        {
LABEL_142:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_143;
          return v3;
        }
        v3 = 0;
        if ((v16 & 1) == 0)
          return v3;
LABEL_143:
        v61 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v39 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v16 = v64;
        if (!v39)
          goto LABEL_145;
        goto LABEL_125;
    }
  }
}

void sub_189007980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189007A38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189007AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890081C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890082A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchGeoIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 88), 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
  return objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
}

unint64_t GEOPDSearchGeoIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchGeoIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchGeoIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchGeoIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchGeoIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchGeoIntentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1890084A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189008718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchGeoIntentIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0xA00) != 0)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 88)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 112);
  }
  if ((v2 & 0x1F8) != 0)
    return 1;
  return (v2 >> 2) & 1;
}

void sub_189008AA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoParsingResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOPDSearchAddressLabeledToken *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  char v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v56 = (v15 == 0) | v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_77;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_77:
      if ((v16 & 1) != 0)
      {
        v50 = 1;
        goto LABEL_88;
      }
      if (v15)
      {
        while (1)
        {
          v51 = *v15++;
          v52 = 8;
          switch(v51)
          {
            case 0:
              goto LABEL_89;
            case 1:
              goto LABEL_83;
            case 4:
              v52 = 4;
              goto LABEL_83;
            case 5:
              v52 = 16;
LABEL_83:
              *(_BYTE *)(a1 + 64) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_89;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v56 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(_BYTE *)(a1 + 64) & 8) != 0)
          goto LABEL_65;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v55 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchAddressLabeledToken);
        if (!GEOPDSearchAddressLabeledTokenReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_86;
        PBReaderRecallMark();
        -[GEOPDSearchGeoParsingResult _addNoFlagsLabeling:](a1, v16);
        goto LABEL_61;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_65;
        *(_BYTE *)(a1 + 64) |= 1u;
        v37 = *v17;
        v38 = *(_QWORD *)(v3 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v39 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v38);
          *(_QWORD *)(v3 + v37) = v38 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v39 = 0;
        }
        *(_QWORD *)(a1 + 24) = v39;
        goto LABEL_76;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_65;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 64) |= 2u;
        while (2)
        {
          v43 = *v17;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v27 = v41++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v42) = 0;
LABEL_70:
        *(_DWORD *)(a1 + 60) = v42;
        goto LABEL_76;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 64) & 4) != 0)
          goto LABEL_65;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v55 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchAddressLabeledToken);
        if (GEOPDSearchAddressLabeledTokenReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchGeoParsingResult _addNoFlagsDroppedTokens:](a1, v16);
LABEL_61:

          LODWORD(v16) = v55;
LABEL_73:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_77;
          continue;
        }
LABEL_86:

        v50 = 0;
        LOBYTE(v16) = v55;
LABEL_87:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        *(_BYTE *)(a1 + 64) |= 8u;
        *(_BYTE *)(a1 + 64) |= 4u;
        *(_BYTE *)(a1 + 64) |= 0x10u;
        if ((v50 & 1) != 0)
        {
LABEL_89:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_90;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_90:
            v53 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 5:
        if (v31)
        {
          if ((*(_BYTE *)(a1 + 64) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_85:
              v50 = 0;
              goto LABEL_87;
            }
            v7 += *(unsigned __int8 *)(a1 + 64) << 27 >> 31;
          }
          else
          {
            PBReaderReadString();
            v47 = objc_claimAutoreleasedReturnValue();
            v48 = *(void **)(a1 + 40);
            *(_QWORD *)(a1 + 40) = v47;

            --v7;
          }
          goto LABEL_73;
        }
LABEL_65:
        v49 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v49 & 1) == 0)
        {
LABEL_84:
          v50 = 0;
          goto LABEL_88;
        }
        goto LABEL_76;
      default:
        v36 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_84;
        goto LABEL_76;
    }
  }
}

void sub_189009678(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890097F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189009D58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189009E34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchGeoParsingResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchAddressLabeledToken readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 16);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDSearchAddressLabeledToken readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDSearchGeoParsingResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchGeoParsingResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchGeoParsingResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchGeoParsingResultReadAllFrom_initialTag;
  Specified = GEOPDSearchGeoParsingResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchGeoParsingResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18900A15C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900A458(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchGeoParsingResultIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  os_unfair_lock_s *v6;
  char IsDirty;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 64) & 0x3C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 64) & 4) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v3);
        v6 = *(os_unfair_lock_s **)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          IsDirty = _GEOPDSearchAddressLabeledTokenIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 18);
          if ((IsDirty & 1) != 0)
          {
            v2 = 1;
            goto LABEL_16;
          }
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_16:

  return v2;
}

void sub_18900A8FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  int *v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  GEOPDSearchCategoryIntent *v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  void *v55;
  void *v56;
  char v57;
  uint64_t v58;
  int v59;
  char v60;
  int v61;
  int v62;
  void *v63;
  BOOL v65;
  char v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 132);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 128));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_DWORD *)(a1 + 148);
  v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD4030), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD4040), v13)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD4050), v13)))+ ((v11 >> 9) & 1)+ ((v11 >> 10) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v10 | (v14 > 0xA);
        if (((v17 | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v17;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v66 = (v18 == 0) | v17;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v65 = v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_167;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_167:
      if (v19)
      {
        v60 = 1;
        goto LABEL_189;
      }
      if (v18)
      {
        while (1)
        {
          v61 = *v18++;
          v62 = 16;
          switch(v61)
          {
            case 0:
              goto LABEL_190;
            case 2:
              goto LABEL_184;
            case 3:
              v62 = 32;
              goto LABEL_184;
            case 4:
              v62 = 8;
              goto LABEL_184;
            case 5:
              v62 = 256;
              goto LABEL_184;
            case 6:
              v62 = 0x2000;
              goto LABEL_184;
            case 7:
              v62 = 2048;
              goto LABEL_184;
            case 8:
              v62 = 4;
              goto LABEL_184;
            case 9:
              v62 = 64;
              goto LABEL_184;
            case 10:
              v62 = 0x4000;
              goto LABEL_184;
            case 11:
              v62 = 128;
              goto LABEL_184;
            case 12:
              v62 = 0x8000;
              goto LABEL_184;
            case 13:
              v62 = 4096;
              goto LABEL_184;
            case 15:
              v62 = 512;
              goto LABEL_184;
            case 16:
              v62 = 1024;
LABEL_184:
              *(_DWORD *)(a1 + 148) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_190;
    }
    v33 = v25 >> 3;
    v34 = v19;
    if ((v66 & 1) == 0)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 148) |= 2u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_130;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_132;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_130:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_132:
        v58 = 144;
        goto LABEL_161;
      case 2:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 148) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 27) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchCategoryIntent);
        if (!GEOPDSearchCategoryIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 32;
        goto LABEL_120;
      case 3:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 148) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 26) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchChainIntent);
        if (!GEOPDSearchChainIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 40;
        goto LABEL_120;
      case 4:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 148) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 28) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchBusinessIntent);
        if (!GEOPDSearchBusinessIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 24;
        goto LABEL_120;
      case 5:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 149) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 23) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchGeoIntent);
        if (!GEOPDSearchGeoIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 64;
        goto LABEL_120;
      case 6:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 149) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 18) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchProximityIntent);
        if (!GEOPDSearchProximityIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 104;
        goto LABEL_120;
      case 7:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 149) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 20) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchLocationIntent);
        if (!GEOPDSearchLocationIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 88;
        goto LABEL_120;
      case 8:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 148) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 29) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchAttributeIntent);
        if (!GEOPDSearchAttributeIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 16;
        goto LABEL_120;
      case 9:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 148) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 25) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchClientResolvedIntent);
        if (!GEOPDSearchClientResolvedIntentReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 48;
        goto LABEL_120;
      case 10:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 149) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 17) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchSearchFilterIntent);
        if (!GEOPDSearchSearchFilterIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 112;
        goto LABEL_120;
      case 11:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 148) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 24) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchDirectionIntent);
        if (!GEOPDSearchDirectionIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 56;
        goto LABEL_120;
      case 12:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 149) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 16) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchTransitIntent);
        if (!GEOPDSearchTransitIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 120;
        goto LABEL_120;
      case 13:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 149) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_186;
          v59 = (int)(*(_DWORD *)(a1 + 148) << 19) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchPhoneNumberIntent);
        if (!GEOPDSearchPhoneNumberIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        v48 = 96;
        goto LABEL_120;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v49 = 0;
        v50 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 148) |= 1u;
        while (2)
        {
          v51 = *v20;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v41 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v30 = v50++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_160:
        v58 = 140;
LABEL_161:
        *(_DWORD *)(a1 + v58) = v41;
        goto LABEL_166;
      case 15:
        if (!v34)
          goto LABEL_127;
        if ((*(_BYTE *)(a1 + 149) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_186:
            v60 = 0;
            goto LABEL_188;
          }
          v59 = (int)(*(_DWORD *)(a1 + 148) << 22) >> 31;
LABEL_164:
          v7 += v59;
LABEL_165:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_166:
          if (!v19 && v7 == 0)
            goto LABEL_167;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_186;
        v47 = objc_alloc_init(GEOPDSearchKeywordIntent);
        if (GEOPDSearchKeywordIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v48 = 72;
LABEL_120:
          v55 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;

          --v7;
LABEL_121:
          v19 = v65;
          goto LABEL_165;
        }
LABEL_187:

        v60 = 0;
        v19 = v65;
LABEL_188:
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_189:
        *(_DWORD *)(a1 + 148) |= 0x10u;
        *(_DWORD *)(a1 + 148) |= 0x20u;
        *(_DWORD *)(a1 + 148) |= 8u;
        *(_DWORD *)(a1 + 148) |= 0x100u;
        *(_DWORD *)(a1 + 148) |= 0x2000u;
        *(_DWORD *)(a1 + 148) |= 0x800u;
        *(_DWORD *)(a1 + 148) |= 4u;
        *(_DWORD *)(a1 + 148) |= 0x40u;
        *(_DWORD *)(a1 + 148) |= 0x4000u;
        *(_DWORD *)(a1 + 148) |= 0x80u;
        *(_DWORD *)(a1 + 148) |= 0x8000u;
        *(_DWORD *)(a1 + 148) |= 0x1000u;
        *(_DWORD *)(a1 + 148) |= 0x200u;
        *(_DWORD *)(a1 + 148) |= 0x400u;
        if ((v60 & 1) != 0)
        {
LABEL_190:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if (v19)
            goto LABEL_191;
        }
        else
        {
          v3 = 0;
          if (v19)
          {
LABEL_191:
            v63 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 16:
        if (v34 && (*(_BYTE *)(a1 + 149) & 4) == 0)
        {
          PBReaderReadString();
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          if (v56)
            -[GEOPDSearchIntent _addNoFlagsLanguageCode:](a1, v56);

          goto LABEL_121;
        }
LABEL_127:
        v57 = PBReaderSkipValueWithTag();
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if ((v57 & 1) == 0)
        {
LABEL_185:
          v60 = 0;
          goto LABEL_189;
        }
        goto LABEL_166;
      default:
        v46 = PBReaderSkipValueWithTag();
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v46)
          goto LABEL_185;
        goto LABEL_166;
    }
  }
}

void sub_18900BAD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900BB90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900BC48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900BD00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900BDA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900C974(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18900CA6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901157C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchIntentCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDSearchCategoryIntent readAll:](a1[4], 1);
  -[GEOPDSearchChainIntent readAll:](a1[5], 1);
  -[GEOPDSearchBusinessIntent readAll:](a1[3], 1);
  -[GEOPDSearchGeoIntent readAll:](a1[8], 1);
  -[GEOPDSearchProximityIntent readAll:](a1[13], 1);
  -[GEOPDSearchLocationIntent readAll:](a1[11], 1);
  -[GEOPDSearchAttributeIntent readAll:](a1[2], 1);
  -[GEOPDSearchTransitIntent readAll:](a1[15], 1);
  -[GEOPDSearchPhoneNumberIntent readAll:](a1[12], 1);
  -[GEOPDSearchKeywordIntent readAll:](a1[9], 1);
}

unint64_t GEOPDSearchIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 132))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 132) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchIntentCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_1890117EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchIntentIsValid(char *a1)
{
  uint64_t v1;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  char v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  int v48;
  int v49;
  unint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  int v62;
  BOOL v63;
  char v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  int v71;
  int v72;
  BOOL v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  int v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  int v103;
  char v104;
  unsigned int v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  int v111;
  int v112;
  BOOL v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  int v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  int v133;
  char v134;
  unsigned int v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char v140;
  int v141;
  int v142;
  BOOL v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  int v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  int v153;
  char v154;
  unsigned int v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  int v161;
  int v162;
  char v164;
  unsigned int v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  uint64_t v171;
  int v172;
  int v173;
  BOOL v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  int v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  int v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  int v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  int v197;
  char v198;
  unsigned int v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  int v205;
  int v206;
  BOOL v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  int v212;
  char v213;
  unsigned int v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  int v220;
  int v221;
  unsigned int v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  int v227;
  char v228;
  unsigned int v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  char v234;
  int v235;
  int v236;
  BOOL v237;
  char v238;
  unsigned int v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  char v244;
  int v245;
  int v246;
  BOOL v247;
  char v248;
  unsigned int v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  char v254;
  int v255;
  int v256;
  BOOL v257;
  unsigned int v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  int v262;
  unsigned int v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  int v267;
  char v268;
  unsigned int v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  char v274;
  int v275;
  int v276;
  unsigned int v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  int v282;
  char v283;
  unsigned int v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  char v289;
  int v290;
  int v291;
  unint64_t v293;
  unsigned int v294;
  uint64_t v295;
  uint64_t v296;
  unint64_t v297;
  int v298;
  int v299;
  int v300;
  int v301;
  _BOOL8 v302;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_730:
    v302 = a1[*v5] == 0;
    PBReaderRecallMark();
    return v302;
  }
  v6 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v5])
      goto LABEL_730;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v3;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v4])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      v14 = v8++ >= 9;
      if (v14)
      {
        v9 = 0;
        v15 = a1[*v5];
        goto LABEL_14;
      }
    }
    a1[*v5] = 1;
LABEL_12:
    v15 = a1[*v5];
    if (a1[*v5])
      v9 = 0;
LABEL_14:
    v16 = v9 & 7;
    if (v15 || v16 == 4)
      goto LABEL_730;
    switch((v9 >> 3))
    {
      case 1u:
        if ((v9 & 7) != 0)
          goto LABEL_732;
        v18 = 0;
        while (1)
        {
          v19 = *v3;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v4])
            goto LABEL_679;
          v22 = *(char *)(*(_QWORD *)&a1[*v6] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0)
          {
            v23 = v18++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_721;
        }
      case 2u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_30:
        if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
          goto LABEL_728;
        v24 = 0;
        v25 = 0;
        v26 = 0;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)&a1[v27];
          v29 = v28 + 1;
          if (v28 == -1 || v29 > *(_QWORD *)&a1[*v4])
          {
            a1[*v5] = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v28);
            *(_QWORD *)&a1[v27] = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if (v30 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                v26 = 0;
                v31 = a1[*v5];
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        v31 = a1[*v5];
        if (a1[*v5])
          v26 = 0;
LABEL_42:
        v32 = v26 & 7;
        if (v31)
          v33 = 1;
        else
          v33 = v32 == 4;
        if (v33)
        {
LABEL_728:
          v301 = a1[*v5];
          PBReaderRecallMark();
          if (v301)
            goto LABEL_732;
LABEL_720:
          PBReaderRecallMark();
LABEL_721:
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4])
            goto LABEL_730;
          continue;
        }
        switch((v26 >> 3))
        {
          case 1u:
            if (v32 != 2)
              break;
            goto LABEL_77;
          case 2u:
            if (v32 != 2)
              break;
            goto LABEL_77;
          case 3u:
            if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
              break;
            goto LABEL_124;
          case 4u:
            if (v32 != 2)
              break;
            goto LABEL_77;
          case 5u:
            if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueDoublePairIsValid(a1))
              break;
            goto LABEL_124;
          case 6u:
            if (v32 != 2)
              break;
            goto LABEL_77;
          case 7u:
            if (v32 != 2)
              break;
            goto LABEL_77;
          case 8u:
            if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValuePairIsValid(a1))
              break;
            goto LABEL_124;
          case 9u:
            if (v32 == 2)
            {
              if (!PBReaderPlaceMark())
                break;
LABEL_126:
              while (*(_QWORD *)&a1[*v3] < *(_QWORD *)&a1[*v4])
              {
                v57 = a1[*v5];
                if (a1[*v5])
                  break;
                while (1)
                {
                  v58 = *v3;
                  v59 = *(_QWORD *)&a1[v58];
                  v60 = v59 + 1;
                  if (v59 == -1 || v60 > *(_QWORD *)&a1[*v4])
                    break;
                  v61 = *(char *)(*(_QWORD *)&a1[*v6] + v59);
                  *(_QWORD *)&a1[v58] = v60;
                  if (v61 < 0)
                  {
                    v14 = v57++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_126;
                }
                a1[*v5] = 1;
              }
LABEL_124:
              PBReaderRecallMark();
              goto LABEL_30;
            }
            if ((v26 & 7) == 0)
            {
              do
              {
                v34 = *v3;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v4])
                {
                  a1[*v5] = 1;
                  goto LABEL_30;
                }
                v37 = *(char *)(*(_QWORD *)&a1[*v6] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if ((v37 & 0x80000000) == 0)
                  break;
                v38 = v32++;
              }
              while (v38 <= 8);
              goto LABEL_30;
            }
            break;
          case 0xAu:
            if (v32 != 2)
              break;
            goto LABEL_77;
          case 0xBu:
            if (v32 != 2 || !PBReaderPlaceMark())
              break;
            v39 = v1;
            objc_msgSend(a1, "position");
            objc_msgSend(a1, "length");
            if (*(_QWORD *)&a1[*v3] < *(_QWORD *)&a1[*v4])
            {
              v40 = 0;
              while (1)
              {
                if (a1[*v5])
                  goto LABEL_136;
                v41 = 0;
                v42 = 0;
                v43 = 0;
                while (1)
                {
                  v44 = *v3;
                  v45 = *(_QWORD *)&a1[v44];
                  v46 = v45 + 1;
                  if (v45 == -1 || v46 > *(_QWORD *)&a1[*v4])
                    break;
                  v47 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v45);
                  *(_QWORD *)&a1[v44] = v46;
                  v43 |= (unint64_t)(v47 & 0x7F) << v41;
                  if ((v47 & 0x80) == 0)
                    goto LABEL_92;
                  v41 += 7;
                  v14 = v42++ >= 9;
                  if (v14)
                  {
                    v43 = 0;
                    v48 = a1[*v5];
                    goto LABEL_94;
                  }
                }
                a1[*v5] = 1;
LABEL_92:
                v48 = a1[*v5];
                if (a1[*v5])
                  v43 = 0;
LABEL_94:
                v49 = v43 & 7;
                if (v48 || v49 == 4)
                  goto LABEL_136;
                v51 = v43 >> 3;
                if ((v43 >> 3) == 3)
                {
                  if (v49 != 2 || !PBReaderPlaceMark() || !GEOPDSearchRelatedCategoryIsValid(a1))
                  {
LABEL_734:
                    PBReaderRecallMark();
                    goto LABEL_731;
                  }
                  PBReaderRecallMark();
                }
                else if ((_DWORD)v51 == 2)
                {
                  if ((v43 & 7) != 0)
                    goto LABEL_734;
                  v52 = 0;
                  while (1)
                  {
                    v53 = *v3;
                    v54 = *(_QWORD *)&a1[v53];
                    v55 = v54 + 1;
                    if (v54 == -1 || v55 > *(_QWORD *)&a1[*v4])
                      break;
                    v56 = *(char *)(*(_QWORD *)&a1[*v6] + v54);
                    *(_QWORD *)&a1[v53] = v55;
                    if (v56 < 0)
                    {
                      v23 = v52++ > 8;
                      if (!v23)
                        continue;
                    }
                    goto LABEL_119;
                  }
                  a1[*v5] = 1;
                }
                else
                {
                  if ((_DWORD)v51 == 1)
                  {
                    if (v40 || v49 != 2)
                      goto LABEL_734;
                    v40 = 1;
                  }
                  if ((PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_734;
                }
LABEL_119:
                if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4])
                  goto LABEL_136;
              }
            }
            v40 = 0;
LABEL_136:
            v62 = a1[*v5];
            PBReaderRecallMark();
            if (v62)
              v63 = 1;
            else
              v63 = v40 == 0;
            v1 = v39;
            if (!v63)
              goto LABEL_124;
            break;
          case 0xCu:
            if (v32 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeywordMappingIsValid(a1))
              break;
            goto LABEL_124;
          default:
LABEL_77:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              break;
            goto LABEL_30;
        }
LABEL_731:
        PBReaderRecallMark();
LABEL_732:
        PBReaderRecallMark();
        return 0;
      case 3u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_145:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
            goto LABEL_719;
          v64 = 0;
          v65 = 0;
          v66 = 0;
          while (2)
          {
            v67 = *v3;
            v68 = *(_QWORD *)&a1[v67];
            v69 = v68 + 1;
            if (v68 == -1 || v69 > *(_QWORD *)&a1[*v4])
            {
              a1[*v5] = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v68);
              *(_QWORD *)&a1[v67] = v69;
              v66 |= (unint64_t)(v70 & 0x7F) << v64;
              if (v70 < 0)
              {
                v64 += 7;
                v14 = v65++ >= 9;
                if (v14)
                {
                  v66 = 0;
                  v71 = a1[*v5];
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          v71 = a1[*v5];
          if (a1[*v5])
            v66 = 0;
LABEL_157:
          v72 = v66 & 7;
          if (v71)
            v73 = 1;
          else
            v73 = v72 == 4;
          if (!v73)
          {
            switch((v66 >> 3))
            {
              case 1u:
                if (v72 == 2)
                  goto LABEL_227;
                goto LABEL_731;
              case 2u:
                if (v72 == 2)
                  goto LABEL_227;
                goto LABEL_731;
              case 3u:
                if (v72 == 2)
                  goto LABEL_227;
                goto LABEL_731;
              case 4u:
                if (v72 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
                  goto LABEL_731;
                goto LABEL_225;
              case 5u:
                if ((v66 & 7) != 0)
                  goto LABEL_731;
                v74 = 0;
                while (1)
                {
                  v75 = *v3;
                  v76 = *(_QWORD *)&a1[v75];
                  v77 = v76 + 1;
                  if (v76 == -1 || v77 > *(_QWORD *)&a1[*v4])
                    goto LABEL_217;
                  v78 = *(char *)(*(_QWORD *)&a1[*v6] + v76);
                  *(_QWORD *)&a1[v75] = v77;
                  if (v78 < 0)
                  {
                    v23 = v74++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_145;
                }
              case 6u:
                if ((v66 & 7) != 0)
                  goto LABEL_731;
                v79 = 0;
                while (1)
                {
                  v80 = *v3;
                  v81 = *(_QWORD *)&a1[v80];
                  v82 = v81 + 1;
                  if (v81 == -1 || v82 > *(_QWORD *)&a1[*v4])
                    goto LABEL_217;
                  v83 = *(char *)(*(_QWORD *)&a1[*v6] + v81);
                  *(_QWORD *)&a1[v80] = v82;
                  if (v83 < 0)
                  {
                    v23 = v79++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_145;
                }
              case 7u:
                if ((v66 & 7) != 0)
                  goto LABEL_731;
                v84 = 0;
                while (1)
                {
                  v85 = *v3;
                  v86 = *(_QWORD *)&a1[v85];
                  v87 = v86 + 1;
                  if (v86 == -1 || v87 > *(_QWORD *)&a1[*v4])
                    goto LABEL_217;
                  v88 = *(char *)(*(_QWORD *)&a1[*v6] + v86);
                  *(_QWORD *)&a1[v85] = v87;
                  if (v88 < 0)
                  {
                    v23 = v84++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_145;
                }
              case 8u:
                if ((v66 & 7) != 0)
                  goto LABEL_731;
                v89 = 0;
                while (1)
                {
                  v90 = *v3;
                  v91 = *(_QWORD *)&a1[v90];
                  v92 = v91 + 1;
                  if (v91 == -1 || v92 > *(_QWORD *)&a1[*v4])
                    goto LABEL_217;
                  v93 = *(char *)(*(_QWORD *)&a1[*v6] + v91);
                  *(_QWORD *)&a1[v90] = v92;
                  if (v93 < 0)
                  {
                    v23 = v89++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_145;
                }
              case 9u:
                if (v72 == 2)
                  goto LABEL_227;
                goto LABEL_731;
              case 0xAu:
                if (v72 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueDoublePairIsValid(a1))
                  goto LABEL_731;
                goto LABEL_225;
              case 0xBu:
                if (v72 != 2)
                {
                  if ((v66 & 7) != 0)
                    goto LABEL_731;
                  do
                  {
                    v94 = *v3;
                    v95 = *(_QWORD *)&a1[v94];
                    v96 = v95 + 1;
                    if (v95 == -1 || v96 > *(_QWORD *)&a1[*v4])
                    {
LABEL_217:
                      a1[*v5] = 1;
                      goto LABEL_145;
                    }
                    v97 = *(char *)(*(_QWORD *)&a1[*v6] + v95);
                    *(_QWORD *)&a1[v94] = v96;
                    if ((v97 & 0x80000000) == 0)
                      break;
                    v98 = v72++;
                  }
                  while (v98 <= 8);
                  continue;
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_731;
                break;
              case 0xCu:
                if (v72 != 2 || !PBReaderPlaceMark() || !GEOPDSearchBrandRelationshipIsValid(a1))
                  goto LABEL_731;
                goto LABEL_225;
              case 0xDu:
                if (v72 == 2 && PBReaderPlaceMark() && GEOPDSearchChainInfoIsValid(a1))
                  goto LABEL_225;
                goto LABEL_731;
              case 0xEu:
                if (v72 == 2)
                  goto LABEL_227;
                goto LABEL_731;
              default:
LABEL_227:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_731;
                continue;
            }
            while (1)
            {
LABEL_230:
              if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || (v99 = a1[*v5], a1[*v5]))
              {
LABEL_225:
                PBReaderRecallMark();
                goto LABEL_145;
              }
              while (1)
              {
                v100 = *v3;
                v101 = *(_QWORD *)&a1[v100];
                v102 = v101 + 1;
                if (v101 == -1 || v102 > *(_QWORD *)&a1[*v4])
                  break;
                v103 = *(char *)(*(_QWORD *)&a1[*v6] + v101);
                *(_QWORD *)&a1[v100] = v102;
                if (v103 < 0)
                {
                  v14 = v99++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_230;
              }
              a1[*v5] = 1;
            }
          }
          goto LABEL_719;
        }
      case 4u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_242:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
            goto LABEL_719;
          v104 = 0;
          v105 = 0;
          v106 = 0;
          while (2)
          {
            v107 = *v3;
            v108 = *(_QWORD *)&a1[v107];
            v109 = v108 + 1;
            if (v108 == -1 || v109 > *(_QWORD *)&a1[*v4])
            {
              a1[*v5] = 1;
            }
            else
            {
              v110 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v108);
              *(_QWORD *)&a1[v107] = v109;
              v106 |= (unint64_t)(v110 & 0x7F) << v104;
              if (v110 < 0)
              {
                v104 += 7;
                v14 = v105++ >= 9;
                if (v14)
                {
                  v106 = 0;
                  v111 = a1[*v5];
                  goto LABEL_254;
                }
                continue;
              }
            }
            break;
          }
          v111 = a1[*v5];
          if (a1[*v5])
            v106 = 0;
LABEL_254:
          v112 = v106 & 7;
          if (v111)
            v113 = 1;
          else
            v113 = v112 == 4;
          if (!v113)
          {
            switch((v106 >> 3))
            {
              case 1u:
                if (v112 == 2)
                  goto LABEL_260;
                goto LABEL_731;
              case 2u:
                if (v112 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
                  goto LABEL_731;
                goto LABEL_297;
              case 3u:
                if ((v106 & 7) != 0)
                  goto LABEL_731;
                v114 = 0;
                while (1)
                {
                  v115 = *v3;
                  v116 = *(_QWORD *)&a1[v115];
                  v117 = v116 + 1;
                  if (v116 == -1 || v117 > *(_QWORD *)&a1[*v4])
                    goto LABEL_293;
                  v118 = *(char *)(*(_QWORD *)&a1[*v6] + v116);
                  *(_QWORD *)&a1[v115] = v117;
                  if (v118 < 0)
                  {
                    v23 = v114++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_242;
                }
              case 4u:
                if (v112 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                  goto LABEL_731;
                goto LABEL_297;
              case 5u:
                if ((v106 & 7) != 0)
                  goto LABEL_731;
                v119 = 0;
                while (1)
                {
                  v120 = *v3;
                  v121 = *(_QWORD *)&a1[v120];
                  v122 = v121 + 1;
                  if (v121 == -1 || v122 > *(_QWORD *)&a1[*v4])
                    goto LABEL_293;
                  v123 = *(char *)(*(_QWORD *)&a1[*v6] + v121);
                  *(_QWORD *)&a1[v120] = v122;
                  if (v123 < 0)
                  {
                    v23 = v119++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_242;
                }
              case 6u:
                if (v112 != 2)
                {
                  if ((v106 & 7) != 0)
                    goto LABEL_731;
                  do
                  {
                    v124 = *v3;
                    v125 = *(_QWORD *)&a1[v124];
                    v126 = v125 + 1;
                    if (v125 == -1 || v126 > *(_QWORD *)&a1[*v4])
                    {
LABEL_293:
                      a1[*v5] = 1;
                      goto LABEL_242;
                    }
                    v127 = *(char *)(*(_QWORD *)&a1[*v6] + v125);
                    *(_QWORD *)&a1[v124] = v126;
                    if ((v127 & 0x80000000) == 0)
                      break;
                    v128 = v112++;
                  }
                  while (v128 <= 8);
                  continue;
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_731;
                break;
              case 7u:
                if (v112 == 2 && PBReaderPlaceMark() && GEOPDSearchKeywordMappingIsValid(a1))
                  goto LABEL_297;
                goto LABEL_731;
              default:
LABEL_260:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_731;
                continue;
            }
            while (1)
            {
LABEL_299:
              if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || (v129 = a1[*v5], a1[*v5]))
              {
LABEL_297:
                PBReaderRecallMark();
                goto LABEL_242;
              }
              while (1)
              {
                v130 = *v3;
                v131 = *(_QWORD *)&a1[v130];
                v132 = v131 + 1;
                if (v131 == -1 || v132 > *(_QWORD *)&a1[*v4])
                  break;
                v133 = *(char *)(*(_QWORD *)&a1[*v6] + v131);
                *(_QWORD *)&a1[v130] = v132;
                if (v133 < 0)
                {
                  v14 = v129++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_299;
              }
              a1[*v5] = 1;
            }
          }
          goto LABEL_719;
        }
      case 5u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_311:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
            goto LABEL_719;
          v134 = 0;
          v135 = 0;
          v136 = 0;
          while (2)
          {
            v137 = *v3;
            v138 = *(_QWORD *)&a1[v137];
            v139 = v138 + 1;
            if (v138 == -1 || v139 > *(_QWORD *)&a1[*v4])
            {
              a1[*v5] = 1;
            }
            else
            {
              v140 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v138);
              *(_QWORD *)&a1[v137] = v139;
              v136 |= (unint64_t)(v140 & 0x7F) << v134;
              if (v140 < 0)
              {
                v134 += 7;
                v14 = v135++ >= 9;
                if (v14)
                {
                  v136 = 0;
                  v141 = a1[*v5];
                  goto LABEL_323;
                }
                continue;
              }
            }
            break;
          }
          v141 = a1[*v5];
          if (a1[*v5])
            v136 = 0;
LABEL_323:
          v142 = v136 & 7;
          if (v141)
            v143 = 1;
          else
            v143 = v142 == 4;
          if (!v143)
          {
            switch((v136 >> 3))
            {
              case 1u:
                if (v142 == 2)
                  goto LABEL_364;
                goto LABEL_731;
              case 2u:
                if (v142 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
                  goto LABEL_731;
                goto LABEL_369;
              case 3u:
                if ((v136 & 7) != 0)
                  goto LABEL_731;
                v144 = 0;
                while (1)
                {
                  v145 = *v3;
                  v146 = *(_QWORD *)&a1[v145];
                  v147 = v146 + 1;
                  if (v146 == -1 || v147 > *(_QWORD *)&a1[*v4])
                    goto LABEL_354;
                  v148 = *(char *)(*(_QWORD *)&a1[*v6] + v146);
                  *(_QWORD *)&a1[v145] = v147;
                  if (v148 < 0)
                  {
                    v23 = v144++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_311;
                }
              case 4u:
                if ((v136 & 7) != 0)
                  goto LABEL_731;
                v149 = 0;
                do
                {
                  v150 = *v3;
                  v151 = *(_QWORD *)&a1[v150];
                  v152 = v151 + 1;
                  if (v151 == -1 || v152 > *(_QWORD *)&a1[*v4])
                  {
LABEL_354:
                    a1[*v5] = 1;
                    goto LABEL_311;
                  }
                  v153 = *(char *)(*(_QWORD *)&a1[*v6] + v151);
                  *(_QWORD *)&a1[v150] = v152;
                  if ((v153 & 0x80000000) == 0)
                    break;
                  v23 = v149++ > 8;
                }
                while (!v23);
                break;
              case 5u:
                if (v142 == 2)
                  goto LABEL_364;
                goto LABEL_731;
              case 6u:
                if (v142 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                  goto LABEL_731;
                goto LABEL_369;
              case 7u:
              case 0xAu:
                if (v142 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
                  goto LABEL_731;
                goto LABEL_369;
              case 8u:
                if (v142 == 2)
                  goto LABEL_364;
                goto LABEL_731;
              case 9u:
                if (v142 == 2)
                  goto LABEL_364;
                goto LABEL_731;
              case 0xBu:
                if (v142 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1))
                  goto LABEL_731;
LABEL_369:
                PBReaderRecallMark();
                continue;
              default:
LABEL_364:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_731;
                continue;
            }
            continue;
          }
          goto LABEL_719;
        }
      case 6u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
              goto LABEL_719;
            v154 = 0;
            v155 = 0;
            v156 = 0;
            while (1)
            {
              v157 = *v3;
              v158 = *(_QWORD *)&a1[v157];
              v159 = v158 + 1;
              if (v158 == -1 || v159 > *(_QWORD *)&a1[*v4])
                break;
              v160 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v158);
              *(_QWORD *)&a1[v157] = v159;
              v156 |= (unint64_t)(v160 & 0x7F) << v154;
              if ((v160 & 0x80) == 0)
                goto LABEL_383;
              v154 += 7;
              v14 = v155++ >= 9;
              if (v14)
              {
                v156 = 0;
                v161 = a1[*v5];
                goto LABEL_385;
              }
            }
            a1[*v5] = 1;
LABEL_383:
            v161 = a1[*v5];
            if (a1[*v5])
              v156 = 0;
LABEL_385:
            v162 = v156 & 7;
            if (v161 || v162 == 4)
              goto LABEL_719;
            if ((v156 >> 3) != 2)
            {
              if ((v156 >> 3) == 1 && v162 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_731;
              continue;
            }
            break;
          }
          if (v162 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 7u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_402:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
            goto LABEL_719;
          v164 = 0;
          v165 = 0;
          v166 = 0;
          while (2)
          {
            v167 = *v3;
            v168 = *(_QWORD *)&a1[v167];
            v169 = v168 + 1;
            if (v168 == -1 || v169 > *(_QWORD *)&a1[*v4])
            {
              a1[*v5] = 1;
            }
            else
            {
              v170 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v168);
              *(_QWORD *)&a1[v167] = v169;
              v166 |= (unint64_t)(v170 & 0x7F) << v164;
              if (v170 < 0)
              {
                v164 += 7;
                v14 = v165++ >= 9;
                if (v14)
                {
                  v166 = 0;
                  v171 = *v5;
                  v172 = a1[v171];
                  goto LABEL_414;
                }
                continue;
              }
            }
            break;
          }
          v171 = *v5;
          v172 = a1[v171];
          if (a1[v171])
            v166 = 0;
LABEL_414:
          v173 = v166 & 7;
          if (v172)
            v174 = 1;
          else
            v174 = v173 == 4;
          if (!v174)
          {
            switch((v166 >> 3))
            {
              case 1u:
              case 9u:
                if (v173 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
                  goto LABEL_731;
                goto LABEL_426;
              case 2u:
                if (v173 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
                  goto LABEL_731;
LABEL_426:
                PBReaderRecallMark();
                continue;
              case 3u:
                if ((v166 & 7) != 0)
                  goto LABEL_731;
                v175 = 0;
                while (1)
                {
                  v176 = *v3;
                  v177 = *(_QWORD *)&a1[v176];
                  v178 = v177 + 1;
                  if (v177 == -1 || v178 > *(_QWORD *)&a1[*v4])
                    goto LABEL_465;
                  v179 = *(char *)(*(_QWORD *)&a1[*v6] + v177);
                  *(_QWORD *)&a1[v176] = v178;
                  if (v179 < 0)
                  {
                    v23 = v175++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_402;
                }
              case 5u:
                if (v173 != 1)
                  goto LABEL_731;
                v180 = *v3;
                v181 = *(_QWORD *)&a1[v180];
                if (v181 > 0xFFFFFFFFFFFFFFF7)
                  goto LABEL_466;
                v182 = v181 + 8;
                if (v182 > *(_QWORD *)&a1[*v4])
                  goto LABEL_466;
                *(_QWORD *)&a1[v180] = v182;
                continue;
              case 6u:
                if ((v166 & 7) != 0)
                  goto LABEL_731;
                v183 = 0;
                while (1)
                {
                  v184 = *v3;
                  v185 = *(_QWORD *)&a1[v184];
                  v186 = v185 + 1;
                  if (v185 == -1 || v186 > *(_QWORD *)&a1[*v4])
                    goto LABEL_465;
                  v187 = *(char *)(*(_QWORD *)&a1[*v6] + v185);
                  *(_QWORD *)&a1[v184] = v186;
                  if (v187 < 0)
                  {
                    v23 = v183++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_402;
                }
              case 7u:
                if ((v166 & 7) != 0)
                  goto LABEL_731;
                v188 = 0;
                while (1)
                {
                  v189 = *v3;
                  v190 = *(_QWORD *)&a1[v189];
                  v191 = v190 + 1;
                  if (v190 == -1 || v191 > *(_QWORD *)&a1[*v4])
                    goto LABEL_465;
                  v192 = *(char *)(*(_QWORD *)&a1[*v6] + v190);
                  *(_QWORD *)&a1[v189] = v191;
                  if (v192 < 0)
                  {
                    v23 = v188++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_402;
                }
              case 8u:
                if ((v166 & 7) != 0)
                  goto LABEL_731;
                v193 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_731;
                continue;
            }
            while (1)
            {
              v194 = *v3;
              v195 = *(_QWORD *)&a1[v194];
              v196 = v195 + 1;
              if (v195 == -1 || v196 > *(_QWORD *)&a1[*v4])
                break;
              v197 = *(char *)(*(_QWORD *)&a1[*v6] + v195);
              *(_QWORD *)&a1[v194] = v196;
              if (v197 < 0)
              {
                v23 = v193++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_402;
            }
LABEL_465:
            v171 = *v5;
LABEL_466:
            a1[v171] = 1;
            continue;
          }
          goto LABEL_719;
        }
      case 8u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_470:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
            goto LABEL_719;
          v198 = 0;
          v199 = 0;
          v200 = 0;
          while (2)
          {
            v201 = *v3;
            v202 = *(_QWORD *)&a1[v201];
            v203 = v202 + 1;
            if (v202 == -1 || v203 > *(_QWORD *)&a1[*v4])
            {
              a1[*v5] = 1;
            }
            else
            {
              v204 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v202);
              *(_QWORD *)&a1[v201] = v203;
              v200 |= (unint64_t)(v204 & 0x7F) << v198;
              if (v204 < 0)
              {
                v198 += 7;
                v14 = v199++ >= 9;
                if (v14)
                {
                  v200 = 0;
                  v205 = a1[*v5];
                  goto LABEL_482;
                }
                continue;
              }
            }
            break;
          }
          v205 = a1[*v5];
          if (a1[*v5])
            v200 = 0;
LABEL_482:
          v206 = v200 & 7;
          if (v205)
            v207 = 1;
          else
            v207 = v206 == 4;
          if (!v207)
          {
            switch((v200 >> 3))
            {
              case 1u:
                if (v206 == 2)
                  goto LABEL_496;
                goto LABEL_731;
              case 2u:
                if (v206 == 2)
                  goto LABEL_496;
                goto LABEL_731;
              case 3u:
                if (v206 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
                  goto LABEL_731;
                goto LABEL_509;
              case 4u:
                if (v206 == 2)
                  goto LABEL_496;
                goto LABEL_731;
              case 5u:
                if ((v200 & 7) != 0)
                  goto LABEL_731;
                v208 = 0;
                break;
              case 6u:
                if (v206 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStructuredAttributeIsValid(a1))
                  goto LABEL_731;
LABEL_509:
                PBReaderRecallMark();
                continue;
              default:
LABEL_496:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_731;
                continue;
            }
            do
            {
              v209 = *v3;
              v210 = *(_QWORD *)&a1[v209];
              v211 = v210 + 1;
              if (v210 == -1 || v211 > *(_QWORD *)&a1[*v4])
              {
                a1[*v5] = 1;
                goto LABEL_470;
              }
              v212 = *(char *)(*(_QWORD *)&a1[*v6] + v210);
              *(_QWORD *)&a1[v209] = v211;
              if ((v212 & 0x80000000) == 0)
                break;
              v23 = v208++ > 8;
            }
            while (!v23);
            continue;
          }
          goto LABEL_719;
        }
      case 9u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_514:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] < *(_QWORD *)&a1[*v4] && !a1[*v5])
          {
            v213 = 0;
            v214 = 0;
            v215 = 0;
            while (1)
            {
              v216 = *v3;
              v217 = *(_QWORD *)&a1[v216];
              v218 = v217 + 1;
              if (v217 == -1 || v218 > *(_QWORD *)&a1[*v4])
                break;
              v219 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v217);
              *(_QWORD *)&a1[v216] = v218;
              v215 |= (unint64_t)(v219 & 0x7F) << v213;
              if ((v219 & 0x80) == 0)
                goto LABEL_524;
              v213 += 7;
              v14 = v214++ >= 9;
              if (v14)
              {
                v215 = 0;
                v220 = a1[*v5];
                goto LABEL_526;
              }
            }
            a1[*v5] = 1;
LABEL_524:
            v220 = a1[*v5];
            if (a1[*v5])
              v215 = 0;
LABEL_526:
            v221 = v215 & 7;
            if (!v220 && v221 != 4)
            {
              if ((v215 >> 3) != 2)
              {
                if ((v215 >> 3) != 1)
                {
                  if (!PBReaderSkipValueWithTag())
                    goto LABEL_731;
                  continue;
                }
                if (v221 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_731;
                continue;
              }
              if ((v215 & 7) == 0)
              {
                v223 = 0;
                do
                {
                  v224 = *v3;
                  v225 = *(_QWORD *)&a1[v224];
                  v226 = v225 + 1;
                  if (v225 == -1 || v226 > *(_QWORD *)&a1[*v4])
                  {
                    a1[*v5] = 1;
                    goto LABEL_514;
                  }
                  v227 = *(char *)(*(_QWORD *)&a1[*v6] + v225);
                  *(_QWORD *)&a1[v224] = v226;
                  if ((v227 & 0x80000000) == 0)
                    break;
                  v23 = v223++ > 8;
                }
                while (!v23);
                continue;
              }
              goto LABEL_731;
            }
          }
          break;
        }
        v300 = a1[*v5];
        PBReaderRecallMark();
        if (v300)
          goto LABEL_732;
        goto LABEL_720;
      case 0xAu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
              goto LABEL_719;
            v228 = 0;
            v229 = 0;
            v230 = 0;
            while (2)
            {
              v231 = *v3;
              v232 = *(_QWORD *)&a1[v231];
              v233 = v232 + 1;
              if (v232 == -1 || v233 > *(_QWORD *)&a1[*v4])
              {
                a1[*v5] = 1;
              }
              else
              {
                v234 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v232);
                *(_QWORD *)&a1[v231] = v233;
                v230 |= (unint64_t)(v234 & 0x7F) << v228;
                if (v234 < 0)
                {
                  v228 += 7;
                  v14 = v229++ >= 9;
                  if (v14)
                  {
                    v230 = 0;
                    v235 = a1[*v5];
                    goto LABEL_561;
                  }
                  continue;
                }
              }
              break;
            }
            v235 = a1[*v5];
            if (a1[*v5])
              v230 = 0;
LABEL_561:
            v236 = v230 & 7;
            if (v235)
              v237 = 1;
            else
              v237 = v236 == 4;
            if (v237)
              goto LABEL_719;
            if ((v230 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_731;
              continue;
            }
            break;
          }
          if (v236 == 2 && PBReaderPlaceMark() && GEOPDSSearchFilterIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 0xBu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
              goto LABEL_719;
            v238 = 0;
            v239 = 0;
            v240 = 0;
            while (2)
            {
              v241 = *v3;
              v242 = *(_QWORD *)&a1[v241];
              v243 = v242 + 1;
              if (v242 == -1 || v243 > *(_QWORD *)&a1[*v4])
              {
                a1[*v5] = 1;
              }
              else
              {
                v244 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v242);
                *(_QWORD *)&a1[v241] = v243;
                v240 |= (unint64_t)(v244 & 0x7F) << v238;
                if (v244 < 0)
                {
                  v238 += 7;
                  v14 = v239++ >= 9;
                  if (v14)
                  {
                    v240 = 0;
                    v245 = a1[*v5];
                    goto LABEL_587;
                  }
                  continue;
                }
              }
              break;
            }
            v245 = a1[*v5];
            if (a1[*v5])
              v240 = 0;
LABEL_587:
            v246 = v240 & 7;
            if (v245)
              v247 = 1;
            else
              v247 = v246 == 4;
            if (v247)
              goto LABEL_719;
            if ((v240 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_731;
              continue;
            }
            break;
          }
          if (v246 == 2 && PBReaderPlaceMark() && GEOPDDirectionIntentIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 0xCu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_601:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
            goto LABEL_719;
          v248 = 0;
          v249 = 0;
          v250 = 0;
          while (2)
          {
            v251 = *v3;
            v252 = *(_QWORD *)&a1[v251];
            v253 = v252 + 1;
            if (v252 == -1 || v253 > *(_QWORD *)&a1[*v4])
            {
              a1[*v5] = 1;
            }
            else
            {
              v254 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v252);
              *(_QWORD *)&a1[v251] = v253;
              v250 |= (unint64_t)(v254 & 0x7F) << v248;
              if (v254 < 0)
              {
                v248 += 7;
                v14 = v249++ >= 9;
                if (v14)
                {
                  v250 = 0;
                  v255 = a1[*v5];
                  goto LABEL_613;
                }
                continue;
              }
            }
            break;
          }
          v255 = a1[*v5];
          if (a1[*v5])
            v250 = 0;
LABEL_613:
          v256 = v250 & 7;
          if (v255)
            v257 = 1;
          else
            v257 = v256 == 4;
          if (!v257)
          {
            switch((v250 >> 3))
            {
              case 1u:
                if (v256 == 2)
                  goto LABEL_619;
                goto LABEL_731;
              case 2u:
                if (v256 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
                  goto LABEL_731;
                PBReaderRecallMark();
                continue;
              case 3u:
                if ((v250 & 7) != 0)
                  goto LABEL_731;
                v258 = 0;
                while (1)
                {
                  v259 = *v3;
                  v260 = *(_QWORD *)&a1[v259];
                  v261 = v260 + 1;
                  if (v260 == -1 || v261 > *(_QWORD *)&a1[*v4])
                    goto LABEL_641;
                  v262 = *(char *)(*(_QWORD *)&a1[*v6] + v260);
                  *(_QWORD *)&a1[v259] = v261;
                  if (v262 < 0)
                  {
                    v23 = v258++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_601;
                }
              case 4u:
                if ((v250 & 7) != 0)
                  goto LABEL_731;
                v263 = 0;
                do
                {
                  v264 = *v3;
                  v265 = *(_QWORD *)&a1[v264];
                  v266 = v265 + 1;
                  if (v265 == -1 || v266 > *(_QWORD *)&a1[*v4])
                  {
LABEL_641:
                    a1[*v5] = 1;
                    goto LABEL_601;
                  }
                  v267 = *(char *)(*(_QWORD *)&a1[*v6] + v265);
                  *(_QWORD *)&a1[v264] = v266;
                  if ((v267 & 0x80000000) == 0)
                    break;
                  v23 = v263++ > 8;
                }
                while (!v23);
                break;
              default:
LABEL_619:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_731;
                continue;
            }
            continue;
          }
          goto LABEL_719;
        }
      case 0xDu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4] || a1[*v5])
              goto LABEL_719;
            v268 = 0;
            v269 = 0;
            v270 = 0;
            while (1)
            {
              v271 = *v3;
              v272 = *(_QWORD *)&a1[v271];
              v273 = v272 + 1;
              if (v272 == -1 || v273 > *(_QWORD *)&a1[*v4])
                break;
              v274 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v272);
              *(_QWORD *)&a1[v271] = v273;
              v270 |= (unint64_t)(v274 & 0x7F) << v268;
              if ((v274 & 0x80) == 0)
                goto LABEL_655;
              v268 += 7;
              v14 = v269++ >= 9;
              if (v14)
              {
                v270 = 0;
                v275 = a1[*v5];
                goto LABEL_657;
              }
            }
            a1[*v5] = 1;
LABEL_655:
            v275 = a1[*v5];
            if (a1[*v5])
              v270 = 0;
LABEL_657:
            v276 = v270 & 7;
            if (v275 || v276 == 4)
              goto LABEL_719;
            if ((v270 >> 3) != 2)
            {
              if ((v270 >> 3) == 1 && v276 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_731;
              continue;
            }
            break;
          }
          if (v276 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 0xEu:
        if ((v9 & 7) != 0)
          goto LABEL_732;
        v278 = 0;
        while (1)
        {
          v279 = *v3;
          v280 = *(_QWORD *)&a1[v279];
          v281 = v280 + 1;
          if (v280 == -1 || v281 > *(_QWORD *)&a1[*v4])
            break;
          v282 = *(char *)(*(_QWORD *)&a1[*v6] + v280);
          *(_QWORD *)&a1[v279] = v281;
          if (v282 < 0)
          {
            v23 = v278++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_721;
        }
LABEL_679:
        a1[*v5] = 1;
        goto LABEL_721;
      case 0xFu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_732;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_683:
        while (2)
        {
          if (*(_QWORD *)&a1[*v3] < *(_QWORD *)&a1[*v4] && !a1[*v5])
          {
            v283 = 0;
            v284 = 0;
            v285 = 0;
            while (1)
            {
              v286 = *v3;
              v287 = *(_QWORD *)&a1[v286];
              v288 = v287 + 1;
              if (v287 == -1 || v288 > *(_QWORD *)&a1[*v4])
                break;
              v289 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v287);
              *(_QWORD *)&a1[v286] = v288;
              v285 |= (unint64_t)(v289 & 0x7F) << v283;
              if ((v289 & 0x80) == 0)
                goto LABEL_693;
              v283 += 7;
              v14 = v284++ >= 9;
              if (v14)
              {
                v285 = 0;
                v290 = a1[*v5];
                goto LABEL_695;
              }
            }
            a1[*v5] = 1;
LABEL_693:
            v290 = a1[*v5];
            if (a1[*v5])
              v285 = 0;
LABEL_695:
            v291 = v285 & 7;
            if (!v290 && v291 != 4)
            {
              v293 = v285 >> 3;
              if ((v285 >> 3) == 3)
              {
                if ((v285 & 7) == 0)
                {
                  v294 = 0;
                  do
                  {
                    v295 = *v3;
                    v296 = *(_QWORD *)&a1[v295];
                    v297 = v296 + 1;
                    if (v296 == -1 || v297 > *(_QWORD *)&a1[*v4])
                    {
                      a1[*v5] = 1;
                      goto LABEL_683;
                    }
                    v298 = *(char *)(*(_QWORD *)&a1[*v6] + v296);
                    *(_QWORD *)&a1[v295] = v297;
                    if ((v298 & 0x80000000) == 0)
                      break;
                    v23 = v294++ > 8;
                  }
                  while (!v23);
                  continue;
                }
              }
              else
              {
                if ((_DWORD)v293 != 2)
                {
                  if ((_DWORD)v293 == 1 && v291 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                    goto LABEL_731;
                  continue;
                }
                if (v291 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1))
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_731;
            }
          }
          break;
        }
LABEL_719:
        v299 = a1[*v5];
        PBReaderRecallMark();
        if (v299)
          goto LABEL_732;
        goto LABEL_720;
      case 0x10u:
        if (v16 == 2)
          goto LABEL_724;
        goto LABEL_732;
      default:
LABEL_724:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_732;
        goto LABEL_721;
    }
  }
}

void sub_189013EA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchIntentIsDirty(uint64_t a1)
{
  unsigned int v2;
  os_unfair_lock_s *v3;
  char IsDirty;
  os_unfair_lock_s *v5;
  char v6;
  os_unfair_lock_s *v7;
  char v8;
  os_unfair_lock_s *v9;
  char v10;
  os_unfair_lock_s *v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  os_unfair_lock_s *v15;
  char v16;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  v2 = *(_DWORD *)(a1 + 148);
  if ((v2 & 0x10000) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 32);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDSearchCategoryIntentIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 34);
      if ((IsDirty & 1) != 0)
        return 1;
      v2 = *(_DWORD *)(a1 + 148);
    }
  }
  if ((v2 & 0x20) != 0)
  {
    v5 = *(os_unfair_lock_s **)(a1 + 40);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      v6 = _GEOPDSearchChainIntentIsDirty((uint64_t)v5);
      os_unfair_lock_unlock(v5 + 32);
      if ((v6 & 1) != 0)
        return 1;
    }
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 8) != 0)
  {
    v7 = *(os_unfair_lock_s **)(a1 + 24);
    if (v7)
    {
      os_unfair_lock_lock_with_options();
      v8 = _GEOPDSearchBusinessIntentIsDirty((uint64_t)v7);
      os_unfair_lock_unlock(v7 + 22);
      if ((v8 & 1) != 0)
        return 1;
    }
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x100) != 0)
  {
    v9 = *(os_unfair_lock_s **)(a1 + 64);
    if (v9)
    {
      os_unfair_lock_lock_with_options();
      v10 = _GEOPDSearchGeoIntentIsDirty((uint64_t)v9);
      os_unfair_lock_unlock(v9 + 26);
      if ((v10 & 1) != 0)
        return 1;
    }
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x2000) != 0)
  {
    v11 = *(os_unfair_lock_s **)(a1 + 104);
    if (v11)
    {
      os_unfair_lock_lock_with_options();
      v12 = _GEOPDSearchProximityIntentIsDirty((uint64_t)v11);
      os_unfair_lock_unlock(v11 + 10);
      if (v12)
        return 1;
    }
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x800) != 0)
  {
    v13 = *(_QWORD *)(a1 + 88);
    if (v13)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v13 + 64));
      v14 = *(_WORD *)(v13 + 76) & 0x1E0;
      os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 64));
      if (v14)
        return 1;
    }
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 4) != 0)
  {
    v15 = *(os_unfair_lock_s **)(a1 + 16);
    if (v15)
    {
      os_unfair_lock_lock_with_options();
      v16 = _GEOPDSearchAttributeIntentIsDirty((uint64_t)v15);
      os_unfair_lock_unlock(v15 + 16);
      if ((v16 & 1) != 0)
        return 1;
    }
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x40C0) != 0)
    return 1;
  if ((v2 & 0x8000) != 0)
  {
    if ((GEOPDSearchTransitIntentIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x1000) != 0)
  {
    if ((GEOPDSearchPhoneNumberIntentIsDirty(*(os_unfair_lock_s **)(a1 + 96)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x200) != 0)
  {
    if ((GEOPDSearchKeywordIntentIsDirty(*(os_unfair_lock_s **)(a1 + 72)) & 1) != 0)
      return 1;
    v2 = *(_DWORD *)(a1 + 148);
  }
  return (v2 >> 10) & 1;
}

os_unfair_lock_s *GEOPDSearchIntentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 34);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18901472C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchKeywordIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  GEOPDSearchTokenSet *v46;
  void *v47;
  int v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  int v55;
  void *v56;
  _BOOL4 v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v59 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_76;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        v52 = 1;
        goto LABEL_91;
      }
      if (!v15)
        goto LABEL_92;
      while (1)
      {
        v55 = *v15++;
        v54 = v55;
        if (v55 == 1)
          break;
        if (v54 == 2)
        {
          v53 = 4;
LABEL_82:
          *(_BYTE *)(a1 + 48) |= v53;
        }
        else if (!v54)
        {
          goto LABEL_92;
        }
      }
      v53 = 2;
      goto LABEL_82;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v59)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v8 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_63;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            v41 = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          v41 = 0;
LABEL_65:
        *(_BYTE *)(a1 + 44) = v41 != 0;
        goto LABEL_72;
      }
      goto LABEL_60;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 != 1)
    {
      v48 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v48)
        goto LABEL_87;
      goto LABEL_72;
    }
    if (v32)
    {
      if ((*(_BYTE *)(a1 + 48) & 2) == 0)
      {
        PBReaderReadString();
        v37 = objc_claimAutoreleasedReturnValue();
        v38 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v37;

        --v9;
LABEL_71:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_72;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_88;
      v50 = *(_BYTE *)(a1 + 48) << 6;
LABEL_70:
      v9 += v50 >> 7;
      goto LABEL_71;
    }
LABEL_60:
    v49 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v49 & 1) == 0)
    {
LABEL_87:
      v52 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v9)
      v51 = 1;
    else
      v51 = v16;
    if ((v51 & 1) == 0)
      goto LABEL_76;
  }
  if (!v32)
    goto LABEL_60;
  if ((*(_BYTE *)(a1 + 48) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_88:
      v52 = 0;
      goto LABEL_90;
    }
    v50 = 32 * *(_BYTE *)(a1 + 48);
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_88;
  v58 = v16;
  v46 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v46, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v47 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v46;

    --v9;
    v16 = v58;
    goto LABEL_71;
  }

  v52 = 0;
  v16 = v58;
LABEL_90:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
  *(_BYTE *)(a1 + 48) |= 2u;
  *(_BYTE *)(a1 + 48) |= 4u;
  if ((v52 & 1) != 0)
  {
LABEL_92:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_93;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_93:
      v56 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_189015590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189015674(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchKeywordIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchKeywordIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchKeywordIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchKeywordIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchKeywordIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189015818(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890159A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchKeywordIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 48) & 0xA) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 48) & 4) != 0)
    return GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDSearchKeywordIntentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchKeywordIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189015BF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeywordMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  GEOLocalizedString *v27;
  _BOOL8 v28;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_40;
          v27 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          -[GEOPDSearchKeywordMapping addLocalizedName:](a1, v27);

        }
        else if ((v12 >> 3) == 1)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v23 = *v6;
            v24 = *(_QWORD *)&v5[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
            *(_QWORD *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_34;
            v20 += 7;
            v17 = v21++ >= 9;
            if (v17)
            {
              v22 = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8])
            v22 = 0;
LABEL_36:
          *(_QWORD *)(a1 + 16) = v22;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v28 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    v28 = 0;
  }
  objc_sync_exit(v5);

  return v28;
}

void sub_189016598(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189016AC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOLatLng *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  void *v69;
  char v70;
  BOOL v71;
  uint64_t v72;
  __int16 v73;
  char v74;
  int v75;
  __int16 v76;
  void *v77;
  int v79;
  char v80;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int16 *)(a1 + 76) >> 7) & 1)
      + ((*(unsigned __int16 *)(a1 + 76) >> 5) & 1)
      + ((*(unsigned __int16 *)(a1 + 76) >> 6) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v80 = (v15 == 0) | v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_121;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_121:
      if ((v16 & 1) != 0)
      {
        v74 = 1;
        goto LABEL_132;
      }
      if (v15)
      {
        while (1)
        {
          v75 = *v15++;
          v76 = 128;
          switch(v75)
          {
            case 0:
              goto LABEL_133;
            case 1:
              goto LABEL_127;
            case 2:
              v76 = 32;
              goto LABEL_127;
            case 9:
              v76 = 64;
LABEL_127:
              *(_WORD *)(a1 + 76) |= v76;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_133;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v80 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 76) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_129;
          v79 = (int)v16;
          v16 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v16, (void *)v3))
          {
            PBReaderRecallMark();
            v36 = 40;
            goto LABEL_90;
          }
          goto LABEL_130;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_129;
        v73 = *(_WORD *)(a1 + 76) << 8;
        goto LABEL_116;
      case 2:
        if (!v31)
          goto LABEL_91;
        if ((*(_WORD *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_129;
          v73 = *(_WORD *)(a1 + 76) << 10;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v79 = (int)v16;
        v16 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3))
          goto LABEL_130;
        PBReaderRecallMark();
        v36 = 16;
        goto LABEL_90;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_91;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          v40 = *v17;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v41);
            *(_QWORD *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              v27 = v38++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_96:
        *(_DWORD *)(a1 + 68) = v39;
        goto LABEL_120;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_91;
        *(_WORD *)(a1 + 76) |= 1u;
        v45 = *v17;
        v46 = *(_QWORD *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v46);
          *(_QWORD *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v47 = 0;
        }
        *(_QWORD *)(a1 + 32) = v47;
        goto LABEL_120;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_91;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          v51 = *v17;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v27 = v49++ >= 9;
              if (v27)
              {
                v50 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v50 = 0;
LABEL_100:
        v71 = v50 != 0;
        v72 = 72;
        goto LABEL_109;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_91;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          v58 = *v17;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v27 = v56++ >= 9;
              if (v27)
              {
                v57 = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v57 = 0;
LABEL_104:
        *(_QWORD *)(a1 + 48) = v57;
        goto LABEL_120;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_91;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + 76) |= 0x10u;
        while (2)
        {
          v65 = *v17;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v27 = v63++ >= 9;
              if (v27)
              {
                v64 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v64 = 0;
LABEL_108:
        v71 = v64 != 0;
        v72 = 73;
LABEL_109:
        *(_BYTE *)(a1 + v72) = v71;
        goto LABEL_120;
      case 9:
        if (!v31)
        {
LABEL_91:
          v70 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v70 & 1) == 0)
          {
LABEL_128:
            v74 = 0;
            goto LABEL_132;
          }
LABEL_120:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_121;
          continue;
        }
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_129:
            v74 = 0;
            goto LABEL_131;
          }
          v73 = *(_WORD *)(a1 + 76) << 9;
LABEL_116:
          v7 += v73 >> 15;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_129;
        v79 = (int)v16;
        v16 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          v36 = 24;
LABEL_90:
          v69 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v16;

          --v7;
          LODWORD(v16) = v79;
LABEL_117:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_120;
        }
LABEL_130:

        v74 = 0;
        LOBYTE(v16) = v79;
LABEL_131:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_132:
        *(_WORD *)(a1 + 76) |= 0x80u;
        *(_WORD *)(a1 + 76) |= 0x20u;
        *(_WORD *)(a1 + 76) |= 0x40u;
        if ((v74 & 1) != 0)
        {
LABEL_133:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_134;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_134:
            v77 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v44 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_128;
        goto LABEL_120;
    }
  }
}

void sub_18901744C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189017504(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189017A00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchLocationIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchLocationIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchLocationIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchLocationIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 16), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189017BCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189017E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901806C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchPairReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = *v6;
            v17 = v3[v16];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = *v6;
        v17 = v3[v16];
        if (v3[v16])
          v10 = 0;
LABEL_15:
        if (v17 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v26 = *v4;
          v27 = *(_QWORD *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFFBLL && v27 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v28 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v27);
            *(_QWORD *)&v3[v26] = v27 + 4;
          }
          else
          {
            v3[v16] = 1;
            v28 = 0;
          }
          *(_DWORD *)(a1 + 12) = v28;
        }
        else if ((v10 >> 3) == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              break;
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              goto LABEL_34;
            v19 += 7;
            v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 8) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1890188C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchPairIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  char v19;
  char v20;
  int v21;
  uint64_t v22;
  char v23;
  char v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  _BOOL4 v35;
  _BOOL8 v36;
  _QWORD v38[2];

  v38[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v38[0] = 0;
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_47;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
      {
LABEL_47:
        v35 = HIDWORD(v38[0]) != 0;
        goto LABEL_49;
      }
      if ((v8 >> 3) == 1)
        break;
      if ((v8 >> 3) != 2)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_53;
        goto LABEL_46;
      }
      v18 = 0;
      v19 = 1;
      while (1)
      {
        v20 = v19;
        v21 = *((_DWORD *)v38 + v18);
        if (!v21)
          break;
        if (v21 != 2)
        {
          v19 = 0;
          v18 = 1;
          if ((v20 & 1) != 0)
            continue;
        }
        goto LABEL_53;
      }
      *((_DWORD *)v38 + v18) = 2;
      if (v16 != 5)
        goto LABEL_53;
      v26 = *v2;
      v27 = *(_QWORD *)&a1[v26];
      if (v27 > 0xFFFFFFFFFFFFFFFBLL)
        goto LABEL_45;
      v28 = v27 + 4;
      if (v28 > *(_QWORD *)&a1[*v3])
        goto LABEL_45;
      *(_QWORD *)&a1[v26] = v28;
LABEL_46:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_47;
    }
    v22 = 0;
    v23 = 1;
    while (1)
    {
      v24 = v23;
      v25 = *((_DWORD *)v38 + v22);
      if (!v25)
        break;
      if (v25 != 1)
      {
        v23 = 0;
        v22 = 1;
        if ((v24 & 1) != 0)
          continue;
      }
      goto LABEL_53;
    }
    *((_DWORD *)v38 + v22) = 1;
    if (v16)
    {
LABEL_53:
      PBReaderRecallMark();
      return 0;
    }
    v29 = 0;
    while (1)
    {
      v30 = *v2;
      v31 = *(_QWORD *)&a1[v30];
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
        break;
      v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
      *(_QWORD *)&a1[v30] = v32;
      if (v33 < 0 && v29++ <= 8)
        continue;
      goto LABEL_46;
    }
    v14 = *v4;
LABEL_45:
    a1[v14] = 1;
    goto LABEL_46;
  }
  v35 = 0;
LABEL_49:
  if (a1[*v4])
    v36 = 0;
  else
    v36 = v35;
  PBReaderRecallMark();
  return v36;
}

unint64_t GEOPDSearchPhoneNumberIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  GEOPDSearchTokenSet *v39;
  void *v40;
  char v41;
  char v42;
  int v43;
  int v44;
  void *v45;
  BOOL v47;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v47 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_60;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        v42 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v44 = *v16++;
            v43 = v44;
            if (v44 != 1 && v43 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_71;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v47)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_69;
          v9 -= *(_BYTE *)(a1 + 44) & 1;
        }
        else
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v37;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_69;
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag())
      goto LABEL_69;
LABEL_56:
    if (v9)
      v41 = 1;
    else
      v41 = v15;
    if ((v41 & 1) == 0)
      goto LABEL_60;
  }
  if (!v32)
    goto LABEL_50;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      v42 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v39 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v40 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v39;

    --v9;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }

  v42 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v42 & 1) != 0)
  {
LABEL_71:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_72;
  }
  v3 = 0;
  if (v15)
  {
LABEL_72:
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890194EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890195D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchPhoneNumberIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchPhoneNumberIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchPhoneNumberIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchPhoneNumberIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchPhoneNumberIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189019774(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890198D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchPhoneNumberIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 5) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
    return GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDSearchPhoneNumberIntentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchPhoneNumberIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189019AF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchPreferredCategoryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 20) |= 1u;
          v20 = *v4;
          v21 = *(_QWORD *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v22 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v22 = 0;
          }
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_189019FDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchProximityIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  GEOPDSearchTokenSet *v39;
  void *v40;
  char v41;
  char v42;
  int v43;
  int v44;
  void *v45;
  BOOL v47;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v47 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_60;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        v42 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v44 = *v16++;
            v43 = v44;
            if (v44 != 1 && v43 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_71;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if (!v47)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_69;
          v9 -= *(_BYTE *)(a1 + 44) & 1;
        }
        else
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v37;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_69;
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag())
      goto LABEL_69;
LABEL_56:
    if (v9)
      v41 = 1;
    else
      v41 = v15;
    if ((v41 & 1) == 0)
      goto LABEL_60;
  }
  if (!v32)
    goto LABEL_50;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      v42 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v39 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v40 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v39;

    --v9;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }

  v42 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_70:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v42 & 1) != 0)
  {
LABEL_71:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_72;
  }
  v3 = 0;
  if (v15)
  {
LABEL_72:
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18901A9E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901AACC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchProximityIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchProximityIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchProximityIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchProximityIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchProximityIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18901AC70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901ADD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchProximityIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 5) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) != 0)
    return GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

void sub_18901AF98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryClassificationMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOPDSearchStringStringPair *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  char v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v52 = (v15 == 0) | v10 | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_72;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_72:
      if ((v16 & 1) != 0)
      {
        v46 = 1;
        goto LABEL_83;
      }
      if (v15)
      {
        while (1)
        {
          v47 = *v15++;
          v48 = 4;
          switch(v47)
          {
            case 0:
              goto LABEL_84;
            case 1:
              goto LABEL_78;
            case 2:
              v48 = 16;
              goto LABEL_78;
            case 5:
              v48 = 8;
LABEL_78:
              *(_BYTE *)(a1 + 60) |= v48;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_84;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v52 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v36;

          --v7;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_80;
        v7 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
        goto LABEL_65;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_61;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_80;
        v51 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchKeyValueFloatPair);
        if (!GEOPDSearchKeyValueFloatPairReadAllFrom((uint64_t)v16, (void *)v3))
          goto LABEL_81;
        PBReaderRecallMark();
        -[GEOPDSearchQueryClassificationMetadata _addNoFlagsPrediction:](a1, v16);
        goto LABEL_60;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_61;
        *(_BYTE *)(a1 + 60) |= 2u;
        v39 = *v17;
        v40 = *(_QWORD *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v41 = *(_DWORD *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v41 = 0;
        }
        v45 = 56;
        goto LABEL_70;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_61;
        *(_BYTE *)(a1 + 60) |= 1u;
        v42 = *v17;
        v43 = *(_QWORD *)(v3 + v42);
        if (v43 <= 0xFFFFFFFFFFFFFFFBLL && v43 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v41 = *(_DWORD *)(*(_QWORD *)(v3 + *v19) + v43);
          *(_QWORD *)(v3 + v42) = v43 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v41 = 0;
        }
        v45 = 52;
LABEL_70:
        *(_DWORD *)(a1 + v45) = v41;
        goto LABEL_71;
      case 5:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 8) != 0)
        {
LABEL_61:
          v44 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v44 & 1) == 0)
          {
LABEL_79:
            v46 = 0;
            goto LABEL_83;
          }
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) != 0)
        {
          v51 = (int)v16;
          v16 = objc_alloc_init(GEOPDSearchStringStringPair);
          if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
LABEL_81:

            v46 = 0;
            LOBYTE(v16) = v51;
            goto LABEL_82;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryClassificationMetadata _addNoFlagsModelVersion:](a1, v16);
LABEL_60:

          LODWORD(v16) = v51;
LABEL_65:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_72;
          continue;
        }
LABEL_80:
        v46 = 0;
LABEL_82:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 0x10u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v46 & 1) != 0)
        {
LABEL_84:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_85;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_85:
            v49 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_79;
        goto LABEL_71;
    }
  }
}

void sub_18901B894(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901BA0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901BF2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901C008(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryClassificationMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    while (1)
    {
      if (*(_QWORD *)v16 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
        if (!v4)
          break;
      }
    }
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v6 = *(id *)(a1 + 24);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        -[GEOPDSearchStringStringPair readAll:](*(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
    }
    while (v8);
  }

}

unint64_t GEOPDSearchQueryClassificationMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryClassificationMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryClassificationMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryClassificationMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryClassificationMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryClassificationMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18901C318(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901C614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryClassificationMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 60) & 0x3C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDSearchStringStringPairIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDSearchQueryClassificationMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchQueryClassificationMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18901CADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryCompletionMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  const __int16 *v10;
  uint16x4_t v11;
  int16x4_t v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  void *v67;
  int *v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  int v93;
  __int16 v94;
  void *v95;
  void *v97;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (const __int16 *)(a1 + 112);
  v11 = (uint16x4_t)vld1_dup_s16(v10);
  v12 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFFCFFF9FFFAFFFBLL), (int8x8_t)0x1000100010001);
  v12.i16[0] = vaddv_s16(v12);
  v13 = v12.i32[0];
  while (1)
  {
    v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  v15 = v9 | (v13 > 2);
  if (v9 & 1 | (v13 > 2) | v8 & 1)
    v16 = 0;
  else
    v16 = a3;
  v17 = (int *)MEMORY[0x1E0D82BF0];
  v18 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_139:
    if ((v15 & 1) != 0)
    {
      v92 = 1;
      goto LABEL_141;
    }
    if (v16)
    {
      while (1)
      {
        v93 = *v16++;
        v94 = 64;
        switch(v93)
        {
          case 0:
            goto LABEL_150;
          case 1:
            goto LABEL_149;
          case 4:
            v94 = 32;
            goto LABEL_149;
          case 7:
            v94 = 128;
            goto LABEL_149;
          case 8:
            v94 = 16;
LABEL_149:
            *(_WORD *)(a1 + 112) |= v94;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_150;
  }
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_139;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    v29 = v22 & 7;
    if (v28 || v29 == 4)
      goto LABEL_139;
    v31 = v22 >> 3;
    v32 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_102;
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v37;

          --v7;
          goto LABEL_136;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_154;
        v7 += *(unsigned __int16 *)(a1 + 112) << 25 >> 31;
        goto LABEL_136;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_102;
        *(_WORD *)(a1 + 112) |= 2u;
        v40 = *v17;
        v41 = *(_QWORD *)(v3 + v40);
        if (v41 <= 0xFFFFFFFFFFFFFFFBLL && v41 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v42 = *(_DWORD *)(*(_QWORD *)(v3 + *v19) + v41);
          *(_QWORD *)(v3 + v40) = v41 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v42 = 0;
        }
        v77 = 100;
        goto LABEL_126;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_102;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v46 = *v17;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v27 = v44++ >= 9;
              if (v27)
              {
                v45 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v45 = 0;
LABEL_107:
        *(_QWORD *)(a1 + 72) = v45;
        goto LABEL_137;
      case 4:
        if (!v32 || (*(_WORD *)(a1 + 112) & 0x20) != 0)
          goto LABEL_102;
        if (v29 != 2)
        {
          v78 = 0;
          v79 = 0;
          v80 = 0;
          while (1)
          {
            v81 = *v17;
            v82 = *(_QWORD *)(v3 + v81);
            v83 = v82 + 1;
            if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v6))
              goto LABEL_134;
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              v27 = v79++ >= 9;
              if (!v27)
                continue;
            }
            goto LABEL_135;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_154;
        while (1)
        {
          v50 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_114;
          v51 = 0;
          v52 = 0;
          v53 = 0;
          while (1)
          {
            v54 = *v17;
            v55 = *(_QWORD *)(v3 + v54);
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
              break;
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v55);
            *(_QWORD *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              v27 = v52++ >= 9;
              if (!v27)
                continue;
            }
            goto LABEL_69;
          }
          *(_BYTE *)(v3 + *v50) = 1;
LABEL_69:
          PBRepeatedInt32Add();
        }
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_102;
        *(_WORD *)(a1 + 112) |= 4u;
        v58 = *v17;
        v59 = *(_QWORD *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v42 = *(_DWORD *)(*(_QWORD *)(v3 + *v19) + v59);
          *(_QWORD *)(v3 + v58) = v59 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v42 = 0;
        }
        v77 = 104;
LABEL_126:
        *(_DWORD *)(a1 + v77) = v42;
        goto LABEL_137;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_102;
        v60 = 0;
        v61 = 0;
        v62 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          v63 = *v17;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v27 = v61++ >= 9;
              if (v27)
              {
                v62 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v62 = 0;
LABEL_111:
        *(_BYTE *)(a1 + 108) = v62 != 0;
        goto LABEL_137;
      case 7:
        if (!v32 || (*(_WORD *)(a1 + 112) & 0x80) != 0)
          goto LABEL_102;
        PBReaderReadString();
        v67 = (void *)objc_claimAutoreleasedReturnValue();
        if (v67)
        {
          v97 = v67;
          -[GEOPDSearchQueryCompletionMetadata _addNoFlagsTokens:](a1, v67);
          v67 = v97;
        }

        goto LABEL_136;
      case 8:
        if (!v32 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
        {
LABEL_102:
          v76 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v76 & 1) == 0)
          {
LABEL_153:
            v92 = 0;
            goto LABEL_141;
          }
LABEL_137:
          if (!(v15 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_139;
          continue;
        }
        if (v29 != 2)
        {
          v85 = 0;
          v86 = 0;
          v87 = 0;
          while (1)
          {
            v88 = *v17;
            v89 = *(_QWORD *)(v3 + v88);
            v90 = v89 + 1;
            if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v6))
              break;
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v89);
            *(_QWORD *)(v3 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              v27 = v86++ >= 9;
              if (!v27)
                continue;
            }
            goto LABEL_135;
          }
LABEL_134:
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_135:
          PBRepeatedInt32Add();
LABEL_136:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_137;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            v68 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v69 = 0;
            v70 = 0;
            v71 = 0;
            while (1)
            {
              v72 = *v17;
              v73 = *(_QWORD *)(v3 + v72);
              v74 = v73 + 1;
              if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
                break;
              v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v73);
              *(_QWORD *)(v3 + v72) = v74;
              v71 |= (unint64_t)(v75 & 0x7F) << v69;
              if (v75 < 0)
              {
                v69 += 7;
                v27 = v70++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_101;
            }
            *(_BYTE *)(v3 + *v68) = 1;
LABEL_101:
            PBRepeatedInt32Add();
          }
LABEL_114:
          PBReaderRecallMark();
          goto LABEL_136;
        }
LABEL_154:
        v92 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_141:
        *(_WORD *)(a1 + 112) |= 0x40u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x10u;
        if ((v92 & 1) != 0)
        {
LABEL_150:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_151;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_151:
        v95 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v39)
          goto LABEL_153;
        goto LABEL_137;
    }
  }
}

void sub_18901D960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901DE94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901DF5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryCompletionMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryCompletionMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryCompletionMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryCompletionMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryCompletionMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18901E0E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18901E40C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryCompletionMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = (*(_WORD *)(a1 + 112) & 0x1F0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_18901E780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryCtrMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDSearchCTRStoreKeyValuePair *v20;
  _BOOL8 v21;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOPDSearchCTRStoreKeyValuePair);
          if (!GEOPDSearchCTRStoreKeyValuePairReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryCtrMetadata addQueryCtrKeyValuePair:](a1, v20);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18901F014(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDirectionsIntentMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  void *v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  int v66;
  char v67;
  void *v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 6) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_110;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_110:
      if ((v12 & 1) != 0)
      {
        v65 = 1;
        goto LABEL_118;
      }
      if (v13)
      {
        while (1)
        {
          v66 = *v13++;
          v67 = 16;
          switch(v66)
          {
            case 0:
              goto LABEL_119;
            case 2:
              goto LABEL_116;
            case 5:
              v67 = 32;
              goto LABEL_116;
            case 7:
              v67 = 64;
LABEL_116:
              *(_BYTE *)(a1 + 68) |= v67;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_119;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v33 = 0;
        v34 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (1)
        {
          v36 = *v14;
          v37 = *(_QWORD *)(v3 + v36);
          v38 = v37 + 1;
          if (v37 == -1 || v38 > *(_QWORD *)(v3 + *v6))
            break;
          v39 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v37);
          *(_QWORD *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0)
            goto LABEL_85;
          v33 += 7;
          v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_87;
          }
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_85:
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_87:
        v63 = 52;
        goto LABEL_100;
      case 2:
        if (!v28)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 16;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_124;
        v64 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_107;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v43 = 0;
        v44 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 68) |= 8u;
        while (2)
        {
          v45 = *v14;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v35 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v24 = v44++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_91:
        v63 = 64;
        goto LABEL_100;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v49 = 0;
        v50 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v51 = *v14;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v35 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v24 = v50++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_95:
        v63 = 56;
        goto LABEL_100;
      case 5:
        if (!v28)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 68) & 0x20) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 24;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_124;
        v64 = 4 * *(_BYTE *)(a1 + 68);
        goto LABEL_107;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v55 = 0;
        v56 = 0;
        v35 = 0;
        *(_BYTE *)(a1 + 68) |= 4u;
        while (2)
        {
          v57 = *v14;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v35 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v24 = v56++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v35) = 0;
LABEL_99:
        v63 = 60;
LABEL_100:
        *(_DWORD *)(a1 + v63) = v35;
        goto LABEL_109;
      case 7:
        if (!v28)
        {
LABEL_82:
          v62 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v62 & 1) == 0)
          {
LABEL_117:
            v65 = 0;
            goto LABEL_118;
          }
          goto LABEL_109;
        }
        if ((*(_BYTE *)(a1 + 68) & 0x40) == 0)
        {
          PBReaderReadString();
          v41 = objc_claimAutoreleasedReturnValue();
          v42 = 32;
LABEL_81:
          v61 = *(void **)(a1 + v42);
          *(_QWORD *)(a1 + v42) = v41;

          --v9;
LABEL_108:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_109:
          if (!(v12 & 1 | (v9 != 0)))
            goto LABEL_110;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v64 = 2 * *(_BYTE *)(a1 + 68);
LABEL_107:
          v9 += v64 >> 7;
          goto LABEL_108;
        }
LABEL_124:
        v65 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_118:
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 0x20u;
        *(_BYTE *)(a1 + 68) |= 0x40u;
        if ((v65 & 1) != 0)
        {
LABEL_119:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_120;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_120:
            v68 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v40 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v40)
          goto LABEL_117;
        goto LABEL_109;
    }
  }
}

void sub_18901FF6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18902003C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryDirectionsIntentMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890201C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890203DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryDirectionsIntentMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 68) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189020664(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDymMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDSearchQuerySynonymMetadata *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  int v48;
  char v49;
  char v50;
  char v51;
  char v52;
  int v53;
  int v54;
  void *v55;
  _BOOL4 v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v58 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_76;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        v52 = 1;
        goto LABEL_90;
      }
      if (!v15)
        goto LABEL_91;
      while (1)
      {
        while (1)
        {
          v54 = *v15++;
          v53 = v54;
          if (v54 != 2)
            break;
LABEL_81:
          *(_BYTE *)(a1 + 48) |= v53;
        }
        if (v53 == 3)
        {
          LOBYTE(v53) = 4;
          goto LABEL_81;
        }
        if (!v53)
          goto LABEL_91;
      }
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v58)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 48) & 2) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v47 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v46;

          --v9;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_87:
          v52 = 0;
          goto LABEL_89;
        }
        v50 = *(_BYTE *)(a1 + 48) << 6;
LABEL_70:
        v9 += v50 >> 7;
        goto LABEL_71;
      }
    }
    else
    {
      if ((_DWORD)v31 != 1)
      {
        v48 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v48)
          goto LABEL_86;
        goto LABEL_72;
      }
      if ((v8 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_63;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_65:
        *(_DWORD *)(a1 + 44) = v39;
        goto LABEL_72;
      }
    }
LABEL_60:
    v49 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v49 & 1) == 0)
    {
LABEL_86:
      v52 = 0;
      goto LABEL_90;
    }
LABEL_72:
    if (v9)
      v51 = 1;
    else
      v51 = v16;
    if ((v51 & 1) == 0)
      goto LABEL_76;
  }
  if (!v32)
    goto LABEL_60;
  if ((*(_BYTE *)(a1 + 48) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_87;
    v50 = 32 * *(_BYTE *)(a1 + 48);
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_87;
  v57 = v16;
  v44 = objc_alloc_init(GEOPDSearchQuerySynonymMetadata);
  if (GEOPDSearchQuerySynonymMetadataReadAllFrom((uint64_t)v44, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v45 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v44;

    --v9;
    v16 = v57;
LABEL_71:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_72;
  }

  v52 = 0;
  v16 = v57;
LABEL_89:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_90:
  *(_BYTE *)(a1 + 48) |= 2u;
  *(_BYTE *)(a1 + 48) |= 4u;
  if ((v52 & 1) != 0)
  {
LABEL_91:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_92;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_92:
      v55 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_189021240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189021324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDymMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryDymMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryDymMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryDymMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryDymMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSearchQuerySynonymMetadata readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1890214C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQuerySynonymMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  _BOOL8 v57;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_89;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_95;
          }
        case 2u:
          if (v16 == 2)
            goto LABEL_94;
          goto LABEL_103;
        case 3u:
          if (v16 == 2)
            goto LABEL_94;
          goto LABEL_103;
        case 4u:
          if (v16 == 2)
            goto LABEL_94;
          goto LABEL_103;
        case 5u:
          if (v16 == 2)
            goto LABEL_94;
          goto LABEL_103;
        case 6u:
          if (v16 == 2)
            goto LABEL_94;
          goto LABEL_103;
        case 7u:
          if (v16 != 5)
            goto LABEL_103;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_90;
          v26 = v25 + 4;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_90;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_89;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v23 = v27++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_95;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_89;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v23 = v32++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_95;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_89;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v23 = v37++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_95;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_89;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v23 = v42++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_95;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_89;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v23 = v47++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_95;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_103;
          v52 = 0;
          break;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_94;
          goto LABEL_103;
        case 0xFu:
          if (v16 == 2)
            goto LABEL_94;
          goto LABEL_103;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchPairIsValid(a1))
            goto LABEL_103;
          PBReaderRecallMark();
          continue;
        default:
LABEL_94:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_103:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v53 = *v2;
        v54 = *(_QWORD *)&a1[v53];
        v55 = v54 + 1;
        if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
          break;
        v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
        *(_QWORD *)&a1[v53] = v55;
        if (v56 < 0)
        {
          v23 = v52++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_95;
      }
LABEL_89:
      v14 = *v4;
LABEL_90:
      a1[v14] = 1;
LABEL_95:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

void sub_189021B3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchQueryDymMetadataIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 48) & 0xA) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 48) & 4) != 0)
    return GEOPDSearchQuerySynonymMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDSearchQueryDymMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchQueryDymMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189021D94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryEmbeddingMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOPDSearchStringStringPair *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v28;
  int v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  char v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 1);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_73;
        v54 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v18))
      break;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *v18;
        v29 = *(unsigned __int8 *)(v3 + v28);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *v18;
    v29 = *(unsigned __int8 *)(v3 + v28);
    if (*(_BYTE *)(v3 + v28))
      v22 = 0;
LABEL_25:
    v30 = v22 & 7;
    if (v29 || v30 == 4)
      break;
    v32 = v22 >> 3;
    v33 = (char)v16;
    if ((v54 & 1) == 0)
    {
      v34 = v15;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((_DWORD)v32)
    {
      case 3:
        if (!v33 || (*(_BYTE *)(a1 + 68) & 4) != 0)
        {
LABEL_60:
          v45 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
LABEL_86:
            v48 = 0;
            goto LABEL_75;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_87;
        v53 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {

          v48 = 0;
          LOBYTE(v16) = v53;
          goto LABEL_89;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryEmbeddingMetadata _addNoFlagsModelVersion:](a1, v16);

        LODWORD(v16) = v53;
        break;
      case 2:
        if (!v33 || (*(_BYTE *)(a1 + 68) & 1) != 0)
          goto LABEL_60;
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_87;
          while (1)
          {
            v40 = (unint64_t *)(v3 + *v17);
            v41 = *v40;
            v42 = *(_QWORD *)(v3 + *v6);
            if (*v40 >= v42)
              break;
            v43 = (int)*MEMORY[0x1E0D82BC8];
            if (*(_BYTE *)(v3 + v43))
              break;
            if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > v42)
              *(_BYTE *)(v3 + v43) = 1;
            else
              *v40 = v41 + 4;
            PBRepeatedFloatAdd();
          }
          PBReaderRecallMark();
        }
        else
        {
          v46 = *v17;
          v47 = *(_QWORD *)(v3 + v46);
          if (v47 <= 0xFFFFFFFFFFFFFFFBLL && v47 + 4 <= *(_QWORD *)(v3 + *v6))
            *(_QWORD *)(v3 + v46) = v47 + 4;
          else
            *(_BYTE *)(v3 + v28) = 1;
          PBRepeatedFloatAdd();
        }
        break;
      case 1:
        if (!v33)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v38;

          v18 = (int *)MEMORY[0x1E0D82BC8];
          --v7;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_87:
          v48 = 0;
LABEL_89:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_75;
        }
        v7 += *(unsigned __int8 *)(a1 + 68) << 30 >> 31;
        break;
      default:
        v44 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_86;
        continue;
    }
    v18 = (int *)MEMORY[0x1E0D82BC8];
  }
  while (v16 & 1 | (v7 != 0) && *(_QWORD *)(v3 + *v17) < *(_QWORD *)(v3 + *v6));
LABEL_73:
  if ((v16 & 1) == 0)
  {
    if (v15)
    {
      while (1)
      {
        v49 = *v15++;
        v50 = 2;
        switch(v49)
        {
          case 0:
            goto LABEL_83;
          case 1:
            goto LABEL_82;
          case 2:
            v50 = 1;
            goto LABEL_82;
          case 3:
            v50 = 4;
LABEL_82:
            *(_BYTE *)(a1 + 68) |= v50;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_83;
  }
  v48 = 1;
LABEL_75:
  *(_BYTE *)(a1 + 68) |= 2u;
  *(_BYTE *)(a1 + 68) |= 1u;
  *(_BYTE *)(a1 + 68) |= 4u;
  if ((v48 & 1) == 0)
  {
    v3 = 0;
    if ((v16 & 1) == 0)
      return v3;
    goto LABEL_84;
  }
LABEL_83:
  v3 = *(_BYTE *)(v3 + *v18) == 0;
  if ((v16 & 1) == 0)
    return v3;
LABEL_84:
  v51 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_1890226FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189022ABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189022B98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryEmbeddingMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDSearchStringStringPair readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDSearchQueryEmbeddingMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryEmbeddingMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryEmbeddingMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryEmbeddingMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryEmbeddingMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryEmbeddingMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189022E24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189023078(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryEmbeddingMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(_BYTE *)(a1 + 68) & 0xF) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 4) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDSearchStringStringPairIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDSearchQueryEmbeddingMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchQueryEmbeddingMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189023448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18902378C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryFuzzyMatchV2MetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char v15;
  int *v16;
  GEOPDSearchTokenSet *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  uint64_t v29;
  int v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  int v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int *v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  int v79;
  char v80;
  void *v81;
  int v83;
  char v84;
  char v85;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 96)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 2;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        LODWORD(v17) = v10 | v14;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_120;
        v84 = (v7 != 0) | v15;
        v85 = (v16 == 0) | v15;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v19))
      goto LABEL_120;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *v19;
        v30 = *(unsigned __int8 *)(v3 + v29);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *v19;
    v30 = *(unsigned __int8 *)(v3 + v29);
    if (*(_BYTE *)(v3 + v29))
      v23 = 0;
LABEL_25:
    v31 = v23 & 7;
    if (v30 || v31 == 4)
    {
LABEL_120:
      if ((v17 & 1) != 0)
      {
        v78 = 1;
        goto LABEL_122;
      }
      if (v16)
      {
        while (1)
        {
          v79 = *v16++;
          v80 = 16;
          switch(v79)
          {
            case 0:
              goto LABEL_131;
            case 1:
              goto LABEL_130;
            case 4:
              v80 = 4;
              goto LABEL_130;
            case 5:
              v80 = 8;
              goto LABEL_130;
            case 6:
              v80 = 32;
LABEL_130:
              *(_BYTE *)(a1 + 96) |= v80;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_131;
    }
    v33 = v23 >> 3;
    v34 = (char)v17;
    if ((v85 & 1) == 0)
    {
      v35 = v16;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_BYTE *)(a1 + 96) & 0x10) != 0)
          goto LABEL_91;
        v83 = (int)v17;
        PBReaderReadString();
        v17 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v17)
          -[GEOPDSearchQueryFuzzyMatchV2Metadata _addNoFlagsRewrittenQueries:](a1, v17);
        goto LABEL_90;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_91;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 96) |= 2u;
        while (2)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v28 = v41++ >= 9;
              if (v28)
              {
                v42 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v42 = 0;
LABEL_96:
        v67 = v42 != 0;
        v68 = 93;
        goto LABEL_101;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_91;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        *(_BYTE *)(a1 + 96) |= 1u;
        while (2)
        {
          v50 = *v18;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v28 = v48++ >= 9;
              if (v28)
              {
                v49 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v49 = 0;
LABEL_100:
        v67 = v49 != 0;
        v68 = 92;
LABEL_101:
        *(_BYTE *)(a1 + v68) = v67;
        goto LABEL_118;
      case 4:
        if (!v34 || (*(_BYTE *)(a1 + 96) & 4) != 0)
          goto LABEL_91;
        if (v31 != 2)
        {
          v69 = *v18;
          v70 = *(_QWORD *)(v3 + v69);
          if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(_QWORD *)(v3 + *v6))
            *(_QWORD *)(v3 + v69) = v70 + 8;
          else
            *(_BYTE *)(v3 + v29) = 1;
          PBRepeatedDoubleAdd();
          goto LABEL_117;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_135;
        while (1)
        {
          v54 = (unint64_t *)(v3 + *v18);
          v55 = *v54;
          v56 = *(_QWORD *)(v3 + *v6);
          if (*v54 >= v56)
            break;
          v57 = (int)*MEMORY[0x1E0D82BC8];
          if (*(_BYTE *)(v3 + v57))
            break;
          if (v55 > 0xFFFFFFFFFFFFFFF7 || v55 + 8 > v56)
            *(_BYTE *)(v3 + v57) = 1;
          else
            *v54 = v55 + 8;
          PBRepeatedDoubleAdd();
        }
        goto LABEL_102;
      case 5:
        if (!v34 || (*(_BYTE *)(a1 + 96) & 8) != 0)
          goto LABEL_91;
        if (v31 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_135;
          while (1)
          {
            v58 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v59 = 0;
            v60 = 0;
            v61 = 0;
            while (1)
            {
              v62 = *v18;
              v63 = *(_QWORD *)(v3 + v62);
              v64 = v63 + 1;
              if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
                break;
              v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v63);
              *(_QWORD *)(v3 + v62) = v64;
              v61 |= (unint64_t)(v65 & 0x7F) << v59;
              if (v65 < 0)
              {
                v59 += 7;
                v28 = v60++ >= 9;
                if (!v28)
                  continue;
              }
              goto LABEL_84;
            }
            *(_BYTE *)(v3 + *v58) = 1;
LABEL_84:
            PBRepeatedInt32Add();
          }
LABEL_102:
          PBReaderRecallMark();
        }
        else
        {
          v71 = 0;
          v72 = 0;
          v73 = 0;
          while (1)
          {
            v74 = *v18;
            v75 = *(_QWORD *)(v3 + v74);
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
              break;
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              v28 = v72++ >= 9;
              if (!v28)
                continue;
            }
            goto LABEL_114;
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_114:
          PBRepeatedInt32Add();
        }
        goto LABEL_117;
      case 6:
        if (!v34 || (*(_BYTE *)(a1 + 96) & 0x20) != 0)
        {
LABEL_91:
          v66 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v66 & 1) == 0)
          {
LABEL_134:
            v78 = 0;
            goto LABEL_122;
          }
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) != 0)
        {
          v83 = (int)v17;
          v17 = objc_alloc_init(GEOPDSearchTokenSet);
          if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
          {

            v78 = 0;
            LOBYTE(v17) = v83;
            goto LABEL_137;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryFuzzyMatchV2Metadata _addNoFlagsRewrittenQueryTokens:](a1, v17);
LABEL_90:

          LODWORD(v17) = v83;
LABEL_117:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_118:
          if ((v84 & 1) == 0 || *(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_120;
          continue;
        }
LABEL_135:
        v78 = 0;
LABEL_137:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_122:
        *(_BYTE *)(a1 + 96) |= 0x10u;
        *(_BYTE *)(a1 + 96) |= 4u;
        *(_BYTE *)(a1 + 96) |= 8u;
        *(_BYTE *)(a1 + 96) |= 0x20u;
        if ((v78 & 1) != 0)
        {
LABEL_131:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v17 & 1) != 0)
            goto LABEL_132;
          return v3;
        }
        v3 = 0;
        if ((v17 & 1) == 0)
          return v3;
LABEL_132:
        v81 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      default:
        v39 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v39)
          goto LABEL_134;
        goto LABEL_118;
    }
  }
}

void sub_189024234(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189024798(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryFuzzyMatchV2MetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 72);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryFuzzyMatchV2MetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryFuzzyMatchV2MetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189024A24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189024D7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  if ((*(_BYTE *)(a1 + 96) & 0x7C) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 96) & 0x20) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 72);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDSearchTokenSetIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18902524C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryGeoMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEONamedFeature *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEONamedFeature);
          if (!GEONamedFeatureReadAllFrom(v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryGeoMetadata addNamedFeature:](a1, v18);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189025988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryGeoNormalizerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 92)), (uint16x4_t)0xFFFEFFFDFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 92) & 1)+ ((*(_BYTE *)(a1 + 92) & 0x20) != 0));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_97:
    if ((v12 & 1) != 0)
    {
      v52 = 1;
      goto LABEL_99;
    }
    if (v13)
    {
      while (1)
      {
        v53 = *v13++;
        v54 = 16;
        switch(v53)
        {
          case 0:
            goto LABEL_110;
          case 1:
            goto LABEL_109;
          case 2:
            v54 = 2;
            goto LABEL_109;
          case 3:
            v54 = 8;
            goto LABEL_109;
          case 4:
            v54 = 4;
            goto LABEL_109;
          case 5:
            v54 = 32;
            goto LABEL_109;
          case 6:
            v54 = 1;
LABEL_109:
            *(_BYTE *)(a1 + 92) |= v54;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_110;
  }
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_97;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    v26 = v19 & 7;
    if (v25 || v26 == 4)
      goto LABEL_97;
    v28 = v19 >> 3;
    v29 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v30 = v13;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 92) & 0x10) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 64;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v44 = 8 * *(_BYTE *)(a1 + 92);
        goto LABEL_83;
      case 2:
        if (!v29)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 92) & 2) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 40;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v44 = *(_BYTE *)(a1 + 92) << 6;
        goto LABEL_83;
      case 3:
        if (!v29)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 92) & 8) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 56;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v44 = 16 * *(_BYTE *)(a1 + 92);
        goto LABEL_83;
      case 4:
        if (!v29)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 92) & 4) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 48;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v44 = 32 * *(_BYTE *)(a1 + 92);
        goto LABEL_83;
      case 5:
        if (!v29)
          goto LABEL_71;
        if ((*(_BYTE *)(a1 + 92) & 0x20) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 72;
LABEL_55:
          v36 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          --v7;
LABEL_84:
          if (!(v12 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_97;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v44 = 4 * *(_BYTE *)(a1 + 92);
LABEL_83:
          v7 += v44 >> 7;
          goto LABEL_84;
        }
LABEL_113:
        v52 = 0;
LABEL_99:
        *(_BYTE *)(a1 + 92) |= 0x10u;
        *(_BYTE *)(a1 + 92) |= 2u;
        *(_BYTE *)(a1 + 92) |= 8u;
        *(_BYTE *)(a1 + 92) |= 4u;
        *(_BYTE *)(a1 + 92) |= 0x20u;
        *(_BYTE *)(a1 + 92) |= 1u;
        if ((v52 & 1) != 0)
        {
LABEL_110:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_111;
          return v3;
        }
        v3 = 0;
        if ((v12 & 1) == 0)
          return v3;
LABEL_111:
        v55 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 6:
        if (!v29 || (*(_BYTE *)(a1 + 92) & 1) != 0)
        {
LABEL_71:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
        }
        else if (v26 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_113;
          while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
          {
            v37 = 0;
            v38 = 0;
            v39 = 0;
            while (1)
            {
              v40 = *v14;
              v41 = *(_QWORD *)(v3 + v40);
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
                break;
              v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v41);
              *(_QWORD *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                v24 = v38++ >= 9;
                if (!v24)
                  continue;
              }
              goto LABEL_70;
            }
            *(_BYTE *)(v3 + *v15) = 1;
LABEL_70:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v45 = 0;
          v46 = 0;
          v47 = 0;
          while (1)
          {
            v48 = *v14;
            v49 = *(_QWORD *)(v3 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
              break;
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v24 = v46++ >= 9;
              if (!v24)
                continue;
            }
            goto LABEL_96;
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_96:
          PBRepeatedInt32Add();
        }
        goto LABEL_84;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_113;
        goto LABEL_84;
    }
  }
}

void sub_189026970(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189026A48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryGeoNormalizerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189026BD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189026DF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryGeoNormalizerMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = (*(_BYTE *)(a1 + 92) & 0x7F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_189027024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryGeoTagMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  GEOPDSearchStringGeoTypesPair *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  int *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  void *v46;
  int *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  int v71;
  char v72;
  void *v73;
  int v75;
  char v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 92) >> 2) & 1)
      + (*(_BYTE *)(a1 + 92) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 2);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_104;
        v76 = (v15 == 0) | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_104;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_104:
      if ((v16 & 1) != 0)
      {
        v70 = 1;
        goto LABEL_106;
      }
      if (v15)
      {
        while (1)
        {
          v71 = *v15++;
          v72 = 2;
          switch(v71)
          {
            case 0:
              goto LABEL_115;
            case 1:
              goto LABEL_114;
            case 2:
              v72 = 4;
              goto LABEL_114;
            case 3:
              v72 = 8;
              goto LABEL_114;
            case 4:
              v72 = 1;
LABEL_114:
              *(_BYTE *)(a1 + 92) |= v72;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_115;
    }
    v31 = v22 >> 3;
    v32 = (char)v16;
    if ((v76 & 1) == 0)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(_BYTE *)(a1 + 92) & 2) != 0)
          goto LABEL_80;
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_119;
          while (1)
          {
            v37 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              goto LABEL_84;
            v38 = 0;
            v39 = 0;
            v40 = 0;
            while (1)
            {
              v41 = *v17;
              v42 = *(_QWORD *)(v3 + v41);
              v43 = v42 + 1;
              if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
                break;
              v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v42);
              *(_QWORD *)(v3 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                v27 = v39++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_51;
            }
            *(_BYTE *)(v3 + *v37) = 1;
LABEL_51:
            PBRepeatedInt32Add();
          }
        }
        v56 = 0;
        v57 = 0;
        v58 = 0;
        while (1)
        {
          v59 = *v17;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
            goto LABEL_99;
          v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v60);
          *(_QWORD *)(v3 + v59) = v61;
          v58 |= (unint64_t)(v62 & 0x7F) << v56;
          if (v62 < 0)
          {
            v56 += 7;
            v27 = v57++ >= 9;
            if (!v27)
              continue;
          }
          goto LABEL_100;
        }
      case 2:
        if (!v32)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 92) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_119:
            v70 = 0;
            goto LABEL_121;
          }
          v7 += *(unsigned __int8 *)(a1 + 92) << 29 >> 31;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v75 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchGeoParsingResult);
        if (GEOPDSearchGeoParsingResultReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v46 = *(void **)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v16;

          --v7;
LABEL_64:
          LODWORD(v16) = v75;
LABEL_101:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_102:
          if (!(v16 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_104;
          continue;
        }
LABEL_120:

        v70 = 0;
        LOBYTE(v16) = v75;
LABEL_121:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_106:
        *(_BYTE *)(a1 + 92) |= 2u;
        *(_BYTE *)(a1 + 92) |= 4u;
        *(_BYTE *)(a1 + 92) |= 8u;
        *(_BYTE *)(a1 + 92) |= 1u;
        if ((v70 & 1) != 0)
        {
LABEL_115:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_116;
          return v3;
        }
        v3 = 0;
        if ((v16 & 1) == 0)
          return v3;
LABEL_116:
        v73 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + 92) & 8) != 0)
          goto LABEL_80;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v75 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchStringGeoTypesPair);
        if (!GEOPDSearchStringGeoTypesPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        -[GEOPDSearchQueryGeoTagMetadata _addNoFlagsGeoTypeMap:](a1, v16);

        goto LABEL_64;
      case 4:
        if (v32 && (*(_BYTE *)(a1 + 92) & 1) == 0)
        {
          if (v29 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_119;
            while (1)
            {
              v47 = (int *)MEMORY[0x1E0D82BC8];
              if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
                break;
              v48 = 0;
              v49 = 0;
              v50 = 0;
              while (1)
              {
                v51 = *v17;
                v52 = *(_QWORD *)(v3 + v51);
                v53 = v52 + 1;
                if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
                  break;
                v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v52);
                *(_QWORD *)(v3 + v51) = v53;
                v50 |= (unint64_t)(v54 & 0x7F) << v48;
                if (v54 < 0)
                {
                  v48 += 7;
                  v27 = v49++ >= 9;
                  if (!v27)
                    continue;
                }
                goto LABEL_79;
              }
              *(_BYTE *)(v3 + *v47) = 1;
LABEL_79:
              PBRepeatedInt32Add();
            }
LABEL_84:
            PBReaderRecallMark();
          }
          else
          {
            v63 = 0;
            v64 = 0;
            v65 = 0;
            while (1)
            {
              v66 = *v17;
              v67 = *(_QWORD *)(v3 + v66);
              v68 = v67 + 1;
              if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
                break;
              v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v67);
              *(_QWORD *)(v3 + v66) = v68;
              v65 |= (unint64_t)(v69 & 0x7F) << v63;
              if (v69 < 0)
              {
                v63 += 7;
                v27 = v64++ >= 9;
                if (!v27)
                  continue;
              }
              goto LABEL_100;
            }
LABEL_99:
            *(_BYTE *)(v3 + *v18) = 1;
LABEL_100:
            PBRepeatedInt32Add();
          }
          goto LABEL_101;
        }
LABEL_80:
        v55 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v55 & 1) == 0)
        {
LABEL_118:
          v70 = 0;
          goto LABEL_106;
        }
        goto LABEL_102;
      default:
        v45 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v45)
          goto LABEL_118;
        goto LABEL_102;
    }
  }
}

void sub_189027C70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890281C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890282A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryGeoTagMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  -[GEOPDSearchGeoParsingResult readAll:](*(_QWORD *)(a1 + 64), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 72);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchStringGeoTypesPair readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDSearchQueryGeoTagMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryGeoTagMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryGeoTagMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryGeoTagMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryGeoTagMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryGeoTagMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189028544(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890287D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryGeoTagMetadataIsDirty(uint64_t a1)
{
  char v2;
  os_unfair_lock_s *v3;
  char IsDirty;
  uint64_t v5;
  id v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_BYTE *)(a1 + 92);
  if ((v2 & 0x12) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 92) & 4) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 64);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDSearchGeoParsingResultIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 14);
      if ((IsDirty & 1) != 0)
        return 1;
      v2 = *(_BYTE *)(a1 + 92);
    }
  }
  if ((v2 & 9) != 0)
    return 1;
  if ((v2 & 8) == 0)
    return 0;
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 72);
  v5 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v8 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v7);
        v10 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * i);
        if (v10)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v10 + 56));
          v11 = *(_BYTE *)(v10 + 60) & 7;
          os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 56));
          if (v11)
          {
            v5 = 1;
            goto LABEL_22;
          }
        }
      }
      v5 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v5)
        continue;
      break;
    }
  }
LABEL_22:

  return v5;
}

os_unfair_lock_s *GEOPDSearchQueryGeoTagMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchQueryGeoTagMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189028C64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189028F7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int *v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  GEOPDSearchIntent *v36;
  int v37;
  uint64_t v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  char v44;
  void *v45;
  BOOL v47;
  char v48;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFDFFFEFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 76) & 1)+ ((*(_BYTE *)(a1 + 76) & 2) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 | (v11 > 3);
        if (((v14 | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14;
        v48 = (v15 == 0) | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v47 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_81;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_81:
      if (v16)
      {
        v42 = 1;
        goto LABEL_95;
      }
      if (v15)
      {
        while (1)
        {
          v43 = *v15++;
          v44 = 16;
          switch(v43)
          {
            case 0:
              goto LABEL_96;
            case 1:
              goto LABEL_90;
            case 2:
              v44 = 32;
              goto LABEL_90;
            case 3:
              v44 = 4;
              goto LABEL_90;
            case 4:
              v44 = 8;
              goto LABEL_90;
            case 5:
              v44 = 1;
              goto LABEL_90;
            case 6:
              v44 = 2;
LABEL_90:
              *(_BYTE *)(a1 + 76) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_96;
    }
    v30 = v22 >> 3;
    v31 = v16;
    if ((v48 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 0x10) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v36 = objc_alloc_init(GEOPDSearchIntent);
        if (!GEOPDSearchIntentReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntent _addNoFlagsWhatIntent:](a1, v36);
        goto LABEL_70;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 0x20) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v36 = objc_alloc_init(GEOPDSearchIntent);
        if (!GEOPDSearchIntentReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntent _addNoFlagsWhereIntent:](a1, v36);
        goto LABEL_70;
      case 3:
        if (!v31)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_92;
          v41 = 32 * *(_BYTE *)(a1 + 76);
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v36 = objc_alloc_init(GEOPDSearchQueryIntentMetadata);
        if (!GEOPDSearchQueryIntentMetadataReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          goto LABEL_93;
        PBReaderRecallMark();
        v38 = 32;
        goto LABEL_59;
      case 4:
        if (!v31)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_92;
          v36 = objc_alloc_init(GEOPDSearchRewrittenQueryNonPayloadField);
          if (!GEOPDSearchRewrittenQueryNonPayloadFieldReadAllFrom((uint64_t)v36, (void *)v3))
            goto LABEL_93;
          PBReaderRecallMark();
          v38 = 40;
LABEL_59:
          v39 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v36;

          --v7;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_92:
          v42 = 0;
          goto LABEL_94;
        }
        v41 = 16 * *(_BYTE *)(a1 + 76);
LABEL_78:
        v7 += v41 >> 7;
        goto LABEL_79;
      case 5:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 1) != 0)
          goto LABEL_72;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v36 = objc_alloc_init(GEOPDSearchPair);
        if (!GEOPDSearchPairReadAllFrom((uint64_t)v36, (void *)v3))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntent _addNoFlagsGlobalFeatureMap:](a1, v36);
        goto LABEL_70;
      case 6:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 2) != 0)
        {
LABEL_72:
          v40 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v40 & 1) == 0)
          {
LABEL_91:
            v42 = 0;
            goto LABEL_95;
          }
LABEL_80:
          if (!v16 && v7 == 0)
            goto LABEL_81;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_92;
        v36 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (GEOPDSearchStringStringPairReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQueryIntent _addNoFlagsGlobalStringFeatureMap:](a1, v36);
LABEL_70:

LABEL_71:
          v16 = v47;
LABEL_79:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_80;
        }
LABEL_93:

        v42 = 0;
        v16 = v47;
LABEL_94:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        *(_BYTE *)(a1 + 76) |= 0x10u;
        *(_BYTE *)(a1 + 76) |= 0x20u;
        *(_BYTE *)(a1 + 76) |= 4u;
        *(_BYTE *)(a1 + 76) |= 8u;
        *(_BYTE *)(a1 + 76) |= 1u;
        *(_BYTE *)(a1 + 76) |= 2u;
        if ((v42 & 1) != 0)
        {
LABEL_96:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v16)
            goto LABEL_97;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_97:
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_91;
        goto LABEL_80;
    }
  }
}

void sub_189029800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890299B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189029B5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189029CD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18902A438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18902A518(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[128];
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v33, v40, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v34;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v34 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchIntent readAll:](*(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v33, v40, 16);
    }
    while (v4);
  }

  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v7 = *(id *)(a1 + 56);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v29, v39, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v30;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v30 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDSearchIntent readAll:](*(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v29, v39, 16);
    }
    while (v9);
  }

  -[GEOPDSearchQueryIntentMetadata readAll:](*(_QWORD *)(a1 + 32), 1);
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v12 = *(id *)(a1 + 16);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v38, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v26;
    while (1)
    {
      if (*(_QWORD *)v26 != v15)
        objc_enumerationMutation(v12);
      if (!--v14)
      {
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v38, 16);
        if (!v14)
          break;
      }
    }
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v16 = *(id *)(a1 + 24);
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v21, v37, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v22;
    do
    {
      v20 = 0;
      do
      {
        if (*(_QWORD *)v22 != v19)
          objc_enumerationMutation(v16);
        -[GEOPDSearchStringStringPair readAll:](*(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v20++), 1);
      }
      while (v18 != v20);
      v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v21, v37, 16);
    }
    while (v18);
  }

}

unint64_t GEOPDSearchQueryIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryIntentCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18902B6A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryIntentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  int v63;
  _BOOL8 v64;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchIntentIsValid(a1))
            goto LABEL_123;
          goto LABEL_116;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchQueryIntentMetadataIsValid(a1))
            goto LABEL_123;
          goto LABEL_116;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark())
            goto LABEL_123;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchPairIsValid(a1))
            goto LABEL_123;
          goto LABEL_116;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDSearchStringStringPairIsValid(a1))
            goto LABEL_116;
          goto LABEL_123;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_123;
          continue;
      }
LABEL_32:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v2;
          v21 = *(_QWORD *)&a1[v20];
          v22 = v21 + 1;
          if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
            break;
          v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
          *(_QWORD *)&a1[v20] = v22;
          v19 |= (unint64_t)(v23 & 0x7F) << v17;
          if ((v23 & 0x80) == 0)
            goto LABEL_42;
          v17 += 7;
          v13 = v18++ >= 9;
          if (v13)
          {
            v19 = 0;
            v24 = a1[*v4];
            goto LABEL_44;
          }
        }
        a1[*v4] = 1;
LABEL_42:
        v24 = a1[*v4];
        if (a1[*v4])
          v19 = 0;
LABEL_44:
        v25 = v19 & 7;
        if (v24 || v25 == 4)
          break;
        switch((v19 >> 3))
        {
          case 1u:
            if ((v19 & 7) != 0)
              goto LABEL_122;
            v27 = 0;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                goto LABEL_108;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v27++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_32;
            }
          case 2u:
            if ((v19 & 7) != 0)
              goto LABEL_122;
            v33 = 0;
            while (1)
            {
              v34 = *v2;
              v35 = *(_QWORD *)&a1[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                goto LABEL_108;
              v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
              *(_QWORD *)&a1[v34] = v36;
              if (v37 < 0)
              {
                v32 = v33++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_32;
            }
          case 3u:
            if ((v19 & 7) != 0)
              goto LABEL_122;
            v38 = 0;
            while (1)
            {
              v39 = *v2;
              v40 = *(_QWORD *)&a1[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                goto LABEL_108;
              v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
              *(_QWORD *)&a1[v39] = v41;
              if (v42 < 0)
              {
                v32 = v38++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_32;
            }
          case 4u:
            if ((v19 & 7) != 0)
              goto LABEL_122;
            v43 = 0;
            while (1)
            {
              v44 = *v2;
              v45 = *(_QWORD *)&a1[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
                goto LABEL_108;
              v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
              *(_QWORD *)&a1[v44] = v46;
              if (v47 < 0)
              {
                v32 = v43++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_32;
            }
          case 5u:
            if ((v19 & 7) != 0)
              goto LABEL_122;
            v48 = 0;
            while (1)
            {
              v49 = *v2;
              v50 = *(_QWORD *)&a1[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
                goto LABEL_108;
              v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
              *(_QWORD *)&a1[v49] = v51;
              if (v52 < 0)
              {
                v32 = v48++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_32;
            }
          case 6u:
            if (v25 == 2)
              goto LABEL_90;
            goto LABEL_122;
          case 7u:
            if ((v19 & 7) != 0)
              goto LABEL_122;
            v53 = 0;
            while (1)
            {
              v54 = *v2;
              v55 = *(_QWORD *)&a1[v54];
              v56 = v55 + 1;
              if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
                goto LABEL_108;
              v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
              *(_QWORD *)&a1[v54] = v56;
              if (v57 < 0)
              {
                v32 = v53++ > 8;
                if (!v32)
                  continue;
              }
              goto LABEL_32;
            }
          case 8u:
            if ((v19 & 7) != 0)
              goto LABEL_122;
            v58 = 0;
            break;
          default:
LABEL_90:
            if ((PBReaderSkipValueWithTag() & 1) != 0)
              continue;
LABEL_122:
            PBReaderRecallMark();
            goto LABEL_123;
        }
        while (1)
        {
          v59 = *v2;
          v60 = *(_QWORD *)&a1[v59];
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
            break;
          v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
          *(_QWORD *)&a1[v59] = v61;
          if (v62 < 0)
          {
            v32 = v58++ > 8;
            if (!v32)
              continue;
          }
          goto LABEL_32;
        }
LABEL_108:
        a1[*v4] = 1;
      }
      v63 = a1[*v4];
      PBReaderRecallMark();
      if (v63)
      {
LABEL_123:
        PBReaderRecallMark();
        return 0;
      }
LABEL_116:
      PBReaderRecallMark();
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v64 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v64;
}

BOOL GEOPDSearchQueryIntentMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  char v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  int v45;
  int v46;
  BOOL v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  char v56;
  unsigned int v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  int v64;
  int v65;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int v75;
  char v76;
  unsigned int v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  int v84;
  int v85;
  BOOL v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char v90;
  unsigned int v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  int v98;
  int v99;
  BOOL v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  int v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  int v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  int v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  int v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  int v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  int v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  int v153;
  unsigned int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  int v158;
  char v159;
  unsigned int v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  int v166;
  int v167;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  int v172;
  unsigned int v173;
  char v174;
  unsigned int v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  int v181;
  int v182;
  unint64_t v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  int v189;
  char v190;
  unsigned int v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  char v196;
  uint64_t v197;
  int v198;
  int v199;
  BOOL v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  int v228;
  unsigned int v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  int v233;
  char v234;
  unsigned int v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  uint64_t v241;
  int v242;
  int v243;
  BOOL v244;
  uint64_t v245;
  unint64_t v246;
  unint64_t v247;
  char v248;
  unsigned int v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  char v254;
  uint64_t v255;
  int v256;
  int v257;
  BOOL v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unsigned int v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  int v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  int v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  int v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  int v287;
  unsigned int v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  int v292;
  unsigned int v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  int v297;
  unsigned int v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  int v302;
  unsigned int v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  int v307;
  unsigned int v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  int v312;
  int v313;
  char v314;
  unsigned int v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  char v320;
  int v321;
  int v322;
  BOOL v323;
  unsigned int v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  int v328;
  unsigned int v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  int v333;
  unsigned int v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t v337;
  int v338;
  unsigned int v339;
  uint64_t v340;
  uint64_t v341;
  unint64_t v342;
  int v343;
  char v344;
  unsigned int v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unint64_t v349;
  char v350;
  int v351;
  int v352;
  unint64_t v354;
  char v355;
  unsigned int v356;
  unint64_t v357;
  uint64_t v358;
  uint64_t v359;
  unint64_t v360;
  char v361;
  int v362;
  int v363;
  BOOL v364;
  uint64_t v365;
  uint64_t v366;
  unint64_t v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  int v374;
  char v375;
  unsigned int v376;
  unint64_t v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  char v381;
  int v382;
  int v383;
  unint64_t v385;
  unsigned int v386;
  uint64_t v387;
  uint64_t v388;
  unint64_t v389;
  int v390;
  char v391;
  unsigned int v392;
  unint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unint64_t v396;
  char v397;
  uint64_t v398;
  int v399;
  int v400;
  BOOL v401;
  unsigned int v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  int v406;
  unsigned int v407;
  uint64_t v408;
  uint64_t v409;
  unint64_t v410;
  int v411;
  unint64_t *v412;
  unint64_t v413;
  unint64_t v414;
  uint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  unint64_t v419;
  int v420;
  unsigned int v421;
  uint64_t v422;
  unint64_t v423;
  unint64_t v424;
  unsigned int v425;
  uint64_t v426;
  uint64_t v427;
  unint64_t v428;
  int v429;
  uint64_t v430;
  uint64_t v431;
  unint64_t v432;
  int v433;
  unsigned int v434;
  char v435;
  unsigned int v436;
  unint64_t v437;
  uint64_t v438;
  uint64_t v439;
  unint64_t v440;
  char v441;
  int v442;
  int v443;
  char v445;
  unsigned int v446;
  unint64_t v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  char v451;
  int v452;
  int v453;
  BOOL v454;
  char v455;
  unsigned int v456;
  unint64_t v457;
  uint64_t v458;
  uint64_t v459;
  unint64_t v460;
  char v461;
  int v462;
  int v463;
  char v465;
  unsigned int v466;
  unint64_t v467;
  uint64_t v468;
  uint64_t v469;
  unint64_t v470;
  char v471;
  int v472;
  unsigned int v474;
  uint64_t v475;
  uint64_t v476;
  unint64_t v477;
  int v478;
  int v479;
  int v480;
  char v481;
  unsigned int v482;
  unint64_t v483;
  uint64_t v484;
  uint64_t v485;
  unint64_t v486;
  char v487;
  int v488;
  int v489;
  BOOL v490;
  uint64_t v491;
  uint64_t v492;
  unint64_t v493;
  int v494;
  unsigned int v495;
  char v496;
  unsigned int v497;
  unint64_t v498;
  uint64_t v499;
  uint64_t v500;
  unint64_t v501;
  char v502;
  uint64_t v503;
  int v504;
  int v505;
  BOOL v506;
  uint64_t v507;
  unint64_t v508;
  unint64_t v509;
  unsigned int v510;
  uint64_t v511;
  uint64_t v512;
  unint64_t v513;
  int v514;
  int v515;
  char v516;
  unsigned int v517;
  unint64_t v518;
  uint64_t v519;
  uint64_t v520;
  unint64_t v521;
  char v522;
  int v523;
  int v524;
  uint64_t v526;
  uint64_t v527;
  unint64_t v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  uint64_t v532;
  uint64_t v533;
  unint64_t v534;
  int v535;
  uint64_t v536;
  uint64_t v537;
  unint64_t v538;
  int v539;
  unsigned int v540;
  int v541;
  unsigned int v542;
  uint64_t v543;
  uint64_t v544;
  unint64_t v545;
  int v546;
  unsigned int v547;
  uint64_t v548;
  uint64_t v549;
  unint64_t v550;
  int v551;
  int v552;
  BOOL v553;
  char v554;
  unsigned int v555;
  unint64_t v556;
  uint64_t v557;
  uint64_t v558;
  unint64_t v559;
  char v560;
  int v561;
  int v562;
  BOOL v563;
  unsigned int v564;
  uint64_t v565;
  uint64_t v566;
  unint64_t v567;
  int v568;
  char v569;
  unsigned int v570;
  unint64_t v571;
  uint64_t v572;
  uint64_t v573;
  unint64_t v574;
  char v575;
  uint64_t v576;
  int v577;
  int v578;
  uint64_t v580;
  unint64_t v581;
  unint64_t v582;
  int v583;
  char v584;
  unsigned int v585;
  unint64_t v586;
  uint64_t v587;
  uint64_t v588;
  unint64_t v589;
  char v590;
  uint64_t v591;
  int v592;
  int v593;
  unint64_t v595;
  unint64_t *v596;
  unint64_t v597;
  unint64_t v598;
  uint64_t v599;
  unint64_t v600;
  uint64_t v601;
  unint64_t v602;
  unint64_t v603;
  int v604;
  char v605;
  unsigned int v606;
  unint64_t v607;
  uint64_t v608;
  uint64_t v609;
  unint64_t v610;
  char v611;
  int v612;
  int v613;
  char v615;
  unsigned int v616;
  unint64_t v617;
  uint64_t v618;
  uint64_t v619;
  unint64_t v620;
  char v621;
  uint64_t v622;
  int v623;
  int v624;
  uint64_t v626;
  unint64_t v627;
  unint64_t v628;
  unsigned int v629;
  uint64_t v630;
  uint64_t v631;
  unint64_t v632;
  int v633;
  int v634;
  int v635;
  char v636;
  unsigned int v637;
  unint64_t v638;
  uint64_t v639;
  uint64_t v640;
  unint64_t v641;
  char v642;
  uint64_t v643;
  int v644;
  int v645;
  BOOL v646;
  uint64_t v647;
  unint64_t v648;
  unint64_t v649;
  int v650;
  char v651;
  unsigned int v652;
  unint64_t v653;
  uint64_t v654;
  uint64_t v655;
  unint64_t v656;
  char v657;
  int v658;
  int v659;
  char v661;
  unsigned int v662;
  unint64_t v663;
  uint64_t v664;
  uint64_t v665;
  unint64_t v666;
  char v667;
  int v668;
  int v669;
  unsigned int v671;
  uint64_t v672;
  uint64_t v673;
  unint64_t v674;
  int v675;
  unsigned int v676;
  uint64_t v677;
  uint64_t v678;
  unint64_t v679;
  int v680;
  unsigned int v681;
  uint64_t v682;
  uint64_t v683;
  unint64_t v684;
  int v685;
  unsigned int v686;
  uint64_t v687;
  uint64_t v688;
  unint64_t v689;
  int v690;
  unsigned int v691;
  uint64_t v692;
  uint64_t v693;
  unint64_t v694;
  int v695;
  uint64_t v696;
  char v697;
  char v698;
  int v699;
  uint64_t v700;
  char v701;
  char v702;
  int v703;
  unsigned int v704;
  uint64_t v705;
  uint64_t v706;
  unint64_t v707;
  int v708;
  _BOOL4 v709;
  int v710;
  BOOL v711;
  int v712;
  unsigned int v713;
  uint64_t v714;
  uint64_t v715;
  unint64_t v716;
  int v717;
  unsigned int v718;
  uint64_t v719;
  uint64_t v720;
  unint64_t v721;
  int v722;
  _BOOL8 v723;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;

  v727 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_1518:
    v723 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v723;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_1518;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = *v4;
        v15 = a1[v14];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = *v4;
    v15 = a1[v14];
    if (a1[v14])
      v8 = 0;
LABEL_14:
    v16 = v8 & 7;
    if (v15 || v16 == 4)
      goto LABEL_1518;
    switch((v8 >> 3))
    {
      case 1u:
        if (v16 == 2)
          goto LABEL_30;
        goto LABEL_1524;
      case 2u:
        if (v16 == 2)
          goto LABEL_30;
        goto LABEL_1524;
      case 3u:
        if ((v8 & 7) != 0)
          goto LABEL_1524;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            goto LABEL_883;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0)
          {
            v23 = v18++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_1496;
        }
      case 4u:
        if (v16 != 1)
          goto LABEL_1524;
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        if (v25 > 0xFFFFFFFFFFFFFFF7)
          goto LABEL_884;
        v26 = v25 + 8;
        if (v26 > *(_QWORD *)&a1[*v3])
          goto LABEL_884;
        *(_QWORD *)&a1[v24] = v26;
        goto LABEL_1496;
      case 5u:
        if ((v8 & 7) != 0)
          goto LABEL_1524;
        v27 = 0;
        while (1)
        {
          v28 = *v2;
          v29 = *(_QWORD *)&a1[v28];
          v30 = v29 + 1;
          if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
            goto LABEL_883;
          v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
          *(_QWORD *)&a1[v28] = v30;
          if (v31 < 0)
          {
            v23 = v27++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_1496;
        }
      case 6u:
        if ((v8 & 7) != 0)
          goto LABEL_1524;
        v32 = 0;
        while (1)
        {
          v33 = *v2;
          v34 = *(_QWORD *)&a1[v33];
          v35 = v34 + 1;
          if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
            goto LABEL_883;
          v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
          *(_QWORD *)&a1[v33] = v35;
          if (v36 < 0)
          {
            v23 = v32++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_1496;
        }
      case 7u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_63:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1494;
            v37 = 0;
            v38 = 0;
            v39 = 0;
            while (2)
            {
              v40 = *v2;
              v41 = *(_QWORD *)&a1[v40];
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v43 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v41);
                *(_QWORD *)&a1[v40] = v42;
                v39 |= (unint64_t)(v43 & 0x7F) << v37;
                if (v43 < 0)
                {
                  v37 += 7;
                  v13 = v38++ >= 9;
                  if (v13)
                  {
                    v39 = 0;
                    v44 = *v4;
                    v45 = a1[v44];
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            v44 = *v4;
            v45 = a1[v44];
            if (a1[v44])
              v39 = 0;
LABEL_75:
            v46 = v39 & 7;
            if (v45)
              v47 = 1;
            else
              v47 = v46 == 4;
            if (v47)
              goto LABEL_1494;
            switch((v39 >> 3))
            {
              case 1u:
                if ((v39 & 7) != 0)
                  goto LABEL_1523;
                v51 = 0;
                while (1)
                {
                  v52 = *v2;
                  v53 = *(_QWORD *)&a1[v52];
                  v54 = v53 + 1;
                  if (v53 == -1 || v54 > *(_QWORD *)&a1[*v3])
                    break;
                  v55 = *(char *)(*(_QWORD *)&a1[*v5] + v53);
                  *(_QWORD *)&a1[v52] = v54;
                  if (v55 < 0)
                  {
                    v23 = v51++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_63;
                }
                v44 = *v4;
LABEL_138:
                a1[v44] = 1;
                continue;
              case 2u:
              case 3u:
              case 4u:
                if (v46 != 1)
                  goto LABEL_1523;
                v48 = *v2;
                v49 = *(_QWORD *)&a1[v48];
                if (v49 > 0xFFFFFFFFFFFFFFF7)
                  goto LABEL_138;
                v50 = v49 + 8;
                if (v50 > *(_QWORD *)&a1[*v3])
                  goto LABEL_138;
                *(_QWORD *)&a1[v48] = v50;
                continue;
              case 5u:
                if (v46 != 2 || !PBReaderPlaceMark())
                  goto LABEL_1523;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                break;
              case 6u:
                if (v46 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStringStringPairIsValid(a1))
                  goto LABEL_1523;
                goto LABEL_136;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            break;
          }
LABEL_97:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v56 = 0;
            v57 = 0;
            v58 = 0;
            while (1)
            {
              v59 = *v2;
              v60 = *(_QWORD *)&a1[v59];
              v61 = v60 + 1;
              if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
                break;
              v62 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v60);
              *(_QWORD *)&a1[v59] = v61;
              v58 |= (unint64_t)(v62 & 0x7F) << v56;
              if ((v62 & 0x80) == 0)
                goto LABEL_107;
              v56 += 7;
              v13 = v57++ >= 9;
              if (v13)
              {
                v58 = 0;
                v63 = *v4;
                v64 = a1[v63];
                goto LABEL_109;
              }
            }
            a1[*v4] = 1;
LABEL_107:
            v63 = *v4;
            v64 = a1[v63];
            if (a1[v63])
              v58 = 0;
LABEL_109:
            v65 = v58 & 7;
            if (v64 || v65 == 4)
              break;
            if ((v58 >> 3) == 2)
            {
              if (v65 == 1)
              {
                v72 = *v2;
                v73 = *(_QWORD *)&a1[v72];
                if (v73 <= 0xFFFFFFFFFFFFFFF7 && (v74 = v73 + 8, v74 <= *(_QWORD *)&a1[*v3]))
                  *(_QWORD *)&a1[v72] = v74;
                else
                  a1[v63] = 1;
                continue;
              }
              goto LABEL_1522;
            }
            if ((v58 >> 3) == 1)
            {
              if ((v58 & 7) == 0)
              {
                v67 = 0;
                do
                {
                  v68 = *v2;
                  v69 = *(_QWORD *)&a1[v68];
                  v70 = v69 + 1;
                  if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_97;
                  }
                  v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
                  *(_QWORD *)&a1[v68] = v70;
                  if ((v71 & 0x80000000) == 0)
                    break;
                  v23 = v67++ > 8;
                }
                while (!v23);
                continue;
              }
              goto LABEL_1522;
            }
            if (!PBReaderSkipValueWithTag())
              goto LABEL_1522;
          }
          v75 = a1[*v4];
          PBReaderRecallMark();
          if (!v75)
          {
LABEL_136:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 8u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_1272;
          v76 = 0;
          v77 = 0;
          v78 = 0;
          while (2)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v82 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v80);
              *(_QWORD *)&a1[v79] = v81;
              v78 |= (unint64_t)(v82 & 0x7F) << v76;
              if (v82 < 0)
              {
                v76 += 7;
                v13 = v77++ >= 9;
                if (v13)
                {
                  v78 = 0;
                  v83 = *v4;
                  v84 = a1[v83];
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          v83 = *v4;
          v84 = a1[v83];
          if (a1[v83])
            v78 = 0;
LABEL_154:
          v85 = v78 & 7;
          if (v84)
            v86 = 1;
          else
            v86 = v85 == 4;
          if (!v86)
          {
            switch((v78 >> 3))
            {
              case 1u:
                if (v85 == 2)
                  goto LABEL_164;
                goto LABEL_1523;
              case 2u:
                if (v85 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueFloatPairIsValid(a1))
                  goto LABEL_1523;
                goto LABEL_173;
              case 3u:
              case 4u:
                if (v85 != 5)
                  goto LABEL_1523;
                v87 = *v2;
                v88 = *(_QWORD *)&a1[v87];
                if (v88 <= 0xFFFFFFFFFFFFFFFBLL && (v89 = v88 + 4, v89 <= *(_QWORD *)&a1[*v3]))
                  *(_QWORD *)&a1[v87] = v89;
                else
                  a1[v83] = 1;
                continue;
              case 5u:
                if (v85 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStringStringPairIsValid(a1))
                  goto LABEL_1523;
LABEL_173:
                PBReaderRecallMark();
                break;
              default:
LABEL_164:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            continue;
          }
          goto LABEL_1272;
        }
      case 9u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_178:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_1272;
          v90 = 0;
          v91 = 0;
          v92 = 0;
          while (2)
          {
            v93 = *v2;
            v94 = *(_QWORD *)&a1[v93];
            v95 = v94 + 1;
            if (v94 == -1 || v95 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v96 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v94);
              *(_QWORD *)&a1[v93] = v95;
              v92 |= (unint64_t)(v96 & 0x7F) << v90;
              if (v96 < 0)
              {
                v90 += 7;
                v13 = v91++ >= 9;
                if (v13)
                {
                  v92 = 0;
                  v97 = *v4;
                  v98 = a1[v97];
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          v97 = *v4;
          v98 = a1[v97];
          if (a1[v97])
            v92 = 0;
LABEL_190:
          v99 = v92 & 7;
          if (v98)
            v100 = 1;
          else
            v100 = v99 == 4;
          if (!v100)
          {
            switch((v92 >> 3))
            {
              case 1u:
              case 0xAu:
                if (v99 != 2 || !PBReaderPlaceMark() || !GEOPDSearchSpellSuggestionIsValid(a1))
                  goto LABEL_1523;
                goto LABEL_202;
              case 2u:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v101 = 0;
                while (1)
                {
                  v102 = *v2;
                  v103 = *(_QWORD *)&a1[v102];
                  v104 = v103 + 1;
                  if (v103 == -1 || v104 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v105 = *(char *)(*(_QWORD *)&a1[*v5] + v103);
                  *(_QWORD *)&a1[v102] = v104;
                  if (v105 < 0)
                  {
                    v23 = v101++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 3u:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v106 = 0;
                while (1)
                {
                  v107 = *v2;
                  v108 = *(_QWORD *)&a1[v107];
                  v109 = v108 + 1;
                  if (v108 == -1 || v109 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v110 = *(char *)(*(_QWORD *)&a1[*v5] + v108);
                  *(_QWORD *)&a1[v107] = v109;
                  if (v110 < 0)
                  {
                    v23 = v106++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 4u:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v111 = 0;
                while (1)
                {
                  v112 = *v2;
                  v113 = *(_QWORD *)&a1[v112];
                  v114 = v113 + 1;
                  if (v113 == -1 || v114 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v115 = *(char *)(*(_QWORD *)&a1[*v5] + v113);
                  *(_QWORD *)&a1[v112] = v114;
                  if (v115 < 0)
                  {
                    v23 = v111++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 5u:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v116 = 0;
                while (1)
                {
                  v117 = *v2;
                  v118 = *(_QWORD *)&a1[v117];
                  v119 = v118 + 1;
                  if (v118 == -1 || v119 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v120 = *(char *)(*(_QWORD *)&a1[*v5] + v118);
                  *(_QWORD *)&a1[v117] = v119;
                  if (v120 < 0)
                  {
                    v23 = v116++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 6u:
              case 9u:
                if (v99 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenCandidatesIsValid(a1))
                  goto LABEL_1523;
LABEL_202:
                PBReaderRecallMark();
                continue;
              case 7u:
                if (v99 != 1)
                  goto LABEL_1523;
                v121 = *v2;
                v122 = *(_QWORD *)&a1[v121];
                if (v122 > 0xFFFFFFFFFFFFFFF7)
                  goto LABEL_290;
                v123 = v122 + 8;
                if (v123 > *(_QWORD *)&a1[*v3])
                  goto LABEL_290;
                *(_QWORD *)&a1[v121] = v123;
                continue;
              case 8u:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v124 = 0;
                while (1)
                {
                  v125 = *v2;
                  v126 = *(_QWORD *)&a1[v125];
                  v127 = v126 + 1;
                  if (v126 == -1 || v127 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v128 = *(char *)(*(_QWORD *)&a1[*v5] + v126);
                  *(_QWORD *)&a1[v125] = v127;
                  if (v128 < 0)
                  {
                    v23 = v124++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 0xBu:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v129 = 0;
                while (1)
                {
                  v130 = *v2;
                  v131 = *(_QWORD *)&a1[v130];
                  v132 = v131 + 1;
                  if (v131 == -1 || v132 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v133 = *(char *)(*(_QWORD *)&a1[*v5] + v131);
                  *(_QWORD *)&a1[v130] = v132;
                  if (v133 < 0)
                  {
                    v23 = v129++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 0xCu:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v134 = 0;
                while (1)
                {
                  v135 = *v2;
                  v136 = *(_QWORD *)&a1[v135];
                  v137 = v136 + 1;
                  if (v136 == -1 || v137 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v138 = *(char *)(*(_QWORD *)&a1[*v5] + v136);
                  *(_QWORD *)&a1[v135] = v137;
                  if (v138 < 0)
                  {
                    v23 = v134++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 0xDu:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v139 = 0;
                while (1)
                {
                  v140 = *v2;
                  v141 = *(_QWORD *)&a1[v140];
                  v142 = v141 + 1;
                  if (v141 == -1 || v142 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v143 = *(char *)(*(_QWORD *)&a1[*v5] + v141);
                  *(_QWORD *)&a1[v140] = v142;
                  if (v143 < 0)
                  {
                    v23 = v139++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 0xEu:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v144 = 0;
                while (1)
                {
                  v145 = *v2;
                  v146 = *(_QWORD *)&a1[v145];
                  v147 = v146 + 1;
                  if (v146 == -1 || v147 > *(_QWORD *)&a1[*v3])
                    goto LABEL_289;
                  v148 = *(char *)(*(_QWORD *)&a1[*v5] + v146);
                  *(_QWORD *)&a1[v145] = v147;
                  if (v148 < 0)
                  {
                    v23 = v144++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_178;
                }
              case 0xFu:
                if ((v92 & 7) != 0)
                  goto LABEL_1523;
                v149 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            while (1)
            {
              v150 = *v2;
              v151 = *(_QWORD *)&a1[v150];
              v152 = v151 + 1;
              if (v151 == -1 || v152 > *(_QWORD *)&a1[*v3])
                break;
              v153 = *(char *)(*(_QWORD *)&a1[*v5] + v151);
              *(_QWORD *)&a1[v150] = v152;
              if (v153 < 0)
              {
                v23 = v149++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_178;
            }
LABEL_289:
            v97 = *v4;
LABEL_290:
            a1[v97] = 1;
            continue;
          }
          goto LABEL_1272;
        }
      case 0xAu:
        if ((v8 & 7) != 0)
          goto LABEL_1524;
        v154 = 0;
        while (1)
        {
          v155 = *v2;
          v156 = *(_QWORD *)&a1[v155];
          v157 = v156 + 1;
          if (v156 == -1 || v157 > *(_QWORD *)&a1[*v3])
            goto LABEL_883;
          v158 = *(char *)(*(_QWORD *)&a1[*v5] + v156);
          *(_QWORD *)&a1[v155] = v157;
          if (v158 < 0)
          {
            v23 = v154++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_1496;
        }
      case 0xBu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1272;
            v159 = 0;
            v160 = 0;
            v161 = 0;
            while (1)
            {
              v162 = *v2;
              v163 = *(_QWORD *)&a1[v162];
              v164 = v163 + 1;
              if (v163 == -1 || v164 > *(_QWORD *)&a1[*v3])
                break;
              v165 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v163);
              *(_QWORD *)&a1[v162] = v164;
              v161 |= (unint64_t)(v165 & 0x7F) << v159;
              if ((v165 & 0x80) == 0)
                goto LABEL_312;
              v159 += 7;
              v13 = v160++ >= 9;
              if (v13)
              {
                v161 = 0;
                v166 = a1[*v4];
                goto LABEL_314;
              }
            }
            a1[*v4] = 1;
LABEL_312:
            v166 = a1[*v4];
            if (a1[*v4])
              v161 = 0;
LABEL_314:
            v167 = v161 & 7;
            if (v166 || v167 == 4)
              goto LABEL_1272;
            if ((v161 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_1523;
              continue;
            }
            break;
          }
          if (v167 == 2 && PBReaderPlaceMark() && GEONamedFeatureIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0xCu:
        if (v16 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_1524;
          while (1)
          {
            v169 = *v2;
            v170 = *(_QWORD *)&a1[v169];
            v171 = v170 + 1;
            if (v170 == -1 || v171 > *(_QWORD *)&a1[*v3])
              goto LABEL_883;
            v172 = *(char *)(*(_QWORD *)&a1[*v5] + v170);
            *(_QWORD *)&a1[v169] = v171;
            if (v172 < 0)
            {
              v173 = v16++;
              if (v173 <= 8)
                continue;
            }
            goto LABEL_1496;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_1524;
LABEL_1499:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v713 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v714 = *v2;
            v715 = *(_QWORD *)&a1[v714];
            v716 = v715 + 1;
            if (v715 == -1 || v716 > *(_QWORD *)&a1[*v3])
              break;
            v717 = *(char *)(*(_QWORD *)&a1[*v5] + v715);
            *(_QWORD *)&a1[v714] = v716;
            if (v717 < 0)
            {
              v13 = v713++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_1499;
          }
          a1[*v4] = 1;
        }
        goto LABEL_1495;
      case 0xDu:
        if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchQuerySynonymMetadataIsValid(a1))
          goto LABEL_1495;
        goto LABEL_1524;
      case 0xEu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_339:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1272;
            v174 = 0;
            v175 = 0;
            v176 = 0;
            while (1)
            {
              v177 = *v2;
              v178 = *(_QWORD *)&a1[v177];
              v179 = v178 + 1;
              if (v178 == -1 || v179 > *(_QWORD *)&a1[*v3])
                break;
              v180 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v178);
              *(_QWORD *)&a1[v177] = v179;
              v176 |= (unint64_t)(v180 & 0x7F) << v174;
              if ((v180 & 0x80) == 0)
                goto LABEL_349;
              v174 += 7;
              v13 = v175++ >= 9;
              if (v13)
              {
                v176 = 0;
                v181 = a1[*v4];
                goto LABEL_351;
              }
            }
            a1[*v4] = 1;
LABEL_349:
            v181 = a1[*v4];
            if (a1[*v4])
              v176 = 0;
LABEL_351:
            v182 = v176 & 7;
            if (v181 || v182 == 4)
              goto LABEL_1272;
            v184 = v176 >> 3;
            if ((v176 >> 3) != 3)
            {
              if ((_DWORD)v184 == 2)
              {
                if (v182 != 2)
                  goto LABEL_1523;
              }
              else if ((_DWORD)v184 == 1)
              {
                if ((v176 & 7) == 0)
                {
                  v185 = 0;
                  do
                  {
                    v186 = *v2;
                    v187 = *(_QWORD *)&a1[v186];
                    v188 = v187 + 1;
                    if (v187 == -1 || v188 > *(_QWORD *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                      goto LABEL_339;
                    }
                    v189 = *(char *)(*(_QWORD *)&a1[*v5] + v187);
                    *(_QWORD *)&a1[v186] = v188;
                    if ((v189 & 0x80000000) == 0)
                      break;
                    v23 = v185++ > 8;
                  }
                  while (!v23);
                  continue;
                }
                goto LABEL_1523;
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_1523;
              continue;
            }
            break;
          }
          if (v182 == 2 && PBReaderPlaceMark() && GEOPDSearchQuerySynonymMetadataIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0xFu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_377:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1272;
            v190 = 0;
            v191 = 0;
            v192 = 0;
            while (2)
            {
              v193 = *v2;
              v194 = *(_QWORD *)&a1[v193];
              v195 = v194 + 1;
              if (v194 == -1 || v195 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v196 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v194);
                *(_QWORD *)&a1[v193] = v195;
                v192 |= (unint64_t)(v196 & 0x7F) << v190;
                if (v196 < 0)
                {
                  v190 += 7;
                  v13 = v191++ >= 9;
                  if (v13)
                  {
                    v192 = 0;
                    v197 = *v4;
                    v198 = a1[v197];
                    goto LABEL_389;
                  }
                  continue;
                }
              }
              break;
            }
            v197 = *v4;
            v198 = a1[v197];
            if (a1[v197])
              v192 = 0;
LABEL_389:
            v199 = v192 & 7;
            if (v198)
              v200 = 1;
            else
              v200 = v199 == 4;
            if (v200)
              goto LABEL_1272;
            switch((v192 >> 3))
            {
              case 1u:
                if (v199 == 2)
                  goto LABEL_424;
                goto LABEL_1523;
              case 2u:
              case 5u:
                if (v199 != 5)
                  goto LABEL_1523;
                v201 = *v2;
                v202 = *(_QWORD *)&a1[v201];
                if (v202 > 0xFFFFFFFFFFFFFFFBLL)
                  goto LABEL_434;
                v203 = v202 + 4;
                if (v203 > *(_QWORD *)&a1[*v3])
                  goto LABEL_434;
                *(_QWORD *)&a1[v201] = v203;
                continue;
              case 3u:
                if ((v192 & 7) != 0)
                  goto LABEL_1523;
                v204 = 0;
                while (1)
                {
                  v205 = *v2;
                  v206 = *(_QWORD *)&a1[v205];
                  v207 = v206 + 1;
                  if (v206 == -1 || v207 > *(_QWORD *)&a1[*v3])
                    goto LABEL_433;
                  v208 = *(char *)(*(_QWORD *)&a1[*v5] + v206);
                  *(_QWORD *)&a1[v205] = v207;
                  if (v208 < 0)
                  {
                    v23 = v204++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_377;
                }
              case 4u:
                if (v199 != 2)
                {
                  if ((v192 & 7) != 0)
                    goto LABEL_1523;
                  while (1)
                  {
                    v209 = *v2;
                    v210 = *(_QWORD *)&a1[v209];
                    v211 = v210 + 1;
                    if (v210 == -1 || v211 > *(_QWORD *)&a1[*v3])
                      break;
                    v212 = *(char *)(*(_QWORD *)&a1[*v5] + v210);
                    *(_QWORD *)&a1[v209] = v211;
                    if (v212 < 0)
                    {
                      v213 = v199++;
                      if (v213 <= 8)
                        continue;
                    }
                    goto LABEL_377;
                  }
LABEL_433:
                  v197 = *v4;
LABEL_434:
                  a1[v197] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_1523;
LABEL_436:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v224 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v225 = *v2;
                    v226 = *(_QWORD *)&a1[v225];
                    v227 = v226 + 1;
                    if (v226 == -1 || v227 > *(_QWORD *)&a1[*v3])
                      break;
                    v228 = *(char *)(*(_QWORD *)&a1[*v5] + v226);
                    *(_QWORD *)&a1[v225] = v227;
                    if (v228 < 0)
                    {
                      v13 = v224++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_436;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 6u:
                if ((v192 & 7) != 0)
                  goto LABEL_1523;
                v214 = 0;
                while (1)
                {
                  v215 = *v2;
                  v216 = *(_QWORD *)&a1[v215];
                  v217 = v216 + 1;
                  if (v216 == -1 || v217 > *(_QWORD *)&a1[*v3])
                    goto LABEL_433;
                  v218 = *(char *)(*(_QWORD *)&a1[*v5] + v216);
                  *(_QWORD *)&a1[v215] = v217;
                  if (v218 < 0)
                  {
                    v23 = v214++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_377;
                }
              case 7u:
                if (v199 == 2)
                  goto LABEL_424;
                goto LABEL_1523;
              case 8u:
                if (v199 != 2)
                {
                  if ((v192 & 7) != 0)
                    goto LABEL_1523;
                  while (1)
                  {
                    v219 = *v2;
                    v220 = *(_QWORD *)&a1[v219];
                    v221 = v220 + 1;
                    if (v220 == -1 || v221 > *(_QWORD *)&a1[*v3])
                      goto LABEL_433;
                    v222 = *(char *)(*(_QWORD *)&a1[*v5] + v220);
                    *(_QWORD *)&a1[v219] = v221;
                    if (v222 < 0)
                    {
                      v223 = v199++;
                      if (v223 <= 8)
                        continue;
                    }
                    goto LABEL_377;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_1523;
LABEL_446:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v229 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v230 = *v2;
                    v231 = *(_QWORD *)&a1[v230];
                    v232 = v231 + 1;
                    if (v231 == -1 || v232 > *(_QWORD *)&a1[*v3])
                      break;
                    v233 = *(char *)(*(_QWORD *)&a1[*v5] + v231);
                    *(_QWORD *)&a1[v230] = v232;
                    if (v233 < 0)
                    {
                      v13 = v229++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_446;
                  }
                  a1[*v4] = 1;
                }
                break;
              default:
LABEL_424:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x10u:
        if (v16 != 2)
          goto LABEL_1524;
        v725 = 0;
        v726 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_459:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1343;
            v234 = 0;
            v235 = 0;
            v236 = 0;
            while (2)
            {
              v237 = *v2;
              v238 = *(_QWORD *)&a1[v237];
              v239 = v238 + 1;
              if (v238 == -1 || v239 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v240 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v238);
                *(_QWORD *)&a1[v237] = v239;
                v236 |= (unint64_t)(v240 & 0x7F) << v234;
                if (v240 < 0)
                {
                  v234 += 7;
                  v13 = v235++ >= 9;
                  if (v13)
                  {
                    v236 = 0;
                    v241 = *v4;
                    v242 = a1[v241];
                    goto LABEL_471;
                  }
                  continue;
                }
              }
              break;
            }
            v241 = *v4;
            v242 = a1[v241];
            if (a1[v241])
              v236 = 0;
LABEL_471:
            v243 = v236 & 7;
            if (v242)
              v244 = 1;
            else
              v244 = v243 == 4;
            if (v244)
              goto LABEL_1343;
            switch((v236 >> 3))
            {
              case 1u:
                if (v243 != 5)
                  goto LABEL_1523;
                v245 = *v2;
                v246 = *(_QWORD *)&a1[v245];
                if (v246 > 0xFFFFFFFFFFFFFFFBLL)
                  goto LABEL_622;
                v247 = v246 + 4;
                if (v247 > *(_QWORD *)&a1[*v3])
                  goto LABEL_622;
                *(_QWORD *)&a1[v245] = v247;
                continue;
              case 2u:
                if (v243 == 2 && PBReaderPlaceMark() && GEOPDSearchPairIsValid(a1))
                  goto LABEL_620;
                goto LABEL_1523;
              case 3u:
                if (v243 != 2 || !PBReaderPlaceMark())
                  goto LABEL_1523;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_487:
                if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
                  goto LABEL_619;
                v248 = 0;
                v249 = 0;
                v250 = 0;
                break;
              case 4u:
                if ((v236 & 7) != 0)
                  goto LABEL_1523;
                v308 = 0;
                while (1)
                {
                  v309 = *v2;
                  v310 = *(_QWORD *)&a1[v309];
                  v311 = v310 + 1;
                  if (v310 == -1 || v311 > *(_QWORD *)&a1[*v3])
                    break;
                  v312 = *(char *)(*(_QWORD *)&a1[*v5] + v310);
                  *(_QWORD *)&a1[v309] = v311;
                  if (v312 < 0)
                  {
                    v23 = v308++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_459;
                }
                v241 = *v4;
LABEL_622:
                a1[v241] = 1;
                continue;
              case 5u:
                if (v243 == 2)
                  goto LABEL_617;
                goto LABEL_1523;
              case 6u:
                if (v243 == 2)
                  goto LABEL_617;
                goto LABEL_1523;
              default:
LABEL_617:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            break;
          }
          while (1)
          {
            v251 = *v2;
            v252 = *(_QWORD *)&a1[v251];
            v253 = v252 + 1;
            if (v252 == -1 || v253 > *(_QWORD *)&a1[*v3])
              break;
            v254 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v252);
            *(_QWORD *)&a1[v251] = v253;
            v250 |= (unint64_t)(v254 & 0x7F) << v248;
            if ((v254 & 0x80) == 0)
              goto LABEL_497;
            v248 += 7;
            v13 = v249++ >= 9;
            if (v13)
            {
              v250 = 0;
              v255 = *v4;
              v256 = a1[v255];
              goto LABEL_499;
            }
          }
          a1[*v4] = 1;
LABEL_497:
          v255 = *v4;
          v256 = a1[v255];
          if (a1[v255])
            v250 = 0;
LABEL_499:
          v257 = v250 & 7;
          if (v256)
            v258 = 1;
          else
            v258 = v257 == 4;
          if (v258)
          {
LABEL_619:
            v313 = a1[*v4];
            PBReaderRecallMark();
            if (!v313)
            {
LABEL_620:
              PBReaderRecallMark();
              continue;
            }
            goto LABEL_1523;
          }
          break;
        }
        switch((v250 >> 3))
        {
          case 1u:
            if (v257 == 2)
              goto LABEL_576;
            goto LABEL_1520;
          case 2u:
            if (v257 == 2)
              goto LABEL_576;
            goto LABEL_1520;
          case 3u:
            if ((v250 & 7) != 0)
              goto LABEL_1520;
            v263 = 0;
            while (1)
            {
              v264 = *v2;
              v265 = *(_QWORD *)&a1[v264];
              v266 = v265 + 1;
              if (v265 == -1 || v266 > *(_QWORD *)&a1[*v3])
                goto LABEL_594;
              v267 = *(char *)(*(_QWORD *)&a1[*v5] + v265);
              *(_QWORD *)&a1[v264] = v266;
              if (v267 < 0)
              {
                v23 = v263++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_487;
            }
          case 4u:
            if (v257 == 2)
              goto LABEL_576;
            goto LABEL_1520;
          case 5u:
            if ((v250 & 7) != 0)
              goto LABEL_1520;
            v268 = 0;
            while (1)
            {
              v269 = *v2;
              v270 = *(_QWORD *)&a1[v269];
              v271 = v270 + 1;
              if (v270 == -1 || v271 > *(_QWORD *)&a1[*v3])
                goto LABEL_594;
              v272 = *(char *)(*(_QWORD *)&a1[*v5] + v270);
              *(_QWORD *)&a1[v269] = v271;
              if (v272 < 0)
              {
                v23 = v268++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_487;
            }
          case 6u:
          case 7u:
            if (v257 != 5)
              goto LABEL_1520;
            v259 = *v2;
            v262 = *(_QWORD *)&a1[v259];
            if (v262 > 0xFFFFFFFFFFFFFFFBLL)
              goto LABEL_595;
            v261 = v262 + 4;
            goto LABEL_510;
          case 8u:
          case 9u:
          case 0xEu:
          case 0xFu:
            if (v257 != 1)
              goto LABEL_1520;
            v259 = *v2;
            v260 = *(_QWORD *)&a1[v259];
            if (v260 > 0xFFFFFFFFFFFFFFF7)
              goto LABEL_595;
            v261 = v260 + 8;
LABEL_510:
            if (v261 > *(_QWORD *)&a1[*v3])
              goto LABEL_595;
            *(_QWORD *)&a1[v259] = v261;
            goto LABEL_487;
          case 0xAu:
            if (v257 == 2)
              goto LABEL_576;
            goto LABEL_1520;
          case 0xBu:
            if ((v250 & 7) != 0)
              goto LABEL_1520;
            v273 = 0;
            while (1)
            {
              v274 = *v2;
              v275 = *(_QWORD *)&a1[v274];
              v276 = v275 + 1;
              if (v275 == -1 || v276 > *(_QWORD *)&a1[*v3])
                goto LABEL_594;
              v277 = *(char *)(*(_QWORD *)&a1[*v5] + v275);
              *(_QWORD *)&a1[v274] = v276;
              if (v277 < 0)
              {
                v23 = v273++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_487;
            }
          case 0xCu:
            if (v257 == 2)
            {
              if (PBReaderPlaceMark())
              {
                while (1)
                {
LABEL_597:
                  if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v303 = a1[*v4], a1[*v4]))
                  {
LABEL_585:
                    PBReaderRecallMark();
                    goto LABEL_487;
                  }
                  while (1)
                  {
                    v304 = *v2;
                    v305 = *(_QWORD *)&a1[v304];
                    v306 = v305 + 1;
                    if (v305 == -1 || v306 > *(_QWORD *)&a1[*v3])
                      break;
                    v307 = *(char *)(*(_QWORD *)&a1[*v5] + v305);
                    *(_QWORD *)&a1[v304] = v306;
                    if (v307 < 0)
                    {
                      v13 = v303++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_597;
                  }
                  a1[*v4] = 1;
                }
              }
            }
            else if ((v250 & 7) == 0)
            {
              while (1)
              {
                v278 = *v2;
                v279 = *(_QWORD *)&a1[v278];
                v280 = v279 + 1;
                if (v279 == -1 || v280 > *(_QWORD *)&a1[*v3])
                  break;
                v281 = *(char *)(*(_QWORD *)&a1[*v5] + v279);
                *(_QWORD *)&a1[v278] = v280;
                if (v281 < 0)
                {
                  v282 = v257++;
                  if (v282 <= 8)
                    continue;
                }
                goto LABEL_487;
              }
LABEL_594:
              v255 = *v4;
LABEL_595:
              a1[v255] = 1;
              goto LABEL_487;
            }
            break;
          case 0xDu:
            if ((v250 & 7) != 0)
              goto LABEL_1520;
            v283 = 0;
            while (1)
            {
              v284 = *v2;
              v285 = *(_QWORD *)&a1[v284];
              v286 = v285 + 1;
              if (v285 == -1 || v286 > *(_QWORD *)&a1[*v3])
                goto LABEL_594;
              v287 = *(char *)(*(_QWORD *)&a1[*v5] + v285);
              *(_QWORD *)&a1[v284] = v286;
              if (v287 < 0)
              {
                v23 = v283++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_487;
            }
          case 0x10u:
            if ((v250 & 7) != 0)
              goto LABEL_1520;
            v288 = 0;
            while (1)
            {
              v289 = *v2;
              v290 = *(_QWORD *)&a1[v289];
              v291 = v290 + 1;
              if (v290 == -1 || v291 > *(_QWORD *)&a1[*v3])
                goto LABEL_594;
              v292 = *(char *)(*(_QWORD *)&a1[*v5] + v290);
              *(_QWORD *)&a1[v289] = v291;
              if (v292 < 0)
              {
                v23 = v288++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_487;
            }
          case 0x11u:
            if ((v250 & 7) != 0)
              goto LABEL_1520;
            v293 = 0;
            while (1)
            {
              v294 = *v2;
              v295 = *(_QWORD *)&a1[v294];
              v296 = v295 + 1;
              if (v295 == -1 || v296 > *(_QWORD *)&a1[*v3])
                goto LABEL_594;
              v297 = *(char *)(*(_QWORD *)&a1[*v5] + v295);
              *(_QWORD *)&a1[v294] = v296;
              if (v297 < 0)
              {
                v23 = v293++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_487;
            }
          case 0x12u:
            if (v257 == 2)
              goto LABEL_576;
            goto LABEL_1520;
          case 0x13u:
            if (v257 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValuePairIsValid(a1))
              goto LABEL_1520;
            goto LABEL_585;
          case 0x14u:
            if (v257 == 2 && PBReaderPlaceMark() && GEOPDSearchRelatedCategoryIsValid(a1))
              goto LABEL_585;
            goto LABEL_1520;
          case 0x15u:
            if ((v250 & 7) != 0)
              goto LABEL_1520;
            v298 = 0;
            while (1)
            {
              v299 = *v2;
              v300 = *(_QWORD *)&a1[v299];
              v301 = v300 + 1;
              if (v300 == -1 || v301 > *(_QWORD *)&a1[*v3])
                goto LABEL_594;
              v302 = *(char *)(*(_QWORD *)&a1[*v5] + v300);
              *(_QWORD *)&a1[v299] = v301;
              if (v302 < 0)
              {
                v23 = v298++ > 8;
                if (!v23)
                  continue;
              }
              goto LABEL_487;
            }
          default:
LABEL_576:
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_1520;
            goto LABEL_487;
        }
        goto LABEL_1520;
      case 0x11u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_626:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_1379;
          v314 = 0;
          v315 = 0;
          v316 = 0;
          while (2)
          {
            v317 = *v2;
            v318 = *(_QWORD *)&a1[v317];
            v319 = v318 + 1;
            if (v318 == -1 || v319 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v320 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v318);
              *(_QWORD *)&a1[v317] = v319;
              v316 |= (unint64_t)(v320 & 0x7F) << v314;
              if (v320 < 0)
              {
                v314 += 7;
                v13 = v315++ >= 9;
                if (v13)
                {
                  v316 = 0;
                  v321 = a1[*v4];
                  goto LABEL_638;
                }
                continue;
              }
            }
            break;
          }
          v321 = a1[*v4];
          if (a1[*v4])
            v316 = 0;
LABEL_638:
          v322 = v316 & 7;
          if (v321)
            v323 = 1;
          else
            v323 = v322 == 4;
          if (!v323)
          {
            switch((v316 >> 3))
            {
              case 1u:
                if ((v316 & 7) != 0)
                  goto LABEL_1523;
                v324 = 0;
                while (1)
                {
                  v325 = *v2;
                  v326 = *(_QWORD *)&a1[v325];
                  v327 = v326 + 1;
                  if (v326 == -1 || v327 > *(_QWORD *)&a1[*v3])
                    goto LABEL_679;
                  v328 = *(char *)(*(_QWORD *)&a1[*v5] + v326);
                  *(_QWORD *)&a1[v325] = v327;
                  if (v328 < 0)
                  {
                    v23 = v324++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_626;
                }
              case 2u:
                if (v322 == 2)
                  goto LABEL_681;
                goto LABEL_1523;
              case 3u:
                if ((v316 & 7) != 0)
                  goto LABEL_1523;
                v329 = 0;
                while (1)
                {
                  v330 = *v2;
                  v331 = *(_QWORD *)&a1[v330];
                  v332 = v331 + 1;
                  if (v331 == -1 || v332 > *(_QWORD *)&a1[*v3])
                    goto LABEL_679;
                  v333 = *(char *)(*(_QWORD *)&a1[*v5] + v331);
                  *(_QWORD *)&a1[v330] = v332;
                  if (v333 < 0)
                  {
                    v23 = v329++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_626;
                }
              case 4u:
                if ((v316 & 7) != 0)
                  goto LABEL_1523;
                v334 = 0;
                while (1)
                {
                  v335 = *v2;
                  v336 = *(_QWORD *)&a1[v335];
                  v337 = v336 + 1;
                  if (v336 == -1 || v337 > *(_QWORD *)&a1[*v3])
                    goto LABEL_679;
                  v338 = *(char *)(*(_QWORD *)&a1[*v5] + v336);
                  *(_QWORD *)&a1[v335] = v337;
                  if (v338 < 0)
                  {
                    v23 = v334++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_626;
                }
              case 5u:
                if (v322 == 2)
                  goto LABEL_681;
                goto LABEL_1523;
              case 6u:
                if ((v316 & 7) != 0)
                  goto LABEL_1523;
                v339 = 0;
                do
                {
                  v340 = *v2;
                  v341 = *(_QWORD *)&a1[v340];
                  v342 = v341 + 1;
                  if (v341 == -1 || v342 > *(_QWORD *)&a1[*v3])
                  {
LABEL_679:
                    a1[*v4] = 1;
                    goto LABEL_626;
                  }
                  v343 = *(char *)(*(_QWORD *)&a1[*v5] + v341);
                  *(_QWORD *)&a1[v340] = v342;
                  if ((v343 & 0x80000000) == 0)
                    break;
                  v23 = v339++ > 8;
                }
                while (!v23);
                break;
              case 7u:
                if (v322 == 2)
                  goto LABEL_681;
                goto LABEL_1523;
              default:
LABEL_681:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            continue;
          }
          goto LABEL_1379;
        }
      case 0x12u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v344 = 0;
            v345 = 0;
            v346 = 0;
            while (1)
            {
              v347 = *v2;
              v348 = *(_QWORD *)&a1[v347];
              v349 = v348 + 1;
              if (v348 == -1 || v349 > *(_QWORD *)&a1[*v3])
                break;
              v350 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v348);
              *(_QWORD *)&a1[v347] = v349;
              v346 |= (unint64_t)(v350 & 0x7F) << v344;
              if ((v350 & 0x80) == 0)
                goto LABEL_696;
              v344 += 7;
              v13 = v345++ >= 9;
              if (v13)
              {
                v346 = 0;
                v351 = a1[*v4];
                goto LABEL_698;
              }
            }
            a1[*v4] = 1;
LABEL_696:
            v351 = a1[*v4];
            if (a1[*v4])
              v346 = 0;
LABEL_698:
            v352 = v346 & 7;
            if (!v351 && v352 != 4)
            {
              v354 = v346 >> 3;
              if ((v346 >> 3) == 3)
              {
                if (v352 != 2)
                  goto LABEL_1523;
              }
              else if ((_DWORD)v354 == 2)
              {
                if (v352 != 2)
                  goto LABEL_1523;
              }
              else
              {
                if ((_DWORD)v354 != 1)
                {
                  if (!PBReaderSkipValueWithTag())
                    goto LABEL_1523;
                  continue;
                }
                if (v352 != 2)
                  goto LABEL_1523;
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_1523;
              continue;
            }
          }
          goto LABEL_1379;
        }
      case 0x13u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_717:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_1272;
          v355 = 0;
          v356 = 0;
          v357 = 0;
          while (2)
          {
            v358 = *v2;
            v359 = *(_QWORD *)&a1[v358];
            v360 = v359 + 1;
            if (v359 == -1 || v360 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v361 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v359);
              *(_QWORD *)&a1[v358] = v360;
              v357 |= (unint64_t)(v361 & 0x7F) << v355;
              if (v361 < 0)
              {
                v355 += 7;
                v13 = v356++ >= 9;
                if (v13)
                {
                  v357 = 0;
                  v362 = a1[*v4];
                  goto LABEL_729;
                }
                continue;
              }
            }
            break;
          }
          v362 = a1[*v4];
          if (a1[*v4])
            v357 = 0;
LABEL_729:
          v363 = v357 & 7;
          if (v362)
            v364 = 1;
          else
            v364 = v363 == 4;
          if (v364)
            goto LABEL_1272;
          switch((v357 >> 3))
          {
            case 1u:
              if (v363 == 2)
                goto LABEL_743;
              goto LABEL_1523;
            case 2u:
              if (v363 == 2)
                goto LABEL_743;
              goto LABEL_1523;
            case 3u:
              if (v363 == 2)
                goto LABEL_743;
              goto LABEL_1523;
            case 4u:
              if (v363 == 2)
                goto LABEL_743;
              goto LABEL_1523;
            case 5u:
              if (v363 == 2)
                goto LABEL_743;
              goto LABEL_1523;
            case 6u:
              if (v363 == 2)
              {
                if (PBReaderPlaceMark())
                {
                  while (1)
                  {
LABEL_753:
                    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v370 = a1[*v4], a1[*v4]))
                    {
                      PBReaderRecallMark();
                      goto LABEL_717;
                    }
                    while (1)
                    {
                      v371 = *v2;
                      v372 = *(_QWORD *)&a1[v371];
                      v373 = v372 + 1;
                      if (v372 == -1 || v373 > *(_QWORD *)&a1[*v3])
                        break;
                      v374 = *(char *)(*(_QWORD *)&a1[*v5] + v372);
                      *(_QWORD *)&a1[v371] = v373;
                      if (v374 < 0)
                      {
                        v13 = v370++ >= 9;
                        if (!v13)
                          continue;
                      }
                      goto LABEL_753;
                    }
                    a1[*v4] = 1;
                  }
                }
              }
              else if ((v357 & 7) == 0)
              {
                do
                {
                  v365 = *v2;
                  v366 = *(_QWORD *)&a1[v365];
                  v367 = v366 + 1;
                  if (v366 == -1 || v367 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_717;
                  }
                  v368 = *(char *)(*(_QWORD *)&a1[*v5] + v366);
                  *(_QWORD *)&a1[v365] = v367;
                  if ((v368 & 0x80000000) == 0)
                    break;
                  v369 = v363++;
                }
                while (v369 <= 8);
                continue;
              }
              break;
            default:
LABEL_743:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_1523;
              continue;
          }
          goto LABEL_1523;
        }
      case 0x14u:
      case 0x1Bu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchQueryTokenizerMetadataIsValid(a1))
          goto LABEL_1524;
        goto LABEL_1495;
      case 0x15u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_767:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1379;
            v375 = 0;
            v376 = 0;
            v377 = 0;
            while (1)
            {
              v378 = *v2;
              v379 = *(_QWORD *)&a1[v378];
              v380 = v379 + 1;
              if (v379 == -1 || v380 > *(_QWORD *)&a1[*v3])
                break;
              v381 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v379);
              *(_QWORD *)&a1[v378] = v380;
              v377 |= (unint64_t)(v381 & 0x7F) << v375;
              if ((v381 & 0x80) == 0)
                goto LABEL_777;
              v375 += 7;
              v13 = v376++ >= 9;
              if (v13)
              {
                v377 = 0;
                v382 = a1[*v4];
                goto LABEL_779;
              }
            }
            a1[*v4] = 1;
LABEL_777:
            v382 = a1[*v4];
            if (a1[*v4])
              v377 = 0;
LABEL_779:
            v383 = v377 & 7;
            if (v382 || v383 == 4)
              goto LABEL_1379;
            v385 = v377 >> 3;
            if ((v377 >> 3) != 3)
            {
              if ((_DWORD)v385 == 2)
              {
                if (v383 != 2)
                  goto LABEL_1523;
              }
              else
              {
                if ((_DWORD)v385 != 1)
                {
                  if (!PBReaderSkipValueWithTag())
                    goto LABEL_1523;
                  continue;
                }
                if (v383 != 2)
                  goto LABEL_1523;
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_1523;
              continue;
            }
            break;
          }
          if ((v377 & 7) == 0)
          {
            v386 = 0;
            do
            {
              v387 = *v2;
              v388 = *(_QWORD *)&a1[v387];
              v389 = v388 + 1;
              if (v388 == -1 || v389 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_767;
              }
              v390 = *(char *)(*(_QWORD *)&a1[*v5] + v388);
              *(_QWORD *)&a1[v387] = v389;
              if ((v390 & 0x80000000) == 0)
                break;
              v23 = v386++ > 8;
            }
            while (!v23);
            continue;
          }
          goto LABEL_1523;
        }
      case 0x16u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_805:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1272;
            v391 = 0;
            v392 = 0;
            v393 = 0;
            while (2)
            {
              v394 = *v2;
              v395 = *(_QWORD *)&a1[v394];
              v396 = v395 + 1;
              if (v395 == -1 || v396 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v397 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v395);
                *(_QWORD *)&a1[v394] = v396;
                v393 |= (unint64_t)(v397 & 0x7F) << v391;
                if (v397 < 0)
                {
                  v391 += 7;
                  v13 = v392++ >= 9;
                  if (v13)
                  {
                    v393 = 0;
                    v398 = *v4;
                    v399 = a1[v398];
                    goto LABEL_817;
                  }
                  continue;
                }
              }
              break;
            }
            v398 = *v4;
            v399 = a1[v398];
            if (a1[v398])
              v393 = 0;
LABEL_817:
            v400 = v393 & 7;
            if (v399)
              v401 = 1;
            else
              v401 = v400 == 4;
            if (v401)
              goto LABEL_1272;
            switch((v393 >> 3))
            {
              case 1u:
                if (v400 == 2)
                  goto LABEL_823;
                goto LABEL_1523;
              case 2u:
                if ((v393 & 7) != 0)
                  goto LABEL_1523;
                v402 = 0;
                while (1)
                {
                  v403 = *v2;
                  v404 = *(_QWORD *)&a1[v403];
                  v405 = v404 + 1;
                  if (v404 == -1 || v405 > *(_QWORD *)&a1[*v3])
                    goto LABEL_857;
                  v406 = *(char *)(*(_QWORD *)&a1[*v5] + v404);
                  *(_QWORD *)&a1[v403] = v405;
                  if (v406 < 0)
                  {
                    v23 = v402++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_805;
                }
              case 3u:
                if ((v393 & 7) != 0)
                  goto LABEL_1523;
                v407 = 0;
                while (1)
                {
                  v408 = *v2;
                  v409 = *(_QWORD *)&a1[v408];
                  v410 = v409 + 1;
                  if (v409 == -1 || v410 > *(_QWORD *)&a1[*v3])
                    goto LABEL_857;
                  v411 = *(char *)(*(_QWORD *)&a1[*v5] + v409);
                  *(_QWORD *)&a1[v408] = v410;
                  if (v411 < 0)
                  {
                    v23 = v407++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_805;
                }
              case 4u:
                if (v400 != 1)
                {
                  if (v400 != 2 || !PBReaderPlaceMark())
                    goto LABEL_1523;
                  while (1)
                  {
                    v412 = (unint64_t *)&a1[*v2];
                    v413 = *v412;
                    v414 = *(_QWORD *)&a1[*v3];
                    if (*v412 >= v414)
                      break;
                    v415 = *v4;
                    if (a1[v415])
                      break;
                    if (v413 > 0xFFFFFFFFFFFFFFF7 || (v416 = v413 + 8, v416 > v414))
                      a1[v415] = 1;
                    else
                      *v412 = v416;
                  }
                  goto LABEL_862;
                }
                v422 = *v2;
                v423 = *(_QWORD *)&a1[v422];
                if (v423 <= 0xFFFFFFFFFFFFFFF7)
                {
                  v424 = v423 + 8;
                  if (v424 <= *(_QWORD *)&a1[*v3])
                  {
                    *(_QWORD *)&a1[v422] = v424;
                    continue;
                  }
                }
                break;
              case 5u:
                if (v400 == 2)
                {
                  if (!PBReaderPlaceMark())
                    goto LABEL_1523;
LABEL_867:
                  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                  {
                    v425 = a1[*v4];
                    if (a1[*v4])
                      break;
                    while (1)
                    {
                      v426 = *v2;
                      v427 = *(_QWORD *)&a1[v426];
                      v428 = v427 + 1;
                      if (v427 == -1 || v428 > *(_QWORD *)&a1[*v3])
                        break;
                      v429 = *(char *)(*(_QWORD *)&a1[*v5] + v427);
                      *(_QWORD *)&a1[v426] = v428;
                      if (v429 < 0)
                      {
                        v13 = v425++ >= 9;
                        if (!v13)
                          continue;
                      }
                      goto LABEL_867;
                    }
                    a1[*v4] = 1;
                  }
LABEL_862:
                  PBReaderRecallMark();
                  continue;
                }
                if ((v393 & 7) != 0)
                  goto LABEL_1523;
                while (1)
                {
                  v417 = *v2;
                  v418 = *(_QWORD *)&a1[v417];
                  v419 = v418 + 1;
                  if (v418 == -1 || v419 > *(_QWORD *)&a1[*v3])
                    break;
                  v420 = *(char *)(*(_QWORD *)&a1[*v5] + v418);
                  *(_QWORD *)&a1[v417] = v419;
                  if (v420 < 0)
                  {
                    v421 = v400++;
                    if (v421 <= 8)
                      continue;
                  }
                  goto LABEL_805;
                }
LABEL_857:
                v398 = *v4;
                break;
              case 6u:
                if (v400 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1))
                  goto LABEL_862;
                goto LABEL_1523;
              default:
LABEL_823:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            break;
          }
          a1[v398] = 1;
          continue;
        }
      case 0x17u:
        if (v16 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_1524;
          while (1)
          {
            v430 = *v2;
            v431 = *(_QWORD *)&a1[v430];
            v432 = v431 + 1;
            if (v431 == -1 || v432 > *(_QWORD *)&a1[*v3])
              break;
            v433 = *(char *)(*(_QWORD *)&a1[*v5] + v431);
            *(_QWORD *)&a1[v430] = v432;
            if (v433 < 0)
            {
              v434 = v16++;
              if (v434 <= 8)
                continue;
            }
            goto LABEL_1496;
          }
LABEL_883:
          v14 = *v4;
LABEL_884:
          a1[v14] = 1;
          goto LABEL_1496;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_1524;
LABEL_1509:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v718 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v719 = *v2;
            v720 = *(_QWORD *)&a1[v719];
            v721 = v720 + 1;
            if (v720 == -1 || v721 > *(_QWORD *)&a1[*v3])
              break;
            v722 = *(char *)(*(_QWORD *)&a1[*v5] + v720);
            *(_QWORD *)&a1[v719] = v721;
            if (v722 < 0)
            {
              v13 = v718++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_1509;
          }
          a1[*v4] = 1;
        }
        goto LABEL_1495;
      case 0x18u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1272;
            v435 = 0;
            v436 = 0;
            v437 = 0;
            while (1)
            {
              v438 = *v2;
              v439 = *(_QWORD *)&a1[v438];
              v440 = v439 + 1;
              if (v439 == -1 || v440 > *(_QWORD *)&a1[*v3])
                break;
              v441 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v439);
              *(_QWORD *)&a1[v438] = v440;
              v437 |= (unint64_t)(v441 & 0x7F) << v435;
              if ((v441 & 0x80) == 0)
                goto LABEL_898;
              v435 += 7;
              v13 = v436++ >= 9;
              if (v13)
              {
                v437 = 0;
                v442 = a1[*v4];
                goto LABEL_900;
              }
            }
            a1[*v4] = 1;
LABEL_898:
            v442 = a1[*v4];
            if (a1[*v4])
              v437 = 0;
LABEL_900:
            v443 = v437 & 7;
            if (v442 || v443 == 4)
              goto LABEL_1272;
            if ((v437 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_1523;
              continue;
            }
            break;
          }
          if (v443 == 2 && PBReaderPlaceMark() && GEONamedFeatureIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0x19u:
        if (v16 != 2)
          goto LABEL_1524;
        v725 = 0;
        v726 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1343;
            v445 = 0;
            v446 = 0;
            v447 = 0;
            while (2)
            {
              v448 = *v2;
              v449 = *(_QWORD *)&a1[v448];
              v450 = v449 + 1;
              if (v449 == -1 || v450 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v451 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v449);
                *(_QWORD *)&a1[v448] = v450;
                v447 |= (unint64_t)(v451 & 0x7F) << v445;
                if (v451 < 0)
                {
                  v445 += 7;
                  v13 = v446++ >= 9;
                  if (v13)
                  {
                    v447 = 0;
                    v452 = a1[*v4];
                    goto LABEL_926;
                  }
                  continue;
                }
              }
              break;
            }
            v452 = a1[*v4];
            if (a1[*v4])
              v447 = 0;
LABEL_926:
            v453 = v447 & 7;
            if (v452)
              v454 = 1;
            else
              v454 = v453 == 4;
            if (v454)
              goto LABEL_1343;
            switch((v447 >> 3))
            {
              case 1u:
                if (v453 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueFloatPairIsValid(a1))
                  goto LABEL_1523;
                break;
              case 2u:
                if (v453 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteEntryIsValid(a1))
                  break;
                goto LABEL_1523;
              case 3u:
                if (v453 != 2 || !PBReaderPlaceMark())
                  goto LABEL_1523;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                while (2)
                {
                  if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                  {
                    v455 = 0;
                    v456 = 0;
                    v457 = 0;
                    while (1)
                    {
                      v458 = *v2;
                      v459 = *(_QWORD *)&a1[v458];
                      v460 = v459 + 1;
                      if (v459 == -1 || v460 > *(_QWORD *)&a1[*v3])
                        break;
                      v461 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v459);
                      *(_QWORD *)&a1[v458] = v460;
                      v457 |= (unint64_t)(v461 & 0x7F) << v455;
                      if ((v461 & 0x80) == 0)
                        goto LABEL_954;
                      v455 += 7;
                      v13 = v456++ >= 9;
                      if (v13)
                      {
                        v457 = 0;
                        v462 = a1[*v4];
                        goto LABEL_956;
                      }
                    }
                    a1[*v4] = 1;
LABEL_954:
                    v462 = a1[*v4];
                    if (a1[*v4])
                      v457 = 0;
LABEL_956:
                    v463 = v457 & 7;
                    if (!v462 && v463 != 4)
                    {
                      if ((v457 >> 3) != 2 && (v457 >> 3) != 1)
                      {
                        if ((PBReaderSkipValueWithTag() & 1) == 0)
                          goto LABEL_1520;
                        continue;
                      }
                      if (v463 == 2 && PBReaderPlaceMark() && GEOPDSearchEntryIsValid(a1))
                      {
                        PBReaderRecallMark();
                        continue;
                      }
LABEL_1520:
                      PBReaderRecallMark();
                      goto LABEL_1523;
                    }
                  }
                  break;
                }
                v480 = a1[*v4];
                PBReaderRecallMark();
                if (v480)
                  goto LABEL_1523;
                break;
              case 4u:
                if (v453 != 2 || !PBReaderPlaceMark())
                  goto LABEL_1523;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_971:
                while (2)
                {
                  if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                  {
                    v465 = 0;
                    v466 = 0;
                    v467 = 0;
                    while (1)
                    {
                      v468 = *v2;
                      v469 = *(_QWORD *)&a1[v468];
                      v470 = v469 + 1;
                      if (v469 == -1 || v470 > *(_QWORD *)&a1[*v3])
                        break;
                      v471 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v469);
                      *(_QWORD *)&a1[v468] = v470;
                      v467 |= (unint64_t)(v471 & 0x7F) << v465;
                      if ((v471 & 0x80) == 0)
                        goto LABEL_981;
                      v465 += 7;
                      v13 = v466++ >= 9;
                      if (v13)
                      {
                        v467 = 0;
                        v472 = a1[*v4];
                        goto LABEL_983;
                      }
                    }
                    a1[*v4] = 1;
LABEL_981:
                    v472 = a1[*v4];
                    if (a1[*v4])
                      v467 = 0;
LABEL_983:
                    if (!v472 && (v467 & 7) != 4)
                    {
                      if ((v467 >> 3) != 1)
                      {
                        if (!PBReaderSkipValueWithTag())
                          goto LABEL_1520;
                        continue;
                      }
                      if ((v467 & 7) == 0)
                      {
                        v474 = 0;
                        do
                        {
                          v475 = *v2;
                          v476 = *(_QWORD *)&a1[v475];
                          v477 = v476 + 1;
                          if (v476 == -1 || v477 > *(_QWORD *)&a1[*v3])
                          {
                            a1[*v4] = 1;
                            goto LABEL_971;
                          }
                          v478 = *(char *)(*(_QWORD *)&a1[*v5] + v476);
                          *(_QWORD *)&a1[v475] = v477;
                          if ((v478 & 0x80000000) == 0)
                            break;
                          v23 = v474++ > 8;
                        }
                        while (!v23);
                        continue;
                      }
                      goto LABEL_1520;
                    }
                  }
                  break;
                }
                v479 = a1[*v4];
                PBReaderRecallMark();
                if (v479)
                  goto LABEL_1523;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x1Au:
        if (v16 != 2)
          goto LABEL_1524;
        v725 = 0;
        v726 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1006:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1343;
            v481 = 0;
            v482 = 0;
            v483 = 0;
            while (2)
            {
              v484 = *v2;
              v485 = *(_QWORD *)&a1[v484];
              v486 = v485 + 1;
              if (v485 == -1 || v486 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v487 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v485);
                *(_QWORD *)&a1[v484] = v486;
                v483 |= (unint64_t)(v487 & 0x7F) << v481;
                if (v487 < 0)
                {
                  v481 += 7;
                  v13 = v482++ >= 9;
                  if (v13)
                  {
                    v483 = 0;
                    v488 = a1[*v4];
                    goto LABEL_1018;
                  }
                  continue;
                }
              }
              break;
            }
            v488 = a1[*v4];
            if (a1[*v4])
              v483 = 0;
LABEL_1018:
            v489 = v483 & 7;
            if (v488)
              v490 = 1;
            else
              v490 = v489 == 4;
            if (v490)
              goto LABEL_1343;
            switch((v483 >> 3))
            {
              case 1u:
                if (v489 != 2)
                {
                  if ((v483 & 7) != 0)
                    goto LABEL_1523;
                  while (1)
                  {
                    v491 = *v2;
                    v492 = *(_QWORD *)&a1[v491];
                    v493 = v492 + 1;
                    if (v492 == -1 || v493 > *(_QWORD *)&a1[*v3])
                      break;
                    v494 = *(char *)(*(_QWORD *)&a1[*v5] + v492);
                    *(_QWORD *)&a1[v491] = v493;
                    if (v494 < 0)
                    {
                      v495 = v489++;
                      if (v495 <= 8)
                        continue;
                    }
                    goto LABEL_1006;
                  }
LABEL_1129:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_1523;
LABEL_1131:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v542 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v543 = *v2;
                    v544 = *(_QWORD *)&a1[v543];
                    v545 = v544 + 1;
                    if (v544 == -1 || v545 > *(_QWORD *)&a1[*v3])
                      break;
                    v546 = *(char *)(*(_QWORD *)&a1[*v5] + v544);
                    *(_QWORD *)&a1[v543] = v545;
                    if (v546 < 0)
                    {
                      v13 = v542++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_1131;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 2u:
                if (v489 != 2 || !PBReaderPlaceMark())
                  goto LABEL_1523;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_1035:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                {
                  v496 = 0;
                  v497 = 0;
                  v498 = 0;
                  while (2)
                  {
                    v499 = *v2;
                    v500 = *(_QWORD *)&a1[v499];
                    v501 = v500 + 1;
                    if (v500 == -1 || v501 > *(_QWORD *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                    }
                    else
                    {
                      v502 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v500);
                      *(_QWORD *)&a1[v499] = v501;
                      v498 |= (unint64_t)(v502 & 0x7F) << v496;
                      if (v502 < 0)
                      {
                        v496 += 7;
                        v13 = v497++ >= 9;
                        if (v13)
                        {
                          v498 = 0;
                          v503 = *v4;
                          v504 = a1[v503];
                          goto LABEL_1047;
                        }
                        continue;
                      }
                    }
                    break;
                  }
                  v503 = *v4;
                  v504 = a1[v503];
                  if (a1[v503])
                    v498 = 0;
LABEL_1047:
                  v505 = v498 & 7;
                  if (v504)
                    v506 = 1;
                  else
                    v506 = v505 == 4;
                  if (!v506)
                  {
                    switch((v498 >> 3))
                    {
                      case 1u:
                      case 4u:
                        if (v505 != 2
                          || !PBReaderPlaceMark()
                          || !GEOPDSearchAddressLabeledTokenIsValid(a1))
                        {
                          goto LABEL_1520;
                        }
                        PBReaderRecallMark();
                        continue;
                      case 2u:
                        if (v505 != 1)
                          goto LABEL_1520;
                        v507 = *v2;
                        v508 = *(_QWORD *)&a1[v507];
                        if (v508 > 0xFFFFFFFFFFFFFFF7)
                          goto LABEL_1072;
                        v509 = v508 + 8;
                        if (v509 > *(_QWORD *)&a1[*v3])
                          goto LABEL_1072;
                        *(_QWORD *)&a1[v507] = v509;
                        continue;
                      case 3u:
                        if ((v498 & 7) != 0)
                          goto LABEL_1520;
                        v510 = 0;
                        break;
                      case 5u:
                        if (v505 == 2)
                          goto LABEL_1069;
                        goto LABEL_1520;
                      default:
LABEL_1069:
                        if ((PBReaderSkipValueWithTag() & 1) == 0)
                          goto LABEL_1520;
                        continue;
                    }
                    while (1)
                    {
                      v511 = *v2;
                      v512 = *(_QWORD *)&a1[v511];
                      v513 = v512 + 1;
                      if (v512 == -1 || v513 > *(_QWORD *)&a1[*v3])
                        break;
                      v514 = *(char *)(*(_QWORD *)&a1[*v5] + v512);
                      *(_QWORD *)&a1[v511] = v513;
                      if (v514 < 0)
                      {
                        v23 = v510++ > 8;
                        if (!v23)
                          continue;
                      }
                      goto LABEL_1035;
                    }
                    v503 = *v4;
LABEL_1072:
                    a1[v503] = 1;
                    continue;
                  }
                  break;
                }
                v541 = a1[*v4];
                PBReaderRecallMark();
                if (v541)
                  goto LABEL_1523;
                goto LABEL_1156;
              case 3u:
                if (v489 != 2 || !PBReaderPlaceMark())
                  goto LABEL_1523;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                {
                  v515 = 0;
                }
                else
                {
                  v515 = 0;
                  do
                  {
                    if (a1[*v4])
                      break;
                    v516 = 0;
                    v517 = 0;
                    v518 = 0;
                    while (1)
                    {
                      v519 = *v2;
                      v520 = *(_QWORD *)&a1[v519];
                      v521 = v520 + 1;
                      if (v520 == -1 || v521 > *(_QWORD *)&a1[*v3])
                        break;
                      v522 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v520);
                      *(_QWORD *)&a1[v519] = v521;
                      v518 |= (unint64_t)(v522 & 0x7F) << v516;
                      if ((v522 & 0x80) == 0)
                        goto LABEL_1086;
                      v516 += 7;
                      v13 = v517++ >= 9;
                      if (v13)
                      {
                        v518 = 0;
                        v523 = a1[*v4];
                        goto LABEL_1088;
                      }
                    }
                    a1[*v4] = 1;
LABEL_1086:
                    v523 = a1[*v4];
                    if (a1[*v4])
                      v518 = 0;
LABEL_1088:
                    v524 = v518 & 7;
                    if (v523 || v524 == 4)
                      break;
                    if ((v518 >> 3) == 2)
                    {
                      if (v524 == 2)
                      {
                        if (!PBReaderPlaceMark())
                          goto LABEL_1520;
LABEL_1107:
                        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                        {
                          v531 = a1[*v4];
                          if (a1[*v4])
                            break;
                          while (1)
                          {
                            v532 = *v2;
                            v533 = *(_QWORD *)&a1[v532];
                            v534 = v533 + 1;
                            if (v533 == -1 || v534 > *(_QWORD *)&a1[*v3])
                              break;
                            v535 = *(char *)(*(_QWORD *)&a1[*v5] + v533);
                            *(_QWORD *)&a1[v532] = v534;
                            if (v535 < 0)
                            {
                              v13 = v531++ >= 9;
                              if (!v13)
                                continue;
                            }
                            goto LABEL_1107;
                          }
                          a1[*v4] = 1;
                        }
                        PBReaderRecallMark();
                      }
                      else
                      {
                        if ((v518 & 7) != 0)
                          goto LABEL_1520;
                        while (1)
                        {
                          v526 = *v2;
                          v527 = *(_QWORD *)&a1[v526];
                          v528 = v527 + 1;
                          if (v527 == -1 || v528 > *(_QWORD *)&a1[*v3])
                            break;
                          v529 = *(char *)(*(_QWORD *)&a1[*v5] + v527);
                          *(_QWORD *)&a1[v526] = v528;
                          if (v529 < 0)
                          {
                            v530 = v524++;
                            if (v530 <= 8)
                              continue;
                          }
                          goto LABEL_1118;
                        }
                        a1[*v4] = 1;
                      }
                    }
                    else
                    {
                      if ((v518 >> 3) == 1)
                      {
                        if (v515 || v524 != 2)
                          goto LABEL_1520;
                        v515 = 1;
                      }
                      if ((PBReaderSkipValueWithTag() & 1) == 0)
                        goto LABEL_1520;
                    }
LABEL_1118:
                    ;
                  }
                  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
                }
                v552 = a1[*v4];
                PBReaderRecallMark();
                if (v552)
                  v553 = 1;
                else
                  v553 = v515 == 0;
                if (!v553)
                  goto LABEL_1156;
                goto LABEL_1523;
              case 4u:
                if (v489 != 2)
                {
                  if ((v483 & 7) != 0)
                    goto LABEL_1523;
                  while (1)
                  {
                    v536 = *v2;
                    v537 = *(_QWORD *)&a1[v536];
                    v538 = v537 + 1;
                    if (v537 == -1 || v538 > *(_QWORD *)&a1[*v3])
                      goto LABEL_1129;
                    v539 = *(char *)(*(_QWORD *)&a1[*v5] + v537);
                    *(_QWORD *)&a1[v536] = v538;
                    if (v539 < 0)
                    {
                      v540 = v489++;
                      if (v540 <= 8)
                        continue;
                    }
                    goto LABEL_1006;
                  }
                }
                if (!PBReaderPlaceMark())
                  goto LABEL_1523;
LABEL_1141:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
                {
                  v547 = a1[*v4];
                  if (a1[*v4])
                    break;
                  while (1)
                  {
                    v548 = *v2;
                    v549 = *(_QWORD *)&a1[v548];
                    v550 = v549 + 1;
                    if (v549 == -1 || v550 > *(_QWORD *)&a1[*v3])
                      break;
                    v551 = *(char *)(*(_QWORD *)&a1[*v5] + v549);
                    *(_QWORD *)&a1[v548] = v550;
                    if (v551 < 0)
                    {
                      v13 = v547++ >= 9;
                      if (!v13)
                        continue;
                    }
                    goto LABEL_1141;
                  }
                  a1[*v4] = 1;
                }
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            break;
          }
LABEL_1156:
          PBReaderRecallMark();
          continue;
        }
      case 0x1Cu:
      case 0x1Du:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchQueryTokenImportanceMetadataIsValid(a1))
          goto LABEL_1524;
        goto LABEL_1495;
      case 0x1Eu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1160:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_1494;
            v554 = 0;
            v555 = 0;
            v556 = 0;
            while (2)
            {
              v557 = *v2;
              v558 = *(_QWORD *)&a1[v557];
              v559 = v558 + 1;
              if (v558 == -1 || v559 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v560 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v558);
                *(_QWORD *)&a1[v557] = v559;
                v556 |= (unint64_t)(v560 & 0x7F) << v554;
                if (v560 < 0)
                {
                  v554 += 7;
                  v13 = v555++ >= 9;
                  if (v13)
                  {
                    v556 = 0;
                    v561 = a1[*v4];
                    goto LABEL_1172;
                  }
                  continue;
                }
              }
              break;
            }
            v561 = a1[*v4];
            if (a1[*v4])
              v556 = 0;
LABEL_1172:
            v562 = v556 & 7;
            if (v561)
              v563 = 1;
            else
              v563 = v562 == 4;
            if (v563)
              goto LABEL_1494;
            switch((v556 >> 3))
            {
              case 1u:
                if ((v556 & 7) != 0)
                  goto LABEL_1523;
                v564 = 0;
                do
                {
                  v565 = *v2;
                  v566 = *(_QWORD *)&a1[v565];
                  v567 = v566 + 1;
                  if (v566 == -1 || v567 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_1160;
                  }
                  v568 = *(char *)(*(_QWORD *)&a1[*v5] + v566);
                  *(_QWORD *)&a1[v565] = v567;
                  if ((v568 & 0x80000000) == 0)
                    break;
                  v23 = v564++ > 8;
                }
                while (!v23);
                continue;
              case 2u:
                if (v562 != 2 || !PBReaderPlaceMark() || !GEOPDSearchChainInfoIsValid(a1))
                  goto LABEL_1523;
                goto LABEL_1227;
              case 3u:
                if (v562 == 2 && PBReaderPlaceMark() && GEOPDSearchBrandDensityIsValid(a1))
                  goto LABEL_1227;
                goto LABEL_1523;
              case 4u:
                if (v562 != 2 || !PBReaderPlaceMark())
                  goto LABEL_1523;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
            }
            break;
          }
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v569 = 0;
            v570 = 0;
            v571 = 0;
            while (1)
            {
              v572 = *v2;
              v573 = *(_QWORD *)&a1[v572];
              v574 = v573 + 1;
              if (v573 == -1 || v574 > *(_QWORD *)&a1[*v3])
                break;
              v575 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v573);
              *(_QWORD *)&a1[v572] = v574;
              v571 |= (unint64_t)(v575 & 0x7F) << v569;
              if ((v575 & 0x80) == 0)
                goto LABEL_1208;
              v569 += 7;
              v13 = v570++ >= 9;
              if (v13)
              {
                v571 = 0;
                v576 = *v4;
                v577 = a1[v576];
                goto LABEL_1210;
              }
            }
            a1[*v4] = 1;
LABEL_1208:
            v576 = *v4;
            v577 = a1[v576];
            if (a1[v576])
              v571 = 0;
LABEL_1210:
            v578 = v571 & 7;
            if (v577 || v578 == 4)
              break;
            if ((v571 >> 3) == 2)
            {
              if (v578 == 5)
              {
                v580 = *v2;
                v581 = *(_QWORD *)&a1[v580];
                if (v581 <= 0xFFFFFFFFFFFFFFFBLL && (v582 = v581 + 4, v582 <= *(_QWORD *)&a1[*v3]))
                  *(_QWORD *)&a1[v580] = v582;
                else
                  a1[v576] = 1;
                continue;
              }
              goto LABEL_1522;
            }
            if ((v571 >> 3) == 1)
            {
              if (v578 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_1522;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_1522;
            }
          }
          v583 = a1[*v4];
          PBReaderRecallMark();
          if (!v583)
          {
LABEL_1227:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0x1Fu:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1232:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_1272;
        v584 = 0;
        v585 = 0;
        v586 = 0;
        while (1)
        {
          v587 = *v2;
          v588 = *(_QWORD *)&a1[v587];
          v589 = v588 + 1;
          if (v588 == -1 || v589 > *(_QWORD *)&a1[*v3])
            break;
          v590 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v588);
          *(_QWORD *)&a1[v587] = v589;
          v586 |= (unint64_t)(v590 & 0x7F) << v584;
          if ((v590 & 0x80) == 0)
            goto LABEL_1242;
          v584 += 7;
          v13 = v585++ >= 9;
          if (v13)
          {
            v586 = 0;
            v591 = *v4;
            v592 = a1[v591];
            goto LABEL_1244;
          }
        }
        a1[*v4] = 1;
LABEL_1242:
        v591 = *v4;
        v592 = a1[v591];
        if (a1[v591])
          v586 = 0;
LABEL_1244:
        v593 = v586 & 7;
        if (v592 || v593 == 4)
        {
LABEL_1272:
          v604 = a1[*v4];
          PBReaderRecallMark();
          if (v604)
            goto LABEL_1524;
LABEL_1495:
          PBReaderRecallMark();
LABEL_1496:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_1518;
          continue;
        }
        v595 = v586 >> 3;
        if ((v586 >> 3) == 3)
        {
          if (v593 == 2 && PBReaderPlaceMark() && GEOPDSearchStringStringPairIsValid(a1))
          {
LABEL_1256:
            PBReaderRecallMark();
            goto LABEL_1232;
          }
        }
        else
        {
          if ((_DWORD)v595 != 2)
          {
            if ((_DWORD)v595 == 1 && v593 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_1523;
            goto LABEL_1232;
          }
          if (v593 == 5)
          {
            v601 = *v2;
            v602 = *(_QWORD *)&a1[v601];
            if (v602 <= 0xFFFFFFFFFFFFFFFBLL && (v603 = v602 + 4, v603 <= *(_QWORD *)&a1[*v3]))
              *(_QWORD *)&a1[v601] = v603;
            else
              a1[v591] = 1;
            goto LABEL_1232;
          }
          if (v593 == 2 && PBReaderPlaceMark())
          {
            while (1)
            {
              v596 = (unint64_t *)&a1[*v2];
              v597 = *v596;
              v598 = *(_QWORD *)&a1[*v3];
              if (*v596 >= v598)
                break;
              v599 = *v4;
              if (a1[v599])
                break;
              if (v597 > 0xFFFFFFFFFFFFFFFBLL || (v600 = v597 + 4, v600 > v598))
                a1[v599] = 1;
              else
                *v596 = v600;
            }
            goto LABEL_1256;
          }
        }
LABEL_1523:
        PBReaderRecallMark();
LABEL_1524:
        PBReaderRecallMark();
        return 0;
      case 0x20u:
        if (v16 != 2)
          goto LABEL_1524;
        v725 = 0;
        v726 = 0;
        if (!PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v605 = 0;
            v606 = 0;
            v607 = 0;
            while (1)
            {
              v608 = *v2;
              v609 = *(_QWORD *)&a1[v608];
              v610 = v609 + 1;
              if (v609 == -1 || v610 > *(_QWORD *)&a1[*v3])
                break;
              v611 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v609);
              *(_QWORD *)&a1[v608] = v610;
              v607 |= (unint64_t)(v611 & 0x7F) << v605;
              if ((v611 & 0x80) == 0)
                goto LABEL_1287;
              v605 += 7;
              v13 = v606++ >= 9;
              if (v13)
              {
                v607 = 0;
                v612 = a1[*v4];
                goto LABEL_1289;
              }
            }
            a1[*v4] = 1;
LABEL_1287:
            v612 = a1[*v4];
            if (a1[*v4])
              v607 = 0;
LABEL_1289:
            v613 = v607 & 7;
            if (!v612 && v613 != 4)
            {
              if ((v607 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
              }
              if (v613 == 2 && PBReaderPlaceMark())
              {
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
LABEL_1297:
                while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                {
                  v615 = 0;
                  v616 = 0;
                  v617 = 0;
                  while (1)
                  {
                    v618 = *v2;
                    v619 = *(_QWORD *)&a1[v618];
                    v620 = v619 + 1;
                    if (v619 == -1 || v620 > *(_QWORD *)&a1[*v3])
                      break;
                    v621 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v619);
                    *(_QWORD *)&a1[v618] = v620;
                    v617 |= (unint64_t)(v621 & 0x7F) << v615;
                    if ((v621 & 0x80) == 0)
                      goto LABEL_1307;
                    v615 += 7;
                    v13 = v616++ >= 9;
                    if (v13)
                    {
                      v617 = 0;
                      v622 = *v4;
                      v623 = a1[v622];
                      goto LABEL_1309;
                    }
                  }
                  a1[*v4] = 1;
LABEL_1307:
                  v622 = *v4;
                  v623 = a1[v622];
                  if (a1[v622])
                    v617 = 0;
LABEL_1309:
                  v624 = v617 & 7;
                  if (v623 || v624 == 4)
                    break;
                  switch((v617 >> 3))
                  {
                    case 1u:
                      if (v624 != 5)
                        goto LABEL_1520;
                      v626 = *v2;
                      v627 = *(_QWORD *)&a1[v626];
                      if (v627 > 0xFFFFFFFFFFFFFFFBLL)
                        goto LABEL_1338;
                      v628 = v627 + 4;
                      if (v628 > *(_QWORD *)&a1[*v3])
                        goto LABEL_1338;
                      *(_QWORD *)&a1[v626] = v628;
                      continue;
                    case 2u:
                      if (v624 != 2 || !PBReaderPlaceMark() || !GEOPDSearchPairIsValid(a1))
                        goto LABEL_1520;
                      goto LABEL_1333;
                    case 3u:
                      if ((v617 & 7) != 0)
                        goto LABEL_1520;
                      v629 = 0;
                      break;
                    case 4u:
                      if (v624 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStringStringPairIsValid(a1))
                        goto LABEL_1520;
LABEL_1333:
                      PBReaderRecallMark();
                      continue;
                    case 5u:
                      if (v624 == 2)
                        goto LABEL_1335;
                      goto LABEL_1520;
                    default:
LABEL_1335:
                      if ((PBReaderSkipValueWithTag() & 1) == 0)
                        goto LABEL_1520;
                      continue;
                  }
                  while (1)
                  {
                    v630 = *v2;
                    v631 = *(_QWORD *)&a1[v630];
                    v632 = v631 + 1;
                    if (v631 == -1 || v632 > *(_QWORD *)&a1[*v3])
                      break;
                    v633 = *(char *)(*(_QWORD *)&a1[*v5] + v631);
                    *(_QWORD *)&a1[v630] = v632;
                    if (v633 < 0)
                    {
                      v23 = v629++ > 8;
                      if (!v23)
                        continue;
                    }
                    goto LABEL_1297;
                  }
                  v622 = *v4;
LABEL_1338:
                  a1[v622] = 1;
                }
                v634 = a1[*v4];
                PBReaderRecallMark();
                if (!v634)
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_1523;
            }
          }
          break;
        }
LABEL_1343:
        v635 = a1[*v4];
        PBReaderRecallMark();
        if (v635)
          goto LABEL_1524;
        goto LABEL_1495;
      case 0x21u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v636 = 0;
          v637 = 0;
          v638 = 0;
          while (2)
          {
            v639 = *v2;
            v640 = *(_QWORD *)&a1[v639];
            v641 = v640 + 1;
            if (v640 == -1 || v641 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v642 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v640);
              *(_QWORD *)&a1[v639] = v641;
              v638 |= (unint64_t)(v642 & 0x7F) << v636;
              if (v642 < 0)
              {
                v636 += 7;
                v13 = v637++ >= 9;
                if (v13)
                {
                  v638 = 0;
                  v643 = *v4;
                  v644 = a1[v643];
                  goto LABEL_1360;
                }
                continue;
              }
            }
            break;
          }
          v643 = *v4;
          v644 = a1[v643];
          if (a1[v643])
            v638 = 0;
LABEL_1360:
          v645 = v638 & 7;
          if (v644)
            v646 = 1;
          else
            v646 = v645 == 4;
          if (!v646)
          {
            switch((v638 >> 3))
            {
              case 1u:
                if (v645 == 2)
                  goto LABEL_1376;
                goto LABEL_1523;
              case 2u:
                if (v645 != 5)
                  goto LABEL_1523;
                v647 = *v2;
                v648 = *(_QWORD *)&a1[v647];
                if (v648 <= 0xFFFFFFFFFFFFFFFBLL && (v649 = v648 + 4, v649 <= *(_QWORD *)&a1[*v3]))
                  *(_QWORD *)&a1[v647] = v649;
                else
                  a1[v643] = 1;
                continue;
              case 3u:
                if (v645 == 2)
                  goto LABEL_1376;
                goto LABEL_1523;
              case 4u:
                if (v645 != 2)
                  goto LABEL_1523;
LABEL_1376:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
              default:
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_1523;
                continue;
            }
          }
          break;
        }
LABEL_1379:
        v650 = a1[*v4];
        PBReaderRecallMark();
        if (!v650)
          goto LABEL_1495;
        goto LABEL_1524;
      case 0x22u:
        if (v16 != 2 || !PBReaderPlaceMark())
          goto LABEL_1524;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v651 = 0;
            v652 = 0;
            v653 = 0;
            while (1)
            {
              v654 = *v2;
              v655 = *(_QWORD *)&a1[v654];
              v656 = v655 + 1;
              if (v655 == -1 || v656 > *(_QWORD *)&a1[*v3])
                break;
              v657 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v655);
              *(_QWORD *)&a1[v654] = v656;
              v653 |= (unint64_t)(v657 & 0x7F) << v651;
              if ((v657 & 0x80) == 0)
                goto LABEL_1394;
              v651 += 7;
              v13 = v652++ >= 9;
              if (v13)
              {
                v653 = 0;
                v658 = a1[*v4];
                goto LABEL_1396;
              }
            }
            a1[*v4] = 1;
LABEL_1394:
            v658 = a1[*v4];
            if (a1[*v4])
              v653 = 0;
LABEL_1396:
            v659 = v653 & 7;
            if (!v658 && v659 != 4)
            {
              if ((v653 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_1523;
                continue;
              }
              if (v659 == 2 && PBReaderPlaceMark())
              {
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                v725 = 0;
                if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                {
                  v709 = 0;
                }
                else
                {
                  do
                  {
                    if (a1[*v4])
                      break;
                    v661 = 0;
                    v662 = 0;
                    v663 = 0;
                    while (1)
                    {
                      v664 = *v2;
                      v665 = *(_QWORD *)&a1[v664];
                      v666 = v665 + 1;
                      if (v665 == -1 || v666 > *(_QWORD *)&a1[*v3])
                        break;
                      v667 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v665);
                      *(_QWORD *)&a1[v664] = v666;
                      v663 |= (unint64_t)(v667 & 0x7F) << v661;
                      if ((v667 & 0x80) == 0)
                        goto LABEL_1413;
                      v661 += 7;
                      v13 = v662++ >= 9;
                      if (v13)
                      {
                        v663 = 0;
                        v668 = a1[*v4];
                        goto LABEL_1415;
                      }
                    }
                    a1[*v4] = 1;
LABEL_1413:
                    v668 = a1[*v4];
                    if (a1[*v4])
                      v663 = 0;
LABEL_1415:
                    v669 = v663 & 7;
                    if (v668 || v669 == 4)
                      break;
                    switch((v663 >> 3))
                    {
                      case 1u:
                        if ((v663 & 7) != 0)
                          goto LABEL_1522;
                        v671 = 0;
                        while (1)
                        {
                          v672 = *v2;
                          v673 = *(_QWORD *)&a1[v672];
                          v674 = v673 + 1;
                          if (v673 == -1 || v674 > *(_QWORD *)&a1[*v3])
                            goto LABEL_1483;
                          v675 = *(char *)(*(_QWORD *)&a1[*v5] + v673);
                          *(_QWORD *)&a1[v672] = v674;
                          if (v675 < 0)
                          {
                            v23 = v671++ > 8;
                            if (!v23)
                              continue;
                          }
                          goto LABEL_1484;
                        }
                      case 2u:
                        if ((v663 & 7) != 0)
                          goto LABEL_1522;
                        v676 = 0;
                        while (1)
                        {
                          v677 = *v2;
                          v678 = *(_QWORD *)&a1[v677];
                          v679 = v678 + 1;
                          if (v678 == -1 || v679 > *(_QWORD *)&a1[*v3])
                            goto LABEL_1483;
                          v680 = *(char *)(*(_QWORD *)&a1[*v5] + v678);
                          *(_QWORD *)&a1[v677] = v679;
                          if (v680 < 0)
                          {
                            v23 = v676++ > 8;
                            if (!v23)
                              continue;
                          }
                          goto LABEL_1484;
                        }
                      case 3u:
                        if ((v663 & 7) != 0)
                          goto LABEL_1522;
                        v681 = 0;
                        while (1)
                        {
                          v682 = *v2;
                          v683 = *(_QWORD *)&a1[v682];
                          v684 = v683 + 1;
                          if (v683 == -1 || v684 > *(_QWORD *)&a1[*v3])
                            goto LABEL_1483;
                          v685 = *(char *)(*(_QWORD *)&a1[*v5] + v683);
                          *(_QWORD *)&a1[v682] = v684;
                          if (v685 < 0)
                          {
                            v23 = v681++ > 8;
                            if (!v23)
                              continue;
                          }
                          goto LABEL_1484;
                        }
                      case 4u:
                        if ((v663 & 7) != 0)
                          goto LABEL_1522;
                        v686 = 0;
                        while (1)
                        {
                          v687 = *v2;
                          v688 = *(_QWORD *)&a1[v687];
                          v689 = v688 + 1;
                          if (v688 == -1 || v689 > *(_QWORD *)&a1[*v3])
                            goto LABEL_1483;
                          v690 = *(char *)(*(_QWORD *)&a1[*v5] + v688);
                          *(_QWORD *)&a1[v687] = v689;
                          if (v690 < 0)
                          {
                            v23 = v686++ > 8;
                            if (!v23)
                              continue;
                          }
                          goto LABEL_1484;
                        }
                      case 5u:
                        if ((v663 & 7) != 0)
                          goto LABEL_1522;
                        v691 = 0;
                        while (1)
                        {
                          v692 = *v2;
                          v693 = *(_QWORD *)&a1[v692];
                          v694 = v693 + 1;
                          if (v693 == -1 || v694 > *(_QWORD *)&a1[*v3])
                            goto LABEL_1483;
                          v695 = *(char *)(*(_QWORD *)&a1[*v5] + v693);
                          *(_QWORD *)&a1[v692] = v694;
                          if (v695 < 0)
                          {
                            v23 = v691++ > 8;
                            if (!v23)
                              continue;
                          }
                          goto LABEL_1484;
                        }
                      case 6u:
                        v696 = 0;
                        v697 = 1;
                        while (1)
                        {
                          v698 = v697;
                          v699 = *((_DWORD *)&v725 + v696);
                          if (!v699)
                            break;
                          if (v699 != 6)
                          {
                            v697 = 0;
                            v696 = 1;
                            if ((v698 & 1) != 0)
                              continue;
                          }
                          goto LABEL_1522;
                        }
                        *((_DWORD *)&v725 + v696) = 6;
                        if (v669 != 2)
                          goto LABEL_1522;
LABEL_1473:
                        if ((PBReaderSkipValueWithTag() & 1) == 0)
                          goto LABEL_1522;
                        continue;
                      case 7u:
                        if (v669 == 2)
                          goto LABEL_1473;
                        goto LABEL_1522;
                      case 8u:
                        v700 = 0;
                        v701 = 1;
                        break;
                      default:
                        goto LABEL_1473;
                    }
                    while (1)
                    {
                      v702 = v701;
                      v703 = *((_DWORD *)&v725 + v700);
                      if (!v703)
                        break;
                      if (v703 != 8)
                      {
                        v701 = 0;
                        v700 = 1;
                        if ((v702 & 1) != 0)
                          continue;
                      }
                      goto LABEL_1522;
                    }
                    *((_DWORD *)&v725 + v700) = 8;
                    if (v669)
                    {
LABEL_1522:
                      PBReaderRecallMark();
                      goto LABEL_1523;
                    }
                    v704 = 0;
                    while (1)
                    {
                      v705 = *v2;
                      v706 = *(_QWORD *)&a1[v705];
                      v707 = v706 + 1;
                      if (v706 == -1 || v707 > *(_QWORD *)&a1[*v3])
                        break;
                      v708 = *(char *)(*(_QWORD *)&a1[*v5] + v706);
                      *(_QWORD *)&a1[v705] = v707;
                      if (v708 < 0)
                      {
                        v23 = v704++ > 8;
                        if (!v23)
                          continue;
                      }
                      goto LABEL_1484;
                    }
LABEL_1483:
                    a1[*v4] = 1;
LABEL_1484:
                    ;
                  }
                  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
                  v709 = HIDWORD(v725) != 0;
                }
                v710 = a1[*v4];
                PBReaderRecallMark();
                if (v710)
                  v711 = 1;
                else
                  v711 = !v709;
                if (!v711)
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_1523;
            }
          }
          break;
        }
LABEL_1494:
        v712 = a1[*v4];
        PBReaderRecallMark();
        if (v712)
          goto LABEL_1524;
        goto LABEL_1495;
      default:
LABEL_30:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_1524;
        goto LABEL_1496;
    }
  }
}

void sub_189030CA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOPDSearchQueryIntentClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  id *v5;
  unsigned int IntentMetadataHasSensitiveFields;
  void *v7;
  uint64_t v8;
  id v9;

  if (a1
    && a3
    && (-[GEOPDSearchQueryIntent _readQueryIntentMetadata](a1), *(_QWORD *)(a1 + 32))
    && (-[GEOPDSearchQueryIntent queryIntentMetadata]((id *)a1),
        v5 = (id *)objc_claimAutoreleasedReturnValue(),
        IntentMetadataHasSensitiveFields = GEOPDSearchQueryIntentMetadataHasSensitiveFields(v5, a2),
        v5,
        IntentMetadataHasSensitiveFields))
  {
    -[GEOPDSearchQueryIntent queryIntentMetadata]((id *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v7, "copy");

    GEOPDSearchQueryIntentMetadataClearSensitiveFields((uint64_t)v9, a2, 0);
    -[GEOPDSearchQueryIntent setQueryIntentMetadata:](a1, v9);
  }
  else
  {
    -[GEOPDSearchQueryIntent queryIntentMetadata]((id *)a1);
    v8 = objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      v9 = (id)v8;
      GEOPDSearchQueryIntentMetadataClearSensitiveFields(v8, a2, 1);
    }
    else
    {
      v9 = 0;
    }
  }

}

id *GEOPDSearchQueryIntentHasSensitiveFields(id *result, uint64_t a2)
{
  id *v3;
  id *IntentMetadataHasSensitiveFields;

  if (result)
  {
    -[GEOPDSearchQueryIntent queryIntentMetadata](result);
    v3 = (id *)objc_claimAutoreleasedReturnValue();
    IntentMetadataHasSensitiveFields = GEOPDSearchQueryIntentMetadataHasSensitiveFields(v3, a2);

    return IntentMetadataHasSensitiveFields;
  }
  return result;
}

id *GEOPDSearchQueryIntentMetadataHasSensitiveFields(id *result, uint64_t a2)
{
  id *v3;
  uint64_t HasSensitiveFields;

  if (result)
  {
    -[GEOPDSearchQueryIntentMetadata acHintMetadata](result);
    v3 = (id *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOPDSearchACHintMetadataHasSensitiveFields(v3, a2);

    return (id *)HasSensitiveFields;
  }
  return result;
}

void GEOPDSearchQueryIntentMetadataClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  id *v5;
  int HasSensitiveFields;
  void *v7;
  uint64_t v8;
  id v9;

  if (a1
    && a3
    && (-[GEOPDSearchQueryIntentMetadata _readAcHintMetadata](a1), *(_QWORD *)(a1 + 64))
    && (-[GEOPDSearchQueryIntentMetadata acHintMetadata]((id *)a1),
        v5 = (id *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOPDSearchACHintMetadataHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    -[GEOPDSearchQueryIntentMetadata acHintMetadata]((id *)a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (id)objc_msgSend(v7, "copy");

    GEOPDSearchACHintMetadataClearSensitiveFields((uint64_t)v9, a2, 0);
    -[GEOPDSearchQueryIntentMetadata setAcHintMetadata:](a1, v9);
  }
  else
  {
    -[GEOPDSearchQueryIntentMetadata acHintMetadata]((id *)a1);
    v8 = objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      v9 = (id)v8;
      GEOPDSearchACHintMetadataClearSensitiveFields(v8, a2, 1);
    }
    else
    {
      v9 = 0;
    }
  }

}

void sub_189031568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryIntentMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  int *v18;
  BOOL v19;
  int *v20;
  int *v21;
  int *v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void *v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  GEOPDSearchQueryTagMetadata *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  int *v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  int *v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  void *v95;
  char v96;
  char v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  uint64_t v126;
  unsigned int v127;
  uint64_t v128;
  int *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  int *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  int v142;
  uint64_t v143;
  void *v144;
  BOOL v146;
  char v147;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 296));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 292);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 288));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = *(_QWORD *)(a1 + 308);
  v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD4080), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD4090), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD4060), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD4070), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD40A0), v13)))+ ((v11 >> 30) & 1)+ ((v11 >> 27) & 1)+ ((v11 >> 8) & 1)+ (BYTE4(v11) & 1)+ ((v11 >> 15) & 1)+ ((v11 >> 33) & 1)+ ((v11 >> 21) & 1)+ ((v11 >> 12) & 1)+ (v11 >> 31);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v10 | (v14 > 0x16);
        if (((v17 | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v17;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_336;
        v147 = (v18 == 0) | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v146 = v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_336;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_336:
      if (v19)
      {
        *(_QWORD *)(a1 + 308) |= 0x3FFFFFFE0uLL;
      }
      else if (v18)
      {
        while (1)
        {
          v142 = *v18++;
          v143 = 512;
          switch(v142)
          {
            case 0:
              goto LABEL_369;
            case 1:
              goto LABEL_368;
            case 2:
              v143 = 0x80000000;
              goto LABEL_368;
            case 7:
              v143 = 0x4000000;
              goto LABEL_368;
            case 8:
              v143 = 1024;
              goto LABEL_368;
            case 9:
              v143 = 0x1000000;
              goto LABEL_368;
            case 11:
              v143 = 0x20000;
              goto LABEL_368;
            case 12:
              v143 = 32;
              goto LABEL_368;
            case 13:
              v143 = 0x2000000;
              goto LABEL_368;
            case 14:
              v143 = 0x4000;
              goto LABEL_368;
            case 15:
              v143 = 2048;
              goto LABEL_368;
            case 16:
              v143 = 0x100000;
              goto LABEL_368;
            case 17:
              v143 = 0x2000;
              goto LABEL_368;
            case 18:
              v143 = 0x400000;
              goto LABEL_368;
            case 19:
              v143 = 0x40000;
              goto LABEL_368;
            case 20:
              v143 = 0x10000000;
              goto LABEL_368;
            case 21:
              v143 = 0x20000000;
              goto LABEL_368;
            case 22:
              v143 = 0x10000;
              goto LABEL_368;
            case 23:
              v143 = 64;
              goto LABEL_368;
            case 24:
              v143 = 0x800000;
              goto LABEL_368;
            case 25:
              v143 = 128;
              goto LABEL_368;
            case 26:
              v143 = 0x80000;
              goto LABEL_368;
            case 27:
              v143 = 0x40000000;
              goto LABEL_368;
            case 28:
              v143 = 0x8000000;
              goto LABEL_368;
            case 29:
              v143 = 256;
              goto LABEL_368;
            case 30:
              v143 = 0x100000000;
              goto LABEL_368;
            case 31:
              v143 = 0x8000;
              goto LABEL_368;
            case 32:
              v143 = 0x200000000;
              goto LABEL_368;
            case 33:
              v143 = 0x200000;
              goto LABEL_368;
            case 34:
              v143 = 4096;
LABEL_368:
              *(_QWORD *)(a1 + 308) |= v143;
              break;
            default:
              continue;
          }
        }
      }
LABEL_369:
      v3 = *(_BYTE *)(v3 + *v21) == 0;
      if (!v19)
        return v3;
LABEL_370:
      v144 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

      return v3;
    }
    v34 = v25 >> 3;
    v35 = v19;
    if ((v147 & 1) == 0)
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 309) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 80;
          goto LABEL_45;
        }
        v100 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v100 & 1) == 0)
          goto LABEL_374;
        v101 = *(_QWORD *)(a1 + 308) << 54;
        goto LABEL_313;
      case 2:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 0x80) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 264;
LABEL_45:
          v43 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
          goto LABEL_240;
        }
        v102 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        if ((v102 & 1) == 0)
          goto LABEL_374;
        v101 = *(_QWORD *)(a1 + 308) << 32;
        goto LABEL_313;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_244;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_QWORD *)(a1 + 308) |= 2uLL;
        while (2)
        {
          v47 = *v20;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v46) = 0;
LABEL_249:
        *(_DWORD *)(a1 + 300) = v46;
        goto LABEL_314;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_244;
        *(_QWORD *)(a1 + 308) |= 1uLL;
        v51 = *v20;
        v52 = *(_QWORD *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v53 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v52);
          *(_QWORD *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v53 = 0;
        }
        *(_QWORD *)(a1 + 168) = v53;
        goto LABEL_314;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_244;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_QWORD *)(a1 + 308) |= 8uLL;
        while (2)
        {
          v57 = *v20;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v30 = v55++ >= 9;
              if (v30)
              {
                v56 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v56 = 0;
LABEL_253:
        v98 = v56 != 0;
        v99 = 305;
        goto LABEL_262;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_244;
        v61 = 0;
        v62 = 0;
        v63 = 0;
        *(_QWORD *)(a1 + 308) |= 0x10uLL;
        while (2)
        {
          v64 = *v20;
          v65 = *(_QWORD *)(v3 + v64);
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              v30 = v62++ >= 9;
              if (v30)
              {
                v63 = 0;
                goto LABEL_257;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v63 = 0;
LABEL_257:
        v98 = v63 != 0;
        v99 = 306;
        goto LABEL_262;
      case 7:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 4) != 0)
        {
          v103 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v103 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 37;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryTagMetadata);
        if (!GEOPDSearchQueryTagMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 224;
        goto LABEL_238;
      case 8:
        if (!v35 || (*(_BYTE *)(a1 + 309) & 4) != 0)
          goto LABEL_242;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryClassificationMetadata);
        if (!GEOPDSearchQueryClassificationMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntentMetadata _addNoFlagsQueryClassificationMetadata:](a1, v68);
        goto LABEL_222;
      case 9:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 1) != 0)
        {
          v104 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v104 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 39;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQuerySpellCorrectionMetadata);
        if (!GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 208;
        goto LABEL_238;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_244;
        v70 = 0;
        v71 = 0;
        v72 = 0;
        *(_QWORD *)(a1 + 308) |= 4uLL;
        while (2)
        {
          v73 = *v20;
          v74 = *(_QWORD *)(v3 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v30 = v71++ >= 9;
              if (v30)
              {
                v72 = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v72 = 0;
LABEL_261:
        v98 = v72 != 0;
        v99 = 304;
LABEL_262:
        *(_BYTE *)(a1 + v99) = v98;
        goto LABEL_314;
      case 11:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 2) != 0)
        {
          v105 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v105 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 46;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryGeoMetadata);
        if (!GEOPDSearchQueryGeoMetadataReadAllFrom((uint64_t)v68, (void *)v3))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 144;
        goto LABEL_238;
      case 12:
        if (!v35 || (*(_BYTE *)(a1 + 308) & 0x20) != 0)
          goto LABEL_242;
        if (v32 != 2)
        {
          v126 = 0;
          v127 = 0;
          v128 = 0;
          v19 = v146;
          v129 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v130 = *v20;
            v131 = *(_QWORD *)(v3 + v130);
            v132 = v131 + 1;
            if (v131 == -1 || v132 > *(_QWORD *)(v3 + *v6))
              goto LABEL_334;
            v133 = *(_BYTE *)(*(_QWORD *)(v3 + *v129) + v131);
            *(_QWORD *)(v3 + v130) = v132;
            v128 |= (unint64_t)(v133 & 0x7F) << v126;
            if (v133 < 0)
            {
              v126 += 7;
              v30 = v127++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_335;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_373;
        while (1)
        {
          v77 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            goto LABEL_317;
          v78 = 0;
          v79 = 0;
          v80 = 0;
          v81 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v82 = *v20;
            v83 = *(_QWORD *)(v3 + v82);
            v84 = v83 + 1;
            if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
              break;
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v81) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v80 |= (unint64_t)(v85 & 0x7F) << v78;
            if (v85 < 0)
            {
              v78 += 7;
              v30 = v79++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_116;
          }
          *(_BYTE *)(v3 + *v77) = 1;
LABEL_116:
          PBRepeatedInt32Add();
        }
      case 13:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 2) != 0)
        {
          v106 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v106 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 38;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQuerySynonymMetadata);
        if (!GEOPDSearchQuerySynonymMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 216;
        goto LABEL_238;
      case 14:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 309) & 0x40) != 0)
        {
          v107 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v107 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 49;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryDymMetadata);
        if (!GEOPDSearchQueryDymMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 120;
        goto LABEL_238;
      case 15:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 309) & 8) != 0)
        {
          v108 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v108 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 52;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryCompletionMetadata);
        if (!GEOPDSearchQueryCompletionMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 96;
        goto LABEL_238;
      case 16:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 0x10) != 0)
        {
          v109 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v109 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 43;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryInterpretationMetadata);
        if (!GEOPDSearchQueryInterpretationMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 176;
        goto LABEL_238;
      case 17:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 309) & 0x20) != 0)
        {
          v110 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v110 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 50;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryDirectionsIntentMetadata);
        if (!GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 112;
        goto LABEL_238;
      case 18:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 0x40) != 0)
        {
          v111 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v111 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 41;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryNormalizerMetadata);
        if (!GEOPDSearchQueryNormalizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 192;
        goto LABEL_238;
      case 19:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 4) != 0)
        {
          v112 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v112 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 45;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryGeoNormalizerMetadata);
        if (!GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 152;
        goto LABEL_238;
      case 20:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 0x10) != 0)
        {
          v113 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v113 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 35;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryTokenizerMetadata);
        if (!GEOPDSearchQueryTokenizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 240;
        goto LABEL_238;
      case 21:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 0x20) != 0)
        {
          v114 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v114 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 34;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryTransliteratorMetadata);
        if (!GEOPDSearchQueryTransliteratorMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 248;
        goto LABEL_238;
      case 22:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 1) != 0)
        {
          v115 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v115 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 47;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryFuzzyMatchV2Metadata);
        if (!GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 136;
        goto LABEL_238;
      case 23:
        if (!v35 || (*(_BYTE *)(a1 + 308) & 0x40) != 0)
          goto LABEL_242;
        if (v32 != 2)
        {
          v134 = 0;
          v135 = 0;
          v136 = 0;
          v19 = v146;
          v137 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v138 = *v20;
            v139 = *(_QWORD *)(v3 + v138);
            v140 = v139 + 1;
            if (v139 == -1 || v140 > *(_QWORD *)(v3 + *v6))
              break;
            v141 = *(_BYTE *)(*(_QWORD *)(v3 + *v137) + v139);
            *(_QWORD *)(v3 + v138) = v140;
            v136 |= (unint64_t)(v141 & 0x7F) << v134;
            if (v141 < 0)
            {
              v134 += 7;
              v30 = v135++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_335;
          }
LABEL_334:
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_335:
          PBRepeatedInt32Add();
          goto LABEL_240;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_373;
        while (1)
        {
          v86 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v87 = 0;
          v88 = 0;
          v89 = 0;
          v90 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v91 = *v20;
            v92 = *(_QWORD *)(v3 + v91);
            v93 = v92 + 1;
            if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v6))
              break;
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v90) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v89 |= (unint64_t)(v94 & 0x7F) << v87;
            if (v94 < 0)
            {
              v87 += 7;
              v30 = v88++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_181;
          }
          *(_BYTE *)(v3 + *v86) = 1;
LABEL_181:
          PBRepeatedInt32Add();
        }
LABEL_317:
        PBReaderRecallMark();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v19 = v146;
        goto LABEL_241;
      case 24:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 0x80) != 0)
        {
          v116 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v116 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 40;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryPoiMetadata);
        if (!GEOPDSearchQueryPoiMetadataReadAllFrom((uint64_t)v68, (void *)v3))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 200;
        goto LABEL_238;
      case 25:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 308) & 0x80) != 0)
        {
          v117 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v117 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 56;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchACHintMetadata);
        if (!GEOPDSearchACHintMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 64;
        goto LABEL_238;
      case 26:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 8) != 0)
        {
          v118 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v118 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 44;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryGeoTagMetadata);
        if (!GEOPDSearchQueryGeoTagMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 160;
        goto LABEL_238;
      case 27:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 0x40) != 0)
        {
          v119 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v119 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 33;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryTokenizerMetadata);
        if (!GEOPDSearchQueryTokenizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 256;
        goto LABEL_238;
      case 28:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 311) & 8) != 0)
        {
          v120 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v120 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 36;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryTokenImportanceMetadata);
        if (!GEOPDSearchQueryTokenImportanceMetadataReadAllFrom((uint64_t)v68, (void *)v3))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 232;
        goto LABEL_238;
      case 29:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 309) & 1) != 0)
        {
          v121 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v121 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 55;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryTokenImportanceMetadata);
        if (!GEOPDSearchQueryTokenImportanceMetadataReadAllFrom((uint64_t)v68, (void *)v3))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 72;
        goto LABEL_238;
      case 30:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 312) & 1) != 0)
        {
          v122 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v122 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 31;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchRichBrandMetadata);
        if (!GEOPDSearchRichBrandMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 272;
        goto LABEL_238;
      case 31:
        if (!v35 || (*(_BYTE *)(a1 + 309) & 0x80) != 0)
        {
LABEL_242:
          v96 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v96 & 1) == 0)
            goto LABEL_374;
          goto LABEL_314;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryEmbeddingMetadata);
        if (!GEOPDSearchQueryEmbeddingMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntentMetadata _addNoFlagsQueryEmbeddingMetadata:](a1, v68);
LABEL_222:

        goto LABEL_239;
      case 32:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 312) & 2) != 0)
        {
          v123 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v123 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 30;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchTokenSynonymMetadata);
        if (!GEOPDSearchTokenSynonymMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 280;
        goto LABEL_238;
      case 33:
        if (!v35)
          goto LABEL_244;
        if ((*(_BYTE *)(a1 + 310) & 0x20) != 0)
        {
          v124 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v124 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 42;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryNeuralRewriteMetadata);
        if (!GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
          goto LABEL_372;
        PBReaderRecallMark();
        v69 = 184;
        goto LABEL_238;
      case 34:
        if (!v35)
        {
LABEL_244:
          v97 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v97 & 1) == 0)
            goto LABEL_374;
          goto LABEL_314;
        }
        if ((*(_BYTE *)(a1 + 309) & 0x10) != 0)
        {
          v125 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if ((v125 & 1) == 0)
            goto LABEL_374;
          v101 = *(_QWORD *)(a1 + 308) << 51;
LABEL_313:
          v7 += v101 >> 63;
          goto LABEL_314;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_374;
        v68 = objc_alloc_init(GEOPDSearchQueryCtrMetadata);
        if (GEOPDSearchQueryCtrMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v69 = 104;
LABEL_238:
          v95 = *(void **)(a1 + v69);
          *(_QWORD *)(a1 + v69) = v68;

          --v7;
LABEL_239:
          v19 = v146;
LABEL_240:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_241:
          v22 = (int *)MEMORY[0x1E0D82BB8];
LABEL_314:
          if (!v19 && v7 == 0 || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_336;
          continue;
        }
LABEL_372:

LABEL_373:
        v19 = v146;
LABEL_374:
        v3 = 0;
        *(_QWORD *)(a1 + 308) |= 0x3FFFFFFE0uLL;
        if (v19)
          goto LABEL_370;
        return v3;
      default:
        v42 = PBReaderSkipValueWithTag();
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (!v42)
          goto LABEL_374;
        goto LABEL_314;
    }
  }
}

void sub_18903358C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890336B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189033858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189035424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189035560(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18903F514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryIntentMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  -[GEOPDSearchQueryTagMetadata readAll:](*(_QWORD *)(a1 + 224), 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 88);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchQueryClassificationMetadata readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  -[GEOPDSearchQuerySpellCorrectionMetadata readAll:](*(_QWORD *)(a1 + 208), 1);
  -[GEOPDSearchQuerySynonymMetadata readAll:](*(_QWORD *)(a1 + 216), 1);
  -[GEOPDSearchQueryDymMetadata readAll:](*(_QWORD *)(a1 + 120), 1);
  -[GEOPDSearchQueryCompletionMetadata readAll:](*(_QWORD *)(a1 + 96), 1);
  -[GEOPDSearchQueryInterpretationMetadata readAll:](*(_QWORD *)(a1 + 176), 1);
  -[GEOPDSearchQueryDirectionsIntentMetadata readAll:](*(_QWORD *)(a1 + 112), 1);
  -[GEOPDSearchQueryNormalizerMetadata readAll:](*(_QWORD *)(a1 + 192), 1);
  -[GEOPDSearchQueryGeoNormalizerMetadata readAll:](*(_QWORD *)(a1 + 152), 1);
  -[GEOPDSearchQueryTokenizerMetadata readAll:](*(_QWORD *)(a1 + 240), 1);
  -[GEOPDSearchQueryTransliteratorMetadata readAll:](*(_QWORD *)(a1 + 248), 1);
  -[GEOPDSearchQueryFuzzyMatchV2Metadata readAll:](*(_QWORD *)(a1 + 136), 1);
  -[GEOPDSearchACHintMetadata readAll:](*(_QWORD *)(a1 + 64), 1);
  -[GEOPDSearchQueryGeoTagMetadata readAll:](*(_QWORD *)(a1 + 160), 1);
  -[GEOPDSearchQueryTokenizerMetadata readAll:](*(_QWORD *)(a1 + 256), 1);
  -[GEOPDSearchRichBrandMetadata readAll:](*(_QWORD *)(a1 + 272), 1);
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 128);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDSearchQueryEmbeddingMetadata readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

  -[GEOPDSearchQueryNeuralRewriteMetadata readAll:](*(_QWORD *)(a1 + 184), 1);
}

unint64_t GEOPDSearchQueryIntentMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 292))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryIntentMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 296));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 288) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 292) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryIntentMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryIntentMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryIntentMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryIntentMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 296));
  return Specified;
}

void sub_18903F98C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryTokenizerMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_39;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_38;
        }
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((_DWORD)v17 != 1)
        goto LABEL_35;
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if (v15 != 2)
      goto LABEL_41;
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_41;
    goto LABEL_38;
  }
LABEL_39:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOPDSearchQueryTokenImportanceMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
        {
LABEL_57:
          PBReaderRecallMark();
          return 0;
        }
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            v19 |= (unint64_t)(v23 & 0x7F) << v17;
            if ((v23 & 0x80) == 0)
              goto LABEL_32;
            v17 += 7;
            v13 = v18++ >= 9;
            if (v13)
            {
              v19 = 0;
              v24 = *v4;
              v25 = a1[v24];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          v24 = *v4;
          v25 = a1[v24];
          if (a1[v24])
            v19 = 0;
LABEL_34:
          v26 = v19 & 7;
          if (v25 || v26 == 4)
            break;
          if ((v19 >> 3) == 2)
          {
            if (v26 != 5)
              goto LABEL_56;
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            if (v29 <= 0xFFFFFFFFFFFFFFFBLL && (v30 = v29 + 4, v30 <= *(_QWORD *)&a1[*v3]))
              *(_QWORD *)&a1[v28] = v30;
            else
              a1[v24] = 1;
          }
          else if ((v19 >> 3) == 1)
          {
            if (v26 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_56:
              PBReaderRecallMark();
              goto LABEL_57;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_56;
          }
        }
        v31 = a1[*v4];
        PBReaderRecallMark();
        if (v31)
          goto LABEL_57;
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_57;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_189040588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryIntentMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  os_unfair_lock_s *v3;
  char IsDirty;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 296));
  v2 = *(_QWORD *)(a1 + 308);
  if ((v2 & 0x480000200) != 0)
    return 1;
  if ((v2 & 0x4000000) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 224);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDSearchQueryTagMetadataIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 16);
      if ((IsDirty & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 308);
    }
  }
  if ((v2 & 0x400) == 0)
  {
    if ((v2 & 0x1000000) != 0)
    {
      v5 = *(_QWORD *)(a1 + 208);
      if (v5)
      {
        os_unfair_lock_lock_with_options();
        os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 72));
        v6 = *(unsigned __int16 *)(v5 + 100);
        os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 72));
        if (v6 > 0x7FF)
          return 1;
      }
      v2 = *(_QWORD *)(a1 + 308);
    }
    if ((v2 & 0x20020) == 0)
    {
      if ((v2 & 0x2000000) != 0)
      {
        if (GEOPDSearchQuerySynonymMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 216)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x4000) != 0)
      {
        if ((GEOPDSearchQueryDymMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 120)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x800) != 0)
      {
        if (GEOPDSearchQueryCompletionMetadataIsDirty(*(_QWORD *)(a1 + 96)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x100000) != 0)
      {
        if (GEOPDSearchQueryInterpretationMetadataIsDirty(*(_QWORD *)(a1 + 176)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x2000) != 0)
      {
        if (GEOPDSearchQueryDirectionsIntentMetadataIsDirty(*(_QWORD *)(a1 + 112)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x400000) != 0)
      {
        if (GEOPDSearchQueryNormalizerMetadataIsDirty(*(_QWORD *)(a1 + 192)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x40000) != 0)
      {
        if (GEOPDSearchQueryGeoNormalizerMetadataIsDirty(*(_QWORD *)(a1 + 152)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x10000000) != 0)
      {
        if ((GEOPDSearchQueryTokenizerMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 240)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x20000000) != 0)
      {
        if (GEOPDSearchQueryTransliteratorMetadataIsDirty(*(_QWORD *)(a1 + 248)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x10000) != 0)
      {
        if ((GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty(*(os_unfair_lock_s **)(a1 + 136)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x800040) != 0)
        return 1;
      if ((v2 & 0x80) != 0)
      {
        if ((GEOPDSearchACHintMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x80000) != 0)
      {
        if ((GEOPDSearchQueryGeoTagMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 160)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x40000000) != 0)
      {
        if ((GEOPDSearchQueryTokenizerMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 256)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x8000100) != 0)
        return 1;
      if ((v2 & 0x100000000) != 0)
      {
        if (GEOPDSearchRichBrandMetadataIsDirty(*(_QWORD *)(a1 + 272)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x200008000) != 0)
        return 1;
      if ((v2 & 0x200000) != 0)
      {
        if (GEOPDSearchQueryNeuralRewriteMetadataIsDirty(*(_QWORD *)(a1 + 184)))
          return 1;
        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x1000) != 0)
        return 1;
      if ((v2 & 0x400) != 0)
      {
        v22 = 0u;
        v23 = 0u;
        v20 = 0u;
        v21 = 0u;
        v9 = *(id *)(a1 + 88);
        v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
        if (v10)
        {
          v11 = v10;
          v12 = *(_QWORD *)v21;
LABEL_66:
          v13 = 0;
          while (1)
          {
            if (*(_QWORD *)v21 != v12)
              objc_enumerationMutation(v9);
            if ((GEOPDSearchQueryClassificationMetadataIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v20 + 1) + 8 * v13)) & 1) != 0)
              goto LABEL_84;
            if (v11 == ++v13)
            {
              v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
              if (v11)
                goto LABEL_66;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 308);
      }
      if ((v2 & 0x8000) == 0)
        return 0;
      v18 = 0u;
      v19 = 0u;
      v16 = 0u;
      v17 = 0u;
      v9 = *(id *)(a1 + 128);
      v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
      if (!v7)
      {
LABEL_85:

        return v7;
      }
      v14 = *(_QWORD *)v17;
LABEL_77:
      v15 = 0;
      while (1)
      {
        if (*(_QWORD *)v17 != v14)
          objc_enumerationMutation(v9);
        if ((GEOPDSearchQueryEmbeddingMetadataIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1)
                                                                                             + 8 * v15)) & 1) != 0)
          break;
        if (v7 == ++v15)
        {
          v7 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
          if (v7)
            goto LABEL_77;
          goto LABEL_85;
        }
      }
LABEL_84:
      v7 = 1;
      goto LABEL_85;
    }
  }
  return 1;
}

void sub_189041124(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryInterpretationMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  int v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  GEOPDSearchPair *v57;
  char v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 2;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v59 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v58 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_84;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_84:
      if ((v15 & 1) != 0)
      {
        v52 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          v53 = *v16++;
          v54 = 16;
          switch(v53)
          {
            case 0:
              goto LABEL_96;
            case 2:
              goto LABEL_91;
            case 3:
              v54 = 32;
              goto LABEL_91;
            case 5:
              v54 = 8;
              goto LABEL_91;
            case 6:
              v54 = 4;
LABEL_91:
              *(_BYTE *)(a1 + 68) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_96;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v59 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        *(_BYTE *)(a1 + 68) |= 1u;
        v36 = *v17;
        v37 = *(_QWORD *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v38 = *(_DWORD *)(*(_QWORD *)(v3 + *v19) + v37);
          *(_QWORD *)(v3 + v36) = v37 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v38 = 0;
        }
        *(_DWORD *)(a1 + 60) = v38;
        goto LABEL_83;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v57 = objc_alloc_init(GEOPDSearchPair);
        if (!GEOPDSearchPairReadAllFrom((uint64_t)v57, (void *)v3))
          goto LABEL_93;
        PBReaderRecallMark();
        -[GEOPDSearchQueryInterpretationMetadata _addNoFlagsFeatureMap:](a1, v57);
        goto LABEL_53;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 68) & 0x20) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_94;
        v57 = objc_alloc_init(GEOPDSearchTriggerFeature);
        if (GEOPDSearchTriggerFeatureReadAllFrom((uint64_t)v57, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQueryInterpretationMetadata _addNoFlagsTriggerFeatures:](a1, v57);
LABEL_53:

LABEL_80:
          v15 = v58;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_84;
          continue;
        }
LABEL_93:

LABEL_94:
        v52 = 0;
        v15 = v58;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 0x20u;
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 4u;
        if ((v52 & 1) != 0)
        {
LABEL_96:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_97;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_97:
            v55 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_69;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v43 = *v17;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v27 = v41++ >= 9;
              if (v27)
              {
                v42 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v42 = 0;
LABEL_74:
        *(_BYTE *)(a1 + 64) = v42 != 0;
        goto LABEL_83;
      case 5:
        if (!v31)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v47 = objc_claimAutoreleasedReturnValue();
          v48 = 24;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_94;
        v51 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_79;
      case 6:
        if (v31)
        {
          if ((*(_BYTE *)(a1 + 68) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_94;
            v51 = 32 * *(_BYTE *)(a1 + 68);
LABEL_79:
            v7 += v51 >> 7;
          }
          else
          {
            PBReaderReadString();
            v47 = objc_claimAutoreleasedReturnValue();
            v48 = 16;
LABEL_68:
            v49 = *(void **)(a1 + v48);
            *(_QWORD *)(a1 + v48) = v47;

            --v7;
          }
          goto LABEL_80;
        }
LABEL_69:
        v50 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v58;
        if ((v50 & 1) == 0)
        {
LABEL_92:
          v52 = 0;
          goto LABEL_95;
        }
        goto LABEL_83;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v58;
        if (!v39)
          goto LABEL_92;
        goto LABEL_83;
    }
  }
}

void sub_1890423E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904255C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189042B30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189042C10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryInterpretationMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    while (1)
    {
      if (*(_QWORD *)v16 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
        if (!v4)
          break;
      }
    }
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v6 = *(id *)(a1 + 40);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        -[GEOPDSearchTriggerFeature readAll:](*(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
    }
    while (v8);
  }

}

unint64_t GEOPDSearchQueryInterpretationMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryInterpretationMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryInterpretationMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryInterpretationMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryInterpretationMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryInterpretationMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189042F20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189043244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryInterpretationMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 68) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18904360C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNeuralRewriteMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  char v44;
  void *v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_66;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_66:
      if ((v12 & 1) != 0)
      {
        v42 = 1;
        goto LABEL_75;
      }
      if (v13)
      {
        while (1)
        {
          v43 = *v13++;
          v44 = 4;
          switch(v43)
          {
            case 0:
              goto LABEL_76;
            case 1:
              goto LABEL_72;
            case 3:
              v44 = 2;
              goto LABEL_72;
            case 4:
              v44 = 8;
LABEL_72:
              *(_BYTE *)(a1 + 56) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_76;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28)
          goto LABEL_54;
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 24;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_74;
        v41 = 32 * *(_BYTE *)(a1 + 56);
        goto LABEL_62;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_54;
        *(_BYTE *)(a1 + 56) |= 1u;
        v36 = *v14;
        v37 = *(_QWORD *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v38 = *(_DWORD *)(*(_QWORD *)(v3 + *v16) + v37);
          *(_QWORD *)(v3 + v36) = v37 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v15) = 1;
          v38 = 0;
        }
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_65;
      case 3:
        if (!v28)
          goto LABEL_54;
        if ((*(_BYTE *)(a1 + 56) & 2) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 16;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_74;
        v41 = *(_BYTE *)(a1 + 56) << 6;
        goto LABEL_62;
      case 4:
        if (!v28)
        {
LABEL_54:
          v40 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v40 & 1) == 0)
          {
LABEL_73:
            v42 = 0;
            goto LABEL_75;
          }
          goto LABEL_65;
        }
        if ((*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 32;
LABEL_53:
          v39 = *(void **)(a1 + v34);
          *(_QWORD *)(a1 + v34) = v33;

          v15 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v41 = 16 * *(_BYTE *)(a1 + 56);
LABEL_62:
          v9 += v41 >> 7;
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_65:
          if (!(v12 & 1 | (v9 != 0)))
            goto LABEL_66;
          continue;
        }
LABEL_74:
        v42 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_75:
        *(_BYTE *)(a1 + 56) |= 4u;
        *(_BYTE *)(a1 + 56) |= 2u;
        *(_BYTE *)(a1 + 56) |= 8u;
        if ((v42 & 1) != 0)
        {
LABEL_76:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_77;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_77:
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v35 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v35)
          goto LABEL_73;
        goto LABEL_65;
    }
  }
}

void sub_189044214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890442E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryNeuralRewriteMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189044470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189044624(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryNeuralRewriteMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18904483C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNormalizerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v25;
  unint64_t v27;
  BOOL v28;
  int *v29;
  int v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  char v37;
  char v38;
  char v39;
  int v40;
  char v41;
  void *v42;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_63;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_63:
      if ((v12 & 1) != 0)
      {
        v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          v40 = *v13++;
          v41 = 4;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 2:
              v41 = 1;
              goto LABEL_69;
            case 3:
              v41 = 2;
LABEL_69:
              *(_BYTE *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    v27 = v19 >> 3;
    v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v29 = v13;
      do
      {
        v31 = *v29++;
        v30 = v31;
        v28 = v31 != 0;
        if (v31)
          v32 = v30 == (_DWORD)v27;
        else
          v32 = 1;
      }
      while (!v32);
    }
    if ((_DWORD)v27 == 3)
    {
      if (!v28)
        goto LABEL_52;
      if ((*(_BYTE *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v38 = *(_BYTE *)(a1 + 52) << 6;
        goto LABEL_58;
      }
      PBReaderReadString();
      v33 = objc_claimAutoreleasedReturnValue();
      v34 = 24;
LABEL_49:
      v35 = *(void **)(a1 + v34);
      *(_QWORD *)(a1 + v34) = v33;

      --v9;
      goto LABEL_61;
    }
    if ((_DWORD)v27 != 2)
    {
      if ((_DWORD)v27 != 1)
      {
        v36 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_70;
        goto LABEL_62;
      }
      if (v28)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          PBReaderReadString();
          v33 = objc_claimAutoreleasedReturnValue();
          v34 = 32;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v38 = 32 * *(_BYTE *)(a1 + 52);
LABEL_58:
        v9 += v38 >> 7;
LABEL_61:
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_62:
        if (!(v12 & 1 | (v9 != 0)))
          goto LABEL_63;
        continue;
      }
LABEL_52:
      v37 = PBReaderSkipValueWithTag();
      v15 = (int *)MEMORY[0x1E0D82BC8];
      if ((v37 & 1) == 0)
      {
LABEL_70:
        v39 = 0;
        goto LABEL_72;
      }
      goto LABEL_62;
    }
    break;
  }
  if (!v28)
    goto LABEL_52;
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    PBReaderReadString();
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = 16;
    goto LABEL_49;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 -= *(_BYTE *)(a1 + 52) & 1;
    goto LABEL_61;
  }
LABEL_71:
  v39 = 0;
  v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 52) |= 4u;
  *(_BYTE *)(a1 + 52) |= 1u;
  *(_BYTE *)(a1 + 52) |= 2u;
  if ((v39 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if ((v12 & 1) != 0)
  {
LABEL_74:
    v42 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18904529C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904536C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNormalizerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryNormalizerMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryNormalizerMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryNormalizerMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryNormalizerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890454F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189045688(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryNormalizerMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189045864(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryPoiMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEONamedFeature *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEONamedFeature);
          if (!GEONamedFeatureReadAllFrom(v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryPoiMetadata addNamedFeature:](a1, v18);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189045EC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQuerySpellCorrectionMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const __int16 *v11;
  uint16x4_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  void *v39;
  int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  int v116;
  __int16 v117;
  void *v118;
  GEOPDSearchSpellSuggestion *v120;
  char v121;
  char v122;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const __int16 *)(a1 + 100);
  v12 = (uint16x4_t)vld1_dup_s16(v11);
  v13 = *(_QWORD *)&vshl_u16(v12, (uint16x4_t)0xFFF5FFF4FFF3FFF2) & 0xFFE1FFE1FFE1FFE1;
  LOWORD(v13) = vaddv_s16((int16x4_t)v13);
  v14 = v13;
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 2;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v122 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v121 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_194;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_194:
      if ((v18 & 1) != 0)
      {
        v115 = 1;
        goto LABEL_205;
      }
      if (v19)
      {
        while (1)
        {
          v116 = *v19++;
          v117 = 0x2000;
          switch(v116)
          {
            case 0:
              goto LABEL_206;
            case 1:
              goto LABEL_201;
            case 6:
              v117 = 0x4000;
              goto LABEL_201;
            case 9:
              v117 = 4096;
              goto LABEL_201;
            case 10:
              v117 = 2048;
LABEL_201:
              *(_WORD *)(a1 + 100) |= v117;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_206;
    }
    v33 = v25 >> 3;
    v34 = v18;
    if ((v122 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_144;
        if ((*(_WORD *)(a1 + 100) & 0x2000) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_204;
          v120 = objc_alloc_init(GEOPDSearchSpellSuggestion);
          if (GEOPDSearchSpellSuggestionReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            v39 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v120;

            --v7;
            goto LABEL_190;
          }
          goto LABEL_203;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_204;
        v7 += *(unsigned __int16 *)(a1 + 100) << 18 >> 31;
        goto LABEL_190;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 100) |= 0x200u;
        while (2)
        {
          v44 = *v20;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v30 = v42++ >= 9;
              if (v30)
              {
                v43 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v43 = 0;
LABEL_149:
        v112 = v43 != 0;
        v113 = 95;
        goto LABEL_178;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          v51 = *v20;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v30 = v49++ >= 9;
              if (v30)
              {
                LODWORD(v50) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v50) = 0;
LABEL_153:
        v114 = 84;
        goto LABEL_187;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        while (2)
        {
          v58 = *v20;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v30 = v56++ >= 9;
              if (v30)
              {
                v57 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v57 = 0;
LABEL_157:
        *(_QWORD *)(a1 + 32) = v57;
        goto LABEL_193;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + 100) |= 0x400u;
        while (2)
        {
          v65 = *v20;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v30 = v63++ >= 9;
              if (v30)
              {
                v64 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v64 = 0;
LABEL_161:
        v112 = v64 != 0;
        v113 = 96;
        goto LABEL_178;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x4000) != 0)
          goto LABEL_144;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_204;
        v120 = objc_alloc_init(GEOPDSearchTokenCandidates);
        if (!GEOPDSearchTokenCandidatesReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1))
          goto LABEL_203;
        PBReaderRecallMark();
        -[GEOPDSearchQuerySpellCorrectionMetadata _addNoFlagsTokenCandidate:](a1, v120);
        goto LABEL_103;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        *(_WORD *)(a1 + 100) |= 2u;
        v69 = *v20;
        v70 = *(_QWORD *)(v3 + v69);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v71 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v70);
          *(_QWORD *)(v3 + v69) = v70 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v71 = 0;
        }
        *(_QWORD *)(a1 + 40) = v71;
        goto LABEL_193;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v72 = 0;
        v73 = 0;
        v74 = 0;
        *(_WORD *)(a1 + 100) |= 0x100u;
        while (2)
        {
          v75 = *v20;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v30 = v73++ >= 9;
              if (v30)
              {
                v74 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v74 = 0;
LABEL_165:
        v112 = v74 != 0;
        v113 = 94;
        goto LABEL_178;
      case 9:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x1000) != 0)
          goto LABEL_144;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_204;
        v120 = objc_alloc_init(GEOPDSearchTokenCandidates);
        if (!GEOPDSearchTokenCandidatesReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1))
          goto LABEL_203;
        PBReaderRecallMark();
        -[GEOPDSearchQuerySpellCorrectionMetadata _addNoFlagsAllTokenCandidates:](a1, v120);
        goto LABEL_103;
      case 10:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x800) != 0)
          goto LABEL_144;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_204;
        v120 = objc_alloc_init(GEOPDSearchSpellSuggestion);
        if (GEOPDSearchSpellSuggestionReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQuerySpellCorrectionMetadata _addNoFlagsAllSpellSuggestions:](a1, v120);
LABEL_103:

LABEL_190:
          v18 = v121;
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_193:
          if (!(v18 & 1 | (v7 != 0)))
            goto LABEL_194;
          continue;
        }
LABEL_203:

LABEL_204:
        v115 = 0;
        v18 = v121;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_205:
        *(_WORD *)(a1 + 100) |= 0x2000u;
        *(_WORD *)(a1 + 100) |= 0x4000u;
        *(_WORD *)(a1 + 100) |= 0x1000u;
        *(_WORD *)(a1 + 100) |= 0x800u;
        if ((v115 & 1) != 0)
        {
LABEL_206:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_207;
        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
          {
LABEL_207:
            v118 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v79 = 0;
        v80 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          v81 = *v20;
          v82 = *(_QWORD *)(v3 + v81);
          v83 = v82 + 1;
          if (v82 == -1 || v83 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v84 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v82);
            *(_QWORD *)(v3 + v81) = v83;
            v50 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              v30 = v80++ >= 9;
              if (v30)
              {
                LODWORD(v50) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v50) = 0;
LABEL_169:
        v114 = 88;
        goto LABEL_187;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v85 = 0;
        v86 = 0;
        v87 = 0;
        *(_WORD *)(a1 + 100) |= 0x40u;
        while (2)
        {
          v88 = *v20;
          v89 = *(_QWORD *)(v3 + v88);
          v90 = v89 + 1;
          if (v89 == -1 || v90 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v91 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v89);
            *(_QWORD *)(v3 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              v30 = v86++ >= 9;
              if (v30)
              {
                v87 = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v87 = 0;
LABEL_173:
        v112 = v87 != 0;
        v113 = 92;
        goto LABEL_178;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v92 = 0;
        v93 = 0;
        v94 = 0;
        *(_WORD *)(a1 + 100) |= 0x80u;
        while (2)
        {
          v95 = *v20;
          v96 = *(_QWORD *)(v3 + v95);
          v97 = v96 + 1;
          if (v96 == -1 || v97 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v98 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v96);
            *(_QWORD *)(v3 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              v30 = v93++ >= 9;
              if (v30)
              {
                v94 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v94 = 0;
LABEL_177:
        v112 = v94 != 0;
        v113 = 93;
LABEL_178:
        *(_BYTE *)(a1 + v113) = v112;
        goto LABEL_193;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_144;
        v99 = 0;
        v100 = 0;
        v50 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          v101 = *v20;
          v102 = *(_QWORD *)(v3 + v101);
          v103 = v102 + 1;
          if (v102 == -1 || v103 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v102);
            *(_QWORD *)(v3 + v101) = v103;
            v50 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              v30 = v100++ >= 9;
              if (v30)
              {
                LODWORD(v50) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v50) = 0;
LABEL_182:
        v114 = 76;
        goto LABEL_187;
      case 15:
        if ((v8 & 1) != 0)
        {
          v105 = 0;
          v106 = 0;
          v50 = 0;
          *(_WORD *)(a1 + 100) |= 8u;
          while (1)
          {
            v107 = *v20;
            v108 = *(_QWORD *)(v3 + v107);
            v109 = v108 + 1;
            if (v108 == -1 || v109 > *(_QWORD *)(v3 + *v6))
              break;
            v110 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v108);
            *(_QWORD *)(v3 + v107) = v109;
            v50 |= (unint64_t)(v110 & 0x7F) << v105;
            if ((v110 & 0x80) == 0)
              goto LABEL_184;
            v105 += 7;
            v30 = v106++ >= 9;
            if (v30)
            {
              LODWORD(v50) = 0;
              goto LABEL_186;
            }
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_184:
          if (*(_BYTE *)(v3 + *v21))
            LODWORD(v50) = 0;
LABEL_186:
          v114 = 80;
LABEL_187:
          *(_DWORD *)(a1 + v114) = v50;
        }
        else
        {
LABEL_144:
          v111 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v121;
          if ((v111 & 1) == 0)
          {
LABEL_202:
            v115 = 0;
            goto LABEL_205;
          }
        }
        goto LABEL_193;
      default:
        v40 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v121;
        if (!v40)
          goto LABEL_202;
        goto LABEL_193;
    }
  }
}

void sub_189047094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904720C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189047384(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189047D1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189047DF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQuerySpellCorrectionMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v2 = a1[7];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v25;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v25 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchTokenCandidates readAll:](*(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
    }
    while (v4);
  }

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v7 = a1[3];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v21;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v21 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDSearchTokenCandidates readAll:](*(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v29, 16);
    }
    while (v9);
  }

  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v12 = a1[2];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v17;
    while (1)
    {
      if (*(_QWORD *)v17 != v15)
        objc_enumerationMutation(v12);
      if (!--v14)
      {
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v16, v28, 16);
        if (!v14)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQuerySpellCorrectionMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQuerySpellCorrectionMetadataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1890481A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189048674(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189048BC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQuerySynonymMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  const float *v10;
  uint32x4_t v11;
  int8x16_t v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  GEOPDSearchPair *v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  void *v91;
  char v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  int v96;
  char v97;
  int v98;
  int v99;
  void *v100;
  GEOPDSearchPair *v102;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (const float *)(a1 + 116);
  v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  v13 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_189CD40B0), v12), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_189CD40C0), v12)));
  while (1)
  {
    v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  v15 = v9 | (v13 > 5);
  if (v9 & 1 | (v13 > 5) | v8 & 1)
    v16 = 0;
  else
    v16 = a3;
  v17 = (int *)MEMORY[0x1E0D82BF0];
  v18 = (int *)MEMORY[0x1E0D82BC8];
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_179;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_179:
      if ((v15 & 1) != 0)
      {
        v97 = 1;
        goto LABEL_192;
      }
      if (v16)
      {
        while (1)
        {
          v98 = *v16++;
          v99 = 2048;
          switch(v98)
          {
            case 0:
              goto LABEL_193;
            case 2:
              goto LABEL_190;
            case 3:
              v99 = 0x4000;
              goto LABEL_190;
            case 4:
              v99 = 4096;
              goto LABEL_190;
            case 5:
              v99 = 256;
              goto LABEL_190;
            case 6:
              v99 = 1024;
              goto LABEL_190;
            case 14:
              v99 = 0x2000;
              goto LABEL_190;
            case 15:
              v99 = 0x8000;
              goto LABEL_190;
            case 16:
              v99 = 512;
LABEL_190:
              *(_DWORD *)(a1 + 116) |= v99;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_193;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_DWORD *)(a1 + 116) |= 1u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_134;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            v38 = 0;
            goto LABEL_136;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_134:
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_136:
        *(_QWORD *)(a1 + 40) = v38;
        goto LABEL_175;
      case 2:
        if (!v31)
          goto LABEL_131;
        if ((*(_BYTE *)(a1 + 117) & 8) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 48;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_199;
        v96 = (int)(*(_DWORD *)(a1 + 116) << 20) >> 31;
        goto LABEL_173;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 117) & 0x40) != 0)
          goto LABEL_131;
        PBReaderReadString();
        v46 = (GEOPDSearchPair *)objc_claimAutoreleasedReturnValue();
        if (!v46)
          goto LABEL_130;
        v102 = v46;
        -[GEOPDSearchQuerySynonymMetadata _addNoFlagsRefinementQueries:](a1, v46);
        goto LABEL_129;
      case 4:
        if (!v31)
          goto LABEL_131;
        if ((*(_BYTE *)(a1 + 117) & 0x10) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 56;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_199;
        v96 = (int)(*(_DWORD *)(a1 + 116) << 19) >> 31;
        goto LABEL_173;
      case 5:
        if (!v31)
          goto LABEL_131;
        if ((*(_BYTE *)(a1 + 117) & 1) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 16;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_199;
        v96 = (int)(*(_DWORD *)(a1 + 116) << 23) >> 31;
        goto LABEL_173;
      case 6:
        if (!v31 || (*(_BYTE *)(a1 + 117) & 4) != 0)
          goto LABEL_131;
        PBReaderReadString();
        v46 = (GEOPDSearchPair *)objc_claimAutoreleasedReturnValue();
        if (!v46)
          goto LABEL_130;
        v102 = v46;
        -[GEOPDSearchQuerySynonymMetadata _addNoFlagsGeoHashes:](a1, v46);
        goto LABEL_129;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        *(_DWORD *)(a1 + 116) |= 2u;
        v47 = *v17;
        v48 = *(_QWORD *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFFBLL && v48 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v49 = *(_DWORD *)(*(_QWORD *)(v3 + *v19) + v48);
          *(_QWORD *)(v3 + v47) = v48 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v49 = 0;
        }
        *(_DWORD *)(a1 + 100) = v49;
        goto LABEL_175;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_DWORD *)(a1 + 116) |= 8u;
        while (2)
        {
          v53 = *v17;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v27 = v51++ >= 9;
              if (v27)
              {
                LODWORD(v52) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v52) = 0;
LABEL_140:
        v93 = 108;
        goto LABEL_153;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_DWORD *)(a1 + 116) |= 0x80u;
        while (2)
        {
          v60 = *v17;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v27 = v58++ >= 9;
              if (v27)
              {
                v59 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v59 = 0;
LABEL_144:
        v94 = v59 != 0;
        v95 = 115;
        goto LABEL_162;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        v64 = 0;
        v65 = 0;
        v66 = 0;
        *(_DWORD *)(a1 + 116) |= 0x10u;
        while (2)
        {
          v67 = *v17;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              v27 = v65++ >= 9;
              if (v27)
              {
                v66 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v66 = 0;
LABEL_148:
        v94 = v66 != 0;
        v95 = 112;
        goto LABEL_162;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        v71 = 0;
        v72 = 0;
        v52 = 0;
        *(_DWORD *)(a1 + 116) |= 4u;
        while (2)
        {
          v73 = *v17;
          v74 = *(_QWORD *)(v3 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v52 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              v27 = v72++ >= 9;
              if (v27)
              {
                LODWORD(v52) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v52) = 0;
LABEL_152:
        v93 = 104;
LABEL_153:
        *(_DWORD *)(a1 + v93) = v52;
        goto LABEL_175;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_DWORD *)(a1 + 116) |= 0x40u;
        while (2)
        {
          v80 = *v17;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v27 = v78++ >= 9;
              if (v27)
              {
                v79 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v79 = 0;
LABEL_157:
        v94 = v79 != 0;
        v95 = 114;
        goto LABEL_162;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_131;
        v84 = 0;
        v85 = 0;
        v86 = 0;
        *(_DWORD *)(a1 + 116) |= 0x20u;
        while (2)
        {
          v87 = *v17;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              v27 = v85++ >= 9;
              if (v27)
              {
                v86 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v86 = 0;
LABEL_161:
        v94 = v86 != 0;
        v95 = 113;
LABEL_162:
        *(_BYTE *)(a1 + v95) = v94;
        goto LABEL_175;
      case 14:
        if (!v31)
          goto LABEL_131;
        if ((*(_BYTE *)(a1 + 117) & 0x20) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 64;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_199;
        v96 = (int)(*(_DWORD *)(a1 + 116) << 18) >> 31;
        goto LABEL_173;
      case 15:
        if (!v31)
          goto LABEL_131;
        if ((*(_BYTE *)(a1 + 117) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_199;
          v96 = (int)(*(_DWORD *)(a1 + 116) << 16) >> 31;
LABEL_173:
          v7 += v96;
        }
        else
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 80;
LABEL_123:
          v91 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;

          --v7;
        }
        goto LABEL_174;
      case 16:
        if (!v31 || (*(_BYTE *)(a1 + 117) & 2) != 0)
        {
LABEL_131:
          v92 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v92 & 1) == 0)
          {
LABEL_191:
            v97 = 0;
            goto LABEL_192;
          }
          goto LABEL_175;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_199;
        v102 = objc_alloc_init(GEOPDSearchPair);
        if (GEOPDSearchPairReadAllFrom((uint64_t)v102, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQuerySynonymMetadata _addNoFlagsFeatureMap:](a1, v102);
LABEL_129:
          v46 = v102;
LABEL_130:

LABEL_174:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_175:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_179;
          continue;
        }

LABEL_199:
        v97 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_192:
        *(_DWORD *)(a1 + 116) |= 0x800u;
        *(_DWORD *)(a1 + 116) |= 0x4000u;
        *(_DWORD *)(a1 + 116) |= 0x1000u;
        *(_DWORD *)(a1 + 116) |= 0x100u;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        *(_DWORD *)(a1 + 116) |= 0x2000u;
        *(_DWORD *)(a1 + 116) |= 0x8000u;
        *(_DWORD *)(a1 + 116) |= 0x200u;
        if ((v97 & 1) != 0)
        {
LABEL_193:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_194;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_194:
            v100 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_191;
        goto LABEL_175;
    }
  }
}

void sub_189049F60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904A100(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904A300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904AC68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904AD54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQuerySynonymMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchQuerySynonymMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQuerySynonymMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQuerySynonymMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQuerySynonymMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQuerySynonymMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQuerySynonymMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18904BB18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904BFEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQuerySynonymMetadataIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 24);
  v2 = (a1[29]._os_unfair_lock_opaque & 0x1FF00) != 0;
  os_unfair_lock_unlock(a1 + 24);
  return v2;
}

void sub_18904C5B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTagMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  int *v16;
  _BOOL4 v17;
  BOOL v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  GEOPDSearchSpanScore *v53;
  char v54;
  uint64_t v55;
  char v56;
  int v57;
  int v58;
  char v59;
  void *v60;
  _BOOL4 v62;
  BOOL v63;
  BOOL v64;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 72) >> 5) & 1) + ((*(unsigned __int8 *)(a1 + 72) >> 4) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v7 != 0;
        if (v14)
          v15 = 1;
        v63 = v15;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v14 != 0;
        v18 = v16 == 0;
        if (v14)
          v18 = 1;
        v64 = v18;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_88;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_27;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_27:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_29:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_88:
      if (v17)
      {
        v56 = 1;
        goto LABEL_99;
      }
      if (!v16)
        goto LABEL_100;
      while (1)
      {
        v58 = *v16++;
        v57 = v58;
        if (v58 == 5)
          break;
        if (v57 == 6)
        {
          v59 = 16;
LABEL_97:
          *(_BYTE *)(a1 + 72) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_100;
        }
      }
      v59 = 32;
      goto LABEL_97;
    }
    v32 = v24 >> 3;
    v33 = v17;
    if (!v64)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 72) |= 8u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_77;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_79;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_77:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_79:
        *(_DWORD *)(a1 + 68) = v40;
        goto LABEL_87;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        *(_BYTE *)(a1 + 72) |= 2u;
        v46 = *v19;
        v47 = *(_QWORD *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v48 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v47);
          *(_QWORD *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v48 = 0;
        }
        v55 = 32;
        goto LABEL_86;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        *(_BYTE *)(a1 + 72) |= 1u;
        v49 = *v19;
        v50 = *(_QWORD *)(v3 + v49);
        if (v50 <= 0xFFFFFFFFFFFFFFF7 && v50 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v48 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v50);
          *(_QWORD *)(v3 + v49) = v50 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v48 = 0;
        }
        v55 = 24;
        goto LABEL_86;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        *(_BYTE *)(a1 + 72) |= 4u;
        v51 = *v19;
        v52 = *(_QWORD *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v48 = *(_QWORD *)(*(_QWORD *)(v3 + *v21) + v52);
          *(_QWORD *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v20) = 1;
          v48 = 0;
        }
        v55 = 40;
LABEL_86:
        *(_QWORD *)(a1 + v55) = v48;
        goto LABEL_87;
      case 5:
        if (!v33 || (*(_BYTE *)(a1 + 72) & 0x20) != 0)
          goto LABEL_74;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_105;
        v62 = v17;
        v53 = objc_alloc_init(GEOPDSearchSpanScore);
        if (!GEOPDSearchSpanScoreReadAllFrom((uint64_t)v53, (void *)v3))
          goto LABEL_106;
        PBReaderRecallMark();
        -[GEOPDSearchQueryTagMetadata _addNoFlagsSpanScore:](a1, v53);
        goto LABEL_73;
      case 6:
        if (!v33 || (*(_BYTE *)(a1 + 72) & 0x10) != 0)
        {
LABEL_74:
          v54 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v54 & 1) == 0)
          {
LABEL_98:
            v56 = 0;
            goto LABEL_99;
          }
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) != 0)
        {
          v62 = v17;
          v53 = objc_alloc_init(GEOPDSearchStringStringPair);
          if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v53, (void *)v3, v9 & 1))
          {
LABEL_106:

            v56 = 0;
            v17 = v62;
            goto LABEL_107;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryTagMetadata _addNoFlagsModelVersion:](a1, v53);
LABEL_73:

          v17 = v62;
          v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_87:
          if (!v63)
            goto LABEL_88;
          continue;
        }
LABEL_105:
        v56 = 0;
LABEL_107:
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
        *(_BYTE *)(a1 + 72) |= 0x20u;
        *(_BYTE *)(a1 + 72) |= 0x10u;
        if ((v56 & 1) != 0)
        {
LABEL_100:
          v3 = *(_BYTE *)(v3 + *v20) == 0;
          if (v17)
            goto LABEL_101;
        }
        else
        {
          v3 = 0;
          if (v17)
          {
LABEL_101:
            v60 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v45 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if (!v45)
          goto LABEL_98;
        goto LABEL_87;
    }
  }
}

void sub_18904D3EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904D564(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904DB58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryTagMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    while (1)
    {
      if (*(_QWORD *)v16 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
        if (!v4)
          break;
      }
    }
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v6 = *(id *)(a1 + 16);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        -[GEOPDSearchStringStringPair readAll:](*(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
    }
    while (v8);
  }

}

unint64_t GEOPDSearchQueryTagMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryTagMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryTagMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryTagMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryTagMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchQueryTagMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18904DE68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904E198(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryTagMetadataIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(_BYTE *)(a1 + 72) & 0x70) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDSearchStringStringPairIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

void sub_18904E640(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryTokenImportanceMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDSearchTokenImportance *v18;
  _BOOL8 v19;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v18 = objc_alloc_init(GEOPDSearchTokenImportance);
          if (!GEOPDSearchTokenImportanceReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryTokenImportanceMetadata addTokenImportance:](a1, v18);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18904F174(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTokenizerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDSearchTokenSet *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  int v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  int v55;
  void *v56;
  _BOOL4 v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v59 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_76;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        v52 = 1;
        goto LABEL_91;
      }
      if (!v15)
        goto LABEL_92;
      while (1)
      {
        v55 = *v15++;
        v54 = v55;
        if (v55 == 1)
          break;
        if (v54 == 3)
        {
          v53 = 4;
LABEL_82:
          *(_BYTE *)(a1 + 48) |= v53;
        }
        else if (!v54)
        {
          goto LABEL_92;
        }
      }
      v53 = 2;
      goto LABEL_82;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v59)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 48) & 4) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v39;

          --v9;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_88:
          v52 = 0;
          goto LABEL_90;
        }
        v50 = 32 * *(_BYTE *)(a1 + 48);
LABEL_70:
        v9 += v50 >> 7;
        goto LABEL_71;
      }
      goto LABEL_60;
    }
    if ((_DWORD)v31 == 2)
    {
      if ((v8 & 1) != 0)
      {
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v44 = *v18;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
            break;
          v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v45);
          *(_QWORD *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0)
            goto LABEL_63;
          v41 += 7;
          v28 = v42++ >= 9;
          if (v28)
          {
            LODWORD(v43) = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v43) = 0;
LABEL_65:
        *(_DWORD *)(a1 + 44) = v43;
        goto LABEL_72;
      }
      goto LABEL_60;
    }
    if ((_DWORD)v31 != 1)
    {
      v48 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v48)
        goto LABEL_87;
      goto LABEL_72;
    }
    if (v32)
      break;
LABEL_60:
    v49 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v49 & 1) == 0)
    {
LABEL_87:
      v52 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v9)
      v51 = 1;
    else
      v51 = v16;
    if ((v51 & 1) == 0)
      goto LABEL_76;
  }
  if ((*(_BYTE *)(a1 + 48) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_88;
    v50 = *(_BYTE *)(a1 + 48) << 6;
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_88;
  v58 = v16;
  v37 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v38 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v37;

    --v9;
    v16 = v58;
LABEL_71:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_72;
  }

  v52 = 0;
  v16 = v58;
LABEL_90:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
  *(_BYTE *)(a1 + 48) |= 2u;
  *(_BYTE *)(a1 + 48) |= 4u;
  if ((v52 & 1) != 0)
  {
LABEL_92:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_93;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_93:
      v56 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_18904FD38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18904FE1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTokenizerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryTokenizerMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryTokenizerMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryTokenizerMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryTokenizerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 16), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1890502E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189050474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryTokenizerMetadataIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(unsigned __int8 *)(a1 + 48);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 16)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 48);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDSearchQueryTokenizerMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchQueryTokenizerMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1890506C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTransliteratorMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  int v46;
  char v47;
  char v48;
  char v49;
  char v50;
  int v51;
  int v52;
  void *v53;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v55 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_75;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_75:
      if (v13)
      {
        v50 = 1;
        goto LABEL_85;
      }
      if (!v14)
        goto LABEL_86;
      while (1)
      {
        while (1)
        {
          v52 = *v14++;
          v51 = v52;
          if (v52 != 1)
            break;
          LOBYTE(v51) = 4;
LABEL_83:
          *(_BYTE *)(a1 + 48) |= v51;
        }
        if (v51 == 2)
          goto LABEL_83;
        if (!v51)
          goto LABEL_86;
      }
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v55)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 3)
    {
      if ((v8 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v40 = *v16;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_62;
          v37 += 7;
          v26 = v38++ >= 9;
          if (v26)
          {
            LODWORD(v39) = 0;
            goto LABEL_64;
          }
        }
        *(_BYTE *)(v3 + *v17) = 1;
LABEL_62:
        if (*(_BYTE *)(v3 + *v17))
          LODWORD(v39) = 0;
LABEL_64:
        *(_DWORD *)(a1 + 44) = v39;
        goto LABEL_71;
      }
      goto LABEL_59;
    }
    if ((_DWORD)v29 != 2)
    {
      if ((_DWORD)v29 != 1)
      {
        v46 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v46)
          goto LABEL_84;
        goto LABEL_71;
      }
      if (v30)
      {
        if ((*(_BYTE *)(a1 + 48) & 4) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v35;

          v17 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_91;
        v48 = 32 * *(_BYTE *)(a1 + 48);
LABEL_69:
        v9 += v48 >> 7;
LABEL_70:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_71:
        if (v9)
          v49 = 1;
        else
          v49 = v13;
        if ((v49 & 1) == 0)
          goto LABEL_75;
        continue;
      }
LABEL_59:
      v47 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v47 & 1) == 0)
      {
LABEL_84:
        v50 = 0;
        goto LABEL_85;
      }
      goto LABEL_71;
    }
    break;
  }
  if (!v30)
    goto LABEL_59;
  if ((*(_BYTE *)(a1 + 48) & 2) == 0)
  {
    PBReaderReadString();
    v44 = objc_claimAutoreleasedReturnValue();
    v45 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v44;

    --v9;
    goto LABEL_70;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v48 = *(_BYTE *)(a1 + 48) << 6;
    goto LABEL_69;
  }
LABEL_91:
  v50 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
  *(_BYTE *)(a1 + 48) |= 4u;
  *(_BYTE *)(a1 + 48) |= 2u;
  if ((v50 & 1) != 0)
  {
LABEL_86:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (v13)
      goto LABEL_87;
  }
  else
  {
    v3 = 0;
    if (v13)
    {
LABEL_87:
      v53 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_1890510B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905117C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTransliteratorMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchQueryTransliteratorMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchQueryTransliteratorMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchQueryTransliteratorMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchQueryTransliteratorMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189051308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890514A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryTransliteratorMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189051698(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRelatedCategoryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v24 = *v4;
            v25 = *(_QWORD *)&v3[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
            *(_QWORD *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_40;
            v21 += 7;
            v15 = v22++ >= 9;
            if (v15)
            {
              v23 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6])
            v23 = 0;
LABEL_42:
          *(_QWORD *)(a1 + 8) = v23;
        }
        else if ((_DWORD)v18 == 2)
        {
          v28 = 0;
          v29 = 0;
          v30 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v31 = *v4;
            v32 = *(_QWORD *)&v3[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
              break;
            v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
            *(_QWORD *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0)
              goto LABEL_44;
            v28 += 7;
            v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v30) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            LODWORD(v30) = 0;
LABEL_46:
          *(_DWORD *)(a1 + 24) = v30;
        }
        else if ((_DWORD)v18 == 1)
        {
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189051F6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRewrittenQueryNonPayloadFieldReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  void *v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  _BOOL8 v71;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 32) |= 0x20u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_73;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_75;
              }
            }
            v3[*v6] = 1;
LABEL_73:
            if (v3[*v6])
              v20 = 0;
LABEL_75:
            v68 = v20 != 0;
            v69 = 27;
            goto LABEL_92;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_BYTE *)(a1 + 32) |= 4u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_79:
            v68 = v27 != 0;
            v69 = 24;
            goto LABEL_92;
          case 3u:
            v32 = 0;
            v33 = 0;
            v34 = 0;
            *(_BYTE *)(a1 + 32) |= 8u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_83:
            v68 = v34 != 0;
            v69 = 25;
            goto LABEL_92;
          case 4u:
            v39 = 0;
            v40 = 0;
            v41 = 0;
            *(_BYTE *)(a1 + 32) |= 0x40u;
            while (2)
            {
              v42 = *v4;
              v43 = *(_QWORD *)&v3[v42];
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
                *(_QWORD *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  v15 = v40++ >= 9;
                  if (v15)
                  {
                    v41 = 0;
                    goto LABEL_87;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v41 = 0;
LABEL_87:
            v68 = v41 != 0;
            v69 = 28;
            goto LABEL_92;
          case 5u:
            v46 = 0;
            v47 = 0;
            v48 = 0;
            *(_BYTE *)(a1 + 32) |= 0x10u;
            while (2)
            {
              v49 = *v4;
              v50 = *(_QWORD *)&v3[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
                *(_QWORD *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  v15 = v47++ >= 9;
                  if (v15)
                  {
                    v48 = 0;
                    goto LABEL_91;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v48 = 0;
LABEL_91:
            v68 = v48 != 0;
            v69 = 26;
LABEL_92:
            *(_BYTE *)(a1 + v69) = v68;
            continue;
          case 6u:
            PBReaderReadString();
            v53 = objc_claimAutoreleasedReturnValue();
            v54 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v53;

            continue;
          case 7u:
            v55 = 0;
            v56 = 0;
            v57 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (2)
            {
              v58 = *v4;
              v59 = *(_QWORD *)&v3[v58];
              v60 = v59 + 1;
              if (v59 == -1 || v60 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v61 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v59);
                *(_QWORD *)&v3[v58] = v60;
                v57 |= (unint64_t)(v61 & 0x7F) << v55;
                if (v61 < 0)
                {
                  v55 += 7;
                  v15 = v56++ >= 9;
                  if (v15)
                  {
                    LODWORD(v57) = 0;
                    goto LABEL_96;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v57) = 0;
LABEL_96:
            v70 = 16;
            goto LABEL_101;
          case 8u:
            v62 = 0;
            v63 = 0;
            v57 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_104;
            continue;
        }
        while (1)
        {
          v64 = *v4;
          v65 = *(_QWORD *)&v3[v64];
          v66 = v65 + 1;
          if (v65 == -1 || v66 > *(_QWORD *)&v3[*v5])
            break;
          v67 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v65);
          *(_QWORD *)&v3[v64] = v66;
          v57 |= (unint64_t)(v67 & 0x7F) << v62;
          if ((v67 & 0x80) == 0)
            goto LABEL_98;
          v62 += 7;
          v15 = v63++ >= 9;
          if (v15)
          {
            LODWORD(v57) = 0;
            goto LABEL_100;
          }
        }
        v3[*v6] = 1;
LABEL_98:
        if (v3[*v6])
          LODWORD(v57) = 0;
LABEL_100:
        v70 = 20;
LABEL_101:
        *(_DWORD *)(a1 + v70) = v57;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v71 = v3[*v6] == 0;
  }
  else
  {
LABEL_104:
    v71 = 0;
  }
  objc_sync_exit(v3);

  return v71;
}

void sub_189052C60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchRichBrandMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOPDSearchBrandDensity *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  int v43;
  void *v44;
  char v45;
  char v46;
  int v47;
  char v48;
  void *v49;
  int v51;
  char v52;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v52 = (v15 == 0) | v10 | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_74;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_74:
      if ((v16 & 1) != 0)
      {
        v46 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          v47 = *v15++;
          v48 = 4;
          switch(v47)
          {
            case 0:
              goto LABEL_86;
            case 2:
              goto LABEL_80;
            case 3:
              v48 = 2;
              goto LABEL_80;
            case 4:
              v48 = 8;
LABEL_80:
              *(_BYTE *)(a1 + 60) |= v48;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v52 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_64;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          v41 = v40 + 1;
          if (v40 == -1 || v41 > *(_QWORD *)(v3 + *v6))
            break;
          v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0)
            goto LABEL_67;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            v38 = 0;
            goto LABEL_69;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_67:
        if (*(_BYTE *)(v3 + *v18))
          v38 = 0;
LABEL_69:
        *(_QWORD *)(a1 + 32) = v38;
        goto LABEL_73;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 4) != 0)
          goto LABEL_64;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v51 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchChainInfo);
        if (!GEOPDSearchChainInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          goto LABEL_83;
        PBReaderRecallMark();
        -[GEOPDSearchRichBrandMetadata _addNoFlagsBrandRelationshipInfo:](a1, v16);
        goto LABEL_62;
      case 3:
        if (!v31)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_82;
          v51 = (int)v16;
          v16 = objc_alloc_init(GEOPDSearchBrandDensity);
          if (!GEOPDSearchBrandDensityReadAllFrom((uint64_t)v16, (void *)v3))
            goto LABEL_83;
          PBReaderRecallMark();
          v44 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v16;

          --v7;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_82:
          v46 = 0;
          goto LABEL_84;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 30 >> 31;
        goto LABEL_72;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 8) != 0)
        {
LABEL_64:
          v45 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v45 & 1) == 0)
          {
LABEL_81:
            v46 = 0;
            goto LABEL_85;
          }
LABEL_73:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_74;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_82;
        v51 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchPreferredCategory);
        if (GEOPDSearchPreferredCategoryReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchRichBrandMetadata _addNoFlagsPreferredCategory:](a1, v16);
LABEL_62:

LABEL_63:
          LODWORD(v16) = v51;
LABEL_72:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_73;
        }
LABEL_83:

        v46 = 0;
        LOBYTE(v16) = v51;
LABEL_84:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v46 & 1) != 0)
        {
LABEL_86:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_87;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_87:
            v49 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v43 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v43)
          goto LABEL_81;
        goto LABEL_73;
    }
  }
}

void sub_1890539F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189053B68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189054078(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189054154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchRichBrandMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchChainInfo readAll:](*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
    }
    while (v4);
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v7 = *(id *)(a1 + 40);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v12;
    while (1)
    {
      if (*(_QWORD *)v12 != v10)
        objc_enumerationMutation(v7);
      if (!--v9)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
        if (!v9)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchRichBrandMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchRichBrandMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchRichBrandMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchRichBrandMetadataReadAllFrom_initialTag;
  Specified = GEOPDSearchRichBrandMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchRichBrandMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189054464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905474C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRichBrandMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189054AD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSearchFilterIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDSSearchFilter *v20;
  void *v21;
  _BOOL8 v22;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOPDSSearchFilter);
          if (!GEOPDSSearchFilterReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v20;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_189055028(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSpanScoreReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 20) |= 1u;
          v25 = *v4;
          v26 = *(_QWORD *)&v3[v25];
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v27 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
            *(_QWORD *)&v3[v25] = v26 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v27 = 0;
          }
          *(_QWORD *)(a1 + 8) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_34;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_1890555B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringGeoTypesPairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  int *v13;
  int *v14;
  int *v15;
  BOOL v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  int v53;
  int v54;
  char v55;
  void *v56;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1) + (*(_BYTE *)(a1 + 60) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_81:
    if (v12)
    {
      v52 = 1;
      goto LABEL_83;
    }
    if (!v13)
      goto LABEL_94;
    while (1)
    {
      v54 = *v13++;
      v53 = v54;
      if (v54 == 1)
        break;
      if (v53 == 2)
      {
        v55 = 1;
LABEL_93:
        *(_BYTE *)(a1 + 60) |= v55;
      }
      else if (!v53)
      {
        goto LABEL_94;
      }
    }
    v55 = 2;
    goto LABEL_93;
  }
  if (v13)
    v16 = (v7 & 1 | v10) != 0;
  else
    v16 = 1;
  v58 = v16;
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_81;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v14;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v20 = 0;
LABEL_29:
    v27 = v20 & 7;
    if (v26 || v27 == 4)
      goto LABEL_81;
    v29 = v20 >> 3;
    v30 = v12;
    if (!v58)
    {
      v31 = v13;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 != 2)
      break;
    if (!v30 || (*(_BYTE *)(a1 + 60) & 1) != 0)
    {
LABEL_62:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_97;
      goto LABEL_63;
    }
    if (v27 == 2)
    {
      if (!PBReaderPlaceMark())
        goto LABEL_97;
      while (*(_QWORD *)(v3 + *v14) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v15))
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        while (1)
        {
          v40 = *v14;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if (v43 < 0)
          {
            v37 += 7;
            v25 = v38++ >= 9;
            if (!v25)
              continue;
          }
          goto LABEL_59;
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_59:
        PBRepeatedInt32Add();
      }
      PBReaderRecallMark();
    }
    else
    {
      v45 = 0;
      v46 = 0;
      v47 = 0;
      while (1)
      {
        v48 = *v14;
        v49 = *(_QWORD *)(v3 + v48);
        v50 = v49 + 1;
        if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          break;
        v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v49);
        *(_QWORD *)(v3 + v48) = v50;
        v47 |= (unint64_t)(v51 & 0x7F) << v45;
        if (v51 < 0)
        {
          v45 += 7;
          v25 = v46++ >= 9;
          if (!v25)
            continue;
        }
        goto LABEL_80;
      }
      *(_BYTE *)(v3 + *v15) = 1;
LABEL_80:
      PBRepeatedInt32Add();
    }
LABEL_63:
    if (v9)
      v44 = 1;
    else
      v44 = v12;
    if (v44 != 1 || *(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_81;
  }
  if ((_DWORD)v29 != 1)
  {
    if (!PBReaderSkipValueWithTag())
      goto LABEL_97;
    goto LABEL_63;
  }
  if (!v30)
    goto LABEL_62;
  if ((*(_BYTE *)(a1 + 60) & 2) == 0)
  {
    PBReaderReadString();
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v35;

    --v9;
    goto LABEL_63;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 60) << 30 >> 31;
    goto LABEL_63;
  }
LABEL_97:
  v52 = 0;
LABEL_83:
  *(_BYTE *)(a1 + 60) |= 2u;
  *(_BYTE *)(a1 + 60) |= 1u;
  if ((v52 & 1) != 0)
  {
LABEL_94:
    v3 = *(_BYTE *)(v3 + *v15) == 0;
    if (v12)
      goto LABEL_95;
    return v3;
  }
  v3 = 0;
  if (!v12)
    return v3;
LABEL_95:
  v56 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;

  return v3;
}

void sub_189056044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905610C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringGeoTypesPairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchStringGeoTypesPairReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchStringGeoTypesPairReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchStringGeoTypesPairReadAllFrom_initialTag;
  Specified = GEOPDSearchStringGeoTypesPairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189056298(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189056430(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189056580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringStringPairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  int v38;
  char v39;
  char v40;
  char v41;
  int v42;
  int v43;
  void *v44;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v43 = *v14++;
            v42 = v43;
            if (v43 != 1 && v42 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v15)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 != 2)
    {
      if ((_DWORD)v29 != 1)
      {
        v38 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_70;
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v9 -= *(_BYTE *)(a1 + 44) & 1;
LABEL_57:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_58:
        if (v9)
          v40 = 1;
        else
          v40 = v13;
        if ((v40 & 1) == 0)
          goto LABEL_62;
        continue;
      }
LABEL_51:
      v39 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
  {
    PBReaderReadString();
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = 24;
LABEL_48:
    v37 = *(void **)(a1 + v36);
    *(_QWORD *)(a1 + v36) = v35;

    v17 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  v41 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v41 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (!v13)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if (v13)
  {
LABEL_74:
    v44 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189056D64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189056E2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringStringPairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchStringStringPairReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchStringStringPairReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchStringStringPairReadAllFrom_initialTag;
  Specified = GEOPDSearchStringStringPairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189057120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905728C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchStringStringPairIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18905744C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStructuredAttributeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDSearchAttribute *v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  char v47;
  char v48;
  char v49;
  char v50;
  int v51;
  int v52;
  void *v53;
  _BOOL4 v55;
  BOOL v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v56 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_76;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        v49 = 1;
        goto LABEL_91;
      }
      if (!v15)
        goto LABEL_92;
      while (1)
      {
        v52 = *v15++;
        v51 = v52;
        if (v52 == 1)
          break;
        if (v51 == 3)
        {
          v50 = 4;
LABEL_82:
          *(_BYTE *)(a1 + 48) |= v50;
        }
        else if (!v51)
        {
          goto LABEL_92;
        }
      }
      v50 = 2;
      goto LABEL_82;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v56)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if ((v8 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_66;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            LODWORD(v41) = 0;
            goto LABEL_68;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_66:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_68:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_72;
      }
    }
    else
    {
      if ((_DWORD)v31 != 1)
      {
        v46 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v46)
          goto LABEL_87;
        goto LABEL_72;
      }
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 48) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_88:
            v49 = 0;
            goto LABEL_90;
          }
          v7 += *(unsigned __int8 *)(a1 + 48) << 30 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_88;
          v55 = v16;
          v37 = objc_alloc_init(GEOPDSearchAttribute);
          if (!GEOPDSearchAttributeReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
            goto LABEL_89;
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v37;

          --v7;
LABEL_52:
          v16 = v55;
        }
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_72;
      }
    }
LABEL_63:
    v47 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v47 & 1) == 0)
    {
LABEL_87:
      v49 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v7)
      v48 = 1;
    else
      v48 = v16;
    if ((v48 & 1) == 0)
      goto LABEL_76;
  }
  if (!v32 || (*(_BYTE *)(a1 + 48) & 4) != 0)
    goto LABEL_63;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_88;
  v55 = v16;
  v37 = objc_alloc_init(GEOPDSearchStructuredAttribute);
  if (GEOPDSearchStructuredAttributeReadAllFrom())
  {
    PBReaderRecallMark();
    -[GEOPDSearchStructuredAttribute _addNoFlagsNestedAttribute:](a1, v37);

    goto LABEL_52;
  }
LABEL_89:

  v49 = 0;
  v16 = v55;
LABEL_90:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
  *(_BYTE *)(a1 + 48) |= 2u;
  *(_BYTE *)(a1 + 48) |= 4u;
  if ((v49 & 1) != 0)
  {
LABEL_92:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v16)
      goto LABEL_93;
  }
  else
  {
    v3 = 0;
    if (v16)
    {
LABEL_93:
      v53 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_189057CA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890580B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905818C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchStructuredAttributeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  -[GEOPDSearchAttribute readAll:](*(_QWORD *)(a1 + 16), 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchStructuredAttribute readAll:](*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDSearchStructuredAttributeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchStructuredAttributeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchStructuredAttributeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchStructuredAttributeReadAllFrom_initialTag;
  Specified = GEOPDSearchStructuredAttributeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchStructuredAttributeCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189058D18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189058F58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchStructuredAttributeIsDirty(uint64_t a1)
{
  unsigned int v2;
  os_unfair_lock_s *v3;
  char IsDirty;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = *(unsigned __int8 *)(a1 + 48);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    v3 = *(os_unfair_lock_s **)(a1 + 16);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      IsDirty = _GEOPDSearchAttributeIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 14);
      if ((IsDirty & 1) != 0)
        return 1;
      v2 = *(unsigned __int8 *)(a1 + 48);
    }
  }
  return (v2 >> 2) & 1;
}

void sub_189059258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSynonymReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int *v15;
  GEOPDSearchStringStringPair *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  int v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  char v56;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        if ((((v10 | v14) | v8) & 1) != 0)
          v15 = 0;
        else
          v15 = a3;
        LODWORD(v16) = v10 | v14;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v56 = (v15 == 0) | v10 | v14;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_77;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_77:
      if ((v16 & 1) != 0)
      {
        v50 = 1;
        goto LABEL_88;
      }
      if (v15)
      {
        while (1)
        {
          v51 = *v15++;
          v52 = 4;
          switch(v51)
          {
            case 0:
              goto LABEL_89;
            case 2:
              goto LABEL_83;
            case 4:
              v52 = 16;
              goto LABEL_83;
            case 5:
              v52 = 8;
LABEL_83:
              *(_BYTE *)(a1 + 60) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_89;
    }
    v30 = v22 >> 3;
    v31 = (char)v16;
    if ((v56 & 1) == 0)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_65;
        *(_BYTE *)(a1 + 60) |= 1u;
        v36 = *v17;
        v37 = *(_QWORD *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v38 = *(_DWORD *)(*(_QWORD *)(v3 + *v19) + v37);
          *(_QWORD *)(v3 + v36) = v37 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v38 = 0;
        }
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_76;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 4) != 0)
          goto LABEL_65;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v55 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchPair);
        if (!GEOPDSearchPairReadAllFrom((uint64_t)v16, (void *)v3))
          goto LABEL_86;
        PBReaderRecallMark();
        -[GEOPDSearchSynonym _addNoFlagsSynFeatureMap:](a1, v16);
        goto LABEL_61;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_65;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v43 = *v17;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v44);
            *(_QWORD *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v27 = v41++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v42) = 0;
LABEL_70:
        *(_DWORD *)(a1 + 56) = v42;
        goto LABEL_76;
      case 4:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
          goto LABEL_65;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v55 = (int)v16;
        v16 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (GEOPDSearchStringStringPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchSynonym _addNoFlagsTokenList:](a1, v16);
LABEL_61:

          LODWORD(v16) = v55;
LABEL_73:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
          if (!(v16 & 1 | (v7 != 0)))
            goto LABEL_77;
          continue;
        }
LABEL_86:

        v50 = 0;
        LOBYTE(v16) = v55;
LABEL_87:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 0x10u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v50 & 1) != 0)
        {
LABEL_89:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v16 & 1) != 0)
            goto LABEL_90;
        }
        else
        {
          v3 = 0;
          if ((v16 & 1) != 0)
          {
LABEL_90:
            v53 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 5:
        if (v31)
        {
          if ((*(_BYTE *)(a1 + 60) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_85:
              v50 = 0;
              goto LABEL_87;
            }
            v7 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
          }
          else
          {
            PBReaderReadString();
            v47 = objc_claimAutoreleasedReturnValue();
            v48 = *(void **)(a1 + 24);
            *(_QWORD *)(a1 + 24) = v47;

            --v7;
          }
          goto LABEL_73;
        }
LABEL_65:
        v49 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v49 & 1) == 0)
        {
LABEL_84:
          v50 = 0;
          goto LABEL_88;
        }
        goto LABEL_76;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v39)
          goto LABEL_84;
        goto LABEL_76;
    }
  }
}

void sub_189059C04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189059D7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905A2E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905A3C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchSynonymCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    while (1)
    {
      if (*(_QWORD *)v16 != v5)
        objc_enumerationMutation(v2);
      if (!--v4)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
        if (!v4)
          break;
      }
    }
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v6 = *(id *)(a1 + 32);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v12;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v12 != v9)
          objc_enumerationMutation(v6);
        -[GEOPDSearchStringStringPair readAll:](*(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
    }
    while (v8);
  }

}

unint64_t GEOPDSearchSynonymReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchSynonymReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchSynonymReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchSynonymReadAllFrom_initialTag;
  Specified = GEOPDSearchSynonymReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchSynonymCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18905A6D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905A9D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905AD0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenImportanceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v23;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          *(_BYTE *)(a1 + 20) |= 1u;
          v20 = *v4;
          v21 = *(_QWORD *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)&v3[*v5])
          {
            v22 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 4;
          }
          else
          {
            v3[*v6] = 1;
            v22 = 0;
          }
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_18905B344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenSynonymMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDSearchSynonym *v20;
  _BOOL8 v21;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOPDSearchSynonym);
          if (!GEOPDSearchSynonymReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchTokenSynonymMetadata addSynonymList:](a1, v20);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18905BAA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTransitIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  int *v17;
  int *v18;
  BOOL v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  int v39;
  GEOPDSearchTokenSet *v40;
  void *v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  int v60;
  int v61;
  char v62;
  void *v63;
  _BOOL4 v65;
  BOOL v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (v14)
          v19 = 1;
        else
          v19 = v15 == 0;
        v66 = v19;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_86;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_86:
      if (v16)
      {
        v59 = 1;
        goto LABEL_100;
      }
      if (!v15)
        goto LABEL_101;
      while (1)
      {
        v61 = *v15++;
        v60 = v61;
        if (v61 == 1)
          break;
        if (v60 == 2)
        {
          v62 = 8;
LABEL_95:
          *(_BYTE *)(a1 + 56) |= v62;
        }
        else if (!v60)
        {
          goto LABEL_101;
        }
      }
      v62 = 4;
      goto LABEL_95;
    }
    v31 = v23 >> 3;
    v32 = v16;
    if (!v66)
    {
      v33 = v15;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 56) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v37;

          --v9;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v57 = 32 * *(_BYTE *)(a1 + 56);
        goto LABEL_80;
      case 2:
        if (!v32)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 56) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_97:
            v59 = 0;
            goto LABEL_99;
          }
          v57 = 16 * *(_BYTE *)(a1 + 56);
LABEL_80:
          v9 += v57 >> 7;
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v65 = v16;
        v40 = objc_alloc_init(GEOPDSearchTokenSet);
        if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;

          --v9;
          v16 = v65;
LABEL_81:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
          if (v9)
            v58 = 1;
          else
            v58 = v16;
          if ((v58 & 1) == 0)
            goto LABEL_86;
          continue;
        }

        v59 = 0;
        v16 = v65;
LABEL_99:
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_100:
        *(_BYTE *)(a1 + 56) |= 4u;
        *(_BYTE *)(a1 + 56) |= 8u;
        if ((v59 & 1) != 0)
        {
LABEL_101:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v16)
            goto LABEL_102;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_102:
            v63 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (2)
        {
          v45 = *v17;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                v44 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v44 = 0;
LABEL_71:
        *(_QWORD *)(a1 + 32) = v44;
        goto LABEL_82;
      case 4:
        if ((v8 & 1) != 0)
        {
          v49 = 0;
          v50 = 0;
          v51 = 0;
          *(_BYTE *)(a1 + 56) |= 2u;
          while (1)
          {
            v52 = *v17;
            v53 = *(_QWORD *)(v3 + v52);
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
              break;
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if ((v55 & 0x80) == 0)
              goto LABEL_73;
            v49 += 7;
            v28 = v50++ >= 9;
            if (v28)
            {
              LODWORD(v51) = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v18))
            LODWORD(v51) = 0;
LABEL_75:
          *(_DWORD *)(a1 + 52) = v51;
        }
        else
        {
LABEL_66:
          v56 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v56 & 1) == 0)
          {
LABEL_96:
            v59 = 0;
            goto LABEL_100;
          }
        }
        goto LABEL_82;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v39)
          goto LABEL_96;
        goto LABEL_82;
    }
  }
}

void sub_18905C77C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905C860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTransitIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchTransitIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchTransitIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchTransitIntentReadAllFrom_initialTag;
  Specified = GEOPDSearchTransitIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDSearchTokenSet readAll:](*(_QWORD *)(a1 + 24), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18905CA04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905CBB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchTransitIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 56) & 0x14) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
    return GEOPDSearchTokenSetIsDirty(*(_QWORD *)(a1 + 24));
  return 0;
}

os_unfair_lock_s *GEOPDSearchTransitIntentIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDSearchTransitIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18905CE28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTriggerFeatureReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const float *v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  int *v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  GEOPDSearchKeyValuePair *v105;
  char v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  char v112;
  char v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  int v126;
  int v127;
  void *v128;
  GEOPDSearchKeyValuePair *v130;
  char v131;
  char v132;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 172);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 168));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const float *)(a1 + 196);
  v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD40D0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CD40E0), v13)));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 5;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_234;
        v132 = (v19 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v131 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_234;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_234:
      if ((v18 & 1) != 0)
      {
        v125 = 1;
        goto LABEL_236;
      }
      if (v19)
      {
        while (1)
        {
          v126 = *v19++;
          v127 = 0x100000;
          switch(v126)
          {
            case 0:
              goto LABEL_249;
            case 1:
              goto LABEL_248;
            case 2:
              v127 = 0x4000;
              goto LABEL_248;
            case 4:
              v127 = 0x10000;
              goto LABEL_248;
            case 10:
              v127 = 0x8000;
              goto LABEL_248;
            case 12:
              v127 = 0x2000;
              goto LABEL_248;
            case 18:
              v127 = 0x40000;
              goto LABEL_248;
            case 19:
              v127 = 0x20000;
              goto LABEL_248;
            case 20:
              v127 = 0x80000;
LABEL_248:
              *(_DWORD *)(a1 + 196) |= v127;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_249;
    }
    v34 = v25 >> 3;
    v35 = v18;
    if ((v132 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_166;
        if ((*(_BYTE *)(a1 + 198) & 0x10) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 152;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_254;
        v115 = (int)(*(_DWORD *)(a1 + 196) << 11) >> 31;
        goto LABEL_205;
      case 2:
        if (!v35)
          goto LABEL_166;
        if ((*(_BYTE *)(a1 + 197) & 0x40) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 40;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_254;
        v115 = (int)(*(_DWORD *)(a1 + 196) << 17) >> 31;
        goto LABEL_205;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_DWORD *)(a1 + 196) |= 0x800u;
        while (2)
        {
          v46 = *v20;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v30 = v44++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v45) = 0;
LABEL_171:
        *(_DWORD *)(a1 + 188) = v45;
        goto LABEL_228;
      case 4:
        if (!v35)
          goto LABEL_166;
        if ((*(_BYTE *)(a1 + 198) & 1) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 64;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_254;
        v115 = (int)(*(_DWORD *)(a1 + 196) << 15) >> 31;
        goto LABEL_205;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_DWORD *)(a1 + 196) |= 4u;
        while (2)
        {
          v53 = *v20;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v30 = v51++ >= 9;
              if (v30)
              {
                v52 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v52 = 0;
LABEL_175:
        v114 = 80;
        goto LABEL_196;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        *(_DWORD *)(a1 + 196) |= 0x400u;
        v57 = *v20;
        v58 = *(_QWORD *)(v3 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFFBLL && v58 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v59 = *(_DWORD *)(*(_QWORD *)(v3 + *v22) + v58);
          *(_QWORD *)(v3 + v57) = v58 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v59 = 0;
        }
        v116 = 184;
        goto LABEL_211;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        *(_DWORD *)(a1 + 196) |= 0x200u;
        v60 = *v20;
        v61 = *(_QWORD *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v59 = *(_DWORD *)(*(_QWORD *)(v3 + *v22) + v61);
          *(_QWORD *)(v3 + v60) = v61 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v59 = 0;
        }
        v116 = 180;
LABEL_211:
        *(_DWORD *)(a1 + v116) = v59;
        goto LABEL_228;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        *(_DWORD *)(a1 + 196) |= 8u;
        v62 = *v20;
        v63 = *(_QWORD *)(v3 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v64 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v63);
          *(_QWORD *)(v3 + v62) = v63 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v64 = 0;
        }
        v117 = 88;
        goto LABEL_227;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        *(_DWORD *)(a1 + 196) |= 0x10u;
        v65 = *v20;
        v66 = *(_QWORD *)(v3 + v65);
        if (v66 <= 0xFFFFFFFFFFFFFFF7 && v66 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v64 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v66);
          *(_QWORD *)(v3 + v65) = v66 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v64 = 0;
        }
        v117 = 96;
        goto LABEL_227;
      case 10:
        if (!v35)
          goto LABEL_166;
        if ((*(_BYTE *)(a1 + 197) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_254;
          v115 = (int)(*(_DWORD *)(a1 + 196) << 16) >> 31;
LABEL_205:
          v7 += v115;
        }
        else
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 56;
LABEL_83:
          v67 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
        }
        goto LABEL_206;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        v68 = 0;
        v69 = 0;
        v52 = 0;
        *(_DWORD *)(a1 + 196) |= 0x20u;
        while (2)
        {
          v70 = *v20;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v52 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v30 = v69++ >= 9;
              if (v30)
              {
                v52 = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v52 = 0;
LABEL_179:
        v114 = 104;
        goto LABEL_196;
      case 12:
        if (!v35 || (*(_BYTE *)(a1 + 197) & 0x20) != 0)
          goto LABEL_166;
        if (v32 != 2)
        {
          v118 = 0;
          v119 = 0;
          v120 = 0;
          while (1)
          {
            v121 = *v20;
            v122 = *(_QWORD *)(v3 + v121);
            v123 = v122 + 1;
            if (v122 == -1 || v123 > *(_QWORD *)(v3 + *v6))
              break;
            v124 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v122);
            *(_QWORD *)(v3 + v121) = v123;
            v120 |= (unint64_t)(v124 & 0x7F) << v118;
            if (v124 < 0)
            {
              v118 += 7;
              v30 = v119++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_233;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_233:
          PBRepeatedInt32Add();
          goto LABEL_206;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_254;
        while (1)
        {
          v74 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v75 = 0;
          v76 = 0;
          v77 = 0;
          while (1)
          {
            v78 = *v20;
            v79 = *(_QWORD *)(v3 + v78);
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v6))
              break;
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              v30 = v76++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_106;
          }
          *(_BYTE *)(v3 + *v74) = 1;
LABEL_106:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v131;
        goto LABEL_228;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        v82 = 0;
        v83 = 0;
        v84 = 0;
        *(_DWORD *)(a1 + 196) |= 0x1000u;
        while (2)
        {
          v85 = *v20;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              v30 = v83++ >= 9;
              if (v30)
              {
                v84 = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v84 = 0;
LABEL_183:
        *(_BYTE *)(a1 + 192) = v84 != 0;
        goto LABEL_228;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        *(_DWORD *)(a1 + 196) |= 0x80u;
        v89 = *v20;
        v90 = *(_QWORD *)(v3 + v89);
        if (v90 <= 0xFFFFFFFFFFFFFFF7 && v90 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v64 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v90);
          *(_QWORD *)(v3 + v89) = v90 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v64 = 0;
        }
        v117 = 144;
        goto LABEL_227;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        *(_DWORD *)(a1 + 196) |= 0x100u;
        v91 = *v20;
        v92 = *(_QWORD *)(v3 + v91);
        if (v92 <= 0xFFFFFFFFFFFFFFF7 && v92 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v64 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v92);
          *(_QWORD *)(v3 + v91) = v92 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v64 = 0;
        }
        v117 = 160;
LABEL_227:
        *(_QWORD *)(a1 + v117) = v64;
        goto LABEL_228;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        v93 = 0;
        v94 = 0;
        v52 = 0;
        *(_DWORD *)(a1 + 196) |= 2u;
        while (2)
        {
          v95 = *v20;
          v96 = *(_QWORD *)(v3 + v95);
          v97 = v96 + 1;
          if (v96 == -1 || v97 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v98 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v96);
            *(_QWORD *)(v3 + v95) = v97;
            v52 |= (unint64_t)(v98 & 0x7F) << v93;
            if (v98 < 0)
            {
              v93 += 7;
              v30 = v94++ >= 9;
              if (v30)
              {
                v52 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v52 = 0;
LABEL_187:
        v114 = 72;
        goto LABEL_196;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_166;
        v99 = 0;
        v100 = 0;
        v52 = 0;
        *(_DWORD *)(a1 + 196) |= 0x40u;
        while (2)
        {
          v101 = *v20;
          v102 = *(_QWORD *)(v3 + v101);
          v103 = v102 + 1;
          if (v102 == -1 || v103 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v102);
            *(_QWORD *)(v3 + v101) = v103;
            v52 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              v30 = v100++ >= 9;
              if (v30)
              {
                v52 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v52 = 0;
LABEL_191:
        v114 = 112;
        goto LABEL_196;
      case 18:
        if (!v35 || (*(_BYTE *)(a1 + 198) & 4) != 0)
          goto LABEL_164;
        PBReaderReadString();
        v105 = (GEOPDSearchKeyValuePair *)objc_claimAutoreleasedReturnValue();
        if (!v105)
          goto LABEL_154;
        v130 = v105;
        -[GEOPDSearchTriggerFeature _addNoFlagsPrefCategory:](a1, v105);
        goto LABEL_153;
      case 19:
        if (!v35 || (*(_BYTE *)(a1 + 198) & 2) != 0)
          goto LABEL_164;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_254;
        v130 = objc_alloc_init(GEOPDSearchKeyValuePair);
        if (!GEOPDSearchKeyValuePairReadAllFrom((uint64_t)v130, (void *)v3, v9 & 1))
          goto LABEL_253;
        PBReaderRecallMark();
        -[GEOPDSearchTriggerFeature _addNoFlagsModernToLegacyIdMapping:](a1, v130);
        goto LABEL_153;
      case 20:
        if (!v35 || (*(_BYTE *)(a1 + 198) & 8) != 0)
        {
LABEL_164:
          v112 = PBReaderSkipValueWithTag();
          v18 = v131;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v112 & 1) == 0)
            goto LABEL_252;
LABEL_228:
          if (!(v18 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_234;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_254;
        v130 = objc_alloc_init(GEOPDSearchRelatedCategory);
        if (GEOPDSearchRelatedCategoryReadAllFrom((uint64_t)v130, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchTriggerFeature _addNoFlagsRelatedCategories:](a1, v130);
LABEL_153:
          v105 = v130;
LABEL_154:

LABEL_206:
          v18 = v131;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_228;
        }
LABEL_253:

LABEL_254:
        v125 = 0;
        v18 = v131;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_236:
        *(_DWORD *)(a1 + 196) |= 0x100000u;
        *(_DWORD *)(a1 + 196) |= 0x4000u;
        *(_DWORD *)(a1 + 196) |= 0x10000u;
        *(_DWORD *)(a1 + 196) |= 0x8000u;
        *(_DWORD *)(a1 + 196) |= 0x2000u;
        *(_DWORD *)(a1 + 196) |= 0x40000u;
        *(_DWORD *)(a1 + 196) |= 0x20000u;
        *(_DWORD *)(a1 + 196) |= 0x80000u;
        if ((v125 & 1) != 0)
        {
LABEL_249:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_250;
          return v3;
        }
        v3 = 0;
        if ((v18 & 1) == 0)
          return v3;
LABEL_250:
        v128 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 21:
        if ((v8 & 1) != 0)
        {
          v106 = 0;
          v107 = 0;
          v52 = 0;
          *(_DWORD *)(a1 + 196) |= 1u;
          while (1)
          {
            v108 = *v20;
            v109 = *(_QWORD *)(v3 + v108);
            v110 = v109 + 1;
            if (v109 == -1 || v110 > *(_QWORD *)(v3 + *v6))
              break;
            v111 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v109);
            *(_QWORD *)(v3 + v108) = v110;
            v52 |= (unint64_t)(v111 & 0x7F) << v106;
            if ((v111 & 0x80) == 0)
              goto LABEL_193;
            v106 += 7;
            v30 = v107++ >= 9;
            if (v30)
            {
              v52 = 0;
              goto LABEL_195;
            }
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_193:
          if (*(_BYTE *)(v3 + *v21))
            v52 = 0;
LABEL_195:
          v114 = 48;
LABEL_196:
          *(_QWORD *)(a1 + v114) = v52;
        }
        else
        {
LABEL_166:
          v113 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v131;
          if ((v113 & 1) == 0)
          {
LABEL_252:
            v125 = 0;
            goto LABEL_236;
          }
        }
        goto LABEL_228;
      default:
        v42 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v131;
        if (!v42)
          goto LABEL_252;
        goto LABEL_228;
    }
  }
}

void sub_18905E238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905E438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905E5B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905F198(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905F280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchTriggerFeatureCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 120);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDSearchKeyValuePair readAll:](*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
    }
    while (v4);
  }

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v7 = *(id *)(a1 + 136);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v12;
    while (1)
    {
      if (*(_QWORD *)v12 != v10)
        objc_enumerationMutation(v7);
      if (!--v9)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v11, v19, 16);
        if (!v9)
          break;
      }
    }
  }

}

unint64_t GEOPDSearchTriggerFeatureReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 172))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchTriggerFeatureReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 176));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 168) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 172) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDSearchTriggerFeatureReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDSearchTriggerFeatureReadAllFrom_initialTag;
  Specified = GEOPDSearchTriggerFeatureReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDSearchTriggerFeatureCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 176));
  return Specified;
}

void sub_18905F590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18905FB50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189060164(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOResourcesPairedDevicesCachesDirectory()
{
  return +[GEOFilePaths pathFor:](GEOFilePaths, "pathFor:", 13);
}

id GEOReleaseInfoForManifestData(void *a1)
{
  id v1;
  GEOResources *v2;
  void *v3;

  v1 = a1;
  v2 = -[GEOResources initWithData:]([GEOResources alloc], "initWithData:", v1);

  -[GEOResources releaseInfo](v2, "releaseInfo");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id GEOCanonicalResourceNameForVersionedName(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *i;
  void *v19;
  int v20;
  const __CFString *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1)
  {
    if (qword_1ECDBBF28 != -1)
      dispatch_once(&qword_1ECDBBF28, &__block_literal_global_96);
    objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = v1;
    if (objc_msgSend((id)qword_1ECDBBF18, "count"))
    {
      v3 = 0;
      do
      {
        objc_msgSend((id)qword_1ECDBBF18, "objectAtIndex:", v3);
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend((id)qword_1ECDBBF20, "objectAtIndex:", v3);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v6 = objc_msgSend(v2, "replaceOccurrencesOfString:withString:options:range:", v4, v5, 2, 0, objc_msgSend(v2, "length"));

        ++v3;
      }
      while (v3 < objc_msgSend((id)qword_1ECDBBF18, "count"));
      v1 = v34;
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v2, "pathExtension");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringByDeletingPathExtension");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "pathExtension");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "length");

    if (v9)
    {
      objc_msgSend(v7, "stringByDeletingPathExtension");
      v10 = objc_claimAutoreleasedReturnValue();

      v7 = (void *)v10;
    }
    objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", v7);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6 && objc_msgSend((id)qword_1ECDBBF18, "count"))
    {
      v12 = 0;
      do
      {
        objc_msgSend((id)qword_1ECDBBF18, "objectAtIndex:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend((id)qword_1ECDBBF20, "objectAtIndex:", v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "replaceOccurrencesOfString:withString:options:range:", v14, v13, 2, 0, objc_msgSend(v11, "length"));

        ++v12;
      }
      while (v12 < objc_msgSend((id)qword_1ECDBBF18, "count"));
    }
    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v15 = (id)qword_1ECDBBF10;
    v16 = (id)objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
    if (v16)
    {
      v17 = *(_QWORD *)v36;
      while (2)
      {
        for (i = 0; i != v16; i = (char *)i + 1)
        {
          if (*(_QWORD *)v36 != v17)
            objc_enumerationMutation(v15);
          v19 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v11, "hasSuffix:", v19))
          {
            v16 = v19;
            objc_msgSend(v11, "deleteCharactersInRange:", objc_msgSend(v11, "length") - objc_msgSend(v16, "length"), objc_msgSend(v16, "length"));
            goto LABEL_25;
          }
        }
        v16 = (id)objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
        if (v16)
          continue;
        break;
      }
LABEL_25:
      v1 = v34;
    }

    v20 = objc_msgSend(v11, "hasSuffix:", CFSTR("-163r"));
    if (v20)
    {
      v21 = CFSTR("-163r");
      objc_msgSend(v11, "deleteCharactersInRange:", objc_msgSend(v11, "length") - objc_msgSend(CFSTR("-163r"), "length"), objc_msgSend(CFSTR("-163r"), "length"));
    }
    else
    {
      v21 = 0;
    }
    if (qword_1ECDBBF40 != -1)
      dispatch_once(&qword_1ECDBBF40, &__block_literal_global_109_0);
    v22 = objc_msgSend(v11, "rangeOfCharacterFromSet:options:", qword_1ECDBBF30, 4);
    v23 = v1;
    if (v22 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v24 = v22;
      v25 = qword_1ECDBBF38;
      v26 = v22 + 1;
      v27 = objc_msgSend(v11, "length");
      v28 = v26;
      v1 = v34;
      v29 = objc_msgSend(v11, "rangeOfCharacterFromSet:options:range:", v25, 0, v28, v27 + ~v24);
      v23 = v34;
      if (v29 == 0x7FFFFFFFFFFFFFFFLL)
      {
        objc_msgSend(v11, "deleteCharactersInRange:", v24, objc_msgSend(v11, "length") - v24);
        if (v20)
          objc_msgSend(v11, "appendString:", v21);
        if (v16)
          objc_msgSend(v11, "appendString:", v16);
        v30 = objc_msgSend(v33, "length");
        v23 = v11;
        if (v30)
        {
          objc_msgSend(v11, "appendString:", CFSTR("."));
          objc_msgSend(v11, "appendString:", v33);
          v23 = v11;
        }
      }
    }
    v31 = v23;

  }
  else
  {
    v31 = 0;
  }

  return v31;
}

void sub_18906298C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_189062F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose(&a40, 8);
  _Unwind_Resume(a1);
}

void _stopObservingFolder()
{
  if (_devResourcesStream)
  {
    FSEventStreamStop((FSEventStreamRef)_devResourcesStream);
    FSEventStreamInvalidate((FSEventStreamRef)_devResourcesStream);
    FSEventStreamRelease((FSEventStreamRef)_devResourcesStream);
    _devResourcesStream = 0;
  }
}

BOOL GEOTileSetRegionContainsTileKey(unsigned int *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  double v8;
  unsigned int v9;
  unsigned int v10;

  if (!a2)
    return 0;
  GEOTileKeyAssertIsStandard(a2);
  v4 = *(_QWORD *)(a2 + 1);
  v5 = (v4 >> 40) & 0x3F;
  if (a1[2] >= v5
    && (v6 = a1[5], v6 <= v5)
    && (v7 = *(unsigned int *)(a2 + 9) | ((unint64_t)(*(unsigned __int16 *)(a2 + 13) | (*(unsigned __int8 *)(a2 + 15) << 16)) << 32),
        v8 = ldexp(1.0, v6 - v5),
        v9 = (v8 * (double)(((v4 >> 46) | ((_DWORD)v7 << 18)) & 0x3FFFFFF)),
        a1[3] <= v9)
    && *a1 >= v9
    && (v10 = (v8 * (double)((v7 >> 8) & 0x3FFFFFF)), a1[4] <= v10))
  {
    return a1[1] >= v10;
  }
  else
  {
    return 0;
  }
}

void sub_1890658B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

void _eventStreamCallback(uint64_t a1, uint64_t a2)
{
  void (**v2)(void);

  v2 = (void (**)(void))MEMORY[0x18D765024](a2);
  v2[2]();

}

void sub_189068650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1890688CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189069408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL GEOResourceManifestDataIsValid(void *a1)
{
  id v1;
  GEOResources *v2;

  v1 = a1;
  v2 = -[GEOResources initWithData:]([GEOResources alloc], "initWithData:", v1);

  return v2 != 0;
}

void sub_18906D4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_18906E348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18906E684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18906F128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18906F5C0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

uint64_t __checkSystemClockAgainstHTTPResponse_block_invoke()
{
  id v0;
  void *v1;
  void *v2;

  v0 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  v1 = (void *)qword_1ECDBBFB0;
  qword_1ECDBBFB0 = (uint64_t)v0;

  objc_msgSend(MEMORY[0x1E0C99DC8], "localeWithLocaleIdentifier:", CFSTR("en_US_POSIX"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)qword_1ECDBBFB0, "setLocale:", v2);

  return objc_msgSend((id)qword_1ECDBBFB0, "setDateFormat:", CFSTR("EEE',' dd' 'MMM' 'yyyy HH':'mm':'ss zzz"));
}

void sub_18907038C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOOfflineStateAsString(unint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = a1;
  v2 = a1 >> 8;
  v3 = a1 >> 16;
  v4 = (void *)MEMORY[0x1E0CB3940];
  GEOOfflineModeAsString(a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  GEOOfflineReasonAsString(BYTE1(v1));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  GEOOfflineDeviceAsString(BYTE2(v1));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringWithFormat:", CFSTR("%@:%@:%@(0x%06x)"), v5, v6, v7, v1 & 0xFF0000FF | (v3 << 16) | (v2 << 8));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id GEOOfflineModeAsString(unsigned int a1)
{
  if (a1 < 3)
    return *((id *)&off_1E1C0B328 + (char)a1);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid(%d)"), a1);
  return (id)objc_claimAutoreleasedReturnValue();
}

id GEOOfflineReasonAsString(unsigned int a1)
{
  if (a1 < 3)
    return *((id *)&off_1E1C0B340 + (char)a1);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid(%d)"), a1);
  return (id)objc_claimAutoreleasedReturnValue();
}

__CFString *GEOOfflineDeviceAsString(unsigned int a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("Unset");
  if (a1 == 1)
  {
    v1 = CFSTR("Local");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid(%d)"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

void sub_189070EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189071228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189071998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1890720C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189072988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_189072BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189072D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189072E38(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_189072F94(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_189073110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189073534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1890736F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189073984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189073D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_189073F44(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1890742A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_189074380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18907445C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_189074AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189074DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189075DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  uint64_t v47;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose((const void *)(v47 - 240), 8);
  _Block_object_dispose((const void *)(v47 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__109(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__110(uint64_t a1)
{

}

void sub_1890778EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18907A204(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_18907BD04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18907DF68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18907E750(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

BOOL GEOPDAboutReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOLocalizedString *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDAbout addText:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_18907F2D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAboutFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18907FA3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18907FC6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDActionDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  GEOLocalizedString *v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFFFFFDFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 84) & 1)+ ((*(_BYTE *)(a1 + 84) & 0x10) != 0)+ ((*(_BYTE *)(a1 + 84) & 0x20) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v55 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v56 = (v19 == 0) | v18;
        v57 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v21))
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
      break;
    v33 = v25 >> 3;
    v34 = v57;
    if ((v56 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 8) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          goto LABEL_102;
        PBReaderRecallMark();
        -[GEOPDActionData _addNoFlagsActionTitle:](a1, v39);
        goto LABEL_58;
      case 2:
        if (!v34)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 84) & 4) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 32;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v47 = 32 * *(_BYTE *)(a1 + 84);
        goto LABEL_79;
      case 3:
        if (!v34 || (*(_BYTE *)(a1 + 84) & 2) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_103;
        v39 = objc_alloc_init(GEOPDActionLink);
        if (GEOPDActionLinkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDActionData _addNoFlagsActionLink:](a1, v39);
LABEL_58:

LABEL_80:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_81;
        }
LABEL_102:

LABEL_103:
        v52 = 0;
        v53 = &OBJC_IVAR___GEOXPCReply__methodName;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
        if ((v54 & 1) != 0)
LABEL_85:
          *(_BYTE *)(a1 + v53[555]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[555]) |= 8u;
          *(_BYTE *)(a1 + v53[555]) |= 4u;
          *(_BYTE *)(a1 + v53[555]) |= 2u;
          *(_BYTE *)(a1 + v53[555]) |= 0x40u;
          *(_BYTE *)(a1 + v53[555]) |= 0x10u;
          *(_BYTE *)(a1 + v53[555]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            v48 = *v19++;
            v49 = 8;
            switch(v48)
            {
              case 0:
                goto LABEL_96;
              case 1:
                goto LABEL_95;
              case 2:
                v49 = 4;
                goto LABEL_95;
              case 3:
                v49 = 2;
                goto LABEL_95;
              case 4:
                v49 = 64;
                goto LABEL_95;
              case 5:
                v49 = 16;
                goto LABEL_95;
              case 6:
                v49 = 32;
LABEL_95:
                *(_BYTE *)(a1 + v53[555]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_96:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v34)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 84) & 0x40) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 64;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v47 = 2 * *(_BYTE *)(a1 + 84);
        goto LABEL_79;
      case 5:
        if (!v34)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 84) & 0x10) == 0)
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 48;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v47 = 8 * *(_BYTE *)(a1 + 84);
        goto LABEL_79;
      case 6:
        if (!v34)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_103;
          v47 = 4 * *(_BYTE *)(a1 + 84);
LABEL_79:
          v7 += v47 >> 7;
        }
        else
        {
          PBReaderReadString();
          v43 = objc_claimAutoreleasedReturnValue();
          v44 = 56;
LABEL_68:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;

          --v7;
        }
        goto LABEL_80;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 84) & 1) != 0)
        {
LABEL_69:
          v46 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
LABEL_83:
            v53 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v42)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_85;
          }
        }
LABEL_81:
        if (!(v55 & 1 | (v7 != 0)))
          goto LABEL_82;
        break;
    }
  }
LABEL_82:
  v52 = 1;
  goto LABEL_83;
}

void sub_189080588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189080670(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189080858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189080940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189080F24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189081004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890828FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDActionDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDActionLink readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDActionDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDActionDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDActionDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDActionDataReadAllFrom_initialTag;
  Specified = GEOPDActionDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDActionDataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189082C28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189082F54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890832A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDActionDataFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedInt32Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189083C4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189083F40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDActionLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  GEOPDLink *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v52 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_81;
          v10 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
        }
        else
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v40;

          --v10;
        }
        goto LABEL_58;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
LABEL_54:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_61:
      v53 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v55 & 1 | (v10 != 0)))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
    goto LABEL_54;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v42 = objc_alloc_init(GEOPDLink);
  if (GEOPDLinkReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDActionLink _addNoFlagsLink:](a1, v42);

LABEL_58:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_59;
  }

LABEL_81:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOXPCReply__methodName;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_62:
  if ((v54 & 1) == 0)
    goto LABEL_64;
LABEL_63:
  *(_BYTE *)(a1 + v53[563]) |= 1u;
LABEL_64:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[563]) |= 2u;
    *(_BYTE *)(a1 + v53[563]) |= 4u;
    goto LABEL_74;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
        v47 = 4;
LABEL_70:
        *(_BYTE *)(a1 + v53[563]) |= v47;
      }
      else if (!v48)
      {
        goto LABEL_74;
      }
    }
    v47 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_189084534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189084A78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDActionLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDLink readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDActionLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDActionLinkReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDActionLinkReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDActionLinkReadAllFrom_initialTag;
  Specified = GEOPDActionLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDActionLinkCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189084DC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890850F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189085340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18908561C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  int v18;
  int v19;
  int *v20;
  _BOOL4 v21;
  int *v22;
  int v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEOPDLocalizedAddress *v42;
  id v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  char v56;
  char v57;
  int v58;
  char v59;

  v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
    v6 = (int *)MEMORY[0x1E0D82BD8];
    *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
    objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = &OBJC_IVAR___GEOXPCReply__methodName;
    v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
    while (2)
    {
      v14 = 1;
      v15 = 1;
      v16 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v13;
          goto LABEL_8;
        case -3:
          v8 = 1;
          goto LABEL_7;
        case -2:
          v15 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          v17 = v13 > 1;
          v18 = v17 & ~(_DWORD)v11 | v9;
          v19 = v17 | v11;
          if ((((v17 | v11) | v8) & 1) != 0)
            v20 = 0;
          else
            v20 = a3;
          v21 = v7 != 0;
          v22 = (int *)MEMORY[0x1E0D82BF0];
          v23 = 1;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_80;
          v56 = v18;
          v58 = v21 | v19 | v18;
          v59 = (v20 == 0) | v19;
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v57 = v17 | v11;
          break;
        default:
          ++v13;
LABEL_7:
          v14 = v9;
LABEL_8:
          v15 = v10;
          v16 = v11;
LABEL_10:
          ++v7;
          v9 = v14;
          v10 = v15;
          v11 = v16;
          continue;
      }
      break;
    }
    while (!*(_BYTE *)(v3 + *v24))
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      while (1)
      {
        v29 = *v22;
        v30 = *(_QWORD *)(v3 + v29);
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v6))
          break;
        v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
        *(_QWORD *)(v3 + v29) = v31;
        v28 |= (unint64_t)(v32 & 0x7F) << v26;
        if ((v32 & 0x80) == 0)
          goto LABEL_25;
        v26 += 7;
        v33 = v27++ >= 9;
        if (v33)
        {
          v28 = 0;
          v34 = *(unsigned __int8 *)(v3 + *v24);
          goto LABEL_27;
        }
      }
      *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
      v34 = *(unsigned __int8 *)(v3 + *v24);
      if (*(_BYTE *)(v3 + *v24))
        v28 = 0;
LABEL_27:
      if (v34 || (v28 & 7) == 4)
        break;
      v36 = v28 >> 3;
      v37 = v19;
      if ((v59 & 1) == 0)
      {
        v38 = v20;
        do
        {
          v40 = *v38++;
          v39 = v40;
          v37 = v40 != 0;
          if (v40)
            v41 = v39 == (_DWORD)v36;
          else
            v41 = 1;
        }
        while (!v41);
      }
      switch((int)v36)
      {
        case 1:
          if (!v37 || (*(_BYTE *)(a1 + 64) & 4) != 0)
            goto LABEL_69;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_96;
          v42 = objc_alloc_init(GEOPDLocalizedAddress);
          if (!GEOPDLocalizedAddressReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
            goto LABEL_95;
          PBReaderRecallMark();
          -[GEOPDAddress _addNoFlagsLocalizedAddress:](a1, v42);
          goto LABEL_60;
        case 2:
          if (!v37 || (*(_BYTE *)(a1 + 64) & 8) != 0)
            goto LABEL_69;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_96;
          v42 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
            goto LABEL_95;
          PBReaderRecallMark();
          -[GEOPDAddress _addNoFlagsSpokenNavigationAddress:](a1, v42);
          goto LABEL_60;
        case 3:
          if (!v37 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
            goto LABEL_69;
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_96;
          v42 = objc_alloc_init(GEOPDLocalizedSpokenStructuredAddress);
          if (!GEOPDLocalizedSpokenStructuredAddressReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          {
LABEL_95:

LABEL_96:
            v23 = 0;
            v12 = &OBJC_IVAR___GEOXPCReply__methodName;
            LOBYTE(v19) = v57;
            v24 = (int *)MEMORY[0x1E0D82BC8];
            goto LABEL_79;
          }
          PBReaderRecallMark();
          -[GEOPDAddress _addNoFlagsSpokenStructuredAddress:](a1, v42);
LABEL_60:

          LOBYTE(v19) = v57;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_75;
        case 4:
          if ((v8 & 1) == 0)
            goto LABEL_69;
          v45 = 0;
          v46 = 0;
          v47 = 0;
          *(_BYTE *)(a1 + 64) |= 1u;
          while (2)
          {
            v48 = *v22;
            v49 = *(_QWORD *)(v3 + v48);
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
            {
              *(_BYTE *)(v3 + *v24) = 1;
            }
            else
            {
              v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v49);
              *(_QWORD *)(v3 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                v33 = v46++ >= 9;
                if (v33)
                {
                  LODWORD(v47) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(v3 + *v24))
            LODWORD(v47) = 0;
LABEL_74:
          *(_DWORD *)(a1 + 60) = v47;
          goto LABEL_75;
        default:
          if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
          {
LABEL_69:
            v23 = PBReaderSkipValueWithTag();
            v24 = (int *)MEMORY[0x1E0D82BC8];
            LOBYTE(v19) = v57;
            if ((v23 & v58 & 1) == 0)
              goto LABEL_78;
          }
          else
          {
            if (!*(_QWORD *)(a1 + 16))
            {
              v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v44 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v43;

            }
            v23 = PBUnknownFieldAdd();
            LOBYTE(v19) = v57;
            v24 = (int *)MEMORY[0x1E0D82BC8];
            if (!v23)
            {
              v12 = &OBJC_IVAR___GEOXPCReply__methodName;
              goto LABEL_81;
            }
LABEL_75:
            if ((v58 & 1) == 0)
              goto LABEL_77;
          }
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_77;
          break;
      }
    }
LABEL_77:
    v23 = 1;
LABEL_78:
    v12 = &OBJC_IVAR___GEOXPCReply__methodName;
LABEL_79:
    LOBYTE(v18) = v56;
LABEL_80:
    if ((v18 & 1) != 0)
LABEL_81:
      *(_BYTE *)(a1 + v12[568]) |= 2u;
    if (v19 & 1 | ((v23 & 1) == 0))
    {
      *(_BYTE *)(a1 + v12[568]) |= 4u;
      *(_BYTE *)(a1 + v12[568]) |= 8u;
      *(_BYTE *)(a1 + v12[568]) |= 0x10u;
    }
    else if (v20)
    {
      while (1)
      {
        v52 = *v20++;
        v53 = 4;
        switch(v52)
        {
          case 0:
            goto LABEL_89;
          case 1:
            goto LABEL_88;
          case 2:
            v53 = 8;
            goto LABEL_88;
          case 3:
            v53 = 16;
LABEL_88:
            *(_BYTE *)(a1 + v12[568]) |= v53;
            break;
          default:
            continue;
        }
      }
    }
LABEL_89:
    if (v23)
    {
      v3 = *(_BYTE *)(v3 + *v24) == 0;
      if ((v19 & 1) == 0)
        return v3;
      goto LABEL_93;
    }
    v3 = 0;
    if ((v19 & 1) != 0)
    {
LABEL_93:
      v54 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_189085F2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890861AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189086A8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAddressCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[3];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDLocalizedAddress readAll:](*(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[4];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[5];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        -[GEOPDLocalizedSpokenStructuredAddress readAll:](*(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOPDAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAddressReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAddressReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAddressReadAllFrom_initialTag;
  Specified = GEOPDAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAddressCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189086F10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocalizedAddressIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18908761C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890879D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressComponentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  char v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  int v49;
  int *v50;
  unsigned __int8 v51;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v51 = v14 & ~(_BYTE)v7 | v8;
        if ((((v14 | v7) | v9) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_59;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      v49 = 1;
      goto LABEL_60;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_79;
          v43 = *(_BYTE *)(a1 + 52) << 6;
          goto LABEL_57;
        }
        PBReaderReadString();
        v36 = objc_claimAutoreleasedReturnValue();
        v37 = 24;
        goto LABEL_44;
      }
    }
    else if ((v51 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v40 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v39;

      }
      v41 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
      {
        v49 = 0;
        v50 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    v42 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
      v49 = 0;
LABEL_60:
      v50 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v51) & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v31)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v36 = objc_claimAutoreleasedReturnValue();
    v37 = 32;
LABEL_44:
    v38 = *(void **)(a1 + v37);
    *(_QWORD *)(a1 + v37) = v36;

    v18 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v43 = 32 * *(_BYTE *)(a1 + 52);
LABEL_57:
    v10 += v43 >> 7;
    v18 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_79:
  v49 = 0;
  v50 = &OBJC_IVAR___GEOXPCReply__methodName;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  if ((v51 & 1) == 0)
    goto LABEL_63;
LABEL_62:
  *(_BYTE *)(a1 + v50[575]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(_BYTE *)(a1 + v50[575]) |= 2u;
    *(_BYTE *)(a1 + v50[575]) |= 4u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      v46 = *v16++;
      v45 = v46;
      if (v46 == 1)
        break;
      if (v45 == 2)
      {
        v44 = 4;
LABEL_69:
        *(_BYTE *)(a1 + v50[575]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_73;
      }
    }
    v44 = 2;
    goto LABEL_69;
  }
LABEL_73:
  if (v49)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_77:
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_77;
  }
  return v3;
}

void sub_18908849C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18908856C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressComponentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAddressComponentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAddressComponentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAddressComponentReadAllFrom_initialTag;
  Specified = GEOPDAddressComponentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189088928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189088AB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressComponentIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189088C94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18908929C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189089CFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressWithComponentsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  int *v19;
  _BOOL4 v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDAddressComponent *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  void *v45;
  char v47;
  int v48;
  int v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v49 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = v7 != 0;
        v21 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_67;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v47 = v17;
        v48 = v20 | v49 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_65;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_65:
      v21 = 1;
      goto LABEL_66;
    }
    v34 = v26 >> 3;
    v35 = v49;
    if (!((v18 == 0) | v49 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 3)
    {
      if (!v35 || (*(_BYTE *)(a1 + 60) & 2) != 0)
      {
LABEL_63:
        v21 = PBReaderSkipValueWithTag();
        if ((v21 & v48 & 1) == 0)
          goto LABEL_66;
        goto LABEL_64;
      }
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_83;
      v40 = objc_alloc_init(GEOPDAddressComponent);
      if (!GEOPDAddressComponentReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_82;
      PBReaderRecallMark();
      -[GEOPDAddressWithComponents _addNoFlagsAdditionalComponent:](a1, v40);
      goto LABEL_55;
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 60) & 8) != 0)
        goto LABEL_63;
      PBReaderReadString();
      v40 = (GEOPDAddressComponent *)objc_claimAutoreleasedReturnValue();
      if (v40)
        -[GEOPDAddressWithComponents _addNoFlagsFormattedAddressLine:](a1, v40);
      goto LABEL_55;
    }
    if ((v47 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_63;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    if (!v21)
      goto LABEL_68;
LABEL_61:
    if ((v48 & 1) == 0)
      goto LABEL_65;
LABEL_64:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_65;
  }
  if (!v35 || (*(_BYTE *)(a1 + 60) & 4) != 0)
    goto LABEL_63;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_83;
  v40 = objc_alloc_init(GEOPDAddressComponent);
  if (GEOPDAddressComponentReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAddressWithComponents _addNoFlagsFormattedAddressComponent:](a1, v40);
LABEL_55:

    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  v21 = 0;
LABEL_66:
  LOBYTE(v17) = v47;
LABEL_67:
  if ((v17 & 1) != 0)
LABEL_68:
    *(_BYTE *)(a1 + 60) |= 1u;
  if (v49 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 60) |= 8u;
    *(_BYTE *)(a1 + 60) |= 4u;
    *(_BYTE *)(a1 + 60) |= 2u;
  }
  else if (v18)
  {
    while (1)
    {
      v43 = *v18++;
      v44 = 8;
      switch(v43)
      {
        case 0:
          goto LABEL_76;
        case 1:
          goto LABEL_75;
        case 2:
          v44 = 4;
          goto LABEL_75;
        case 3:
          v44 = 2;
LABEL_75:
          *(_BYTE *)(a1 + 60) |= v44;
          break;
        default:
          continue;
      }
    }
  }
LABEL_76:
  if (v21)
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
  else
    v3 = 0;
  if ((v49 & 1) != 0)
  {
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18908A460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18908A5D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18908ABA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAddressWithComponentsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDAddressComponent readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDAddressComponent readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDAddressWithComponentsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAddressWithComponentsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAddressWithComponentsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAddressWithComponentsReadAllFrom_initialTag;
  Specified = GEOPDAddressWithComponentsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAddressWithComponentsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18908B374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressWithComponentsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3 || (_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValuePairIsValid(a1))
          goto LABEL_30;
        PBReaderRecallMark();
      }
      else if ((_DWORD)v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_30:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_18908B8A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAddressWithComponentsIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 60) & 0x1E) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 60) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDAddressComponentIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDAddressWithComponentsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAddressWithComponentsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18908BDB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressWithComponentsFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18908C7D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18908CA08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAmenitiesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int v18;
  int *v19;
  _BOOL4 v20;
  int *v21;
  int v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPDAmenityValue *v41;
  id v42;
  void *v43;
  int v44;
  int v45;
  void *v46;
  char v48;
  int v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = v8 != 0;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = 1;
        v23 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_62;
        v48 = v17;
        v49 = v20 | v18 | v17;
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v23))
      goto LABEL_60;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v21;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v6))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      if (v26++ >= 9)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_60:
      v22 = 1;
      goto LABEL_61;
    }
    v35 = v27 >> 3;
    v36 = v18;
    if (!((v19 == 0) | v18 & 1))
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 2)
      break;
    if ((_DWORD)v35 == 1)
    {
      if (!v36 || (*(_BYTE *)(a1 + 52) & 4) != 0)
        goto LABEL_58;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_80;
      v41 = objc_alloc_init(GEOPDAmenityValue);
      if (!GEOPDAmenityValueReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
        goto LABEL_79;
      PBReaderRecallMark();
      -[GEOPDAmenities _addNoFlagsAmenity:](a1, v41);
      goto LABEL_50;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_58;
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v22 = PBUnknownFieldAdd();
    v23 = (int *)MEMORY[0x1E0D82BC8];
    if (!v22)
      goto LABEL_63;
LABEL_56:
    if ((v49 & 1) == 0)
      goto LABEL_60;
LABEL_59:
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_60;
  }
  if (!v36 || (*(_BYTE *)(a1 + 52) & 2) != 0)
  {
LABEL_58:
    v22 = PBReaderSkipValueWithTag();
    v23 = (int *)MEMORY[0x1E0D82BC8];
    if ((v22 & v49 & 1) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_80;
  v41 = objc_alloc_init(GEOPDAmenityValue);
  if (GEOPDAmenityValueReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAmenities _addNoFlagsAmenityV2:](a1, v41);
LABEL_50:

    v23 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }
LABEL_79:

LABEL_80:
  v22 = 0;
  v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if ((v17 & 1) != 0)
LABEL_63:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v18 & 1 | ((v22 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_73;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        v45 = *v19++;
        v44 = v45;
        if (v45 == 1)
          break;
        if (v44 == 2)
          goto LABEL_72;
        if (!v44)
          goto LABEL_73;
      }
      LOBYTE(v44) = 4;
LABEL_72:
      *(_BYTE *)(a1 + 52) |= v44;
      continue;
    }
  }
LABEL_73:
  if (v22)
  {
    v3 = *(_BYTE *)(v3 + *v23) == 0;
    if ((v18 & 1) == 0)
      return v3;
LABEL_77:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v18 & 1) != 0)
      goto LABEL_77;
  }
  return v3;
}

void sub_18908D240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18908DD44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAmenitiesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 24);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDAmenitiesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAmenitiesReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAmenitiesReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAmenitiesReadAllFrom_initialTag;
  Specified = GEOPDAmenitiesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAmenitiesCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18908E06C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAmenitiesReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAmenitiesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18908E0CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAmenitiesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAmenityValueIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAmenityValueIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_35;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_46;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_49;
          v23 = 0;
          break;
        case 3u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_49;
        case 4u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_49;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_49;
          PBReaderRecallMark();
          continue;
        case 6u:
          if (v15 == 2)
            goto LABEL_45;
          goto LABEL_49;
        default:
LABEL_45:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_46;
      }
LABEL_35:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18908E81C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAmenitiesIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 52) & 0xE) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOPDAmenityValueIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDAmenitiesIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDAmenitiesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18908EDCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18908F134(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAmenityRibbonItemReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt32Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18908FE94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189090A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAmenityValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  GEOLocalizedString *v57;
  void *v58;
  char v59;
  char v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  int *v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v67 = v17 & ~(_BYTE)v12 | v10;
        v68 = v17 | v12 | v67;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v69 = (v18 == 0) | v17 | v12;
        v70 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_95;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_95:
      v65 = 1;
      goto LABEL_96;
    }
    v32 = v24 >> 3;
    v33 = v70;
    if ((v69 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_79;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_81;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_79:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_81:
        *(_DWORD *)(a1 + 68) = v40;
        goto LABEL_94;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_76;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (2)
        {
          v51 = *v19;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (v29)
              {
                v50 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v50 = 0;
LABEL_85:
        *(_BYTE *)(a1 + 72) = v50 != 0;
        goto LABEL_94;
      case 3:
        if (!v33)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 76) & 0x40) == 0)
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v60 = 2 * *(_BYTE *)(a1 + 76);
        goto LABEL_92;
      case 4:
        if (!v33)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v60 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_92;
      case 5:
        if (!v33 || (*(_BYTE *)(a1 + 76) & 0x10) != 0)
          goto LABEL_76;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v57 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v57, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDAmenityValue _addNoFlagsName:](a1, v57);

LABEL_93:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_94:
          if (!(v68 & 1 | (v9 != 0)))
            goto LABEL_95;
          continue;
        }

LABEL_113:
        v65 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        v66 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
        if ((v67 & 1) != 0)
LABEL_97:
          *(_BYTE *)(a1 + v66[935]) |= 4u;
        if (v70 & 1 | ((v65 & 1) == 0))
        {
          *(_BYTE *)(a1 + v66[935]) |= 0x40u;
          *(_BYTE *)(a1 + v66[935]) |= 8u;
          *(_BYTE *)(a1 + v66[935]) |= 0x10u;
          *(_BYTE *)(a1 + v66[935]) |= 0x20u;
        }
        else if (v18)
        {
          while (1)
          {
            v61 = *v18++;
            v62 = 64;
            switch(v61)
            {
              case 0:
                goto LABEL_106;
              case 3:
                goto LABEL_105;
              case 4:
                v62 = 8;
                goto LABEL_105;
              case 5:
                v62 = 16;
                goto LABEL_105;
              case 6:
                v62 = 32;
LABEL_105:
                *(_BYTE *)(a1 + v66[935]) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_106:
        if (v65)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v70 & 1) != 0)
        {
          v63 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 6:
        if (!v33)
          goto LABEL_76;
        if ((*(_BYTE *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_113;
          v60 = 4 * *(_BYTE *)(a1 + 76);
LABEL_92:
          v9 += v60 >> 7;
        }
        else
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = 40;
LABEL_75:
          v58 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;

          --v9;
        }
        goto LABEL_93;
      default:
        if ((v67 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_76:
          v59 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v59 & 1) == 0)
          {
            v65 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v47)
          {
            v65 = 0;
            v66 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_189091308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189091448(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909177C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890928B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAmenityValueCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDAmenityValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAmenityValueReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAmenityValueReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAmenityValueReadAllFrom_initialTag;
  Specified = GEOPDAmenityValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAmenityValueCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189092B44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAmenityValueReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDAmenityValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189092BA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189092E64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAmenityValueIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 76) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189093334(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890937B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189093AF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAnnotatedItemListReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOPDPictureItemContainer *v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v57 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v37;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_101;
        v52 = 8 * *(_BYTE *)(a1 + 64);
        goto LABEL_80;
      case 2:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 32 * *(_BYTE *)(a1 + 64);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v42 = objc_alloc_init(GEOPDPictureItemContainer);
        if (!GEOPDPictureItemContainerReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        v43 = 24;
        goto LABEL_58;
      case 3:
        if (!v32)
          goto LABEL_68;
        if ((*(_BYTE *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v52 = 16 * *(_BYTE *)(a1 + 64);
LABEL_80:
          v7 += v52 >> 7;
LABEL_81:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v42 = objc_alloc_init(GEOPDTextItemContainer);
        if (GEOPDTextItemContainerReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v43 = 32;
LABEL_58:
          v38 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;
LABEL_59:

          --v7;
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        v57 = 0;
        v58 = &OBJC_IVAR___GEOXPCReply__methodName;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        if ((v60 & 1) != 0)
LABEL_86:
          *(_BYTE *)(a1 + v58[585]) |= 2u;
        if (v63 & 1 | ((v57 & 1) == 0))
        {
          *(_BYTE *)(a1 + v58[585]) |= 0x10u;
          *(_BYTE *)(a1 + v58[585]) |= 4u;
          *(_BYTE *)(a1 + v58[585]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v53 = *v17++;
            v54 = 16;
            switch(v53)
            {
              case 0:
                goto LABEL_94;
              case 1:
                goto LABEL_93;
              case 2:
                v54 = 4;
                goto LABEL_93;
              case 3:
                v54 = 8;
LABEL_93:
                *(_BYTE *)(a1 + v58[585]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v57)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v63 & 1) != 0)
        {
          v55 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v59 & 1) == 0)
          goto LABEL_68;
        v44 = 0;
        v45 = 0;
        v46 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v47 = *v18;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              v28 = v45++ >= 9;
              if (v28)
              {
                LODWORD(v46) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v46) = 0;
LABEL_73:
        *(_DWORD *)(a1 + 60) = v46;
        goto LABEL_82;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_68:
          v51 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v51 & 1) == 0)
          {
            v57 = 0;
LABEL_84:
            v58 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v57 = 0;
            v58 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_83;
        continue;
    }
  }
}

void sub_1890942A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909438C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909482C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAnnotatedItemListReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAnnotatedItemListReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAnnotatedItemListReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAnnotatedItemListReadAllFrom_initialTag;
  Specified = GEOPDAnnotatedItemListReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDTextItemContainer readAll:](*(_QWORD *)(a1 + 32), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189094A94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189094CC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189094E98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoSizeFilterValueIsValid(void *a1)
{
  _BOOL8 AllFrom;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = objc_msgSend(a1, "position");
  v7 = objc_msgSend(a1, "length");
  v5 = 0;
  v4 = 0;
  AllFrom = GEOPDPhotoSizeFilterValueReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

unint64_t GEOPDAppClipParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  char v43;
  char v44;
  int v45;
  char v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFDFFFEFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 76) & 1)+ ((*(_BYTE *)(a1 + 76) & 2) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v50 = v15;
        v51 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v52 = (v17 == 0) | v16;
        v53 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v49 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 2:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 3:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = 32 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 4:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v44 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 5:
        if (!v32)
          goto LABEL_60;
        if ((*(_BYTE *)(a1 + 76) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
LABEL_59:
          v42 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v9;
LABEL_73:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
          if (!(v51 & 1 | (v9 != 0)))
            goto LABEL_75;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v44 = *(_BYTE *)(a1 + 76) << 6;
LABEL_72:
          v9 += v44 >> 7;
          goto LABEL_73;
        }
LABEL_93:
        v49 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        if ((v50 & 1) != 0)
LABEL_77:
          *(_BYTE *)(a1 + 76) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(_BYTE *)(a1 + 76) |= 0x10u;
          *(_BYTE *)(a1 + 76) |= 0x20u;
          *(_BYTE *)(a1 + 76) |= 4u;
          *(_BYTE *)(a1 + 76) |= 8u;
          *(_BYTE *)(a1 + 76) |= 2u;
        }
        else if (v17)
        {
          while (1)
          {
            v45 = *v17++;
            v46 = 16;
            switch(v45)
            {
              case 0:
                goto LABEL_87;
              case 1:
                goto LABEL_86;
              case 2:
                v46 = 32;
                goto LABEL_86;
              case 3:
                v46 = 4;
                goto LABEL_86;
              case 4:
                v46 = 8;
                goto LABEL_86;
              case 5:
                v46 = 2;
LABEL_86:
                *(_BYTE *)(a1 + 76) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_87:
        if (v49)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v53)
        {
          v47 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
        {
LABEL_60:
          v43 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v43 & 1) == 0)
          {
            v49 = 0;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v49 = 0;
            goto LABEL_77;
          }
        }
        goto LABEL_74;
    }
  }
}

void sub_189095D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189095E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189096260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189096334(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAppClipParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAppClipParamsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAppClipParamsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAppClipParamsReadAllFrom_initialTag;
  Specified = GEOPDAppClipParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189096584(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189096770(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189096938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189096CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAssociatedAppReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  int v43;
  int v44;
  void *v45;
  int v47;
  int *v48;
  unsigned __int8 v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v49 = v14 & ~(_BYTE)v7 | v8;
        if ((((v14 | v7) | v9) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_58;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_58:
      v47 = 1;
      goto LABEL_59;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 != 2)
      break;
    if (v31 && (*(_BYTE *)(a1 + 52) & 2) == 0)
    {
      PBReaderReadString();
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      if (v38)
        -[GEOPDAssociatedApp _addNoFlagsAlternateAppAdamId:](a1, v38);

      goto LABEL_56;
    }
LABEL_52:
    v42 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
      v47 = 0;
LABEL_59:
      v48 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_60;
    }
LABEL_57:
    if (!((v15 | v49) & 1 | (v10 != 0)))
      goto LABEL_58;
  }
  if ((_DWORD)v30 != 1)
  {
    if ((v49 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v40 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v39;

      }
      v41 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
      {
        v47 = 0;
        v48 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_61;
      }
      goto LABEL_57;
    }
    goto LABEL_52;
  }
  if (!v31)
    goto LABEL_52;
  if ((*(_BYTE *)(a1 + 52) & 4) == 0)
  {
    PBReaderReadString();
    v36 = objc_claimAutoreleasedReturnValue();
    v37 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v36;

    v18 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_57;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
LABEL_56:
    v18 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_57;
  }
  v47 = 0;
  v48 = &OBJC_IVAR___GEOXPCReply__methodName;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v49 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + v48[600]) |= 1u;
LABEL_62:
  if (v15 & 1 | ((v47 & 1) == 0))
  {
    *(_BYTE *)(a1 + v48[600]) |= 4u;
    *(_BYTE *)(a1 + v48[600]) |= 2u;
    goto LABEL_71;
  }
  if (v16)
  {
    while (1)
    {
      v44 = *v16++;
      v43 = v44;
      if (v44 == 1)
        break;
      if (v43 == 2)
      {
LABEL_67:
        *(_BYTE *)(a1 + v48[600]) |= v43;
      }
      else if (!v43)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v43) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v47)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_75:
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_75;
  }
  return v3;
}

void sub_189097290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890976C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAssociatedAppReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAssociatedAppReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAssociatedAppReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAssociatedAppReadAllFrom_initialTag;
  Specified = GEOPDAssociatedAppReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189097914(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189097B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189097D98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAssociatedAppFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189098324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189098554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAttributionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  void *v42;
  void *v43;
  char v44;
  char v45;
  int v46;
  char v47;
  void *v48;
  int v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 76) & 1)+ ((*(_BYTE *)(a1 + 76) & 2) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 3;
        v15 = v14 & ~(_BYTE)v10 | v7;
        v16 = v14 | v10;
        v51 = v15;
        v52 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v53 = (v17 == 0) | v16;
        v54 = v16;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v50 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v54;
    if ((v53 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_62;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 56;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v45 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 2:
        if (!v32)
          goto LABEL_62;
        if ((*(_BYTE *)(a1 + 76) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 48;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v45 = 8 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 3:
        if (!v32)
          goto LABEL_62;
        if ((*(_BYTE *)(a1 + 76) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v45 = 16 * *(_BYTE *)(a1 + 76);
        goto LABEL_72;
      case 4:
        if (!v32 || (*(_BYTE *)(a1 + 76) & 4) != 0)
          goto LABEL_62;
        PBReaderReadString();
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        if (v42)
          -[GEOPDAttribution _addNoFlagsAttributionUrl:](a1, v42);

        goto LABEL_73;
      case 5:
        if (!v32)
          goto LABEL_62;
        if ((*(_BYTE *)(a1 + 76) & 2) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
LABEL_61:
          v43 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v9;
LABEL_73:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
          if (!(v52 & 1 | (v9 != 0)))
            goto LABEL_75;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v45 = *(_BYTE *)(a1 + 76) << 6;
LABEL_72:
          v9 += v45 >> 7;
          goto LABEL_73;
        }
LABEL_93:
        v50 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        if ((v51 & 1) != 0)
LABEL_77:
          *(_BYTE *)(a1 + 76) |= 1u;
        if (v54 || (v50 & 1) == 0)
        {
          *(_BYTE *)(a1 + 76) |= 0x20u;
          *(_BYTE *)(a1 + 76) |= 0x10u;
          *(_BYTE *)(a1 + 76) |= 8u;
          *(_BYTE *)(a1 + 76) |= 4u;
          *(_BYTE *)(a1 + 76) |= 2u;
        }
        else if (v17)
        {
          while (1)
          {
            v46 = *v17++;
            v47 = 32;
            switch(v46)
            {
              case 0:
                goto LABEL_87;
              case 1:
                goto LABEL_86;
              case 2:
                v47 = 16;
                goto LABEL_86;
              case 3:
                v47 = 8;
                goto LABEL_86;
              case 4:
                v47 = 4;
                goto LABEL_86;
              case 5:
                v47 = 2;
LABEL_86:
                *(_BYTE *)(a1 + 76) |= v47;
                break;
              default:
                continue;
            }
          }
        }
LABEL_87:
        if (v50)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v54)
        {
          v48 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v51 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
        {
LABEL_62:
          v44 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v44 & 1) == 0)
          {
            v50 = 0;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v50 = 0;
            goto LABEL_77;
          }
        }
        goto LABEL_74;
    }
  }
}

void sub_189098CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189098E90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909940C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890994DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAttributionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAttributionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAttributionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAttributionReadAllFrom_initialTag;
  Specified = GEOPDAttributionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189099A44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAttributionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_33;
          goto LABEL_30;
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 3u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 4u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 5u:
          if (v15 != 2)
            goto LABEL_33;
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            v17 = 0;
            goto LABEL_34;
          }
LABEL_31:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_32;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_33;
          goto LABEL_31;
      }
    }
  }
LABEL_32:
  v17 = a1[*v4] == 0;
LABEL_34:
  PBReaderRecallMark();
  return v17;
}

void sub_189099EE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAttributionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18909A200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompletePlaceContextMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  char v20;
  int *v21;
  int *v22;
  int v23;
  int *v24;
  char v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  int v36;
  unint64_t v38;
  BOOL v39;
  int *v40;
  int v41;
  int v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  int *v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  GEOLocalizedString *v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  char v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  void *v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  char v136;
  BOOL v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  char v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  int v148;
  int v149;
  int v150;
  void *v151;
  char v153;
  char v154;
  char v155;
  char v156;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOXPCReply__methodName;
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 112)), (uint32x4_t)xmmword_189CD7BC0), v13))+ ((*(_DWORD *)(a1 + 112) >> 14) & 1)+ ((*(_DWORD *)(a1 + 112) >> 11) & 1);
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v16 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 3;
        v19 = v18 & ~(_BYTE)v11 | v9;
        v20 = v18 | v11;
        if ((((v18 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = 1;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = v19;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_240;
        v153 = v19;
        v155 = v20 | v19;
        v156 = (v21 == 0) | v20;
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v154 = v20;
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v9;
LABEL_8:
        v16 = v10;
        v17 = v11;
LABEL_10:
        ++v7;
        v9 = v15;
        v10 = v16;
        v11 = v17;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v24))
  {
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v22;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v6))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v29 = 0;
LABEL_27:
    v36 = v29 & 7;
    if (v35 || v36 == 4)
      break;
    v38 = v29 >> 3;
    v39 = v20;
    if ((v156 & 1) == 0)
    {
      v40 = v21;
      do
      {
        v42 = *v40++;
        v41 = v42;
        v39 = v42 != 0;
        if (v42)
          v43 = v41 == (_DWORD)v38;
        else
          v43 = 1;
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if (!v39)
          goto LABEL_169;
        if ((*(_BYTE *)(a1 + v12[612] + 2) & 1) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 72;
          goto LABEL_154;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_260;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v140 = (int)(*(_DWORD *)(a1 + 112) << 15) >> 31;
        goto LABEL_223;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 0x20u;
        while (2)
        {
          v52 = *v22;
          v53 = *(_QWORD *)(v3 + v52);
          v54 = v53 + 1;
          if (v53 == -1 || v54 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v55 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v53);
            *(_QWORD *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              v34 = v50++ >= 9;
              if (v34)
              {
                v51 = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v51 = 0;
LABEL_174:
        v137 = v51 != 0;
        v138 = 106;
        goto LABEL_211;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 0x80u;
        while (2)
        {
          v59 = *v22;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v34 = v57++ >= 9;
              if (v34)
              {
                v58 = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v58 = 0;
LABEL_178:
        v137 = v58 != 0;
        v138 = 108;
        goto LABEL_211;
      case 4:
        if (!v39 || (*(_BYTE *)(a1 + v12[612] + 1) & 0x10) != 0)
          goto LABEL_169;
        if (v36 != 2)
        {
          v141 = 0;
          v142 = 0;
          v143 = 0;
          while (1)
          {
            v144 = *v22;
            v145 = *(_QWORD *)(v3 + v144);
            v146 = v145 + 1;
            if (v145 == -1 || v146 > *(_QWORD *)(v3 + *v6))
              break;
            v147 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v145);
            *(_QWORD *)(v3 + v144) = v146;
            v143 |= (unint64_t)(v147 & 0x7F) << v141;
            if (v147 < 0)
            {
              v141 += 7;
              v34 = v142++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_237;
          }
          *(_BYTE *)(v3 + *v24) = 1;
LABEL_237:
          PBRepeatedInt32Add();
          goto LABEL_155;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_260;
        while (1)
        {
          v63 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            break;
          v64 = 0;
          v65 = 0;
          v66 = 0;
          v67 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v68 = *v22;
            v69 = *(_QWORD *)(v3 + v68);
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
              break;
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v67) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v66 |= (unint64_t)(v71 & 0x7F) << v64;
            if (v71 < 0)
            {
              v64 += 7;
              v34 = v65++ >= 9;
              if (!v34)
                continue;
            }
            goto LABEL_78;
          }
          *(_BYTE *)(v3 + *v63) = 1;
LABEL_78:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v20 = v154;
        goto LABEL_156;
      case 5:
        if (!v39)
          goto LABEL_169;
        if ((*(_BYTE *)(a1 + v12[612] + 1) & 0x80) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 64;
          goto LABEL_154;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_260;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v140 = (int)(*(_DWORD *)(a1 + 112) << 16) >> 31;
        goto LABEL_223;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v72 = 0;
        v73 = 0;
        v74 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 0x400u;
        while (2)
        {
          v75 = *v22;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v34 = v73++ >= 9;
              if (v34)
              {
                v74 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v74 = 0;
LABEL_182:
        v137 = v74 != 0;
        v138 = 111;
        goto LABEL_211;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 0x40u;
        while (2)
        {
          v82 = *v22;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v34 = v80++ >= 9;
              if (v34)
              {
                v81 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v81 = 0;
LABEL_186:
        v137 = v81 != 0;
        v138 = 107;
        goto LABEL_211;
      case 8:
        if (!v39 || (*(_BYTE *)(a1 + v12[612] + 1) & 0x20) != 0)
        {
          v135 = PBReaderSkipValueWithTag();
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          v20 = v154;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v135 & 1) == 0)
            goto LABEL_258;
          goto LABEL_225;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_260;
        v86 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v86, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDAutocompletePlaceContextMetadata _addNoFlagsAlternateSearchableName:](a1, v86);

LABEL_155:
          v20 = v154;
          v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_156:
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
LABEL_224:
          v26 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_225;
        }

LABEL_260:
        v23 = 0;
        v20 = v154;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        if ((v153 & 1) != 0)
LABEL_241:
          *(_DWORD *)(a1 + v12[612]) |= 0x800u;
LABEL_242:
        if (v20 & 1 | ((v23 & 1) == 0))
        {
          *(_DWORD *)(a1 + v12[612]) |= 0x10000u;
          *(_DWORD *)(a1 + v12[612]) |= 0x1000u;
          *(_DWORD *)(a1 + v12[612]) |= 0x8000u;
          *(_DWORD *)(a1 + v12[612]) |= 0x2000u;
          *(_DWORD *)(a1 + v12[612]) |= 0x4000u;
        }
        else if (v21)
        {
          while (1)
          {
            v149 = *v21++;
            v148 = v149;
            v150 = 0x10000;
            switch(v149)
            {
              case 0:
                goto LABEL_252;
              case 1:
                goto LABEL_251;
              case 2:
              case 3:
              case 6:
              case 7:
                continue;
              case 4:
                v150 = 4096;
                goto LABEL_251;
              case 5:
                v150 = 0x8000;
                goto LABEL_251;
              case 8:
                v150 = 0x2000;
                goto LABEL_251;
              default:
                if (v148 != 15)
                  continue;
                v150 = 0x4000;
LABEL_251:
                *(_DWORD *)(a1 + v12[612]) |= v150;
                break;
            }
          }
        }
LABEL_252:
        if (v23)
        {
          v3 = *(_BYTE *)(v3 + *v24) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_256:
          v151 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_256;
        }
        return v3;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v87 = 0;
        v88 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 1u;
        while (2)
        {
          v90 = *v22;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              v34 = v88++ >= 9;
              if (v34)
              {
                LODWORD(v89) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v89) = 0;
LABEL_190:
        v139 = 92;
        goto LABEL_216;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v94 = 0;
        v95 = 0;
        v96 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 0x10u;
        while (2)
        {
          v97 = *v22;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              v34 = v95++ >= 9;
              if (v34)
              {
                v96 = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v96 = 0;
LABEL_194:
        v137 = v96 != 0;
        v138 = 105;
        goto LABEL_211;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v101 = 0;
        v102 = 0;
        v103 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 8u;
        while (2)
        {
          v104 = *v22;
          v105 = *(_QWORD *)(v3 + v104);
          v106 = v105 + 1;
          if (v105 == -1 || v106 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v107 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v105);
            *(_QWORD *)(v3 + v104) = v106;
            v103 |= (unint64_t)(v107 & 0x7F) << v101;
            if (v107 < 0)
            {
              v101 += 7;
              v34 = v102++ >= 9;
              if (v34)
              {
                v103 = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v103 = 0;
LABEL_198:
        v137 = v103 != 0;
        v138 = 104;
        goto LABEL_211;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v108 = 0;
        v109 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 2u;
        while (2)
        {
          v110 = *v22;
          v111 = *(_QWORD *)(v3 + v110);
          v112 = v111 + 1;
          if (v111 == -1 || v112 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v111);
            *(_QWORD *)(v3 + v110) = v112;
            v89 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              v34 = v109++ >= 9;
              if (v34)
              {
                LODWORD(v89) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v89) = 0;
LABEL_202:
        v139 = 96;
        goto LABEL_216;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v114 = 0;
        v115 = 0;
        v116 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 0x100u;
        while (2)
        {
          v117 = *v22;
          v118 = *(_QWORD *)(v3 + v117);
          v119 = v118 + 1;
          if (v118 == -1 || v119 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v118);
            *(_QWORD *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              v34 = v115++ >= 9;
              if (v34)
              {
                v116 = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v116 = 0;
LABEL_206:
        v137 = v116 != 0;
        v138 = 109;
        goto LABEL_211;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v121 = 0;
        v122 = 0;
        v123 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 0x200u;
        while (2)
        {
          v124 = *v22;
          v125 = *(_QWORD *)(v3 + v124);
          v126 = v125 + 1;
          if (v125 == -1 || v126 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v125);
            *(_QWORD *)(v3 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              v34 = v122++ >= 9;
              if (v34)
              {
                v123 = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v123 = 0;
LABEL_210:
        v137 = v123 != 0;
        v138 = 110;
LABEL_211:
        *(_BYTE *)(a1 + v138) = v137;
        goto LABEL_225;
      case 15:
        if (!v39)
          goto LABEL_169;
        if ((*(_BYTE *)(a1 + v12[612] + 1) & 0x40) == 0)
        {
          PBReaderReadString();
          v44 = objc_claimAutoreleasedReturnValue();
          v45 = 56;
LABEL_154:
          v128 = *(void **)(a1 + v45);
          *(_QWORD *)(a1 + v45) = v44;

          --v7;
          goto LABEL_155;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_260;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v140 = (int)(*(_DWORD *)(a1 + 112) << 17) >> 31;
LABEL_223:
        v7 += v140;
        v20 = v154;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_224;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_169;
        v129 = 0;
        v130 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + v12[612]) |= 4u;
        while (2)
        {
          v131 = *v22;
          v132 = *(_QWORD *)(v3 + v131);
          v133 = v132 + 1;
          if (v132 == -1 || v133 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v134 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v132);
            *(_QWORD *)(v3 + v131) = v133;
            v89 |= (unint64_t)(v134 & 0x7F) << v129;
            if (v134 < 0)
            {
              v129 += 7;
              v34 = v130++ >= 9;
              if (v34)
              {
                LODWORD(v89) = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v89) = 0;
LABEL_215:
        v139 = 100;
LABEL_216:
        *(_DWORD *)(a1 + v139) = v89;
        goto LABEL_225;
      default:
        if ((v153 & 1) == 0 || (*(_BYTE *)(a1 + v12[612] + 1) & 8) != 0)
        {
LABEL_169:
          v136 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v20 = v154;
          if ((v136 & 1) == 0)
          {
LABEL_258:
            v23 = 0;
            goto LABEL_239;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v20 = v154;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v23 = 0;
            goto LABEL_241;
          }
        }
LABEL_225:
        if (!(v155 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_238;
        break;
    }
  }
LABEL_238:
  v23 = 1;
LABEL_239:
  v25 = v153;
LABEL_240:
  if ((v25 & 1) != 0)
    goto LABEL_241;
  goto LABEL_242;
}

void sub_18909B8C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909C374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909C45C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompletePlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDAutocompletePlaceContextMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDAutocompletePlaceContextMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDAutocompletePlaceContextMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDAutocompletePlaceContextMetadataReadAllFrom_initialTag;
  Specified = GEOPDAutocompletePlaceContextMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDAutocompletePlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18909C7AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909CBC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909D018(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAvailabilityInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  void *v41;
  _BOOL8 v42;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_59;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_59;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v28 = 0;
          v29 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__status;
              goto LABEL_51;
            }
            v28 += 7;
            v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__status;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__status;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if ((_DWORD)v18 == 2)
          break;
        if ((_DWORD)v18 == 1)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
            {
              v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__availableNum;
              goto LABEL_50;
            }
            v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0)
              break;
            v19 += 7;
            v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__availableNum;
              goto LABEL_53;
            }
          }
          v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__availableNum;
          goto LABEL_51;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v41 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v40;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_60;
LABEL_54:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_59;
      }
      v34 = 0;
      v35 = 0;
      v21 = 0;
      *(_BYTE *)(a1 + 28) |= 4u;
      while (1)
      {
        v36 = *v4;
        v37 = *(_QWORD *)&v3[v36];
        v38 = v37 + 1;
        if (v37 == -1 || v38 > *(_QWORD *)&v3[*v5])
        {
          v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__totalNum;
          goto LABEL_50;
        }
        v39 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v37);
        *(_QWORD *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0)
          break;
        v34 += 7;
        v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__totalNum;
          goto LABEL_53;
        }
      }
      v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__totalNum;
LABEL_51:
      if (v3[*v6])
        LODWORD(v21) = 0;
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_18909E120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909E7F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchReverseGeocodeResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDPlace *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v55 = v18;
        v53 = v19;
        v54 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_62;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_62:
      v50 = 1;
      goto LABEL_63;
    }
    v34 = v26 >> 3;
    v35 = v55;
    if ((v54 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_82;
          v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_82;
          v40 = objc_alloc_init(GEOPDPlace);
          if (!GEOPDPlaceReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
            goto LABEL_81;
          PBReaderRecallMark();
          v41 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v40;

          --v8;
        }
        goto LABEL_60;
      }
    }
    else if ((v52 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

      }
      v44 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v44)
      {
        v50 = 0;
        v51 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    v45 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v45 & 1) == 0)
    {
      v50 = 0;
LABEL_63:
      v51 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_62;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
    goto LABEL_56;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_82;
  v40 = objc_alloc_init(GEOPDPlace);
  if (GEOPDPlaceReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBatchReverseGeocodeResult _addNoFlagsAdditionalPlace:](a1, v40);

LABEL_60:
    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  v50 = 0;
  v51 = &OBJC_IVAR___GEOXPCReply__methodName;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_64:
  if ((v52 & 1) == 0)
    goto LABEL_66;
LABEL_65:
  *(_BYTE *)(a1 + v51[621]) |= 1u;
LABEL_66:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[621]) |= 4u;
    *(_BYTE *)(a1 + v51[621]) |= 2u;
    goto LABEL_75;
  }
  if (v20)
  {
    while (1)
    {
      v47 = *v20++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
LABEL_71:
        *(_BYTE *)(a1 + v51[621]) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_75;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_71;
  }
LABEL_75:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18909EE80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909F3E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchReverseGeocodeResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDBatchReverseGeocodeResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBatchReverseGeocodeResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBatchReverseGeocodeResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBatchReverseGeocodeResultReadAllFrom_initialTag;
  Specified = GEOPDBatchReverseGeocodeResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBatchReverseGeocodeResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18909F750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18909F97C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBatchReverseGeocodeResultIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((v2 & 4) != 0)
  {
    if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

unint64_t GEOPDBatchReverseGeocodeResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  void *v6;
  unsigned int v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t result;
  unint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  if (a1
    && a3
    && (-[GEOPDBatchReverseGeocodeResult _readPlace](a1), *(_QWORD *)(a1 + 32))
    && (-[GEOPDBatchReverseGeocodeResult place]((id *)a1),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        v7 = GEOPDPlaceHasSensitiveFields(v6, a2),
        v6,
        v7))
  {
    -[GEOPDBatchReverseGeocodeResult place]((id *)a1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v8, "copy");

    objc_msgSend(v9, "requestData");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "clearSensitiveFields:", a2);

    -[GEOPDBatchReverseGeocodeResult setPlace:](a1, v9);
  }
  else
  {
    -[GEOPDBatchReverseGeocodeResult place]((id *)a1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "clearSensitiveFields:", a2);
  }

  -[GEOPDBatchReverseGeocodeResult _readAdditionalPlaces](a1);
  result = objc_msgSend(*(id *)(a1 + 24), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 24), "objectAtIndexedSubscript:", i);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = v13;
      if (a3 && GEOPDPlaceHasSensitiveFields(v13, a2))
      {
        v15 = (void *)objc_msgSend(v14, "copy");
        objc_msgSend(v15, "requestData");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "clearSensitiveFields:", a2);

        objc_msgSend(*(id *)(a1 + 24), "replaceObjectAtIndex:withObject:", i, v15);
      }
      else
      {
        objc_msgSend(v14, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 24), "count");
    }
  }
  return result;
}

uint64_t GEOPDBatchReverseGeocodeResultHasSensitiveFields(id *a1, uint64_t a2)
{
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  -[GEOPDBatchReverseGeocodeResult place](a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = GEOPDPlaceHasSensitiveFields(v4, a2);

  if ((v5 & 1) != 0)
    return 1;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[GEOPDBatchReverseGeocodeResult additionalPlaces](a1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    while (2)
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        if ((GEOPDPlaceHasSensitiveFields(*(void **)(*((_QWORD *)&v13 + 1) + 8 * v11), a2) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_15;
        }
        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v9)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_15:

  return v6;
}

void *GEOPDPlaceHasSensitiveFields(void *result, uint64_t a2)
{
  void *v3;
  void *v4;

  if (result)
  {
    objc_msgSend(result, "requestData");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = GEOMapItemInitialRequestDataHasSensitiveFields(v3, a2);

    return v4;
  }
  return result;
}

void GEOPDPlaceClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  unsigned int v6;
  void *v7;
  id v8;

  if (a3
    && objc_msgSend(a1, "hasRequestData")
    && (objc_msgSend(a1, "requestData"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = GEOMapItemInitialRequestDataHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    objc_msgSend(a1, "requestData");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend(v7, "copy");

    GEOMapItemInitialRequestDataClearSensitiveFields(v8, a2, 0);
    objc_msgSend(a1, "setRequestData:", v8);
  }
  else
  {
    objc_msgSend(a1, "requestData");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void sub_1890A0000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A02DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBoundingCubeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDGeographicCoordinate *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v19 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v57 = v18;
        v55 = v19;
        v56 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_66;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_66:
      v52 = 1;
      goto LABEL_67;
    }
    v34 = v26 >> 3;
    v35 = v57;
    if ((v56 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (v35)
      {
        if ((*(_BYTE *)(a1 + 52) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_86;
          v40 = objc_alloc_init(GEOPDGeographicCoordinate);
          if (!GEOPDGeographicCoordinateReadAllFrom((uint64_t)v40, (void *)v3))
            goto LABEL_85;
          PBReaderRecallMark();
          v41 = 32;
LABEL_50:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v8;
LABEL_64:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v47 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
        v8 += v47 >> 7;
        goto LABEL_64;
      }
    }
    else if ((v54 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v52 = 0;
        v53 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_69;
      }
      goto LABEL_65;
    }
LABEL_57:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v52 = 0;
LABEL_67:
      v53 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v55 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v35)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v47 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v40 = objc_alloc_init(GEOPDGeographicCoordinate);
  if (GEOPDGeographicCoordinateReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = 24;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  v52 = 0;
  v53 = &OBJC_IVAR___GEOXPCReply__methodName;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_68:
  if ((v54 & 1) == 0)
    goto LABEL_70;
LABEL_69:
  *(_BYTE *)(a1 + v53[626]) |= 1u;
LABEL_70:
  if (v57 || (v52 & 1) == 0)
  {
    *(_BYTE *)(a1 + v53[626]) |= 4u;
    *(_BYTE *)(a1 + v53[626]) |= 2u;
    goto LABEL_79;
  }
  if (v20)
  {
    while (1)
    {
      v49 = *v20++;
      v48 = v49;
      if (v49 == 1)
        break;
      if (v48 == 2)
      {
LABEL_75:
        *(_BYTE *)(a1 + v53[626]) |= v48;
      }
      else if (!v48)
      {
        goto LABEL_79;
      }
    }
    LOBYTE(v48) = 4;
    goto LABEL_75;
  }
LABEL_79:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v57)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890A0984(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A0D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBoundingCubeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBoundingCubeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBoundingCubeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBoundingCubeReadAllFrom_initialTag;
  Specified = GEOPDBoundingCubeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890A0FE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A1174(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A12E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBoundsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  -[GEOPDViewportFrame readAll:](*(_QWORD *)(a1 + 40), 1);
}

uint64_t _GEOPDBoundsIsDirty(uint64_t a1)
{
  os_unfair_lock_s *v3;
  uint64_t IsDirty;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 68) & 0x58) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 68) & 0x20) == 0)
    return 0;
  v3 = *(os_unfair_lock_s **)(a1 + 40);
  if (!v3)
    return 0;
  os_unfair_lock_lock_with_options();
  IsDirty = _GEOPDViewportFrameIsDirty((uint64_t)v3);
  os_unfair_lock_unlock(v3 + 12);
  return IsDirty;
}

os_unfair_lock_s *GEOPDBoundsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDBoundsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

BOOL GEOPDBoundsFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890A2768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A2998(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessAssetsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  int *v18;
  _BOOL4 v19;
  int *v20;
  int v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDCaptionedPhoto *v40;
  id v41;
  void *v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  char v48;
  int v49;
  int v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_DWORD)v11 | v9;
        v50 = v16 | v11;
        if ((((v16 | v11) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = v8 != 0;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = 1;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_62;
        v48 = v17;
        v49 = v19 | v50 | v17;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_60;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      v21 = 1;
      goto LABEL_61;
    }
    v34 = v26 >> 3;
    v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      v36 = v18;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 == 2)
      break;
    if ((_DWORD)v34 == 1)
    {
      if (!v35 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_58;
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_81;
      v40 = objc_alloc_init(GEOPDCaptionedPhoto);
      if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        goto LABEL_80;
      PBReaderRecallMark();
      -[GEOPDBusinessAssets _addNoFlagsCoverPhoto:](a1, v40);
      goto LABEL_50;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_58;
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v21 = PBUnknownFieldAdd();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if (!v21)
      goto LABEL_63;
LABEL_56:
    if ((v49 & 1) == 0)
      goto LABEL_60;
LABEL_59:
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_60;
  }
  if (!v35 || (*(_BYTE *)(a1 + 52) & 4) != 0)
  {
LABEL_58:
    v21 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v21 & v49 & 1) == 0)
      goto LABEL_61;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_81;
  v40 = objc_alloc_init(GEOPDCaptionedPhoto);
  if (GEOPDCaptionedPhotoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBusinessAssets _addNoFlagsCroppedCoverPhoto:](a1, v40);
LABEL_50:

    v22 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }
LABEL_80:

LABEL_81:
  v21 = 0;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if ((v17 & 1) != 0)
LABEL_63:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_74;
  }
  if (v18)
  {
    while (1)
    {
      v45 = *v18++;
      v44 = v45;
      if (v45 == 1)
        break;
      if (v44 == 2)
      {
        v43 = 4;
LABEL_70:
        *(_BYTE *)(a1 + 52) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_74;
      }
    }
    v43 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v21)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if ((v50 & 1) != 0)
  {
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890A3080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A36BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBusinessAssetsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDBusinessAssetsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBusinessAssetsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBusinessAssetsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBusinessAssetsReadAllFrom_initialTag;
  Specified = GEOPDBusinessAssetsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBusinessAssetsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890A3AA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCaptionedPhotoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  char v44;
  unsigned int v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  int v51;
  int v52;
  BOOL v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  int v67;
  _BOOL8 v68;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_138;
          goto LABEL_26;
        case 2u:
          if (v16 == 2)
            goto LABEL_26;
          goto LABEL_138;
        case 3u:
          if (v16 == 2)
            goto LABEL_26;
          goto LABEL_138;
        case 4u:
          if (v16 == 2)
            goto LABEL_26;
          goto LABEL_138;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDPhotoIsValid(a1))
            goto LABEL_138;
          goto LABEL_133;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_138;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_130;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_134;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_138;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_130;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_134;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_138;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_130;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_134;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_138;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_130;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_134;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_138;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_130;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_134;
          }
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark())
            goto LABEL_138;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
LABEL_75:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v44 = 0;
            v45 = 0;
            v46 = 0;
            while (2)
            {
              v47 = *v2;
              v48 = *(_QWORD *)&a1[v47];
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                v50 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v48);
                *(_QWORD *)&a1[v47] = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if (v50 < 0)
                {
                  v44 += 7;
                  v13 = v45++ >= 9;
                  if (v13)
                  {
                    v46 = 0;
                    v51 = a1[*v4];
                    goto LABEL_87;
                  }
                  continue;
                }
              }
              break;
            }
            v51 = a1[*v4];
            if (a1[*v4])
              v46 = 0;
LABEL_87:
            v52 = v46 & 7;
            if (v51)
              v53 = 1;
            else
              v53 = v52 == 4;
            if (!v53)
            {
              switch((v46 >> 3))
              {
                case 1u:
                  if (v52 != 2)
                    goto LABEL_137;
                  goto LABEL_103;
                case 2u:
                  if (v52 == 2)
                    goto LABEL_103;
                  goto LABEL_137;
                case 3u:
                  if (v52 == 2)
                    goto LABEL_103;
                  goto LABEL_137;
                case 4u:
                  if (v52 == 2)
                    goto LABEL_103;
                  goto LABEL_137;
                case 5u:
                  if (v52 != 2)
                    goto LABEL_137;
LABEL_103:
                  if ((PBReaderSkipValueWithTag() & 1) != 0)
                    continue;
LABEL_137:
                  PBReaderRecallMark();
                  goto LABEL_138;
                case 6u:
                  if ((v46 & 7) != 0)
                    goto LABEL_137;
                  v54 = 0;
                  break;
                default:
                  if (PBReaderSkipValueWithTag())
                    continue;
                  goto LABEL_137;
              }
              do
              {
                v55 = *v2;
                v56 = *(_QWORD *)&a1[v55];
                v57 = v56 + 1;
                if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_75;
                }
                v58 = *(char *)(*(_QWORD *)&a1[*v5] + v56);
                *(_QWORD *)&a1[v55] = v57;
                if ((v58 & 0x80000000) == 0)
                  break;
                v23 = v54++ > 8;
              }
              while (!v23);
              continue;
            }
            break;
          }
          v67 = a1[*v4];
          PBReaderRecallMark();
          if (v67)
          {
LABEL_138:
            PBReaderRecallMark();
            return 0;
          }
LABEL_133:
          PBReaderRecallMark();
LABEL_134:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_135;
          break;
        case 0xCu:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDAttributionIsValid(a1))
            goto LABEL_133;
          goto LABEL_138;
        case 0xDu:
          if (v16 != 1)
            goto LABEL_138;
          v59 = *v2;
          v60 = *(_QWORD *)&a1[v59];
          if (v60 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_131;
          v61 = v60 + 8;
          if (v61 > *(_QWORD *)&a1[*v3])
            goto LABEL_131;
          *(_QWORD *)&a1[v59] = v61;
          goto LABEL_134;
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_138;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              break;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v23 = v62++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_134;
          }
LABEL_130:
          v14 = *v4;
LABEL_131:
          a1[v14] = 1;
          goto LABEL_134;
        default:
LABEL_26:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_138;
          goto LABEL_134;
      }
    }
  }
LABEL_135:
  v68 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v68;
}

void sub_1890A44B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A478C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A4E3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A5068(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessClaimReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void *v49;
  char v50;
  char v51;
  int v52;
  char v53;
  void *v54;
  int v56;
  int *v57;
  char v58;
  char v59;
  char v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v58 = v15 | v8;
        v59 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v60 = (v17 == 0) | v16;
        v61 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v56 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_91;
        v51 = 32 * *(_BYTE *)(a1 + 64);
        goto LABEL_73;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_61;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                v44 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v44 = 0;
LABEL_66:
        *(_BYTE *)(a1 + 60) = v44 != 0;
        goto LABEL_74;
      case 3:
        if (!v32)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 64) & 0x10) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 40;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_91;
        v51 = 8 * *(_BYTE *)(a1 + 64);
        goto LABEL_73;
      case 4:
        if (!v32)
          goto LABEL_61;
        if ((*(_BYTE *)(a1 + 64) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
LABEL_60:
          v49 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          v19 = (int *)MEMORY[0x1E0D82BC8];
          --v10;
LABEL_74:
          if (!(v59 & 1 | (v10 != 0)))
            goto LABEL_75;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v51 = 16 * *(_BYTE *)(a1 + 64);
LABEL_73:
          v10 += v51 >> 7;
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_74;
        }
LABEL_91:
        v56 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        v57 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
        if ((v58 & 1) != 0)
LABEL_77:
          *(_BYTE *)(a1 + v57[998]) |= 2u;
        if (v61 || (v56 & 1) == 0)
        {
          *(_BYTE *)(a1 + v57[998]) |= 4u;
          *(_BYTE *)(a1 + v57[998]) |= 0x10u;
          *(_BYTE *)(a1 + v57[998]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            v52 = *v17++;
            v53 = 4;
            switch(v52)
            {
              case 0:
                goto LABEL_85;
              case 1:
                goto LABEL_84;
              case 3:
                v53 = 16;
                goto LABEL_84;
              case 4:
                v53 = 8;
LABEL_84:
                *(_BYTE *)(a1 + v57[998]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_85:
        if (v56)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v61)
        {
          v54 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_61:
          v50 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v56 = 0;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v56 = 0;
            v57 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
            goto LABEL_77;
          }
        }
        goto LABEL_74;
    }
  }
}

void sub_1890A5854(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A5994(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A6040(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessClaimReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBusinessClaimReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBusinessClaimReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBusinessClaimReadAllFrom_initialTag;
  Specified = GEOPDBusinessClaimReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1890A61CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessClaimReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDBusinessClaimReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1890A622C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessClaimIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_40;
          goto LABEL_34;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_40;
          v17 = 0;
          break;
        case 3u:
          if (v15 == 2)
            goto LABEL_34;
          goto LABEL_40;
        case 4u:
          if (v15 != 2)
            goto LABEL_40;
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_40:
          v23 = 0;
          goto LABEL_39;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_40;
          continue;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_35;
      }
      a1[*v4] = 1;
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v23;
}

void sub_1890A6650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessClaimIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1890A6990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A6CA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessClaimFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890A71B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A73E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessHoursReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPDHours *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  void *v63;
  char v64;
  uint64_t v65;
  __int16 v66;
  int v67;
  __int16 v68;
  void *v69;
  int v71;
  int *v72;
  char v73;
  char v74;
  char v75;
  char v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFCFFFAFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 3) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 2;
        v73 = v17 & ~(_BYTE)v12 | v10;
        v74 = v17 | v12 | v73;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v75 = (v18 == 0) | v17 | v12;
        v76 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_114;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_114:
      v71 = 1;
      goto LABEL_115;
    }
    v32 = v24 >> 3;
    v33 = v76;
    if ((v75 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(_WORD *)(a1 + 88) & 0x80) != 0)
          goto LABEL_90;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v38 = objc_alloc_init(GEOPDHours);
        if (!GEOPDHoursReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        -[GEOPDBusinessHours _addNoFlagsWeeklyHours:](a1, v38);

        goto LABEL_112;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (2)
        {
          v45 = *v19;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v29 = v43++ >= 9;
              if (v29)
              {
                v44 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v44 = 0;
LABEL_95:
        v65 = 56;
        goto LABEL_100;
      case 3:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          v51 = *v19;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v29 = v50++ >= 9;
              if (v29)
              {
                v44 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          v44 = 0;
LABEL_99:
        v65 = 24;
LABEL_100:
        *(_QWORD *)(a1 + v65) = v44;
        goto LABEL_113;
      case 4:
        if (!v33)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v66 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v38 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        v55 = 40;
        goto LABEL_89;
      case 5:
        if (!v33)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v66 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v38 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
          goto LABEL_132;
        PBReaderRecallMark();
        v55 = 48;
        goto LABEL_89;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_WORD *)(a1 + 88) |= 4u;
        while (2)
        {
          v59 = *v19;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v29 = v57++ >= 9;
              if (v29)
              {
                LODWORD(v58) = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v58) = 0;
LABEL_104:
        *(_DWORD *)(a1 + 84) = v58;
        goto LABEL_113;
      case 7:
        if (!v33)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_133;
          v66 = *(_WORD *)(a1 + 88) << 11;
LABEL_111:
          v8 += v66 >> 15;
LABEL_112:
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_133;
        v38 = objc_alloc_init(GEOPDHoursThreshold);
        if (GEOPDHoursThresholdReadAllFrom((uint64_t)v38, (void *)v3))
        {
          PBReaderRecallMark();
          v55 = 32;
LABEL_89:
          v63 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v38;

          --v8;
          goto LABEL_112;
        }
LABEL_132:

LABEL_133:
        v71 = 0;
        v72 = &OBJC_IVAR___GEOXPCReply__methodName;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_116:
        if ((v73 & 1) != 0)
LABEL_117:
          *(_WORD *)(a1 + v72[645]) |= 8u;
        if (v76 & 1 | ((v71 & 1) == 0))
        {
          *(_WORD *)(a1 + v72[645]) |= 0x80u;
          *(_WORD *)(a1 + v72[645]) |= 0x20u;
          *(_WORD *)(a1 + v72[645]) |= 0x40u;
          *(_WORD *)(a1 + v72[645]) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v67 = *v18++;
            v68 = 128;
            switch(v67)
            {
              case 0:
                goto LABEL_126;
              case 1:
                goto LABEL_125;
              case 4:
                v68 = 32;
                goto LABEL_125;
              case 5:
                v68 = 64;
                goto LABEL_125;
              case 7:
                v68 = 16;
LABEL_125:
                *(_WORD *)(a1 + v72[645]) |= v68;
                break;
              default:
                continue;
            }
          }
        }
LABEL_126:
        if (v71)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if ((v76 & 1) != 0)
        {
          v69 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v73 & 1) == 0 || (*(_WORD *)(a1 + 88) & 8) != 0)
        {
LABEL_90:
          v64 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v64 & 1) == 0)
          {
            v71 = 0;
LABEL_115:
            v72 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_116;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v41)
          {
            v71 = 0;
            v72 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_117;
          }
        }
LABEL_113:
        if (!(v74 & 1 | (v8 != 0)))
          goto LABEL_114;
        continue;
    }
  }
}

void sub_1890A7F68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A80BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A86A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890A8780(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBusinessHoursCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[8];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[5], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEOPDBusinessHoursReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDBusinessHoursReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDBusinessHoursReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDBusinessHoursReadAllFrom_initialTag;
  Specified = GEOPDBusinessHoursReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDBusinessHoursCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1890A90B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessHoursIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDHoursIsValid(a1))
            goto LABEL_57;
          goto LABEL_60;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_60;
          goto LABEL_57;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v28 = 0;
          break;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
            goto LABEL_60;
LABEL_57:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_58;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDHoursIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_50;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_50;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_52;
LABEL_39:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v23 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v24 = *v2;
              v25 = *(_QWORD *)&a1[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
                break;
              v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
              *(_QWORD *)&a1[v24] = v26;
              if (v27 < 0)
              {
                v13 = v23++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0)
          goto LABEL_52;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v15++;
            if (v22 <= 8)
              continue;
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_50;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDLocalTimeRangeIsValid(a1))
      goto LABEL_52;
    goto LABEL_35;
  }
LABEL_50:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1890A99A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBusinessHoursIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x180) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x40) == 0)
    goto LABEL_10;
  if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 48)))
    return 1;
  v2 = *(_WORD *)(a1 + 88);
LABEL_10:
  if ((v2 & 0x10) != 0)
    return 1;
  if ((v2 & 0x80) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 64);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEOPDHoursIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_23;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_23:

  return v3;
}

void sub_1890A9E2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessHoursDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDBusinessHours *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDBusinessHours);
          if (!GEOPDBusinessHoursReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1890AA83C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessHoursFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890AAE08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessInfosModuleConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  void *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v17 = v10 & 7;
        if (v16 || v17 == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_49;
            while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
            {
              v19 = 0;
              v20 = 0;
              v21 = 0;
              while (1)
              {
                v22 = *v4;
                v23 = *(_QWORD *)&v3[v22];
                v24 = v23 + 1;
                if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                  break;
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (!v15)
                    continue;
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            v28 = 0;
            v29 = 0;
            v30 = 0;
            while (1)
            {
              v31 = *v4;
              v32 = *(_QWORD *)&v3[v31];
              v33 = v32 + 1;
              if (v32 == -1 || v33 > *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v32);
              *(_QWORD *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                v15 = v29++ >= 9;
                if (!v15)
                  continue;
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt32Add();
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v26 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v27 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v26;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_49;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1890AB5F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890ABBD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDButtonItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  GEOPDGroupParams *v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  char v52;
  int v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v60 = v17 & ~(_BYTE)v12 | v10;
        v61 = v17 | v12 | v60;
        if ((((v17 | v12) | v8) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v62 = (v18 == 0) | v17 | v12;
        v63 = v17 | v12;
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v9;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_79;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      v58 = 1;
      goto LABEL_80;
    }
    v32 = v24 >> 3;
    v33 = v63;
    if ((v62 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if (!v33)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_99;
        v45 = objc_alloc_init(GEOPDGroupParams);
        if (!GEOPDGroupParamsReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
          goto LABEL_98;
        PBReaderRecallMark();
        v46 = 24;
LABEL_59:
        v47 = *(void **)(a1 + v46);
        *(_QWORD *)(a1 + v46) = v45;

        --v9;
LABEL_77:
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_99;
      v52 = 32 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v9 += v52 >> 7;
      goto LABEL_77;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if ((v8 & 1) == 0)
        goto LABEL_66;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v41 = *v19;
        v42 = *(_QWORD *)(v3 + v41);
        v43 = v42 + 1;
        if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
        *(_QWORD *)(v3 + v41) = v43;
        v40 |= (unint64_t)(v44 & 0x7F) << v38;
        if ((v44 & 0x80) == 0)
          goto LABEL_69;
        v38 += 7;
        v29 = v39++ >= 9;
        if (v29)
        {
          LODWORD(v40) = 0;
          goto LABEL_71;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_69:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v40) = 0;
LABEL_71:
      *(_DWORD *)(a1 + 52) = v40;
    }
    else
    {
      if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
      {
LABEL_66:
        v51 = PBReaderSkipValueWithTag();
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v51 & 1) == 0)
        {
          v58 = 0;
          goto LABEL_80;
        }
        goto LABEL_78;
      }
      if (!*(_QWORD *)(a1 + 16))
      {
        v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v49 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v48;

      }
      v50 = PBUnknownFieldAdd();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      v7 = (int *)MEMORY[0x1E0D82BD8];
      if (!v50)
      {
        v58 = 0;
        v59 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
        goto LABEL_81;
      }
    }
LABEL_78:
    if (!(v61 & 1 | (v9 != 0)))
      goto LABEL_79;
  }
  if (!v33)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_99;
    v52 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v45 = objc_alloc_init(GEOPDQuickLinkParams);
  if (GEOPDQuickLinkParamsReadAllFrom((uint64_t)v45, (void *)v3))
  {
    PBReaderRecallMark();
    v46 = 32;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  v58 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
  v59 = &OBJC_IVAR___GEOTrafficBannerText__disableFasterRerouteByDefault;
  if ((v60 & 1) == 0)
    goto LABEL_82;
LABEL_81:
  *(_BYTE *)(a1 + v59[1016]) |= 2u;
LABEL_82:
  if (v63 & 1 | ((v58 & 1) == 0))
  {
    *(_BYTE *)(a1 + v59[1016]) |= 8u;
    *(_BYTE *)(a1 + v59[1016]) |= 4u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v54 = *v18++;
        v53 = v54;
        if (v54 == 2)
          break;
        if (v53 == 3)
        {
          v55 = 4;
          goto LABEL_91;
        }
        if (!v53)
          goto LABEL_92;
      }
      v55 = 8;
LABEL_91:
      *(_BYTE *)(a1 + v59[1016]) |= v55;
      continue;
    }
  }
LABEL_92:
  if (v58)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v56 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890AC344(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890ACC00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDButtonItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDButtonItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDButtonItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDButtonItemReadAllFrom_initialTag;
  Specified = GEOPDButtonItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890ACDB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDButtonItemReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDButtonItemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1890ACE18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDButtonItemIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_41;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_41;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDQuickLinkParamsIsValid(a1))
          goto LABEL_43;
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if ((_DWORD)v17 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_41;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGroupParamsIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOPDQuickLinkParamsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPDGroupParamsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGroupDataIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_1890AD68C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDButtonItemIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1890AD998(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890ADC78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDButtonModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDButtonItem *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDButtonItem);
          if (!GEOPDButtonItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDButtonModuleConfiguration addButtonItem:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1890AE430(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890AE8E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCaptionedPhotoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  unsigned __int8 v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  GEOPDPhoto *v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  BOOL v94;
  uint64_t v95;
  __int16 v96;
  int v97;
  __int16 v98;
  void *v99;
  int v101;
  char v102;
  char v103;
  char v104;
  BOOL v105;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOXPCReply__methodName;
  v13 = ((*(unsigned __int16 *)(a1 + 108) >> 7) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFF3FFF4FFF6FFF7) & 0xFF81FF81FF81FF81))+ ((*(_WORD *)(a1 + 108) >> 14) & 1)+ ((*(_WORD *)(a1 + 108) >> 11) & 1)+ (HIBYTE(*(_WORD *)(a1 + 108)) & 1));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 4;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        v102 = v18;
        v103 = v19 | v18;
        if (((v19 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v104 = (v20 == 0) | v19;
        v105 = v19;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_174;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_174:
      v101 = 1;
      goto LABEL_175;
    }
    v34 = v26 >> 3;
    v35 = v105;
    if ((v104 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + v12[657]) & 0x400) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 40;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_195;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v96 = 32 * *(_WORD *)(a1 + 108);
        goto LABEL_168;
      case 2:
        if (!v35)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + v12[657]) & 0x200) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 32;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_195;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v96 = *(_WORD *)(a1 + 108) << 6;
        goto LABEL_168;
      case 3:
        if (!v35)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + v12[657]) & 0x1000) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 64;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_195;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v96 = 8 * *(_WORD *)(a1 + 108);
        goto LABEL_168;
      case 4:
        if (!v35)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + v12[657]) & 0x2000) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 72;
LABEL_57:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
          goto LABEL_114;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_195;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v96 = 4 * *(_WORD *)(a1 + 108);
        goto LABEL_168;
      case 5:
        if (!v35)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + v12[657]) & 0x4000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_195;
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          v96 = 2 * *(_WORD *)(a1 + 108);
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_195;
        v46 = objc_alloc_init(GEOPDPhoto);
        if (!GEOPDPhotoReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
          goto LABEL_194;
        PBReaderRecallMark();
        v47 = 80;
        goto LABEL_113;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_WORD *)(a1 + v12[657]) |= 2u;
        while (2)
        {
          v51 = *v21;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v31 = v49++ >= 9;
              if (v31)
              {
                v50 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v50 = 0;
LABEL_132:
        v94 = v50 != 0;
        v95 = 100;
        goto LABEL_153;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v55 = 0;
        v56 = 0;
        v57 = 0;
        *(_WORD *)(a1 + v12[657]) |= 0x40u;
        while (2)
        {
          v58 = *v21;
          v59 = *(_QWORD *)(v3 + v58);
          v60 = v59 + 1;
          if (v59 == -1 || v60 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v59);
            *(_QWORD *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              v31 = v56++ >= 9;
              if (v31)
              {
                v57 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v57 = 0;
LABEL_136:
        v94 = v57 != 0;
        v95 = 105;
        goto LABEL_153;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        *(_WORD *)(a1 + v12[657]) |= 8u;
        while (2)
        {
          v65 = *v21;
          v66 = *(_QWORD *)(v3 + v65);
          v67 = v66 + 1;
          if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (v31)
              {
                v64 = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v64 = 0;
LABEL_140:
        v94 = v64 != 0;
        v95 = 102;
        goto LABEL_153;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_WORD *)(a1 + v12[657]) |= 0x10u;
        while (2)
        {
          v72 = *v21;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v31 = v70++ >= 9;
              if (v31)
              {
                v71 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v71 = 0;
LABEL_144:
        v94 = v71 != 0;
        v95 = 103;
        goto LABEL_153;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v76 = 0;
        v77 = 0;
        v78 = 0;
        *(_WORD *)(a1 + v12[657]) |= 4u;
        while (2)
        {
          v79 = *v21;
          v80 = *(_QWORD *)(v3 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              v31 = v77++ >= 9;
              if (v31)
              {
                v78 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v78 = 0;
LABEL_148:
        v94 = v78 != 0;
        v95 = 101;
        goto LABEL_153;
      case 11:
        if (!v35)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + v12[657]) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_195;
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          v96 = 16 * *(_WORD *)(a1 + 108);
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_195;
        v46 = objc_alloc_init(GEOPDJoeColor);
        if (!GEOPDJoeColorReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
          goto LABEL_194;
        PBReaderRecallMark();
        v47 = 56;
        goto LABEL_113;
      case 12:
        if (!v35)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + v12[657]) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_195;
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          v96 = *(_WORD *)(a1 + 108) << 7;
LABEL_168:
          v7 += v96 >> 15;
LABEL_169:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_170:
          if (!(v103 & 1 | (v7 != 0)))
            goto LABEL_174;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_195;
        v46 = objc_alloc_init(GEOPDAttribution);
        if (GEOPDAttributionReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v47 = 24;
LABEL_113:
          v45 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;
LABEL_114:

          --v7;
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          goto LABEL_169;
        }
LABEL_194:

LABEL_195:
        v101 = 0;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_175:
        if ((v102 & 1) != 0)
LABEL_176:
          *(_WORD *)(a1 + v12[657]) |= 0x80u;
        if (v105 || (v101 & 1) == 0)
        {
          *(_WORD *)(a1 + v12[657]) |= 0x400u;
          *(_WORD *)(a1 + v12[657]) |= 0x200u;
          *(_WORD *)(a1 + v12[657]) |= 0x1000u;
          *(_WORD *)(a1 + v12[657]) |= 0x2000u;
          *(_WORD *)(a1 + v12[657]) |= 0x4000u;
          *(_WORD *)(a1 + v12[657]) |= 0x800u;
          *(_WORD *)(a1 + v12[657]) |= 0x100u;
        }
        else if (v20)
        {
          while (1)
          {
            v97 = *v20++;
            v98 = 1024;
            switch(v97)
            {
              case 0:
                goto LABEL_188;
              case 1:
                goto LABEL_187;
              case 2:
                v98 = 512;
                goto LABEL_187;
              case 3:
                v98 = 4096;
                goto LABEL_187;
              case 4:
                v98 = 0x2000;
                goto LABEL_187;
              case 5:
                v98 = 0x4000;
                goto LABEL_187;
              case 11:
                v98 = 2048;
                goto LABEL_187;
              case 12:
                v98 = 256;
LABEL_187:
                *(_WORD *)(a1 + v12[657]) |= v98;
                break;
              default:
                continue;
            }
          }
        }
LABEL_188:
        if (v101)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v105)
        {
          v99 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        *(_WORD *)(a1 + v12[657]) |= 1u;
        v83 = *v21;
        v84 = *(_QWORD *)(v3 + v83);
        if (v84 <= 0xFFFFFFFFFFFFFFF7 && v84 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v85 = *(_QWORD *)(*(_QWORD *)(v3 + *v23) + v84);
          *(_QWORD *)(v3 + v83) = v84 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v22) = 1;
          v85 = 0;
        }
        *(_QWORD *)(a1 + 48) = v85;
        goto LABEL_170;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_WORD *)(a1 + v12[657]) |= 0x20u;
        while (2)
        {
          v89 = *v21;
          v90 = *(_QWORD *)(v3 + v89);
          v91 = v90 + 1;
          if (v90 == -1 || v91 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v90);
            *(_QWORD *)(v3 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              v31 = v87++ >= 9;
              if (v31)
              {
                v88 = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v88 = 0;
LABEL_152:
        v94 = v88 != 0;
        v95 = 104;
LABEL_153:
        *(_BYTE *)(a1 + v95) = v94;
        goto LABEL_170;
      default:
        if ((v102 & 1) == 0 || (*(_WORD *)(a1 + v12[657]) & 0x80) != 0)
        {
LABEL_127:
          v93 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          if ((v93 & 1) == 0)
          {
            v101 = 0;
            goto LABEL_175;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v12 = &OBJC_IVAR___GEOXPCReply__methodName;
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v44)
          {
            v101 = 0;
            goto LABEL_176;
          }
        }
        goto LABEL_170;
    }
  }
}

void sub_1890AF734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890AF888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890AF9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890AFB30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890AFC84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890AFDD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B0538(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCaptionedPhotoCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDPhoto readAll:](a1[10], 1);
  -[GEOPDJoeColor readAll:](a1[7], 1);
  -[GEOPDAttribution readAll:](a1[3], 1);
}

unint64_t GEOPDCaptionedPhotoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 92))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCaptionedPhotoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 92) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCaptionedPhotoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCaptionedPhotoReadAllFrom_initialTag;
  Specified = GEOPDCaptionedPhotoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDCaptionedPhotoCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1890B10C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  _BOOL8 v44;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_77;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_25:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            v19 |= (unint64_t)(v23 & 0x7F) << v17;
            if ((v23 & 0x80) == 0)
              goto LABEL_35;
            v17 += 7;
            v13 = v18++ >= 9;
            if (v13)
            {
              v19 = 0;
              v24 = a1[*v4];
              goto LABEL_37;
            }
          }
          a1[*v4] = 1;
LABEL_35:
          v24 = a1[*v4];
          if (a1[*v4])
            v19 = 0;
LABEL_37:
          v25 = v19 & 7;
          if (v24 || v25 == 4)
            break;
          switch((v19 >> 3))
          {
            case 1u:
              if ((v19 & 7) != 0)
                goto LABEL_76;
              v27 = 0;
              while (1)
              {
                v28 = *v2;
                v29 = *(_QWORD *)&a1[v28];
                v30 = v29 + 1;
                if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                  goto LABEL_69;
                v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
                *(_QWORD *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  v32 = v27++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_25;
              }
            case 2u:
              if ((v19 & 7) != 0)
                goto LABEL_76;
              v33 = 0;
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  goto LABEL_69;
                v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v32 = v33++ > 8;
                  if (!v32)
                    continue;
                }
                goto LABEL_25;
              }
            case 3u:
              if (v25 == 2)
                goto LABEL_59;
              goto LABEL_76;
            case 4u:
              if ((v19 & 7) != 0)
                goto LABEL_76;
              v38 = 0;
              break;
            default:
LABEL_59:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                continue;
LABEL_76:
              PBReaderRecallMark();
              goto LABEL_77;
          }
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              break;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v32 = v38++ > 8;
              if (!v32)
                continue;
            }
            goto LABEL_25;
          }
LABEL_69:
          a1[*v4] = 1;
        }
        v43 = a1[*v4];
        PBReaderRecallMark();
        if (v43)
        {
LABEL_77:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_77;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v44 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v44;
}

void sub_1890B1814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDCaptionedPhotoIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v4;
  unsigned int v5;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0xB600) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 108) & 0x4000) != 0)
  {
    if (GEOPDPhotoIsDirty(*(_QWORD *)(a1 + 80)))
      return 1;
    v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x800) == 0)
    return (v2 & 0x100) != 0 && GEOPDAttributionIsDirty(*(_QWORD *)(a1 + 24));
  v4 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    os_unfair_lock_lock_with_options();
    os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 72));
    v5 = *(unsigned __int8 *)(v4 + 80);
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 72));
    if (v5 > 3)
      return 1;
  }
  v2 = *(_WORD *)(a1 + 108);
  return (v2 & 0x100) != 0 && GEOPDAttributionIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEOPDCaptionedPhotoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDCaptionedPhotoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1890B1CA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B2C38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B2EA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B30D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategorizedPhotosReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  GEOLocalizedString *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v58 = v16 & ~(_BYTE)v11 | v9;
        v59 = v16 | v11 | v58;
        v57 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v60 = (v17 == 0) | v16 | v11;
        v61 = v16 | v11;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v61;
    if ((v60 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 64) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;

          --v7;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v7 += *(unsigned __int8 *)(a1 + 64) << 29 >> 31;
        goto LABEL_75;
      case 2:
        if (!v32 || (*(_BYTE *)(a1 + 64) & 8) != 0)
          goto LABEL_67;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v42 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_94;
        PBReaderRecallMark();
        -[GEOPDCategorizedPhotos _addNoFlagsCategoryName:](a1, v42);
        goto LABEL_58;
      case 3:
        if (!v32 || (*(_BYTE *)(a1 + 64) & 0x10) != 0)
          goto LABEL_67;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v42 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (GEOPDCaptionedPhotoReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDCategorizedPhotos _addNoFlagsPhoto:](a1, v42);
LABEL_58:

LABEL_75:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_76;
        }
LABEL_94:

LABEL_95:
        v55 = 0;
        v56 = &OBJC_IVAR___GEOXPCReply__methodName;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        if ((v58 & 1) != 0)
LABEL_80:
          *(_BYTE *)(a1 + v56[681]) |= 2u;
        if (v61 & 1 | ((v55 & 1) == 0))
        {
          *(_BYTE *)(a1 + v56[681]) |= 4u;
          *(_BYTE *)(a1 + v56[681]) |= 8u;
          *(_BYTE *)(a1 + v56[681]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v51 = *v17++;
            v52 = 4;
            switch(v51)
            {
              case 0:
                goto LABEL_88;
              case 1:
                goto LABEL_87;
              case 2:
                v52 = 8;
                goto LABEL_87;
              case 3:
                v52 = 16;
LABEL_87:
                *(_BYTE *)(a1 + v56[681]) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v55)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v61 & 1) != 0)
        {
          v53 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v57 & 1) == 0)
          goto LABEL_67;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 64) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              v28 = v44++ >= 9;
              if (v28)
              {
                LODWORD(v45) = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v45) = 0;
LABEL_72:
        *(_DWORD *)(a1 + 60) = v45;
        goto LABEL_76;
      default:
        if ((v58 & 1) == 0 || (*(_BYTE *)(a1 + 64) & 2) != 0)
        {
LABEL_67:
          v50 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v50 & 1) == 0)
          {
            v55 = 0;
LABEL_78:
            v56 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v55 = 0;
            v56 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v59 & 1 | (v7 != 0)))
          goto LABEL_77;
        break;
    }
  }
LABEL_77:
  v55 = 1;
  goto LABEL_78;
}

void sub_1890B3838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B3A20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B40E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCategorizedPhotosCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 40);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDCaptionedPhoto readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDCategorizedPhotosReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCategorizedPhotosReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCategorizedPhotosReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCategorizedPhotosReadAllFrom_initialTag;
  Specified = GEOPDCategorizedPhotosReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDCategorizedPhotosCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1890B44CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B4874(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B4BA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B5410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategorizedPhotosFilterIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 80) > 0x1Fu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1890B57A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B5B10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  GEOLocalizedString *v47;
  id v48;
  void *v49;
  int v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        v14 = v8;
        goto LABEL_8;
      case -3:
        v10 = 1;
        goto LABEL_7;
      case -2:
        v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 != 0;
        v59 = v17 & ~(_BYTE)v12 | v9;
        v60 = v17 | v12 | v59;
        if ((((v17 | v12) | v10) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v18 == 0) | v17 | v12;
        v62 = v17 | v12;
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v8;
        v15 = v9;
LABEL_8:
        v16 = v12;
LABEL_10:
        ++v11;
        v8 = v14;
        v9 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_73;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_73:
      v57 = 1;
      goto LABEL_74;
    }
    v32 = v24 >> 3;
    v33 = v62;
    if ((v61 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 5)
    {
      if (!v33)
        goto LABEL_63;
      if ((*(_BYTE *)(a1 + 56) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v11 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
      }
      else
      {
        PBReaderReadString();
        v45 = objc_claimAutoreleasedReturnValue();
        v46 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v45;

        --v11;
      }
      goto LABEL_71;
    }
    if ((_DWORD)v32 == 3)
      break;
    if ((_DWORD)v32 == 1)
    {
      if ((v10 & 1) == 0)
        goto LABEL_63;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v41 = *v19;
        v42 = *(_QWORD *)(v3 + v41);
        v43 = v42 + 1;
        if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v7))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
        *(_QWORD *)(v3 + v41) = v43;
        v40 |= (unint64_t)(v44 & 0x7F) << v38;
        if ((v44 & 0x80) == 0)
          goto LABEL_66;
        v38 += 7;
        v29 = v39++ >= 9;
        if (v29)
        {
          LODWORD(v40) = 0;
          goto LABEL_68;
        }
      }
      *(_BYTE *)(v3 + *v20) = 1;
LABEL_66:
      if (*(_BYTE *)(v3 + *v20))
        LODWORD(v40) = 0;
LABEL_68:
      *(_DWORD *)(a1 + 52) = v40;
    }
    else
    {
      if ((v59 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
        goto LABEL_63;
      if (!*(_QWORD *)(a1 + 16))
      {
        v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v49 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v48;

      }
      v50 = PBUnknownFieldAdd();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      v7 = (int *)MEMORY[0x1E0D82BD8];
      if (!v50)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        goto LABEL_75;
      }
    }
LABEL_72:
    if (!(v60 & 1 | (v11 != 0)))
      goto LABEL_73;
  }
  if (!v33 || (*(_BYTE *)(a1 + 56) & 8) != 0)
  {
LABEL_63:
    v51 = PBReaderSkipValueWithTag();
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if ((v51 & 1) == 0)
    {
      v57 = 0;
      goto LABEL_74;
    }
    goto LABEL_72;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_93;
  v47 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v47, (void *)v3, v8 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDCategory _addNoFlagsLocalizedName:](a1, v47);

LABEL_71:
    v20 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_72;
  }

LABEL_93:
  v57 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  v58 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
  if ((v59 & 1) == 0)
    goto LABEL_76;
LABEL_75:
  *(_BYTE *)(a1 + v58[22]) |= 2u;
LABEL_76:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[22]) |= 8u;
    *(_BYTE *)(a1 + v58[22]) |= 4u;
    goto LABEL_86;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v18++;
        v52 = v53;
        if (v53 == 3)
          break;
        if (v52 == 5)
        {
          v54 = 4;
          goto LABEL_85;
        }
        if (!v52)
          goto LABEL_86;
      }
      v54 = 8;
LABEL_85:
      *(_BYTE *)(a1 + v58[22]) |= v54;
      continue;
    }
  }
LABEL_86:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890B6420(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B6C44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 32);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCategoryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCategoryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCategoryReadAllFrom_initialTag;
  Specified = GEOPDCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDCategoryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890B6ED0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDCategoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1890B6F30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_39;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 5)
        break;
      if ((_DWORD)v17 != 3)
      {
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_41;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8)
              continue;
            goto LABEL_38;
          }
          a1[*v4] = 1;
          goto LABEL_38;
        }
        goto LABEL_35;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if (v15 != 2)
      goto LABEL_41;
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_41;
    goto LABEL_38;
  }
LABEL_39:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_1890B73DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1890B7804(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B7B80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOLocalizedString *v20;
  id v21;
  void *v22;
  _BOOL8 v23;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDCategoryData addCategoryName:](a1, v20);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v21 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v22 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v21;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1890B83D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B888C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  GEOLocalizedString *v46;
  uint64_t v47;
  char v48;
  char v49;
  int v50;
  char v51;
  void *v52;
  int v54;
  int *v55;
  char v56;
  char v57;
  char v58;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFFFFFCFFFELL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v56 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v59 = v18;
        v57 = v19;
        v58 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_77;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_77:
      v54 = 1;
      goto LABEL_78;
    }
    v34 = v26 >> 3;
    v35 = v59;
    if ((v58 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 0x10) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 48;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v49 = 8 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 32;
LABEL_51:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v49 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_74;
      case 3:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v49 = *(_BYTE *)(a1 + 68) << 6;
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v46 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
          goto LABEL_95;
        PBReaderRecallMark();
        v47 = 24;
        goto LABEL_62;
      case 4:
        if (!v35)
          goto LABEL_64;
        if ((*(_BYTE *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
          v49 = 16 * *(_BYTE *)(a1 + 68);
LABEL_74:
          v7 += v49 >> 7;
LABEL_75:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_96;
        v46 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v46, (void *)v3))
        {
          PBReaderRecallMark();
          v47 = 40;
LABEL_62:
          v45 = *(void **)(a1 + v47);
          *(_QWORD *)(a1 + v47) = v46;
LABEL_63:

          --v7;
          goto LABEL_75;
        }
LABEL_95:

LABEL_96:
        v54 = 0;
        v55 = &OBJC_IVAR___GEOXPCReply__methodName;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_79:
        if ((v56 & 1) != 0)
LABEL_80:
          *(_BYTE *)(a1 + v55[693]) |= 1u;
        if (v59 || (v54 & 1) == 0)
        {
          *(_BYTE *)(a1 + v55[693]) |= 0x10u;
          *(_BYTE *)(a1 + v55[693]) |= 4u;
          *(_BYTE *)(a1 + v55[693]) |= 2u;
          *(_BYTE *)(a1 + v55[693]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            v50 = *v20++;
            v51 = 16;
            switch(v50)
            {
              case 0:
                goto LABEL_89;
              case 1:
                goto LABEL_88;
              case 2:
                v51 = 4;
                goto LABEL_88;
              case 3:
                v51 = 2;
                goto LABEL_88;
              case 4:
                v51 = 8;
LABEL_88:
                *(_BYTE *)(a1 + v55[693]) |= v51;
                break;
              default:
                continue;
            }
          }
        }
LABEL_89:
        if (v54)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v59)
        {
          v52 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_64:
          v48 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v48 & 1) == 0)
          {
            v54 = 0;
LABEL_78:
            v55 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v54 = 0;
            v55 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v57 & 1 | (v7 != 0)))
          goto LABEL_77;
        continue;
    }
  }
}

void sub_1890B904C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B918C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B92C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890B99FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCategoryInformationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCategoryInformationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCategoryInformationReadAllFrom_initialTag;
  Specified = GEOPDCategoryInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1890B9BB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryInformationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPDCategoryInformationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1890B9C10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryInformationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_34;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_34;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_34;
          goto LABEL_31;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_34;
LABEL_31:
          PBReaderRecallMark();
          goto LABEL_32;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_34:
            PBReaderRecallMark();
            return 0;
          }
LABEL_32:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_33;
          break;
      }
    }
  }
LABEL_33:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1890BA010(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategoryInformationIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x34) != 0)
    return 1;
  if ((v2 & 2) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 24)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOPDCategoryInformationIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDCategoryInformationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1890BA380(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BA66C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v59 = v15 | v8;
        v60 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      v57 = 1;
      goto LABEL_74;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v9 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_63;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            v41 = 0;
            goto LABEL_65;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_63:
        if (*(_BYTE *)(v3 + *v19))
          v41 = 0;
LABEL_65:
        *(_QWORD *)(a1 + 24) = -(v41 & 1) ^ (v41 >> 1);
        goto LABEL_72;
      }
      goto LABEL_60;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = 32;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_93;
        v51 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_70;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 60) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_76;
      }
      goto LABEL_72;
    }
LABEL_60:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_74:
      v58 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v60 & 1 | (v10 != 0)))
      goto LABEL_73;
  }
  if (!v32)
    goto LABEL_60;
  if ((*(_BYTE *)(a1 + 60) & 8) == 0)
  {
    PBReaderReadString();
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = 40;
LABEL_53:
    v46 = *(void **)(a1 + v38);
    *(_QWORD *)(a1 + v38) = v37;

    --v10;
LABEL_71:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_72;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v51 = 16 * *(_BYTE *)(a1 + 60);
LABEL_70:
    v10 += v51 >> 7;
    goto LABEL_71;
  }
LABEL_93:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOXPCReply__methodName;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_75:
  if ((v59 & 1) == 0)
    goto LABEL_77;
LABEL_76:
  *(_BYTE *)(a1 + v58[696]) |= 2u;
LABEL_77:
  if (v62 || (v57 & 1) == 0)
  {
    *(_BYTE *)(a1 + v58[696]) |= 4u;
    *(_BYTE *)(a1 + v58[696]) |= 8u;
    goto LABEL_87;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 8;
          goto LABEL_86;
        }
        if (!v52)
          goto LABEL_87;
      }
      v54 = 4;
LABEL_86:
      *(_BYTE *)(a1 + v58[696]) |= v54;
      continue;
    }
  }
LABEL_87:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v62)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890BB254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BB324(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCategoryLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCategoryLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCategoryLookupParametersReadAllFrom_initialTag;
  Specified = GEOPDCategoryLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1890BB70C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryLookupParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_38;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
        goto LABEL_37;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2)
          goto LABEL_40;
        goto LABEL_32;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v15 != 2)
      goto LABEL_40;
LABEL_32:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_38:
  v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_1890BBADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryLookupParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1890BBD00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BC0EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChargerInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int *v17;
  _BOOL4 v18;
  int *v19;
  int v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  void *v39;
  id v40;
  void *v41;
  char v42;
  int v43;
  int v44;
  char v45;
  void *v46;
  char v48;
  int v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v7;
        v16 = v14 & ~(_DWORD)v7 | v8;
        if (((v15 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = v10 != 0;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_58;
        v48 = v16;
        v49 = v15 | v18 | v16;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v21))
      break;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
      break;
    v33 = v25 >> 3;
    v34 = v15;
    if (!((v17 == 0) | v15 & 1))
    {
      v35 = v17;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
    {
      if (!v34 || (*(_BYTE *)(a1 + 52) & 4) != 0)
      {
LABEL_54:
        v20 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if ((v20 & v49 & 1) == 0)
          goto LABEL_57;
        continue;
      }
      PBReaderReadString();
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      if (v39)
        -[GEOPDChargerInfo _addNoFlagsTotalChargerId:](a1, v39);
      goto LABEL_46;
    }
    if ((_DWORD)v33 == 1)
    {
      if (!v34 || (*(_BYTE *)(a1 + 52) & 2) != 0)
        goto LABEL_54;
      PBReaderReadString();
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      if (v39)
        -[GEOPDChargerInfo _addNoFlagsAvailableChargerId:](a1, v39);
LABEL_46:

      v21 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_52;
    }
    if ((v48 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
      goto LABEL_54;
    if (!*(_QWORD *)(a1 + 16))
    {
      v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v41 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v40;

    }
    v42 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
      v20 = 0;
      goto LABEL_59;
    }
LABEL_52:
    if ((v49 & 1) == 0)
      break;
  }
  while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6));
  v20 = 1;
LABEL_57:
  LOBYTE(v16) = v48;
LABEL_58:
  if ((v16 & 1) != 0)
LABEL_59:
    *(_BYTE *)(a1 + 52) |= 1u;
  if (v15 & 1 | ((v20 & 1) == 0))
  {
    *(_BYTE *)(a1 + 52) |= 2u;
    *(_BYTE *)(a1 + 52) |= 4u;
    goto LABEL_70;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v44 = *v17++;
        v43 = v44;
        if (v44 == 1)
          break;
        if (v43 == 2)
        {
          v45 = 4;
          goto LABEL_69;
        }
        if (!v43)
          goto LABEL_70;
      }
      v45 = 2;
LABEL_69:
      *(_BYTE *)(a1 + 52) |= v45;
      continue;
    }
  }
LABEL_70:
  if (v20)
  {
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_74:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_74;
  }
  return v3;
}

void sub_1890BC758(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BCB98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChargerInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDChargerInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDChargerInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDChargerInfoReadAllFrom_initialTag;
  Specified = GEOPDChargerInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890BCDE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BD0A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BD378(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildActionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  GEOPDChildActionDirections *v49;
  uint64_t v50;
  void *v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  BOOL v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFAFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 8) != 0)+ ((*(_BYTE *)(a1 + 80) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v60 = v17;
        v61 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v62 = (v19 == 0) | v18;
        v63 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_98;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_98:
      v58 = 1;
      goto LABEL_99;
    }
    v33 = v25 >> 3;
    v34 = v63;
    if ((v62 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_82;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_84;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_82:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_84:
        *(_DWORD *)(a1 + 76) = v41;
        goto LABEL_97;
      case 2:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 32 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDChildActionDirections);
        if (!GEOPDChildActionDirectionsReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 24;
        goto LABEL_78;
      case 3:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 8 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDChildActionFlyover);
        if (!GEOPDChildActionFlyoverReadAllFrom((uint64_t)v49, (void *)v3))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 40;
        goto LABEL_78;
      case 4:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 2 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDChildActionSearch);
        if (!GEOPDChildActionSearchReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 56;
        goto LABEL_78;
      case 5:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 4 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDChildActionGuides);
        if (!GEOPDChildActionGuidesReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 48;
        goto LABEL_78;
      case 6:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 16 * *(_BYTE *)(a1 + 80);
LABEL_95:
          v7 += v53 >> 7;
LABEL_96:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDChildActionDownloadOfflineMap);
        if (GEOPDChildActionDownloadOfflineMapReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          v50 = 32;
LABEL_78:
          v51 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;

          --v7;
          goto LABEL_96;
        }
LABEL_117:

LABEL_118:
        v58 = 0;
        v59 = &OBJC_IVAR___GEOXPCReply__methodName;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_100:
        if ((v60 & 1) != 0)
LABEL_101:
          *(_BYTE *)(a1 + v59[705]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_BYTE *)(a1 + v59[705]) |= 4u;
          *(_BYTE *)(a1 + v59[705]) |= 0x10u;
          *(_BYTE *)(a1 + v59[705]) |= 0x40u;
          *(_BYTE *)(a1 + v59[705]) |= 0x20u;
          *(_BYTE *)(a1 + v59[705]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            v54 = *v19++;
            v55 = 4;
            switch(v54)
            {
              case 0:
                goto LABEL_111;
              case 2:
                goto LABEL_110;
              case 3:
                v55 = 16;
                goto LABEL_110;
              case 4:
                v55 = 64;
                goto LABEL_110;
              case 5:
                v55 = 32;
                goto LABEL_110;
              case 6:
                v55 = 8;
LABEL_110:
                *(_BYTE *)(a1 + v59[705]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v63)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 2) != 0)
        {
LABEL_79:
          v52 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_99:
            v59 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_101;
          }
        }
LABEL_97:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_98;
        continue;
    }
  }
}

void sub_1890BDF1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BE004(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BE588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BE65C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildActionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDChildActionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDChildActionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDChildActionReadAllFrom_initialTag;
  Specified = GEOPDChildActionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1890BE8AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BEAC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890BECC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionDirectionsReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890BF390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionDownloadOfflineMapReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890BF870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionFlyoverReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890BFD50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionGuidesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDGuidesLocationEntry *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDGuidesLocationEntry);
          if (!GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1890C034C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuidesLocationEntryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  int v36;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  _BOOL8 v50;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_105:
    v50 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v50;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_105;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_105;
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          goto LABEL_82;
        goto LABEL_107;
      case 2u:
        if ((v8 & 7) != 0)
          goto LABEL_107;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_90;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_91;
        }
      case 3u:
        if ((v8 & 7) != 0)
          goto LABEL_107;
        v23 = 0;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_90;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v22 = v23++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_91;
        }
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_107;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_44:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_93;
        v28 = 0;
        v29 = 0;
        v30 = 0;
        while (1)
        {
          v31 = *v2;
          v32 = *(_QWORD *)&a1[v31];
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)&a1[*v3])
            break;
          v34 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v32);
          *(_QWORD *)&a1[v31] = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0)
            goto LABEL_54;
          v28 += 7;
          v13 = v29++ >= 9;
          if (v13)
          {
            v30 = 0;
            v35 = a1[*v4];
            goto LABEL_56;
          }
        }
        a1[*v4] = 1;
LABEL_54:
        v35 = a1[*v4];
        if (a1[*v4])
          v30 = 0;
LABEL_56:
        v36 = v30 & 7;
        if (v35 || v36 == 4)
        {
LABEL_93:
          v44 = a1[*v4];
          PBReaderRecallMark();
          if (v44)
            goto LABEL_107;
LABEL_82:
          PBReaderRecallMark();
LABEL_91:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_105;
          continue;
        }
        v38 = v30 >> 3;
        if ((v30 >> 3) == 3)
        {
          if (v36 == 2 && PBReaderPlaceMark() && GEOPDGuideLocationImageIsValid(a1))
            goto LABEL_72;
        }
        else
        {
          if ((_DWORD)v38 != 2)
          {
            if ((_DWORD)v38 == 1 && v36 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_106;
            goto LABEL_44;
          }
          if (v36 == 2 && PBReaderPlaceMark() && GEOPDCaptionedPhotoIsValid(a1))
          {
LABEL_72:
            PBReaderRecallMark();
            goto LABEL_44;
          }
        }
LABEL_106:
        PBReaderRecallMark();
LABEL_107:
        PBReaderRecallMark();
        return 0;
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
          goto LABEL_107;
        goto LABEL_82;
      case 6u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1))
          goto LABEL_82;
        goto LABEL_107;
      case 7u:
        if (v15 != 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_107;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              break;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v43 = v15++;
              if (v43 <= 8)
                continue;
            }
            goto LABEL_91;
          }
LABEL_90:
          a1[*v4] = 1;
          goto LABEL_91;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_107;
LABEL_96:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
        {
          v45 = a1[*v4];
          if (a1[*v4])
            break;
          while (1)
          {
            v46 = *v2;
            v47 = *(_QWORD *)&a1[v46];
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
              break;
            v49 = *(char *)(*(_QWORD *)&a1[*v5] + v47);
            *(_QWORD *)&a1[v46] = v48;
            if (v49 < 0)
            {
              v13 = v45++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_96;
          }
          a1[*v4] = 1;
        }
        goto LABEL_82;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        goto LABEL_91;
    }
  }
}

BOOL GEOPDChildActionSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDRelatedSearchSuggestion *v20;
  void *v21;
  id v22;
  void *v23;
  _BOOL8 v24;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          v21 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v20;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v22 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v23 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v22;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1890C149C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C1824(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  GEOPDChildAction *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v60 = v16 & ~(_BYTE)v11 | v9;
        v61 = v16 | v11 | v60;
        v59 = v7;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v62 = (v17 == 0) | v16 | v11;
        v63 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_79;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_79:
      v57 = 1;
      goto LABEL_80;
    }
    v31 = v23 >> 3;
    v32 = v63;
    if ((v62 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if (!v32)
        goto LABEL_66;
      if ((*(_BYTE *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_100;
        v44 = objc_alloc_init(GEOPDChildAction);
        if (!GEOPDChildActionReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
          goto LABEL_99;
        PBReaderRecallMark();
        v45 = 24;
LABEL_59:
        v46 = *(void **)(a1 + v45);
        *(_QWORD *)(a1 + v45) = v44;

        --v8;
LABEL_77:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_100;
      v51 = 32 * *(_BYTE *)(a1 + 56);
LABEL_76:
      v8 += v51 >> 7;
      goto LABEL_77;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if ((v59 & 1) != 0)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_69;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v39) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_78;
      }
    }
    else if ((v60 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_80:
      v58 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v61 & 1 | (v8 != 0)))
      goto LABEL_79;
  }
  if (!v32)
    goto LABEL_66;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_100;
    v51 = 16 * *(_BYTE *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_100;
  v44 = objc_alloc_init(GEOPDChildPlace);
  if (GEOPDChildPlaceReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v45 = 32;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOXPCReply__methodName;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
  if ((v60 & 1) == 0)
    goto LABEL_83;
LABEL_82:
  *(_BYTE *)(a1 + v58[713]) |= 2u;
LABEL_83:
  if (v63 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[713]) |= 8u;
    *(_BYTE *)(a1 + v58[713]) |= 4u;
    goto LABEL_93;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 2)
          break;
        if (v52 == 3)
        {
          v54 = 4;
          goto LABEL_92;
        }
        if (!v52)
          goto LABEL_93;
      }
      v54 = 8;
LABEL_92:
      *(_BYTE *)(a1 + v58[713]) |= v54;
      continue;
    }
  }
LABEL_93:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v63 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890C1F30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C2340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDChildItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDChildItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDChildItemReadAllFrom_initialTag;
  Specified = GEOPDChildItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDChildPlace readAll:](*(_QWORD *)(a1 + 32), 1);
    -[GEOPDChildAction readAll:](*(_QWORD *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890C25BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildPlaceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) != 1)
        goto LABEL_25;
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_28;
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_28;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1890C2944(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDChildItemIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  int v4;
  _BOOL8 v5;
  uint64_t v6;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 56);
  if ((v2 & 0x10) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 56) & 8) != 0)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
      v4 = *(_BYTE *)(v3 + 52) & 0xE;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
      if (v4)
        return 1;
      v2 = *(_BYTE *)(a1 + 56);
    }
  }
  if ((v2 & 4) == 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 24);
  if (!v6)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 72));
  v5 = *(unsigned __int8 *)(v6 + 80) > 3u;
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 72));
  return v5;
}

void sub_1890C2C04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C2FD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDMapsIdentifier *v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v8;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v9) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_64;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_64:
      v53 = 1;
      goto LABEL_65;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    if ((_DWORD)v34 != 2)
      break;
    if (v35)
    {
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        PBReaderReadString();
        v42 = objc_claimAutoreleasedReturnValue();
        v41 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v42;
LABEL_48:

        --v10;
LABEL_62:
        v22 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v47 = 32 * *(_BYTE *)(a1 + 52);
LABEL_61:
      v10 += v47 >> 7;
      goto LABEL_62;
    }
LABEL_55:
    v46 = PBReaderSkipValueWithTag();
    v22 = (int *)MEMORY[0x1E0D82BC8];
    if ((v46 & 1) == 0)
    {
      v53 = 0;
LABEL_65:
      v54 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v56 & 1 | (v10 != 0)))
      goto LABEL_64;
  }
  if ((_DWORD)v34 != 1)
  {
    if ((v55 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v44 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v43;

      }
      v45 = PBUnknownFieldAdd();
      v22 = (int *)MEMORY[0x1E0D82BC8];
      if (!v45)
      {
        v53 = 0;
        v54 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
    goto LABEL_55;
  }
  if (!v35)
    goto LABEL_55;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v47 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v40 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v40;
    goto LABEL_48;
  }

LABEL_85:
  v53 = 0;
  v54 = &OBJC_IVAR___GEOXPCReply__methodName;
  v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
  if ((v55 & 1) == 0)
    goto LABEL_68;
LABEL_67:
  *(_BYTE *)(a1 + v54[719]) |= 1u;
LABEL_68:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[719]) |= 2u;
    *(_BYTE *)(a1 + v54[719]) |= 4u;
    goto LABEL_78;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        v49 = *v20++;
        v48 = v49;
        if (v49 == 1)
          break;
        if (v48 == 2)
        {
          v50 = 4;
          goto LABEL_77;
        }
        if (!v48)
          goto LABEL_78;
      }
      v50 = 2;
LABEL_77:
      *(_BYTE *)(a1 + v54[719]) |= v50;
      continue;
    }
  }
LABEL_78:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v22) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890C35F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C3948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDChildPlaceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDChildPlaceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDChildPlaceReadAllFrom_initialTag;
  Specified = GEOPDChildPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890C3D40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C3ECC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C403C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionIdsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  GEOPDMapsIdentifier *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDCollectionIds addCollectionId:](a1, v18);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890C4848(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionIdsFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1890C4FAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C51DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCollectionResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  GEOPDMapsIdentifier *v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v59 = v16 & ~(_BYTE)v11 | v9;
        v60 = v16 | v11 | v59;
        if ((((v16 | v11) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16 | v11;
        v62 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_75;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      v57 = 1;
      goto LABEL_76;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
      break;
    if ((_DWORD)v31 == 2)
    {
      if ((v7 & 1) != 0)
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v43 = *v18;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_69;
          v40 += 7;
          v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_71;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_69:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v42) = 0;
LABEL_71:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if ((_DWORD)v31 != 1)
    {
      if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v48 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v47;

        }
        v49 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v6 = (int *)MEMORY[0x1E0D82BD8];
        if (!v49)
        {
          v57 = 0;
          v58 = &OBJC_IVAR___GEOXPCReply__methodName;
          goto LABEL_78;
        }
        goto LABEL_66;
      }
LABEL_65:
      v50 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v50 & 1) != 0)
        goto LABEL_66;
      v57 = 0;
LABEL_76:
      v58 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_77;
    }
    if (!v32)
      goto LABEL_65;
    if ((*(_BYTE *)(a1 + 56) & 4) != 0)
    {
      v51 = PBReaderSkipValueWithTag();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v51 & 1) == 0)
        goto LABEL_97;
      v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    }
    else
    {
      v37 = PBReaderPlaceMark();
      v6 = (int *)MEMORY[0x1E0D82BD8];
      if ((v37 & 1) == 0)
        goto LABEL_97;
      v38 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v38, (void *)v3))
        goto LABEL_96;
      PBReaderRecallMark();
      v39 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v38;

      --v8;
    }
    v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_66:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_75;
  }
  if (!v32 || (*(_BYTE *)(a1 + 56) & 8) != 0)
    goto LABEL_65;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_97;
  v38 = objc_alloc_init(GEOPDComponent);
  if (GEOPDComponentReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDCollectionResult _addNoFlagsComponent:](a1, v38);

    v19 = (int *)MEMORY[0x1E0D82BC8];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOXPCReply__methodName;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
  if ((v59 & 1) == 0)
    goto LABEL_79;
LABEL_78:
  *(_BYTE *)(a1 + v58[725]) |= 2u;
LABEL_79:
  if (v62 & 1 | ((v57 & 1) == 0))
  {
    *(_BYTE *)(a1 + v58[725]) |= 4u;
    *(_BYTE *)(a1 + v58[725]) |= 8u;
    goto LABEL_89;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 3)
        {
          v54 = 8;
          goto LABEL_88;
        }
        if (!v52)
          goto LABEL_89;
      }
      v54 = 4;
LABEL_88:
      *(_BYTE *)(a1 + v58[725]) |= v54;
      continue;
    }
  }
LABEL_89:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if ((v62 & 1) != 0)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1890C5968(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C5FEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCollectionResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDCollectionResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDCollectionResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDCollectionResultReadAllFrom_initialTag;
  Specified = GEOPDCollectionResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1890C6254(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C64B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890C684C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDColorReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1890C7158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890CF2B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890CF40C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890CF55C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890CF6F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890D3ED0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1890DB068(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDComponentFilterCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDTransitScheduleFilter readAll:](a1[85], 1);
  -[GEOPDETAFilter readAll:](a1[25], 1);
  -[GEOPDCaptionedPhotoFilter readAll:](a1[16], 1);
  -[GEOPDTransitTripStopTimeFilter readAll:](a1[88], 1);
  -[GEOPDCategorizedPhotosFilter readAll:](a1[17], 1);
}

BOOL GEOPDComponentFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  BOOL v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  BOOL v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  char v93;
  unsigned int v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  int v100;
  int v101;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  char v108;
  unsigned int v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  int v115;
  int v116;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  char v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  uint64_t v134;
  char v136;
  unsigned int v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  int v143;
  int v144;
  BOOL v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  int v150;
  char v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v158;
  char v160;
  unsigned int v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  int v167;
  int v168;
  char v170;
  unsigned int v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  int v177;
  unsigned int v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  int v183;
  char v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  uint64_t v191;
  char v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  uint64_t v200;
  char v202;
  unsigned int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  char v208;
  uint64_t v209;
  char v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  char v217;
  uint64_t v218;
  char v220;
  unsigned int v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  char v226;
  int v227;
  unsigned int v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  int v233;
  char v234;
  unsigned int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  uint64_t v241;
  char v243;
  unsigned int v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  char v249;
  uint64_t v250;
  char v252;
  unsigned int v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  char v258;
  int v259;
  int v260;
  char v262;
  unsigned int v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  char v268;
  uint64_t v269;
  char v271;
  unsigned int v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  char v277;
  int v278;
  int v279;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  int v290;
  char v291;
  unsigned int v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  char v297;
  int v298;
  int v299;
  BOOL v300;
  unsigned int v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  int v305;
  unsigned int v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  int v310;
  unsigned int v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  int v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  uint64_t v322;
  uint64_t v323;
  unint64_t v324;
  int v325;
  char v326;
  unsigned int v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  char v332;
  int v333;
  int v334;
  unsigned int v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  int v340;
  char v341;
  unsigned int v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  unint64_t v346;
  char v347;
  uint64_t v348;
  char v350;
  unsigned int v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  unint64_t v355;
  char v356;
  uint64_t v357;
  char v359;
  unsigned int v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  unint64_t v364;
  char v365;
  uint64_t v366;
  char v368;
  unsigned int v369;
  unint64_t v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  char v374;
  int v375;
  int v376;
  char v378;
  unsigned int v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unint64_t v383;
  char v384;
  uint64_t v385;
  char v387;
  unsigned int v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  unint64_t v392;
  char v393;
  uint64_t v394;
  char v396;
  unsigned int v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  unint64_t v401;
  char v402;
  uint64_t v403;
  char v405;
  unsigned int v406;
  unint64_t v407;
  uint64_t v408;
  uint64_t v409;
  unint64_t v410;
  char v411;
  int v412;
  unsigned int v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  int v418;
  char v419;
  unsigned int v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  unint64_t v424;
  char v425;
  uint64_t v426;
  char v428;
  unsigned int v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  unint64_t v433;
  char v434;
  uint64_t v435;
  char v437;
  unsigned int v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  unint64_t v442;
  char v443;
  uint64_t v444;
  char v446;
  unsigned int v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  unint64_t v451;
  char v452;
  uint64_t v453;
  char v455;
  unsigned int v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  unint64_t v460;
  char v461;
  uint64_t v462;
  char v464;
  unsigned int v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  unint64_t v469;
  char v470;
  uint64_t v471;
  char v473;
  unsigned int v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  unint64_t v478;
  char v479;
  uint64_t v480;
  char v482;
  unsigned int v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  unint64_t v487;
  char v488;
  uint64_t v489;
  char v491;
  unsigned int v492;
  unint64_t v493;
  uint64_t v494;
  uint64_t v495;
  unint64_t v496;
  char v497;
  int v498;
  int v499;
  char v501;
  unsigned int v502;
  unint64_t v503;
  uint64_t v504;
  uint64_t v505;
  unint64_t v506;
  char v507;
  int v508;
  unsigned int v510;
  uint64_t v511;
  uint64_t v512;
  unint64_t v513;
  int v514;
  char v515;
  unsigned int v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  unint64_t v520;
  char v521;
  uint64_t v522;
  char v524;
  unsigned int v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  unint64_t v529;
  char v530;
  uint64_t v531;
  char v533;
  unsigned int v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  unint64_t v538;
  char v539;
  uint64_t v540;
  char v542;
  unsigned int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  unint64_t v547;
  char v548;
  uint64_t v549;
  char v551;
  unsigned int v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  unint64_t v556;
  char v557;
  uint64_t v558;
  char v560;
  unsigned int v561;
  unint64_t v562;
  uint64_t v563;
  uint64_t v564;
  unint64_t v565;
  char v566;
  int v567;
  BOOL v568;
  unsigned int v569;
  uint64_t v570;
  uint64_t v571;
  unint64_t v572;
  int v573;
  unsigned int v574;
  uint64_t v575;
  uint64_t v576;
  unint64_t v577;
  int v578;
  unsigned int v579;
  uint64_t v580;
  uint64_t v581;
  unint64_t v582;
  int v583;
  unsigned int v584;
  uint64_t v585;
  uint64_t v586;
  unint64_t v587;
  int v588;
  unsigned int v589;
  uint64_t v590;
  uint64_t v591;
  unint64_t v592;
  int v593;
  unsigned int v594;
  uint64_t v595;
  uint64_t v596;
  unint64_t v597;
  int v598;
  unsigned int v599;
  uint64_t v600;
  uint64_t v601;
  unint64_t v602;
  int v603;
  char v604;
  unsigned int v605;
  unint64_t v606;
  uint64_t v607;
  uint64_t v608;
  unint64_t v609;
  char v610;
  int v611;
  unsigned int v613;
  uint64_t v614;
  uint64_t v615;
  unint64_t v616;
  int v617;
  unsigned int v618;
  uint64_t v619;
  uint64_t v620;
  unint64_t v621;
  int v622;
  char v623;
  unsigned int v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  unint64_t v628;
  char v629;
  uint64_t v630;
  char v632;
  unsigned int v633;
  unint64_t v634;
  uint64_t v635;
  uint64_t v636;
  unint64_t v637;
  char v638;
  int v639;
  int v640;
  BOOL v641;
  unsigned int v642;
  uint64_t v643;
  uint64_t v644;
  unint64_t v645;
  int v646;
  char v647;
  unsigned int v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  unint64_t v652;
  char v653;
  uint64_t v654;
  char v656;
  unsigned int v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  unint64_t v661;
  char v662;
  uint64_t v663;
  char v665;
  unsigned int v666;
  unint64_t v667;
  uint64_t v668;
  uint64_t v669;
  unint64_t v670;
  char v671;
  int v672;
  unsigned int v674;
  uint64_t v675;
  uint64_t v676;
  unint64_t v677;
  int v678;
  char v679;
  unsigned int v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  unint64_t v684;
  char v685;
  uint64_t v686;
  char v688;
  unsigned int v689;
  unint64_t v690;
  uint64_t v691;
  uint64_t v692;
  unint64_t v693;
  char v694;
  int v695;
  int v696;
  char v698;
  unsigned int v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  unint64_t v703;
  char v704;
  uint64_t v705;
  char v707;
  unsigned int v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  unint64_t v712;
  char v713;
  uint64_t v714;
  char v716;
  unsigned int v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  unint64_t v721;
  char v722;
  uint64_t v723;
  char v725;
  unsigned int v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  unint64_t v730;
  char v731;
  uint64_t v732;
  char v734;
  unsigned int v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  unint64_t v739;
  char v740;
  uint64_t v741;
  char v743;
  unsigned int v744;
  unint64_t v745;
  uint64_t v746;
  uint64_t v747;
  unint64_t v748;
  char v749;
  int v750;
  int v751;
  BOOL v752;
  unsigned int v753;
  uint64_t v754;
  uint64_t v755;
  unint64_t v756;
  int v757;
  unsigned int v758;
  uint64_t v759;
  uint64_t v760;
  unint64_t v761;
  int v762;
  unsigned int v763;
  uint64_t v764;
  uint64_t v765;
  unint64_t v766;
  int v767;
  unsigned int v768;
  uint64_t v769;
  uint64_t v770;
  unint64_t v771;
  int v772;
  char v773;
  unsigned int v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  unint64_t v778;
  char v779;
  uint64_t v780;
  char v782;
  unsigned int v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  unint64_t v787;
  char v788;
  uint64_t v789;
  char v791;
  unsigned int v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  unint64_t v796;
  char v797;
  uint64_t v798;
  char v800;
  unsigned int v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  unint64_t v805;
  char v806;
  uint64_t v807;
  char v809;
  unsigned int v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  unint64_t v814;
  char v815;
  uint64_t v816;
  char v818;
  unsigned int v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  unint64_t v823;
  char v824;
  uint64_t v825;
  char v827;
  unsigned int v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  unint64_t v832;
  char v833;
  uint64_t v834;
  char v836;
  unsigned int v837;
  unint64_t v838;
  uint64_t v839;
  uint64_t v840;
  unint64_t v841;
  char v842;
  int v843;
  int v844;
  uint64_t v846;
  uint64_t v847;
  unint64_t v848;
  int v849;
  unsigned int v850;
  unsigned int v851;
  uint64_t v852;
  uint64_t v853;
  unint64_t v854;
  int v855;
  char v856;
  unsigned int v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  unint64_t v861;
  char v862;
  uint64_t v863;
  char v865;
  unsigned int v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  unint64_t v870;
  char v871;
  uint64_t v872;
  char v874;
  unsigned int v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  unint64_t v879;
  char v880;
  uint64_t v881;
  char v883;
  unsigned int v884;
  unint64_t v885;
  uint64_t v886;
  uint64_t v887;
  unint64_t v888;
  char v889;
  int v890;
  unsigned int v892;
  uint64_t v893;
  uint64_t v894;
  unint64_t v895;
  int v896;
  char v897;
  unsigned int v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  unint64_t v902;
  char v903;
  uint64_t v904;
  char v906;
  unsigned int v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  unint64_t v911;
  char v912;
  uint64_t v913;
  char v915;
  unsigned int v916;
  unint64_t v917;
  uint64_t v918;
  uint64_t v919;
  unint64_t v920;
  char v921;
  int v922;
  int v923;
  int v925;
  char v926;
  unsigned int v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  unint64_t v931;
  char v932;
  uint64_t v933;
  char v935;
  unsigned int v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  unint64_t v940;
  char v941;
  uint64_t v942;
  char v944;
  unsigned int v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  unint64_t v949;
  char v950;
  uint64_t v951;
  char v953;
  unsigned int v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  unint64_t v958;
  char v959;
  uint64_t v960;
  char v962;
  unsigned int v963;
  unint64_t v964;
  uint64_t v965;
  uint64_t v966;
  unint64_t v967;
  char v968;
  int v969;
  unsigned int v971;
  uint64_t v972;
  uint64_t v973;
  unint64_t v974;
  int v975;
  _BOOL8 v976;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_2224:
    v976 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v976;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_2224;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_2224;
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_22:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2220;
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (2)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
              *(_QWORD *)&a1[v20] = v22;
              v19 |= (unint64_t)(v23 & 0x7F) << v17;
              if (v23 < 0)
              {
                v17 += 7;
                v13 = v18++ >= 9;
                if (v13)
                {
                  v19 = 0;
                  v24 = a1[*v4];
                  goto LABEL_34;
                }
                continue;
              }
            }
            break;
          }
          v24 = a1[*v4];
          if (a1[*v4])
            v19 = 0;
LABEL_34:
          if (v24)
            v25 = 1;
          else
            v25 = (v19 & 7) == 4;
          if (!v25)
          {
            switch((v19 >> 3))
            {
              case 1u:
                if ((v19 & 7) != 0)
                  goto LABEL_2225;
                v26 = 0;
                while (1)
                {
                  v27 = *v2;
                  v28 = *(_QWORD *)&a1[v27];
                  v29 = v28 + 1;
                  if (v28 == -1 || v29 > *(_QWORD *)&a1[*v3])
                    goto LABEL_73;
                  v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
                  *(_QWORD *)&a1[v27] = v29;
                  if (v30 < 0)
                  {
                    v31 = v26++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 2u:
                if ((v19 & 7) != 0)
                  goto LABEL_2225;
                v32 = 0;
                while (1)
                {
                  v33 = *v2;
                  v34 = *(_QWORD *)&a1[v33];
                  v35 = v34 + 1;
                  if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
                    goto LABEL_73;
                  v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
                  *(_QWORD *)&a1[v33] = v35;
                  if (v36 < 0)
                  {
                    v31 = v32++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 3u:
                if ((v19 & 7) != 0)
                  goto LABEL_2225;
                v37 = 0;
                while (1)
                {
                  v38 = *v2;
                  v39 = *(_QWORD *)&a1[v38];
                  v40 = v39 + 1;
                  if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
                    goto LABEL_73;
                  v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
                  *(_QWORD *)&a1[v38] = v40;
                  if (v41 < 0)
                  {
                    v31 = v37++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_22;
                }
              case 4u:
                if ((v19 & 7) != 0)
                  goto LABEL_2225;
                v42 = 0;
                do
                {
                  v43 = *v2;
                  v44 = *(_QWORD *)&a1[v43];
                  v45 = v44 + 1;
                  if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
                  {
LABEL_73:
                    a1[*v4] = 1;
                    goto LABEL_22;
                  }
                  v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
                  *(_QWORD *)&a1[v43] = v45;
                  if ((v46 & 0x80000000) == 0)
                    break;
                  v31 = v42++ > 8;
                }
                while (!v31);
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2225;
                continue;
            }
            continue;
          }
          goto LABEL_2220;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (1)
          {
            v51 = *v2;
            v52 = *(_QWORD *)&a1[v51];
            v53 = v52 + 1;
            if (v52 == -1 || v53 > *(_QWORD *)&a1[*v3])
              break;
            v54 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v52);
            *(_QWORD *)&a1[v51] = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if ((v54 & 0x80) == 0)
              goto LABEL_87;
            v48 += 7;
            v13 = v49++ >= 9;
            if (v13)
            {
              LOBYTE(v50) = 0;
              v47 = a1[*v4];
              goto LABEL_89;
            }
          }
          a1[*v4] = 1;
LABEL_87:
          v55 = *v4;
          v47 = a1[v55];
          if (a1[v55])
            LOBYTE(v50) = 0;
LABEL_89:
          if (v47 || (v50 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v57 = 0;
          v58 = 0;
          v59 = 0;
          while (1)
          {
            v60 = *v2;
            v61 = *(_QWORD *)&a1[v60];
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)&a1[*v3])
              break;
            v63 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v61);
            *(_QWORD *)&a1[v60] = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if ((v63 & 0x80) == 0)
              goto LABEL_108;
            v57 += 7;
            v13 = v58++ >= 9;
            if (v13)
            {
              LOBYTE(v59) = 0;
              v47 = a1[*v4];
              goto LABEL_110;
            }
          }
          a1[*v4] = 1;
LABEL_108:
          v64 = *v4;
          v47 = a1[v64];
          if (a1[v64])
            LOBYTE(v59) = 0;
LABEL_110:
          if (v47 || (v59 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v66 = 0;
          v67 = 0;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              break;
            v72 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if ((v72 & 0x80) == 0)
              goto LABEL_129;
            v66 += 7;
            v13 = v67++ >= 9;
            if (v13)
            {
              LOBYTE(v68) = 0;
              v47 = a1[*v4];
              goto LABEL_131;
            }
          }
          a1[*v4] = 1;
LABEL_129:
          v73 = *v4;
          v47 = a1[v73];
          if (a1[v73])
            LOBYTE(v68) = 0;
LABEL_131:
          if (v47 || (v68 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v75 = 0;
          v76 = 0;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              break;
            v81 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if ((v81 & 0x80) == 0)
              goto LABEL_150;
            v75 += 7;
            v13 = v76++ >= 9;
            if (v13)
            {
              LOBYTE(v77) = 0;
              v47 = a1[*v4];
              goto LABEL_152;
            }
          }
          a1[*v4] = 1;
LABEL_150:
          v82 = *v4;
          v47 = a1[v82];
          if (a1[v82])
            LOBYTE(v77) = 0;
LABEL_152:
          if (v47 || (v77 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v84 = 0;
          v85 = 0;
          v86 = 0;
          while (1)
          {
            v87 = *v2;
            v88 = *(_QWORD *)&a1[v87];
            v89 = v88 + 1;
            if (v88 == -1 || v89 > *(_QWORD *)&a1[*v3])
              break;
            v90 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v88);
            *(_QWORD *)&a1[v87] = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if ((v90 & 0x80) == 0)
              goto LABEL_171;
            v84 += 7;
            v13 = v85++ >= 9;
            if (v13)
            {
              LOBYTE(v86) = 0;
              v47 = a1[*v4];
              goto LABEL_173;
            }
          }
          a1[*v4] = 1;
LABEL_171:
          v91 = *v4;
          v47 = a1[v91];
          if (a1[v91])
            LOBYTE(v86) = 0;
LABEL_173:
          if (v47 || (v86 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_182:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2103;
          v93 = 0;
          v94 = 0;
          v95 = 0;
          while (1)
          {
            v96 = *v2;
            v97 = *(_QWORD *)&a1[v96];
            v98 = v97 + 1;
            if (v97 == -1 || v98 > *(_QWORD *)&a1[*v3])
              break;
            v99 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v97);
            *(_QWORD *)&a1[v96] = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if ((v99 & 0x80) == 0)
              goto LABEL_192;
            v93 += 7;
            v13 = v94++ >= 9;
            if (v13)
            {
              v95 = 0;
              v100 = a1[*v4];
              goto LABEL_194;
            }
          }
          a1[*v4] = 1;
LABEL_192:
          v100 = a1[*v4];
          if (a1[*v4])
            v95 = 0;
LABEL_194:
          v101 = v95 & 7;
          if (v100 || v101 == 4)
            goto LABEL_2103;
          if ((v95 >> 3) == 2)
          {
            if ((v95 & 7) == 0)
            {
              v103 = 0;
              do
              {
                v104 = *v2;
                v105 = *(_QWORD *)&a1[v104];
                v106 = v105 + 1;
                if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_182;
                }
                v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
                *(_QWORD *)&a1[v104] = v106;
                if ((v107 & 0x80000000) == 0)
                  break;
                v31 = v103++ > 8;
              }
              while (!v31);
              continue;
            }
          }
          else
          {
            if ((v95 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            if (v101 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2225;
        }
      case 8u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2103;
            v108 = 0;
            v109 = 0;
            v110 = 0;
            while (1)
            {
              v111 = *v2;
              v112 = *(_QWORD *)&a1[v111];
              v113 = v112 + 1;
              if (v112 == -1 || v113 > *(_QWORD *)&a1[*v3])
                break;
              v114 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v112);
              *(_QWORD *)&a1[v111] = v113;
              v110 |= (unint64_t)(v114 & 0x7F) << v108;
              if ((v114 & 0x80) == 0)
                goto LABEL_228;
              v108 += 7;
              v13 = v109++ >= 9;
              if (v13)
              {
                v110 = 0;
                v115 = a1[*v4];
                goto LABEL_230;
              }
            }
            a1[*v4] = 1;
LABEL_228:
            v115 = a1[*v4];
            if (a1[*v4])
              v110 = 0;
LABEL_230:
            v116 = v110 & 7;
            if (v115 || v116 == 4)
              goto LABEL_2103;
            if ((v110 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if (v116 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v118 = 0;
          v119 = 0;
          v120 = 0;
          while (1)
          {
            v121 = *v2;
            v122 = *(_QWORD *)&a1[v121];
            v123 = v122 + 1;
            if (v122 == -1 || v123 > *(_QWORD *)&a1[*v3])
              break;
            v124 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v122);
            *(_QWORD *)&a1[v121] = v123;
            v120 |= (unint64_t)(v124 & 0x7F) << v118;
            if ((v124 & 0x80) == 0)
              goto LABEL_254;
            v118 += 7;
            v13 = v119++ >= 9;
            if (v13)
            {
              LOBYTE(v120) = 0;
              v47 = a1[*v4];
              goto LABEL_256;
            }
          }
          a1[*v4] = 1;
LABEL_254:
          v125 = *v4;
          v47 = a1[v125];
          if (a1[v125])
            LOBYTE(v120) = 0;
LABEL_256:
          if (v47 || (v120 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v127 = 0;
          v128 = 0;
          v129 = 0;
          while (1)
          {
            v130 = *v2;
            v131 = *(_QWORD *)&a1[v130];
            v132 = v131 + 1;
            if (v131 == -1 || v132 > *(_QWORD *)&a1[*v3])
              break;
            v133 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v131);
            *(_QWORD *)&a1[v130] = v132;
            v129 |= (unint64_t)(v133 & 0x7F) << v127;
            if ((v133 & 0x80) == 0)
              goto LABEL_275;
            v127 += 7;
            v13 = v128++ >= 9;
            if (v13)
            {
              LOBYTE(v129) = 0;
              v47 = a1[*v4];
              goto LABEL_277;
            }
          }
          a1[*v4] = 1;
LABEL_275:
          v134 = *v4;
          v47 = a1[v134];
          if (a1[v134])
            LOBYTE(v129) = 0;
LABEL_277:
          if (v47 || (v129 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0xBu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_286:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2103;
          v136 = 0;
          v137 = 0;
          v138 = 0;
          while (2)
          {
            v139 = *v2;
            v140 = *(_QWORD *)&a1[v139];
            v141 = v140 + 1;
            if (v140 == -1 || v141 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v142 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v140);
              *(_QWORD *)&a1[v139] = v141;
              v138 |= (unint64_t)(v142 & 0x7F) << v136;
              if (v142 < 0)
              {
                v136 += 7;
                v13 = v137++ >= 9;
                if (v13)
                {
                  v138 = 0;
                  v143 = a1[*v4];
                  goto LABEL_298;
                }
                continue;
              }
            }
            break;
          }
          v143 = a1[*v4];
          if (a1[*v4])
            v138 = 0;
LABEL_298:
          v144 = v138 & 7;
          if (v143)
            v145 = 1;
          else
            v145 = v144 == 4;
          if (!v145)
          {
            switch((v138 >> 3))
            {
              case 5u:
              case 6u:
                if (v144 != 2 || !PBReaderPlaceMark() || !GEOPDDeparturePredicateIsValid(a1))
                  goto LABEL_2225;
                goto LABEL_312;
              case 7u:
                if (v144 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1))
                  goto LABEL_2225;
LABEL_312:
                PBReaderRecallMark();
                continue;
              case 8u:
                if ((v138 & 7) != 0)
                  goto LABEL_2225;
                v146 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2225;
                continue;
            }
            do
            {
              v147 = *v2;
              v148 = *(_QWORD *)&a1[v147];
              v149 = v148 + 1;
              if (v148 == -1 || v149 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_286;
              }
              v150 = *(char *)(*(_QWORD *)&a1[*v5] + v148);
              *(_QWORD *)&a1[v147] = v149;
              if ((v150 & 0x80000000) == 0)
                break;
              v31 = v146++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2103;
        }
      case 0xCu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDETAFilterIsValid(a1))
          goto LABEL_2226;
        goto LABEL_2222;
      case 0xDu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v151 = 0;
          v152 = 0;
          v153 = 0;
          while (1)
          {
            v154 = *v2;
            v155 = *(_QWORD *)&a1[v154];
            v156 = v155 + 1;
            if (v155 == -1 || v156 > *(_QWORD *)&a1[*v3])
              break;
            v157 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v155);
            *(_QWORD *)&a1[v154] = v156;
            v153 |= (unint64_t)(v157 & 0x7F) << v151;
            if ((v157 & 0x80) == 0)
              goto LABEL_339;
            v151 += 7;
            v13 = v152++ >= 9;
            if (v13)
            {
              LOBYTE(v153) = 0;
              v47 = a1[*v4];
              goto LABEL_341;
            }
          }
          a1[*v4] = 1;
LABEL_339:
          v158 = *v4;
          v47 = a1[v158];
          if (a1[v158])
            LOBYTE(v153) = 0;
LABEL_341:
          if (v47 || (v153 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0xEu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v160 = 0;
          v161 = 0;
          v162 = 0;
          while (1)
          {
            v163 = *v2;
            v164 = *(_QWORD *)&a1[v163];
            v165 = v164 + 1;
            if (v164 == -1 || v165 > *(_QWORD *)&a1[*v3])
              break;
            v166 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v164);
            *(_QWORD *)&a1[v163] = v165;
            v162 |= (unint64_t)(v166 & 0x7F) << v160;
            if ((v166 & 0x80) == 0)
              goto LABEL_360;
            v160 += 7;
            v13 = v161++ >= 9;
            if (v13)
            {
              v162 = 0;
              v167 = a1[*v4];
              goto LABEL_362;
            }
          }
          a1[*v4] = 1;
LABEL_360:
          v167 = a1[*v4];
          if (a1[*v4])
            v162 = 0;
LABEL_362:
          v168 = v162 & 7;
          if (v167 || v168 == 4)
            break;
          if ((v162 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag())
              goto LABEL_2225;
            continue;
          }
          if (v168 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
        goto LABEL_2220;
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_375:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v170 = 0;
            v171 = 0;
            v172 = 0;
            while (1)
            {
              v173 = *v2;
              v174 = *(_QWORD *)&a1[v173];
              v175 = v174 + 1;
              if (v174 == -1 || v175 > *(_QWORD *)&a1[*v3])
                break;
              v176 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v174);
              *(_QWORD *)&a1[v173] = v175;
              v172 |= (unint64_t)(v176 & 0x7F) << v170;
              if ((v176 & 0x80) == 0)
                goto LABEL_385;
              v170 += 7;
              v13 = v171++ >= 9;
              if (v13)
              {
                v172 = 0;
                v177 = a1[*v4];
                goto LABEL_387;
              }
            }
            a1[*v4] = 1;
LABEL_385:
            v177 = a1[*v4];
            if (a1[*v4])
              v172 = 0;
LABEL_387:
            if (v177 || (v172 & 7) == 4)
              goto LABEL_2220;
            if ((v172 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if ((v172 & 7) == 0)
          {
            v179 = 0;
            do
            {
              v180 = *v2;
              v181 = *(_QWORD *)&a1[v180];
              v182 = v181 + 1;
              if (v181 == -1 || v182 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_375;
              }
              v183 = *(char *)(*(_QWORD *)&a1[*v5] + v181);
              *(_QWORD *)&a1[v180] = v182;
              if ((v183 & 0x80000000) == 0)
                break;
              v31 = v179++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x10u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v184 = 0;
          v185 = 0;
          v186 = 0;
          while (1)
          {
            v187 = *v2;
            v188 = *(_QWORD *)&a1[v187];
            v189 = v188 + 1;
            if (v188 == -1 || v189 > *(_QWORD *)&a1[*v3])
              break;
            v190 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v188);
            *(_QWORD *)&a1[v187] = v189;
            v186 |= (unint64_t)(v190 & 0x7F) << v184;
            if ((v190 & 0x80) == 0)
              goto LABEL_416;
            v184 += 7;
            v13 = v185++ >= 9;
            if (v13)
            {
              LOBYTE(v186) = 0;
              v47 = a1[*v4];
              goto LABEL_418;
            }
          }
          a1[*v4] = 1;
LABEL_416:
          v191 = *v4;
          v47 = a1[v191];
          if (a1[v191])
            LOBYTE(v186) = 0;
LABEL_418:
          if (v47 || (v186 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x14u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v193 = 0;
          v194 = 0;
          v195 = 0;
          while (1)
          {
            v196 = *v2;
            v197 = *(_QWORD *)&a1[v196];
            v198 = v197 + 1;
            if (v197 == -1 || v198 > *(_QWORD *)&a1[*v3])
              break;
            v199 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v197);
            *(_QWORD *)&a1[v196] = v198;
            v195 |= (unint64_t)(v199 & 0x7F) << v193;
            if ((v199 & 0x80) == 0)
              goto LABEL_439;
            v193 += 7;
            v13 = v194++ >= 9;
            if (v13)
            {
              LOBYTE(v195) = 0;
              v47 = a1[*v4];
              goto LABEL_441;
            }
          }
          a1[*v4] = 1;
LABEL_439:
          v200 = *v4;
          v47 = a1[v200];
          if (a1[v200])
            LOBYTE(v195) = 0;
LABEL_441:
          if (v47 || (v195 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x15u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v202 = 0;
          v203 = 0;
          v204 = 0;
          while (1)
          {
            v205 = *v2;
            v206 = *(_QWORD *)&a1[v205];
            v207 = v206 + 1;
            if (v206 == -1 || v207 > *(_QWORD *)&a1[*v3])
              break;
            v208 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v206);
            *(_QWORD *)&a1[v205] = v207;
            v204 |= (unint64_t)(v208 & 0x7F) << v202;
            if ((v208 & 0x80) == 0)
              goto LABEL_460;
            v202 += 7;
            v13 = v203++ >= 9;
            if (v13)
            {
              LOBYTE(v204) = 0;
              v47 = a1[*v4];
              goto LABEL_462;
            }
          }
          a1[*v4] = 1;
LABEL_460:
          v209 = *v4;
          v47 = a1[v209];
          if (a1[v209])
            LOBYTE(v204) = 0;
LABEL_462:
          if (v47 || (v204 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x16u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v211 = 0;
          v212 = 0;
          v213 = 0;
          while (1)
          {
            v214 = *v2;
            v215 = *(_QWORD *)&a1[v214];
            v216 = v215 + 1;
            if (v215 == -1 || v216 > *(_QWORD *)&a1[*v3])
              break;
            v217 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v215);
            *(_QWORD *)&a1[v214] = v216;
            v213 |= (unint64_t)(v217 & 0x7F) << v211;
            if ((v217 & 0x80) == 0)
              goto LABEL_481;
            v211 += 7;
            v13 = v212++ >= 9;
            if (v13)
            {
              LOBYTE(v213) = 0;
              v47 = a1[*v4];
              goto LABEL_483;
            }
          }
          a1[*v4] = 1;
LABEL_481:
          v218 = *v4;
          v47 = a1[v218];
          if (a1[v218])
            LOBYTE(v213) = 0;
LABEL_483:
          if (v47 || (v213 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x17u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_492:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v220 = 0;
            v221 = 0;
            v222 = 0;
            while (1)
            {
              v223 = *v2;
              v224 = *(_QWORD *)&a1[v223];
              v225 = v224 + 1;
              if (v224 == -1 || v225 > *(_QWORD *)&a1[*v3])
                break;
              v226 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v224);
              *(_QWORD *)&a1[v223] = v225;
              v222 |= (unint64_t)(v226 & 0x7F) << v220;
              if ((v226 & 0x80) == 0)
                goto LABEL_502;
              v220 += 7;
              v13 = v221++ >= 9;
              if (v13)
              {
                v222 = 0;
                v227 = a1[*v4];
                goto LABEL_504;
              }
            }
            a1[*v4] = 1;
LABEL_502:
            v227 = a1[*v4];
            if (a1[*v4])
              v222 = 0;
LABEL_504:
            if (v227 || (v222 & 7) == 4)
              goto LABEL_2220;
            if ((v222 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if ((v222 & 7) == 0)
          {
            v229 = 0;
            do
            {
              v230 = *v2;
              v231 = *(_QWORD *)&a1[v230];
              v232 = v231 + 1;
              if (v231 == -1 || v232 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_492;
              }
              v233 = *(char *)(*(_QWORD *)&a1[*v5] + v231);
              *(_QWORD *)&a1[v230] = v232;
              if ((v233 & 0x80000000) == 0)
                break;
              v31 = v229++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x18u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v234 = 0;
          v235 = 0;
          v236 = 0;
          while (1)
          {
            v237 = *v2;
            v238 = *(_QWORD *)&a1[v237];
            v239 = v238 + 1;
            if (v238 == -1 || v239 > *(_QWORD *)&a1[*v3])
              break;
            v240 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v238);
            *(_QWORD *)&a1[v237] = v239;
            v236 |= (unint64_t)(v240 & 0x7F) << v234;
            if ((v240 & 0x80) == 0)
              goto LABEL_533;
            v234 += 7;
            v13 = v235++ >= 9;
            if (v13)
            {
              LOBYTE(v236) = 0;
              v47 = a1[*v4];
              goto LABEL_535;
            }
          }
          a1[*v4] = 1;
LABEL_533:
          v241 = *v4;
          v47 = a1[v241];
          if (a1[v241])
            LOBYTE(v236) = 0;
LABEL_535:
          if (v47 || (v236 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x19u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v243 = 0;
          v244 = 0;
          v245 = 0;
          while (1)
          {
            v246 = *v2;
            v247 = *(_QWORD *)&a1[v246];
            v248 = v247 + 1;
            if (v247 == -1 || v248 > *(_QWORD *)&a1[*v3])
              break;
            v249 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v247);
            *(_QWORD *)&a1[v246] = v248;
            v245 |= (unint64_t)(v249 & 0x7F) << v243;
            if ((v249 & 0x80) == 0)
              goto LABEL_554;
            v243 += 7;
            v13 = v244++ >= 9;
            if (v13)
            {
              LOBYTE(v245) = 0;
              v47 = a1[*v4];
              goto LABEL_556;
            }
          }
          a1[*v4] = 1;
LABEL_554:
          v250 = *v4;
          v47 = a1[v250];
          if (a1[v250])
            LOBYTE(v245) = 0;
LABEL_556:
          if (v47 || (v245 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x1Au:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2103;
            v252 = 0;
            v253 = 0;
            v254 = 0;
            while (1)
            {
              v255 = *v2;
              v256 = *(_QWORD *)&a1[v255];
              v257 = v256 + 1;
              if (v256 == -1 || v257 > *(_QWORD *)&a1[*v3])
                break;
              v258 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v256);
              *(_QWORD *)&a1[v255] = v257;
              v254 |= (unint64_t)(v258 & 0x7F) << v252;
              if ((v258 & 0x80) == 0)
                goto LABEL_575;
              v252 += 7;
              v13 = v253++ >= 9;
              if (v13)
              {
                v254 = 0;
                v259 = a1[*v4];
                goto LABEL_577;
              }
            }
            a1[*v4] = 1;
LABEL_575:
            v259 = a1[*v4];
            if (a1[*v4])
              v254 = 0;
LABEL_577:
            v260 = v254 & 7;
            if (v259 || v260 == 4)
              goto LABEL_2103;
            if ((v254 >> 3) == 2)
            {
              if (v260 != 2)
                goto LABEL_2225;
            }
            else if ((v254 >> 3) == 1)
            {
              if (v260 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_2225;
            }
            break;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
          continue;
        }
      case 0x1Bu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v262 = 0;
          v263 = 0;
          v264 = 0;
          while (1)
          {
            v265 = *v2;
            v266 = *(_QWORD *)&a1[v265];
            v267 = v266 + 1;
            if (v266 == -1 || v267 > *(_QWORD *)&a1[*v3])
              break;
            v268 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v266);
            *(_QWORD *)&a1[v265] = v267;
            v264 |= (unint64_t)(v268 & 0x7F) << v262;
            if ((v268 & 0x80) == 0)
              goto LABEL_603;
            v262 += 7;
            v13 = v263++ >= 9;
            if (v13)
            {
              LOBYTE(v264) = 0;
              v47 = a1[*v4];
              goto LABEL_605;
            }
          }
          a1[*v4] = 1;
LABEL_603:
          v269 = *v4;
          v47 = a1[v269];
          if (a1[v269])
            LOBYTE(v264) = 0;
LABEL_605:
          if (v47 || (v264 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x1Du:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_614:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2103;
            v271 = 0;
            v272 = 0;
            v273 = 0;
            while (1)
            {
              v274 = *v2;
              v275 = *(_QWORD *)&a1[v274];
              v276 = v275 + 1;
              if (v275 == -1 || v276 > *(_QWORD *)&a1[*v3])
                break;
              v277 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v275);
              *(_QWORD *)&a1[v274] = v276;
              v273 |= (unint64_t)(v277 & 0x7F) << v271;
              if ((v277 & 0x80) == 0)
                goto LABEL_624;
              v271 += 7;
              v13 = v272++ >= 9;
              if (v13)
              {
                v273 = 0;
                v278 = a1[*v4];
                goto LABEL_626;
              }
            }
            a1[*v4] = 1;
LABEL_624:
            v278 = a1[*v4];
            if (a1[*v4])
              v273 = 0;
LABEL_626:
            v279 = v273 & 7;
            if (v278 || v279 == 4)
              goto LABEL_2103;
            if ((v273 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if (v279 == 2)
          {
            if (PBReaderPlaceMark())
            {
              while (1)
              {
LABEL_641:
                if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v286 = a1[*v4], a1[*v4]))
                {
                  PBReaderRecallMark();
                  goto LABEL_614;
                }
                while (1)
                {
                  v287 = *v2;
                  v288 = *(_QWORD *)&a1[v287];
                  v289 = v288 + 1;
                  if (v288 == -1 || v289 > *(_QWORD *)&a1[*v3])
                    break;
                  v290 = *(char *)(*(_QWORD *)&a1[*v5] + v288);
                  *(_QWORD *)&a1[v287] = v289;
                  if (v290 < 0)
                  {
                    v13 = v286++ >= 9;
                    if (!v13)
                      continue;
                  }
                  goto LABEL_641;
                }
                a1[*v4] = 1;
              }
            }
          }
          else if ((v273 & 7) == 0)
          {
            do
            {
              v281 = *v2;
              v282 = *(_QWORD *)&a1[v281];
              v283 = v282 + 1;
              if (v282 == -1 || v283 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_614;
              }
              v284 = *(char *)(*(_QWORD *)&a1[*v5] + v282);
              *(_QWORD *)&a1[v281] = v283;
              if ((v284 & 0x80000000) == 0)
                break;
              v285 = v279++;
            }
            while (v285 <= 8);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x1Eu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_655:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2103;
          v291 = 0;
          v292 = 0;
          v293 = 0;
          while (2)
          {
            v294 = *v2;
            v295 = *(_QWORD *)&a1[v294];
            v296 = v295 + 1;
            if (v295 == -1 || v296 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v297 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v295);
              *(_QWORD *)&a1[v294] = v296;
              v293 |= (unint64_t)(v297 & 0x7F) << v291;
              if (v297 < 0)
              {
                v291 += 7;
                v13 = v292++ >= 9;
                if (v13)
                {
                  v293 = 0;
                  v298 = a1[*v4];
                  goto LABEL_667;
                }
                continue;
              }
            }
            break;
          }
          v298 = a1[*v4];
          if (a1[*v4])
            v293 = 0;
LABEL_667:
          v299 = v293 & 7;
          if (v298)
            v300 = 1;
          else
            v300 = v299 == 4;
          if (v300)
            goto LABEL_2103;
          switch((v293 >> 3))
          {
            case 1u:
              if ((v293 & 7) != 0)
                goto LABEL_2225;
              v301 = 0;
              while (1)
              {
                v302 = *v2;
                v303 = *(_QWORD *)&a1[v302];
                v304 = v303 + 1;
                if (v303 == -1 || v304 > *(_QWORD *)&a1[*v3])
                  goto LABEL_705;
                v305 = *(char *)(*(_QWORD *)&a1[*v5] + v303);
                *(_QWORD *)&a1[v302] = v304;
                if (v305 < 0)
                {
                  v31 = v301++ > 8;
                  if (!v31)
                    continue;
                }
                goto LABEL_655;
              }
            case 2u:
              if ((v293 & 7) != 0)
                goto LABEL_2225;
              v306 = 0;
              while (1)
              {
                v307 = *v2;
                v308 = *(_QWORD *)&a1[v307];
                v309 = v308 + 1;
                if (v308 == -1 || v309 > *(_QWORD *)&a1[*v3])
                  goto LABEL_705;
                v310 = *(char *)(*(_QWORD *)&a1[*v5] + v308);
                *(_QWORD *)&a1[v307] = v309;
                if (v310 < 0)
                {
                  v31 = v306++ > 8;
                  if (!v31)
                    continue;
                }
                goto LABEL_655;
              }
            case 3u:
              if ((v293 & 7) != 0)
                goto LABEL_2225;
              v311 = 0;
              while (1)
              {
                v312 = *v2;
                v313 = *(_QWORD *)&a1[v312];
                v314 = v313 + 1;
                if (v313 == -1 || v314 > *(_QWORD *)&a1[*v3])
                  goto LABEL_705;
                v315 = *(char *)(*(_QWORD *)&a1[*v5] + v313);
                *(_QWORD *)&a1[v312] = v314;
                if (v315 < 0)
                {
                  v31 = v311++ > 8;
                  if (!v31)
                    continue;
                }
                goto LABEL_655;
              }
            case 4u:
              if (v299 == 2)
              {
                if (PBReaderPlaceMark())
                {
                  while (1)
                  {
LABEL_707:
                    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v321 = a1[*v4], a1[*v4]))
                    {
                      PBReaderRecallMark();
                      goto LABEL_655;
                    }
                    while (1)
                    {
                      v322 = *v2;
                      v323 = *(_QWORD *)&a1[v322];
                      v324 = v323 + 1;
                      if (v323 == -1 || v324 > *(_QWORD *)&a1[*v3])
                        break;
                      v325 = *(char *)(*(_QWORD *)&a1[*v5] + v323);
                      *(_QWORD *)&a1[v322] = v324;
                      if (v325 < 0)
                      {
                        v13 = v321++ >= 9;
                        if (!v13)
                          continue;
                      }
                      goto LABEL_707;
                    }
                    a1[*v4] = 1;
                  }
                }
              }
              else if ((v293 & 7) == 0)
              {
                do
                {
                  v316 = *v2;
                  v317 = *(_QWORD *)&a1[v316];
                  v318 = v317 + 1;
                  if (v317 == -1 || v318 > *(_QWORD *)&a1[*v3])
                  {
LABEL_705:
                    a1[*v4] = 1;
                    goto LABEL_655;
                  }
                  v319 = *(char *)(*(_QWORD *)&a1[*v5] + v317);
                  *(_QWORD *)&a1[v316] = v318;
                  if ((v319 & 0x80000000) == 0)
                    break;
                  v320 = v299++;
                }
                while (v320 <= 8);
                continue;
              }
              break;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
          }
          goto LABEL_2225;
        }
      case 0x1Fu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_720:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v326 = 0;
            v327 = 0;
            v328 = 0;
            while (1)
            {
              v329 = *v2;
              v330 = *(_QWORD *)&a1[v329];
              v331 = v330 + 1;
              if (v330 == -1 || v331 > *(_QWORD *)&a1[*v3])
                break;
              v332 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v330);
              *(_QWORD *)&a1[v329] = v331;
              v328 |= (unint64_t)(v332 & 0x7F) << v326;
              if ((v332 & 0x80) == 0)
                goto LABEL_730;
              v326 += 7;
              v13 = v327++ >= 9;
              if (v13)
              {
                v328 = 0;
                v333 = a1[*v4];
                goto LABEL_732;
              }
            }
            a1[*v4] = 1;
LABEL_730:
            v333 = a1[*v4];
            if (a1[*v4])
              v328 = 0;
LABEL_732:
            v334 = v328 & 7;
            if (v333 || v334 == 4)
              goto LABEL_2220;
            if ((v328 >> 3) != 2)
            {
              if ((v328 >> 3) != 1)
              {
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_2225;
                continue;
              }
              if (v334 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if ((v328 & 7) == 0)
          {
            v336 = 0;
            do
            {
              v337 = *v2;
              v338 = *(_QWORD *)&a1[v337];
              v339 = v338 + 1;
              if (v338 == -1 || v339 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_720;
              }
              v340 = *(char *)(*(_QWORD *)&a1[*v5] + v338);
              *(_QWORD *)&a1[v337] = v339;
              if ((v340 & 0x80000000) == 0)
                break;
              v31 = v336++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x20u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v341 = 0;
          v342 = 0;
          v343 = 0;
          while (1)
          {
            v344 = *v2;
            v345 = *(_QWORD *)&a1[v344];
            v346 = v345 + 1;
            if (v345 == -1 || v346 > *(_QWORD *)&a1[*v3])
              break;
            v347 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v345);
            *(_QWORD *)&a1[v344] = v346;
            v343 |= (unint64_t)(v347 & 0x7F) << v341;
            if ((v347 & 0x80) == 0)
              goto LABEL_765;
            v341 += 7;
            v13 = v342++ >= 9;
            if (v13)
            {
              LOBYTE(v343) = 0;
              v47 = a1[*v4];
              goto LABEL_767;
            }
          }
          a1[*v4] = 1;
LABEL_765:
          v348 = *v4;
          v47 = a1[v348];
          if (a1[v348])
            LOBYTE(v343) = 0;
LABEL_767:
          if (v47 || (v343 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x21u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v350 = 0;
          v351 = 0;
          v352 = 0;
          while (1)
          {
            v353 = *v2;
            v354 = *(_QWORD *)&a1[v353];
            v355 = v354 + 1;
            if (v354 == -1 || v355 > *(_QWORD *)&a1[*v3])
              break;
            v356 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v354);
            *(_QWORD *)&a1[v353] = v355;
            v352 |= (unint64_t)(v356 & 0x7F) << v350;
            if ((v356 & 0x80) == 0)
              goto LABEL_786;
            v350 += 7;
            v13 = v351++ >= 9;
            if (v13)
            {
              LOBYTE(v352) = 0;
              v47 = a1[*v4];
              goto LABEL_788;
            }
          }
          a1[*v4] = 1;
LABEL_786:
          v357 = *v4;
          v47 = a1[v357];
          if (a1[v357])
            LOBYTE(v352) = 0;
LABEL_788:
          if (v47 || (v352 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x22u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v359 = 0;
          v360 = 0;
          v361 = 0;
          while (1)
          {
            v362 = *v2;
            v363 = *(_QWORD *)&a1[v362];
            v364 = v363 + 1;
            if (v363 == -1 || v364 > *(_QWORD *)&a1[*v3])
              break;
            v365 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v363);
            *(_QWORD *)&a1[v362] = v364;
            v361 |= (unint64_t)(v365 & 0x7F) << v359;
            if ((v365 & 0x80) == 0)
              goto LABEL_807;
            v359 += 7;
            v13 = v360++ >= 9;
            if (v13)
            {
              LOBYTE(v361) = 0;
              v47 = a1[*v4];
              goto LABEL_809;
            }
          }
          a1[*v4] = 1;
LABEL_807:
          v366 = *v4;
          v47 = a1[v366];
          if (a1[v366])
            LOBYTE(v361) = 0;
LABEL_809:
          if (v47 || (v361 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x24u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2103;
            v368 = 0;
            v369 = 0;
            v370 = 0;
            while (1)
            {
              v371 = *v2;
              v372 = *(_QWORD *)&a1[v371];
              v373 = v372 + 1;
              if (v372 == -1 || v373 > *(_QWORD *)&a1[*v3])
                break;
              v374 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v372);
              *(_QWORD *)&a1[v371] = v373;
              v370 |= (unint64_t)(v374 & 0x7F) << v368;
              if ((v374 & 0x80) == 0)
                goto LABEL_828;
              v368 += 7;
              v13 = v369++ >= 9;
              if (v13)
              {
                v370 = 0;
                v375 = a1[*v4];
                goto LABEL_830;
              }
            }
            a1[*v4] = 1;
LABEL_828:
            v375 = a1[*v4];
            if (a1[*v4])
              v370 = 0;
LABEL_830:
            v376 = v370 & 7;
            if (v375 || v376 == 4)
              goto LABEL_2103;
            if ((v370 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if (v376 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 0x25u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v378 = 0;
          v379 = 0;
          v380 = 0;
          while (1)
          {
            v381 = *v2;
            v382 = *(_QWORD *)&a1[v381];
            v383 = v382 + 1;
            if (v382 == -1 || v383 > *(_QWORD *)&a1[*v3])
              break;
            v384 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v382);
            *(_QWORD *)&a1[v381] = v383;
            v380 |= (unint64_t)(v384 & 0x7F) << v378;
            if ((v384 & 0x80) == 0)
              goto LABEL_854;
            v378 += 7;
            v13 = v379++ >= 9;
            if (v13)
            {
              LOBYTE(v380) = 0;
              v47 = a1[*v4];
              goto LABEL_856;
            }
          }
          a1[*v4] = 1;
LABEL_854:
          v385 = *v4;
          v47 = a1[v385];
          if (a1[v385])
            LOBYTE(v380) = 0;
LABEL_856:
          if (v47 || (v380 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x26u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v387 = 0;
          v388 = 0;
          v389 = 0;
          while (1)
          {
            v390 = *v2;
            v391 = *(_QWORD *)&a1[v390];
            v392 = v391 + 1;
            if (v391 == -1 || v392 > *(_QWORD *)&a1[*v3])
              break;
            v393 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v391);
            *(_QWORD *)&a1[v390] = v392;
            v389 |= (unint64_t)(v393 & 0x7F) << v387;
            if ((v393 & 0x80) == 0)
              goto LABEL_875;
            v387 += 7;
            v13 = v388++ >= 9;
            if (v13)
            {
              LOBYTE(v389) = 0;
              v47 = a1[*v4];
              goto LABEL_877;
            }
          }
          a1[*v4] = 1;
LABEL_875:
          v394 = *v4;
          v47 = a1[v394];
          if (a1[v394])
            LOBYTE(v389) = 0;
LABEL_877:
          if (v47 || (v389 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x27u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v396 = 0;
          v397 = 0;
          v398 = 0;
          while (1)
          {
            v399 = *v2;
            v400 = *(_QWORD *)&a1[v399];
            v401 = v400 + 1;
            if (v400 == -1 || v401 > *(_QWORD *)&a1[*v3])
              break;
            v402 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v400);
            *(_QWORD *)&a1[v399] = v401;
            v398 |= (unint64_t)(v402 & 0x7F) << v396;
            if ((v402 & 0x80) == 0)
              goto LABEL_896;
            v396 += 7;
            v13 = v397++ >= 9;
            if (v13)
            {
              LOBYTE(v398) = 0;
              v47 = a1[*v4];
              goto LABEL_898;
            }
          }
          a1[*v4] = 1;
LABEL_896:
          v403 = *v4;
          v47 = a1[v403];
          if (a1[v403])
            LOBYTE(v398) = 0;
LABEL_898:
          if (v47 || (v398 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x28u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_907:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v405 = 0;
            v406 = 0;
            v407 = 0;
            while (1)
            {
              v408 = *v2;
              v409 = *(_QWORD *)&a1[v408];
              v410 = v409 + 1;
              if (v409 == -1 || v410 > *(_QWORD *)&a1[*v3])
                break;
              v411 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v409);
              *(_QWORD *)&a1[v408] = v410;
              v407 |= (unint64_t)(v411 & 0x7F) << v405;
              if ((v411 & 0x80) == 0)
                goto LABEL_917;
              v405 += 7;
              v13 = v406++ >= 9;
              if (v13)
              {
                v407 = 0;
                v412 = a1[*v4];
                goto LABEL_919;
              }
            }
            a1[*v4] = 1;
LABEL_917:
            v412 = a1[*v4];
            if (a1[*v4])
              v407 = 0;
LABEL_919:
            if (v412 || (v407 & 7) == 4)
              goto LABEL_2220;
            if ((v407 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if ((v407 & 7) == 0)
          {
            v414 = 0;
            do
            {
              v415 = *v2;
              v416 = *(_QWORD *)&a1[v415];
              v417 = v416 + 1;
              if (v416 == -1 || v417 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_907;
              }
              v418 = *(char *)(*(_QWORD *)&a1[*v5] + v416);
              *(_QWORD *)&a1[v415] = v417;
              if ((v418 & 0x80000000) == 0)
                break;
              v31 = v414++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x29u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1))
          goto LABEL_2226;
        goto LABEL_2222;
      case 0x2Au:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v419 = 0;
          v420 = 0;
          v421 = 0;
          while (1)
          {
            v422 = *v2;
            v423 = *(_QWORD *)&a1[v422];
            v424 = v423 + 1;
            if (v423 == -1 || v424 > *(_QWORD *)&a1[*v3])
              break;
            v425 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v423);
            *(_QWORD *)&a1[v422] = v424;
            v421 |= (unint64_t)(v425 & 0x7F) << v419;
            if ((v425 & 0x80) == 0)
              goto LABEL_952;
            v419 += 7;
            v13 = v420++ >= 9;
            if (v13)
            {
              LOBYTE(v421) = 0;
              v47 = a1[*v4];
              goto LABEL_954;
            }
          }
          a1[*v4] = 1;
LABEL_952:
          v426 = *v4;
          v47 = a1[v426];
          if (a1[v426])
            LOBYTE(v421) = 0;
LABEL_954:
          if (v47 || (v421 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x2Bu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v428 = 0;
          v429 = 0;
          v430 = 0;
          while (1)
          {
            v431 = *v2;
            v432 = *(_QWORD *)&a1[v431];
            v433 = v432 + 1;
            if (v432 == -1 || v433 > *(_QWORD *)&a1[*v3])
              break;
            v434 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v432);
            *(_QWORD *)&a1[v431] = v433;
            v430 |= (unint64_t)(v434 & 0x7F) << v428;
            if ((v434 & 0x80) == 0)
              goto LABEL_973;
            v428 += 7;
            v13 = v429++ >= 9;
            if (v13)
            {
              LOBYTE(v430) = 0;
              v47 = a1[*v4];
              goto LABEL_975;
            }
          }
          a1[*v4] = 1;
LABEL_973:
          v435 = *v4;
          v47 = a1[v435];
          if (a1[v435])
            LOBYTE(v430) = 0;
LABEL_975:
          if (v47 || (v430 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x2Cu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v437 = 0;
          v438 = 0;
          v439 = 0;
          while (1)
          {
            v440 = *v2;
            v441 = *(_QWORD *)&a1[v440];
            v442 = v441 + 1;
            if (v441 == -1 || v442 > *(_QWORD *)&a1[*v3])
              break;
            v443 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v441);
            *(_QWORD *)&a1[v440] = v442;
            v439 |= (unint64_t)(v443 & 0x7F) << v437;
            if ((v443 & 0x80) == 0)
              goto LABEL_994;
            v437 += 7;
            v13 = v438++ >= 9;
            if (v13)
            {
              LOBYTE(v439) = 0;
              v47 = a1[*v4];
              goto LABEL_996;
            }
          }
          a1[*v4] = 1;
LABEL_994:
          v444 = *v4;
          v47 = a1[v444];
          if (a1[v444])
            LOBYTE(v439) = 0;
LABEL_996:
          if (v47 || (v439 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x30u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1))
          goto LABEL_2226;
        goto LABEL_2222;
      case 0x32u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v446 = 0;
          v447 = 0;
          v448 = 0;
          while (1)
          {
            v449 = *v2;
            v450 = *(_QWORD *)&a1[v449];
            v451 = v450 + 1;
            if (v450 == -1 || v451 > *(_QWORD *)&a1[*v3])
              break;
            v452 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v450);
            *(_QWORD *)&a1[v449] = v451;
            v448 |= (unint64_t)(v452 & 0x7F) << v446;
            if ((v452 & 0x80) == 0)
              goto LABEL_1019;
            v446 += 7;
            v13 = v447++ >= 9;
            if (v13)
            {
              LOBYTE(v448) = 0;
              v47 = a1[*v4];
              goto LABEL_1021;
            }
          }
          a1[*v4] = 1;
LABEL_1019:
          v453 = *v4;
          v47 = a1[v453];
          if (a1[v453])
            LOBYTE(v448) = 0;
LABEL_1021:
          if (v47 || (v448 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x33u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v455 = 0;
          v456 = 0;
          v457 = 0;
          while (1)
          {
            v458 = *v2;
            v459 = *(_QWORD *)&a1[v458];
            v460 = v459 + 1;
            if (v459 == -1 || v460 > *(_QWORD *)&a1[*v3])
              break;
            v461 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v459);
            *(_QWORD *)&a1[v458] = v460;
            v457 |= (unint64_t)(v461 & 0x7F) << v455;
            if ((v461 & 0x80) == 0)
              goto LABEL_1040;
            v455 += 7;
            v13 = v456++ >= 9;
            if (v13)
            {
              LOBYTE(v457) = 0;
              v47 = a1[*v4];
              goto LABEL_1042;
            }
          }
          a1[*v4] = 1;
LABEL_1040:
          v462 = *v4;
          v47 = a1[v462];
          if (a1[v462])
            LOBYTE(v457) = 0;
LABEL_1042:
          if (v47 || (v457 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x34u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v464 = 0;
          v465 = 0;
          v466 = 0;
          while (1)
          {
            v467 = *v2;
            v468 = *(_QWORD *)&a1[v467];
            v469 = v468 + 1;
            if (v468 == -1 || v469 > *(_QWORD *)&a1[*v3])
              break;
            v470 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v468);
            *(_QWORD *)&a1[v467] = v469;
            v466 |= (unint64_t)(v470 & 0x7F) << v464;
            if ((v470 & 0x80) == 0)
              goto LABEL_1061;
            v464 += 7;
            v13 = v465++ >= 9;
            if (v13)
            {
              LOBYTE(v466) = 0;
              v47 = a1[*v4];
              goto LABEL_1063;
            }
          }
          a1[*v4] = 1;
LABEL_1061:
          v471 = *v4;
          v47 = a1[v471];
          if (a1[v471])
            LOBYTE(v466) = 0;
LABEL_1063:
          if (v47 || (v466 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x35u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v473 = 0;
          v474 = 0;
          v475 = 0;
          while (1)
          {
            v476 = *v2;
            v477 = *(_QWORD *)&a1[v476];
            v478 = v477 + 1;
            if (v477 == -1 || v478 > *(_QWORD *)&a1[*v3])
              break;
            v479 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v477);
            *(_QWORD *)&a1[v476] = v478;
            v475 |= (unint64_t)(v479 & 0x7F) << v473;
            if ((v479 & 0x80) == 0)
              goto LABEL_1082;
            v473 += 7;
            v13 = v474++ >= 9;
            if (v13)
            {
              LOBYTE(v475) = 0;
              v47 = a1[*v4];
              goto LABEL_1084;
            }
          }
          a1[*v4] = 1;
LABEL_1082:
          v480 = *v4;
          v47 = a1[v480];
          if (a1[v480])
            LOBYTE(v475) = 0;
LABEL_1084:
          if (v47 || (v475 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x36u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1))
          goto LABEL_2226;
        goto LABEL_2222;
      case 0x37u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1))
          goto LABEL_2226;
        goto LABEL_2222;
      case 0x38u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v482 = 0;
          v483 = 0;
          v484 = 0;
          while (1)
          {
            v485 = *v2;
            v486 = *(_QWORD *)&a1[v485];
            v487 = v486 + 1;
            if (v486 == -1 || v487 > *(_QWORD *)&a1[*v3])
              break;
            v488 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v486);
            *(_QWORD *)&a1[v485] = v487;
            v484 |= (unint64_t)(v488 & 0x7F) << v482;
            if ((v488 & 0x80) == 0)
              goto LABEL_1111;
            v482 += 7;
            v13 = v483++ >= 9;
            if (v13)
            {
              LOBYTE(v484) = 0;
              v47 = a1[*v4];
              goto LABEL_1113;
            }
          }
          a1[*v4] = 1;
LABEL_1111:
          v489 = *v4;
          v47 = a1[v489];
          if (a1[v489])
            LOBYTE(v484) = 0;
LABEL_1113:
          if (v47 || (v484 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x39u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2103;
            v491 = 0;
            v492 = 0;
            v493 = 0;
            while (1)
            {
              v494 = *v2;
              v495 = *(_QWORD *)&a1[v494];
              v496 = v495 + 1;
              if (v495 == -1 || v496 > *(_QWORD *)&a1[*v3])
                break;
              v497 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v495);
              *(_QWORD *)&a1[v494] = v496;
              v493 |= (unint64_t)(v497 & 0x7F) << v491;
              if ((v497 & 0x80) == 0)
                goto LABEL_1132;
              v491 += 7;
              v13 = v492++ >= 9;
              if (v13)
              {
                v493 = 0;
                v498 = a1[*v4];
                goto LABEL_1134;
              }
            }
            a1[*v4] = 1;
LABEL_1132:
            v498 = a1[*v4];
            if (a1[*v4])
              v493 = 0;
LABEL_1134:
            v499 = v493 & 7;
            if (v498 || v499 == 4)
              goto LABEL_2103;
            if ((v493 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if (v499 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 0x3Au:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1148:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v501 = 0;
            v502 = 0;
            v503 = 0;
            while (1)
            {
              v504 = *v2;
              v505 = *(_QWORD *)&a1[v504];
              v506 = v505 + 1;
              if (v505 == -1 || v506 > *(_QWORD *)&a1[*v3])
                break;
              v507 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v505);
              *(_QWORD *)&a1[v504] = v506;
              v503 |= (unint64_t)(v507 & 0x7F) << v501;
              if ((v507 & 0x80) == 0)
                goto LABEL_1158;
              v501 += 7;
              v13 = v502++ >= 9;
              if (v13)
              {
                v503 = 0;
                v508 = a1[*v4];
                goto LABEL_1160;
              }
            }
            a1[*v4] = 1;
LABEL_1158:
            v508 = a1[*v4];
            if (a1[*v4])
              v503 = 0;
LABEL_1160:
            if (v508 || (v503 & 7) == 4)
              goto LABEL_2220;
            if ((v503 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if ((v503 & 7) == 0)
          {
            v510 = 0;
            do
            {
              v511 = *v2;
              v512 = *(_QWORD *)&a1[v511];
              v513 = v512 + 1;
              if (v512 == -1 || v513 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1148;
              }
              v514 = *(char *)(*(_QWORD *)&a1[*v5] + v512);
              *(_QWORD *)&a1[v511] = v513;
              if ((v514 & 0x80000000) == 0)
                break;
              v31 = v510++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x3Bu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1))
          goto LABEL_2226;
        goto LABEL_2222;
      case 0x3Cu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v515 = 0;
          v516 = 0;
          v517 = 0;
          while (1)
          {
            v518 = *v2;
            v519 = *(_QWORD *)&a1[v518];
            v520 = v519 + 1;
            if (v519 == -1 || v520 > *(_QWORD *)&a1[*v3])
              break;
            v521 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v519);
            *(_QWORD *)&a1[v518] = v520;
            v517 |= (unint64_t)(v521 & 0x7F) << v515;
            if ((v521 & 0x80) == 0)
              goto LABEL_1193;
            v515 += 7;
            v13 = v516++ >= 9;
            if (v13)
            {
              LOBYTE(v517) = 0;
              v47 = a1[*v4];
              goto LABEL_1195;
            }
          }
          a1[*v4] = 1;
LABEL_1193:
          v522 = *v4;
          v47 = a1[v522];
          if (a1[v522])
            LOBYTE(v517) = 0;
LABEL_1195:
          if (v47 || (v517 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x3Du:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v524 = 0;
          v525 = 0;
          v526 = 0;
          while (1)
          {
            v527 = *v2;
            v528 = *(_QWORD *)&a1[v527];
            v529 = v528 + 1;
            if (v528 == -1 || v529 > *(_QWORD *)&a1[*v3])
              break;
            v530 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v528);
            *(_QWORD *)&a1[v527] = v529;
            v526 |= (unint64_t)(v530 & 0x7F) << v524;
            if ((v530 & 0x80) == 0)
              goto LABEL_1214;
            v524 += 7;
            v13 = v525++ >= 9;
            if (v13)
            {
              LOBYTE(v526) = 0;
              v47 = a1[*v4];
              goto LABEL_1216;
            }
          }
          a1[*v4] = 1;
LABEL_1214:
          v531 = *v4;
          v47 = a1[v531];
          if (a1[v531])
            LOBYTE(v526) = 0;
LABEL_1216:
          if (v47 || (v526 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x3Eu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v533 = 0;
          v534 = 0;
          v535 = 0;
          while (1)
          {
            v536 = *v2;
            v537 = *(_QWORD *)&a1[v536];
            v538 = v537 + 1;
            if (v537 == -1 || v538 > *(_QWORD *)&a1[*v3])
              break;
            v539 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v537);
            *(_QWORD *)&a1[v536] = v538;
            v535 |= (unint64_t)(v539 & 0x7F) << v533;
            if ((v539 & 0x80) == 0)
              goto LABEL_1235;
            v533 += 7;
            v13 = v534++ >= 9;
            if (v13)
            {
              LOBYTE(v535) = 0;
              v47 = a1[*v4];
              goto LABEL_1237;
            }
          }
          a1[*v4] = 1;
LABEL_1235:
          v540 = *v4;
          v47 = a1[v540];
          if (a1[v540])
            LOBYTE(v535) = 0;
LABEL_1237:
          if (v47 || (v535 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x3Fu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v542 = 0;
          v543 = 0;
          v544 = 0;
          while (1)
          {
            v545 = *v2;
            v546 = *(_QWORD *)&a1[v545];
            v547 = v546 + 1;
            if (v546 == -1 || v547 > *(_QWORD *)&a1[*v3])
              break;
            v548 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v546);
            *(_QWORD *)&a1[v545] = v547;
            v544 |= (unint64_t)(v548 & 0x7F) << v542;
            if ((v548 & 0x80) == 0)
              goto LABEL_1256;
            v542 += 7;
            v13 = v543++ >= 9;
            if (v13)
            {
              LOBYTE(v544) = 0;
              v47 = a1[*v4];
              goto LABEL_1258;
            }
          }
          a1[*v4] = 1;
LABEL_1256:
          v549 = *v4;
          v47 = a1[v549];
          if (a1[v549])
            LOBYTE(v544) = 0;
LABEL_1258:
          if (v47 || (v544 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x40u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v551 = 0;
          v552 = 0;
          v553 = 0;
          while (1)
          {
            v554 = *v2;
            v555 = *(_QWORD *)&a1[v554];
            v556 = v555 + 1;
            if (v555 == -1 || v556 > *(_QWORD *)&a1[*v3])
              break;
            v557 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v555);
            *(_QWORD *)&a1[v554] = v556;
            v553 |= (unint64_t)(v557 & 0x7F) << v551;
            if ((v557 & 0x80) == 0)
              goto LABEL_1277;
            v551 += 7;
            v13 = v552++ >= 9;
            if (v13)
            {
              LOBYTE(v553) = 0;
              v47 = a1[*v4];
              goto LABEL_1279;
            }
          }
          a1[*v4] = 1;
LABEL_1277:
          v558 = *v4;
          v47 = a1[v558];
          if (a1[v558])
            LOBYTE(v553) = 0;
LABEL_1279:
          if (v47 || (v553 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x41u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1288:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2220;
          v560 = 0;
          v561 = 0;
          v562 = 0;
          while (2)
          {
            v563 = *v2;
            v564 = *(_QWORD *)&a1[v563];
            v565 = v564 + 1;
            if (v564 == -1 || v565 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v566 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v564);
              *(_QWORD *)&a1[v563] = v565;
              v562 |= (unint64_t)(v566 & 0x7F) << v560;
              if (v566 < 0)
              {
                v560 += 7;
                v13 = v561++ >= 9;
                if (v13)
                {
                  v562 = 0;
                  v567 = a1[*v4];
                  goto LABEL_1300;
                }
                continue;
              }
            }
            break;
          }
          v567 = a1[*v4];
          if (a1[*v4])
            v562 = 0;
LABEL_1300:
          if (v567)
            v568 = 1;
          else
            v568 = (v562 & 7) == 4;
          if (!v568)
          {
            switch((v562 >> 3))
            {
              case 1u:
                if ((v562 & 7) != 0)
                  goto LABEL_2225;
                v569 = 0;
                while (1)
                {
                  v570 = *v2;
                  v571 = *(_QWORD *)&a1[v570];
                  v572 = v571 + 1;
                  if (v571 == -1 || v572 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1363;
                  v573 = *(char *)(*(_QWORD *)&a1[*v5] + v571);
                  *(_QWORD *)&a1[v570] = v572;
                  if (v573 < 0)
                  {
                    v31 = v569++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1288;
                }
              case 2u:
                if ((v562 & 7) != 0)
                  goto LABEL_2225;
                v574 = 0;
                while (1)
                {
                  v575 = *v2;
                  v576 = *(_QWORD *)&a1[v575];
                  v577 = v576 + 1;
                  if (v576 == -1 || v577 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1363;
                  v578 = *(char *)(*(_QWORD *)&a1[*v5] + v576);
                  *(_QWORD *)&a1[v575] = v577;
                  if (v578 < 0)
                  {
                    v31 = v574++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1288;
                }
              case 3u:
                if ((v562 & 7) != 0)
                  goto LABEL_2225;
                v579 = 0;
                while (1)
                {
                  v580 = *v2;
                  v581 = *(_QWORD *)&a1[v580];
                  v582 = v581 + 1;
                  if (v581 == -1 || v582 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1363;
                  v583 = *(char *)(*(_QWORD *)&a1[*v5] + v581);
                  *(_QWORD *)&a1[v580] = v582;
                  if (v583 < 0)
                  {
                    v31 = v579++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1288;
                }
              case 4u:
                if ((v562 & 7) != 0)
                  goto LABEL_2225;
                v584 = 0;
                while (1)
                {
                  v585 = *v2;
                  v586 = *(_QWORD *)&a1[v585];
                  v587 = v586 + 1;
                  if (v586 == -1 || v587 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1363;
                  v588 = *(char *)(*(_QWORD *)&a1[*v5] + v586);
                  *(_QWORD *)&a1[v585] = v587;
                  if (v588 < 0)
                  {
                    v31 = v584++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1288;
                }
              case 5u:
                if ((v562 & 7) != 0)
                  goto LABEL_2225;
                v589 = 0;
                while (1)
                {
                  v590 = *v2;
                  v591 = *(_QWORD *)&a1[v590];
                  v592 = v591 + 1;
                  if (v591 == -1 || v592 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1363;
                  v593 = *(char *)(*(_QWORD *)&a1[*v5] + v591);
                  *(_QWORD *)&a1[v590] = v592;
                  if (v593 < 0)
                  {
                    v31 = v589++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1288;
                }
              case 6u:
                if ((v562 & 7) != 0)
                  goto LABEL_2225;
                v594 = 0;
                while (1)
                {
                  v595 = *v2;
                  v596 = *(_QWORD *)&a1[v595];
                  v597 = v596 + 1;
                  if (v596 == -1 || v597 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1363;
                  v598 = *(char *)(*(_QWORD *)&a1[*v5] + v596);
                  *(_QWORD *)&a1[v595] = v597;
                  if (v598 < 0)
                  {
                    v31 = v594++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1288;
                }
              case 7u:
                if ((v562 & 7) != 0)
                  goto LABEL_2225;
                v599 = 0;
                do
                {
                  v600 = *v2;
                  v601 = *(_QWORD *)&a1[v600];
                  v602 = v601 + 1;
                  if (v601 == -1 || v602 > *(_QWORD *)&a1[*v3])
                  {
LABEL_1363:
                    a1[*v4] = 1;
                    goto LABEL_1288;
                  }
                  v603 = *(char *)(*(_QWORD *)&a1[*v5] + v601);
                  *(_QWORD *)&a1[v600] = v602;
                  if ((v603 & 0x80000000) == 0)
                    break;
                  v31 = v599++ > 8;
                }
                while (!v31);
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2225;
                continue;
            }
            continue;
          }
          goto LABEL_2220;
        }
      case 0x42u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1367:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v604 = 0;
            v605 = 0;
            v606 = 0;
            while (1)
            {
              v607 = *v2;
              v608 = *(_QWORD *)&a1[v607];
              v609 = v608 + 1;
              if (v608 == -1 || v609 > *(_QWORD *)&a1[*v3])
                break;
              v610 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v608);
              *(_QWORD *)&a1[v607] = v609;
              v606 |= (unint64_t)(v610 & 0x7F) << v604;
              if ((v610 & 0x80) == 0)
                goto LABEL_1377;
              v604 += 7;
              v13 = v605++ >= 9;
              if (v13)
              {
                v606 = 0;
                v611 = a1[*v4];
                goto LABEL_1379;
              }
            }
            a1[*v4] = 1;
LABEL_1377:
            v611 = a1[*v4];
            if (a1[*v4])
              v606 = 0;
LABEL_1379:
            if (v611 || (v606 & 7) == 4)
              goto LABEL_2220;
            if ((v606 >> 3) == 2)
            {
              if ((v606 & 7) != 0)
                goto LABEL_2225;
              v618 = 0;
              while (1)
              {
                v619 = *v2;
                v620 = *(_QWORD *)&a1[v619];
                v621 = v620 + 1;
                if (v620 == -1 || v621 > *(_QWORD *)&a1[*v3])
                  break;
                v622 = *(char *)(*(_QWORD *)&a1[*v5] + v620);
                *(_QWORD *)&a1[v619] = v621;
                if (v622 < 0)
                {
                  v31 = v618++ > 8;
                  if (!v31)
                    continue;
                }
                goto LABEL_1367;
              }
LABEL_1401:
              a1[*v4] = 1;
              continue;
            }
            break;
          }
          if ((v606 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_2225;
            continue;
          }
          break;
        }
        if ((v606 & 7) == 0)
        {
          v613 = 0;
          while (1)
          {
            v614 = *v2;
            v615 = *(_QWORD *)&a1[v614];
            v616 = v615 + 1;
            if (v615 == -1 || v616 > *(_QWORD *)&a1[*v3])
              goto LABEL_1401;
            v617 = *(char *)(*(_QWORD *)&a1[*v5] + v615);
            *(_QWORD *)&a1[v614] = v616;
            if (v617 < 0)
            {
              v31 = v613++ > 8;
              if (!v31)
                continue;
            }
            goto LABEL_1367;
          }
        }
LABEL_2225:
        PBReaderRecallMark();
LABEL_2226:
        PBReaderRecallMark();
        return 0;
      case 0x43u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v623 = 0;
          v624 = 0;
          v625 = 0;
          while (1)
          {
            v626 = *v2;
            v627 = *(_QWORD *)&a1[v626];
            v628 = v627 + 1;
            if (v627 == -1 || v628 > *(_QWORD *)&a1[*v3])
              break;
            v629 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v627);
            *(_QWORD *)&a1[v626] = v628;
            v625 |= (unint64_t)(v629 & 0x7F) << v623;
            if ((v629 & 0x80) == 0)
              goto LABEL_1417;
            v623 += 7;
            v13 = v624++ >= 9;
            if (v13)
            {
              LOBYTE(v625) = 0;
              v47 = a1[*v4];
              goto LABEL_1419;
            }
          }
          a1[*v4] = 1;
LABEL_1417:
          v630 = *v4;
          v47 = a1[v630];
          if (a1[v630])
            LOBYTE(v625) = 0;
LABEL_1419:
          if (v47 || (v625 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x44u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_1428:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2103;
          v632 = 0;
          v633 = 0;
          v634 = 0;
          while (2)
          {
            v635 = *v2;
            v636 = *(_QWORD *)&a1[v635];
            v637 = v636 + 1;
            if (v636 == -1 || v637 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v638 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v636);
              *(_QWORD *)&a1[v635] = v637;
              v634 |= (unint64_t)(v638 & 0x7F) << v632;
              if (v638 < 0)
              {
                v632 += 7;
                v13 = v633++ >= 9;
                if (v13)
                {
                  v634 = 0;
                  v639 = a1[*v4];
                  goto LABEL_1440;
                }
                continue;
              }
            }
            break;
          }
          v639 = a1[*v4];
          if (a1[*v4])
            v634 = 0;
LABEL_1440:
          v640 = v634 & 7;
          if (v639)
            v641 = 1;
          else
            v641 = v640 == 4;
          if (!v641)
          {
            switch((v634 >> 3))
            {
              case 1u:
              case 2u:
                if (v640 != 2 || !PBReaderPlaceMark() || !GEOPDDeparturePredicateIsValid(a1))
                  goto LABEL_2225;
                goto LABEL_1454;
              case 3u:
                if (v640 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1))
                  goto LABEL_2225;
LABEL_1454:
                PBReaderRecallMark();
                continue;
              case 4u:
                if ((v634 & 7) != 0)
                  goto LABEL_2225;
                v642 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2225;
                continue;
            }
            do
            {
              v643 = *v2;
              v644 = *(_QWORD *)&a1[v643];
              v645 = v644 + 1;
              if (v644 == -1 || v645 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1428;
              }
              v646 = *(char *)(*(_QWORD *)&a1[*v5] + v644);
              *(_QWORD *)&a1[v643] = v645;
              if ((v646 & 0x80000000) == 0)
                break;
              v31 = v642++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2103;
        }
      case 0x45u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v647 = 0;
          v648 = 0;
          v649 = 0;
          while (1)
          {
            v650 = *v2;
            v651 = *(_QWORD *)&a1[v650];
            v652 = v651 + 1;
            if (v651 == -1 || v652 > *(_QWORD *)&a1[*v3])
              break;
            v653 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v651);
            *(_QWORD *)&a1[v650] = v652;
            v649 |= (unint64_t)(v653 & 0x7F) << v647;
            if ((v653 & 0x80) == 0)
              goto LABEL_1477;
            v647 += 7;
            v13 = v648++ >= 9;
            if (v13)
            {
              LOBYTE(v649) = 0;
              v47 = a1[*v4];
              goto LABEL_1479;
            }
          }
          a1[*v4] = 1;
LABEL_1477:
          v654 = *v4;
          v47 = a1[v654];
          if (a1[v654])
            LOBYTE(v649) = 0;
LABEL_1479:
          if (v47 || (v649 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x46u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v656 = 0;
          v657 = 0;
          v658 = 0;
          while (1)
          {
            v659 = *v2;
            v660 = *(_QWORD *)&a1[v659];
            v661 = v660 + 1;
            if (v660 == -1 || v661 > *(_QWORD *)&a1[*v3])
              break;
            v662 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v660);
            *(_QWORD *)&a1[v659] = v661;
            v658 |= (unint64_t)(v662 & 0x7F) << v656;
            if ((v662 & 0x80) == 0)
              goto LABEL_1498;
            v656 += 7;
            v13 = v657++ >= 9;
            if (v13)
            {
              LOBYTE(v658) = 0;
              v47 = a1[*v4];
              goto LABEL_1500;
            }
          }
          a1[*v4] = 1;
LABEL_1498:
          v663 = *v4;
          v47 = a1[v663];
          if (a1[v663])
            LOBYTE(v658) = 0;
LABEL_1500:
          if (v47 || (v658 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x47u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_1509:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v665 = 0;
            v666 = 0;
            v667 = 0;
            while (1)
            {
              v668 = *v2;
              v669 = *(_QWORD *)&a1[v668];
              v670 = v669 + 1;
              if (v669 == -1 || v670 > *(_QWORD *)&a1[*v3])
                break;
              v671 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v669);
              *(_QWORD *)&a1[v668] = v670;
              v667 |= (unint64_t)(v671 & 0x7F) << v665;
              if ((v671 & 0x80) == 0)
                goto LABEL_1519;
              v665 += 7;
              v13 = v666++ >= 9;
              if (v13)
              {
                v667 = 0;
                v672 = a1[*v4];
                goto LABEL_1521;
              }
            }
            a1[*v4] = 1;
LABEL_1519:
            v672 = a1[*v4];
            if (a1[*v4])
              v667 = 0;
LABEL_1521:
            if (v672 || (v667 & 7) == 4)
              goto LABEL_2220;
            if ((v667 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if ((v667 & 7) == 0)
          {
            v674 = 0;
            do
            {
              v675 = *v2;
              v676 = *(_QWORD *)&a1[v675];
              v677 = v676 + 1;
              if (v676 == -1 || v677 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1509;
              }
              v678 = *(char *)(*(_QWORD *)&a1[*v5] + v676);
              *(_QWORD *)&a1[v675] = v677;
              if ((v678 & 0x80000000) == 0)
                break;
              v31 = v674++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x49u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v679 = 0;
          v680 = 0;
          v681 = 0;
          while (1)
          {
            v682 = *v2;
            v683 = *(_QWORD *)&a1[v682];
            v684 = v683 + 1;
            if (v683 == -1 || v684 > *(_QWORD *)&a1[*v3])
              break;
            v685 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v683);
            *(_QWORD *)&a1[v682] = v684;
            v681 |= (unint64_t)(v685 & 0x7F) << v679;
            if ((v685 & 0x80) == 0)
              goto LABEL_1550;
            v679 += 7;
            v13 = v680++ >= 9;
            if (v13)
            {
              LOBYTE(v681) = 0;
              v47 = a1[*v4];
              goto LABEL_1552;
            }
          }
          a1[*v4] = 1;
LABEL_1550:
          v686 = *v4;
          v47 = a1[v686];
          if (a1[v686])
            LOBYTE(v681) = 0;
LABEL_1552:
          if (v47 || (v681 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x4Au:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2103;
            v688 = 0;
            v689 = 0;
            v690 = 0;
            while (1)
            {
              v691 = *v2;
              v692 = *(_QWORD *)&a1[v691];
              v693 = v692 + 1;
              if (v692 == -1 || v693 > *(_QWORD *)&a1[*v3])
                break;
              v694 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v692);
              *(_QWORD *)&a1[v691] = v693;
              v690 |= (unint64_t)(v694 & 0x7F) << v688;
              if ((v694 & 0x80) == 0)
                goto LABEL_1571;
              v688 += 7;
              v13 = v689++ >= 9;
              if (v13)
              {
                v690 = 0;
                v695 = a1[*v4];
                goto LABEL_1573;
              }
            }
            a1[*v4] = 1;
LABEL_1571:
            v695 = a1[*v4];
            if (a1[*v4])
              v690 = 0;
LABEL_1573:
            v696 = v690 & 7;
            if (v695 || v696 == 4)
              goto LABEL_2103;
            if ((v690 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if (v696 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 0x4Cu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v698 = 0;
          v699 = 0;
          v700 = 0;
          while (1)
          {
            v701 = *v2;
            v702 = *(_QWORD *)&a1[v701];
            v703 = v702 + 1;
            if (v702 == -1 || v703 > *(_QWORD *)&a1[*v3])
              break;
            v704 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v702);
            *(_QWORD *)&a1[v701] = v703;
            v700 |= (unint64_t)(v704 & 0x7F) << v698;
            if ((v704 & 0x80) == 0)
              goto LABEL_1597;
            v698 += 7;
            v13 = v699++ >= 9;
            if (v13)
            {
              LOBYTE(v700) = 0;
              v47 = a1[*v4];
              goto LABEL_1599;
            }
          }
          a1[*v4] = 1;
LABEL_1597:
          v705 = *v4;
          v47 = a1[v705];
          if (a1[v705])
            LOBYTE(v700) = 0;
LABEL_1599:
          if (v47 || (v700 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x4Du:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v707 = 0;
          v708 = 0;
          v709 = 0;
          while (1)
          {
            v710 = *v2;
            v711 = *(_QWORD *)&a1[v710];
            v712 = v711 + 1;
            if (v711 == -1 || v712 > *(_QWORD *)&a1[*v3])
              break;
            v713 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v711);
            *(_QWORD *)&a1[v710] = v712;
            v709 |= (unint64_t)(v713 & 0x7F) << v707;
            if ((v713 & 0x80) == 0)
              goto LABEL_1618;
            v707 += 7;
            v13 = v708++ >= 9;
            if (v13)
            {
              LOBYTE(v709) = 0;
              v47 = a1[*v4];
              goto LABEL_1620;
            }
          }
          a1[*v4] = 1;
LABEL_1618:
          v714 = *v4;
          v47 = a1[v714];
          if (a1[v714])
            LOBYTE(v709) = 0;
LABEL_1620:
          if (v47 || (v709 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x4Eu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v716 = 0;
          v717 = 0;
          v718 = 0;
          while (1)
          {
            v719 = *v2;
            v720 = *(_QWORD *)&a1[v719];
            v721 = v720 + 1;
            if (v720 == -1 || v721 > *(_QWORD *)&a1[*v3])
              break;
            v722 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v720);
            *(_QWORD *)&a1[v719] = v721;
            v718 |= (unint64_t)(v722 & 0x7F) << v716;
            if ((v722 & 0x80) == 0)
              goto LABEL_1639;
            v716 += 7;
            v13 = v717++ >= 9;
            if (v13)
            {
              LOBYTE(v718) = 0;
              v47 = a1[*v4];
              goto LABEL_1641;
            }
          }
          a1[*v4] = 1;
LABEL_1639:
          v723 = *v4;
          v47 = a1[v723];
          if (a1[v723])
            LOBYTE(v718) = 0;
LABEL_1641:
          if (v47 || (v718 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x51u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1))
          goto LABEL_2222;
        goto LABEL_2226;
      case 0x52u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v725 = 0;
          v726 = 0;
          v727 = 0;
          while (1)
          {
            v728 = *v2;
            v729 = *(_QWORD *)&a1[v728];
            v730 = v729 + 1;
            if (v729 == -1 || v730 > *(_QWORD *)&a1[*v3])
              break;
            v731 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v729);
            *(_QWORD *)&a1[v728] = v730;
            v727 |= (unint64_t)(v731 & 0x7F) << v725;
            if ((v731 & 0x80) == 0)
              goto LABEL_1664;
            v725 += 7;
            v13 = v726++ >= 9;
            if (v13)
            {
              LOBYTE(v727) = 0;
              v47 = a1[*v4];
              goto LABEL_1666;
            }
          }
          a1[*v4] = 1;
LABEL_1664:
          v732 = *v4;
          v47 = a1[v732];
          if (a1[v732])
            LOBYTE(v727) = 0;
LABEL_1666:
          if (v47 || (v727 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x53u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v734 = 0;
          v735 = 0;
          v736 = 0;
          while (1)
          {
            v737 = *v2;
            v738 = *(_QWORD *)&a1[v737];
            v739 = v738 + 1;
            if (v738 == -1 || v739 > *(_QWORD *)&a1[*v3])
              break;
            v740 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v738);
            *(_QWORD *)&a1[v737] = v739;
            v736 |= (unint64_t)(v740 & 0x7F) << v734;
            if ((v740 & 0x80) == 0)
              goto LABEL_1685;
            v734 += 7;
            v13 = v735++ >= 9;
            if (v13)
            {
              LOBYTE(v736) = 0;
              v47 = a1[*v4];
              goto LABEL_1687;
            }
          }
          a1[*v4] = 1;
LABEL_1685:
          v741 = *v4;
          v47 = a1[v741];
          if (a1[v741])
            LOBYTE(v736) = 0;
LABEL_1687:
          if (v47 || (v736 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x54u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_1696:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
            goto LABEL_2103;
          v743 = 0;
          v744 = 0;
          v745 = 0;
          while (2)
          {
            v746 = *v2;
            v747 = *(_QWORD *)&a1[v746];
            v748 = v747 + 1;
            if (v747 == -1 || v748 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v749 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v747);
              *(_QWORD *)&a1[v746] = v748;
              v745 |= (unint64_t)(v749 & 0x7F) << v743;
              if (v749 < 0)
              {
                v743 += 7;
                v13 = v744++ >= 9;
                if (v13)
                {
                  v745 = 0;
                  v750 = a1[*v4];
                  goto LABEL_1708;
                }
                continue;
              }
            }
            break;
          }
          v750 = a1[*v4];
          if (a1[*v4])
            v745 = 0;
LABEL_1708:
          v751 = v745 & 7;
          if (v750)
            v752 = 1;
          else
            v752 = v751 == 4;
          if (!v752)
          {
            switch((v745 >> 3))
            {
              case 1u:
                if (v751 != 2 || !PBReaderPlaceMark() || !GEOPDPhotoSizeFilterValueIsValid(a1))
                  goto LABEL_2225;
                PBReaderRecallMark();
                continue;
              case 2u:
                if (v751 == 2)
                  goto LABEL_1718;
                goto LABEL_2225;
              case 3u:
                if ((v745 & 7) != 0)
                  goto LABEL_2225;
                v753 = 0;
                while (1)
                {
                  v754 = *v2;
                  v755 = *(_QWORD *)&a1[v754];
                  v756 = v755 + 1;
                  if (v755 == -1 || v756 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1752;
                  v757 = *(char *)(*(_QWORD *)&a1[*v5] + v755);
                  *(_QWORD *)&a1[v754] = v756;
                  if (v757 < 0)
                  {
                    v31 = v753++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1696;
                }
              case 4u:
                if ((v745 & 7) != 0)
                  goto LABEL_2225;
                v758 = 0;
                while (1)
                {
                  v759 = *v2;
                  v760 = *(_QWORD *)&a1[v759];
                  v761 = v760 + 1;
                  if (v760 == -1 || v761 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1752;
                  v762 = *(char *)(*(_QWORD *)&a1[*v5] + v760);
                  *(_QWORD *)&a1[v759] = v761;
                  if (v762 < 0)
                  {
                    v31 = v758++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1696;
                }
              case 5u:
                if ((v745 & 7) != 0)
                  goto LABEL_2225;
                v763 = 0;
                while (1)
                {
                  v764 = *v2;
                  v765 = *(_QWORD *)&a1[v764];
                  v766 = v765 + 1;
                  if (v765 == -1 || v766 > *(_QWORD *)&a1[*v3])
                    goto LABEL_1752;
                  v767 = *(char *)(*(_QWORD *)&a1[*v5] + v765);
                  *(_QWORD *)&a1[v764] = v766;
                  if (v767 < 0)
                  {
                    v31 = v763++ > 8;
                    if (!v31)
                      continue;
                  }
                  goto LABEL_1696;
                }
              case 6u:
                if ((v745 & 7) != 0)
                  goto LABEL_2225;
                v768 = 0;
                do
                {
                  v769 = *v2;
                  v770 = *(_QWORD *)&a1[v769];
                  v771 = v770 + 1;
                  if (v770 == -1 || v771 > *(_QWORD *)&a1[*v3])
                  {
LABEL_1752:
                    a1[*v4] = 1;
                    goto LABEL_1696;
                  }
                  v772 = *(char *)(*(_QWORD *)&a1[*v5] + v770);
                  *(_QWORD *)&a1[v769] = v771;
                  if ((v772 & 0x80000000) == 0)
                    break;
                  v31 = v768++ > 8;
                }
                while (!v31);
                break;
              default:
LABEL_1718:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2225;
                continue;
            }
            continue;
          }
          goto LABEL_2103;
        }
      case 0x55u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v773 = 0;
          v774 = 0;
          v775 = 0;
          while (1)
          {
            v776 = *v2;
            v777 = *(_QWORD *)&a1[v776];
            v778 = v777 + 1;
            if (v777 == -1 || v778 > *(_QWORD *)&a1[*v3])
              break;
            v779 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v777);
            *(_QWORD *)&a1[v776] = v778;
            v775 |= (unint64_t)(v779 & 0x7F) << v773;
            if ((v779 & 0x80) == 0)
              goto LABEL_1766;
            v773 += 7;
            v13 = v774++ >= 9;
            if (v13)
            {
              LOBYTE(v775) = 0;
              v47 = a1[*v4];
              goto LABEL_1768;
            }
          }
          a1[*v4] = 1;
LABEL_1766:
          v780 = *v4;
          v47 = a1[v780];
          if (a1[v780])
            LOBYTE(v775) = 0;
LABEL_1768:
          if (v47 || (v775 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x56u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v782 = 0;
          v783 = 0;
          v784 = 0;
          while (1)
          {
            v785 = *v2;
            v786 = *(_QWORD *)&a1[v785];
            v787 = v786 + 1;
            if (v786 == -1 || v787 > *(_QWORD *)&a1[*v3])
              break;
            v788 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v786);
            *(_QWORD *)&a1[v785] = v787;
            v784 |= (unint64_t)(v788 & 0x7F) << v782;
            if ((v788 & 0x80) == 0)
              goto LABEL_1787;
            v782 += 7;
            v13 = v783++ >= 9;
            if (v13)
            {
              LOBYTE(v784) = 0;
              v47 = a1[*v4];
              goto LABEL_1789;
            }
          }
          a1[*v4] = 1;
LABEL_1787:
          v789 = *v4;
          v47 = a1[v789];
          if (a1[v789])
            LOBYTE(v784) = 0;
LABEL_1789:
          if (v47 || (v784 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x57u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v791 = 0;
          v792 = 0;
          v793 = 0;
          while (1)
          {
            v794 = *v2;
            v795 = *(_QWORD *)&a1[v794];
            v796 = v795 + 1;
            if (v795 == -1 || v796 > *(_QWORD *)&a1[*v3])
              break;
            v797 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v795);
            *(_QWORD *)&a1[v794] = v796;
            v793 |= (unint64_t)(v797 & 0x7F) << v791;
            if ((v797 & 0x80) == 0)
              goto LABEL_1808;
            v791 += 7;
            v13 = v792++ >= 9;
            if (v13)
            {
              LOBYTE(v793) = 0;
              v47 = a1[*v4];
              goto LABEL_1810;
            }
          }
          a1[*v4] = 1;
LABEL_1808:
          v798 = *v4;
          v47 = a1[v798];
          if (a1[v798])
            LOBYTE(v793) = 0;
LABEL_1810:
          if (v47 || (v793 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x58u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v800 = 0;
          v801 = 0;
          v802 = 0;
          while (1)
          {
            v803 = *v2;
            v804 = *(_QWORD *)&a1[v803];
            v805 = v804 + 1;
            if (v804 == -1 || v805 > *(_QWORD *)&a1[*v3])
              break;
            v806 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v804);
            *(_QWORD *)&a1[v803] = v805;
            v802 |= (unint64_t)(v806 & 0x7F) << v800;
            if ((v806 & 0x80) == 0)
              goto LABEL_1829;
            v800 += 7;
            v13 = v801++ >= 9;
            if (v13)
            {
              LOBYTE(v802) = 0;
              v47 = a1[*v4];
              goto LABEL_1831;
            }
          }
          a1[*v4] = 1;
LABEL_1829:
          v807 = *v4;
          v47 = a1[v807];
          if (a1[v807])
            LOBYTE(v802) = 0;
LABEL_1831:
          if (v47 || (v802 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x59u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v809 = 0;
          v810 = 0;
          v811 = 0;
          while (1)
          {
            v812 = *v2;
            v813 = *(_QWORD *)&a1[v812];
            v814 = v813 + 1;
            if (v813 == -1 || v814 > *(_QWORD *)&a1[*v3])
              break;
            v815 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v813);
            *(_QWORD *)&a1[v812] = v814;
            v811 |= (unint64_t)(v815 & 0x7F) << v809;
            if ((v815 & 0x80) == 0)
              goto LABEL_1850;
            v809 += 7;
            v13 = v810++ >= 9;
            if (v13)
            {
              LOBYTE(v811) = 0;
              v47 = a1[*v4];
              goto LABEL_1852;
            }
          }
          a1[*v4] = 1;
LABEL_1850:
          v816 = *v4;
          v47 = a1[v816];
          if (a1[v816])
            LOBYTE(v811) = 0;
LABEL_1852:
          if (v47 || (v811 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x5Bu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v818 = 0;
          v819 = 0;
          v820 = 0;
          while (1)
          {
            v821 = *v2;
            v822 = *(_QWORD *)&a1[v821];
            v823 = v822 + 1;
            if (v822 == -1 || v823 > *(_QWORD *)&a1[*v3])
              break;
            v824 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v822);
            *(_QWORD *)&a1[v821] = v823;
            v820 |= (unint64_t)(v824 & 0x7F) << v818;
            if ((v824 & 0x80) == 0)
              goto LABEL_1871;
            v818 += 7;
            v13 = v819++ >= 9;
            if (v13)
            {
              LOBYTE(v820) = 0;
              v47 = a1[*v4];
              goto LABEL_1873;
            }
          }
          a1[*v4] = 1;
LABEL_1871:
          v825 = *v4;
          v47 = a1[v825];
          if (a1[v825])
            LOBYTE(v820) = 0;
LABEL_1873:
          if (v47 || (v820 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x5Du:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v827 = 0;
          v828 = 0;
          v829 = 0;
          while (1)
          {
            v830 = *v2;
            v831 = *(_QWORD *)&a1[v830];
            v832 = v831 + 1;
            if (v831 == -1 || v832 > *(_QWORD *)&a1[*v3])
              break;
            v833 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v831);
            *(_QWORD *)&a1[v830] = v832;
            v829 |= (unint64_t)(v833 & 0x7F) << v827;
            if ((v833 & 0x80) == 0)
              goto LABEL_1892;
            v827 += 7;
            v13 = v828++ >= 9;
            if (v13)
            {
              LOBYTE(v829) = 0;
              v47 = a1[*v4];
              goto LABEL_1894;
            }
          }
          a1[*v4] = 1;
LABEL_1892:
          v834 = *v4;
          v47 = a1[v834];
          if (a1[v834])
            LOBYTE(v829) = 0;
LABEL_1894:
          if (v47 || (v829 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x5Eu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_1903:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2103;
            v836 = 0;
            v837 = 0;
            v838 = 0;
            while (1)
            {
              v839 = *v2;
              v840 = *(_QWORD *)&a1[v839];
              v841 = v840 + 1;
              if (v840 == -1 || v841 > *(_QWORD *)&a1[*v3])
                break;
              v842 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v840);
              *(_QWORD *)&a1[v839] = v841;
              v838 |= (unint64_t)(v842 & 0x7F) << v836;
              if ((v842 & 0x80) == 0)
                goto LABEL_1913;
              v836 += 7;
              v13 = v837++ >= 9;
              if (v13)
              {
                v838 = 0;
                v843 = a1[*v4];
                goto LABEL_1915;
              }
            }
            a1[*v4] = 1;
LABEL_1913:
            v843 = a1[*v4];
            if (a1[*v4])
              v838 = 0;
LABEL_1915:
            v844 = v838 & 7;
            if (v843 || v844 == 4)
              goto LABEL_2103;
            if ((v838 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if (v844 == 2)
          {
            if (PBReaderPlaceMark())
            {
              while (1)
              {
LABEL_1930:
                if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || (v851 = a1[*v4], a1[*v4]))
                {
                  PBReaderRecallMark();
                  goto LABEL_1903;
                }
                while (1)
                {
                  v852 = *v2;
                  v853 = *(_QWORD *)&a1[v852];
                  v854 = v853 + 1;
                  if (v853 == -1 || v854 > *(_QWORD *)&a1[*v3])
                    break;
                  v855 = *(char *)(*(_QWORD *)&a1[*v5] + v853);
                  *(_QWORD *)&a1[v852] = v854;
                  if (v855 < 0)
                  {
                    v13 = v851++ >= 9;
                    if (!v13)
                      continue;
                  }
                  goto LABEL_1930;
                }
                a1[*v4] = 1;
              }
            }
          }
          else if ((v838 & 7) == 0)
          {
            do
            {
              v846 = *v2;
              v847 = *(_QWORD *)&a1[v846];
              v848 = v847 + 1;
              if (v847 == -1 || v848 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1903;
              }
              v849 = *(char *)(*(_QWORD *)&a1[*v5] + v847);
              *(_QWORD *)&a1[v846] = v848;
              if ((v849 & 0x80000000) == 0)
                break;
              v850 = v844++;
            }
            while (v850 <= 8);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x5Fu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v856 = 0;
          v857 = 0;
          v858 = 0;
          while (1)
          {
            v859 = *v2;
            v860 = *(_QWORD *)&a1[v859];
            v861 = v860 + 1;
            if (v860 == -1 || v861 > *(_QWORD *)&a1[*v3])
              break;
            v862 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v860);
            *(_QWORD *)&a1[v859] = v861;
            v858 |= (unint64_t)(v862 & 0x7F) << v856;
            if ((v862 & 0x80) == 0)
              goto LABEL_1954;
            v856 += 7;
            v13 = v857++ >= 9;
            if (v13)
            {
              LOBYTE(v858) = 0;
              v47 = a1[*v4];
              goto LABEL_1956;
            }
          }
          a1[*v4] = 1;
LABEL_1954:
          v863 = *v4;
          v47 = a1[v863];
          if (a1[v863])
            LOBYTE(v858) = 0;
LABEL_1956:
          if (v47 || (v858 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x60u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v865 = 0;
          v866 = 0;
          v867 = 0;
          while (1)
          {
            v868 = *v2;
            v869 = *(_QWORD *)&a1[v868];
            v870 = v869 + 1;
            if (v869 == -1 || v870 > *(_QWORD *)&a1[*v3])
              break;
            v871 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v869);
            *(_QWORD *)&a1[v868] = v870;
            v867 |= (unint64_t)(v871 & 0x7F) << v865;
            if ((v871 & 0x80) == 0)
              goto LABEL_1975;
            v865 += 7;
            v13 = v866++ >= 9;
            if (v13)
            {
              LOBYTE(v867) = 0;
              v47 = a1[*v4];
              goto LABEL_1977;
            }
          }
          a1[*v4] = 1;
LABEL_1975:
          v872 = *v4;
          v47 = a1[v872];
          if (a1[v872])
            LOBYTE(v867) = 0;
LABEL_1977:
          if (v47 || (v867 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x61u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v874 = 0;
          v875 = 0;
          v876 = 0;
          while (1)
          {
            v877 = *v2;
            v878 = *(_QWORD *)&a1[v877];
            v879 = v878 + 1;
            if (v878 == -1 || v879 > *(_QWORD *)&a1[*v3])
              break;
            v880 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v878);
            *(_QWORD *)&a1[v877] = v879;
            v876 |= (unint64_t)(v880 & 0x7F) << v874;
            if ((v880 & 0x80) == 0)
              goto LABEL_1996;
            v874 += 7;
            v13 = v875++ >= 9;
            if (v13)
            {
              LOBYTE(v876) = 0;
              v47 = a1[*v4];
              goto LABEL_1998;
            }
          }
          a1[*v4] = 1;
LABEL_1996:
          v881 = *v4;
          v47 = a1[v881];
          if (a1[v881])
            LOBYTE(v876) = 0;
LABEL_1998:
          if (v47 || (v876 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x62u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2007:
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_2220;
            v883 = 0;
            v884 = 0;
            v885 = 0;
            while (1)
            {
              v886 = *v2;
              v887 = *(_QWORD *)&a1[v886];
              v888 = v887 + 1;
              if (v887 == -1 || v888 > *(_QWORD *)&a1[*v3])
                break;
              v889 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v887);
              *(_QWORD *)&a1[v886] = v888;
              v885 |= (unint64_t)(v889 & 0x7F) << v883;
              if ((v889 & 0x80) == 0)
                goto LABEL_2017;
              v883 += 7;
              v13 = v884++ >= 9;
              if (v13)
              {
                v885 = 0;
                v890 = a1[*v4];
                goto LABEL_2019;
              }
            }
            a1[*v4] = 1;
LABEL_2017:
            v890 = a1[*v4];
            if (a1[*v4])
              v885 = 0;
LABEL_2019:
            if (v890 || (v885 & 7) == 4)
              goto LABEL_2220;
            if ((v885 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_2225;
              continue;
            }
            break;
          }
          if ((v885 & 7) == 0)
          {
            v892 = 0;
            do
            {
              v893 = *v2;
              v894 = *(_QWORD *)&a1[v893];
              v895 = v894 + 1;
              if (v894 == -1 || v895 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2007;
              }
              v896 = *(char *)(*(_QWORD *)&a1[*v5] + v894);
              *(_QWORD *)&a1[v893] = v895;
              if ((v896 & 0x80000000) == 0)
                break;
              v31 = v892++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x64u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v897 = 0;
          v898 = 0;
          v899 = 0;
          while (1)
          {
            v900 = *v2;
            v901 = *(_QWORD *)&a1[v900];
            v902 = v901 + 1;
            if (v901 == -1 || v902 > *(_QWORD *)&a1[*v3])
              break;
            v903 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v901);
            *(_QWORD *)&a1[v900] = v902;
            v899 |= (unint64_t)(v903 & 0x7F) << v897;
            if ((v903 & 0x80) == 0)
              goto LABEL_2048;
            v897 += 7;
            v13 = v898++ >= 9;
            if (v13)
            {
              LOBYTE(v899) = 0;
              v47 = a1[*v4];
              goto LABEL_2050;
            }
          }
          a1[*v4] = 1;
LABEL_2048:
          v904 = *v4;
          v47 = a1[v904];
          if (a1[v904])
            LOBYTE(v899) = 0;
LABEL_2050:
          if (v47 || (v899 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x65u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v906 = 0;
          v907 = 0;
          v908 = 0;
          while (1)
          {
            v909 = *v2;
            v910 = *(_QWORD *)&a1[v909];
            v911 = v910 + 1;
            if (v910 == -1 || v911 > *(_QWORD *)&a1[*v3])
              break;
            v912 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v910);
            *(_QWORD *)&a1[v909] = v911;
            v908 |= (unint64_t)(v912 & 0x7F) << v906;
            if ((v912 & 0x80) == 0)
              goto LABEL_2069;
            v906 += 7;
            v13 = v907++ >= 9;
            if (v13)
            {
              LOBYTE(v908) = 0;
              v47 = a1[*v4];
              goto LABEL_2071;
            }
          }
          a1[*v4] = 1;
LABEL_2069:
          v913 = *v4;
          v47 = a1[v913];
          if (a1[v913])
            LOBYTE(v908) = 0;
LABEL_2071:
          if (v47 || (v908 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x66u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v915 = 0;
            v916 = 0;
            v917 = 0;
            while (1)
            {
              v918 = *v2;
              v919 = *(_QWORD *)&a1[v918];
              v920 = v919 + 1;
              if (v919 == -1 || v920 > *(_QWORD *)&a1[*v3])
                break;
              v921 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v919);
              *(_QWORD *)&a1[v918] = v920;
              v917 |= (unint64_t)(v921 & 0x7F) << v915;
              if ((v921 & 0x80) == 0)
                goto LABEL_2090;
              v915 += 7;
              v13 = v916++ >= 9;
              if (v13)
              {
                v917 = 0;
                v922 = a1[*v4];
                goto LABEL_2092;
              }
            }
            a1[*v4] = 1;
LABEL_2090:
            v922 = a1[*v4];
            if (a1[*v4])
              v917 = 0;
LABEL_2092:
            v923 = v917 & 7;
            if (!v922 && v923 != 4)
            {
              if ((v917 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_2225;
                continue;
              }
              if (v923 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_2225;
            }
          }
          break;
        }
LABEL_2103:
        v925 = a1[*v4];
        PBReaderRecallMark();
        if (v925)
          goto LABEL_2226;
LABEL_2222:
        PBReaderRecallMark();
LABEL_2223:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_2224;
        continue;
      case 0x67u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v926 = 0;
          v927 = 0;
          v928 = 0;
          while (1)
          {
            v929 = *v2;
            v930 = *(_QWORD *)&a1[v929];
            v931 = v930 + 1;
            if (v930 == -1 || v931 > *(_QWORD *)&a1[*v3])
              break;
            v932 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v930);
            *(_QWORD *)&a1[v929] = v931;
            v928 |= (unint64_t)(v932 & 0x7F) << v926;
            if ((v932 & 0x80) == 0)
              goto LABEL_2118;
            v926 += 7;
            v13 = v927++ >= 9;
            if (v13)
            {
              LOBYTE(v928) = 0;
              v47 = a1[*v4];
              goto LABEL_2120;
            }
          }
          a1[*v4] = 1;
LABEL_2118:
          v933 = *v4;
          v47 = a1[v933];
          if (a1[v933])
            LOBYTE(v928) = 0;
LABEL_2120:
          if (v47 || (v928 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x68u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v935 = 0;
          v936 = 0;
          v937 = 0;
          while (1)
          {
            v938 = *v2;
            v939 = *(_QWORD *)&a1[v938];
            v940 = v939 + 1;
            if (v939 == -1 || v940 > *(_QWORD *)&a1[*v3])
              break;
            v941 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v939);
            *(_QWORD *)&a1[v938] = v940;
            v937 |= (unint64_t)(v941 & 0x7F) << v935;
            if ((v941 & 0x80) == 0)
              goto LABEL_2139;
            v935 += 7;
            v13 = v936++ >= 9;
            if (v13)
            {
              LOBYTE(v937) = 0;
              v47 = a1[*v4];
              goto LABEL_2141;
            }
          }
          a1[*v4] = 1;
LABEL_2139:
          v942 = *v4;
          v47 = a1[v942];
          if (a1[v942])
            LOBYTE(v937) = 0;
LABEL_2141:
          if (v47 || (v937 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x69u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v944 = 0;
          v945 = 0;
          v946 = 0;
          while (1)
          {
            v947 = *v2;
            v948 = *(_QWORD *)&a1[v947];
            v949 = v948 + 1;
            if (v948 == -1 || v949 > *(_QWORD *)&a1[*v3])
              break;
            v950 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v948);
            *(_QWORD *)&a1[v947] = v949;
            v946 |= (unint64_t)(v950 & 0x7F) << v944;
            if ((v950 & 0x80) == 0)
              goto LABEL_2160;
            v944 += 7;
            v13 = v945++ >= 9;
            if (v13)
            {
              LOBYTE(v946) = 0;
              v47 = a1[*v4];
              goto LABEL_2162;
            }
          }
          a1[*v4] = 1;
LABEL_2160:
          v951 = *v4;
          v47 = a1[v951];
          if (a1[v951])
            LOBYTE(v946) = 0;
LABEL_2162:
          if (v47 || (v946 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x6Au:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
        while (1)
        {
          v47 = a1[*v4];
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_2221;
          if (a1[*v4])
            goto LABEL_2225;
          v953 = 0;
          v954 = 0;
          v955 = 0;
          while (1)
          {
            v956 = *v2;
            v957 = *(_QWORD *)&a1[v956];
            v958 = v957 + 1;
            if (v957 == -1 || v958 > *(_QWORD *)&a1[*v3])
              break;
            v959 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v957);
            *(_QWORD *)&a1[v956] = v958;
            v955 |= (unint64_t)(v959 & 0x7F) << v953;
            if ((v959 & 0x80) == 0)
              goto LABEL_2181;
            v953 += 7;
            v13 = v954++ >= 9;
            if (v13)
            {
              LOBYTE(v955) = 0;
              v47 = a1[*v4];
              goto LABEL_2183;
            }
          }
          a1[*v4] = 1;
LABEL_2181:
          v960 = *v4;
          v47 = a1[v960];
          if (a1[v960])
            LOBYTE(v955) = 0;
LABEL_2183:
          if (v47 || (v955 & 7) == 4)
            goto LABEL_2221;
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_2225;
        }
      case 0x6Bu:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_2226;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_2192:
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v962 = 0;
            v963 = 0;
            v964 = 0;
            while (1)
            {
              v965 = *v2;
              v966 = *(_QWORD *)&a1[v965];
              v967 = v966 + 1;
              if (v966 == -1 || v967 > *(_QWORD *)&a1[*v3])
                break;
              v968 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v966);
              *(_QWORD *)&a1[v965] = v967;
              v964 |= (unint64_t)(v968 & 0x7F) << v962;
              if ((v968 & 0x80) == 0)
                goto LABEL_2202;
              v962 += 7;
              v13 = v963++ >= 9;
              if (v13)
              {
                v964 = 0;
                v969 = a1[*v4];
                goto LABEL_2204;
              }
            }
            a1[*v4] = 1;
LABEL_2202:
            v969 = a1[*v4];
            if (a1[*v4])
              v964 = 0;
LABEL_2204:
            if (!v969 && (v964 & 7) != 4)
            {
              if ((v964 >> 3) != 1)
              {
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_2225;
                continue;
              }
              if ((v964 & 7) == 0)
              {
                v971 = 0;
                do
                {
                  v972 = *v2;
                  v973 = *(_QWORD *)&a1[v972];
                  v974 = v973 + 1;
                  if (v973 == -1 || v974 > *(_QWORD *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_2192;
                  }
                  v975 = *(char *)(*(_QWORD *)&a1[*v5] + v973);
                  *(_QWORD *)&a1[v972] = v974;
                  if ((v975 & 0x80000000) == 0)
                    break;
                  v31 = v971++ > 8;
                }
                while (!v31);
                continue;
              }
              goto LABEL_2225;
            }
          }
          break;
        }
LABEL_2220:
        v47 = a1[*v4];
LABEL_2221:
        PBReaderRecallMark();
        if (v47)
          goto LABEL_2226;
        goto LABEL_2222;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_2226;
        goto LABEL_2223;
    }
  }
}

BOOL GEOPDETAFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
              goto LABEL_87;
            while (1)
            {
LABEL_76:
              if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
                goto LABEL_63;
              v38 = a1[*v4];
              if (a1[*v4])
                goto LABEL_63;
              while (1)
              {
                v39 = *v2;
                v40 = *(_QWORD *)&a1[v39];
                v41 = v40 + 1;
                if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                  break;
                v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                *(_QWORD *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  v13 = v38++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_76;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0)
            goto LABEL_87;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v15++;
              if (v21 <= 8)
                continue;
            }
            goto LABEL_73;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_87;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_73;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1))
            goto LABEL_87;
          goto LABEL_63;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1))
            goto LABEL_87;
          goto LABEL_63;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1))
            goto LABEL_87;
          goto LABEL_63;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_87;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v27 = v28++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_73;
          }
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCyclingOptionsIsValid(a1))
            goto LABEL_87;
          goto LABEL_63;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOClientCapabilitiesIsValid(a1))
            goto LABEL_87;
LABEL_63:
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_87;
          v33 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_87:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v27 = v33++ > 8;
          if (!v27)
            continue;
        }
        goto LABEL_73;
      }
LABEL_72:
      a1[*v4] = 1;
LABEL_73:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_1890E2E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDComponentInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDComponentFilterIsValid(a1))
            goto LABEL_69;
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_65;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_66;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_69;
          v38 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v39 = *v2;
        v40 = *(_QWORD *)&a1[v39];
        v41 = v40 + 1;
        if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
          break;
        v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
        *(_QWORD *)&a1[v39] = v41;
        if (v42 < 0)
        {
          v22 = v38++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

#error "1890E7EC8: too big function (funcsize=0)"

void sub_1890FAFE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRatingIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_47;
          }
        case 2u:
        case 3u:
          if (v16 != 1)
            goto LABEL_50;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_42;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_42;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v27 = 0;
          break;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_50;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        v30 = v29 + 1;
        if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
          break;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v26 = v27++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_47;
      }
LABEL_41:
      v14 = *v4;
LABEL_42:
      a1[v14] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDFactoidIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  char v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_102;
          goto LABEL_64;
        case 2u:
          if (v16 == 2)
            goto LABEL_64;
          goto LABEL_102;
        case 3u:
          if (v16 != 1)
            goto LABEL_102;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_62;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_62;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 5u:
          if (v16 == 2)
            goto LABEL_64;
          goto LABEL_102;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_99;
          }
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_102;
          goto LABEL_98;
        case 8u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
            goto LABEL_98;
          goto LABEL_102;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_61;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_99;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_102;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              break;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_99;
          }
LABEL_61:
          v14 = *v4;
LABEL_62:
          a1[v14] = 1;
          continue;
        case 0xBu:
          if (v16 == 2)
            goto LABEL_64;
          goto LABEL_102;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark())
            goto LABEL_102;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
          break;
        default:
LABEL_64:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_102;
          continue;
      }
LABEL_69:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
      {
        v37 = 0;
        v38 = 0;
        v39 = 0;
        while (1)
        {
          v40 = *v2;
          v41 = *(_QWORD *)&a1[v40];
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
            break;
          v43 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v41);
          *(_QWORD *)&a1[v40] = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_79;
          v37 += 7;
          v13 = v38++ >= 9;
          if (v13)
          {
            v39 = 0;
            v44 = a1[*v4];
            goto LABEL_81;
          }
        }
        a1[*v4] = 1;
LABEL_79:
        v44 = a1[*v4];
        if (a1[*v4])
          v39 = 0;
LABEL_81:
        if (v44 || (v39 & 7) == 4)
          break;
        if ((v39 >> 3) == 1)
        {
          if ((v39 & 7) == 0)
          {
            v46 = 0;
            do
            {
              v47 = *v2;
              v48 = *(_QWORD *)&a1[v47];
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_69;
              }
              v50 = *(char *)(*(_QWORD *)&a1[*v5] + v48);
              *(_QWORD *)&a1[v47] = v49;
              if ((v50 & 0x80000000) == 0)
                break;
              v26 = v46++ > 8;
            }
            while (!v26);
            continue;
          }
LABEL_101:
          PBReaderRecallMark();
LABEL_102:
          PBReaderRecallMark();
          return 0;
        }
        if (!PBReaderSkipValueWithTag())
          goto LABEL_101;
      }
      v51 = a1[*v4];
      PBReaderRecallMark();
      if (v51)
        goto LABEL_102;
LABEL_98:
      PBReaderRecallMark();
LABEL_99:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

BOOL GEOPDTransitInfoSnippetIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_66;
          goto LABEL_44;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
            goto LABEL_66;
          goto LABEL_53;
        case 3u:
          if (v15 == 2)
            goto LABEL_44;
          goto LABEL_66;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDTransitLabelIsValid(a1))
            goto LABEL_66;
          goto LABEL_53;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_62;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_63;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimezoneIsValid(a1))
            goto LABEL_66;
          goto LABEL_53;
        case 7u:
          if (v15 == 2)
            goto LABEL_44;
          goto LABEL_66;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_66;
          goto LABEL_53;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_66;
LABEL_53:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_66;
          v23 = 0;
          break;
        default:
LABEL_44:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_66:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDIconIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPhotoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDPlacecardLayoutConfigurationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDModuleLayoutEntryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDPlaceCollectionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  char v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  int v45;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  char v57;
  unsigned int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  int v64;
  int v65;
  char v67;
  unsigned int v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  int v74;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  int v86;
  int v87;
  _BOOL8 v88;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 7u:
        case 0xAu:
        case 0xBu:
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
        case 0x1Bu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_197;
          goto LABEL_77;
        case 3u:
        case 0x11u:
        case 0x1Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDCaptionedPhotoIsValid(a1))
            goto LABEL_197;
          goto LABEL_77;
        case 4u:
        case 5u:
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_197;
          goto LABEL_77;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceCollectionItemIsValid(a1))
            goto LABEL_197;
          goto LABEL_77;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_197;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_78;
          }
        case 0xCu:
          if (v16 != 1)
            goto LABEL_197;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_73;
          v26 = v25 + 8;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_73;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 0xDu:
          if (v16 == 2)
            goto LABEL_50;
          goto LABEL_197;
        case 0xEu:
          if (v16 == 2)
            goto LABEL_50;
          goto LABEL_197;
        case 0xFu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDPublisherIsValid(a1))
            goto LABEL_197;
          goto LABEL_77;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_197;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_72;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v23 = v27++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_78;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_197;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              break;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v23 = v32++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_78;
          }
LABEL_72:
          v14 = *v4;
LABEL_73:
          a1[v14] = 1;
          continue;
        case 0x13u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLocalizedBytesIsValid(a1))
            goto LABEL_77;
          goto LABEL_197;
        case 0x19u:
          if (v16 != 2 || !PBReaderPlaceMark())
            goto LABEL_197;
          objc_msgSend(a1, "position", 0, 0);
          objc_msgSend(a1, "length");
          break;
        default:
LABEL_50:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_197;
          continue;
      }
LABEL_83:
      while (2)
      {
        if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v37 = 0;
          v38 = 0;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              break;
            v43 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if ((v43 & 0x80) == 0)
              goto LABEL_93;
            v37 += 7;
            v13 = v38++ >= 9;
            if (v13)
            {
              v39 = 0;
              v44 = a1[*v4];
              goto LABEL_95;
            }
          }
          a1[*v4] = 1;
LABEL_93:
          v44 = a1[*v4];
          if (a1[*v4])
            v39 = 0;
LABEL_95:
          v45 = v39 & 7;
          if (!v44 && v45 != 4)
          {
            switch((v39 >> 3))
            {
              case 1u:
                if (v45 != 2)
                  goto LABEL_196;
                goto LABEL_103;
              case 2u:
                if (v45 == 2)
                  goto LABEL_103;
                goto LABEL_196;
              case 3u:
                if ((v39 & 7) != 0)
                  goto LABEL_196;
                v47 = 0;
                while (1)
                {
                  v48 = *v2;
                  v49 = *(_QWORD *)&a1[v48];
                  v50 = v49 + 1;
                  if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
                    goto LABEL_121;
                  v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
                  *(_QWORD *)&a1[v48] = v50;
                  if (v51 < 0)
                  {
                    v23 = v47++ > 8;
                    if (!v23)
                      continue;
                  }
                  goto LABEL_83;
                }
              case 4u:
                if ((v39 & 7) != 0)
                  goto LABEL_196;
                v52 = 0;
                do
                {
                  v53 = *v2;
                  v54 = *(_QWORD *)&a1[v53];
                  v55 = v54 + 1;
                  if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
                  {
LABEL_121:
                    a1[*v4] = 1;
                    goto LABEL_83;
                  }
                  v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
                  *(_QWORD *)&a1[v53] = v55;
                  if ((v56 & 0x80000000) == 0)
                    break;
                  v23 = v52++ > 8;
                }
                while (!v23);
                continue;
              case 5u:
                if (v45 != 2 || !PBReaderPlaceMark())
                  goto LABEL_196;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                while (2)
                {
                  if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
                  {
                    v57 = 0;
                    v58 = 0;
                    v59 = 0;
                    while (1)
                    {
                      v60 = *v2;
                      v61 = *(_QWORD *)&a1[v60];
                      v62 = v61 + 1;
                      if (v61 == -1 || v62 > *(_QWORD *)&a1[*v3])
                        break;
                      v63 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v61);
                      *(_QWORD *)&a1[v60] = v62;
                      v59 |= (unint64_t)(v63 & 0x7F) << v57;
                      if ((v63 & 0x80) == 0)
                        goto LABEL_135;
                      v57 += 7;
                      v13 = v58++ >= 9;
                      if (v13)
                      {
                        v59 = 0;
                        v64 = a1[*v4];
                        goto LABEL_137;
                      }
                    }
                    a1[*v4] = 1;
LABEL_135:
                    v64 = a1[*v4];
                    if (a1[*v4])
                      v59 = 0;
LABEL_137:
                    v65 = v59 & 7;
                    if (!v64 && v65 != 4)
                    {
                      if ((v59 >> 3) == 2)
                      {
                        if (v65 != 2)
                          goto LABEL_195;
                      }
                      else
                      {
                        if ((v59 >> 3) != 1)
                        {
                          if (!PBReaderSkipValueWithTag())
                            goto LABEL_195;
                          continue;
                        }
                        if (v65 != 2)
                          goto LABEL_195;
                      }
                      if ((PBReaderSkipValueWithTag() & 1) == 0)
                        goto LABEL_195;
                      continue;
                    }
                  }
                  goto LABEL_190;
                }
              case 6u:
                if (v45 != 2 || !PBReaderPlaceMark())
                  goto LABEL_196;
                objc_msgSend(a1, "position");
                objc_msgSend(a1, "length");
                break;
              default:
LABEL_103:
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_196;
                continue;
            }
LABEL_153:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
            {
              v67 = 0;
              v68 = 0;
              v69 = 0;
              while (1)
              {
                v70 = *v2;
                v71 = *(_QWORD *)&a1[v70];
                v72 = v71 + 1;
                if (v71 == -1 || v72 > *(_QWORD *)&a1[*v3])
                  break;
                v73 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v71);
                *(_QWORD *)&a1[v70] = v72;
                v69 |= (unint64_t)(v73 & 0x7F) << v67;
                if ((v73 & 0x80) == 0)
                  goto LABEL_163;
                v67 += 7;
                v13 = v68++ >= 9;
                if (v13)
                {
                  v69 = 0;
                  v74 = a1[*v4];
                  goto LABEL_165;
                }
              }
              a1[*v4] = 1;
LABEL_163:
              v74 = a1[*v4];
              if (a1[*v4])
                v69 = 0;
LABEL_165:
              if (v74 || (v69 & 7) == 4)
                break;
              if ((v69 >> 3) == 2)
              {
                if ((v69 & 7) == 0)
                {
                  v81 = 0;
                  while (1)
                  {
                    v82 = *v2;
                    v83 = *(_QWORD *)&a1[v82];
                    v84 = v83 + 1;
                    if (v83 == -1 || v84 > *(_QWORD *)&a1[*v3])
                      break;
                    v85 = *(char *)(*(_QWORD *)&a1[*v5] + v83);
                    *(_QWORD *)&a1[v82] = v84;
                    if (v85 < 0)
                    {
                      v23 = v81++ > 8;
                      if (!v23)
                        continue;
                    }
                    goto LABEL_153;
                  }
LABEL_187:
                  a1[*v4] = 1;
                  continue;
                }
                goto LABEL_195;
              }
              if ((v69 >> 3) == 1)
              {
                if ((v69 & 7) == 0)
                {
                  v76 = 0;
                  while (1)
                  {
                    v77 = *v2;
                    v78 = *(_QWORD *)&a1[v77];
                    v79 = v78 + 1;
                    if (v78 == -1 || v79 > *(_QWORD *)&a1[*v3])
                      goto LABEL_187;
                    v80 = *(char *)(*(_QWORD *)&a1[*v5] + v78);
                    *(_QWORD *)&a1[v77] = v79;
                    if (v80 < 0)
                    {
                      v23 = v76++ > 8;
                      if (!v23)
                        continue;
                    }
                    goto LABEL_153;
                  }
                }
LABEL_195:
                PBReaderRecallMark();
                goto LABEL_196;
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_195;
            }
LABEL_190:
            v86 = a1[*v4];
            PBReaderRecallMark();
            if (!v86)
            {
              PBReaderRecallMark();
              continue;
            }
LABEL_196:
            PBReaderRecallMark();
LABEL_197:
            PBReaderRecallMark();
            return 0;
          }
        }
        break;
      }
      v87 = a1[*v4];
      PBReaderRecallMark();
      if (v87)
        goto LABEL_197;
LABEL_77:
      PBReaderRecallMark();
LABEL_78:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v88 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v88;
}

BOOL GEOPDPublisherIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_32;
          goto LABEL_52;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDCaptionedPhotoIsValid(a1))
            goto LABEL_32;
          goto LABEL_52;
        case 3u:
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_52;
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_49;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_52;
          v23 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDPlaceCollectionItemIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_49;
          goto LABEL_62;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCaptionedPhotoIsValid(a1))
            goto LABEL_62;
          goto LABEL_49;
        case 3u:
        case 6u:
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_62;
          goto LABEL_49;
        case 4u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_62;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_60;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_50;
          }
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedBytesIsValid(a1))
            goto LABEL_62;
          goto LABEL_49;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDQuickLinkItemIsValid(a1))
            goto LABEL_62;
LABEL_49:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v23 = 0;
          break;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_62:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_50;
      }
LABEL_60:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDExploreGuidesIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) != 1)
        goto LABEL_25;
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGuidesLocationEntryIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v15 != 2)
      goto LABEL_28;
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_28;
    goto LABEL_26;
  }
LABEL_27:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDEnrichmentInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_33;
          goto LABEL_30;
        case 2u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 3u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_33;
          PBReaderRecallMark();
          goto LABEL_31;
        case 6u:
          if (v15 == 2)
            goto LABEL_30;
          goto LABEL_33;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_32;
          break;
      }
    }
  }
LABEL_32:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDHikeAssociatedInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_36;
          v17 = 0;
          do
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_34;
            }
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0)
              break;
          }
          while (v17++ <= 8);
          goto LABEL_34;
        case 2u:
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_36;
          PBReaderRecallMark();
          goto LABEL_34;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_36:
            PBReaderRecallMark();
            return 0;
          }
LABEL_34:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_35;
          break;
      }
    }
  }
LABEL_35:
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDHikeSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_58;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_61;
          v33 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_61;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v34 = *v2;
        v35 = *(_QWORD *)&a1[v34];
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
          break;
        v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
        *(_QWORD *)&a1[v34] = v36;
        if (v37 < 0)
        {
          v22 = v33++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_58;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPDHikeGeometryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_189102160(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDContainedPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDLinkedPlace *v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  int v50;
  char v51;
  void *v52;
  int v54;
  int *v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v57 = v16 & ~(_BYTE)v11 | v9;
        v58 = v16 | v11 | v57;
        v56 = v8;
        if ((((v16 | v11) | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v59 = (v17 == 0) | v16 | v11;
        v60 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v18) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v19))
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v29 || (v23 & 7) == 4)
      break;
    v31 = v23 >> 3;
    v32 = v60;
    if ((v59 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_97;
          v37 = objc_alloc_init(GEOPDLinkedPlace);
          if (GEOPDLinkedPlaceReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v38 = *(void **)(a1 + 40);
            *(_QWORD *)(a1 + 40) = v37;

            --v7;
            goto LABEL_77;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v7 += *(unsigned __int8 *)(a1 + 68) << 28 >> 31;
        goto LABEL_77;
      case 2:
        if (!v32 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v37 = objc_alloc_init(GEOPDLinkedPlace);
        if (!GEOPDLinkedPlaceReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
          goto LABEL_96;
        PBReaderRecallMark();
        -[GEOPDContainedPlace _addNoFlagsChildPlace:](a1, v37);
        goto LABEL_68;
      case 3:
        if ((v56 & 1) == 0)
          goto LABEL_69;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                v44 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v44 = 0;
LABEL_74:
        *(_QWORD *)(a1 + 32) = v44;
        goto LABEL_78;
      case 4:
        if (!v32 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v37 = objc_alloc_init(GEOPDLinkedPlace);
        if (GEOPDLinkedPlaceReadAllFrom((uint64_t)v37, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDContainedPlace _addNoFlagsSiblingPlace:](a1, v37);
LABEL_68:

LABEL_77:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_78;
        }
LABEL_96:

LABEL_97:
        v54 = 0;
        v55 = &OBJC_IVAR___GEOXPCReply__methodName;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
        if ((v57 & 1) != 0)
LABEL_82:
          *(_BYTE *)(a1 + v55[864]) |= 2u;
        if (v60 & 1 | ((v54 & 1) == 0))
        {
          *(_BYTE *)(a1 + v55[864]) |= 8u;
          *(_BYTE *)(a1 + v55[864]) |= 4u;
          *(_BYTE *)(a1 + v55[864]) |= 0x10u;
        }
        else if (v17)
        {
          while (1)
          {
            v50 = *v17++;
            v51 = 8;
            switch(v50)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_89;
              case 2:
                v51 = 4;
                goto LABEL_89;
              case 4:
                v51 = 16;
LABEL_89:
                *(_BYTE *)(a1 + v55[864]) |= v51;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v54)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v60 & 1) != 0)
        {
          v52 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v57 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 2) != 0)
        {
LABEL_69:
          v49 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v49 & 1) == 0)
          {
            v54 = 0;
LABEL_80:
            v55 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_81;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v54 = 0;
            v55 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_82;
          }
        }
LABEL_78:
        if (!(v58 & 1 | (v7 != 0)))
          goto LABEL_79;
        break;
    }
  }
LABEL_79:
  v54 = 1;
  goto LABEL_80;
}

void sub_1891028F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189102ADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891031CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDContainedPlaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  -[GEOPDLinkedPlace readAll:](*(_QWORD *)(a1 + 40), 1);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        -[GEOPDLinkedPlace readAll:](*(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = *(id *)(a1 + 48);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        -[GEOPDLinkedPlace readAll:](*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
    }
    while (v9);
  }

}

unint64_t GEOPDContainedPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDContainedPlaceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDContainedPlaceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDContainedPlaceReadAllFrom_initialTag;
  Specified = GEOPDContainedPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDContainedPlaceCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1891035CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLinkedPlaceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_33;
          goto LABEL_46;
        case 2u:
          if (v15 == 2)
            goto LABEL_24;
          goto LABEL_46;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_46;
          goto LABEL_33;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_46;
LABEL_33:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          break;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v18 = *v2;
        v19 = *(_QWORD *)&a1[v18];
        v20 = v19 + 1;
        if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          break;
        v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
        *(_QWORD *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8)
          continue;
        goto LABEL_34;
      }
      a1[*v4] = 1;
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189103CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189104080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDContainedPlaceFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189104788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDContainmentPlaceFilterReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189104F30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDContextualPhotoMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *v18;
  id v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  _BOOL8 v58;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            if (v18)
              -[GEOPDContextualPhotoMetadata addContextualPhotoLabel:](a1, v18);

            continue;
          case 2u:
            v21 = 0;
            v22 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 36) |= 1u;
            while (1)
            {
              v24 = *v4;
              v25 = *(_QWORD *)&v3[v24];
              v26 = v25 + 1;
              if (v25 == -1 || v26 > *(_QWORD *)&v3[*v5])
                break;
              v27 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v25);
              *(_QWORD *)&v3[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0)
                goto LABEL_63;
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_65;
              }
            }
            v3[*v6] = 1;
LABEL_63:
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_65:
            v55 = 24;
            goto LABEL_70;
          case 3u:
            v28 = 0;
            v29 = 0;
            v23 = 0;
            *(_BYTE *)(a1 + 36) |= 2u;
            while (2)
            {
              v30 = *v4;
              v31 = *(_QWORD *)&v3[v30];
              v32 = v31 + 1;
              if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
                *(_QWORD *)&v3[v30] = v32;
                v23 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v23) = 0;
LABEL_69:
            v55 = 28;
LABEL_70:
            *(_DWORD *)(a1 + v55) = v23;
            continue;
          case 4u:
            v34 = 0;
            v35 = 0;
            v36 = 0;
            *(_BYTE *)(a1 + 36) |= 0x10u;
            while (2)
            {
              v37 = *v4;
              v38 = *(_QWORD *)&v3[v37];
              v39 = v38 + 1;
              if (v38 == -1 || v39 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v40 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v38);
                *(_QWORD *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  v15 = v35++ >= 9;
                  if (v15)
                  {
                    v36 = 0;
                    goto LABEL_74;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v36 = 0;
LABEL_74:
            v56 = v36 != 0;
            v57 = 34;
            goto LABEL_83;
          case 5u:
            v41 = 0;
            v42 = 0;
            v43 = 0;
            *(_BYTE *)(a1 + 36) |= 8u;
            while (2)
            {
              v44 = *v4;
              v45 = *(_QWORD *)&v3[v44];
              v46 = v45 + 1;
              if (v45 == -1 || v46 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v47 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v45);
                *(_QWORD *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  v15 = v42++ >= 9;
                  if (v15)
                  {
                    v43 = 0;
                    goto LABEL_78;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v43 = 0;
LABEL_78:
            v56 = v43 != 0;
            v57 = 33;
            goto LABEL_83;
          case 6u:
            v48 = 0;
            v49 = 0;
            v50 = 0;
            *(_BYTE *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v20 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v19;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_86;
            continue;
        }
        while (1)
        {
          v51 = *v4;
          v52 = *(_QWORD *)&v3[v51];
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)&v3[*v5])
            break;
          v54 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v52);
          *(_QWORD *)&v3[v51] = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if ((v54 & 0x80) == 0)
            goto LABEL_80;
          v48 += 7;
          v15 = v49++ >= 9;
          if (v15)
          {
            v50 = 0;
            goto LABEL_82;
          }
        }
        v3[*v6] = 1;
LABEL_80:
        if (v3[*v6])
          v50 = 0;
LABEL_82:
        v56 = v50 != 0;
        v57 = 32;
LABEL_83:
        *(_BYTE *)(a1 + v57) = v56;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_86:
    v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_189105A3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891062B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDataItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  int v48;
  GEOPDRatingData *v49;
  uint64_t v50;
  void *v51;
  char v52;
  char v53;
  int v54;
  char v55;
  void *v56;
  int v58;
  int *v59;
  char v60;
  char v61;
  char v62;
  BOOL v63;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 80) & 0x20) != 0)+ ((*(_BYTE *)(a1 + 80) & 2) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v60 = v17;
        v61 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v62 = (v19 == 0) | v18;
        v63 = v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_98;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_98:
      v58 = 1;
      goto LABEL_99;
    }
    v33 = v25 >> 3;
    v34 = v63;
    if ((v62 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_79;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        while (1)
        {
          v42 = *v20;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_82;
          v39 += 7;
          v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_84;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_82:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v41) = 0;
LABEL_84:
        *(_DWORD *)(a1 + 76) = v41;
        goto LABEL_97;
      case 2:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 2 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDRatingData);
        if (!GEOPDRatingDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 56;
        goto LABEL_78;
      case 3:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 16 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDCategoryData);
        if (!GEOPDCategoryDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 32;
        goto LABEL_78;
      case 4:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 8 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDFactoidData);
        if (!GEOPDFactoidDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 40;
        goto LABEL_78;
      case 5:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 32 * *(_BYTE *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDBusinessHoursData);
        if (!GEOPDBusinessHoursDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
          goto LABEL_117;
        PBReaderRecallMark();
        v50 = 24;
        goto LABEL_78;
      case 6:
        if (!v34)
          goto LABEL_79;
        if ((*(_BYTE *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_118;
          v53 = 4 * *(_BYTE *)(a1 + 80);
LABEL_95:
          v7 += v53 >> 7;
LABEL_96:
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_118;
        v49 = objc_alloc_init(GEOPDLocationData);
        if (GEOPDLocationDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v50 = 48;
LABEL_78:
          v51 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;

          --v7;
          goto LABEL_96;
        }
LABEL_117:

LABEL_118:
        v58 = 0;
        v59 = &OBJC_IVAR___GEOXPCReply__methodName;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_100:
        if ((v60 & 1) != 0)
LABEL_101:
          *(_BYTE *)(a1 + v59[876]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_BYTE *)(a1 + v59[876]) |= 0x40u;
          *(_BYTE *)(a1 + v59[876]) |= 8u;
          *(_BYTE *)(a1 + v59[876]) |= 0x10u;
          *(_BYTE *)(a1 + v59[876]) |= 4u;
          *(_BYTE *)(a1 + v59[876]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            v54 = *v19++;
            v55 = 64;
            switch(v54)
            {
              case 0:
                goto LABEL_111;
              case 2:
                goto LABEL_110;
              case 3:
                v55 = 8;
                goto LABEL_110;
              case 4:
                v55 = 16;
                goto LABEL_110;
              case 5:
                v55 = 4;
                goto LABEL_110;
              case 6:
                v55 = 32;
LABEL_110:
                *(_BYTE *)(a1 + v59[876]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v58)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v63)
        {
          v56 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 2) != 0)
        {
LABEL_79:
          v52 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v52 & 1) == 0)
          {
            v58 = 0;
LABEL_99:
            v59 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v22 = (int *)MEMORY[0x1E0D82BB8];
          if (!v48)
          {
            v58 = 0;
            v59 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_101;
          }
        }
LABEL_97:
        if (!(v61 & 1 | (v7 != 0)))
          goto LABEL_98;
        continue;
    }
  }
}

void sub_189106C00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189106CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189106DD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189106EB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891073B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDataItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDDataItemReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDDataItemReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDDataItemReadAllFrom_initialTag;
  Specified = GEOPDDataItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPDRatingData readAll:](*(_QWORD *)(a1 + 56), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189108104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDataItemIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  int v31;
  char v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  int v41;
  char v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  int v50;
  int v51;
  char v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  int v60;
  int v61;
  char v63;
  unsigned int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  int v70;
  int v71;
  int v73;
  _BOOL8 v74;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_166:
    v74 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v74;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_166;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_166;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_168;
        v17 = 0;
        do
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
          {
            a1[*v4] = 1;
            goto LABEL_163;
          }
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if ((v21 & 0x80000000) == 0)
            break;
        }
        while (v17++ <= 8);
        goto LABEL_163;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_168;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_161;
            v23 = 0;
            v24 = 0;
            v25 = 0;
            while (1)
            {
              v26 = *v2;
              v27 = *(_QWORD *)&a1[v26];
              v28 = v27 + 1;
              if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
                break;
              v29 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v27);
              *(_QWORD *)&a1[v26] = v28;
              v25 |= (unint64_t)(v29 & 0x7F) << v23;
              if ((v29 & 0x80) == 0)
                goto LABEL_42;
              v23 += 7;
              v13 = v24++ >= 9;
              if (v13)
              {
                v25 = 0;
                v30 = a1[*v4];
                goto LABEL_44;
              }
            }
            a1[*v4] = 1;
LABEL_42:
            v30 = a1[*v4];
            if (a1[*v4])
              v25 = 0;
LABEL_44:
            v31 = v25 & 7;
            if (v30 || v31 == 4)
              goto LABEL_161;
            if ((v25 >> 3) == 2)
            {
              if (v31 != 2)
                goto LABEL_167;
LABEL_55:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_167;
              continue;
            }
            break;
          }
          if ((v25 >> 3) != 1)
            goto LABEL_55;
          if (v31 == 2 && PBReaderPlaceMark() && GEOPDRatingIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          break;
        }
LABEL_167:
        PBReaderRecallMark();
LABEL_168:
        PBReaderRecallMark();
        return 0;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_168;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_161;
            v33 = 0;
            v34 = 0;
            v35 = 0;
            while (1)
            {
              v36 = *v2;
              v37 = *(_QWORD *)&a1[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
                break;
              v39 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v37);
              *(_QWORD *)&a1[v36] = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if ((v39 & 0x80) == 0)
                goto LABEL_70;
              v33 += 7;
              v13 = v34++ >= 9;
              if (v13)
              {
                v35 = 0;
                v40 = a1[*v4];
                goto LABEL_72;
              }
            }
            a1[*v4] = 1;
LABEL_70:
            v40 = a1[*v4];
            if (a1[*v4])
              v35 = 0;
LABEL_72:
            v41 = v35 & 7;
            if (v40 || v41 == 4)
              goto LABEL_161;
            if ((v35 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_167;
              continue;
            }
            break;
          }
          if (v41 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_167;
        }
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_168;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_161;
            v43 = 0;
            v44 = 0;
            v45 = 0;
            while (1)
            {
              v46 = *v2;
              v47 = *(_QWORD *)&a1[v46];
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)&a1[*v3])
                break;
              v49 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v47);
              *(_QWORD *)&a1[v46] = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if ((v49 & 0x80) == 0)
                goto LABEL_96;
              v43 += 7;
              v13 = v44++ >= 9;
              if (v13)
              {
                v45 = 0;
                v50 = a1[*v4];
                goto LABEL_98;
              }
            }
            a1[*v4] = 1;
LABEL_96:
            v50 = a1[*v4];
            if (a1[*v4])
              v45 = 0;
LABEL_98:
            v51 = v45 & 7;
            if (v50 || v51 == 4)
              goto LABEL_161;
            if ((v45 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_167;
              continue;
            }
            break;
          }
          if (v51 == 2 && PBReaderPlaceMark() && GEOPDFactoidIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_167;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_168;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          while (2)
          {
            if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
              goto LABEL_161;
            v53 = 0;
            v54 = 0;
            v55 = 0;
            while (1)
            {
              v56 = *v2;
              v57 = *(_QWORD *)&a1[v56];
              v58 = v57 + 1;
              if (v57 == -1 || v58 > *(_QWORD *)&a1[*v3])
                break;
              v59 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v57);
              *(_QWORD *)&a1[v56] = v58;
              v55 |= (unint64_t)(v59 & 0x7F) << v53;
              if ((v59 & 0x80) == 0)
                goto LABEL_122;
              v53 += 7;
              v13 = v54++ >= 9;
              if (v13)
              {
                v55 = 0;
                v60 = a1[*v4];
                goto LABEL_124;
              }
            }
            a1[*v4] = 1;
LABEL_122:
            v60 = a1[*v4];
            if (a1[*v4])
              v55 = 0;
LABEL_124:
            v61 = v55 & 7;
            if (v60 || v61 == 4)
              goto LABEL_161;
            if ((v55 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_167;
              continue;
            }
            break;
          }
          if (v61 == 2 && PBReaderPlaceMark() && GEOPDBusinessHoursIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_167;
        }
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_168;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
        while (2)
        {
          if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v63 = 0;
            v64 = 0;
            v65 = 0;
            while (1)
            {
              v66 = *v2;
              v67 = *(_QWORD *)&a1[v66];
              v68 = v67 + 1;
              if (v67 == -1 || v68 > *(_QWORD *)&a1[*v3])
                break;
              v69 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v67);
              *(_QWORD *)&a1[v66] = v68;
              v65 |= (unint64_t)(v69 & 0x7F) << v63;
              if ((v69 & 0x80) == 0)
                goto LABEL_148;
              v63 += 7;
              v13 = v64++ >= 9;
              if (v13)
              {
                v65 = 0;
                v70 = a1[*v4];
                goto LABEL_150;
              }
            }
            a1[*v4] = 1;
LABEL_148:
            v70 = a1[*v4];
            if (a1[*v4])
              v65 = 0;
LABEL_150:
            v71 = v65 & 7;
            if (!v70 && v71 != 4)
            {
              if ((v65 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_167;
                continue;
              }
              if (v71 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_167;
            }
          }
          break;
        }
LABEL_161:
        v73 = a1[*v4];
        PBReaderRecallMark();
        if (v73)
          goto LABEL_168;
        PBReaderRecallMark();
LABEL_163:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_166;
        continue;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_168;
        goto LABEL_163;
    }
  }
}

void sub_189108BC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDDataItemIsDirty(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if (*(char *)(a1 + 80) < 0)
    return 1;
  v2 = *(unsigned __int8 *)(a1 + 80);
  if ((v2 & 0x40) != 0)
  {
    v3 = *(_QWORD *)(a1 + 56);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
      v4 = *(_BYTE *)(v3 + 52) & 0xE;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
      if (v4)
        return 1;
      v2 = *(unsigned __int8 *)(a1 + 80);
    }
  }
  if ((v2 & 0x1C) != 0)
    return 1;
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEOPDDataItemIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDDataItemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189108F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDateTimeRangeReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  void *v33;
  uint64_t v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_54;
          -[GEOPDDateTimeRange _reserveTimeRanges:](a1, 1uLL);
          if (!GEOPDLocalTimeRangeReadAllFrom(*(_QWORD *)(a1 + 16) + 12 * *(_QWORD *)(a1 + 24), (uint64_t)v3))
            goto LABEL_54;
          PBReaderRecallMark();
          ++*(_QWORD *)(a1 + 24);
        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            v26 = 0;
            v27 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 56) |= 1u;
            while (1)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
                break;
              v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
              *(_QWORD *)&v3[v28] = v30;
              v21 |= (unint64_t)(v31 & 0x7F) << v26;
              if ((v31 & 0x80) == 0)
                goto LABEL_48;
              v26 += 7;
              v15 = v27++ >= 9;
              if (v15)
              {
                v21 = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6])
              v21 = 0;
LABEL_50:
            v34 = 40;
            goto LABEL_51;
          }
          if ((_DWORD)v18 == 1)
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 56) |= 2u;
            while (1)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0)
                goto LABEL_44;
              v19 += 7;
              v15 = v20++ >= 9;
              if (v15)
              {
                v21 = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6])
              v21 = 0;
LABEL_46:
            v34 = 48;
LABEL_51:
            *(_QWORD *)(a1 + v34) = v21;
            continue;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v32 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v33 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v32;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_54;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18910A258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDateTimeRangeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDLocalTimeRangeIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v17 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDLocalTimeRangeIsValid(void *a1)
{
  _BOOL8 AllFrom;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = objc_msgSend(a1, "position");
  v7 = objc_msgSend(a1, "length");
  v5 = 0;
  v4 = 0;
  AllFrom = GEOPDLocalTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

uint64_t GEOPDLocalTimeRangeWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 8);
  if ((v2 & 1) != 0)
  {
    result = PBDataWriterWriteUint32Field();
    v2 = *(_BYTE *)(v1 + 8);
  }
  if ((v2 & 2) != 0)
    return PBDataWriterWriteUint32Field();
  return result;
}

void sub_18910AAF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDepartureReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const __int16 *v13;
  uint16x4_t v14;
  int16x4_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  GEOFormattedString *v67;
  void *v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  __int16 v77;
  uint64_t v78;
  int v79;
  int v80;
  __int16 v81;
  void *v82;
  int v84;
  char v85;
  char v86;
  char v87;
  char v88;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = (const __int16 *)(a1 + 92);
  v14 = (uint16x4_t)vld1_dup_s16(v13);
  v15 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v14, (uint16x4_t)0xFFFBFFFAFFF8FFF9), (int8x8_t)0x1000100010001);
  v15.i16[0] = vaddv_s16(v15);
  v16 = v15.i32[0];
  while (2)
  {
    v17 = 1;
    v18 = 1;
    v19 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v16;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v18 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v20 = v16 > 1;
        v21 = v20 | v12;
        v85 = v20 & ~(_BYTE)v12 | v8;
        v87 = v20 | v12 | v85;
        if ((((v20 | v12) | v9) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v88 = (v22 == 0) | v21;
        v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        v26 = (int *)MEMORY[0x1E0D82BB8];
        v86 = v20 | v12;
        break;
      default:
        ++v16;
LABEL_7:
        v17 = v8;
LABEL_8:
        v18 = v11;
        v19 = v12;
LABEL_10:
        ++v10;
        v8 = v17;
        v11 = v18;
        v12 = v19;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v24))
      goto LABEL_118;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v23;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v7))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v29 = 0;
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_118:
      v84 = 1;
      goto LABEL_119;
    }
    v37 = v29 >> 3;
    v38 = v21;
    if ((v88 & 1) == 0)
    {
      v39 = v22;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        *(_WORD *)(a1 + v25[178]) |= 1u;
        v43 = *v23;
        v44 = *(_QWORD *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v26) + v44);
          *(_QWORD *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v24) = 1;
          v45 = 0;
        }
        v78 = 24;
        goto LABEL_116;
      case 3:
        if (!v38)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + v25[178]) & 0x100) == 0)
        {
          PBReaderReadString();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = 64;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_140;
        v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        v77 = *(_WORD *)(a1 + 92) << 7;
        goto LABEL_110;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        *(_WORD *)(a1 + v25[178]) |= 2u;
        v51 = *v23;
        v52 = *(_QWORD *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v45 = *(_QWORD *)(*(_QWORD *)(v3 + *v26) + v52);
          *(_QWORD *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v24) = 1;
          v45 = 0;
        }
        v78 = 32;
LABEL_116:
        *(_QWORD *)(a1 + v78) = v45;
        goto LABEL_117;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v53 = 0;
        v54 = 0;
        v55 = 0;
        *(_WORD *)(a1 + v25[178]) |= 0x10u;
        while (2)
        {
          v56 = *v23;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              v34 = v54++ >= 9;
              if (v34)
              {
                v55 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v55 = 0;
LABEL_95:
        *(_BYTE *)(a1 + 88) = v55 != 0;
        goto LABEL_117;
      case 7:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v60 = 0;
        v61 = 0;
        v62 = 0;
        *(_WORD *)(a1 + v25[178]) |= 4u;
        while (2)
        {
          v63 = *v23;
          v64 = *(_QWORD *)(v3 + v63);
          v65 = v64 + 1;
          if (v64 == -1 || v65 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v66 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v64);
            *(_QWORD *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              v34 = v61++ >= 9;
              if (v34)
              {
                v62 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v62 = 0;
LABEL_99:
        *(_QWORD *)(a1 + 56) = v62;
        goto LABEL_117;
      case 8:
        if (!v38)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + v25[178]) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_140;
          v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
          v77 = *(_WORD *)(a1 + 92) << 8;
LABEL_110:
          v10 += v77 >> 15;
          v21 = v86;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_140;
        v67 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v67, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          v68 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v67;
LABEL_89:

          --v10;
          v21 = v86;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
LABEL_111:
          v7 = (int *)MEMORY[0x1E0D82BD8];
LABEL_117:
          if (!(v87 & 1 | (v10 != 0)))
            goto LABEL_118;
          continue;
        }

LABEL_140:
        v84 = 0;
        v21 = v86;
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
LABEL_119:
        if ((v85 & 1) != 0)
LABEL_120:
          *(_WORD *)(a1 + v25[178]) |= 0x20u;
        if (v21 & 1 | ((v84 & 1) == 0))
        {
          *(_WORD *)(a1 + v25[178]) |= 0x100u;
          *(_WORD *)(a1 + v25[178]) |= 0x80u;
          *(_WORD *)(a1 + v25[178]) |= 0x40u;
          goto LABEL_133;
        }
        if (v22)
        {
          while (2)
          {
            while (1)
            {
              v80 = *v22++;
              v79 = v80;
              if (v80 > 7)
                break;
              if (v79 == 3)
              {
                v81 = 256;
LABEL_131:
                *(_WORD *)(a1 + v25[178]) |= v81;
                continue;
              }
              if (!v79)
                goto LABEL_133;
            }
            if (v79 == 11)
            {
              v81 = 64;
            }
            else
            {
              if (v79 != 8)
                continue;
              v81 = 128;
            }
            goto LABEL_131;
          }
        }
LABEL_133:
        if (v84)
        {
          v3 = *(_BYTE *)(v3 + *v24) == 0;
          if ((v21 & 1) == 0)
            return v3;
LABEL_137:
          v82 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v21 & 1) != 0)
            goto LABEL_137;
        }
        return v3;
      case 10:
        if ((v9 & 1) == 0)
          goto LABEL_90;
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_WORD *)(a1 + v25[178]) |= 8u;
        while (2)
        {
          v72 = *v23;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v34 = v70++ >= 9;
              if (v34)
              {
                LODWORD(v71) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v71) = 0;
LABEL_103:
        *(_DWORD *)(a1 + 84) = v71;
        goto LABEL_117;
      case 11:
        if (!v38)
          goto LABEL_90;
        if ((*(_WORD *)(a1 + v25[178]) & 0x40) == 0)
        {
          PBReaderReadString();
          v49 = objc_claimAutoreleasedReturnValue();
          v50 = 40;
LABEL_88:
          v68 = *(void **)(a1 + v50);
          *(_QWORD *)(a1 + v50) = v49;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_140;
        v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        v77 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_110;
      default:
        if ((v85 & 1) == 0 || (*(_WORD *)(a1 + v25[178]) & 0x20) != 0)
        {
LABEL_90:
          v76 = PBReaderSkipValueWithTag();
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v21 = v86;
          if ((v76 & 1) == 0)
          {
            v84 = 0;
            goto LABEL_119;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v47 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v46;

          }
          v48 = PBUnknownFieldAdd();
          v21 = v86;
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v25 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
          v7 = (int *)MEMORY[0x1E0D82BD8];
          if (!v48)
          {
            v84 = 0;
            goto LABEL_120;
          }
        }
        goto LABEL_117;
    }
  }
}

void sub_18910B6AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18910B9A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18910C41C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDepartureReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDDepartureReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDDepartureReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDDepartureReadAllFrom_initialTag;
  Specified = GEOPDDepartureReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18910C5C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
        case 5u:
          if (v16 != 1)
            goto LABEL_60;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_54;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_54;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 3u:
          if (v16 == 2)
            goto LABEL_56;
          goto LABEL_60;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_57;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_53;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_57;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
            goto LABEL_60;
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_60;
          v32 = 0;
          break;
        case 0xBu:
          if (v16 == 2)
            goto LABEL_56;
          goto LABEL_60;
        default:
LABEL_56:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        v35 = v34 + 1;
        if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
          break;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v26 = v32++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_57;
      }
LABEL_53:
      v14 = *v4;
LABEL_54:
      a1[v14] = 1;
LABEL_57:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_18910CB6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDDepartureIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(unsigned __int16 *)(a1 + 92);
  if ((v2 & 0x300) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 92);
  }
  return (v2 >> 6) & 1;
}

void sub_18910CFF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18910D5BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureFrequencyReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  void *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  _BOOL8 v59;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 0x10u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_67;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_69;
              }
            }
            v3[*v6] = 1;
LABEL_67:
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_69:
            v58 = 32;
            goto LABEL_90;
          case 2u:
            v25 = 0;
            v26 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 8u;
            while (2)
            {
              v27 = *v4;
              v28 = *(_QWORD *)&v3[v27];
              v29 = v28 + 1;
              if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_73:
            v58 = 28;
            goto LABEL_90;
          case 3u:
            v31 = 0;
            v32 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 2u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_77;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_77:
            v58 = 20;
            goto LABEL_90;
          case 4u:
            v37 = 0;
            v38 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 4u;
            while (2)
            {
              v39 = *v4;
              v40 = *(_QWORD *)&v3[v39];
              v41 = v40 + 1;
              if (v40 == -1 || v41 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v42 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v40);
                *(_QWORD *)&v3[v39] = v41;
                v20 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  v15 = v38++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_81;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v20) = 0;
LABEL_81:
            v58 = 24;
            goto LABEL_90;
          case 5u:
            v43 = 0;
            v44 = 0;
            v45 = 0;
            *(_BYTE *)(a1 + 40) |= 0x20u;
            while (2)
            {
              v46 = *v4;
              v47 = *(_QWORD *)&v3[v46];
              v48 = v47 + 1;
              if (v47 == -1 || v48 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v49 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v47);
                *(_QWORD *)&v3[v46] = v48;
                v45 |= (unint64_t)(v49 & 0x7F) << v43;
                if (v49 < 0)
                {
                  v43 += 7;
                  v15 = v44++ >= 9;
                  if (v15)
                  {
                    v45 = 0;
                    goto LABEL_85;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v45 = 0;
LABEL_85:
            *(_BYTE *)(a1 + 36) = v45 != 0;
            continue;
          case 7u:
            v52 = 0;
            v53 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 40) |= 1u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v51 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v50;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_93;
            continue;
        }
        while (1)
        {
          v54 = *v4;
          v55 = *(_QWORD *)&v3[v54];
          v56 = v55 + 1;
          if (v55 == -1 || v56 > *(_QWORD *)&v3[*v5])
            break;
          v57 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v55);
          *(_QWORD *)&v3[v54] = v56;
          v20 |= (unint64_t)(v57 & 0x7F) << v52;
          if ((v57 & 0x80) == 0)
            goto LABEL_87;
          v52 += 7;
          v15 = v53++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_89;
          }
        }
        v3[*v6] = 1;
LABEL_87:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_89:
        v58 = 16;
LABEL_90:
        *(_DWORD *)(a1 + v58) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v59 = v3[*v6] == 0;
  }
  else
  {
LABEL_93:
    v59 = 0;
  }
  objc_sync_exit(v3);

  return v59;
}

void sub_18910E654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureFrequencyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  _BOOL8 v47;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            v19 = v18 + 1;
            if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v21 = v32++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_69;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v21 = v37++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_70;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_73;
          v42 = 0;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_73:
          v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        v43 = *v2;
        v44 = *(_QWORD *)&a1[v43];
        v45 = v44 + 1;
        if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
          break;
        v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
        *(_QWORD *)&a1[v43] = v45;
        if (v46 < 0)
        {
          v21 = v42++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}

id GEOPDTimeRangeJSONRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 1);
}

id GEOPDTimeRangeDictionaryRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
}

void GEOPDTimeRangeFromJSONRepresentation(void *a1, uint64_t a2)
{
  _GEOPDTimeRangeFromDictionaryRepresentation(a1, a2, 1);
}

void GEOPDTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  _GEOPDTimeRangeFromDictionaryRepresentation(a1, a2, 0);
}

BOOL GEOPDDeparturePredicateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDTimeRangeIsValid(void *a1)
{
  _BOOL8 AllFrom;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = objc_msgSend(a1, "position");
  v7 = objc_msgSend(a1, "length");
  v5 = 0;
  v4 = 0;
  AllFrom = GEOPDTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOPDTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

void sub_18910FCB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDDepartureSequenceReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  char v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  id v54;
  void *v55;
  int v56;
  GEOPDDeparture *v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  int *v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  char v78;
  uint64_t v79;
  __int16 v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  int v88;
  __int16 v89;
  void *v90;
  char v92;
  char v93;
  int v94;
  char v95;
  char v96;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 156);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 152));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 164) >> 12) & 1)
      + ((*(unsigned __int16 *)(a1 + 164) >> 10) & 1)
      + ((*(unsigned __int16 *)(a1 + 164) >> 3) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 164)), (uint16x4_t)0xFFF7FFFBFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 164) >> 11) & 1)+ ((*(_WORD *)(a1 + 164) >> 4) & 1)+ ((*(_WORD *)(a1 + 164) >> 6) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 6;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v16 | v11) | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v94 = 1;
        v21 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_165;
        v92 = v17;
        v95 = v18 | v17;
        v96 = (v20 == 0) | v18;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v93 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_163;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v19;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_163:
      v94 = 1;
      goto LABEL_164;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v96 & 1) == 0)
    {
      v37 = v20;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_122;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 164) |= 1u;
        while (1)
        {
          v44 = *v19;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
            break;
          v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v45);
          *(_QWORD *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0)
            goto LABEL_125;
          v41 += 7;
          v31 = v42++ >= 9;
          if (v31)
          {
            v43 = 0;
            goto LABEL_127;
          }
        }
        *(_BYTE *)(v3 + *v22) = 1;
LABEL_125:
        if (*(_BYTE *)(v3 + *v22))
          v43 = 0;
LABEL_127:
        v79 = 120;
        goto LABEL_136;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_122;
        v48 = 0;
        v49 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 164) |= 2u;
        while (2)
        {
          v50 = *v19;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v43 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v31 = v49++ >= 9;
              if (v31)
              {
                v43 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v43 = 0;
LABEL_131:
        v79 = 136;
        goto LABEL_136;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x100) != 0)
          goto LABEL_120;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v57 = objc_alloc_init(GEOPDDeparture);
        if (!GEOPDDepartureReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1))
          goto LABEL_187;
        PBReaderRecallMark();
        -[GEOPDDepartureSequence _addNoFlagsDeparture:](a1, v57);
        goto LABEL_71;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x80) != 0)
          goto LABEL_120;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v57 = objc_alloc_init(GEOPDDepartureFrequency);
        if (!GEOPDDepartureFrequencyReadAllFrom((uint64_t)v57, (void *)v3))
          goto LABEL_187;
        PBReaderRecallMark();
        -[GEOPDDepartureSequence _addNoFlagsDepartureFrequency:](a1, v57);
LABEL_71:

        goto LABEL_148;
      case 11:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x20) != 0)
        {
LABEL_120:
          v77 = PBReaderSkipValueWithTag();
          v18 = v93;
          v19 = (int *)MEMORY[0x1E0D82BF0];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if ((v77 & 1) == 0)
            goto LABEL_186;
          goto LABEL_150;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_188;
        -[GEOPDDepartureSequence _reserveOperatingHours:](a1, 1uLL);
        if (!GEOPDTimeRangeReadAllFrom(*(_QWORD *)(a1 + 48) + 12 * *(_QWORD *)(a1 + 56), v3))
          goto LABEL_188;
        PBReaderRecallMark();
        ++*(_QWORD *)(a1 + 56);
        goto LABEL_148;
      case 12:
        if (!v36)
          goto LABEL_122;
        if ((*(_WORD *)(a1 + 164) & 0x200) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 96;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_188;
        v80 = *(_WORD *)(a1 + 164) << 6;
        goto LABEL_147;
      case 13:
        if (!v36)
          goto LABEL_122;
        if ((*(_WORD *)(a1 + 164) & 0x800) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 112;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_188;
        v80 = 16 * *(_WORD *)(a1 + 164);
        goto LABEL_147;
      case 14:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x10) != 0)
          goto LABEL_122;
        if (v33 != 2)
        {
          v81 = 0;
          v82 = 0;
          v83 = 0;
          while (1)
          {
            v84 = *v19;
            v85 = *(_QWORD *)(v3 + v84);
            v86 = v85 + 1;
            if (v85 == -1 || v86 > *(_QWORD *)(v3 + *v6))
              break;
            v87 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v85);
            *(_QWORD *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              v31 = v82++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_162;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_162:
          PBRepeatedUInt64Add();
          goto LABEL_148;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_188;
        while (1)
        {
          v60 = (int *)MEMORY[0x1E0D82BF0];
          v61 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6)
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            break;
          }
          v62 = 0;
          v63 = 0;
          v64 = 0;
          v65 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v66 = *v60;
            v67 = *(_QWORD *)(v3 + v66);
            v68 = v67 + 1;
            if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
              break;
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v65) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v64 |= (unint64_t)(v69 & 0x7F) << v62;
            if (v69 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_97;
          }
          *(_BYTE *)(v3 + *v61) = 1;
LABEL_97:
          PBRepeatedUInt64Add();
        }
        PBReaderRecallMark();
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v18 = v93;
        goto LABEL_149;
      case 15:
        if (!v36)
          goto LABEL_122;
        if ((*(_WORD *)(a1 + 164) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_188;
          v80 = *(_WORD *)(a1 + 164) << 9;
LABEL_147:
          v7 += v80 >> 15;
          goto LABEL_148;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_188;
        v57 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v70 = *(void **)(a1 + 72);
          *(_QWORD *)(a1 + 72) = v57;
LABEL_118:

          --v7;
LABEL_148:
          v18 = v93;
          v19 = (int *)MEMORY[0x1E0D82BF0];
          v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_149:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_150:
          if (!(v95 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_163;
          continue;
        }
LABEL_187:

LABEL_188:
        v94 = 0;
        v18 = v93;
LABEL_164:
        v21 = v92;
LABEL_165:
        if ((v21 & 1) != 0)
LABEL_166:
          *(_WORD *)(a1 + 164) |= 8u;
        if (v18 & 1 | ((v94 & 1) == 0))
        {
          *(_WORD *)(a1 + 164) |= 0x100u;
          *(_WORD *)(a1 + 164) |= 0x80u;
          *(_WORD *)(a1 + 164) |= 0x20u;
          *(_WORD *)(a1 + 164) |= 0x200u;
          *(_WORD *)(a1 + 164) |= 0x800u;
          *(_WORD *)(a1 + 164) |= 0x10u;
          *(_WORD *)(a1 + 164) |= 0x40u;
          *(_WORD *)(a1 + 164) |= 0x400u;
          *(_WORD *)(a1 + 164) |= 0x1000u;
        }
        else if (v20)
        {
          while (1)
          {
            v88 = *v20++;
            v89 = 256;
            switch(v88)
            {
              case 0:
                goto LABEL_180;
              case 5:
                goto LABEL_179;
              case 6:
                v89 = 128;
                goto LABEL_179;
              case 11:
                v89 = 32;
                goto LABEL_179;
              case 12:
                v89 = 512;
                goto LABEL_179;
              case 13:
                v89 = 2048;
                goto LABEL_179;
              case 14:
                v89 = 16;
                goto LABEL_179;
              case 15:
                v89 = 64;
                goto LABEL_179;
              case 17:
                v89 = 1024;
                goto LABEL_179;
              case 18:
                v89 = 4096;
LABEL_179:
                *(_WORD *)(a1 + 164) |= v89;
                break;
              default:
                continue;
            }
          }
        }
LABEL_180:
        if (v94)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_184:
          v90 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_184;
        }
        return v3;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_122;
        v71 = 0;
        v72 = 0;
        v43 = 0;
        *(_WORD *)(a1 + 164) |= 4u;
        while (2)
        {
          v73 = *v19;
          v74 = *(_QWORD *)(v3 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v43 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              v31 = v72++ >= 9;
              if (v31)
              {
                v43 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v43 = 0;
LABEL_135:
        v79 = 144;
LABEL_136:
        *(_QWORD *)(a1 + v79) = v43;
        goto LABEL_150;
      case 17:
        if (!v36)
          goto LABEL_122;
        if ((*(_WORD *)(a1 + 164) & 0x400) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 104;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_188;
        v80 = 32 * *(_WORD *)(a1 + 164);
        goto LABEL_147;
      case 18:
        if (!v36)
          goto LABEL_122;
        if ((*(_WORD *)(a1 + 164) & 0x1000) == 0)
        {
          PBReaderReadString();
          v58 = objc_claimAutoreleasedReturnValue();
          v59 = 128;
LABEL_117:
          v70 = *(void **)(a1 + v59);
          *(_QWORD *)(a1 + v59) = v58;
          goto LABEL_118;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_188;
        v80 = 8 * *(_WORD *)(a1 + 164);
        goto LABEL_147;
      default:
        if ((v92 & 1) == 0 || (*(_WORD *)(a1 + 164) & 8) != 0)
        {
LABEL_122:
          v78 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v19 = (int *)MEMORY[0x1E0D82BF0];
          v18 = v93;
          if ((v78 & 1) == 0)
          {
LABEL_186:
            v94 = 0;
            goto LABEL_164;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v54 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v55 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v54;

          }
          v56 = PBUnknownFieldAdd();
          v18 = v93;
          v19 = (int *)MEMORY[0x1E0D82BF0];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v56)
          {
            v94 = 0;
            goto LABEL_166;
          }
        }
        goto LABEL_150;
    }
  }
}

void sub_189110B94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189110D7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189110FFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891110E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891111CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189111340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189111428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189111C4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189111D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDDepartureSequenceCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v2 = a1[11];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[10];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  return objc_msgSend(a1[9], "readAll:", 1);
}

uint64_t GEOPDDepartureSequenceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 156))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDDepartureSequenceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 156) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDDepartureSequenceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDDepartureSequenceReadAllFrom_initialTag;
  Specified = GEOPDDepartureSequenceReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDDepartureSequenceCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_189112B8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureSequenceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_70;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_70;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDepartureIsValid(a1))
            goto LABEL_89;
          goto LABEL_61;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDepartureFrequencyIsValid(a1))
            goto LABEL_89;
          goto LABEL_61;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1))
            goto LABEL_89;
          goto LABEL_61;
        case 0xCu:
          if (v15 == 2)
            goto LABEL_74;
          goto LABEL_89;
        case 0xDu:
          if (v15 == 2)
            goto LABEL_74;
          goto LABEL_89;
        case 0xEu:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_89:
              PBReaderRecallMark();
              return 0;
            }
LABEL_78:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v38 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v39 = *v2;
                v40 = *(_QWORD *)&a1[v39];
                v41 = v40 + 1;
                if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                  break;
                v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                *(_QWORD *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  v13 = v38++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_78;
              }
              a1[*v4] = 1;
            }
LABEL_61:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_89;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                break;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_75;
            }
LABEL_70:
            a1[*v4] = 1;
          }
LABEL_75:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_87;
          break;
        case 0xFu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1))
            goto LABEL_61;
          goto LABEL_89;
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_89;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_70;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_75;
          }
        case 0x11u:
          if (v15 == 2)
            goto LABEL_74;
          goto LABEL_89;
        case 0x12u:
          if (v15 == 2)
            goto LABEL_74;
          goto LABEL_89;
        default:
LABEL_74:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_75;
          goto LABEL_89;
      }
    }
  }
LABEL_87:
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189113588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891139D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189114258(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDepartureSequenceContainerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  void *v49;
  int v50;
  GEOPDTransitLabel *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  void *v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  char v70;
  void *v71;
  char v73;
  char v74;
  char v75;
  char v76;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOXPCReply__methodName;
  v13 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v7) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_102;
        v73 = v18;
        v75 = v19 | v18;
        v76 = (v21 == 0) | v19;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v74 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v8;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v22))
  {
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
      break;
    v35 = v26 >> 3;
    v36 = v19;
    if ((v76 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36 || (*(_BYTE *)(a1 + 80) & 4) != 0)
          goto LABEL_77;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_119;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]))
          {
            do
            {
              if (*(_BYTE *)(v3 + *v22))
                break;
              v41 = 0;
              v42 = 0;
              v43 = 0;
              while (1)
              {
                v44 = *v20;
                v45 = *(_QWORD *)(v3 + v44);
                v46 = v45 + 1;
                if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
                  break;
                v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v45);
                *(_QWORD *)(v3 + v44) = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  v31 = v42++ >= 9;
                  if (!v31)
                    continue;
                }
                goto LABEL_53;
              }
              *(_BYTE *)(v3 + *v22) = 1;
LABEL_53:
              PBRepeatedUInt64Add();
            }
            while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6));
          }
          PBReaderRecallMark();
        }
        else
        {
          v62 = 0;
          v63 = 0;
          v64 = 0;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          while (1)
          {
            v65 = *v20;
            v66 = *(_QWORD *)(v3 + v65);
            v67 = v66 + 1;
            if (v66 == -1 || v67 > *(_QWORD *)(v3 + *v6))
              break;
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v66);
            *(_QWORD *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              v31 = v63++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_97;
          }
          *(_BYTE *)(v3 + *v22) = 1;
LABEL_97:
          PBRepeatedUInt64Add();
        }
        v19 = v74;
        goto LABEL_78;
      case 2:
        if (!v36 || (*(_BYTE *)(a1 + 80) & 0x10) != 0)
          goto LABEL_77;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_119;
        v51 = objc_alloc_init(GEOPDTransitLabel);
        if (GEOPDTransitLabelReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDDepartureSequenceContainer _addNoFlagsLabel:](a1, v51);

LABEL_87:
          v19 = v74;
LABEL_88:
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_78;
        }

LABEL_119:
        LODWORD(v15) = 0;
        v12 = &OBJC_IVAR___GEOXPCReply__methodName;
        v19 = v74;
LABEL_101:
        v18 = v73;
LABEL_102:
        if ((v18 & 1) != 0)
LABEL_103:
          *(_BYTE *)(a1 + v12[907]) |= 2u;
        if (v19 & 1 | ((v15 & 1) == 0))
        {
          *(_BYTE *)(a1 + v12[907]) |= 4u;
          *(_BYTE *)(a1 + v12[907]) |= 0x10u;
          *(_BYTE *)(a1 + v12[907]) |= 8u;
        }
        else if (v21)
        {
          while (1)
          {
            v69 = *v21++;
            v70 = 4;
            switch(v69)
            {
              case 0:
                goto LABEL_111;
              case 1:
                goto LABEL_110;
              case 2:
                v70 = 16;
                goto LABEL_110;
              case 4:
                v70 = 8;
LABEL_110:
                *(_BYTE *)(a1 + v12[907]) |= v70;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if ((_DWORD)v15)
        {
          v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
          if ((v19 & 1) == 0)
            return v3;
LABEL_115:
          v71 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v19 & 1) != 0)
            goto LABEL_115;
        }
        return v3;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_77;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        *(_BYTE *)(a1 + 80) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        while (2)
        {
          v55 = *v20;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v22) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v31 = v53++ >= 9;
              if (v31)
              {
                v54 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v22))
          v54 = 0;
LABEL_84:
        *(_BYTE *)(a1 + 76) = v54 != 0;
        goto LABEL_78;
      case 4:
        if (!v36)
          goto LABEL_77;
        if ((*(_BYTE *)(a1 + 80) & 8) == 0)
        {
          PBReaderReadString();
          v59 = objc_claimAutoreleasedReturnValue();
          v60 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v59;

          v19 = v74;
          --v8;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_119;
        v8 += *(unsigned __int8 *)(a1 + 80) << 28 >> 31;
        goto LABEL_87;
      default:
        if ((v73 & 1) == 0 || (*(_BYTE *)(a1 + 80) & 2) != 0)
        {
LABEL_77:
          v61 = PBReaderSkipValueWithTag();
          v19 = v74;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v61 & 1) == 0)
          {
            LODWORD(v15) = 0;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v49 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v48;

          }
          v50 = PBUnknownFieldAdd();
          v19 = v74;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v50)
          {
            LODWORD(v15) = 0;
            v12 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_103;
          }
        }
LABEL_78:
        if (!(v75 & 1 | (v8 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_99;
        break;
    }
  }
LABEL_99:
  LODWORD(v15) = 1;
LABEL_100:
  v12 = &OBJC_IVAR___GEOXPCReply__methodName;
  goto LABEL_101;
}

void sub_189114C0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189114DF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1891152D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDDepartureSequenceContainerCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 56);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDDepartureSequenceContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDDepartureSequenceContainerReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDDepartureSequenceContainerReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDDepartureSequenceContainerReadAllFrom_initialTag;
  Specified = GEOPDDepartureSequenceContainerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDDepartureSequenceContainerCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189115628(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitLabelIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_39;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 5)
        break;
      if ((_DWORD)v17 != 4)
      {
        if ((_DWORD)v17 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_41;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8)
              continue;
            goto LABEL_38;
          }
          a1[*v4] = 1;
          goto LABEL_38;
        }
        goto LABEL_35;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if (v15 != 2)
      goto LABEL_41;
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_41;
    goto LABEL_38;
  }
LABEL_39:
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_189115B08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189115D9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189116120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDirectionIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDResolvedItem *v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  int v57;
  int *v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v59 = v15;
        v60 = v16 | v15;
        if (((v16 | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (v17 == 0) | v16;
        v62 = v16;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_78;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      v57 = 1;
      goto LABEL_79;
    }
    v31 = v23 >> 3;
    v32 = v62;
    if ((v61 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 3)
    {
      if ((v7 & 1) != 0)
      {
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_BYTE *)(a1 + 56) |= 1u;
        while (1)
        {
          v42 = *v18;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
            break;
          v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v43);
          *(_QWORD *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0)
            goto LABEL_68;
          v39 += 7;
          v28 = v40++ >= 9;
          if (v28)
          {
            LODWORD(v41) = 0;
            goto LABEL_70;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_68:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v41) = 0;
LABEL_70:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_77;
      }
      goto LABEL_65;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (v32)
      {
        if ((*(_BYTE *)(a1 + 56) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_99;
          v37 = objc_alloc_init(GEOPDResolvedItem);
          if (!GEOPDResolvedItemReadAllFrom((uint64_t)v37, (void *)v3))
            goto LABEL_98;
          PBReaderRecallMark();
          v38 = 32;
LABEL_58:
          v46 = *(void **)(a1 + v38);
          *(_QWORD *)(a1 + v38) = v37;

          --v8;
LABEL_76:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_99;
        v51 = 16 * *(_BYTE *)(a1 + 56);
LABEL_75:
        v8 += v51 >> 7;
        goto LABEL_76;
      }
    }
    else if ((v59 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v48 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v47;

      }
      v49 = PBUnknownFieldAdd();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v49)
      {
        v57 = 0;
        v58 = &OBJC_IVAR___GEOXPCReply__methodName;
        goto LABEL_81;
      }
      goto LABEL_77;
    }
LABEL_65:
    v50 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v50 & 1) == 0)
    {
      v57 = 0;
LABEL_79:
      v58 = &OBJC_IVAR___GEOXPCReply__methodName;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v60 & 1 | (v8 != 0)))
      goto LABEL_78;
  }
  if (!v32)
    goto LABEL_65;
  if ((*(_BYTE *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_99;
    v51 = 32 * *(_BYTE *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_99;
  v37 = objc_alloc_init(GEOPDResolvedItem);
  if (GEOPDResolvedItemReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v38 = 24;
    goto LABEL_58;
  }
LABEL_98:

LABEL_99:
  v57 = 0;
  v58 = &OBJC_IVAR___GEOXPCReply__methodName;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
  if ((v59 & 1) == 0)
    goto LABEL_82;
LABEL_81:
  *(_BYTE *)(a1 + v58[913]) |= 2u;
LABEL_82:
  if (v62 || (v57 & 1) == 0)
  {
    *(_BYTE *)(a1 + v58[913]) |= 8u;
    *(_BYTE *)(a1 + v58[913]) |= 4u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v53 = *v17++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 4;
          goto LABEL_91;
        }
        if (!v52)
          goto LABEL_92;
      }
      v54 = 8;
LABEL_91:
      *(_BYTE *)(a1 + v58[913]) |= v54;
      continue;
    }
  }
LABEL_92:
  if (v57)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v62)
  {
    v55 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18911687C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189116D24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDirectionIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDDirectionIntentReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDDirectionIntentReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDDirectionIntentReadAllFrom_initialTag;
  Specified = GEOPDDirectionIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189117214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDirectionIntentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  _BOOL8 v24;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_38;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          v21 = v20 + 1;
          if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
            break;
          v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
          *(_QWORD *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if ((_DWORD)v17 == 2 || (_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchRelatedCategoryIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_1891175F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDirectionIntentIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18911781C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189117DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDotPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  GEOPDMapsIdentifier *v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  void *v45;
  uint64_t v46;
  char v47;
  char v48;
  int v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFCFFFEFFFFLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 2;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v55 = v17;
        v19 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v20 = 0;
        else
          v20 = a3;
        v58 = v18;
        v56 = v19;
        v57 = (v20 == 0) | v18;
        v21 = (int *)MEMORY[0x1E0D82BF0];
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v21) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v22))
      goto LABEL_78;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v21;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      if (v25++ >= 9)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_78:
      v53 = 1;
      goto LABEL_79;
    }
    v34 = v26 >> 3;
    v35 = v58;
    if ((v57 & 1) == 0)
    {
      v36 = v20;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_97;
          v40 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3))
          {
            PBReaderRecallMark();
            v41 = 32;
            goto LABEL_60;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v48 = 32 * *(_BYTE *)(a1 + 68);
        goto LABEL_75;
      case 2:
        if (!v35)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v48 = *(_BYTE *)(a1 + 68) << 6;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v40 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v40, (void *)v3))
          goto LABEL_96;
        PBReaderRecallMark();
        v41 = 24;
        goto LABEL_60;
      case 3:
        if (!v35)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_97;
          v48 = 8 * *(_BYTE *)(a1 + 68);
LABEL_75:
          v7 += v48 >> 7;
LABEL_76:
          v22 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_97;
        v40 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v40, (void *)v3))
        {
          PBReaderRecallMark();
          v41 = 48;
LABEL_60:
          v45 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;
LABEL_64:

          --v7;
          goto LABEL_76;
        }
LABEL_96:

LABEL_97:
        v53 = 0;
        v54 = &OBJC_IVAR___GEOXPCReply__methodName;
        v22 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
        if ((v55 & 1) != 0)
LABEL_81:
          *(_BYTE *)(a1 + v54[920]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(_BYTE *)(a1 + v54[920]) |= 4u;
          *(_BYTE *)(a1 + v54[920]) |= 2u;
          *(_BYTE *)(a1 + v54[920]) |= 0x10u;
          *(_BYTE *)(a1 + v54[920]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            v49 = *v20++;
            v50 = 4;
            switch(v49)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_89;
              case 2:
                v50 = 2;
                goto LABEL_89;
              case 3:
                v50 = 16;
                goto LABEL_89;
              case 4:
                v50 = 8;
LABEL_89:
                *(_BYTE *)(a1 + v54[920]) |= v50;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v53)
          v3 = *(_BYTE *)(v3 + *v22) == 0;
        else
          v3 = 0;
        if (v58)
        {
          v51 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v35)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v46 = objc_claimAutoreleasedReturnValue();
          v45 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v46;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_97;
        v48 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_75;
      default:
        if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 1) != 0)
        {
LABEL_65:
          v47 = PBReaderSkipValueWithTag();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if ((v47 & 1) == 0)
          {
            v53 = 0;
LABEL_79:
            v54 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v22 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v53 = 0;
            v54 = &OBJC_IVAR___GEOXPCReply__methodName;
            goto LABEL_81;
          }
        }
LABEL_77:
        if (!(v56 & 1 | (v7 != 0)))
          goto LABEL_78;
        continue;
    }
  }
}

void sub_189118560(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189118648(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189118730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189118B60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDotPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDDotPlaceReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDDotPlaceReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDDotPlaceReadAllFrom_initialTag;
  Specified = GEOPDDotPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1891190E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDotPlaceIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
            goto LABEL_30;
          goto LABEL_35;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_35;
          goto LABEL_30;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_35;
LABEL_30:
          PBReaderRecallMark();
          goto LABEL_33;
        case 4u:
          if (v15 == 2)
            goto LABEL_32;
          goto LABEL_35;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_35:
            PBReaderRecallMark();
            return 0;
          }
LABEL_33:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_34;
          break;
      }
    }
  }
LABEL_34:
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189119504(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDotPlaceIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189119790(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDETAReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  GEORouteTrafficDetail *v66;
  void *v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  int v76;
  int v77;
  __int16 v78;
  void *v79;
  int v81;
  int *v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int16 *)(a1 + 72) >> 7) & 1)
      + ((*(unsigned __int16 *)(a1 + 72) >> 6) & 1)
      + ((*(unsigned __int16 *)(a1 + 72) >> 5) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 | v11;
        v83 = v16 & ~(_BYTE)v11 | v9;
        v86 = v16 | v11 | v83;
        if ((((v16 | v11) | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v87 = (v18 == 0) | v17;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        v84 = v7;
        v85 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_122;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      v29 = v23++ >= 9;
      if (v29)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_122:
      v81 = 1;
      goto LABEL_123;
    }
    v32 = v24 >> 3;
    v33 = v17;
    if ((v87 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_95;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 72) |= 8u;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
            break;
          v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v42);
          *(_QWORD *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0)
            goto LABEL_98;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_100;
          }
        }
        *(_BYTE *)(v3 + *v20) = 1;
LABEL_98:
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_100:
        v75 = 64;
        goto LABEL_117;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_95;
        v48 = 0;
        v49 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 72) |= 1u;
        while (2)
        {
          v50 = *v19;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v40 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_104:
        v75 = 52;
        goto LABEL_117;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_95;
        v54 = 0;
        v55 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 72) |= 0x10u;
        while (2)
        {
          v56 = *v19;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v40 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v29 = v55++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_108:
        v75 = 68;
        goto LABEL_117;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_95;
        v60 = 0;
        v61 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 72) |= 2u;
        while (2)
        {
          v62 = *v19;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v40 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v29 = v61++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_112:
        v75 = 56;
        goto LABEL_117;
      case 5:
        if (!v33)
          goto LABEL_95;
        if ((*(_WORD *)(a1 + 72) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_142;
          v8 += *(unsigned __int16 *)(a1 + 72) << 24 >> 31;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v66 = objc_alloc_init(GEORouteTrafficDetail);
        if (GEORouteTrafficDetailReadAllFrom((uint64_t)v66, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v67 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v66;

          --v8;
LABEL_120:
          v7 = v84;
          v17 = v85;
          v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_121:
          if (!(v86 & 1 | (v8 != 0)))
            goto LABEL_122;
          continue;
        }
LABEL_141:

LABEL_142:
        v81 = 0;
        v17 = v85;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_123:
        v82 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
        if ((v83 & 1) != 0)
LABEL_124:
          *(_WORD *)(a1 + v82[214]) |= 0x20u;
        if (v17 & 1 | ((v81 & 1) == 0))
        {
          *(_WORD *)(a1 + v82[214]) |= 0x80u;
          *(_WORD *)(a1 + v82[214]) |= 0x40u;
          goto LABEL_135;
        }
        if (v18)
        {
          while (2)
          {
            while (1)
            {
              v77 = *v18++;
              v76 = v77;
              if (v77 == 5)
                break;
              if (v76 == 7)
              {
                v78 = 64;
                goto LABEL_134;
              }
              if (!v76)
                goto LABEL_135;
            }
            v78 = 128;
LABEL_134:
            *(_WORD *)(a1 + v82[214]) |= v78;
            continue;
          }
        }
LABEL_135:
        if (v81)
        {
          v3 = *(_BYTE *)(v3 + *v20) == 0;
          if ((v17 & 1) == 0)
            return v3;
LABEL_139:
          v79 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
            goto LABEL_139;
        }
        return v3;
      case 6:
        if ((v7 & 1) == 0)
          goto LABEL_95;
        v68 = 0;
        v69 = 0;
        v40 = 0;
        *(_WORD *)(a1 + 72) |= 4u;
        while (2)
        {
          v70 = *v19;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v20) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v40 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              v29 = v69++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v20))
          LODWORD(v40) = 0;
LABEL_116:
        v75 = 60;
LABEL_117:
        *(_DWORD *)(a1 + v75) = v40;
        goto LABEL_121;
      case 7:
        if (!v33 || (*(_WORD *)(a1 + 72) & 0x40) != 0)
          goto LABEL_95;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v66 = objc_alloc_init(GEOETARouteIncident);
        if (!GEOETARouteIncidentReadAllFrom((uint64_t)v66, (void *)v3, v10 & 1))
          goto LABEL_141;
        PBReaderRecallMark();
        -[GEOPDETA _addNoFlagsEtaRouteIncident:](a1, v66);

        goto LABEL_120;
      default:
        if ((v83 & 1) == 0 || (*(_WORD *)(a1 + 72) & 0x20) != 0)
        {
LABEL_95:
          v74 = PBReaderSkipValueWithTag();
          v7 = v84;
          v17 = v85;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v74 & 1) == 0)
          {
            v81 = 0;
            goto LABEL_123;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v46 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v45;

          }
          v47 = PBUnknownFieldAdd();
          v7 = v84;
          v17 = v85;
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if (!v47)
          {
            v81 = 0;
            v82 = &OBJC_IVAR___GEOPDButtonModuleConfiguration__unknownFields;
            goto LABEL_124;
          }
        }
        goto LABEL_121;
    }
  }
}

void sub_18911A4B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911AB70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911AC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDETACallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 24);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDETAReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t v6;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDETAReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDETAReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDETAReadAllFrom_initialTag;
  v6 = GEOPDETAReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDETACallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v6;
}

void sub_18911AFB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911B2C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911B5E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18911BAA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDETAFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  unint64_t v41;
  int *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  id v51;
  void *v52;
  int v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  GEOAutomobileOptions *v61;
  uint64_t v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  BOOL v79;
  uint64_t v80;
  __int16 v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  int v89;
  __int16 v90;
  void *v91;
  char v93;
  char v94;
  int v95;
  char v96;
  char v97;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 92);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 88));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 104)), (uint16x4_t)0xFFF8FFF9FFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 104) >> 9) & 1)+ ((*(_WORD *)(a1 + 104) >> 6) & 1)+ ((*(_WORD *)(a1 + 104) >> 3) & 1));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v95 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = v16 & ~(_BYTE)v11 | v9;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_154;
        v93 = v17;
        v96 = v18 | v17;
        v97 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v94 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_152;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_152:
      v95 = 1;
      goto LABEL_153;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v97 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x10) != 0)
          goto LABEL_111;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_173;
          v41 = *(_QWORD *)(v3 + *v20);
          v6 = (int *)MEMORY[0x1E0D82BD8];
          while (1)
          {
            v42 = (int *)MEMORY[0x1E0D82BC8];
            if (v41 >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
            {
              PBReaderRecallMark();
              v21 = (int *)MEMORY[0x1E0D82BC8];
              v18 = v94;
              goto LABEL_138;
            }
            v43 = 0;
            v44 = 0;
            v45 = 0;
            v46 = (int *)MEMORY[0x1E0D82BB8];
            while (1)
            {
              v47 = *v20;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
                break;
              v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v46) + v48);
              *(_QWORD *)(v3 + v47) = v49;
              v45 |= (unint64_t)(v50 & 0x7F) << v43;
              if (v50 < 0)
              {
                v43 += 7;
                v31 = v44++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_54;
            }
            *(_BYTE *)(v3 + *v42) = 1;
LABEL_54:
            PBRepeatedInt32Add();
            v41 = *(_QWORD *)(v3 + *v20);
          }
        }
        v82 = 0;
        v83 = 0;
        v84 = 0;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (1)
        {
          v85 = *v20;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
            break;
          v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v86);
          *(_QWORD *)(v3 + v85) = v87;
          v84 |= (unint64_t)(v88 & 0x7F) << v82;
          if (v88 < 0)
          {
            v82 += 7;
            v31 = v83++ >= 9;
            if (!v31)
              continue;
          }
          goto LABEL_151;
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_151:
        PBRepeatedInt32Add();
        v18 = v94;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_138;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v54 = 0;
        v55 = 0;
        v56 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v57 = *v20;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              v31 = v55++ >= 9;
              if (v31)
              {
                v56 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v56 = 0;
LABEL_116:
        v79 = v56 != 0;
        v80 = 101;
        goto LABEL_125;
      case 3:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 104) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_173;
          v81 = *(_WORD *)(a1 + 104) << 10;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_173;
        v61 = objc_alloc_init(GEOAutomobileOptions);
        if (!GEOAutomobileOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1))
          goto LABEL_172;
        PBReaderRecallMark();
        v62 = 48;
        goto LABEL_102;
      case 4:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_173;
          v81 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_173;
        v61 = objc_alloc_init(GEOTransitOptions);
        if (!GEOTransitOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1))
          goto LABEL_172;
        PBReaderRecallMark();
        v62 = 72;
        goto LABEL_102;
      case 5:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 104) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_173;
          v81 = *(_WORD *)(a1 + 104) << 6;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_173;
        v61 = objc_alloc_init(GEOWalkingOptions);
        if (!GEOWalkingOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1))
          goto LABEL_172;
        PBReaderRecallMark();
        v62 = 80;
        goto LABEL_102;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_WORD *)(a1 + 104) |= 4u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v66 = *v20;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v31 = v64++ >= 9;
              if (v31)
              {
                v65 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v65 = 0;
LABEL_120:
        v79 = v65 != 0;
        v80 = 102;
        goto LABEL_125;
      case 7:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_173;
          v81 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_173;
        v61 = objc_alloc_init(GEOCyclingOptions);
        if (!GEOCyclingOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1))
          goto LABEL_172;
        PBReaderRecallMark();
        v62 = 64;
        goto LABEL_102;
      case 8:
        if (!v36)
          goto LABEL_111;
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_173;
          v81 = *(_WORD *)(a1 + 104) << 9;
LABEL_136:
          v7 += v81 >> 15;
LABEL_137:
          v18 = v94;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
LABEL_138:
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_139:
          if (!(v96 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_152;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_173;
        v61 = objc_alloc_init(GEOClientCapabilities);
        if (GEOClientCapabilitiesReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v62 = 56;
LABEL_102:
          v70 = *(void **)(a1 + v62);
          *(_QWORD *)(a1 + v62) = v61;

          --v7;
          goto LABEL_137;
        }
LABEL_172:

LABEL_173:
        v95 = 0;
        v18 = v94;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_153:
        v22 = v93;
LABEL_154:
        if ((v22 & 1) != 0)
LABEL_155:
          *(_WORD *)(a1 + 104) |= 8u;
        if (v18 & 1 | ((v95 & 1) == 0))
        {
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            v89 = *v19++;
            v90 = 16;
            switch(v89)
            {
              case 0:
                goto LABEL_166;
              case 1:
                goto LABEL_165;
              case 3:
                v90 = 32;
                goto LABEL_165;
              case 4:
                v90 = 256;
                goto LABEL_165;
              case 5:
                v90 = 512;
                goto LABEL_165;
              case 7:
                v90 = 128;
                goto LABEL_165;
              case 8:
                v90 = 64;
LABEL_165:
                *(_WORD *)(a1 + 104) |= v90;
                break;
              default:
                continue;
            }
          }
        }
LABEL_166:
        if (v95)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_170:
          v91 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_170;
        }
        return v3;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_111;
        v71 = 0;
        v72 = 0;
        v73 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        v6 = (int *)MEMORY[0x1E0D82BD8];
        while (2)
        {
          v74 = *v20;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              v31 = v72++ >= 9;
              if (v31)
              {
                v73 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v73 = 0;
LABEL_124:
        v79 = v73 != 0;
        v80 = 100;
LABEL_125:
        *(_BYTE *)(a1 + v80) = v79;
        goto LABEL_139;
      default:
        if ((v93 & 1) == 0 || (*(_WORD *)(a1 + 104) & 8) != 0)
        {
LABEL_111:
          v78 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BB8];
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v94;
          v6 = (int *)MEMORY[0x1E0D82BD8];
          if ((v78 & 1) == 0)
          {
            v95 = 0;
            goto LABEL_153;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v52 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v51;

          }
          v53 = PBUnknownFieldAdd();
          v18 = v94;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v6 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v53)
          {
            v95 = 0;
            goto LABEL_155;
          }
        }
        goto LABEL_139;
    }
  }
}

